// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package announcementsservice

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Announcement Subscription resource in Oracle Cloud Infrastructure Announcements Service service.
//
// Creates a new announcement subscription.
//
// This call is subject to an Announcements limit that applies to the total number of requests across all read or write operations. Announcements might throttle this call to reject an otherwise valid request when the total rate of operations exceeds 20 requests per second for a given user. The service might also throttle this call to reject an otherwise valid request when the total rate of operations exceeds 100 requests per second for a given tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/AnnouncementsService"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AnnouncementsService.NewAnnouncementSubscription(ctx, "testAnnouncementSubscription", &AnnouncementsService.AnnouncementSubscriptionArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				DisplayName:   pulumi.Any(_var.Announcement_subscription_display_name),
//				OnsTopicId:    pulumi.Any(oci_ons_notification_topic.Test_notification_topic.Id),
//				DefinedTags: pulumi.AnyMap{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				Description: pulumi.Any(_var.Announcement_subscription_description),
//				FilterGroups: &announcementsservice.AnnouncementSubscriptionFilterGroupsArgs{
//					Filters: announcementsservice.AnnouncementSubscriptionFilterGroupsFilterArray{
//						&announcementsservice.AnnouncementSubscriptionFilterGroupsFilterArgs{
//							Type:  pulumi.Any(_var.Announcement_subscription_filter_groups_filters_type),
//							Value: pulumi.Any(_var.Announcement_subscription_filter_groups_filters_value),
//						},
//					},
//				},
//				FreeformTags: pulumi.AnyMap{
//					"bar-key": pulumi.Any("value"),
//				},
//				PreferredLanguage: pulumi.Any(_var.Announcement_subscription_preferred_language),
//				PreferredTimeZone: pulumi.Any(_var.Announcement_subscription_preferred_time_zone),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AnnouncementSubscriptions can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:AnnouncementsService/announcementSubscription:AnnouncementSubscription test_announcement_subscription "id"
//
// ```
type AnnouncementSubscription struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the announcement subscription.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A description of the announcement subscription. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// A list of filter groups for the announcement subscription. A filter group combines one or more filters that the Announcements service applies to announcements for matching purposes.
	FilterGroups AnnouncementSubscriptionFilterGroupsOutput `pulumi:"filterGroups"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription. The caller of the operation needs the ONS_TOPIC_PUBLISH permission for the targeted Notifications service topic. For more information about Notifications permissions, see [Details for Notifications](https://docs.cloud.oracle.com/iaas/Content/Identity/policyreference/notificationpolicyreference.htm).
	OnsTopicId pulumi.StringOutput `pulumi:"onsTopicId"`
	// (Updatable) (For announcement subscriptions with Oracle Fusion Applications configured as the service only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the language tag format (x-obmcs-human-language). For example fr-FR.
	PreferredLanguage pulumi.StringOutput `pulumi:"preferredLanguage"`
	// (Updatable) The time zone that the user prefers for announcement time stamps. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example America/Los_Angeles.
	PreferredTimeZone pulumi.StringOutput `pulumi:"preferredTimeZone"`
	// The current lifecycle state of the announcement subscription.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewAnnouncementSubscription registers a new resource with the given unique name, arguments, and options.
func NewAnnouncementSubscription(ctx *pulumi.Context,
	name string, args *AnnouncementSubscriptionArgs, opts ...pulumi.ResourceOption) (*AnnouncementSubscription, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.OnsTopicId == nil {
		return nil, errors.New("invalid value for required argument 'OnsTopicId'")
	}
	var resource AnnouncementSubscription
	err := ctx.RegisterResource("oci:AnnouncementsService/announcementSubscription:AnnouncementSubscription", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnnouncementSubscription gets an existing AnnouncementSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnnouncementSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnnouncementSubscriptionState, opts ...pulumi.ResourceOption) (*AnnouncementSubscription, error) {
	var resource AnnouncementSubscription
	err := ctx.ReadResource("oci:AnnouncementsService/announcementSubscription:AnnouncementSubscription", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnnouncementSubscription resources.
type announcementSubscriptionState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the announcement subscription.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A description of the announcement subscription. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// A list of filter groups for the announcement subscription. A filter group combines one or more filters that the Announcements service applies to announcements for matching purposes.
	FilterGroups *AnnouncementSubscriptionFilterGroups `pulumi:"filterGroups"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription. The caller of the operation needs the ONS_TOPIC_PUBLISH permission for the targeted Notifications service topic. For more information about Notifications permissions, see [Details for Notifications](https://docs.cloud.oracle.com/iaas/Content/Identity/policyreference/notificationpolicyreference.htm).
	OnsTopicId *string `pulumi:"onsTopicId"`
	// (Updatable) (For announcement subscriptions with Oracle Fusion Applications configured as the service only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the language tag format (x-obmcs-human-language). For example fr-FR.
	PreferredLanguage *string `pulumi:"preferredLanguage"`
	// (Updatable) The time zone that the user prefers for announcement time stamps. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example America/Los_Angeles.
	PreferredTimeZone *string `pulumi:"preferredTimeZone"`
	// The current lifecycle state of the announcement subscription.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type AnnouncementSubscriptionState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the announcement subscription.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A description of the announcement subscription. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// A list of filter groups for the announcement subscription. A filter group combines one or more filters that the Announcements service applies to announcements for matching purposes.
	FilterGroups AnnouncementSubscriptionFilterGroupsPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription. The caller of the operation needs the ONS_TOPIC_PUBLISH permission for the targeted Notifications service topic. For more information about Notifications permissions, see [Details for Notifications](https://docs.cloud.oracle.com/iaas/Content/Identity/policyreference/notificationpolicyreference.htm).
	OnsTopicId pulumi.StringPtrInput
	// (Updatable) (For announcement subscriptions with Oracle Fusion Applications configured as the service only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the language tag format (x-obmcs-human-language). For example fr-FR.
	PreferredLanguage pulumi.StringPtrInput
	// (Updatable) The time zone that the user prefers for announcement time stamps. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example America/Los_Angeles.
	PreferredTimeZone pulumi.StringPtrInput
	// The current lifecycle state of the announcement subscription.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeCreated pulumi.StringPtrInput
	// The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeUpdated pulumi.StringPtrInput
}

func (AnnouncementSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*announcementSubscriptionState)(nil)).Elem()
}

type announcementSubscriptionArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the announcement subscription.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A description of the announcement subscription. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// A list of filter groups for the announcement subscription. A filter group combines one or more filters that the Announcements service applies to announcements for matching purposes.
	FilterGroups *AnnouncementSubscriptionFilterGroups `pulumi:"filterGroups"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription. The caller of the operation needs the ONS_TOPIC_PUBLISH permission for the targeted Notifications service topic. For more information about Notifications permissions, see [Details for Notifications](https://docs.cloud.oracle.com/iaas/Content/Identity/policyreference/notificationpolicyreference.htm).
	OnsTopicId string `pulumi:"onsTopicId"`
	// (Updatable) (For announcement subscriptions with Oracle Fusion Applications configured as the service only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the language tag format (x-obmcs-human-language). For example fr-FR.
	PreferredLanguage *string `pulumi:"preferredLanguage"`
	// (Updatable) The time zone that the user prefers for announcement time stamps. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example America/Los_Angeles.
	PreferredTimeZone *string `pulumi:"preferredTimeZone"`
}

// The set of arguments for constructing a AnnouncementSubscription resource.
type AnnouncementSubscriptionArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the announcement subscription.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A description of the announcement subscription. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// A list of filter groups for the announcement subscription. A filter group combines one or more filters that the Announcements service applies to announcements for matching purposes.
	FilterGroups AnnouncementSubscriptionFilterGroupsPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription. The caller of the operation needs the ONS_TOPIC_PUBLISH permission for the targeted Notifications service topic. For more information about Notifications permissions, see [Details for Notifications](https://docs.cloud.oracle.com/iaas/Content/Identity/policyreference/notificationpolicyreference.htm).
	OnsTopicId pulumi.StringInput
	// (Updatable) (For announcement subscriptions with Oracle Fusion Applications configured as the service only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the language tag format (x-obmcs-human-language). For example fr-FR.
	PreferredLanguage pulumi.StringPtrInput
	// (Updatable) The time zone that the user prefers for announcement time stamps. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example America/Los_Angeles.
	PreferredTimeZone pulumi.StringPtrInput
}

func (AnnouncementSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*announcementSubscriptionArgs)(nil)).Elem()
}

type AnnouncementSubscriptionInput interface {
	pulumi.Input

	ToAnnouncementSubscriptionOutput() AnnouncementSubscriptionOutput
	ToAnnouncementSubscriptionOutputWithContext(ctx context.Context) AnnouncementSubscriptionOutput
}

func (*AnnouncementSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnouncementSubscription)(nil)).Elem()
}

func (i *AnnouncementSubscription) ToAnnouncementSubscriptionOutput() AnnouncementSubscriptionOutput {
	return i.ToAnnouncementSubscriptionOutputWithContext(context.Background())
}

func (i *AnnouncementSubscription) ToAnnouncementSubscriptionOutputWithContext(ctx context.Context) AnnouncementSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnnouncementSubscriptionOutput)
}

// AnnouncementSubscriptionArrayInput is an input type that accepts AnnouncementSubscriptionArray and AnnouncementSubscriptionArrayOutput values.
// You can construct a concrete instance of `AnnouncementSubscriptionArrayInput` via:
//
//	AnnouncementSubscriptionArray{ AnnouncementSubscriptionArgs{...} }
type AnnouncementSubscriptionArrayInput interface {
	pulumi.Input

	ToAnnouncementSubscriptionArrayOutput() AnnouncementSubscriptionArrayOutput
	ToAnnouncementSubscriptionArrayOutputWithContext(context.Context) AnnouncementSubscriptionArrayOutput
}

type AnnouncementSubscriptionArray []AnnouncementSubscriptionInput

func (AnnouncementSubscriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnnouncementSubscription)(nil)).Elem()
}

func (i AnnouncementSubscriptionArray) ToAnnouncementSubscriptionArrayOutput() AnnouncementSubscriptionArrayOutput {
	return i.ToAnnouncementSubscriptionArrayOutputWithContext(context.Background())
}

func (i AnnouncementSubscriptionArray) ToAnnouncementSubscriptionArrayOutputWithContext(ctx context.Context) AnnouncementSubscriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnnouncementSubscriptionArrayOutput)
}

// AnnouncementSubscriptionMapInput is an input type that accepts AnnouncementSubscriptionMap and AnnouncementSubscriptionMapOutput values.
// You can construct a concrete instance of `AnnouncementSubscriptionMapInput` via:
//
//	AnnouncementSubscriptionMap{ "key": AnnouncementSubscriptionArgs{...} }
type AnnouncementSubscriptionMapInput interface {
	pulumi.Input

	ToAnnouncementSubscriptionMapOutput() AnnouncementSubscriptionMapOutput
	ToAnnouncementSubscriptionMapOutputWithContext(context.Context) AnnouncementSubscriptionMapOutput
}

type AnnouncementSubscriptionMap map[string]AnnouncementSubscriptionInput

func (AnnouncementSubscriptionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnnouncementSubscription)(nil)).Elem()
}

func (i AnnouncementSubscriptionMap) ToAnnouncementSubscriptionMapOutput() AnnouncementSubscriptionMapOutput {
	return i.ToAnnouncementSubscriptionMapOutputWithContext(context.Background())
}

func (i AnnouncementSubscriptionMap) ToAnnouncementSubscriptionMapOutputWithContext(ctx context.Context) AnnouncementSubscriptionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnnouncementSubscriptionMapOutput)
}

type AnnouncementSubscriptionOutput struct{ *pulumi.OutputState }

func (AnnouncementSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnouncementSubscription)(nil)).Elem()
}

func (o AnnouncementSubscriptionOutput) ToAnnouncementSubscriptionOutput() AnnouncementSubscriptionOutput {
	return o
}

func (o AnnouncementSubscriptionOutput) ToAnnouncementSubscriptionOutputWithContext(ctx context.Context) AnnouncementSubscriptionOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the announcement subscription.
func (o AnnouncementSubscriptionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o AnnouncementSubscriptionOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A description of the announcement subscription. Avoid entering confidential information.
func (o AnnouncementSubscriptionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o AnnouncementSubscriptionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// A list of filter groups for the announcement subscription. A filter group combines one or more filters that the Announcements service applies to announcements for matching purposes.
func (o AnnouncementSubscriptionOutput) FilterGroups() AnnouncementSubscriptionFilterGroupsOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) AnnouncementSubscriptionFilterGroupsOutput { return v.FilterGroups }).(AnnouncementSubscriptionFilterGroupsOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o AnnouncementSubscriptionOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
func (o AnnouncementSubscriptionOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription. The caller of the operation needs the ONS_TOPIC_PUBLISH permission for the targeted Notifications service topic. For more information about Notifications permissions, see [Details for Notifications](https://docs.cloud.oracle.com/iaas/Content/Identity/policyreference/notificationpolicyreference.htm).
func (o AnnouncementSubscriptionOutput) OnsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.StringOutput { return v.OnsTopicId }).(pulumi.StringOutput)
}

// (Updatable) (For announcement subscriptions with Oracle Fusion Applications configured as the service only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the language tag format (x-obmcs-human-language). For example fr-FR.
func (o AnnouncementSubscriptionOutput) PreferredLanguage() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.StringOutput { return v.PreferredLanguage }).(pulumi.StringOutput)
}

// (Updatable) The time zone that the user prefers for announcement time stamps. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example America/Los_Angeles.
func (o AnnouncementSubscriptionOutput) PreferredTimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.StringOutput { return v.PreferredTimeZone }).(pulumi.StringOutput)
}

// The current lifecycle state of the announcement subscription.
func (o AnnouncementSubscriptionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o AnnouncementSubscriptionOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
func (o AnnouncementSubscriptionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
func (o AnnouncementSubscriptionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscription) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type AnnouncementSubscriptionArrayOutput struct{ *pulumi.OutputState }

func (AnnouncementSubscriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnnouncementSubscription)(nil)).Elem()
}

func (o AnnouncementSubscriptionArrayOutput) ToAnnouncementSubscriptionArrayOutput() AnnouncementSubscriptionArrayOutput {
	return o
}

func (o AnnouncementSubscriptionArrayOutput) ToAnnouncementSubscriptionArrayOutputWithContext(ctx context.Context) AnnouncementSubscriptionArrayOutput {
	return o
}

func (o AnnouncementSubscriptionArrayOutput) Index(i pulumi.IntInput) AnnouncementSubscriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AnnouncementSubscription {
		return vs[0].([]*AnnouncementSubscription)[vs[1].(int)]
	}).(AnnouncementSubscriptionOutput)
}

type AnnouncementSubscriptionMapOutput struct{ *pulumi.OutputState }

func (AnnouncementSubscriptionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnnouncementSubscription)(nil)).Elem()
}

func (o AnnouncementSubscriptionMapOutput) ToAnnouncementSubscriptionMapOutput() AnnouncementSubscriptionMapOutput {
	return o
}

func (o AnnouncementSubscriptionMapOutput) ToAnnouncementSubscriptionMapOutputWithContext(ctx context.Context) AnnouncementSubscriptionMapOutput {
	return o
}

func (o AnnouncementSubscriptionMapOutput) MapIndex(k pulumi.StringInput) AnnouncementSubscriptionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AnnouncementSubscription {
		return vs[0].(map[string]*AnnouncementSubscription)[vs[1].(string)]
	}).(AnnouncementSubscriptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnnouncementSubscriptionInput)(nil)).Elem(), &AnnouncementSubscription{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnnouncementSubscriptionArrayInput)(nil)).Elem(), AnnouncementSubscriptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnnouncementSubscriptionMapInput)(nil)).Elem(), AnnouncementSubscriptionMap{})
	pulumi.RegisterOutputType(AnnouncementSubscriptionOutput{})
	pulumi.RegisterOutputType(AnnouncementSubscriptionArrayOutput{})
	pulumi.RegisterOutputType(AnnouncementSubscriptionMapOutput{})
}
