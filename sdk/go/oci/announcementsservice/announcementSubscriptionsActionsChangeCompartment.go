// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package announcementsservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Announcement Subscriptions Actions Change Compartment resource in Oracle Cloud Infrastructure Announcements Service service.
//
// Moves the specified announcement subscription from one compartment to another compartment. When provided, If-Match is checked against ETag values of the resource.
//
// This call is subject to an Announcements limit that applies to the total number of requests across all read or write operations. Announcements might throttle this call to reject an otherwise valid request when the total rate of operations exceeds 20 requests per second for a given user. The service might also throttle this call to reject an otherwise valid request when the total rate of operations exceeds 100 requests per second for a given tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/AnnouncementsService"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AnnouncementsService.NewAnnouncementSubscriptionsActionsChangeCompartment(ctx, "testAnnouncementSubscriptionsActionsChangeCompartment", &AnnouncementsService.AnnouncementSubscriptionsActionsChangeCompartmentArgs{
//				AnnouncementSubscriptionId: pulumi.Any(oci_announcements_service_announcement_subscription.Test_announcement_subscription.Id),
//				CompartmentId:              pulumi.Any(_var.Compartment_id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AnnouncementSubscriptionsActionsChangeCompartment can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:AnnouncementsService/announcementSubscriptionsActionsChangeCompartment:AnnouncementSubscriptionsActionsChangeCompartment test_announcement_subscriptions_actions_change_compartment "id"
//
// ```
type AnnouncementSubscriptionsActionsChangeCompartment struct {
	pulumi.CustomResourceState

	// The OCID of the announcement subscription.
	AnnouncementSubscriptionId pulumi.StringOutput `pulumi:"announcementSubscriptionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment into which you want to move the announcement subscription.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
}

// NewAnnouncementSubscriptionsActionsChangeCompartment registers a new resource with the given unique name, arguments, and options.
func NewAnnouncementSubscriptionsActionsChangeCompartment(ctx *pulumi.Context,
	name string, args *AnnouncementSubscriptionsActionsChangeCompartmentArgs, opts ...pulumi.ResourceOption) (*AnnouncementSubscriptionsActionsChangeCompartment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AnnouncementSubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'AnnouncementSubscriptionId'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AnnouncementSubscriptionsActionsChangeCompartment
	err := ctx.RegisterResource("oci:AnnouncementsService/announcementSubscriptionsActionsChangeCompartment:AnnouncementSubscriptionsActionsChangeCompartment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnnouncementSubscriptionsActionsChangeCompartment gets an existing AnnouncementSubscriptionsActionsChangeCompartment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnnouncementSubscriptionsActionsChangeCompartment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnnouncementSubscriptionsActionsChangeCompartmentState, opts ...pulumi.ResourceOption) (*AnnouncementSubscriptionsActionsChangeCompartment, error) {
	var resource AnnouncementSubscriptionsActionsChangeCompartment
	err := ctx.ReadResource("oci:AnnouncementsService/announcementSubscriptionsActionsChangeCompartment:AnnouncementSubscriptionsActionsChangeCompartment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnnouncementSubscriptionsActionsChangeCompartment resources.
type announcementSubscriptionsActionsChangeCompartmentState struct {
	// The OCID of the announcement subscription.
	AnnouncementSubscriptionId *string `pulumi:"announcementSubscriptionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment into which you want to move the announcement subscription.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CompartmentId *string `pulumi:"compartmentId"`
}

type AnnouncementSubscriptionsActionsChangeCompartmentState struct {
	// The OCID of the announcement subscription.
	AnnouncementSubscriptionId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment into which you want to move the announcement subscription.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CompartmentId pulumi.StringPtrInput
}

func (AnnouncementSubscriptionsActionsChangeCompartmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*announcementSubscriptionsActionsChangeCompartmentState)(nil)).Elem()
}

type announcementSubscriptionsActionsChangeCompartmentArgs struct {
	// The OCID of the announcement subscription.
	AnnouncementSubscriptionId string `pulumi:"announcementSubscriptionId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment into which you want to move the announcement subscription.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CompartmentId string `pulumi:"compartmentId"`
}

// The set of arguments for constructing a AnnouncementSubscriptionsActionsChangeCompartment resource.
type AnnouncementSubscriptionsActionsChangeCompartmentArgs struct {
	// The OCID of the announcement subscription.
	AnnouncementSubscriptionId pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment into which you want to move the announcement subscription.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CompartmentId pulumi.StringInput
}

func (AnnouncementSubscriptionsActionsChangeCompartmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*announcementSubscriptionsActionsChangeCompartmentArgs)(nil)).Elem()
}

type AnnouncementSubscriptionsActionsChangeCompartmentInput interface {
	pulumi.Input

	ToAnnouncementSubscriptionsActionsChangeCompartmentOutput() AnnouncementSubscriptionsActionsChangeCompartmentOutput
	ToAnnouncementSubscriptionsActionsChangeCompartmentOutputWithContext(ctx context.Context) AnnouncementSubscriptionsActionsChangeCompartmentOutput
}

func (*AnnouncementSubscriptionsActionsChangeCompartment) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnouncementSubscriptionsActionsChangeCompartment)(nil)).Elem()
}

func (i *AnnouncementSubscriptionsActionsChangeCompartment) ToAnnouncementSubscriptionsActionsChangeCompartmentOutput() AnnouncementSubscriptionsActionsChangeCompartmentOutput {
	return i.ToAnnouncementSubscriptionsActionsChangeCompartmentOutputWithContext(context.Background())
}

func (i *AnnouncementSubscriptionsActionsChangeCompartment) ToAnnouncementSubscriptionsActionsChangeCompartmentOutputWithContext(ctx context.Context) AnnouncementSubscriptionsActionsChangeCompartmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnnouncementSubscriptionsActionsChangeCompartmentOutput)
}

// AnnouncementSubscriptionsActionsChangeCompartmentArrayInput is an input type that accepts AnnouncementSubscriptionsActionsChangeCompartmentArray and AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput values.
// You can construct a concrete instance of `AnnouncementSubscriptionsActionsChangeCompartmentArrayInput` via:
//
//	AnnouncementSubscriptionsActionsChangeCompartmentArray{ AnnouncementSubscriptionsActionsChangeCompartmentArgs{...} }
type AnnouncementSubscriptionsActionsChangeCompartmentArrayInput interface {
	pulumi.Input

	ToAnnouncementSubscriptionsActionsChangeCompartmentArrayOutput() AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput
	ToAnnouncementSubscriptionsActionsChangeCompartmentArrayOutputWithContext(context.Context) AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput
}

type AnnouncementSubscriptionsActionsChangeCompartmentArray []AnnouncementSubscriptionsActionsChangeCompartmentInput

func (AnnouncementSubscriptionsActionsChangeCompartmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnnouncementSubscriptionsActionsChangeCompartment)(nil)).Elem()
}

func (i AnnouncementSubscriptionsActionsChangeCompartmentArray) ToAnnouncementSubscriptionsActionsChangeCompartmentArrayOutput() AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput {
	return i.ToAnnouncementSubscriptionsActionsChangeCompartmentArrayOutputWithContext(context.Background())
}

func (i AnnouncementSubscriptionsActionsChangeCompartmentArray) ToAnnouncementSubscriptionsActionsChangeCompartmentArrayOutputWithContext(ctx context.Context) AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput)
}

// AnnouncementSubscriptionsActionsChangeCompartmentMapInput is an input type that accepts AnnouncementSubscriptionsActionsChangeCompartmentMap and AnnouncementSubscriptionsActionsChangeCompartmentMapOutput values.
// You can construct a concrete instance of `AnnouncementSubscriptionsActionsChangeCompartmentMapInput` via:
//
//	AnnouncementSubscriptionsActionsChangeCompartmentMap{ "key": AnnouncementSubscriptionsActionsChangeCompartmentArgs{...} }
type AnnouncementSubscriptionsActionsChangeCompartmentMapInput interface {
	pulumi.Input

	ToAnnouncementSubscriptionsActionsChangeCompartmentMapOutput() AnnouncementSubscriptionsActionsChangeCompartmentMapOutput
	ToAnnouncementSubscriptionsActionsChangeCompartmentMapOutputWithContext(context.Context) AnnouncementSubscriptionsActionsChangeCompartmentMapOutput
}

type AnnouncementSubscriptionsActionsChangeCompartmentMap map[string]AnnouncementSubscriptionsActionsChangeCompartmentInput

func (AnnouncementSubscriptionsActionsChangeCompartmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnnouncementSubscriptionsActionsChangeCompartment)(nil)).Elem()
}

func (i AnnouncementSubscriptionsActionsChangeCompartmentMap) ToAnnouncementSubscriptionsActionsChangeCompartmentMapOutput() AnnouncementSubscriptionsActionsChangeCompartmentMapOutput {
	return i.ToAnnouncementSubscriptionsActionsChangeCompartmentMapOutputWithContext(context.Background())
}

func (i AnnouncementSubscriptionsActionsChangeCompartmentMap) ToAnnouncementSubscriptionsActionsChangeCompartmentMapOutputWithContext(ctx context.Context) AnnouncementSubscriptionsActionsChangeCompartmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnnouncementSubscriptionsActionsChangeCompartmentMapOutput)
}

type AnnouncementSubscriptionsActionsChangeCompartmentOutput struct{ *pulumi.OutputState }

func (AnnouncementSubscriptionsActionsChangeCompartmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnnouncementSubscriptionsActionsChangeCompartment)(nil)).Elem()
}

func (o AnnouncementSubscriptionsActionsChangeCompartmentOutput) ToAnnouncementSubscriptionsActionsChangeCompartmentOutput() AnnouncementSubscriptionsActionsChangeCompartmentOutput {
	return o
}

func (o AnnouncementSubscriptionsActionsChangeCompartmentOutput) ToAnnouncementSubscriptionsActionsChangeCompartmentOutputWithContext(ctx context.Context) AnnouncementSubscriptionsActionsChangeCompartmentOutput {
	return o
}

// The OCID of the announcement subscription.
func (o AnnouncementSubscriptionsActionsChangeCompartmentOutput) AnnouncementSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscriptionsActionsChangeCompartment) pulumi.StringOutput {
		return v.AnnouncementSubscriptionId
	}).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment into which you want to move the announcement subscription.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o AnnouncementSubscriptionsActionsChangeCompartmentOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AnnouncementSubscriptionsActionsChangeCompartment) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

type AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput struct{ *pulumi.OutputState }

func (AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnnouncementSubscriptionsActionsChangeCompartment)(nil)).Elem()
}

func (o AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput) ToAnnouncementSubscriptionsActionsChangeCompartmentArrayOutput() AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput {
	return o
}

func (o AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput) ToAnnouncementSubscriptionsActionsChangeCompartmentArrayOutputWithContext(ctx context.Context) AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput {
	return o
}

func (o AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput) Index(i pulumi.IntInput) AnnouncementSubscriptionsActionsChangeCompartmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AnnouncementSubscriptionsActionsChangeCompartment {
		return vs[0].([]*AnnouncementSubscriptionsActionsChangeCompartment)[vs[1].(int)]
	}).(AnnouncementSubscriptionsActionsChangeCompartmentOutput)
}

type AnnouncementSubscriptionsActionsChangeCompartmentMapOutput struct{ *pulumi.OutputState }

func (AnnouncementSubscriptionsActionsChangeCompartmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnnouncementSubscriptionsActionsChangeCompartment)(nil)).Elem()
}

func (o AnnouncementSubscriptionsActionsChangeCompartmentMapOutput) ToAnnouncementSubscriptionsActionsChangeCompartmentMapOutput() AnnouncementSubscriptionsActionsChangeCompartmentMapOutput {
	return o
}

func (o AnnouncementSubscriptionsActionsChangeCompartmentMapOutput) ToAnnouncementSubscriptionsActionsChangeCompartmentMapOutputWithContext(ctx context.Context) AnnouncementSubscriptionsActionsChangeCompartmentMapOutput {
	return o
}

func (o AnnouncementSubscriptionsActionsChangeCompartmentMapOutput) MapIndex(k pulumi.StringInput) AnnouncementSubscriptionsActionsChangeCompartmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AnnouncementSubscriptionsActionsChangeCompartment {
		return vs[0].(map[string]*AnnouncementSubscriptionsActionsChangeCompartment)[vs[1].(string)]
	}).(AnnouncementSubscriptionsActionsChangeCompartmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnnouncementSubscriptionsActionsChangeCompartmentInput)(nil)).Elem(), &AnnouncementSubscriptionsActionsChangeCompartment{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnnouncementSubscriptionsActionsChangeCompartmentArrayInput)(nil)).Elem(), AnnouncementSubscriptionsActionsChangeCompartmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnnouncementSubscriptionsActionsChangeCompartmentMapInput)(nil)).Elem(), AnnouncementSubscriptionsActionsChangeCompartmentMap{})
	pulumi.RegisterOutputType(AnnouncementSubscriptionsActionsChangeCompartmentOutput{})
	pulumi.RegisterOutputType(AnnouncementSubscriptionsActionsChangeCompartmentArrayOutput{})
	pulumi.RegisterOutputType(AnnouncementSubscriptionsActionsChangeCompartmentMapOutput{})
}
