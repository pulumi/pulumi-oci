// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package announcementsservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Announcement Subscription resource in Oracle Cloud Infrastructure Announcements Service service.
//
// Gets the specified announcement subscription.
//
// This call is subject to an Announcements limit that applies to the total number of requests across all read or write operations. Announcements might throttle this call to reject an otherwise valid request when the total rate of operations exceeds 20 requests per second for a given user. The service might also throttle this call to reject an otherwise valid request when the total rate of operations exceeds 100 requests per second for a given tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/announcementsservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := announcementsservice.GetAnnouncementSubscription(ctx, &announcementsservice.GetAnnouncementSubscriptionArgs{
//				AnnouncementSubscriptionId: testAnnouncementSubscriptionOciAnnouncementsServiceAnnouncementSubscription.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAnnouncementSubscription(ctx *pulumi.Context, args *LookupAnnouncementSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupAnnouncementSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAnnouncementSubscriptionResult
	err := ctx.Invoke("oci:AnnouncementsService/getAnnouncementSubscription:getAnnouncementSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAnnouncementSubscription.
type LookupAnnouncementSubscriptionArgs struct {
	// The OCID of the announcement subscription.
	AnnouncementSubscriptionId string `pulumi:"announcementSubscriptionId"`
}

// A collection of values returned by getAnnouncementSubscription.
type LookupAnnouncementSubscriptionResult struct {
	AnnouncementSubscriptionId string `pulumi:"announcementSubscriptionId"`
	// The OCID of the compartment that contains the announcement subscription.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A description of the announcement subscription. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// A list of filter groups for the announcement subscription. A filter group is a combination of multiple filters applied to announcements for matching purposes.
	FilterGroups []GetAnnouncementSubscriptionFilterGroup `pulumi:"filterGroups"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the announcement subscription.
	Id string `pulumi:"id"`
	// A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription.
	OnsTopicId string `pulumi:"onsTopicId"`
	// (For announcement subscriptions with SaaS configured as the platform type or Oracle Fusion Applications as the service, or both, only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the x-obmcs-human-language format. For example fr-FR.
	PreferredLanguage string `pulumi:"preferredLanguage"`
	// The time zone in which the user prefers to receive announcements. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
	PreferredTimeZone string `pulumi:"preferredTimeZone"`
	// The current lifecycle state of the announcement subscription.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupAnnouncementSubscriptionOutput(ctx *pulumi.Context, args LookupAnnouncementSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupAnnouncementSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAnnouncementSubscriptionResultOutput, error) {
			args := v.(LookupAnnouncementSubscriptionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:AnnouncementsService/getAnnouncementSubscription:getAnnouncementSubscription", args, LookupAnnouncementSubscriptionResultOutput{}, options).(LookupAnnouncementSubscriptionResultOutput), nil
		}).(LookupAnnouncementSubscriptionResultOutput)
}

// A collection of arguments for invoking getAnnouncementSubscription.
type LookupAnnouncementSubscriptionOutputArgs struct {
	// The OCID of the announcement subscription.
	AnnouncementSubscriptionId pulumi.StringInput `pulumi:"announcementSubscriptionId"`
}

func (LookupAnnouncementSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAnnouncementSubscriptionArgs)(nil)).Elem()
}

// A collection of values returned by getAnnouncementSubscription.
type LookupAnnouncementSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupAnnouncementSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAnnouncementSubscriptionResult)(nil)).Elem()
}

func (o LookupAnnouncementSubscriptionResultOutput) ToLookupAnnouncementSubscriptionResultOutput() LookupAnnouncementSubscriptionResultOutput {
	return o
}

func (o LookupAnnouncementSubscriptionResultOutput) ToLookupAnnouncementSubscriptionResultOutputWithContext(ctx context.Context) LookupAnnouncementSubscriptionResultOutput {
	return o
}

func (o LookupAnnouncementSubscriptionResultOutput) AnnouncementSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.AnnouncementSubscriptionId }).(pulumi.StringOutput)
}

// The OCID of the compartment that contains the announcement subscription.
func (o LookupAnnouncementSubscriptionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupAnnouncementSubscriptionResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A description of the announcement subscription. Avoid entering confidential information.
func (o LookupAnnouncementSubscriptionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupAnnouncementSubscriptionResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A list of filter groups for the announcement subscription. A filter group is a combination of multiple filters applied to announcements for matching purposes.
func (o LookupAnnouncementSubscriptionResultOutput) FilterGroups() GetAnnouncementSubscriptionFilterGroupArrayOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) []GetAnnouncementSubscriptionFilterGroup {
		return v.FilterGroups
	}).(GetAnnouncementSubscriptionFilterGroupArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupAnnouncementSubscriptionResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the announcement subscription.
func (o LookupAnnouncementSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
func (o LookupAnnouncementSubscriptionResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription.
func (o LookupAnnouncementSubscriptionResultOutput) OnsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.OnsTopicId }).(pulumi.StringOutput)
}

// (For announcement subscriptions with SaaS configured as the platform type or Oracle Fusion Applications as the service, or both, only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the x-obmcs-human-language format. For example fr-FR.
func (o LookupAnnouncementSubscriptionResultOutput) PreferredLanguage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.PreferredLanguage }).(pulumi.StringOutput)
}

// The time zone in which the user prefers to receive announcements. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
func (o LookupAnnouncementSubscriptionResultOutput) PreferredTimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.PreferredTimeZone }).(pulumi.StringOutput)
}

// The current lifecycle state of the announcement subscription.
func (o LookupAnnouncementSubscriptionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupAnnouncementSubscriptionResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
func (o LookupAnnouncementSubscriptionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
func (o LookupAnnouncementSubscriptionResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAnnouncementSubscriptionResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAnnouncementSubscriptionResultOutput{})
}
