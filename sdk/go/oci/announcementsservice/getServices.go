// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package announcementsservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Services in Oracle Cloud Infrastructure.
//
// # List all OCI services
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/AnnouncementsService"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := AnnouncementsService.GetServices(ctx, &announcementsservice.GetServicesArgs{
//				CompartmentId:    compartmentId,
//				CommsManagerName: pulumi.StringRef(serviceCommsManagerName),
//				PlatformType:     pulumi.StringRef(servicePlatformType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetServices(ctx *pulumi.Context, args *GetServicesArgs, opts ...pulumi.InvokeOption) (*GetServicesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServicesResult
	err := ctx.Invoke("oci:AnnouncementsService/getServices:getServices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServices.
type GetServicesArgs struct {
	// Filter by comms manager name
	CommsManagerName *string `pulumi:"commsManagerName"`
	// The OCID of the root compartment/tenancy.
	CompartmentId string              `pulumi:"compartmentId"`
	Filters       []GetServicesFilter `pulumi:"filters"`
	// A filter to return only services underlying a specific platform.
	PlatformType *string `pulumi:"platformType"`
}

// A collection of values returned by getServices.
type GetServicesResult struct {
	// Name of the comms manager team that manages Notifications to this service.
	CommsManagerName *string             `pulumi:"commsManagerName"`
	CompartmentId    string              `pulumi:"compartmentId"`
	Filters          []GetServicesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The platform type this service object is related to.
	PlatformType *string `pulumi:"platformType"`
	// The list of services_collection.
	ServicesCollections []GetServicesServicesCollection `pulumi:"servicesCollections"`
}

func GetServicesOutput(ctx *pulumi.Context, args GetServicesOutputArgs, opts ...pulumi.InvokeOption) GetServicesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServicesResult, error) {
			args := v.(GetServicesArgs)
			r, err := GetServices(ctx, &args, opts...)
			var s GetServicesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetServicesResultOutput)
}

// A collection of arguments for invoking getServices.
type GetServicesOutputArgs struct {
	// Filter by comms manager name
	CommsManagerName pulumi.StringPtrInput `pulumi:"commsManagerName"`
	// The OCID of the root compartment/tenancy.
	CompartmentId pulumi.StringInput          `pulumi:"compartmentId"`
	Filters       GetServicesFilterArrayInput `pulumi:"filters"`
	// A filter to return only services underlying a specific platform.
	PlatformType pulumi.StringPtrInput `pulumi:"platformType"`
}

func (GetServicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicesArgs)(nil)).Elem()
}

// A collection of values returned by getServices.
type GetServicesResultOutput struct{ *pulumi.OutputState }

func (GetServicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServicesResult)(nil)).Elem()
}

func (o GetServicesResultOutput) ToGetServicesResultOutput() GetServicesResultOutput {
	return o
}

func (o GetServicesResultOutput) ToGetServicesResultOutputWithContext(ctx context.Context) GetServicesResultOutput {
	return o
}

// Name of the comms manager team that manages Notifications to this service.
func (o GetServicesResultOutput) CommsManagerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicesResult) *string { return v.CommsManagerName }).(pulumi.StringPtrOutput)
}

func (o GetServicesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetServicesResultOutput) Filters() GetServicesFilterArrayOutput {
	return o.ApplyT(func(v GetServicesResult) []GetServicesFilter { return v.Filters }).(GetServicesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServicesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServicesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The platform type this service object is related to.
func (o GetServicesResultOutput) PlatformType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServicesResult) *string { return v.PlatformType }).(pulumi.StringPtrOutput)
}

// The list of services_collection.
func (o GetServicesResultOutput) ServicesCollections() GetServicesServicesCollectionArrayOutput {
	return o.ApplyT(func(v GetServicesResult) []GetServicesServicesCollection { return v.ServicesCollections }).(GetServicesServicesCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServicesResultOutput{})
}
