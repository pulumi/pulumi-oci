// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Usage Plans in Oracle Cloud Infrastructure API Gateway service.
//
// Returns a list of usage plans.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/apigateway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigateway.GetUsagePlans(ctx, &apigateway.GetUsagePlansArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(usagePlanDisplayName),
//				State:         pulumi.StringRef(usagePlanState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUsagePlans(ctx *pulumi.Context, args *GetUsagePlansArgs, opts ...pulumi.InvokeOption) (*GetUsagePlansResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUsagePlansResult
	err := ctx.Invoke("oci:ApiGateway/getUsagePlans:getUsagePlans", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsagePlans.
type GetUsagePlansArgs struct {
	// The ocid of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string               `pulumi:"displayName"`
	Filters     []GetUsagePlansFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state. Example: `ACTIVE`
	State *string `pulumi:"state"`
}

// A collection of values returned by getUsagePlans.
type GetUsagePlansResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string               `pulumi:"displayName"`
	Filters     []GetUsagePlansFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the usage plan.
	State *string `pulumi:"state"`
	// The list of usage_plan_collection.
	UsagePlanCollections []GetUsagePlansUsagePlanCollection `pulumi:"usagePlanCollections"`
}

func GetUsagePlansOutput(ctx *pulumi.Context, args GetUsagePlansOutputArgs, opts ...pulumi.InvokeOption) GetUsagePlansResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUsagePlansResultOutput, error) {
			args := v.(GetUsagePlansArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ApiGateway/getUsagePlans:getUsagePlans", args, GetUsagePlansResultOutput{}, options).(GetUsagePlansResultOutput), nil
		}).(GetUsagePlansResultOutput)
}

// A collection of arguments for invoking getUsagePlans.
type GetUsagePlansOutputArgs struct {
	// The ocid of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput         `pulumi:"displayName"`
	Filters     GetUsagePlansFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state. Example: `ACTIVE`
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetUsagePlansOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsagePlansArgs)(nil)).Elem()
}

// A collection of values returned by getUsagePlans.
type GetUsagePlansResultOutput struct{ *pulumi.OutputState }

func (GetUsagePlansResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsagePlansResult)(nil)).Elem()
}

func (o GetUsagePlansResultOutput) ToGetUsagePlansResultOutput() GetUsagePlansResultOutput {
	return o
}

func (o GetUsagePlansResultOutput) ToGetUsagePlansResultOutputWithContext(ctx context.Context) GetUsagePlansResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
func (o GetUsagePlansResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsagePlansResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetUsagePlansResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsagePlansResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetUsagePlansResultOutput) Filters() GetUsagePlansFilterArrayOutput {
	return o.ApplyT(func(v GetUsagePlansResult) []GetUsagePlansFilter { return v.Filters }).(GetUsagePlansFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUsagePlansResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsagePlansResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the usage plan.
func (o GetUsagePlansResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsagePlansResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of usage_plan_collection.
func (o GetUsagePlansResultOutput) UsagePlanCollections() GetUsagePlansUsagePlanCollectionArrayOutput {
	return o.ApplyT(func(v GetUsagePlansResult) []GetUsagePlansUsagePlanCollection { return v.UsagePlanCollections }).(GetUsagePlansUsagePlanCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUsagePlansResultOutput{})
}
