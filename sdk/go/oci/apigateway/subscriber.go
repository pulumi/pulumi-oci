// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Subscriber resource in Oracle Cloud Infrastructure API Gateway service.
//
// Creates a new subscriber.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/ApiGateway"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ApiGateway.NewSubscriber(ctx, "testSubscriber", &ApiGateway.SubscriberArgs{
// 			Clients: apigateway.SubscriberClientArray{
// 				&apigateway.SubscriberClientArgs{
// 					Name:  pulumi.Any(_var.Subscriber_clients_name),
// 					Token: pulumi.Any(_var.Subscriber_clients_token),
// 				},
// 			},
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			UsagePlans:    pulumi.Any(_var.Subscriber_usage_plans),
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			DisplayName: pulumi.Any(_var.Subscriber_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Subscribers can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:ApiGateway/subscriber:Subscriber test_subscriber "id"
// ```
type Subscriber struct {
	pulumi.CustomResourceState

	// (Updatable) The clients belonging to this subscriber.
	Clients SubscriberClientArrayOutput `pulumi:"clients"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The current state of the subscriber.
	State pulumi.StringOutput `pulumi:"state"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) An array of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of usage plan resources.
	UsagePlans pulumi.StringArrayOutput `pulumi:"usagePlans"`
}

// NewSubscriber registers a new resource with the given unique name, arguments, and options.
func NewSubscriber(ctx *pulumi.Context,
	name string, args *SubscriberArgs, opts ...pulumi.ResourceOption) (*Subscriber, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Clients == nil {
		return nil, errors.New("invalid value for required argument 'Clients'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.UsagePlans == nil {
		return nil, errors.New("invalid value for required argument 'UsagePlans'")
	}
	var resource Subscriber
	err := ctx.RegisterResource("oci:ApiGateway/subscriber:Subscriber", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubscriber gets an existing Subscriber resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubscriber(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubscriberState, opts ...pulumi.ResourceOption) (*Subscriber, error) {
	var resource Subscriber
	err := ctx.ReadResource("oci:ApiGateway/subscriber:Subscriber", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Subscriber resources.
type subscriberState struct {
	// (Updatable) The clients belonging to this subscriber.
	Clients []SubscriberClient `pulumi:"clients"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The current state of the subscriber.
	State *string `pulumi:"state"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) An array of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of usage plan resources.
	UsagePlans []string `pulumi:"usagePlans"`
}

type SubscriberState struct {
	// (Updatable) The clients belonging to this subscriber.
	Clients SubscriberClientArrayInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// The current state of the subscriber.
	State pulumi.StringPtrInput
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) An array of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of usage plan resources.
	UsagePlans pulumi.StringArrayInput
}

func (SubscriberState) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriberState)(nil)).Elem()
}

type subscriberArgs struct {
	// (Updatable) The clients belonging to this subscriber.
	Clients []SubscriberClient `pulumi:"clients"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) An array of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of usage plan resources.
	UsagePlans []string `pulumi:"usagePlans"`
}

// The set of arguments for constructing a Subscriber resource.
type SubscriberArgs struct {
	// (Updatable) The clients belonging to this subscriber.
	Clients SubscriberClientArrayInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the resource is created.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) An array of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of usage plan resources.
	UsagePlans pulumi.StringArrayInput
}

func (SubscriberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriberArgs)(nil)).Elem()
}

type SubscriberInput interface {
	pulumi.Input

	ToSubscriberOutput() SubscriberOutput
	ToSubscriberOutputWithContext(ctx context.Context) SubscriberOutput
}

func (*Subscriber) ElementType() reflect.Type {
	return reflect.TypeOf((**Subscriber)(nil)).Elem()
}

func (i *Subscriber) ToSubscriberOutput() SubscriberOutput {
	return i.ToSubscriberOutputWithContext(context.Background())
}

func (i *Subscriber) ToSubscriberOutputWithContext(ctx context.Context) SubscriberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberOutput)
}

// SubscriberArrayInput is an input type that accepts SubscriberArray and SubscriberArrayOutput values.
// You can construct a concrete instance of `SubscriberArrayInput` via:
//
//          SubscriberArray{ SubscriberArgs{...} }
type SubscriberArrayInput interface {
	pulumi.Input

	ToSubscriberArrayOutput() SubscriberArrayOutput
	ToSubscriberArrayOutputWithContext(context.Context) SubscriberArrayOutput
}

type SubscriberArray []SubscriberInput

func (SubscriberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Subscriber)(nil)).Elem()
}

func (i SubscriberArray) ToSubscriberArrayOutput() SubscriberArrayOutput {
	return i.ToSubscriberArrayOutputWithContext(context.Background())
}

func (i SubscriberArray) ToSubscriberArrayOutputWithContext(ctx context.Context) SubscriberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberArrayOutput)
}

// SubscriberMapInput is an input type that accepts SubscriberMap and SubscriberMapOutput values.
// You can construct a concrete instance of `SubscriberMapInput` via:
//
//          SubscriberMap{ "key": SubscriberArgs{...} }
type SubscriberMapInput interface {
	pulumi.Input

	ToSubscriberMapOutput() SubscriberMapOutput
	ToSubscriberMapOutputWithContext(context.Context) SubscriberMapOutput
}

type SubscriberMap map[string]SubscriberInput

func (SubscriberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Subscriber)(nil)).Elem()
}

func (i SubscriberMap) ToSubscriberMapOutput() SubscriberMapOutput {
	return i.ToSubscriberMapOutputWithContext(context.Background())
}

func (i SubscriberMap) ToSubscriberMapOutputWithContext(ctx context.Context) SubscriberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberMapOutput)
}

type SubscriberOutput struct{ *pulumi.OutputState }

func (SubscriberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Subscriber)(nil)).Elem()
}

func (o SubscriberOutput) ToSubscriberOutput() SubscriberOutput {
	return o
}

func (o SubscriberOutput) ToSubscriberOutputWithContext(ctx context.Context) SubscriberOutput {
	return o
}

type SubscriberArrayOutput struct{ *pulumi.OutputState }

func (SubscriberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Subscriber)(nil)).Elem()
}

func (o SubscriberArrayOutput) ToSubscriberArrayOutput() SubscriberArrayOutput {
	return o
}

func (o SubscriberArrayOutput) ToSubscriberArrayOutputWithContext(ctx context.Context) SubscriberArrayOutput {
	return o
}

func (o SubscriberArrayOutput) Index(i pulumi.IntInput) SubscriberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Subscriber {
		return vs[0].([]*Subscriber)[vs[1].(int)]
	}).(SubscriberOutput)
}

type SubscriberMapOutput struct{ *pulumi.OutputState }

func (SubscriberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Subscriber)(nil)).Elem()
}

func (o SubscriberMapOutput) ToSubscriberMapOutput() SubscriberMapOutput {
	return o
}

func (o SubscriberMapOutput) ToSubscriberMapOutputWithContext(ctx context.Context) SubscriberMapOutput {
	return o
}

func (o SubscriberMapOutput) MapIndex(k pulumi.StringInput) SubscriberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Subscriber {
		return vs[0].(map[string]*Subscriber)[vs[1].(string)]
	}).(SubscriberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberInput)(nil)).Elem(), &Subscriber{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberArrayInput)(nil)).Elem(), SubscriberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberMapInput)(nil)).Elem(), SubscriberMap{})
	pulumi.RegisterOutputType(SubscriberOutput{})
	pulumi.RegisterOutputType(SubscriberArrayOutput{})
	pulumi.RegisterOutputType(SubscriberMapOutput{})
}
