// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type GetApmDomainsApmDomain struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The endpoint where the APM agents upload their observations and metrics.
	DataUploadEndpoint string `pulumi:"dataUploadEndpoint"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Description of the APM domain.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// Indicates if this is an Always Free resource.
	IsFreeTier bool `pulumi:"isFreeTier"`
	// A filter to return only resources that match the given life-cycle state.
	State string `pulumi:"state"`
	// The time the APM domain was created, expressed in RFC 3339 timestamp format.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the APM domain was updated, expressed in RFC 3339 timestamp format.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetApmDomainsApmDomainInput is an input type that accepts GetApmDomainsApmDomainArgs and GetApmDomainsApmDomainOutput values.
// You can construct a concrete instance of `GetApmDomainsApmDomainInput` via:
//
//	GetApmDomainsApmDomainArgs{...}
type GetApmDomainsApmDomainInput interface {
	pulumi.Input

	ToGetApmDomainsApmDomainOutput() GetApmDomainsApmDomainOutput
	ToGetApmDomainsApmDomainOutputWithContext(context.Context) GetApmDomainsApmDomainOutput
}

type GetApmDomainsApmDomainArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The endpoint where the APM agents upload their observations and metrics.
	DataUploadEndpoint pulumi.StringInput `pulumi:"dataUploadEndpoint"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Description of the APM domain.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates if this is an Always Free resource.
	IsFreeTier pulumi.BoolInput `pulumi:"isFreeTier"`
	// A filter to return only resources that match the given life-cycle state.
	State pulumi.StringInput `pulumi:"state"`
	// The time the APM domain was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the APM domain was updated, expressed in RFC 3339 timestamp format.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetApmDomainsApmDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApmDomainsApmDomain)(nil)).Elem()
}

func (i GetApmDomainsApmDomainArgs) ToGetApmDomainsApmDomainOutput() GetApmDomainsApmDomainOutput {
	return i.ToGetApmDomainsApmDomainOutputWithContext(context.Background())
}

func (i GetApmDomainsApmDomainArgs) ToGetApmDomainsApmDomainOutputWithContext(ctx context.Context) GetApmDomainsApmDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApmDomainsApmDomainOutput)
}

func (i GetApmDomainsApmDomainArgs) ToOutput(ctx context.Context) pulumix.Output[GetApmDomainsApmDomain] {
	return pulumix.Output[GetApmDomainsApmDomain]{
		OutputState: i.ToGetApmDomainsApmDomainOutputWithContext(ctx).OutputState,
	}
}

// GetApmDomainsApmDomainArrayInput is an input type that accepts GetApmDomainsApmDomainArray and GetApmDomainsApmDomainArrayOutput values.
// You can construct a concrete instance of `GetApmDomainsApmDomainArrayInput` via:
//
//	GetApmDomainsApmDomainArray{ GetApmDomainsApmDomainArgs{...} }
type GetApmDomainsApmDomainArrayInput interface {
	pulumi.Input

	ToGetApmDomainsApmDomainArrayOutput() GetApmDomainsApmDomainArrayOutput
	ToGetApmDomainsApmDomainArrayOutputWithContext(context.Context) GetApmDomainsApmDomainArrayOutput
}

type GetApmDomainsApmDomainArray []GetApmDomainsApmDomainInput

func (GetApmDomainsApmDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApmDomainsApmDomain)(nil)).Elem()
}

func (i GetApmDomainsApmDomainArray) ToGetApmDomainsApmDomainArrayOutput() GetApmDomainsApmDomainArrayOutput {
	return i.ToGetApmDomainsApmDomainArrayOutputWithContext(context.Background())
}

func (i GetApmDomainsApmDomainArray) ToGetApmDomainsApmDomainArrayOutputWithContext(ctx context.Context) GetApmDomainsApmDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApmDomainsApmDomainArrayOutput)
}

func (i GetApmDomainsApmDomainArray) ToOutput(ctx context.Context) pulumix.Output[[]GetApmDomainsApmDomain] {
	return pulumix.Output[[]GetApmDomainsApmDomain]{
		OutputState: i.ToGetApmDomainsApmDomainArrayOutputWithContext(ctx).OutputState,
	}
}

type GetApmDomainsApmDomainOutput struct{ *pulumi.OutputState }

func (GetApmDomainsApmDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApmDomainsApmDomain)(nil)).Elem()
}

func (o GetApmDomainsApmDomainOutput) ToGetApmDomainsApmDomainOutput() GetApmDomainsApmDomainOutput {
	return o
}

func (o GetApmDomainsApmDomainOutput) ToGetApmDomainsApmDomainOutputWithContext(ctx context.Context) GetApmDomainsApmDomainOutput {
	return o
}

func (o GetApmDomainsApmDomainOutput) ToOutput(ctx context.Context) pulumix.Output[GetApmDomainsApmDomain] {
	return pulumix.Output[GetApmDomainsApmDomain]{
		OutputState: o.OutputState,
	}
}

// The ID of the compartment in which to list resources.
func (o GetApmDomainsApmDomainOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApmDomainsApmDomain) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The endpoint where the APM agents upload their observations and metrics.
func (o GetApmDomainsApmDomainOutput) DataUploadEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetApmDomainsApmDomain) string { return v.DataUploadEndpoint }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetApmDomainsApmDomainOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetApmDomainsApmDomain) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Description of the APM domain.
func (o GetApmDomainsApmDomainOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetApmDomainsApmDomain) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetApmDomainsApmDomainOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApmDomainsApmDomain) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetApmDomainsApmDomainOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetApmDomainsApmDomain) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier that is immutable on creation.
func (o GetApmDomainsApmDomainOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApmDomainsApmDomain) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates if this is an Always Free resource.
func (o GetApmDomainsApmDomainOutput) IsFreeTier() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApmDomainsApmDomain) bool { return v.IsFreeTier }).(pulumi.BoolOutput)
}

// A filter to return only resources that match the given life-cycle state.
func (o GetApmDomainsApmDomainOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetApmDomainsApmDomain) string { return v.State }).(pulumi.StringOutput)
}

// The time the APM domain was created, expressed in RFC 3339 timestamp format.
func (o GetApmDomainsApmDomainOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetApmDomainsApmDomain) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the APM domain was updated, expressed in RFC 3339 timestamp format.
func (o GetApmDomainsApmDomainOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetApmDomainsApmDomain) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetApmDomainsApmDomainArrayOutput struct{ *pulumi.OutputState }

func (GetApmDomainsApmDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApmDomainsApmDomain)(nil)).Elem()
}

func (o GetApmDomainsApmDomainArrayOutput) ToGetApmDomainsApmDomainArrayOutput() GetApmDomainsApmDomainArrayOutput {
	return o
}

func (o GetApmDomainsApmDomainArrayOutput) ToGetApmDomainsApmDomainArrayOutputWithContext(ctx context.Context) GetApmDomainsApmDomainArrayOutput {
	return o
}

func (o GetApmDomainsApmDomainArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetApmDomainsApmDomain] {
	return pulumix.Output[[]GetApmDomainsApmDomain]{
		OutputState: o.OutputState,
	}
}

func (o GetApmDomainsApmDomainArrayOutput) Index(i pulumi.IntInput) GetApmDomainsApmDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApmDomainsApmDomain {
		return vs[0].([]GetApmDomainsApmDomain)[vs[1].(int)]
	}).(GetApmDomainsApmDomainOutput)
}

type GetApmDomainsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetApmDomainsFilterInput is an input type that accepts GetApmDomainsFilterArgs and GetApmDomainsFilterOutput values.
// You can construct a concrete instance of `GetApmDomainsFilterInput` via:
//
//	GetApmDomainsFilterArgs{...}
type GetApmDomainsFilterInput interface {
	pulumi.Input

	ToGetApmDomainsFilterOutput() GetApmDomainsFilterOutput
	ToGetApmDomainsFilterOutputWithContext(context.Context) GetApmDomainsFilterOutput
}

type GetApmDomainsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetApmDomainsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApmDomainsFilter)(nil)).Elem()
}

func (i GetApmDomainsFilterArgs) ToGetApmDomainsFilterOutput() GetApmDomainsFilterOutput {
	return i.ToGetApmDomainsFilterOutputWithContext(context.Background())
}

func (i GetApmDomainsFilterArgs) ToGetApmDomainsFilterOutputWithContext(ctx context.Context) GetApmDomainsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApmDomainsFilterOutput)
}

func (i GetApmDomainsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetApmDomainsFilter] {
	return pulumix.Output[GetApmDomainsFilter]{
		OutputState: i.ToGetApmDomainsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetApmDomainsFilterArrayInput is an input type that accepts GetApmDomainsFilterArray and GetApmDomainsFilterArrayOutput values.
// You can construct a concrete instance of `GetApmDomainsFilterArrayInput` via:
//
//	GetApmDomainsFilterArray{ GetApmDomainsFilterArgs{...} }
type GetApmDomainsFilterArrayInput interface {
	pulumi.Input

	ToGetApmDomainsFilterArrayOutput() GetApmDomainsFilterArrayOutput
	ToGetApmDomainsFilterArrayOutputWithContext(context.Context) GetApmDomainsFilterArrayOutput
}

type GetApmDomainsFilterArray []GetApmDomainsFilterInput

func (GetApmDomainsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApmDomainsFilter)(nil)).Elem()
}

func (i GetApmDomainsFilterArray) ToGetApmDomainsFilterArrayOutput() GetApmDomainsFilterArrayOutput {
	return i.ToGetApmDomainsFilterArrayOutputWithContext(context.Background())
}

func (i GetApmDomainsFilterArray) ToGetApmDomainsFilterArrayOutputWithContext(ctx context.Context) GetApmDomainsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApmDomainsFilterArrayOutput)
}

func (i GetApmDomainsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetApmDomainsFilter] {
	return pulumix.Output[[]GetApmDomainsFilter]{
		OutputState: i.ToGetApmDomainsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetApmDomainsFilterOutput struct{ *pulumi.OutputState }

func (GetApmDomainsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApmDomainsFilter)(nil)).Elem()
}

func (o GetApmDomainsFilterOutput) ToGetApmDomainsFilterOutput() GetApmDomainsFilterOutput {
	return o
}

func (o GetApmDomainsFilterOutput) ToGetApmDomainsFilterOutputWithContext(ctx context.Context) GetApmDomainsFilterOutput {
	return o
}

func (o GetApmDomainsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetApmDomainsFilter] {
	return pulumix.Output[GetApmDomainsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetApmDomainsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApmDomainsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetApmDomainsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApmDomainsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetApmDomainsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApmDomainsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetApmDomainsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetApmDomainsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApmDomainsFilter)(nil)).Elem()
}

func (o GetApmDomainsFilterArrayOutput) ToGetApmDomainsFilterArrayOutput() GetApmDomainsFilterArrayOutput {
	return o
}

func (o GetApmDomainsFilterArrayOutput) ToGetApmDomainsFilterArrayOutputWithContext(ctx context.Context) GetApmDomainsFilterArrayOutput {
	return o
}

func (o GetApmDomainsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetApmDomainsFilter] {
	return pulumix.Output[[]GetApmDomainsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetApmDomainsFilterArrayOutput) Index(i pulumi.IntInput) GetApmDomainsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApmDomainsFilter {
		return vs[0].([]GetApmDomainsFilter)[vs[1].(int)]
	}).(GetApmDomainsFilterOutput)
}

type GetDataKeysDataKey struct {
	// Name of the Data Key. The name uniquely identifies a Data Key within an APM domain.
	Name string `pulumi:"name"`
	// Type of the Data Key.
	Type string `pulumi:"type"`
	// Value of the Data Key.
	Value string `pulumi:"value"`
}

// GetDataKeysDataKeyInput is an input type that accepts GetDataKeysDataKeyArgs and GetDataKeysDataKeyOutput values.
// You can construct a concrete instance of `GetDataKeysDataKeyInput` via:
//
//	GetDataKeysDataKeyArgs{...}
type GetDataKeysDataKeyInput interface {
	pulumi.Input

	ToGetDataKeysDataKeyOutput() GetDataKeysDataKeyOutput
	ToGetDataKeysDataKeyOutputWithContext(context.Context) GetDataKeysDataKeyOutput
}

type GetDataKeysDataKeyArgs struct {
	// Name of the Data Key. The name uniquely identifies a Data Key within an APM domain.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the Data Key.
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the Data Key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDataKeysDataKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataKeysDataKey)(nil)).Elem()
}

func (i GetDataKeysDataKeyArgs) ToGetDataKeysDataKeyOutput() GetDataKeysDataKeyOutput {
	return i.ToGetDataKeysDataKeyOutputWithContext(context.Background())
}

func (i GetDataKeysDataKeyArgs) ToGetDataKeysDataKeyOutputWithContext(ctx context.Context) GetDataKeysDataKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataKeysDataKeyOutput)
}

func (i GetDataKeysDataKeyArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataKeysDataKey] {
	return pulumix.Output[GetDataKeysDataKey]{
		OutputState: i.ToGetDataKeysDataKeyOutputWithContext(ctx).OutputState,
	}
}

// GetDataKeysDataKeyArrayInput is an input type that accepts GetDataKeysDataKeyArray and GetDataKeysDataKeyArrayOutput values.
// You can construct a concrete instance of `GetDataKeysDataKeyArrayInput` via:
//
//	GetDataKeysDataKeyArray{ GetDataKeysDataKeyArgs{...} }
type GetDataKeysDataKeyArrayInput interface {
	pulumi.Input

	ToGetDataKeysDataKeyArrayOutput() GetDataKeysDataKeyArrayOutput
	ToGetDataKeysDataKeyArrayOutputWithContext(context.Context) GetDataKeysDataKeyArrayOutput
}

type GetDataKeysDataKeyArray []GetDataKeysDataKeyInput

func (GetDataKeysDataKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataKeysDataKey)(nil)).Elem()
}

func (i GetDataKeysDataKeyArray) ToGetDataKeysDataKeyArrayOutput() GetDataKeysDataKeyArrayOutput {
	return i.ToGetDataKeysDataKeyArrayOutputWithContext(context.Background())
}

func (i GetDataKeysDataKeyArray) ToGetDataKeysDataKeyArrayOutputWithContext(ctx context.Context) GetDataKeysDataKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataKeysDataKeyArrayOutput)
}

func (i GetDataKeysDataKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataKeysDataKey] {
	return pulumix.Output[[]GetDataKeysDataKey]{
		OutputState: i.ToGetDataKeysDataKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataKeysDataKeyOutput struct{ *pulumi.OutputState }

func (GetDataKeysDataKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataKeysDataKey)(nil)).Elem()
}

func (o GetDataKeysDataKeyOutput) ToGetDataKeysDataKeyOutput() GetDataKeysDataKeyOutput {
	return o
}

func (o GetDataKeysDataKeyOutput) ToGetDataKeysDataKeyOutputWithContext(ctx context.Context) GetDataKeysDataKeyOutput {
	return o
}

func (o GetDataKeysDataKeyOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataKeysDataKey] {
	return pulumix.Output[GetDataKeysDataKey]{
		OutputState: o.OutputState,
	}
}

// Name of the Data Key. The name uniquely identifies a Data Key within an APM domain.
func (o GetDataKeysDataKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataKeysDataKey) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the Data Key.
func (o GetDataKeysDataKeyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataKeysDataKey) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the Data Key.
func (o GetDataKeysDataKeyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataKeysDataKey) string { return v.Value }).(pulumi.StringOutput)
}

type GetDataKeysDataKeyArrayOutput struct{ *pulumi.OutputState }

func (GetDataKeysDataKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataKeysDataKey)(nil)).Elem()
}

func (o GetDataKeysDataKeyArrayOutput) ToGetDataKeysDataKeyArrayOutput() GetDataKeysDataKeyArrayOutput {
	return o
}

func (o GetDataKeysDataKeyArrayOutput) ToGetDataKeysDataKeyArrayOutputWithContext(ctx context.Context) GetDataKeysDataKeyArrayOutput {
	return o
}

func (o GetDataKeysDataKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataKeysDataKey] {
	return pulumix.Output[[]GetDataKeysDataKey]{
		OutputState: o.OutputState,
	}
}

func (o GetDataKeysDataKeyArrayOutput) Index(i pulumi.IntInput) GetDataKeysDataKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataKeysDataKey {
		return vs[0].([]GetDataKeysDataKey)[vs[1].(int)]
	}).(GetDataKeysDataKeyOutput)
}

type GetDataKeysFilter struct {
	// Name of the Data Key. The name uniquely identifies a Data Key within an APM domain.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetDataKeysFilterInput is an input type that accepts GetDataKeysFilterArgs and GetDataKeysFilterOutput values.
// You can construct a concrete instance of `GetDataKeysFilterInput` via:
//
//	GetDataKeysFilterArgs{...}
type GetDataKeysFilterInput interface {
	pulumi.Input

	ToGetDataKeysFilterOutput() GetDataKeysFilterOutput
	ToGetDataKeysFilterOutputWithContext(context.Context) GetDataKeysFilterOutput
}

type GetDataKeysFilterArgs struct {
	// Name of the Data Key. The name uniquely identifies a Data Key within an APM domain.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDataKeysFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataKeysFilter)(nil)).Elem()
}

func (i GetDataKeysFilterArgs) ToGetDataKeysFilterOutput() GetDataKeysFilterOutput {
	return i.ToGetDataKeysFilterOutputWithContext(context.Background())
}

func (i GetDataKeysFilterArgs) ToGetDataKeysFilterOutputWithContext(ctx context.Context) GetDataKeysFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataKeysFilterOutput)
}

func (i GetDataKeysFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetDataKeysFilter] {
	return pulumix.Output[GetDataKeysFilter]{
		OutputState: i.ToGetDataKeysFilterOutputWithContext(ctx).OutputState,
	}
}

// GetDataKeysFilterArrayInput is an input type that accepts GetDataKeysFilterArray and GetDataKeysFilterArrayOutput values.
// You can construct a concrete instance of `GetDataKeysFilterArrayInput` via:
//
//	GetDataKeysFilterArray{ GetDataKeysFilterArgs{...} }
type GetDataKeysFilterArrayInput interface {
	pulumi.Input

	ToGetDataKeysFilterArrayOutput() GetDataKeysFilterArrayOutput
	ToGetDataKeysFilterArrayOutputWithContext(context.Context) GetDataKeysFilterArrayOutput
}

type GetDataKeysFilterArray []GetDataKeysFilterInput

func (GetDataKeysFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataKeysFilter)(nil)).Elem()
}

func (i GetDataKeysFilterArray) ToGetDataKeysFilterArrayOutput() GetDataKeysFilterArrayOutput {
	return i.ToGetDataKeysFilterArrayOutputWithContext(context.Background())
}

func (i GetDataKeysFilterArray) ToGetDataKeysFilterArrayOutputWithContext(ctx context.Context) GetDataKeysFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataKeysFilterArrayOutput)
}

func (i GetDataKeysFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDataKeysFilter] {
	return pulumix.Output[[]GetDataKeysFilter]{
		OutputState: i.ToGetDataKeysFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDataKeysFilterOutput struct{ *pulumi.OutputState }

func (GetDataKeysFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataKeysFilter)(nil)).Elem()
}

func (o GetDataKeysFilterOutput) ToGetDataKeysFilterOutput() GetDataKeysFilterOutput {
	return o
}

func (o GetDataKeysFilterOutput) ToGetDataKeysFilterOutputWithContext(ctx context.Context) GetDataKeysFilterOutput {
	return o
}

func (o GetDataKeysFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetDataKeysFilter] {
	return pulumix.Output[GetDataKeysFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the Data Key. The name uniquely identifies a Data Key within an APM domain.
func (o GetDataKeysFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataKeysFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataKeysFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDataKeysFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetDataKeysFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataKeysFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDataKeysFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDataKeysFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataKeysFilter)(nil)).Elem()
}

func (o GetDataKeysFilterArrayOutput) ToGetDataKeysFilterArrayOutput() GetDataKeysFilterArrayOutput {
	return o
}

func (o GetDataKeysFilterArrayOutput) ToGetDataKeysFilterArrayOutputWithContext(ctx context.Context) GetDataKeysFilterArrayOutput {
	return o
}

func (o GetDataKeysFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDataKeysFilter] {
	return pulumix.Output[[]GetDataKeysFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetDataKeysFilterArrayOutput) Index(i pulumi.IntInput) GetDataKeysFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataKeysFilter {
		return vs[0].([]GetDataKeysFilter)[vs[1].(int)]
	}).(GetDataKeysFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetApmDomainsApmDomainInput)(nil)).Elem(), GetApmDomainsApmDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApmDomainsApmDomainArrayInput)(nil)).Elem(), GetApmDomainsApmDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApmDomainsFilterInput)(nil)).Elem(), GetApmDomainsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApmDomainsFilterArrayInput)(nil)).Elem(), GetApmDomainsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataKeysDataKeyInput)(nil)).Elem(), GetDataKeysDataKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataKeysDataKeyArrayInput)(nil)).Elem(), GetDataKeysDataKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataKeysFilterInput)(nil)).Elem(), GetDataKeysFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataKeysFilterArrayInput)(nil)).Elem(), GetDataKeysFilterArray{})
	pulumi.RegisterOutputType(GetApmDomainsApmDomainOutput{})
	pulumi.RegisterOutputType(GetApmDomainsApmDomainArrayOutput{})
	pulumi.RegisterOutputType(GetApmDomainsFilterOutput{})
	pulumi.RegisterOutputType(GetApmDomainsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDataKeysDataKeyOutput{})
	pulumi.RegisterOutputType(GetDataKeysDataKeyArrayOutput{})
	pulumi.RegisterOutputType(GetDataKeysFilterOutput{})
	pulumi.RegisterOutputType(GetDataKeysFilterArrayOutput{})
}
