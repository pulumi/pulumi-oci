// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apmconfig

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Config resource in Oracle Cloud Infrastructure Apm Config service.
//
// Creates a new configuration item.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ApmConfig"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ApmConfig.NewConfig(ctx, "testConfig", &ApmConfig.ConfigArgs{
//				ApmDomainId: pulumi.Any(oci_apm_apm_domain.Test_apm_domain.Id),
//				ConfigType:  pulumi.Any(_var.Config_config_type),
//				DisplayName: pulumi.Any(_var.Config_display_name),
//				DefinedTags: pulumi.AnyMap{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				Description: pulumi.Any(_var.Config_description),
//				Dimensions: apmconfig.ConfigDimensionArray{
//					&apmconfig.ConfigDimensionArgs{
//						Name:        pulumi.Any(_var.Config_dimensions_name),
//						ValueSource: pulumi.Any(_var.Config_dimensions_value_source),
//					},
//				},
//				FilterId:   pulumi.Any(oci_apm_config_filter.Test_filter.Id),
//				FilterText: pulumi.Any(_var.Config_filter_text),
//				FreeformTags: pulumi.AnyMap{
//					"bar-key": pulumi.Any("value"),
//				},
//				Group: pulumi.Any(_var.Config_group),
//				Metrics: apmconfig.ConfigMetricArray{
//					&apmconfig.ConfigMetricArgs{
//						Description: pulumi.Any(_var.Config_metrics_description),
//						Name:        pulumi.Any(_var.Config_metrics_name),
//						Unit:        pulumi.Any(_var.Config_metrics_unit),
//						ValueSource: pulumi.Any(_var.Config_metrics_value_source),
//					},
//				},
//				Namespace: pulumi.Any(_var.Config_namespace),
//				OpcDryRun: pulumi.Any(_var.Config_opc_dry_run),
//				Options:   pulumi.Any(_var.Config_options),
//				Rules: apmconfig.ConfigRuleArray{
//					&apmconfig.ConfigRuleArgs{
//						DisplayName:            pulumi.Any(_var.Config_rules_display_name),
//						FilterText:             pulumi.Any(_var.Config_rules_filter_text),
//						IsApplyToErrorSpans:    pulumi.Any(_var.Config_rules_is_apply_to_error_spans),
//						IsEnabled:              pulumi.Any(_var.Config_rules_is_enabled),
//						Priority:               pulumi.Any(_var.Config_rules_priority),
//						SatisfiedResponseTime:  pulumi.Any(_var.Config_rules_satisfied_response_time),
//						ToleratingResponseTime: pulumi.Any(_var.Config_rules_tolerating_response_time),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Configs can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:ApmConfig/config:Config test_config "configs/{configId}/apmDomainId/{apmDomainId}"
//
// ```
type Config struct {
	pulumi.CustomResourceState

	// (Updatable) The APM Domain ID the request is intended for.
	ApmDomainId pulumi.StringOutput `pulumi:"apmDomainId"`
	// (Updatable) The type of configuration item.
	ConfigType pulumi.StringOutput `pulumi:"configType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A description of the metric.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A list of dimensions for the metric. This variable should not be used.
	Dimensions ConfigDimensionArrayOutput `pulumi:"dimensions"`
	// (Updatable) The name by which a configuration entity is displayed to the end user.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// For optimistic concurrency control. See `if-match`.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
	FilterId pulumi.StringOutput `pulumi:"filterId"`
	// (Updatable) The string that defines the Span Filter expression.
	FilterText pulumi.StringOutput `pulumi:"filterText"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) A string that specifies the group that an OPTIONS item belongs to.
	Group pulumi.StringOutput `pulumi:"group"`
	// The list of configuration items that reference the span filter.
	InUseBies ConfigInUseByArrayOutput `pulumi:"inUseBies"`
	// (Updatable) The list of metrics in this group.
	Metrics ConfigMetricArrayOutput `pulumi:"metrics"`
	// (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
	OpcDryRun pulumi.StringOutput `pulumi:"opcDryRun"`
	// (Updatable) The options are stored here as JSON.
	Options pulumi.StringOutput `pulumi:"options"`
	// (Updatable)
	Rules ConfigRuleArrayOutput `pulumi:"rules"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	UpdatedBy pulumi.StringOutput `pulumi:"updatedBy"`
}

// NewConfig registers a new resource with the given unique name, arguments, and options.
func NewConfig(ctx *pulumi.Context,
	name string, args *ConfigArgs, opts ...pulumi.ResourceOption) (*Config, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApmDomainId == nil {
		return nil, errors.New("invalid value for required argument 'ApmDomainId'")
	}
	if args.ConfigType == nil {
		return nil, errors.New("invalid value for required argument 'ConfigType'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	var resource Config
	err := ctx.RegisterResource("oci:ApmConfig/config:Config", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfig gets an existing Config resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigState, opts ...pulumi.ResourceOption) (*Config, error) {
	var resource Config
	err := ctx.ReadResource("oci:ApmConfig/config:Config", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Config resources.
type configState struct {
	// (Updatable) The APM Domain ID the request is intended for.
	ApmDomainId *string `pulumi:"apmDomainId"`
	// (Updatable) The type of configuration item.
	ConfigType *string `pulumi:"configType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	CreatedBy *string `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A description of the metric.
	Description *string `pulumi:"description"`
	// (Updatable) A list of dimensions for the metric. This variable should not be used.
	Dimensions []ConfigDimension `pulumi:"dimensions"`
	// (Updatable) The name by which a configuration entity is displayed to the end user.
	DisplayName *string `pulumi:"displayName"`
	// For optimistic concurrency control. See `if-match`.
	Etag *string `pulumi:"etag"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
	FilterId *string `pulumi:"filterId"`
	// (Updatable) The string that defines the Span Filter expression.
	FilterText *string `pulumi:"filterText"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) A string that specifies the group that an OPTIONS item belongs to.
	Group *string `pulumi:"group"`
	// The list of configuration items that reference the span filter.
	InUseBies []ConfigInUseBy `pulumi:"inUseBies"`
	// (Updatable) The list of metrics in this group.
	Metrics []ConfigMetric `pulumi:"metrics"`
	// (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
	Namespace *string `pulumi:"namespace"`
	// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
	OpcDryRun *string `pulumi:"opcDryRun"`
	// (Updatable) The options are stored here as JSON.
	Options *string `pulumi:"options"`
	// (Updatable)
	Rules []ConfigRule `pulumi:"rules"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	UpdatedBy *string `pulumi:"updatedBy"`
}

type ConfigState struct {
	// (Updatable) The APM Domain ID the request is intended for.
	ApmDomainId pulumi.StringPtrInput
	// (Updatable) The type of configuration item.
	ConfigType pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	CreatedBy pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A description of the metric.
	Description pulumi.StringPtrInput
	// (Updatable) A list of dimensions for the metric. This variable should not be used.
	Dimensions ConfigDimensionArrayInput
	// (Updatable) The name by which a configuration entity is displayed to the end user.
	DisplayName pulumi.StringPtrInput
	// For optimistic concurrency control. See `if-match`.
	Etag pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
	FilterId pulumi.StringPtrInput
	// (Updatable) The string that defines the Span Filter expression.
	FilterText pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) A string that specifies the group that an OPTIONS item belongs to.
	Group pulumi.StringPtrInput
	// The list of configuration items that reference the span filter.
	InUseBies ConfigInUseByArrayInput
	// (Updatable) The list of metrics in this group.
	Metrics ConfigMetricArrayInput
	// (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
	Namespace pulumi.StringPtrInput
	// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
	OpcDryRun pulumi.StringPtrInput
	// (Updatable) The options are stored here as JSON.
	Options pulumi.StringPtrInput
	// (Updatable)
	Rules ConfigRuleArrayInput
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringPtrInput
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	UpdatedBy pulumi.StringPtrInput
}

func (ConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*configState)(nil)).Elem()
}

type configArgs struct {
	// (Updatable) The APM Domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// (Updatable) The type of configuration item.
	ConfigType string `pulumi:"configType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A description of the metric.
	Description *string `pulumi:"description"`
	// (Updatable) A list of dimensions for the metric. This variable should not be used.
	Dimensions []ConfigDimension `pulumi:"dimensions"`
	// (Updatable) The name by which a configuration entity is displayed to the end user.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
	FilterId *string `pulumi:"filterId"`
	// (Updatable) The string that defines the Span Filter expression.
	FilterText *string `pulumi:"filterText"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) A string that specifies the group that an OPTIONS item belongs to.
	Group *string `pulumi:"group"`
	// The list of configuration items that reference the span filter.
	InUseBies []ConfigInUseBy `pulumi:"inUseBies"`
	// (Updatable) The list of metrics in this group.
	Metrics []ConfigMetric `pulumi:"metrics"`
	// (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
	Namespace *string `pulumi:"namespace"`
	// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
	OpcDryRun *string `pulumi:"opcDryRun"`
	// (Updatable) The options are stored here as JSON.
	Options *string `pulumi:"options"`
	// (Updatable)
	Rules []ConfigRule `pulumi:"rules"`
}

// The set of arguments for constructing a Config resource.
type ConfigArgs struct {
	// (Updatable) The APM Domain ID the request is intended for.
	ApmDomainId pulumi.StringInput
	// (Updatable) The type of configuration item.
	ConfigType pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A description of the metric.
	Description pulumi.StringPtrInput
	// (Updatable) A list of dimensions for the metric. This variable should not be used.
	Dimensions ConfigDimensionArrayInput
	// (Updatable) The name by which a configuration entity is displayed to the end user.
	DisplayName pulumi.StringInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
	FilterId pulumi.StringPtrInput
	// (Updatable) The string that defines the Span Filter expression.
	FilterText pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) A string that specifies the group that an OPTIONS item belongs to.
	Group pulumi.StringPtrInput
	// The list of configuration items that reference the span filter.
	InUseBies ConfigInUseByArrayInput
	// (Updatable) The list of metrics in this group.
	Metrics ConfigMetricArrayInput
	// (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
	Namespace pulumi.StringPtrInput
	// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
	OpcDryRun pulumi.StringPtrInput
	// (Updatable) The options are stored here as JSON.
	Options pulumi.StringPtrInput
	// (Updatable)
	Rules ConfigRuleArrayInput
}

func (ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configArgs)(nil)).Elem()
}

type ConfigInput interface {
	pulumi.Input

	ToConfigOutput() ConfigOutput
	ToConfigOutputWithContext(ctx context.Context) ConfigOutput
}

func (*Config) ElementType() reflect.Type {
	return reflect.TypeOf((**Config)(nil)).Elem()
}

func (i *Config) ToConfigOutput() ConfigOutput {
	return i.ToConfigOutputWithContext(context.Background())
}

func (i *Config) ToConfigOutputWithContext(ctx context.Context) ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigOutput)
}

// ConfigArrayInput is an input type that accepts ConfigArray and ConfigArrayOutput values.
// You can construct a concrete instance of `ConfigArrayInput` via:
//
//	ConfigArray{ ConfigArgs{...} }
type ConfigArrayInput interface {
	pulumi.Input

	ToConfigArrayOutput() ConfigArrayOutput
	ToConfigArrayOutputWithContext(context.Context) ConfigArrayOutput
}

type ConfigArray []ConfigInput

func (ConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Config)(nil)).Elem()
}

func (i ConfigArray) ToConfigArrayOutput() ConfigArrayOutput {
	return i.ToConfigArrayOutputWithContext(context.Background())
}

func (i ConfigArray) ToConfigArrayOutputWithContext(ctx context.Context) ConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigArrayOutput)
}

// ConfigMapInput is an input type that accepts ConfigMap and ConfigMapOutput values.
// You can construct a concrete instance of `ConfigMapInput` via:
//
//	ConfigMap{ "key": ConfigArgs{...} }
type ConfigMapInput interface {
	pulumi.Input

	ToConfigMapOutput() ConfigMapOutput
	ToConfigMapOutputWithContext(context.Context) ConfigMapOutput
}

type ConfigMap map[string]ConfigInput

func (ConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Config)(nil)).Elem()
}

func (i ConfigMap) ToConfigMapOutput() ConfigMapOutput {
	return i.ToConfigMapOutputWithContext(context.Background())
}

func (i ConfigMap) ToConfigMapOutputWithContext(ctx context.Context) ConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigMapOutput)
}

type ConfigOutput struct{ *pulumi.OutputState }

func (ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Config)(nil)).Elem()
}

func (o ConfigOutput) ToConfigOutput() ConfigOutput {
	return o
}

func (o ConfigOutput) ToConfigOutputWithContext(ctx context.Context) ConfigOutput {
	return o
}

// (Updatable) The APM Domain ID the request is intended for.
func (o ConfigOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.ApmDomainId }).(pulumi.StringOutput)
}

// (Updatable) The type of configuration item.
func (o ConfigOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.ConfigType }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
func (o ConfigOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o ConfigOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Config) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A description of the metric.
func (o ConfigOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) A list of dimensions for the metric. This variable should not be used.
func (o ConfigOutput) Dimensions() ConfigDimensionArrayOutput {
	return o.ApplyT(func(v *Config) ConfigDimensionArrayOutput { return v.Dimensions }).(ConfigDimensionArrayOutput)
}

// (Updatable) The name by which a configuration entity is displayed to the end user.
func (o ConfigOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// For optimistic concurrency control. See `if-match`.
func (o ConfigOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
func (o ConfigOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.FilterId }).(pulumi.StringOutput)
}

// (Updatable) The string that defines the Span Filter expression.
func (o ConfigOutput) FilterText() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.FilterText }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o ConfigOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Config) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) A string that specifies the group that an OPTIONS item belongs to.
func (o ConfigOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.Group }).(pulumi.StringOutput)
}

// The list of configuration items that reference the span filter.
func (o ConfigOutput) InUseBies() ConfigInUseByArrayOutput {
	return o.ApplyT(func(v *Config) ConfigInUseByArrayOutput { return v.InUseBies }).(ConfigInUseByArrayOutput)
}

// (Updatable) The list of metrics in this group.
func (o ConfigOutput) Metrics() ConfigMetricArrayOutput {
	return o.ApplyT(func(v *Config) ConfigMetricArrayOutput { return v.Metrics }).(ConfigMetricArrayOutput)
}

// (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
func (o ConfigOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
func (o ConfigOutput) OpcDryRun() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.OpcDryRun }).(pulumi.StringOutput)
}

// (Updatable) The options are stored here as JSON.
func (o ConfigOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.Options }).(pulumi.StringOutput)
}

// (Updatable)
func (o ConfigOutput) Rules() ConfigRuleArrayOutput {
	return o.ApplyT(func(v *Config) ConfigRuleArrayOutput { return v.Rules }).(ConfigRuleArrayOutput)
}

// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
func (o ConfigOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
func (o ConfigOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
func (o ConfigOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.UpdatedBy }).(pulumi.StringOutput)
}

type ConfigArrayOutput struct{ *pulumi.OutputState }

func (ConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Config)(nil)).Elem()
}

func (o ConfigArrayOutput) ToConfigArrayOutput() ConfigArrayOutput {
	return o
}

func (o ConfigArrayOutput) ToConfigArrayOutputWithContext(ctx context.Context) ConfigArrayOutput {
	return o
}

func (o ConfigArrayOutput) Index(i pulumi.IntInput) ConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Config {
		return vs[0].([]*Config)[vs[1].(int)]
	}).(ConfigOutput)
}

type ConfigMapOutput struct{ *pulumi.OutputState }

func (ConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Config)(nil)).Elem()
}

func (o ConfigMapOutput) ToConfigMapOutput() ConfigMapOutput {
	return o
}

func (o ConfigMapOutput) ToConfigMapOutputWithContext(ctx context.Context) ConfigMapOutput {
	return o
}

func (o ConfigMapOutput) MapIndex(k pulumi.StringInput) ConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Config {
		return vs[0].(map[string]*Config)[vs[1].(string)]
	}).(ConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInput)(nil)).Elem(), &Config{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigArrayInput)(nil)).Elem(), ConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigMapInput)(nil)).Elem(), ConfigMap{})
	pulumi.RegisterOutputType(ConfigOutput{})
	pulumi.RegisterOutputType(ConfigArrayOutput{})
	pulumi.RegisterOutputType(ConfigMapOutput{})
}
