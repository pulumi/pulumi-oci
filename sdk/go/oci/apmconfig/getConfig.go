// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apmconfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Config resource in Oracle Cloud Infrastructure Apm Config service.
//
// Gets the configuration item identified by the OCID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/apmconfig"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apmconfig.GetConfig(ctx, &apmconfig.GetConfigArgs{
//				ApmDomainId: testApmDomain.Id,
//				ConfigId:    testConfigOciApmConfigConfig.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupConfig(ctx *pulumi.Context, args *LookupConfigArgs, opts ...pulumi.InvokeOption) (*LookupConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigResult
	err := ctx.Invoke("oci:ApmConfig/getConfig:getConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfig.
type LookupConfigArgs struct {
	// The APM Domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item.
	ConfigId string `pulumi:"configId"`
}

// A collection of values returned by getConfig.
type LookupConfigResult struct {
	// The version of the referenced agent bundle.
	AgentVersion string `pulumi:"agentVersion"`
	ApmDomainId  string `pulumi:"apmDomainId"`
	// The directory owned by runAsUser.
	AttachInstallDir string `pulumi:"attachInstallDir"`
	ConfigId         string `pulumi:"configId"`
	// The type of configuration item.
	ConfigType string `pulumi:"configType"`
	// Collection of agent configuration files. For agents that use a single configuration file, this SHOULD contain a single entry and the file name MAY be an empty string. For multiple entries, you should use multiple blocks of `configMap`. To apply a different configuration in a subset of the agents, put this block anywhere in the body of the configuration and edit <some variable> and <some content> {{ <some variable> | default <some content> }} Example: com.oracle.apm.agent.tracer.enable.jfr = {{ isJfrEnabled | default false }} Then, in the configuration's overrides, specify a different value for <some variable> along with the desired agent filter. Example: "agentFilter": "ApplicationType='Tomcat'" "overrideMap": { "isJfrEnabled": true }
	Configs []GetConfigConfig `pulumi:"configs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	CreatedBy string `pulumi:"createdBy"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A description of the metric.
	Description string `pulumi:"description"`
	// A list of dimensions for the metric. This variable should not be used.
	Dimensions []GetConfigDimension `pulumi:"dimensions"`
	// The name by which a configuration entity is displayed to the end user.
	DisplayName string `pulumi:"displayName"`
	// For optimistic concurrency control. See `if-match`.
	Etag string `pulumi:"etag"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
	FilterId string `pulumi:"filterId"`
	// The string that defines the Span Filter expression.
	FilterText string `pulumi:"filterText"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A string that specifies the group that an OPTIONS item belongs to.
	Group string `pulumi:"group"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
	Id string `pulumi:"id"`
	// The list of configuration items that reference the span filter.
	InUseBies []GetConfigInUseBy `pulumi:"inUseBies"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent that will provision the APM Agent.
	ManagementAgentId string `pulumi:"managementAgentId"`
	// The agent attribute KEY by which an Agent configuration is matched to an agent.  All agent configuration objects share the same key. It is [ServiceName, service.name] by default.  The attribute VALUE corresponding to this KEY is in the matchAgentsWithAttributeValue field.
	MatchAgentsWithAttributeKeys []string `pulumi:"matchAgentsWithAttributeKeys"`
	// The agent attribute VALUE by which an agent configuration is matched to an agent.  Each agent configuration object must specify a different value.  The attribute KEY corresponding to this VALUE is in the matchAgentsWithAttributeKey field.
	MatchAgentsWithAttributeValue string `pulumi:"matchAgentsWithAttributeValue"`
	// The list of metrics in this group.
	Metrics []GetConfigMetric `pulumi:"metrics"`
	// The namespace to which the metrics are published. It must be one of several predefined namespaces.
	Namespace string `pulumi:"namespace"`
	OpcDryRun string `pulumi:"opcDryRun"`
	// The options are stored here as JSON.
	Options string `pulumi:"options"`
	// Agent configuration overrides that should apply to a subset of the agents associated with an Agent Config object.
	Overrides []GetConfigOverride `pulumi:"overrides"`
	// Filter patterns used to discover active Java processes for provisioning the APM Agent.
	ProcessFilters []string        `pulumi:"processFilters"`
	Rules          []GetConfigRule `pulumi:"rules"`
	// The OS user that should be used to discover Java processes.
	RunAsUser string `pulumi:"runAsUser"`
	// The name of the service being monitored. This argument enables you to filter by service and view traces and other signals in the APM Explorer user interface.
	ServiceName string `pulumi:"serviceName"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	UpdatedBy string `pulumi:"updatedBy"`
}

func LookupConfigOutput(ctx *pulumi.Context, args LookupConfigOutputArgs, opts ...pulumi.InvokeOption) LookupConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupConfigResultOutput, error) {
			args := v.(LookupConfigArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ApmConfig/getConfig:getConfig", args, LookupConfigResultOutput{}, options).(LookupConfigResultOutput), nil
		}).(LookupConfigResultOutput)
}

// A collection of arguments for invoking getConfig.
type LookupConfigOutputArgs struct {
	// The APM Domain ID the request is intended for.
	ApmDomainId pulumi.StringInput `pulumi:"apmDomainId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item.
	ConfigId pulumi.StringInput `pulumi:"configId"`
}

func (LookupConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigArgs)(nil)).Elem()
}

// A collection of values returned by getConfig.
type LookupConfigResultOutput struct{ *pulumi.OutputState }

func (LookupConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigResult)(nil)).Elem()
}

func (o LookupConfigResultOutput) ToLookupConfigResultOutput() LookupConfigResultOutput {
	return o
}

func (o LookupConfigResultOutput) ToLookupConfigResultOutputWithContext(ctx context.Context) LookupConfigResultOutput {
	return o
}

// The version of the referenced agent bundle.
func (o LookupConfigResultOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.AgentVersion }).(pulumi.StringOutput)
}

func (o LookupConfigResultOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.ApmDomainId }).(pulumi.StringOutput)
}

// The directory owned by runAsUser.
func (o LookupConfigResultOutput) AttachInstallDir() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.AttachInstallDir }).(pulumi.StringOutput)
}

func (o LookupConfigResultOutput) ConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.ConfigId }).(pulumi.StringOutput)
}

// The type of configuration item.
func (o LookupConfigResultOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.ConfigType }).(pulumi.StringOutput)
}

// Collection of agent configuration files. For agents that use a single configuration file, this SHOULD contain a single entry and the file name MAY be an empty string. For multiple entries, you should use multiple blocks of `configMap`. To apply a different configuration in a subset of the agents, put this block anywhere in the body of the configuration and edit <some variable> and <some content> {{ <some variable> | default <some content> }} Example: com.oracle.apm.agent.tracer.enable.jfr = {{ isJfrEnabled | default false }} Then, in the configuration's overrides, specify a different value for <some variable> along with the desired agent filter. Example: "agentFilter": "ApplicationType='Tomcat'" "overrideMap": { "isJfrEnabled": true }
func (o LookupConfigResultOutput) Configs() GetConfigConfigArrayOutput {
	return o.ApplyT(func(v LookupConfigResult) []GetConfigConfig { return v.Configs }).(GetConfigConfigArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
func (o LookupConfigResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupConfigResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConfigResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A description of the metric.
func (o LookupConfigResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Description }).(pulumi.StringOutput)
}

// A list of dimensions for the metric. This variable should not be used.
func (o LookupConfigResultOutput) Dimensions() GetConfigDimensionArrayOutput {
	return o.ApplyT(func(v LookupConfigResult) []GetConfigDimension { return v.Dimensions }).(GetConfigDimensionArrayOutput)
}

// The name by which a configuration entity is displayed to the end user.
func (o LookupConfigResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// For optimistic concurrency control. See `if-match`.
func (o LookupConfigResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
func (o LookupConfigResultOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.FilterId }).(pulumi.StringOutput)
}

// The string that defines the Span Filter expression.
func (o LookupConfigResultOutput) FilterText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.FilterText }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupConfigResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConfigResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A string that specifies the group that an OPTIONS item belongs to.
func (o LookupConfigResultOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Group }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
func (o LookupConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of configuration items that reference the span filter.
func (o LookupConfigResultOutput) InUseBies() GetConfigInUseByArrayOutput {
	return o.ApplyT(func(v LookupConfigResult) []GetConfigInUseBy { return v.InUseBies }).(GetConfigInUseByArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent that will provision the APM Agent.
func (o LookupConfigResultOutput) ManagementAgentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.ManagementAgentId }).(pulumi.StringOutput)
}

// The agent attribute KEY by which an Agent configuration is matched to an agent.  All agent configuration objects share the same key. It is [ServiceName, service.name] by default.  The attribute VALUE corresponding to this KEY is in the matchAgentsWithAttributeValue field.
func (o LookupConfigResultOutput) MatchAgentsWithAttributeKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupConfigResult) []string { return v.MatchAgentsWithAttributeKeys }).(pulumi.StringArrayOutput)
}

// The agent attribute VALUE by which an agent configuration is matched to an agent.  Each agent configuration object must specify a different value.  The attribute KEY corresponding to this VALUE is in the matchAgentsWithAttributeKey field.
func (o LookupConfigResultOutput) MatchAgentsWithAttributeValue() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.MatchAgentsWithAttributeValue }).(pulumi.StringOutput)
}

// The list of metrics in this group.
func (o LookupConfigResultOutput) Metrics() GetConfigMetricArrayOutput {
	return o.ApplyT(func(v LookupConfigResult) []GetConfigMetric { return v.Metrics }).(GetConfigMetricArrayOutput)
}

// The namespace to which the metrics are published. It must be one of several predefined namespaces.
func (o LookupConfigResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o LookupConfigResultOutput) OpcDryRun() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.OpcDryRun }).(pulumi.StringOutput)
}

// The options are stored here as JSON.
func (o LookupConfigResultOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Options }).(pulumi.StringOutput)
}

// Agent configuration overrides that should apply to a subset of the agents associated with an Agent Config object.
func (o LookupConfigResultOutput) Overrides() GetConfigOverrideArrayOutput {
	return o.ApplyT(func(v LookupConfigResult) []GetConfigOverride { return v.Overrides }).(GetConfigOverrideArrayOutput)
}

// Filter patterns used to discover active Java processes for provisioning the APM Agent.
func (o LookupConfigResultOutput) ProcessFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupConfigResult) []string { return v.ProcessFilters }).(pulumi.StringArrayOutput)
}

func (o LookupConfigResultOutput) Rules() GetConfigRuleArrayOutput {
	return o.ApplyT(func(v LookupConfigResult) []GetConfigRule { return v.Rules }).(GetConfigRuleArrayOutput)
}

// The OS user that should be used to discover Java processes.
func (o LookupConfigResultOutput) RunAsUser() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.RunAsUser }).(pulumi.StringOutput)
}

// The name of the service being monitored. This argument enables you to filter by service and view traces and other signals in the APM Explorer user interface.
func (o LookupConfigResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
func (o LookupConfigResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
func (o LookupConfigResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
func (o LookupConfigResultOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.UpdatedBy }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigResultOutput{})
}
