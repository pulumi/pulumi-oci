// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apmconfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigDimension struct {
	// (Updatable) The name of the metric. This must be a known metric name.
	Name *string `pulumi:"name"`
	// (Updatable) This must not be set.
	ValueSource *string `pulumi:"valueSource"`
}

// ConfigDimensionInput is an input type that accepts ConfigDimensionArgs and ConfigDimensionOutput values.
// You can construct a concrete instance of `ConfigDimensionInput` via:
//
//	ConfigDimensionArgs{...}
type ConfigDimensionInput interface {
	pulumi.Input

	ToConfigDimensionOutput() ConfigDimensionOutput
	ToConfigDimensionOutputWithContext(context.Context) ConfigDimensionOutput
}

type ConfigDimensionArgs struct {
	// (Updatable) The name of the metric. This must be a known metric name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) This must not be set.
	ValueSource pulumi.StringPtrInput `pulumi:"valueSource"`
}

func (ConfigDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigDimension)(nil)).Elem()
}

func (i ConfigDimensionArgs) ToConfigDimensionOutput() ConfigDimensionOutput {
	return i.ToConfigDimensionOutputWithContext(context.Background())
}

func (i ConfigDimensionArgs) ToConfigDimensionOutputWithContext(ctx context.Context) ConfigDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigDimensionOutput)
}

// ConfigDimensionArrayInput is an input type that accepts ConfigDimensionArray and ConfigDimensionArrayOutput values.
// You can construct a concrete instance of `ConfigDimensionArrayInput` via:
//
//	ConfigDimensionArray{ ConfigDimensionArgs{...} }
type ConfigDimensionArrayInput interface {
	pulumi.Input

	ToConfigDimensionArrayOutput() ConfigDimensionArrayOutput
	ToConfigDimensionArrayOutputWithContext(context.Context) ConfigDimensionArrayOutput
}

type ConfigDimensionArray []ConfigDimensionInput

func (ConfigDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigDimension)(nil)).Elem()
}

func (i ConfigDimensionArray) ToConfigDimensionArrayOutput() ConfigDimensionArrayOutput {
	return i.ToConfigDimensionArrayOutputWithContext(context.Background())
}

func (i ConfigDimensionArray) ToConfigDimensionArrayOutputWithContext(ctx context.Context) ConfigDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigDimensionArrayOutput)
}

type ConfigDimensionOutput struct{ *pulumi.OutputState }

func (ConfigDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigDimension)(nil)).Elem()
}

func (o ConfigDimensionOutput) ToConfigDimensionOutput() ConfigDimensionOutput {
	return o
}

func (o ConfigDimensionOutput) ToConfigDimensionOutputWithContext(ctx context.Context) ConfigDimensionOutput {
	return o
}

// (Updatable) The name of the metric. This must be a known metric name.
func (o ConfigDimensionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigDimension) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) This must not be set.
func (o ConfigDimensionOutput) ValueSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigDimension) *string { return v.ValueSource }).(pulumi.StringPtrOutput)
}

type ConfigDimensionArrayOutput struct{ *pulumi.OutputState }

func (ConfigDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigDimension)(nil)).Elem()
}

func (o ConfigDimensionArrayOutput) ToConfigDimensionArrayOutput() ConfigDimensionArrayOutput {
	return o
}

func (o ConfigDimensionArrayOutput) ToConfigDimensionArrayOutputWithContext(ctx context.Context) ConfigDimensionArrayOutput {
	return o
}

func (o ConfigDimensionArrayOutput) Index(i pulumi.IntInput) ConfigDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigDimension {
		return vs[0].([]ConfigDimension)[vs[1].(int)]
	}).(ConfigDimensionOutput)
}

type ConfigInUseBy struct {
	// (Updatable) The type of configuration item.
	ConfigType *string `pulumi:"configType"`
	// (Updatable) The name by which a configuration entity is displayed to the end user.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
	Id *string `pulumi:"id"`
	// A string that specifies the group that an OPTIONS item belongs to.
	OptionsGroup *string `pulumi:"optionsGroup"`
}

// ConfigInUseByInput is an input type that accepts ConfigInUseByArgs and ConfigInUseByOutput values.
// You can construct a concrete instance of `ConfigInUseByInput` via:
//
//	ConfigInUseByArgs{...}
type ConfigInUseByInput interface {
	pulumi.Input

	ToConfigInUseByOutput() ConfigInUseByOutput
	ToConfigInUseByOutputWithContext(context.Context) ConfigInUseByOutput
}

type ConfigInUseByArgs struct {
	// (Updatable) The type of configuration item.
	ConfigType pulumi.StringPtrInput `pulumi:"configType"`
	// (Updatable) The name by which a configuration entity is displayed to the end user.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A string that specifies the group that an OPTIONS item belongs to.
	OptionsGroup pulumi.StringPtrInput `pulumi:"optionsGroup"`
}

func (ConfigInUseByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigInUseBy)(nil)).Elem()
}

func (i ConfigInUseByArgs) ToConfigInUseByOutput() ConfigInUseByOutput {
	return i.ToConfigInUseByOutputWithContext(context.Background())
}

func (i ConfigInUseByArgs) ToConfigInUseByOutputWithContext(ctx context.Context) ConfigInUseByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInUseByOutput)
}

// ConfigInUseByArrayInput is an input type that accepts ConfigInUseByArray and ConfigInUseByArrayOutput values.
// You can construct a concrete instance of `ConfigInUseByArrayInput` via:
//
//	ConfigInUseByArray{ ConfigInUseByArgs{...} }
type ConfigInUseByArrayInput interface {
	pulumi.Input

	ToConfigInUseByArrayOutput() ConfigInUseByArrayOutput
	ToConfigInUseByArrayOutputWithContext(context.Context) ConfigInUseByArrayOutput
}

type ConfigInUseByArray []ConfigInUseByInput

func (ConfigInUseByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigInUseBy)(nil)).Elem()
}

func (i ConfigInUseByArray) ToConfigInUseByArrayOutput() ConfigInUseByArrayOutput {
	return i.ToConfigInUseByArrayOutputWithContext(context.Background())
}

func (i ConfigInUseByArray) ToConfigInUseByArrayOutputWithContext(ctx context.Context) ConfigInUseByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigInUseByArrayOutput)
}

type ConfigInUseByOutput struct{ *pulumi.OutputState }

func (ConfigInUseByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigInUseBy)(nil)).Elem()
}

func (o ConfigInUseByOutput) ToConfigInUseByOutput() ConfigInUseByOutput {
	return o
}

func (o ConfigInUseByOutput) ToConfigInUseByOutputWithContext(ctx context.Context) ConfigInUseByOutput {
	return o
}

// (Updatable) The type of configuration item.
func (o ConfigInUseByOutput) ConfigType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigInUseBy) *string { return v.ConfigType }).(pulumi.StringPtrOutput)
}

// (Updatable) The name by which a configuration entity is displayed to the end user.
func (o ConfigInUseByOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigInUseBy) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
func (o ConfigInUseByOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigInUseBy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A string that specifies the group that an OPTIONS item belongs to.
func (o ConfigInUseByOutput) OptionsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigInUseBy) *string { return v.OptionsGroup }).(pulumi.StringPtrOutput)
}

type ConfigInUseByArrayOutput struct{ *pulumi.OutputState }

func (ConfigInUseByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigInUseBy)(nil)).Elem()
}

func (o ConfigInUseByArrayOutput) ToConfigInUseByArrayOutput() ConfigInUseByArrayOutput {
	return o
}

func (o ConfigInUseByArrayOutput) ToConfigInUseByArrayOutputWithContext(ctx context.Context) ConfigInUseByArrayOutput {
	return o
}

func (o ConfigInUseByArrayOutput) Index(i pulumi.IntInput) ConfigInUseByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigInUseBy {
		return vs[0].([]ConfigInUseBy)[vs[1].(int)]
	}).(ConfigInUseByOutput)
}

type ConfigMetric struct {
	// (Updatable) A description of the metric.
	Description *string `pulumi:"description"`
	// (Updatable) The name of the metric. This must be a known metric name.
	Name *string `pulumi:"name"`
	// (Updatable) The unit of the metric.
	Unit *string `pulumi:"unit"`
	// (Updatable) This must not be set.
	ValueSource *string `pulumi:"valueSource"`
}

// ConfigMetricInput is an input type that accepts ConfigMetricArgs and ConfigMetricOutput values.
// You can construct a concrete instance of `ConfigMetricInput` via:
//
//	ConfigMetricArgs{...}
type ConfigMetricInput interface {
	pulumi.Input

	ToConfigMetricOutput() ConfigMetricOutput
	ToConfigMetricOutputWithContext(context.Context) ConfigMetricOutput
}

type ConfigMetricArgs struct {
	// (Updatable) A description of the metric.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) The name of the metric. This must be a known metric name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) The unit of the metric.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// (Updatable) This must not be set.
	ValueSource pulumi.StringPtrInput `pulumi:"valueSource"`
}

func (ConfigMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigMetric)(nil)).Elem()
}

func (i ConfigMetricArgs) ToConfigMetricOutput() ConfigMetricOutput {
	return i.ToConfigMetricOutputWithContext(context.Background())
}

func (i ConfigMetricArgs) ToConfigMetricOutputWithContext(ctx context.Context) ConfigMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigMetricOutput)
}

// ConfigMetricArrayInput is an input type that accepts ConfigMetricArray and ConfigMetricArrayOutput values.
// You can construct a concrete instance of `ConfigMetricArrayInput` via:
//
//	ConfigMetricArray{ ConfigMetricArgs{...} }
type ConfigMetricArrayInput interface {
	pulumi.Input

	ToConfigMetricArrayOutput() ConfigMetricArrayOutput
	ToConfigMetricArrayOutputWithContext(context.Context) ConfigMetricArrayOutput
}

type ConfigMetricArray []ConfigMetricInput

func (ConfigMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigMetric)(nil)).Elem()
}

func (i ConfigMetricArray) ToConfigMetricArrayOutput() ConfigMetricArrayOutput {
	return i.ToConfigMetricArrayOutputWithContext(context.Background())
}

func (i ConfigMetricArray) ToConfigMetricArrayOutputWithContext(ctx context.Context) ConfigMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigMetricArrayOutput)
}

type ConfigMetricOutput struct{ *pulumi.OutputState }

func (ConfigMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigMetric)(nil)).Elem()
}

func (o ConfigMetricOutput) ToConfigMetricOutput() ConfigMetricOutput {
	return o
}

func (o ConfigMetricOutput) ToConfigMetricOutputWithContext(ctx context.Context) ConfigMetricOutput {
	return o
}

// (Updatable) A description of the metric.
func (o ConfigMetricOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigMetric) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) The name of the metric. This must be a known metric name.
func (o ConfigMetricOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigMetric) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) The unit of the metric.
func (o ConfigMetricOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigMetric) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// (Updatable) This must not be set.
func (o ConfigMetricOutput) ValueSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigMetric) *string { return v.ValueSource }).(pulumi.StringPtrOutput)
}

type ConfigMetricArrayOutput struct{ *pulumi.OutputState }

func (ConfigMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigMetric)(nil)).Elem()
}

func (o ConfigMetricArrayOutput) ToConfigMetricArrayOutput() ConfigMetricArrayOutput {
	return o
}

func (o ConfigMetricArrayOutput) ToConfigMetricArrayOutputWithContext(ctx context.Context) ConfigMetricArrayOutput {
	return o
}

func (o ConfigMetricArrayOutput) Index(i pulumi.IntInput) ConfigMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigMetric {
		return vs[0].([]ConfigMetric)[vs[1].(int)]
	}).(ConfigMetricOutput)
}

type ConfigRule struct {
	// (Updatable) The name by which a configuration entity is displayed to the end user.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) The string that defines the Span Filter expression.
	FilterText *string `pulumi:"filterText"`
	// (Updatable) Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
	IsApplyToErrorSpans *bool `pulumi:"isApplyToErrorSpans"`
	// (Updatable) Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
	Priority *int `pulumi:"priority"`
	// (Updatable) The maximum response time in milliseconds that is considered "satisfactory" for the end user.
	SatisfiedResponseTime *int `pulumi:"satisfiedResponseTime"`
	// (Updatable) The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ToleratingResponseTime *int `pulumi:"toleratingResponseTime"`
}

// ConfigRuleInput is an input type that accepts ConfigRuleArgs and ConfigRuleOutput values.
// You can construct a concrete instance of `ConfigRuleInput` via:
//
//	ConfigRuleArgs{...}
type ConfigRuleInput interface {
	pulumi.Input

	ToConfigRuleOutput() ConfigRuleOutput
	ToConfigRuleOutputWithContext(context.Context) ConfigRuleOutput
}

type ConfigRuleArgs struct {
	// (Updatable) The name by which a configuration entity is displayed to the end user.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (Updatable) The string that defines the Span Filter expression.
	FilterText pulumi.StringPtrInput `pulumi:"filterText"`
	// (Updatable) Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
	IsApplyToErrorSpans pulumi.BoolPtrInput `pulumi:"isApplyToErrorSpans"`
	// (Updatable) Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// (Updatable) The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// (Updatable) The maximum response time in milliseconds that is considered "satisfactory" for the end user.
	SatisfiedResponseTime pulumi.IntPtrInput `pulumi:"satisfiedResponseTime"`
	// (Updatable) The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ToleratingResponseTime pulumi.IntPtrInput `pulumi:"toleratingResponseTime"`
}

func (ConfigRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRule)(nil)).Elem()
}

func (i ConfigRuleArgs) ToConfigRuleOutput() ConfigRuleOutput {
	return i.ToConfigRuleOutputWithContext(context.Background())
}

func (i ConfigRuleArgs) ToConfigRuleOutputWithContext(ctx context.Context) ConfigRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleOutput)
}

// ConfigRuleArrayInput is an input type that accepts ConfigRuleArray and ConfigRuleArrayOutput values.
// You can construct a concrete instance of `ConfigRuleArrayInput` via:
//
//	ConfigRuleArray{ ConfigRuleArgs{...} }
type ConfigRuleArrayInput interface {
	pulumi.Input

	ToConfigRuleArrayOutput() ConfigRuleArrayOutput
	ToConfigRuleArrayOutputWithContext(context.Context) ConfigRuleArrayOutput
}

type ConfigRuleArray []ConfigRuleInput

func (ConfigRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigRule)(nil)).Elem()
}

func (i ConfigRuleArray) ToConfigRuleArrayOutput() ConfigRuleArrayOutput {
	return i.ToConfigRuleArrayOutputWithContext(context.Background())
}

func (i ConfigRuleArray) ToConfigRuleArrayOutputWithContext(ctx context.Context) ConfigRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleArrayOutput)
}

type ConfigRuleOutput struct{ *pulumi.OutputState }

func (ConfigRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRule)(nil)).Elem()
}

func (o ConfigRuleOutput) ToConfigRuleOutput() ConfigRuleOutput {
	return o
}

func (o ConfigRuleOutput) ToConfigRuleOutputWithContext(ctx context.Context) ConfigRuleOutput {
	return o
}

// (Updatable) The name by which a configuration entity is displayed to the end user.
func (o ConfigRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// (Updatable) The string that defines the Span Filter expression.
func (o ConfigRuleOutput) FilterText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRule) *string { return v.FilterText }).(pulumi.StringPtrOutput)
}

// (Updatable) Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
func (o ConfigRuleOutput) IsApplyToErrorSpans() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigRule) *bool { return v.IsApplyToErrorSpans }).(pulumi.BoolPtrOutput)
}

// (Updatable) Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
func (o ConfigRuleOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigRule) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
func (o ConfigRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// (Updatable) The maximum response time in milliseconds that is considered "satisfactory" for the end user.
func (o ConfigRuleOutput) SatisfiedResponseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigRule) *int { return v.SatisfiedResponseTime }).(pulumi.IntPtrOutput)
}

// (Updatable) The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ConfigRuleOutput) ToleratingResponseTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigRule) *int { return v.ToleratingResponseTime }).(pulumi.IntPtrOutput)
}

type ConfigRuleArrayOutput struct{ *pulumi.OutputState }

func (ConfigRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigRule)(nil)).Elem()
}

func (o ConfigRuleArrayOutput) ToConfigRuleArrayOutput() ConfigRuleArrayOutput {
	return o
}

func (o ConfigRuleArrayOutput) ToConfigRuleArrayOutputWithContext(ctx context.Context) ConfigRuleArrayOutput {
	return o
}

func (o ConfigRuleArrayOutput) Index(i pulumi.IntInput) ConfigRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigRule {
		return vs[0].([]ConfigRule)[vs[1].(int)]
	}).(ConfigRuleOutput)
}

type GetConfigDimension struct {
	// The name of the metric. This must be a known metric name.
	Name string `pulumi:"name"`
	// This must not be set.
	ValueSource string `pulumi:"valueSource"`
}

// GetConfigDimensionInput is an input type that accepts GetConfigDimensionArgs and GetConfigDimensionOutput values.
// You can construct a concrete instance of `GetConfigDimensionInput` via:
//
//	GetConfigDimensionArgs{...}
type GetConfigDimensionInput interface {
	pulumi.Input

	ToGetConfigDimensionOutput() GetConfigDimensionOutput
	ToGetConfigDimensionOutputWithContext(context.Context) GetConfigDimensionOutput
}

type GetConfigDimensionArgs struct {
	// The name of the metric. This must be a known metric name.
	Name pulumi.StringInput `pulumi:"name"`
	// This must not be set.
	ValueSource pulumi.StringInput `pulumi:"valueSource"`
}

func (GetConfigDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigDimension)(nil)).Elem()
}

func (i GetConfigDimensionArgs) ToGetConfigDimensionOutput() GetConfigDimensionOutput {
	return i.ToGetConfigDimensionOutputWithContext(context.Background())
}

func (i GetConfigDimensionArgs) ToGetConfigDimensionOutputWithContext(ctx context.Context) GetConfigDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigDimensionOutput)
}

// GetConfigDimensionArrayInput is an input type that accepts GetConfigDimensionArray and GetConfigDimensionArrayOutput values.
// You can construct a concrete instance of `GetConfigDimensionArrayInput` via:
//
//	GetConfigDimensionArray{ GetConfigDimensionArgs{...} }
type GetConfigDimensionArrayInput interface {
	pulumi.Input

	ToGetConfigDimensionArrayOutput() GetConfigDimensionArrayOutput
	ToGetConfigDimensionArrayOutputWithContext(context.Context) GetConfigDimensionArrayOutput
}

type GetConfigDimensionArray []GetConfigDimensionInput

func (GetConfigDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigDimension)(nil)).Elem()
}

func (i GetConfigDimensionArray) ToGetConfigDimensionArrayOutput() GetConfigDimensionArrayOutput {
	return i.ToGetConfigDimensionArrayOutputWithContext(context.Background())
}

func (i GetConfigDimensionArray) ToGetConfigDimensionArrayOutputWithContext(ctx context.Context) GetConfigDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigDimensionArrayOutput)
}

type GetConfigDimensionOutput struct{ *pulumi.OutputState }

func (GetConfigDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigDimension)(nil)).Elem()
}

func (o GetConfigDimensionOutput) ToGetConfigDimensionOutput() GetConfigDimensionOutput {
	return o
}

func (o GetConfigDimensionOutput) ToGetConfigDimensionOutputWithContext(ctx context.Context) GetConfigDimensionOutput {
	return o
}

// The name of the metric. This must be a known metric name.
func (o GetConfigDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigDimension) string { return v.Name }).(pulumi.StringOutput)
}

// This must not be set.
func (o GetConfigDimensionOutput) ValueSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigDimension) string { return v.ValueSource }).(pulumi.StringOutput)
}

type GetConfigDimensionArrayOutput struct{ *pulumi.OutputState }

func (GetConfigDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigDimension)(nil)).Elem()
}

func (o GetConfigDimensionArrayOutput) ToGetConfigDimensionArrayOutput() GetConfigDimensionArrayOutput {
	return o
}

func (o GetConfigDimensionArrayOutput) ToGetConfigDimensionArrayOutputWithContext(ctx context.Context) GetConfigDimensionArrayOutput {
	return o
}

func (o GetConfigDimensionArrayOutput) Index(i pulumi.IntInput) GetConfigDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigDimension {
		return vs[0].([]GetConfigDimension)[vs[1].(int)]
	}).(GetConfigDimensionOutput)
}

type GetConfigInUseBy struct {
	// The type of configuration item.
	ConfigType string `pulumi:"configType"`
	// The name by which a configuration entity is displayed to the end user.
	DisplayName string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
	Id string `pulumi:"id"`
	// A string that specifies the group that an OPTIONS item belongs to.
	OptionsGroup string `pulumi:"optionsGroup"`
}

// GetConfigInUseByInput is an input type that accepts GetConfigInUseByArgs and GetConfigInUseByOutput values.
// You can construct a concrete instance of `GetConfigInUseByInput` via:
//
//	GetConfigInUseByArgs{...}
type GetConfigInUseByInput interface {
	pulumi.Input

	ToGetConfigInUseByOutput() GetConfigInUseByOutput
	ToGetConfigInUseByOutputWithContext(context.Context) GetConfigInUseByOutput
}

type GetConfigInUseByArgs struct {
	// The type of configuration item.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// The name by which a configuration entity is displayed to the end user.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
	Id pulumi.StringInput `pulumi:"id"`
	// A string that specifies the group that an OPTIONS item belongs to.
	OptionsGroup pulumi.StringInput `pulumi:"optionsGroup"`
}

func (GetConfigInUseByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigInUseBy)(nil)).Elem()
}

func (i GetConfigInUseByArgs) ToGetConfigInUseByOutput() GetConfigInUseByOutput {
	return i.ToGetConfigInUseByOutputWithContext(context.Background())
}

func (i GetConfigInUseByArgs) ToGetConfigInUseByOutputWithContext(ctx context.Context) GetConfigInUseByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigInUseByOutput)
}

// GetConfigInUseByArrayInput is an input type that accepts GetConfigInUseByArray and GetConfigInUseByArrayOutput values.
// You can construct a concrete instance of `GetConfigInUseByArrayInput` via:
//
//	GetConfigInUseByArray{ GetConfigInUseByArgs{...} }
type GetConfigInUseByArrayInput interface {
	pulumi.Input

	ToGetConfigInUseByArrayOutput() GetConfigInUseByArrayOutput
	ToGetConfigInUseByArrayOutputWithContext(context.Context) GetConfigInUseByArrayOutput
}

type GetConfigInUseByArray []GetConfigInUseByInput

func (GetConfigInUseByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigInUseBy)(nil)).Elem()
}

func (i GetConfigInUseByArray) ToGetConfigInUseByArrayOutput() GetConfigInUseByArrayOutput {
	return i.ToGetConfigInUseByArrayOutputWithContext(context.Background())
}

func (i GetConfigInUseByArray) ToGetConfigInUseByArrayOutputWithContext(ctx context.Context) GetConfigInUseByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigInUseByArrayOutput)
}

type GetConfigInUseByOutput struct{ *pulumi.OutputState }

func (GetConfigInUseByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigInUseBy)(nil)).Elem()
}

func (o GetConfigInUseByOutput) ToGetConfigInUseByOutput() GetConfigInUseByOutput {
	return o
}

func (o GetConfigInUseByOutput) ToGetConfigInUseByOutputWithContext(ctx context.Context) GetConfigInUseByOutput {
	return o
}

// The type of configuration item.
func (o GetConfigInUseByOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigInUseBy) string { return v.ConfigType }).(pulumi.StringOutput)
}

// The name by which a configuration entity is displayed to the end user.
func (o GetConfigInUseByOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigInUseBy) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
func (o GetConfigInUseByOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigInUseBy) string { return v.Id }).(pulumi.StringOutput)
}

// A string that specifies the group that an OPTIONS item belongs to.
func (o GetConfigInUseByOutput) OptionsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigInUseBy) string { return v.OptionsGroup }).(pulumi.StringOutput)
}

type GetConfigInUseByArrayOutput struct{ *pulumi.OutputState }

func (GetConfigInUseByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigInUseBy)(nil)).Elem()
}

func (o GetConfigInUseByArrayOutput) ToGetConfigInUseByArrayOutput() GetConfigInUseByArrayOutput {
	return o
}

func (o GetConfigInUseByArrayOutput) ToGetConfigInUseByArrayOutputWithContext(ctx context.Context) GetConfigInUseByArrayOutput {
	return o
}

func (o GetConfigInUseByArrayOutput) Index(i pulumi.IntInput) GetConfigInUseByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigInUseBy {
		return vs[0].([]GetConfigInUseBy)[vs[1].(int)]
	}).(GetConfigInUseByOutput)
}

type GetConfigMetric struct {
	// A description of the metric.
	Description string `pulumi:"description"`
	// The name of the metric. This must be a known metric name.
	Name string `pulumi:"name"`
	// The unit of the metric.
	Unit string `pulumi:"unit"`
	// This must not be set.
	ValueSource string `pulumi:"valueSource"`
}

// GetConfigMetricInput is an input type that accepts GetConfigMetricArgs and GetConfigMetricOutput values.
// You can construct a concrete instance of `GetConfigMetricInput` via:
//
//	GetConfigMetricArgs{...}
type GetConfigMetricInput interface {
	pulumi.Input

	ToGetConfigMetricOutput() GetConfigMetricOutput
	ToGetConfigMetricOutputWithContext(context.Context) GetConfigMetricOutput
}

type GetConfigMetricArgs struct {
	// A description of the metric.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the metric. This must be a known metric name.
	Name pulumi.StringInput `pulumi:"name"`
	// The unit of the metric.
	Unit pulumi.StringInput `pulumi:"unit"`
	// This must not be set.
	ValueSource pulumi.StringInput `pulumi:"valueSource"`
}

func (GetConfigMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigMetric)(nil)).Elem()
}

func (i GetConfigMetricArgs) ToGetConfigMetricOutput() GetConfigMetricOutput {
	return i.ToGetConfigMetricOutputWithContext(context.Background())
}

func (i GetConfigMetricArgs) ToGetConfigMetricOutputWithContext(ctx context.Context) GetConfigMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigMetricOutput)
}

// GetConfigMetricArrayInput is an input type that accepts GetConfigMetricArray and GetConfigMetricArrayOutput values.
// You can construct a concrete instance of `GetConfigMetricArrayInput` via:
//
//	GetConfigMetricArray{ GetConfigMetricArgs{...} }
type GetConfigMetricArrayInput interface {
	pulumi.Input

	ToGetConfigMetricArrayOutput() GetConfigMetricArrayOutput
	ToGetConfigMetricArrayOutputWithContext(context.Context) GetConfigMetricArrayOutput
}

type GetConfigMetricArray []GetConfigMetricInput

func (GetConfigMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigMetric)(nil)).Elem()
}

func (i GetConfigMetricArray) ToGetConfigMetricArrayOutput() GetConfigMetricArrayOutput {
	return i.ToGetConfigMetricArrayOutputWithContext(context.Background())
}

func (i GetConfigMetricArray) ToGetConfigMetricArrayOutputWithContext(ctx context.Context) GetConfigMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigMetricArrayOutput)
}

type GetConfigMetricOutput struct{ *pulumi.OutputState }

func (GetConfigMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigMetric)(nil)).Elem()
}

func (o GetConfigMetricOutput) ToGetConfigMetricOutput() GetConfigMetricOutput {
	return o
}

func (o GetConfigMetricOutput) ToGetConfigMetricOutputWithContext(ctx context.Context) GetConfigMetricOutput {
	return o
}

// A description of the metric.
func (o GetConfigMetricOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigMetric) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the metric. This must be a known metric name.
func (o GetConfigMetricOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigMetric) string { return v.Name }).(pulumi.StringOutput)
}

// The unit of the metric.
func (o GetConfigMetricOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigMetric) string { return v.Unit }).(pulumi.StringOutput)
}

// This must not be set.
func (o GetConfigMetricOutput) ValueSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigMetric) string { return v.ValueSource }).(pulumi.StringOutput)
}

type GetConfigMetricArrayOutput struct{ *pulumi.OutputState }

func (GetConfigMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigMetric)(nil)).Elem()
}

func (o GetConfigMetricArrayOutput) ToGetConfigMetricArrayOutput() GetConfigMetricArrayOutput {
	return o
}

func (o GetConfigMetricArrayOutput) ToGetConfigMetricArrayOutputWithContext(ctx context.Context) GetConfigMetricArrayOutput {
	return o
}

func (o GetConfigMetricArrayOutput) Index(i pulumi.IntInput) GetConfigMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigMetric {
		return vs[0].([]GetConfigMetric)[vs[1].(int)]
	}).(GetConfigMetricOutput)
}

type GetConfigRule struct {
	// The name by which a configuration entity is displayed to the end user.
	DisplayName string `pulumi:"displayName"`
	// The string that defines the Span Filter expression.
	FilterText string `pulumi:"filterText"`
	// Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
	IsApplyToErrorSpans bool `pulumi:"isApplyToErrorSpans"`
	// Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
	IsEnabled bool `pulumi:"isEnabled"`
	// The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
	Priority int `pulumi:"priority"`
	// The maximum response time in milliseconds that is considered "satisfactory" for the end user.
	SatisfiedResponseTime int `pulumi:"satisfiedResponseTime"`
	// The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
	ToleratingResponseTime int `pulumi:"toleratingResponseTime"`
}

// GetConfigRuleInput is an input type that accepts GetConfigRuleArgs and GetConfigRuleOutput values.
// You can construct a concrete instance of `GetConfigRuleInput` via:
//
//	GetConfigRuleArgs{...}
type GetConfigRuleInput interface {
	pulumi.Input

	ToGetConfigRuleOutput() GetConfigRuleOutput
	ToGetConfigRuleOutputWithContext(context.Context) GetConfigRuleOutput
}

type GetConfigRuleArgs struct {
	// The name by which a configuration entity is displayed to the end user.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The string that defines the Span Filter expression.
	FilterText pulumi.StringInput `pulumi:"filterText"`
	// Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
	IsApplyToErrorSpans pulumi.BoolInput `pulumi:"isApplyToErrorSpans"`
	// Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The maximum response time in milliseconds that is considered "satisfactory" for the end user.
	SatisfiedResponseTime pulumi.IntInput `pulumi:"satisfiedResponseTime"`
	// The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
	ToleratingResponseTime pulumi.IntInput `pulumi:"toleratingResponseTime"`
}

func (GetConfigRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigRule)(nil)).Elem()
}

func (i GetConfigRuleArgs) ToGetConfigRuleOutput() GetConfigRuleOutput {
	return i.ToGetConfigRuleOutputWithContext(context.Background())
}

func (i GetConfigRuleArgs) ToGetConfigRuleOutputWithContext(ctx context.Context) GetConfigRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigRuleOutput)
}

// GetConfigRuleArrayInput is an input type that accepts GetConfigRuleArray and GetConfigRuleArrayOutput values.
// You can construct a concrete instance of `GetConfigRuleArrayInput` via:
//
//	GetConfigRuleArray{ GetConfigRuleArgs{...} }
type GetConfigRuleArrayInput interface {
	pulumi.Input

	ToGetConfigRuleArrayOutput() GetConfigRuleArrayOutput
	ToGetConfigRuleArrayOutputWithContext(context.Context) GetConfigRuleArrayOutput
}

type GetConfigRuleArray []GetConfigRuleInput

func (GetConfigRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigRule)(nil)).Elem()
}

func (i GetConfigRuleArray) ToGetConfigRuleArrayOutput() GetConfigRuleArrayOutput {
	return i.ToGetConfigRuleArrayOutputWithContext(context.Background())
}

func (i GetConfigRuleArray) ToGetConfigRuleArrayOutputWithContext(ctx context.Context) GetConfigRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigRuleArrayOutput)
}

type GetConfigRuleOutput struct{ *pulumi.OutputState }

func (GetConfigRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigRule)(nil)).Elem()
}

func (o GetConfigRuleOutput) ToGetConfigRuleOutput() GetConfigRuleOutput {
	return o
}

func (o GetConfigRuleOutput) ToGetConfigRuleOutputWithContext(ctx context.Context) GetConfigRuleOutput {
	return o
}

// The name by which a configuration entity is displayed to the end user.
func (o GetConfigRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The string that defines the Span Filter expression.
func (o GetConfigRuleOutput) FilterText() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigRule) string { return v.FilterText }).(pulumi.StringOutput)
}

// Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
func (o GetConfigRuleOutput) IsApplyToErrorSpans() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigRule) bool { return v.IsApplyToErrorSpans }).(pulumi.BoolOutput)
}

// Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
func (o GetConfigRuleOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigRule) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
func (o GetConfigRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetConfigRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The maximum response time in milliseconds that is considered "satisfactory" for the end user.
func (o GetConfigRuleOutput) SatisfiedResponseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetConfigRule) int { return v.SatisfiedResponseTime }).(pulumi.IntOutput)
}

// The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
func (o GetConfigRuleOutput) ToleratingResponseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetConfigRule) int { return v.ToleratingResponseTime }).(pulumi.IntOutput)
}

type GetConfigRuleArrayOutput struct{ *pulumi.OutputState }

func (GetConfigRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigRule)(nil)).Elem()
}

func (o GetConfigRuleArrayOutput) ToGetConfigRuleArrayOutput() GetConfigRuleArrayOutput {
	return o
}

func (o GetConfigRuleArrayOutput) ToGetConfigRuleArrayOutputWithContext(ctx context.Context) GetConfigRuleArrayOutput {
	return o
}

func (o GetConfigRuleArrayOutput) Index(i pulumi.IntInput) GetConfigRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigRule {
		return vs[0].([]GetConfigRule)[vs[1].(int)]
	}).(GetConfigRuleOutput)
}

type GetConfigsConfigCollection struct {
	Items []GetConfigsConfigCollectionItem `pulumi:"items"`
}

// GetConfigsConfigCollectionInput is an input type that accepts GetConfigsConfigCollectionArgs and GetConfigsConfigCollectionOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionInput` via:
//
//	GetConfigsConfigCollectionArgs{...}
type GetConfigsConfigCollectionInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionOutput() GetConfigsConfigCollectionOutput
	ToGetConfigsConfigCollectionOutputWithContext(context.Context) GetConfigsConfigCollectionOutput
}

type GetConfigsConfigCollectionArgs struct {
	Items GetConfigsConfigCollectionItemArrayInput `pulumi:"items"`
}

func (GetConfigsConfigCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollection)(nil)).Elem()
}

func (i GetConfigsConfigCollectionArgs) ToGetConfigsConfigCollectionOutput() GetConfigsConfigCollectionOutput {
	return i.ToGetConfigsConfigCollectionOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionArgs) ToGetConfigsConfigCollectionOutputWithContext(ctx context.Context) GetConfigsConfigCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionOutput)
}

// GetConfigsConfigCollectionArrayInput is an input type that accepts GetConfigsConfigCollectionArray and GetConfigsConfigCollectionArrayOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionArrayInput` via:
//
//	GetConfigsConfigCollectionArray{ GetConfigsConfigCollectionArgs{...} }
type GetConfigsConfigCollectionArrayInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionArrayOutput() GetConfigsConfigCollectionArrayOutput
	ToGetConfigsConfigCollectionArrayOutputWithContext(context.Context) GetConfigsConfigCollectionArrayOutput
}

type GetConfigsConfigCollectionArray []GetConfigsConfigCollectionInput

func (GetConfigsConfigCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollection)(nil)).Elem()
}

func (i GetConfigsConfigCollectionArray) ToGetConfigsConfigCollectionArrayOutput() GetConfigsConfigCollectionArrayOutput {
	return i.ToGetConfigsConfigCollectionArrayOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionArray) ToGetConfigsConfigCollectionArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionArrayOutput)
}

type GetConfigsConfigCollectionOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollection)(nil)).Elem()
}

func (o GetConfigsConfigCollectionOutput) ToGetConfigsConfigCollectionOutput() GetConfigsConfigCollectionOutput {
	return o
}

func (o GetConfigsConfigCollectionOutput) ToGetConfigsConfigCollectionOutputWithContext(ctx context.Context) GetConfigsConfigCollectionOutput {
	return o
}

func (o GetConfigsConfigCollectionOutput) Items() GetConfigsConfigCollectionItemArrayOutput {
	return o.ApplyT(func(v GetConfigsConfigCollection) []GetConfigsConfigCollectionItem { return v.Items }).(GetConfigsConfigCollectionItemArrayOutput)
}

type GetConfigsConfigCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollection)(nil)).Elem()
}

func (o GetConfigsConfigCollectionArrayOutput) ToGetConfigsConfigCollectionArrayOutput() GetConfigsConfigCollectionArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionArrayOutput) ToGetConfigsConfigCollectionArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionArrayOutput) Index(i pulumi.IntInput) GetConfigsConfigCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigsConfigCollection {
		return vs[0].([]GetConfigsConfigCollection)[vs[1].(int)]
	}).(GetConfigsConfigCollectionOutput)
}

type GetConfigsConfigCollectionItem struct {
	// The APM Domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// A filter to match configuration items of a given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
	ConfigType string `pulumi:"configType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	CreatedBy string `pulumi:"createdBy"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A description of the metric.
	Description string `pulumi:"description"`
	// A list of dimensions for the metric. This variable should not be used.
	Dimensions []GetConfigsConfigCollectionItemDimension `pulumi:"dimensions"`
	// A filter to return resources that match the given display name.
	DisplayName string `pulumi:"displayName"`
	// For optimistic concurrency control. See `if-match`.
	Etag string `pulumi:"etag"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
	FilterId string `pulumi:"filterId"`
	// The string that defines the Span Filter expression.
	FilterText string `pulumi:"filterText"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A string that specifies the group that an OPTIONS item belongs to.
	Group string `pulumi:"group"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
	Id string `pulumi:"id"`
	// The list of configuration items that reference the span filter.
	InUseBies []GetConfigsConfigCollectionItemInUseBy `pulumi:"inUseBies"`
	// The list of metrics in this group.
	Metrics []GetConfigsConfigCollectionItemMetric `pulumi:"metrics"`
	// The namespace to which the metrics are published. It must be one of several predefined namespaces.
	Namespace string `pulumi:"namespace"`
	OpcDryRun string `pulumi:"opcDryRun"`
	// The options are stored here as JSON.
	Options string                               `pulumi:"options"`
	Rules   []GetConfigsConfigCollectionItemRule `pulumi:"rules"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	UpdatedBy string `pulumi:"updatedBy"`
}

// GetConfigsConfigCollectionItemInput is an input type that accepts GetConfigsConfigCollectionItemArgs and GetConfigsConfigCollectionItemOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionItemInput` via:
//
//	GetConfigsConfigCollectionItemArgs{...}
type GetConfigsConfigCollectionItemInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionItemOutput() GetConfigsConfigCollectionItemOutput
	ToGetConfigsConfigCollectionItemOutputWithContext(context.Context) GetConfigsConfigCollectionItemOutput
}

type GetConfigsConfigCollectionItemArgs struct {
	// The APM Domain ID the request is intended for.
	ApmDomainId pulumi.StringInput `pulumi:"apmDomainId"`
	// A filter to match configuration items of a given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A description of the metric.
	Description pulumi.StringInput `pulumi:"description"`
	// A list of dimensions for the metric. This variable should not be used.
	Dimensions GetConfigsConfigCollectionItemDimensionArrayInput `pulumi:"dimensions"`
	// A filter to return resources that match the given display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// For optimistic concurrency control. See `if-match`.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
	FilterId pulumi.StringInput `pulumi:"filterId"`
	// The string that defines the Span Filter expression.
	FilterText pulumi.StringInput `pulumi:"filterText"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A string that specifies the group that an OPTIONS item belongs to.
	Group pulumi.StringInput `pulumi:"group"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
	Id pulumi.StringInput `pulumi:"id"`
	// The list of configuration items that reference the span filter.
	InUseBies GetConfigsConfigCollectionItemInUseByArrayInput `pulumi:"inUseBies"`
	// The list of metrics in this group.
	Metrics GetConfigsConfigCollectionItemMetricArrayInput `pulumi:"metrics"`
	// The namespace to which the metrics are published. It must be one of several predefined namespaces.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	OpcDryRun pulumi.StringInput `pulumi:"opcDryRun"`
	// The options are stored here as JSON.
	Options pulumi.StringInput                           `pulumi:"options"`
	Rules   GetConfigsConfigCollectionItemRuleArrayInput `pulumi:"rules"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
	UpdatedBy pulumi.StringInput `pulumi:"updatedBy"`
}

func (GetConfigsConfigCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollectionItem)(nil)).Elem()
}

func (i GetConfigsConfigCollectionItemArgs) ToGetConfigsConfigCollectionItemOutput() GetConfigsConfigCollectionItemOutput {
	return i.ToGetConfigsConfigCollectionItemOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionItemArgs) ToGetConfigsConfigCollectionItemOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionItemOutput)
}

// GetConfigsConfigCollectionItemArrayInput is an input type that accepts GetConfigsConfigCollectionItemArray and GetConfigsConfigCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionItemArrayInput` via:
//
//	GetConfigsConfigCollectionItemArray{ GetConfigsConfigCollectionItemArgs{...} }
type GetConfigsConfigCollectionItemArrayInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionItemArrayOutput() GetConfigsConfigCollectionItemArrayOutput
	ToGetConfigsConfigCollectionItemArrayOutputWithContext(context.Context) GetConfigsConfigCollectionItemArrayOutput
}

type GetConfigsConfigCollectionItemArray []GetConfigsConfigCollectionItemInput

func (GetConfigsConfigCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollectionItem)(nil)).Elem()
}

func (i GetConfigsConfigCollectionItemArray) ToGetConfigsConfigCollectionItemArrayOutput() GetConfigsConfigCollectionItemArrayOutput {
	return i.ToGetConfigsConfigCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionItemArray) ToGetConfigsConfigCollectionItemArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionItemArrayOutput)
}

type GetConfigsConfigCollectionItemOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollectionItem)(nil)).Elem()
}

func (o GetConfigsConfigCollectionItemOutput) ToGetConfigsConfigCollectionItemOutput() GetConfigsConfigCollectionItemOutput {
	return o
}

func (o GetConfigsConfigCollectionItemOutput) ToGetConfigsConfigCollectionItemOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemOutput {
	return o
}

// The APM Domain ID the request is intended for.
func (o GetConfigsConfigCollectionItemOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.ApmDomainId }).(pulumi.StringOutput)
}

// A filter to match configuration items of a given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
func (o GetConfigsConfigCollectionItemOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.ConfigType }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
func (o GetConfigsConfigCollectionItemOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetConfigsConfigCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A description of the metric.
func (o GetConfigsConfigCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A list of dimensions for the metric. This variable should not be used.
func (o GetConfigsConfigCollectionItemOutput) Dimensions() GetConfigsConfigCollectionItemDimensionArrayOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) []GetConfigsConfigCollectionItemDimension { return v.Dimensions }).(GetConfigsConfigCollectionItemDimensionArrayOutput)
}

// A filter to return resources that match the given display name.
func (o GetConfigsConfigCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// For optimistic concurrency control. See `if-match`.
func (o GetConfigsConfigCollectionItemOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.Etag }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
func (o GetConfigsConfigCollectionItemOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.FilterId }).(pulumi.StringOutput)
}

// The string that defines the Span Filter expression.
func (o GetConfigsConfigCollectionItemOutput) FilterText() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.FilterText }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetConfigsConfigCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A string that specifies the group that an OPTIONS item belongs to.
func (o GetConfigsConfigCollectionItemOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.Group }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
func (o GetConfigsConfigCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The list of configuration items that reference the span filter.
func (o GetConfigsConfigCollectionItemOutput) InUseBies() GetConfigsConfigCollectionItemInUseByArrayOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) []GetConfigsConfigCollectionItemInUseBy { return v.InUseBies }).(GetConfigsConfigCollectionItemInUseByArrayOutput)
}

// The list of metrics in this group.
func (o GetConfigsConfigCollectionItemOutput) Metrics() GetConfigsConfigCollectionItemMetricArrayOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) []GetConfigsConfigCollectionItemMetric { return v.Metrics }).(GetConfigsConfigCollectionItemMetricArrayOutput)
}

// The namespace to which the metrics are published. It must be one of several predefined namespaces.
func (o GetConfigsConfigCollectionItemOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o GetConfigsConfigCollectionItemOutput) OpcDryRun() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.OpcDryRun }).(pulumi.StringOutput)
}

// The options are stored here as JSON.
func (o GetConfigsConfigCollectionItemOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.Options }).(pulumi.StringOutput)
}

func (o GetConfigsConfigCollectionItemOutput) Rules() GetConfigsConfigCollectionItemRuleArrayOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) []GetConfigsConfigCollectionItemRule { return v.Rules }).(GetConfigsConfigCollectionItemRuleArrayOutput)
}

// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
func (o GetConfigsConfigCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
func (o GetConfigsConfigCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
func (o GetConfigsConfigCollectionItemOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItem) string { return v.UpdatedBy }).(pulumi.StringOutput)
}

type GetConfigsConfigCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollectionItem)(nil)).Elem()
}

func (o GetConfigsConfigCollectionItemArrayOutput) ToGetConfigsConfigCollectionItemArrayOutput() GetConfigsConfigCollectionItemArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionItemArrayOutput) ToGetConfigsConfigCollectionItemArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionItemArrayOutput) Index(i pulumi.IntInput) GetConfigsConfigCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigsConfigCollectionItem {
		return vs[0].([]GetConfigsConfigCollectionItem)[vs[1].(int)]
	}).(GetConfigsConfigCollectionItemOutput)
}

type GetConfigsConfigCollectionItemDimension struct {
	// The name of the metric. This must be a known metric name.
	Name string `pulumi:"name"`
	// This must not be set.
	ValueSource string `pulumi:"valueSource"`
}

// GetConfigsConfigCollectionItemDimensionInput is an input type that accepts GetConfigsConfigCollectionItemDimensionArgs and GetConfigsConfigCollectionItemDimensionOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionItemDimensionInput` via:
//
//	GetConfigsConfigCollectionItemDimensionArgs{...}
type GetConfigsConfigCollectionItemDimensionInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionItemDimensionOutput() GetConfigsConfigCollectionItemDimensionOutput
	ToGetConfigsConfigCollectionItemDimensionOutputWithContext(context.Context) GetConfigsConfigCollectionItemDimensionOutput
}

type GetConfigsConfigCollectionItemDimensionArgs struct {
	// The name of the metric. This must be a known metric name.
	Name pulumi.StringInput `pulumi:"name"`
	// This must not be set.
	ValueSource pulumi.StringInput `pulumi:"valueSource"`
}

func (GetConfigsConfigCollectionItemDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollectionItemDimension)(nil)).Elem()
}

func (i GetConfigsConfigCollectionItemDimensionArgs) ToGetConfigsConfigCollectionItemDimensionOutput() GetConfigsConfigCollectionItemDimensionOutput {
	return i.ToGetConfigsConfigCollectionItemDimensionOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionItemDimensionArgs) ToGetConfigsConfigCollectionItemDimensionOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionItemDimensionOutput)
}

// GetConfigsConfigCollectionItemDimensionArrayInput is an input type that accepts GetConfigsConfigCollectionItemDimensionArray and GetConfigsConfigCollectionItemDimensionArrayOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionItemDimensionArrayInput` via:
//
//	GetConfigsConfigCollectionItemDimensionArray{ GetConfigsConfigCollectionItemDimensionArgs{...} }
type GetConfigsConfigCollectionItemDimensionArrayInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionItemDimensionArrayOutput() GetConfigsConfigCollectionItemDimensionArrayOutput
	ToGetConfigsConfigCollectionItemDimensionArrayOutputWithContext(context.Context) GetConfigsConfigCollectionItemDimensionArrayOutput
}

type GetConfigsConfigCollectionItemDimensionArray []GetConfigsConfigCollectionItemDimensionInput

func (GetConfigsConfigCollectionItemDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollectionItemDimension)(nil)).Elem()
}

func (i GetConfigsConfigCollectionItemDimensionArray) ToGetConfigsConfigCollectionItemDimensionArrayOutput() GetConfigsConfigCollectionItemDimensionArrayOutput {
	return i.ToGetConfigsConfigCollectionItemDimensionArrayOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionItemDimensionArray) ToGetConfigsConfigCollectionItemDimensionArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionItemDimensionArrayOutput)
}

type GetConfigsConfigCollectionItemDimensionOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionItemDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollectionItemDimension)(nil)).Elem()
}

func (o GetConfigsConfigCollectionItemDimensionOutput) ToGetConfigsConfigCollectionItemDimensionOutput() GetConfigsConfigCollectionItemDimensionOutput {
	return o
}

func (o GetConfigsConfigCollectionItemDimensionOutput) ToGetConfigsConfigCollectionItemDimensionOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemDimensionOutput {
	return o
}

// The name of the metric. This must be a known metric name.
func (o GetConfigsConfigCollectionItemDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemDimension) string { return v.Name }).(pulumi.StringOutput)
}

// This must not be set.
func (o GetConfigsConfigCollectionItemDimensionOutput) ValueSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemDimension) string { return v.ValueSource }).(pulumi.StringOutput)
}

type GetConfigsConfigCollectionItemDimensionArrayOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionItemDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollectionItemDimension)(nil)).Elem()
}

func (o GetConfigsConfigCollectionItemDimensionArrayOutput) ToGetConfigsConfigCollectionItemDimensionArrayOutput() GetConfigsConfigCollectionItemDimensionArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionItemDimensionArrayOutput) ToGetConfigsConfigCollectionItemDimensionArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemDimensionArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionItemDimensionArrayOutput) Index(i pulumi.IntInput) GetConfigsConfigCollectionItemDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigsConfigCollectionItemDimension {
		return vs[0].([]GetConfigsConfigCollectionItemDimension)[vs[1].(int)]
	}).(GetConfigsConfigCollectionItemDimensionOutput)
}

type GetConfigsConfigCollectionItemInUseBy struct {
	// A filter to match configuration items of a given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
	ConfigType string `pulumi:"configType"`
	// A filter to return resources that match the given display name.
	DisplayName string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
	Id string `pulumi:"id"`
	// A filter to return OPTIONS resources that match the given group.
	OptionsGroup string `pulumi:"optionsGroup"`
}

// GetConfigsConfigCollectionItemInUseByInput is an input type that accepts GetConfigsConfigCollectionItemInUseByArgs and GetConfigsConfigCollectionItemInUseByOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionItemInUseByInput` via:
//
//	GetConfigsConfigCollectionItemInUseByArgs{...}
type GetConfigsConfigCollectionItemInUseByInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionItemInUseByOutput() GetConfigsConfigCollectionItemInUseByOutput
	ToGetConfigsConfigCollectionItemInUseByOutputWithContext(context.Context) GetConfigsConfigCollectionItemInUseByOutput
}

type GetConfigsConfigCollectionItemInUseByArgs struct {
	// A filter to match configuration items of a given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// A filter to return resources that match the given display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
	Id pulumi.StringInput `pulumi:"id"`
	// A filter to return OPTIONS resources that match the given group.
	OptionsGroup pulumi.StringInput `pulumi:"optionsGroup"`
}

func (GetConfigsConfigCollectionItemInUseByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollectionItemInUseBy)(nil)).Elem()
}

func (i GetConfigsConfigCollectionItemInUseByArgs) ToGetConfigsConfigCollectionItemInUseByOutput() GetConfigsConfigCollectionItemInUseByOutput {
	return i.ToGetConfigsConfigCollectionItemInUseByOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionItemInUseByArgs) ToGetConfigsConfigCollectionItemInUseByOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemInUseByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionItemInUseByOutput)
}

// GetConfigsConfigCollectionItemInUseByArrayInput is an input type that accepts GetConfigsConfigCollectionItemInUseByArray and GetConfigsConfigCollectionItemInUseByArrayOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionItemInUseByArrayInput` via:
//
//	GetConfigsConfigCollectionItemInUseByArray{ GetConfigsConfigCollectionItemInUseByArgs{...} }
type GetConfigsConfigCollectionItemInUseByArrayInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionItemInUseByArrayOutput() GetConfigsConfigCollectionItemInUseByArrayOutput
	ToGetConfigsConfigCollectionItemInUseByArrayOutputWithContext(context.Context) GetConfigsConfigCollectionItemInUseByArrayOutput
}

type GetConfigsConfigCollectionItemInUseByArray []GetConfigsConfigCollectionItemInUseByInput

func (GetConfigsConfigCollectionItemInUseByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollectionItemInUseBy)(nil)).Elem()
}

func (i GetConfigsConfigCollectionItemInUseByArray) ToGetConfigsConfigCollectionItemInUseByArrayOutput() GetConfigsConfigCollectionItemInUseByArrayOutput {
	return i.ToGetConfigsConfigCollectionItemInUseByArrayOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionItemInUseByArray) ToGetConfigsConfigCollectionItemInUseByArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemInUseByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionItemInUseByArrayOutput)
}

type GetConfigsConfigCollectionItemInUseByOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionItemInUseByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollectionItemInUseBy)(nil)).Elem()
}

func (o GetConfigsConfigCollectionItemInUseByOutput) ToGetConfigsConfigCollectionItemInUseByOutput() GetConfigsConfigCollectionItemInUseByOutput {
	return o
}

func (o GetConfigsConfigCollectionItemInUseByOutput) ToGetConfigsConfigCollectionItemInUseByOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemInUseByOutput {
	return o
}

// A filter to match configuration items of a given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
func (o GetConfigsConfigCollectionItemInUseByOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemInUseBy) string { return v.ConfigType }).(pulumi.StringOutput)
}

// A filter to return resources that match the given display name.
func (o GetConfigsConfigCollectionItemInUseByOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemInUseBy) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration item. An OCID is generated when the item is created.
func (o GetConfigsConfigCollectionItemInUseByOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemInUseBy) string { return v.Id }).(pulumi.StringOutput)
}

// A filter to return OPTIONS resources that match the given group.
func (o GetConfigsConfigCollectionItemInUseByOutput) OptionsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemInUseBy) string { return v.OptionsGroup }).(pulumi.StringOutput)
}

type GetConfigsConfigCollectionItemInUseByArrayOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionItemInUseByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollectionItemInUseBy)(nil)).Elem()
}

func (o GetConfigsConfigCollectionItemInUseByArrayOutput) ToGetConfigsConfigCollectionItemInUseByArrayOutput() GetConfigsConfigCollectionItemInUseByArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionItemInUseByArrayOutput) ToGetConfigsConfigCollectionItemInUseByArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemInUseByArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionItemInUseByArrayOutput) Index(i pulumi.IntInput) GetConfigsConfigCollectionItemInUseByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigsConfigCollectionItemInUseBy {
		return vs[0].([]GetConfigsConfigCollectionItemInUseBy)[vs[1].(int)]
	}).(GetConfigsConfigCollectionItemInUseByOutput)
}

type GetConfigsConfigCollectionItemMetric struct {
	// A description of the metric.
	Description string `pulumi:"description"`
	// The name of the metric. This must be a known metric name.
	Name string `pulumi:"name"`
	// The unit of the metric.
	Unit string `pulumi:"unit"`
	// This must not be set.
	ValueSource string `pulumi:"valueSource"`
}

// GetConfigsConfigCollectionItemMetricInput is an input type that accepts GetConfigsConfigCollectionItemMetricArgs and GetConfigsConfigCollectionItemMetricOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionItemMetricInput` via:
//
//	GetConfigsConfigCollectionItemMetricArgs{...}
type GetConfigsConfigCollectionItemMetricInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionItemMetricOutput() GetConfigsConfigCollectionItemMetricOutput
	ToGetConfigsConfigCollectionItemMetricOutputWithContext(context.Context) GetConfigsConfigCollectionItemMetricOutput
}

type GetConfigsConfigCollectionItemMetricArgs struct {
	// A description of the metric.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the metric. This must be a known metric name.
	Name pulumi.StringInput `pulumi:"name"`
	// The unit of the metric.
	Unit pulumi.StringInput `pulumi:"unit"`
	// This must not be set.
	ValueSource pulumi.StringInput `pulumi:"valueSource"`
}

func (GetConfigsConfigCollectionItemMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollectionItemMetric)(nil)).Elem()
}

func (i GetConfigsConfigCollectionItemMetricArgs) ToGetConfigsConfigCollectionItemMetricOutput() GetConfigsConfigCollectionItemMetricOutput {
	return i.ToGetConfigsConfigCollectionItemMetricOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionItemMetricArgs) ToGetConfigsConfigCollectionItemMetricOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionItemMetricOutput)
}

// GetConfigsConfigCollectionItemMetricArrayInput is an input type that accepts GetConfigsConfigCollectionItemMetricArray and GetConfigsConfigCollectionItemMetricArrayOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionItemMetricArrayInput` via:
//
//	GetConfigsConfigCollectionItemMetricArray{ GetConfigsConfigCollectionItemMetricArgs{...} }
type GetConfigsConfigCollectionItemMetricArrayInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionItemMetricArrayOutput() GetConfigsConfigCollectionItemMetricArrayOutput
	ToGetConfigsConfigCollectionItemMetricArrayOutputWithContext(context.Context) GetConfigsConfigCollectionItemMetricArrayOutput
}

type GetConfigsConfigCollectionItemMetricArray []GetConfigsConfigCollectionItemMetricInput

func (GetConfigsConfigCollectionItemMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollectionItemMetric)(nil)).Elem()
}

func (i GetConfigsConfigCollectionItemMetricArray) ToGetConfigsConfigCollectionItemMetricArrayOutput() GetConfigsConfigCollectionItemMetricArrayOutput {
	return i.ToGetConfigsConfigCollectionItemMetricArrayOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionItemMetricArray) ToGetConfigsConfigCollectionItemMetricArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionItemMetricArrayOutput)
}

type GetConfigsConfigCollectionItemMetricOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionItemMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollectionItemMetric)(nil)).Elem()
}

func (o GetConfigsConfigCollectionItemMetricOutput) ToGetConfigsConfigCollectionItemMetricOutput() GetConfigsConfigCollectionItemMetricOutput {
	return o
}

func (o GetConfigsConfigCollectionItemMetricOutput) ToGetConfigsConfigCollectionItemMetricOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemMetricOutput {
	return o
}

// A description of the metric.
func (o GetConfigsConfigCollectionItemMetricOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemMetric) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the metric. This must be a known metric name.
func (o GetConfigsConfigCollectionItemMetricOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemMetric) string { return v.Name }).(pulumi.StringOutput)
}

// The unit of the metric.
func (o GetConfigsConfigCollectionItemMetricOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemMetric) string { return v.Unit }).(pulumi.StringOutput)
}

// This must not be set.
func (o GetConfigsConfigCollectionItemMetricOutput) ValueSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemMetric) string { return v.ValueSource }).(pulumi.StringOutput)
}

type GetConfigsConfigCollectionItemMetricArrayOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionItemMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollectionItemMetric)(nil)).Elem()
}

func (o GetConfigsConfigCollectionItemMetricArrayOutput) ToGetConfigsConfigCollectionItemMetricArrayOutput() GetConfigsConfigCollectionItemMetricArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionItemMetricArrayOutput) ToGetConfigsConfigCollectionItemMetricArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemMetricArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionItemMetricArrayOutput) Index(i pulumi.IntInput) GetConfigsConfigCollectionItemMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigsConfigCollectionItemMetric {
		return vs[0].([]GetConfigsConfigCollectionItemMetric)[vs[1].(int)]
	}).(GetConfigsConfigCollectionItemMetricOutput)
}

type GetConfigsConfigCollectionItemRule struct {
	// A filter to return resources that match the given display name.
	DisplayName string `pulumi:"displayName"`
	// The string that defines the Span Filter expression.
	FilterText string `pulumi:"filterText"`
	// Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
	IsApplyToErrorSpans bool `pulumi:"isApplyToErrorSpans"`
	// Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
	IsEnabled bool `pulumi:"isEnabled"`
	// The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
	Priority int `pulumi:"priority"`
	// The maximum response time in milliseconds that is considered "satisfactory" for the end user.
	SatisfiedResponseTime int `pulumi:"satisfiedResponseTime"`
	// The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
	ToleratingResponseTime int `pulumi:"toleratingResponseTime"`
}

// GetConfigsConfigCollectionItemRuleInput is an input type that accepts GetConfigsConfigCollectionItemRuleArgs and GetConfigsConfigCollectionItemRuleOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionItemRuleInput` via:
//
//	GetConfigsConfigCollectionItemRuleArgs{...}
type GetConfigsConfigCollectionItemRuleInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionItemRuleOutput() GetConfigsConfigCollectionItemRuleOutput
	ToGetConfigsConfigCollectionItemRuleOutputWithContext(context.Context) GetConfigsConfigCollectionItemRuleOutput
}

type GetConfigsConfigCollectionItemRuleArgs struct {
	// A filter to return resources that match the given display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The string that defines the Span Filter expression.
	FilterText pulumi.StringInput `pulumi:"filterText"`
	// Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
	IsApplyToErrorSpans pulumi.BoolInput `pulumi:"isApplyToErrorSpans"`
	// Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The maximum response time in milliseconds that is considered "satisfactory" for the end user.
	SatisfiedResponseTime pulumi.IntInput `pulumi:"satisfiedResponseTime"`
	// The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
	ToleratingResponseTime pulumi.IntInput `pulumi:"toleratingResponseTime"`
}

func (GetConfigsConfigCollectionItemRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollectionItemRule)(nil)).Elem()
}

func (i GetConfigsConfigCollectionItemRuleArgs) ToGetConfigsConfigCollectionItemRuleOutput() GetConfigsConfigCollectionItemRuleOutput {
	return i.ToGetConfigsConfigCollectionItemRuleOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionItemRuleArgs) ToGetConfigsConfigCollectionItemRuleOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionItemRuleOutput)
}

// GetConfigsConfigCollectionItemRuleArrayInput is an input type that accepts GetConfigsConfigCollectionItemRuleArray and GetConfigsConfigCollectionItemRuleArrayOutput values.
// You can construct a concrete instance of `GetConfigsConfigCollectionItemRuleArrayInput` via:
//
//	GetConfigsConfigCollectionItemRuleArray{ GetConfigsConfigCollectionItemRuleArgs{...} }
type GetConfigsConfigCollectionItemRuleArrayInput interface {
	pulumi.Input

	ToGetConfigsConfigCollectionItemRuleArrayOutput() GetConfigsConfigCollectionItemRuleArrayOutput
	ToGetConfigsConfigCollectionItemRuleArrayOutputWithContext(context.Context) GetConfigsConfigCollectionItemRuleArrayOutput
}

type GetConfigsConfigCollectionItemRuleArray []GetConfigsConfigCollectionItemRuleInput

func (GetConfigsConfigCollectionItemRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollectionItemRule)(nil)).Elem()
}

func (i GetConfigsConfigCollectionItemRuleArray) ToGetConfigsConfigCollectionItemRuleArrayOutput() GetConfigsConfigCollectionItemRuleArrayOutput {
	return i.ToGetConfigsConfigCollectionItemRuleArrayOutputWithContext(context.Background())
}

func (i GetConfigsConfigCollectionItemRuleArray) ToGetConfigsConfigCollectionItemRuleArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigCollectionItemRuleArrayOutput)
}

type GetConfigsConfigCollectionItemRuleOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionItemRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfigCollectionItemRule)(nil)).Elem()
}

func (o GetConfigsConfigCollectionItemRuleOutput) ToGetConfigsConfigCollectionItemRuleOutput() GetConfigsConfigCollectionItemRuleOutput {
	return o
}

func (o GetConfigsConfigCollectionItemRuleOutput) ToGetConfigsConfigCollectionItemRuleOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemRuleOutput {
	return o
}

// A filter to return resources that match the given display name.
func (o GetConfigsConfigCollectionItemRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The string that defines the Span Filter expression.
func (o GetConfigsConfigCollectionItemRuleOutput) FilterText() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemRule) string { return v.FilterText }).(pulumi.StringOutput)
}

// Specifies whether an Apdex score should be computed for error spans. Setting it to "true" means that the Apdex score is computed in the usual way. Setting it to "false" skips the Apdex computation and sets the Apdex score to "frustrating" regardless of the configured thresholds. The default is "false".
func (o GetConfigsConfigCollectionItemRuleOutput) IsApplyToErrorSpans() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemRule) bool { return v.IsApplyToErrorSpans }).(pulumi.BoolOutput)
}

// Specifies whether the Apdex score should be computed for spans matching the rule. This can be used to disable Apdex score for spans that do not need or require it. The default is "true".
func (o GetConfigsConfigCollectionItemRuleOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemRule) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The priority controls the order in which multiple rules in a rule set are applied. Lower values indicate higher priorities. Rules with higher priority are applied first, and once a match is found, the rest of the rules are ignored. Rules within the same rule set cannot have the same priority.
func (o GetConfigsConfigCollectionItemRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The maximum response time in milliseconds that is considered "satisfactory" for the end user.
func (o GetConfigsConfigCollectionItemRuleOutput) SatisfiedResponseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemRule) int { return v.SatisfiedResponseTime }).(pulumi.IntOutput)
}

// The maximum response time in milliseconds that is considered "tolerable" for the end user. A response time beyond this threshold is considered "frustrating". This value cannot be lower than "satisfiedResponseTime".
func (o GetConfigsConfigCollectionItemRuleOutput) ToleratingResponseTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetConfigsConfigCollectionItemRule) int { return v.ToleratingResponseTime }).(pulumi.IntOutput)
}

type GetConfigsConfigCollectionItemRuleArrayOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigCollectionItemRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfigCollectionItemRule)(nil)).Elem()
}

func (o GetConfigsConfigCollectionItemRuleArrayOutput) ToGetConfigsConfigCollectionItemRuleArrayOutput() GetConfigsConfigCollectionItemRuleArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionItemRuleArrayOutput) ToGetConfigsConfigCollectionItemRuleArrayOutputWithContext(ctx context.Context) GetConfigsConfigCollectionItemRuleArrayOutput {
	return o
}

func (o GetConfigsConfigCollectionItemRuleArrayOutput) Index(i pulumi.IntInput) GetConfigsConfigCollectionItemRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigsConfigCollectionItemRule {
		return vs[0].([]GetConfigsConfigCollectionItemRule)[vs[1].(int)]
	}).(GetConfigsConfigCollectionItemRuleOutput)
}

type GetConfigsFilter struct {
	// The name of the metric. This must be a known metric name.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetConfigsFilterInput is an input type that accepts GetConfigsFilterArgs and GetConfigsFilterOutput values.
// You can construct a concrete instance of `GetConfigsFilterInput` via:
//
//	GetConfigsFilterArgs{...}
type GetConfigsFilterInput interface {
	pulumi.Input

	ToGetConfigsFilterOutput() GetConfigsFilterOutput
	ToGetConfigsFilterOutputWithContext(context.Context) GetConfigsFilterOutput
}

type GetConfigsFilterArgs struct {
	// The name of the metric. This must be a known metric name.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConfigsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsFilter)(nil)).Elem()
}

func (i GetConfigsFilterArgs) ToGetConfigsFilterOutput() GetConfigsFilterOutput {
	return i.ToGetConfigsFilterOutputWithContext(context.Background())
}

func (i GetConfigsFilterArgs) ToGetConfigsFilterOutputWithContext(ctx context.Context) GetConfigsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsFilterOutput)
}

// GetConfigsFilterArrayInput is an input type that accepts GetConfigsFilterArray and GetConfigsFilterArrayOutput values.
// You can construct a concrete instance of `GetConfigsFilterArrayInput` via:
//
//	GetConfigsFilterArray{ GetConfigsFilterArgs{...} }
type GetConfigsFilterArrayInput interface {
	pulumi.Input

	ToGetConfigsFilterArrayOutput() GetConfigsFilterArrayOutput
	ToGetConfigsFilterArrayOutputWithContext(context.Context) GetConfigsFilterArrayOutput
}

type GetConfigsFilterArray []GetConfigsFilterInput

func (GetConfigsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsFilter)(nil)).Elem()
}

func (i GetConfigsFilterArray) ToGetConfigsFilterArrayOutput() GetConfigsFilterArrayOutput {
	return i.ToGetConfigsFilterArrayOutputWithContext(context.Background())
}

func (i GetConfigsFilterArray) ToGetConfigsFilterArrayOutputWithContext(ctx context.Context) GetConfigsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsFilterArrayOutput)
}

type GetConfigsFilterOutput struct{ *pulumi.OutputState }

func (GetConfigsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsFilter)(nil)).Elem()
}

func (o GetConfigsFilterOutput) ToGetConfigsFilterOutput() GetConfigsFilterOutput {
	return o
}

func (o GetConfigsFilterOutput) ToGetConfigsFilterOutputWithContext(ctx context.Context) GetConfigsFilterOutput {
	return o
}

// The name of the metric. This must be a known metric name.
func (o GetConfigsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConfigsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetConfigsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetConfigsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConfigsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConfigsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConfigsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsFilter)(nil)).Elem()
}

func (o GetConfigsFilterArrayOutput) ToGetConfigsFilterArrayOutput() GetConfigsFilterArrayOutput {
	return o
}

func (o GetConfigsFilterArrayOutput) ToGetConfigsFilterArrayOutputWithContext(ctx context.Context) GetConfigsFilterArrayOutput {
	return o
}

func (o GetConfigsFilterArrayOutput) Index(i pulumi.IntInput) GetConfigsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigsFilter {
		return vs[0].([]GetConfigsFilter)[vs[1].(int)]
	}).(GetConfigsFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigDimensionInput)(nil)).Elem(), ConfigDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigDimensionArrayInput)(nil)).Elem(), ConfigDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInUseByInput)(nil)).Elem(), ConfigInUseByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInUseByArrayInput)(nil)).Elem(), ConfigInUseByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigMetricInput)(nil)).Elem(), ConfigMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigMetricArrayInput)(nil)).Elem(), ConfigMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleInput)(nil)).Elem(), ConfigRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleArrayInput)(nil)).Elem(), ConfigRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigDimensionInput)(nil)).Elem(), GetConfigDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigDimensionArrayInput)(nil)).Elem(), GetConfigDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigInUseByInput)(nil)).Elem(), GetConfigInUseByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigInUseByArrayInput)(nil)).Elem(), GetConfigInUseByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigMetricInput)(nil)).Elem(), GetConfigMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigMetricArrayInput)(nil)).Elem(), GetConfigMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigRuleInput)(nil)).Elem(), GetConfigRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigRuleArrayInput)(nil)).Elem(), GetConfigRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionInput)(nil)).Elem(), GetConfigsConfigCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionArrayInput)(nil)).Elem(), GetConfigsConfigCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionItemInput)(nil)).Elem(), GetConfigsConfigCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionItemArrayInput)(nil)).Elem(), GetConfigsConfigCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionItemDimensionInput)(nil)).Elem(), GetConfigsConfigCollectionItemDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionItemDimensionArrayInput)(nil)).Elem(), GetConfigsConfigCollectionItemDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionItemInUseByInput)(nil)).Elem(), GetConfigsConfigCollectionItemInUseByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionItemInUseByArrayInput)(nil)).Elem(), GetConfigsConfigCollectionItemInUseByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionItemMetricInput)(nil)).Elem(), GetConfigsConfigCollectionItemMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionItemMetricArrayInput)(nil)).Elem(), GetConfigsConfigCollectionItemMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionItemRuleInput)(nil)).Elem(), GetConfigsConfigCollectionItemRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigCollectionItemRuleArrayInput)(nil)).Elem(), GetConfigsConfigCollectionItemRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsFilterInput)(nil)).Elem(), GetConfigsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsFilterArrayInput)(nil)).Elem(), GetConfigsFilterArray{})
	pulumi.RegisterOutputType(ConfigDimensionOutput{})
	pulumi.RegisterOutputType(ConfigDimensionArrayOutput{})
	pulumi.RegisterOutputType(ConfigInUseByOutput{})
	pulumi.RegisterOutputType(ConfigInUseByArrayOutput{})
	pulumi.RegisterOutputType(ConfigMetricOutput{})
	pulumi.RegisterOutputType(ConfigMetricArrayOutput{})
	pulumi.RegisterOutputType(ConfigRuleOutput{})
	pulumi.RegisterOutputType(ConfigRuleArrayOutput{})
	pulumi.RegisterOutputType(GetConfigDimensionOutput{})
	pulumi.RegisterOutputType(GetConfigDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetConfigInUseByOutput{})
	pulumi.RegisterOutputType(GetConfigInUseByArrayOutput{})
	pulumi.RegisterOutputType(GetConfigMetricOutput{})
	pulumi.RegisterOutputType(GetConfigMetricArrayOutput{})
	pulumi.RegisterOutputType(GetConfigRuleOutput{})
	pulumi.RegisterOutputType(GetConfigRuleArrayOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionItemOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionItemDimensionOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionItemDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionItemInUseByOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionItemInUseByArrayOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionItemMetricOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionItemMetricArrayOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionItemRuleOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigCollectionItemRuleArrayOutput{})
	pulumi.RegisterOutputType(GetConfigsFilterOutput{})
	pulumi.RegisterOutputType(GetConfigsFilterArrayOutput{})
}
