// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apmsynthetics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Dedicated Vantage Point resource in Oracle Cloud Infrastructure APM Availability Monitoring service (aka APM Synthetics Service).
//
// Registers a new dedicated vantage point.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/apmsynthetics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apmsynthetics.NewDedicatedVantagePoint(ctx, "test_dedicated_vantage_point", &apmsynthetics.DedicatedVantagePointArgs{
//				ApmDomainId: pulumi.Any(testApmDomain.Id),
//				DisplayName: pulumi.Any(dedicatedVantagePointDisplayName),
//				DvpStackDetails: &apmsynthetics.DedicatedVantagePointDvpStackDetailsArgs{
//					DvpStackId:   pulumi.Any(testStack.Id),
//					DvpStackType: pulumi.Any(dedicatedVantagePointDvpStackDetailsDvpStackType),
//					DvpStreamId:  pulumi.Any(testStream.Id),
//					DvpVersion:   pulumi.Any(dedicatedVantagePointDvpStackDetailsDvpVersion),
//				},
//				Region: pulumi.Any(dedicatedVantagePointRegion),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				Status: pulumi.Any(dedicatedVantagePointStatus),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DedicatedVantagePoints can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:ApmSynthetics/dedicatedVantagePoint:DedicatedVantagePoint test_dedicated_vantage_point "dedicatedVantagePoints/{dedicatedVantagePointId}/apmDomainId/{apmDomainId}"
// ```
type DedicatedVantagePoint struct {
	pulumi.CustomResourceState

	// (Updatable) The APM domain ID the request is intended for.
	ApmDomainId pulumi.StringOutput `pulumi:"apmDomainId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
	DvpStackDetails DedicatedVantagePointDvpStackDetailsOutput `pulumi:"dvpStackDetails"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
	MonitorStatusCountMaps DedicatedVantagePointMonitorStatusCountMapArrayOutput `pulumi:"monitorStatusCountMaps"`
	// Unique permanent name of the dedicated vantage point. This is the same as the displayName.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) Name of the region.
	Region pulumi.StringOutput `pulumi:"region"`
	// (Updatable) Status of the dedicated vantage point.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status pulumi.StringOutput `pulumi:"status"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewDedicatedVantagePoint registers a new resource with the given unique name, arguments, and options.
func NewDedicatedVantagePoint(ctx *pulumi.Context,
	name string, args *DedicatedVantagePointArgs, opts ...pulumi.ResourceOption) (*DedicatedVantagePoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApmDomainId == nil {
		return nil, errors.New("invalid value for required argument 'ApmDomainId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.DvpStackDetails == nil {
		return nil, errors.New("invalid value for required argument 'DvpStackDetails'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DedicatedVantagePoint
	err := ctx.RegisterResource("oci:ApmSynthetics/dedicatedVantagePoint:DedicatedVantagePoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDedicatedVantagePoint gets an existing DedicatedVantagePoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDedicatedVantagePoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DedicatedVantagePointState, opts ...pulumi.ResourceOption) (*DedicatedVantagePoint, error) {
	var resource DedicatedVantagePoint
	err := ctx.ReadResource("oci:ApmSynthetics/dedicatedVantagePoint:DedicatedVantagePoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DedicatedVantagePoint resources.
type dedicatedVantagePointState struct {
	// (Updatable) The APM domain ID the request is intended for.
	ApmDomainId *string `pulumi:"apmDomainId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
	DvpStackDetails *DedicatedVantagePointDvpStackDetails `pulumi:"dvpStackDetails"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
	MonitorStatusCountMaps []DedicatedVantagePointMonitorStatusCountMap `pulumi:"monitorStatusCountMaps"`
	// Unique permanent name of the dedicated vantage point. This is the same as the displayName.
	Name *string `pulumi:"name"`
	// (Updatable) Name of the region.
	Region *string `pulumi:"region"`
	// (Updatable) Status of the dedicated vantage point.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status *string `pulumi:"status"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type DedicatedVantagePointState struct {
	// (Updatable) The APM domain ID the request is intended for.
	ApmDomainId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
	DvpStackDetails DedicatedVantagePointDvpStackDetailsPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
	MonitorStatusCountMaps DedicatedVantagePointMonitorStatusCountMapArrayInput
	// Unique permanent name of the dedicated vantage point. This is the same as the displayName.
	Name pulumi.StringPtrInput
	// (Updatable) Name of the region.
	Region pulumi.StringPtrInput
	// (Updatable) Status of the dedicated vantage point.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status pulumi.StringPtrInput
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringPtrInput
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated pulumi.StringPtrInput
}

func (DedicatedVantagePointState) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedVantagePointState)(nil)).Elem()
}

type dedicatedVantagePointArgs struct {
	// (Updatable) The APM domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
	DvpStackDetails DedicatedVantagePointDvpStackDetails `pulumi:"dvpStackDetails"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Name of the region.
	Region string `pulumi:"region"`
	// (Updatable) Status of the dedicated vantage point.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a DedicatedVantagePoint resource.
type DedicatedVantagePointArgs struct {
	// (Updatable) The APM domain ID the request is intended for.
	ApmDomainId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
	DvpStackDetails DedicatedVantagePointDvpStackDetailsInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Name of the region.
	Region pulumi.StringInput
	// (Updatable) Status of the dedicated vantage point.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Status pulumi.StringPtrInput
}

func (DedicatedVantagePointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedVantagePointArgs)(nil)).Elem()
}

type DedicatedVantagePointInput interface {
	pulumi.Input

	ToDedicatedVantagePointOutput() DedicatedVantagePointOutput
	ToDedicatedVantagePointOutputWithContext(ctx context.Context) DedicatedVantagePointOutput
}

func (*DedicatedVantagePoint) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedVantagePoint)(nil)).Elem()
}

func (i *DedicatedVantagePoint) ToDedicatedVantagePointOutput() DedicatedVantagePointOutput {
	return i.ToDedicatedVantagePointOutputWithContext(context.Background())
}

func (i *DedicatedVantagePoint) ToDedicatedVantagePointOutputWithContext(ctx context.Context) DedicatedVantagePointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedVantagePointOutput)
}

// DedicatedVantagePointArrayInput is an input type that accepts DedicatedVantagePointArray and DedicatedVantagePointArrayOutput values.
// You can construct a concrete instance of `DedicatedVantagePointArrayInput` via:
//
//	DedicatedVantagePointArray{ DedicatedVantagePointArgs{...} }
type DedicatedVantagePointArrayInput interface {
	pulumi.Input

	ToDedicatedVantagePointArrayOutput() DedicatedVantagePointArrayOutput
	ToDedicatedVantagePointArrayOutputWithContext(context.Context) DedicatedVantagePointArrayOutput
}

type DedicatedVantagePointArray []DedicatedVantagePointInput

func (DedicatedVantagePointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DedicatedVantagePoint)(nil)).Elem()
}

func (i DedicatedVantagePointArray) ToDedicatedVantagePointArrayOutput() DedicatedVantagePointArrayOutput {
	return i.ToDedicatedVantagePointArrayOutputWithContext(context.Background())
}

func (i DedicatedVantagePointArray) ToDedicatedVantagePointArrayOutputWithContext(ctx context.Context) DedicatedVantagePointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedVantagePointArrayOutput)
}

// DedicatedVantagePointMapInput is an input type that accepts DedicatedVantagePointMap and DedicatedVantagePointMapOutput values.
// You can construct a concrete instance of `DedicatedVantagePointMapInput` via:
//
//	DedicatedVantagePointMap{ "key": DedicatedVantagePointArgs{...} }
type DedicatedVantagePointMapInput interface {
	pulumi.Input

	ToDedicatedVantagePointMapOutput() DedicatedVantagePointMapOutput
	ToDedicatedVantagePointMapOutputWithContext(context.Context) DedicatedVantagePointMapOutput
}

type DedicatedVantagePointMap map[string]DedicatedVantagePointInput

func (DedicatedVantagePointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DedicatedVantagePoint)(nil)).Elem()
}

func (i DedicatedVantagePointMap) ToDedicatedVantagePointMapOutput() DedicatedVantagePointMapOutput {
	return i.ToDedicatedVantagePointMapOutputWithContext(context.Background())
}

func (i DedicatedVantagePointMap) ToDedicatedVantagePointMapOutputWithContext(ctx context.Context) DedicatedVantagePointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedVantagePointMapOutput)
}

type DedicatedVantagePointOutput struct{ *pulumi.OutputState }

func (DedicatedVantagePointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedVantagePoint)(nil)).Elem()
}

func (o DedicatedVantagePointOutput) ToDedicatedVantagePointOutput() DedicatedVantagePointOutput {
	return o
}

func (o DedicatedVantagePointOutput) ToDedicatedVantagePointOutputWithContext(ctx context.Context) DedicatedVantagePointOutput {
	return o
}

// (Updatable) The APM domain ID the request is intended for.
func (o DedicatedVantagePointOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedVantagePoint) pulumi.StringOutput { return v.ApmDomainId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o DedicatedVantagePointOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DedicatedVantagePoint) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
func (o DedicatedVantagePointOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedVantagePoint) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
func (o DedicatedVantagePointOutput) DvpStackDetails() DedicatedVantagePointDvpStackDetailsOutput {
	return o.ApplyT(func(v *DedicatedVantagePoint) DedicatedVantagePointDvpStackDetailsOutput { return v.DvpStackDetails }).(DedicatedVantagePointDvpStackDetailsOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o DedicatedVantagePointOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DedicatedVantagePoint) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
func (o DedicatedVantagePointOutput) MonitorStatusCountMaps() DedicatedVantagePointMonitorStatusCountMapArrayOutput {
	return o.ApplyT(func(v *DedicatedVantagePoint) DedicatedVantagePointMonitorStatusCountMapArrayOutput {
		return v.MonitorStatusCountMaps
	}).(DedicatedVantagePointMonitorStatusCountMapArrayOutput)
}

// Unique permanent name of the dedicated vantage point. This is the same as the displayName.
func (o DedicatedVantagePointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedVantagePoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) Name of the region.
func (o DedicatedVantagePointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedVantagePoint) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// (Updatable) Status of the dedicated vantage point.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DedicatedVantagePointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedVantagePoint) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
func (o DedicatedVantagePointOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedVantagePoint) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
func (o DedicatedVantagePointOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *DedicatedVantagePoint) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type DedicatedVantagePointArrayOutput struct{ *pulumi.OutputState }

func (DedicatedVantagePointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DedicatedVantagePoint)(nil)).Elem()
}

func (o DedicatedVantagePointArrayOutput) ToDedicatedVantagePointArrayOutput() DedicatedVantagePointArrayOutput {
	return o
}

func (o DedicatedVantagePointArrayOutput) ToDedicatedVantagePointArrayOutputWithContext(ctx context.Context) DedicatedVantagePointArrayOutput {
	return o
}

func (o DedicatedVantagePointArrayOutput) Index(i pulumi.IntInput) DedicatedVantagePointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DedicatedVantagePoint {
		return vs[0].([]*DedicatedVantagePoint)[vs[1].(int)]
	}).(DedicatedVantagePointOutput)
}

type DedicatedVantagePointMapOutput struct{ *pulumi.OutputState }

func (DedicatedVantagePointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DedicatedVantagePoint)(nil)).Elem()
}

func (o DedicatedVantagePointMapOutput) ToDedicatedVantagePointMapOutput() DedicatedVantagePointMapOutput {
	return o
}

func (o DedicatedVantagePointMapOutput) ToDedicatedVantagePointMapOutputWithContext(ctx context.Context) DedicatedVantagePointMapOutput {
	return o
}

func (o DedicatedVantagePointMapOutput) MapIndex(k pulumi.StringInput) DedicatedVantagePointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DedicatedVantagePoint {
		return vs[0].(map[string]*DedicatedVantagePoint)[vs[1].(string)]
	}).(DedicatedVantagePointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedVantagePointInput)(nil)).Elem(), &DedicatedVantagePoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedVantagePointArrayInput)(nil)).Elem(), DedicatedVantagePointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedVantagePointMapInput)(nil)).Elem(), DedicatedVantagePointMap{})
	pulumi.RegisterOutputType(DedicatedVantagePointOutput{})
	pulumi.RegisterOutputType(DedicatedVantagePointArrayOutput{})
	pulumi.RegisterOutputType(DedicatedVantagePointMapOutput{})
}
