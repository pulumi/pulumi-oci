// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apmsynthetics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Dedicated Vantage Points in Oracle Cloud Infrastructure APM Availability Monitoring service (aka APM Synthetics Service).
//
// Returns a list of dedicated vantage points.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/apmsynthetics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apmsynthetics.GetDedicatedVantagePoints(ctx, &apmsynthetics.GetDedicatedVantagePointsArgs{
//				ApmDomainId: testApmDomain.Id,
//				DisplayName: pulumi.StringRef(dedicatedVantagePointDisplayName),
//				Name:        pulumi.StringRef(dedicatedVantagePointName),
//				Status:      pulumi.StringRef(dedicatedVantagePointStatus),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDedicatedVantagePoints(ctx *pulumi.Context, args *GetDedicatedVantagePointsArgs, opts ...pulumi.InvokeOption) (*GetDedicatedVantagePointsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDedicatedVantagePointsResult
	err := ctx.Invoke("oci:ApmSynthetics/getDedicatedVantagePoints:getDedicatedVantagePoints", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDedicatedVantagePoints.
type GetDedicatedVantagePointsArgs struct {
	// The APM domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// A filter to return only the resources that match the entire display name.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetDedicatedVantagePointsFilter `pulumi:"filters"`
	// A filter to return only the resources that match the entire name.
	Name *string `pulumi:"name"`
	// A filter to return only the dedicated vantage points that match a given status.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getDedicatedVantagePoints.
type GetDedicatedVantagePointsResult struct {
	ApmDomainId string `pulumi:"apmDomainId"`
	// The list of dedicated_vantage_point_collection.
	DedicatedVantagePointCollections []GetDedicatedVantagePointsDedicatedVantagePointCollection `pulumi:"dedicatedVantagePointCollections"`
	// Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetDedicatedVantagePointsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique permanent name of the dedicated vantage point. This is the same as the displayName.
	Name *string `pulumi:"name"`
	// Status of the dedicated vantage point.
	Status *string `pulumi:"status"`
}

func GetDedicatedVantagePointsOutput(ctx *pulumi.Context, args GetDedicatedVantagePointsOutputArgs, opts ...pulumi.InvokeOption) GetDedicatedVantagePointsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDedicatedVantagePointsResultOutput, error) {
			args := v.(GetDedicatedVantagePointsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ApmSynthetics/getDedicatedVantagePoints:getDedicatedVantagePoints", args, GetDedicatedVantagePointsResultOutput{}, options).(GetDedicatedVantagePointsResultOutput), nil
		}).(GetDedicatedVantagePointsResultOutput)
}

// A collection of arguments for invoking getDedicatedVantagePoints.
type GetDedicatedVantagePointsOutputArgs struct {
	// The APM domain ID the request is intended for.
	ApmDomainId pulumi.StringInput `pulumi:"apmDomainId"`
	// A filter to return only the resources that match the entire display name.
	DisplayName pulumi.StringPtrInput                     `pulumi:"displayName"`
	Filters     GetDedicatedVantagePointsFilterArrayInput `pulumi:"filters"`
	// A filter to return only the resources that match the entire name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only the dedicated vantage points that match a given status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetDedicatedVantagePointsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsArgs)(nil)).Elem()
}

// A collection of values returned by getDedicatedVantagePoints.
type GetDedicatedVantagePointsResultOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsResult)(nil)).Elem()
}

func (o GetDedicatedVantagePointsResultOutput) ToGetDedicatedVantagePointsResultOutput() GetDedicatedVantagePointsResultOutput {
	return o
}

func (o GetDedicatedVantagePointsResultOutput) ToGetDedicatedVantagePointsResultOutputWithContext(ctx context.Context) GetDedicatedVantagePointsResultOutput {
	return o
}

func (o GetDedicatedVantagePointsResultOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsResult) string { return v.ApmDomainId }).(pulumi.StringOutput)
}

// The list of dedicated_vantage_point_collection.
func (o GetDedicatedVantagePointsResultOutput) DedicatedVantagePointCollections() GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsResult) []GetDedicatedVantagePointsDedicatedVantagePointCollection {
		return v.DedicatedVantagePointCollections
	}).(GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput)
}

// Unique dedicated vantage point name that cannot be edited. The name should not contain any confidential information.
func (o GetDedicatedVantagePointsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDedicatedVantagePointsResultOutput) Filters() GetDedicatedVantagePointsFilterArrayOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsResult) []GetDedicatedVantagePointsFilter { return v.Filters }).(GetDedicatedVantagePointsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDedicatedVantagePointsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique permanent name of the dedicated vantage point. This is the same as the displayName.
func (o GetDedicatedVantagePointsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Status of the dedicated vantage point.
func (o GetDedicatedVantagePointsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDedicatedVantagePointsResultOutput{})
}
