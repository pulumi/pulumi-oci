// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apmsynthetics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Scripts in Oracle Cloud Infrastructure Apm Synthetics service.
//
// Returns a list of scripts.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ApmSynthetics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ApmSynthetics.GetScripts(ctx, &apmsynthetics.GetScriptsArgs{
//				ApmDomainId: testApmDomain.Id,
//				ContentType: pulumi.StringRef(scriptContentType),
//				DisplayName: pulumi.StringRef(scriptDisplayName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetScripts(ctx *pulumi.Context, args *GetScriptsArgs, opts ...pulumi.InvokeOption) (*GetScriptsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetScriptsResult
	err := ctx.Invoke("oci:ApmSynthetics/getScripts:getScripts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScripts.
type GetScriptsArgs struct {
	// The APM domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// A filter to return only resources that match the content type given.
	ContentType *string `pulumi:"contentType"`
	// A filter to return only the resources that match the entire display name.
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetScriptsFilter `pulumi:"filters"`
}

// A collection of values returned by getScripts.
type GetScriptsResult struct {
	ApmDomainId string `pulumi:"apmDomainId"`
	// Content type of the script.
	ContentType *string `pulumi:"contentType"`
	// Unique name that can be edited. The name should not contain any confidential information.
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetScriptsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of script_collection.
	ScriptCollections []GetScriptsScriptCollection `pulumi:"scriptCollections"`
}

func GetScriptsOutput(ctx *pulumi.Context, args GetScriptsOutputArgs, opts ...pulumi.InvokeOption) GetScriptsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetScriptsResult, error) {
			args := v.(GetScriptsArgs)
			r, err := GetScripts(ctx, &args, opts...)
			var s GetScriptsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetScriptsResultOutput)
}

// A collection of arguments for invoking getScripts.
type GetScriptsOutputArgs struct {
	// The APM domain ID the request is intended for.
	ApmDomainId pulumi.StringInput `pulumi:"apmDomainId"`
	// A filter to return only resources that match the content type given.
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// A filter to return only the resources that match the entire display name.
	DisplayName pulumi.StringPtrInput      `pulumi:"displayName"`
	Filters     GetScriptsFilterArrayInput `pulumi:"filters"`
}

func (GetScriptsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsArgs)(nil)).Elem()
}

// A collection of values returned by getScripts.
type GetScriptsResultOutput struct{ *pulumi.OutputState }

func (GetScriptsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsResult)(nil)).Elem()
}

func (o GetScriptsResultOutput) ToGetScriptsResultOutput() GetScriptsResultOutput {
	return o
}

func (o GetScriptsResultOutput) ToGetScriptsResultOutputWithContext(ctx context.Context) GetScriptsResultOutput {
	return o
}

func (o GetScriptsResultOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsResult) string { return v.ApmDomainId }).(pulumi.StringOutput)
}

// Content type of the script.
func (o GetScriptsResultOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScriptsResult) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// Unique name that can be edited. The name should not contain any confidential information.
func (o GetScriptsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScriptsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetScriptsResultOutput) Filters() GetScriptsFilterArrayOutput {
	return o.ApplyT(func(v GetScriptsResult) []GetScriptsFilter { return v.Filters }).(GetScriptsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetScriptsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of script_collection.
func (o GetScriptsResultOutput) ScriptCollections() GetScriptsScriptCollectionArrayOutput {
	return o.ApplyT(func(v GetScriptsResult) []GetScriptsScriptCollection { return v.ScriptCollections }).(GetScriptsScriptCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetScriptsResultOutput{})
}
