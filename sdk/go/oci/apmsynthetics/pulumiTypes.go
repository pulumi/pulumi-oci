// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apmsynthetics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigConfiguration struct {
	// (Updatable) Type of configuration.
	ConfigType *string `pulumi:"configType"`
	// (Updatable) Dns settings.
	DnsConfiguration *ConfigConfigurationDnsConfiguration `pulumi:"dnsConfiguration"`
	// (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled *bool `pulumi:"isCertificateValidationEnabled"`
	// (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried *bool `pulumi:"isFailureRetried"`
	// (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled *bool `pulumi:"isRedirectionEnabled"`
	// (Updatable) Details of the network configuration.
	NetworkConfiguration *ConfigConfigurationNetworkConfiguration `pulumi:"networkConfiguration"`
	// (Updatable) Details for request HTTP authentication.
	ReqAuthenticationDetails *ConfigConfigurationReqAuthenticationDetails `pulumi:"reqAuthenticationDetails"`
	// (Updatable) Request http authentication scheme.
	ReqAuthenticationScheme *string `pulumi:"reqAuthenticationScheme"`
	// (Updatable) List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders []ConfigConfigurationRequestHeader `pulumi:"requestHeaders"`
	// (Updatable) Request HTTP method.
	RequestMethod *string `pulumi:"requestMethod"`
	// (Updatable) Request post body content.
	RequestPostBody *string `pulumi:"requestPostBody"`
	// (Updatable) List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams []ConfigConfigurationRequestQueryParam `pulumi:"requestQueryParams"`
	// (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes []string `pulumi:"verifyResponseCodes"`
	// (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent *string `pulumi:"verifyResponseContent"`
	// (Updatable) Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts []ConfigConfigurationVerifyText `pulumi:"verifyTexts"`
}

// ConfigConfigurationInput is an input type that accepts ConfigConfigurationArgs and ConfigConfigurationOutput values.
// You can construct a concrete instance of `ConfigConfigurationInput` via:
//
//	ConfigConfigurationArgs{...}
type ConfigConfigurationInput interface {
	pulumi.Input

	ToConfigConfigurationOutput() ConfigConfigurationOutput
	ToConfigConfigurationOutputWithContext(context.Context) ConfigConfigurationOutput
}

type ConfigConfigurationArgs struct {
	// (Updatable) Type of configuration.
	ConfigType pulumi.StringPtrInput `pulumi:"configType"`
	// (Updatable) Dns settings.
	DnsConfiguration ConfigConfigurationDnsConfigurationPtrInput `pulumi:"dnsConfiguration"`
	// (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled pulumi.BoolPtrInput `pulumi:"isCertificateValidationEnabled"`
	// (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried pulumi.BoolPtrInput `pulumi:"isFailureRetried"`
	// (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled pulumi.BoolPtrInput `pulumi:"isRedirectionEnabled"`
	// (Updatable) Details of the network configuration.
	NetworkConfiguration ConfigConfigurationNetworkConfigurationPtrInput `pulumi:"networkConfiguration"`
	// (Updatable) Details for request HTTP authentication.
	ReqAuthenticationDetails ConfigConfigurationReqAuthenticationDetailsPtrInput `pulumi:"reqAuthenticationDetails"`
	// (Updatable) Request http authentication scheme.
	ReqAuthenticationScheme pulumi.StringPtrInput `pulumi:"reqAuthenticationScheme"`
	// (Updatable) List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders ConfigConfigurationRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// (Updatable) Request HTTP method.
	RequestMethod pulumi.StringPtrInput `pulumi:"requestMethod"`
	// (Updatable) Request post body content.
	RequestPostBody pulumi.StringPtrInput `pulumi:"requestPostBody"`
	// (Updatable) List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams ConfigConfigurationRequestQueryParamArrayInput `pulumi:"requestQueryParams"`
	// (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes pulumi.StringArrayInput `pulumi:"verifyResponseCodes"`
	// (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent pulumi.StringPtrInput `pulumi:"verifyResponseContent"`
	// (Updatable) Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts ConfigConfigurationVerifyTextArrayInput `pulumi:"verifyTexts"`
}

func (ConfigConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfiguration)(nil)).Elem()
}

func (i ConfigConfigurationArgs) ToConfigConfigurationOutput() ConfigConfigurationOutput {
	return i.ToConfigConfigurationOutputWithContext(context.Background())
}

func (i ConfigConfigurationArgs) ToConfigConfigurationOutputWithContext(ctx context.Context) ConfigConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationOutput)
}

func (i ConfigConfigurationArgs) ToConfigConfigurationPtrOutput() ConfigConfigurationPtrOutput {
	return i.ToConfigConfigurationPtrOutputWithContext(context.Background())
}

func (i ConfigConfigurationArgs) ToConfigConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationOutput).ToConfigConfigurationPtrOutputWithContext(ctx)
}

// ConfigConfigurationPtrInput is an input type that accepts ConfigConfigurationArgs, ConfigConfigurationPtr and ConfigConfigurationPtrOutput values.
// You can construct a concrete instance of `ConfigConfigurationPtrInput` via:
//
//	        ConfigConfigurationArgs{...}
//
//	or:
//
//	        nil
type ConfigConfigurationPtrInput interface {
	pulumi.Input

	ToConfigConfigurationPtrOutput() ConfigConfigurationPtrOutput
	ToConfigConfigurationPtrOutputWithContext(context.Context) ConfigConfigurationPtrOutput
}

type configConfigurationPtrType ConfigConfigurationArgs

func ConfigConfigurationPtr(v *ConfigConfigurationArgs) ConfigConfigurationPtrInput {
	return (*configConfigurationPtrType)(v)
}

func (*configConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigConfiguration)(nil)).Elem()
}

func (i *configConfigurationPtrType) ToConfigConfigurationPtrOutput() ConfigConfigurationPtrOutput {
	return i.ToConfigConfigurationPtrOutputWithContext(context.Background())
}

func (i *configConfigurationPtrType) ToConfigConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationPtrOutput)
}

type ConfigConfigurationOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfiguration)(nil)).Elem()
}

func (o ConfigConfigurationOutput) ToConfigConfigurationOutput() ConfigConfigurationOutput {
	return o
}

func (o ConfigConfigurationOutput) ToConfigConfigurationOutputWithContext(ctx context.Context) ConfigConfigurationOutput {
	return o
}

func (o ConfigConfigurationOutput) ToConfigConfigurationPtrOutput() ConfigConfigurationPtrOutput {
	return o.ToConfigConfigurationPtrOutputWithContext(context.Background())
}

func (o ConfigConfigurationOutput) ToConfigConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigConfiguration) *ConfigConfiguration {
		return &v
	}).(ConfigConfigurationPtrOutput)
}

// (Updatable) Type of configuration.
func (o ConfigConfigurationOutput) ConfigType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfiguration) *string { return v.ConfigType }).(pulumi.StringPtrOutput)
}

// (Updatable) Dns settings.
func (o ConfigConfigurationOutput) DnsConfiguration() ConfigConfigurationDnsConfigurationPtrOutput {
	return o.ApplyT(func(v ConfigConfiguration) *ConfigConfigurationDnsConfiguration { return v.DnsConfiguration }).(ConfigConfigurationDnsConfigurationPtrOutput)
}

// (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
func (o ConfigConfigurationOutput) IsCertificateValidationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigConfiguration) *bool { return v.IsCertificateValidationEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
func (o ConfigConfigurationOutput) IsFailureRetried() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigConfiguration) *bool { return v.IsFailureRetried }).(pulumi.BoolPtrOutput)
}

// (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
func (o ConfigConfigurationOutput) IsRedirectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigConfiguration) *bool { return v.IsRedirectionEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) Details of the network configuration.
func (o ConfigConfigurationOutput) NetworkConfiguration() ConfigConfigurationNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v ConfigConfiguration) *ConfigConfigurationNetworkConfiguration { return v.NetworkConfiguration }).(ConfigConfigurationNetworkConfigurationPtrOutput)
}

// (Updatable) Details for request HTTP authentication.
func (o ConfigConfigurationOutput) ReqAuthenticationDetails() ConfigConfigurationReqAuthenticationDetailsPtrOutput {
	return o.ApplyT(func(v ConfigConfiguration) *ConfigConfigurationReqAuthenticationDetails {
		return v.ReqAuthenticationDetails
	}).(ConfigConfigurationReqAuthenticationDetailsPtrOutput)
}

// (Updatable) Request http authentication scheme.
func (o ConfigConfigurationOutput) ReqAuthenticationScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfiguration) *string { return v.ReqAuthenticationScheme }).(pulumi.StringPtrOutput)
}

// (Updatable) List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o ConfigConfigurationOutput) RequestHeaders() ConfigConfigurationRequestHeaderArrayOutput {
	return o.ApplyT(func(v ConfigConfiguration) []ConfigConfigurationRequestHeader { return v.RequestHeaders }).(ConfigConfigurationRequestHeaderArrayOutput)
}

// (Updatable) Request HTTP method.
func (o ConfigConfigurationOutput) RequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfiguration) *string { return v.RequestMethod }).(pulumi.StringPtrOutput)
}

// (Updatable) Request post body content.
func (o ConfigConfigurationOutput) RequestPostBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfiguration) *string { return v.RequestPostBody }).(pulumi.StringPtrOutput)
}

// (Updatable) List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
func (o ConfigConfigurationOutput) RequestQueryParams() ConfigConfigurationRequestQueryParamArrayOutput {
	return o.ApplyT(func(v ConfigConfiguration) []ConfigConfigurationRequestQueryParam { return v.RequestQueryParams }).(ConfigConfigurationRequestQueryParamArrayOutput)
}

// (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
func (o ConfigConfigurationOutput) VerifyResponseCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigConfiguration) []string { return v.VerifyResponseCodes }).(pulumi.StringArrayOutput)
}

// (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
func (o ConfigConfigurationOutput) VerifyResponseContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfiguration) *string { return v.VerifyResponseContent }).(pulumi.StringPtrOutput)
}

// (Updatable) Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
func (o ConfigConfigurationOutput) VerifyTexts() ConfigConfigurationVerifyTextArrayOutput {
	return o.ApplyT(func(v ConfigConfiguration) []ConfigConfigurationVerifyText { return v.VerifyTexts }).(ConfigConfigurationVerifyTextArrayOutput)
}

type ConfigConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigConfiguration)(nil)).Elem()
}

func (o ConfigConfigurationPtrOutput) ToConfigConfigurationPtrOutput() ConfigConfigurationPtrOutput {
	return o
}

func (o ConfigConfigurationPtrOutput) ToConfigConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationPtrOutput {
	return o
}

func (o ConfigConfigurationPtrOutput) Elem() ConfigConfigurationOutput {
	return o.ApplyT(func(v *ConfigConfiguration) ConfigConfiguration {
		if v != nil {
			return *v
		}
		var ret ConfigConfiguration
		return ret
	}).(ConfigConfigurationOutput)
}

// (Updatable) Type of configuration.
func (o ConfigConfigurationPtrOutput) ConfigType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ConfigType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Dns settings.
func (o ConfigConfigurationPtrOutput) DnsConfiguration() ConfigConfigurationDnsConfigurationPtrOutput {
	return o.ApplyT(func(v *ConfigConfiguration) *ConfigConfigurationDnsConfiguration {
		if v == nil {
			return nil
		}
		return v.DnsConfiguration
	}).(ConfigConfigurationDnsConfigurationPtrOutput)
}

// (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
func (o ConfigConfigurationPtrOutput) IsCertificateValidationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IsCertificateValidationEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
func (o ConfigConfigurationPtrOutput) IsFailureRetried() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IsFailureRetried
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
func (o ConfigConfigurationPtrOutput) IsRedirectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IsRedirectionEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Details of the network configuration.
func (o ConfigConfigurationPtrOutput) NetworkConfiguration() ConfigConfigurationNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v *ConfigConfiguration) *ConfigConfigurationNetworkConfiguration {
		if v == nil {
			return nil
		}
		return v.NetworkConfiguration
	}).(ConfigConfigurationNetworkConfigurationPtrOutput)
}

// (Updatable) Details for request HTTP authentication.
func (o ConfigConfigurationPtrOutput) ReqAuthenticationDetails() ConfigConfigurationReqAuthenticationDetailsPtrOutput {
	return o.ApplyT(func(v *ConfigConfiguration) *ConfigConfigurationReqAuthenticationDetails {
		if v == nil {
			return nil
		}
		return v.ReqAuthenticationDetails
	}).(ConfigConfigurationReqAuthenticationDetailsPtrOutput)
}

// (Updatable) Request http authentication scheme.
func (o ConfigConfigurationPtrOutput) ReqAuthenticationScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ReqAuthenticationScheme
	}).(pulumi.StringPtrOutput)
}

// (Updatable) List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o ConfigConfigurationPtrOutput) RequestHeaders() ConfigConfigurationRequestHeaderArrayOutput {
	return o.ApplyT(func(v *ConfigConfiguration) []ConfigConfigurationRequestHeader {
		if v == nil {
			return nil
		}
		return v.RequestHeaders
	}).(ConfigConfigurationRequestHeaderArrayOutput)
}

// (Updatable) Request HTTP method.
func (o ConfigConfigurationPtrOutput) RequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RequestMethod
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Request post body content.
func (o ConfigConfigurationPtrOutput) RequestPostBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RequestPostBody
	}).(pulumi.StringPtrOutput)
}

// (Updatable) List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
func (o ConfigConfigurationPtrOutput) RequestQueryParams() ConfigConfigurationRequestQueryParamArrayOutput {
	return o.ApplyT(func(v *ConfigConfiguration) []ConfigConfigurationRequestQueryParam {
		if v == nil {
			return nil
		}
		return v.RequestQueryParams
	}).(ConfigConfigurationRequestQueryParamArrayOutput)
}

// (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
func (o ConfigConfigurationPtrOutput) VerifyResponseCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VerifyResponseCodes
	}).(pulumi.StringArrayOutput)
}

// (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
func (o ConfigConfigurationPtrOutput) VerifyResponseContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VerifyResponseContent
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
func (o ConfigConfigurationPtrOutput) VerifyTexts() ConfigConfigurationVerifyTextArrayOutput {
	return o.ApplyT(func(v *ConfigConfiguration) []ConfigConfigurationVerifyText {
		if v == nil {
			return nil
		}
		return v.VerifyTexts
	}).(ConfigConfigurationVerifyTextArrayOutput)
}

type ConfigConfigurationDnsConfiguration struct {
	// (Updatable) If isOverrideDns is true, then dns will be overridden.
	IsOverrideDns *bool `pulumi:"isOverrideDns"`
	// (Updatable) Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
	OverrideDnsIp *string `pulumi:"overrideDnsIp"`
}

// ConfigConfigurationDnsConfigurationInput is an input type that accepts ConfigConfigurationDnsConfigurationArgs and ConfigConfigurationDnsConfigurationOutput values.
// You can construct a concrete instance of `ConfigConfigurationDnsConfigurationInput` via:
//
//	ConfigConfigurationDnsConfigurationArgs{...}
type ConfigConfigurationDnsConfigurationInput interface {
	pulumi.Input

	ToConfigConfigurationDnsConfigurationOutput() ConfigConfigurationDnsConfigurationOutput
	ToConfigConfigurationDnsConfigurationOutputWithContext(context.Context) ConfigConfigurationDnsConfigurationOutput
}

type ConfigConfigurationDnsConfigurationArgs struct {
	// (Updatable) If isOverrideDns is true, then dns will be overridden.
	IsOverrideDns pulumi.BoolPtrInput `pulumi:"isOverrideDns"`
	// (Updatable) Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
	OverrideDnsIp pulumi.StringPtrInput `pulumi:"overrideDnsIp"`
}

func (ConfigConfigurationDnsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationDnsConfiguration)(nil)).Elem()
}

func (i ConfigConfigurationDnsConfigurationArgs) ToConfigConfigurationDnsConfigurationOutput() ConfigConfigurationDnsConfigurationOutput {
	return i.ToConfigConfigurationDnsConfigurationOutputWithContext(context.Background())
}

func (i ConfigConfigurationDnsConfigurationArgs) ToConfigConfigurationDnsConfigurationOutputWithContext(ctx context.Context) ConfigConfigurationDnsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationDnsConfigurationOutput)
}

func (i ConfigConfigurationDnsConfigurationArgs) ToConfigConfigurationDnsConfigurationPtrOutput() ConfigConfigurationDnsConfigurationPtrOutput {
	return i.ToConfigConfigurationDnsConfigurationPtrOutputWithContext(context.Background())
}

func (i ConfigConfigurationDnsConfigurationArgs) ToConfigConfigurationDnsConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationDnsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationDnsConfigurationOutput).ToConfigConfigurationDnsConfigurationPtrOutputWithContext(ctx)
}

// ConfigConfigurationDnsConfigurationPtrInput is an input type that accepts ConfigConfigurationDnsConfigurationArgs, ConfigConfigurationDnsConfigurationPtr and ConfigConfigurationDnsConfigurationPtrOutput values.
// You can construct a concrete instance of `ConfigConfigurationDnsConfigurationPtrInput` via:
//
//	        ConfigConfigurationDnsConfigurationArgs{...}
//
//	or:
//
//	        nil
type ConfigConfigurationDnsConfigurationPtrInput interface {
	pulumi.Input

	ToConfigConfigurationDnsConfigurationPtrOutput() ConfigConfigurationDnsConfigurationPtrOutput
	ToConfigConfigurationDnsConfigurationPtrOutputWithContext(context.Context) ConfigConfigurationDnsConfigurationPtrOutput
}

type configConfigurationDnsConfigurationPtrType ConfigConfigurationDnsConfigurationArgs

func ConfigConfigurationDnsConfigurationPtr(v *ConfigConfigurationDnsConfigurationArgs) ConfigConfigurationDnsConfigurationPtrInput {
	return (*configConfigurationDnsConfigurationPtrType)(v)
}

func (*configConfigurationDnsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigConfigurationDnsConfiguration)(nil)).Elem()
}

func (i *configConfigurationDnsConfigurationPtrType) ToConfigConfigurationDnsConfigurationPtrOutput() ConfigConfigurationDnsConfigurationPtrOutput {
	return i.ToConfigConfigurationDnsConfigurationPtrOutputWithContext(context.Background())
}

func (i *configConfigurationDnsConfigurationPtrType) ToConfigConfigurationDnsConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationDnsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationDnsConfigurationPtrOutput)
}

type ConfigConfigurationDnsConfigurationOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationDnsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationDnsConfiguration)(nil)).Elem()
}

func (o ConfigConfigurationDnsConfigurationOutput) ToConfigConfigurationDnsConfigurationOutput() ConfigConfigurationDnsConfigurationOutput {
	return o
}

func (o ConfigConfigurationDnsConfigurationOutput) ToConfigConfigurationDnsConfigurationOutputWithContext(ctx context.Context) ConfigConfigurationDnsConfigurationOutput {
	return o
}

func (o ConfigConfigurationDnsConfigurationOutput) ToConfigConfigurationDnsConfigurationPtrOutput() ConfigConfigurationDnsConfigurationPtrOutput {
	return o.ToConfigConfigurationDnsConfigurationPtrOutputWithContext(context.Background())
}

func (o ConfigConfigurationDnsConfigurationOutput) ToConfigConfigurationDnsConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationDnsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigConfigurationDnsConfiguration) *ConfigConfigurationDnsConfiguration {
		return &v
	}).(ConfigConfigurationDnsConfigurationPtrOutput)
}

// (Updatable) If isOverrideDns is true, then dns will be overridden.
func (o ConfigConfigurationDnsConfigurationOutput) IsOverrideDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationDnsConfiguration) *bool { return v.IsOverrideDns }).(pulumi.BoolPtrOutput)
}

// (Updatable) Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
func (o ConfigConfigurationDnsConfigurationOutput) OverrideDnsIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationDnsConfiguration) *string { return v.OverrideDnsIp }).(pulumi.StringPtrOutput)
}

type ConfigConfigurationDnsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationDnsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigConfigurationDnsConfiguration)(nil)).Elem()
}

func (o ConfigConfigurationDnsConfigurationPtrOutput) ToConfigConfigurationDnsConfigurationPtrOutput() ConfigConfigurationDnsConfigurationPtrOutput {
	return o
}

func (o ConfigConfigurationDnsConfigurationPtrOutput) ToConfigConfigurationDnsConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationDnsConfigurationPtrOutput {
	return o
}

func (o ConfigConfigurationDnsConfigurationPtrOutput) Elem() ConfigConfigurationDnsConfigurationOutput {
	return o.ApplyT(func(v *ConfigConfigurationDnsConfiguration) ConfigConfigurationDnsConfiguration {
		if v != nil {
			return *v
		}
		var ret ConfigConfigurationDnsConfiguration
		return ret
	}).(ConfigConfigurationDnsConfigurationOutput)
}

// (Updatable) If isOverrideDns is true, then dns will be overridden.
func (o ConfigConfigurationDnsConfigurationPtrOutput) IsOverrideDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationDnsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IsOverrideDns
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
func (o ConfigConfigurationDnsConfigurationPtrOutput) OverrideDnsIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationDnsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.OverrideDnsIp
	}).(pulumi.StringPtrOutput)
}

type ConfigConfigurationNetworkConfiguration struct {
	// (Updatable) Number of hops.
	NumberOfHops *int `pulumi:"numberOfHops"`
	// (Updatable) Type of probe mode when TCP protocol is selected.
	ProbeMode *string `pulumi:"probeMode"`
	// (Updatable) Number of probes per hop.
	ProbePerHop *int `pulumi:"probePerHop"`
	// (Updatable) Type of protocol.
	Protocol *string `pulumi:"protocol"`
	// (Updatable) Number of probe packets sent out simultaneously.
	TransmissionRate *int `pulumi:"transmissionRate"`
}

// ConfigConfigurationNetworkConfigurationInput is an input type that accepts ConfigConfigurationNetworkConfigurationArgs and ConfigConfigurationNetworkConfigurationOutput values.
// You can construct a concrete instance of `ConfigConfigurationNetworkConfigurationInput` via:
//
//	ConfigConfigurationNetworkConfigurationArgs{...}
type ConfigConfigurationNetworkConfigurationInput interface {
	pulumi.Input

	ToConfigConfigurationNetworkConfigurationOutput() ConfigConfigurationNetworkConfigurationOutput
	ToConfigConfigurationNetworkConfigurationOutputWithContext(context.Context) ConfigConfigurationNetworkConfigurationOutput
}

type ConfigConfigurationNetworkConfigurationArgs struct {
	// (Updatable) Number of hops.
	NumberOfHops pulumi.IntPtrInput `pulumi:"numberOfHops"`
	// (Updatable) Type of probe mode when TCP protocol is selected.
	ProbeMode pulumi.StringPtrInput `pulumi:"probeMode"`
	// (Updatable) Number of probes per hop.
	ProbePerHop pulumi.IntPtrInput `pulumi:"probePerHop"`
	// (Updatable) Type of protocol.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// (Updatable) Number of probe packets sent out simultaneously.
	TransmissionRate pulumi.IntPtrInput `pulumi:"transmissionRate"`
}

func (ConfigConfigurationNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationNetworkConfiguration)(nil)).Elem()
}

func (i ConfigConfigurationNetworkConfigurationArgs) ToConfigConfigurationNetworkConfigurationOutput() ConfigConfigurationNetworkConfigurationOutput {
	return i.ToConfigConfigurationNetworkConfigurationOutputWithContext(context.Background())
}

func (i ConfigConfigurationNetworkConfigurationArgs) ToConfigConfigurationNetworkConfigurationOutputWithContext(ctx context.Context) ConfigConfigurationNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationNetworkConfigurationOutput)
}

func (i ConfigConfigurationNetworkConfigurationArgs) ToConfigConfigurationNetworkConfigurationPtrOutput() ConfigConfigurationNetworkConfigurationPtrOutput {
	return i.ToConfigConfigurationNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ConfigConfigurationNetworkConfigurationArgs) ToConfigConfigurationNetworkConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationNetworkConfigurationOutput).ToConfigConfigurationNetworkConfigurationPtrOutputWithContext(ctx)
}

// ConfigConfigurationNetworkConfigurationPtrInput is an input type that accepts ConfigConfigurationNetworkConfigurationArgs, ConfigConfigurationNetworkConfigurationPtr and ConfigConfigurationNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ConfigConfigurationNetworkConfigurationPtrInput` via:
//
//	        ConfigConfigurationNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type ConfigConfigurationNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToConfigConfigurationNetworkConfigurationPtrOutput() ConfigConfigurationNetworkConfigurationPtrOutput
	ToConfigConfigurationNetworkConfigurationPtrOutputWithContext(context.Context) ConfigConfigurationNetworkConfigurationPtrOutput
}

type configConfigurationNetworkConfigurationPtrType ConfigConfigurationNetworkConfigurationArgs

func ConfigConfigurationNetworkConfigurationPtr(v *ConfigConfigurationNetworkConfigurationArgs) ConfigConfigurationNetworkConfigurationPtrInput {
	return (*configConfigurationNetworkConfigurationPtrType)(v)
}

func (*configConfigurationNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigConfigurationNetworkConfiguration)(nil)).Elem()
}

func (i *configConfigurationNetworkConfigurationPtrType) ToConfigConfigurationNetworkConfigurationPtrOutput() ConfigConfigurationNetworkConfigurationPtrOutput {
	return i.ToConfigConfigurationNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *configConfigurationNetworkConfigurationPtrType) ToConfigConfigurationNetworkConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationNetworkConfigurationPtrOutput)
}

type ConfigConfigurationNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationNetworkConfiguration)(nil)).Elem()
}

func (o ConfigConfigurationNetworkConfigurationOutput) ToConfigConfigurationNetworkConfigurationOutput() ConfigConfigurationNetworkConfigurationOutput {
	return o
}

func (o ConfigConfigurationNetworkConfigurationOutput) ToConfigConfigurationNetworkConfigurationOutputWithContext(ctx context.Context) ConfigConfigurationNetworkConfigurationOutput {
	return o
}

func (o ConfigConfigurationNetworkConfigurationOutput) ToConfigConfigurationNetworkConfigurationPtrOutput() ConfigConfigurationNetworkConfigurationPtrOutput {
	return o.ToConfigConfigurationNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ConfigConfigurationNetworkConfigurationOutput) ToConfigConfigurationNetworkConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigConfigurationNetworkConfiguration) *ConfigConfigurationNetworkConfiguration {
		return &v
	}).(ConfigConfigurationNetworkConfigurationPtrOutput)
}

// (Updatable) Number of hops.
func (o ConfigConfigurationNetworkConfigurationOutput) NumberOfHops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationNetworkConfiguration) *int { return v.NumberOfHops }).(pulumi.IntPtrOutput)
}

// (Updatable) Type of probe mode when TCP protocol is selected.
func (o ConfigConfigurationNetworkConfigurationOutput) ProbeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationNetworkConfiguration) *string { return v.ProbeMode }).(pulumi.StringPtrOutput)
}

// (Updatable) Number of probes per hop.
func (o ConfigConfigurationNetworkConfigurationOutput) ProbePerHop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationNetworkConfiguration) *int { return v.ProbePerHop }).(pulumi.IntPtrOutput)
}

// (Updatable) Type of protocol.
func (o ConfigConfigurationNetworkConfigurationOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationNetworkConfiguration) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// (Updatable) Number of probe packets sent out simultaneously.
func (o ConfigConfigurationNetworkConfigurationOutput) TransmissionRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationNetworkConfiguration) *int { return v.TransmissionRate }).(pulumi.IntPtrOutput)
}

type ConfigConfigurationNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigConfigurationNetworkConfiguration)(nil)).Elem()
}

func (o ConfigConfigurationNetworkConfigurationPtrOutput) ToConfigConfigurationNetworkConfigurationPtrOutput() ConfigConfigurationNetworkConfigurationPtrOutput {
	return o
}

func (o ConfigConfigurationNetworkConfigurationPtrOutput) ToConfigConfigurationNetworkConfigurationPtrOutputWithContext(ctx context.Context) ConfigConfigurationNetworkConfigurationPtrOutput {
	return o
}

func (o ConfigConfigurationNetworkConfigurationPtrOutput) Elem() ConfigConfigurationNetworkConfigurationOutput {
	return o.ApplyT(func(v *ConfigConfigurationNetworkConfiguration) ConfigConfigurationNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret ConfigConfigurationNetworkConfiguration
		return ret
	}).(ConfigConfigurationNetworkConfigurationOutput)
}

// (Updatable) Number of hops.
func (o ConfigConfigurationNetworkConfigurationPtrOutput) NumberOfHops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationNetworkConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfHops
	}).(pulumi.IntPtrOutput)
}

// (Updatable) Type of probe mode when TCP protocol is selected.
func (o ConfigConfigurationNetworkConfigurationPtrOutput) ProbeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ProbeMode
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Number of probes per hop.
func (o ConfigConfigurationNetworkConfigurationPtrOutput) ProbePerHop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationNetworkConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.ProbePerHop
	}).(pulumi.IntPtrOutput)
}

// (Updatable) Type of protocol.
func (o ConfigConfigurationNetworkConfigurationPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Number of probe packets sent out simultaneously.
func (o ConfigConfigurationNetworkConfigurationPtrOutput) TransmissionRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationNetworkConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.TransmissionRate
	}).(pulumi.IntPtrOutput)
}

type ConfigConfigurationReqAuthenticationDetails struct {
	// (Updatable) List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders []ConfigConfigurationReqAuthenticationDetailsAuthHeader `pulumi:"authHeaders"`
	// (Updatable) Request method.
	AuthRequestMethod *string `pulumi:"authRequestMethod"`
	// (Updatable) Request post body.
	AuthRequestPostBody *string `pulumi:"authRequestPostBody"`
	// (Updatable) Authentication token.
	AuthToken *string `pulumi:"authToken"`
	// (Updatable) URL to get authetication token.
	AuthUrl *string `pulumi:"authUrl"`
	// (Updatable) Username for authentication.
	AuthUserName *string `pulumi:"authUserName"`
	// (Updatable) User password for authentication.
	AuthUserPassword *string `pulumi:"authUserPassword"`
	// (Updatable) Request http oauth scheme.
	OauthScheme *string `pulumi:"oauthScheme"`
}

// ConfigConfigurationReqAuthenticationDetailsInput is an input type that accepts ConfigConfigurationReqAuthenticationDetailsArgs and ConfigConfigurationReqAuthenticationDetailsOutput values.
// You can construct a concrete instance of `ConfigConfigurationReqAuthenticationDetailsInput` via:
//
//	ConfigConfigurationReqAuthenticationDetailsArgs{...}
type ConfigConfigurationReqAuthenticationDetailsInput interface {
	pulumi.Input

	ToConfigConfigurationReqAuthenticationDetailsOutput() ConfigConfigurationReqAuthenticationDetailsOutput
	ToConfigConfigurationReqAuthenticationDetailsOutputWithContext(context.Context) ConfigConfigurationReqAuthenticationDetailsOutput
}

type ConfigConfigurationReqAuthenticationDetailsArgs struct {
	// (Updatable) List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayInput `pulumi:"authHeaders"`
	// (Updatable) Request method.
	AuthRequestMethod pulumi.StringPtrInput `pulumi:"authRequestMethod"`
	// (Updatable) Request post body.
	AuthRequestPostBody pulumi.StringPtrInput `pulumi:"authRequestPostBody"`
	// (Updatable) Authentication token.
	AuthToken pulumi.StringPtrInput `pulumi:"authToken"`
	// (Updatable) URL to get authetication token.
	AuthUrl pulumi.StringPtrInput `pulumi:"authUrl"`
	// (Updatable) Username for authentication.
	AuthUserName pulumi.StringPtrInput `pulumi:"authUserName"`
	// (Updatable) User password for authentication.
	AuthUserPassword pulumi.StringPtrInput `pulumi:"authUserPassword"`
	// (Updatable) Request http oauth scheme.
	OauthScheme pulumi.StringPtrInput `pulumi:"oauthScheme"`
}

func (ConfigConfigurationReqAuthenticationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (i ConfigConfigurationReqAuthenticationDetailsArgs) ToConfigConfigurationReqAuthenticationDetailsOutput() ConfigConfigurationReqAuthenticationDetailsOutput {
	return i.ToConfigConfigurationReqAuthenticationDetailsOutputWithContext(context.Background())
}

func (i ConfigConfigurationReqAuthenticationDetailsArgs) ToConfigConfigurationReqAuthenticationDetailsOutputWithContext(ctx context.Context) ConfigConfigurationReqAuthenticationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationReqAuthenticationDetailsOutput)
}

func (i ConfigConfigurationReqAuthenticationDetailsArgs) ToConfigConfigurationReqAuthenticationDetailsPtrOutput() ConfigConfigurationReqAuthenticationDetailsPtrOutput {
	return i.ToConfigConfigurationReqAuthenticationDetailsPtrOutputWithContext(context.Background())
}

func (i ConfigConfigurationReqAuthenticationDetailsArgs) ToConfigConfigurationReqAuthenticationDetailsPtrOutputWithContext(ctx context.Context) ConfigConfigurationReqAuthenticationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationReqAuthenticationDetailsOutput).ToConfigConfigurationReqAuthenticationDetailsPtrOutputWithContext(ctx)
}

// ConfigConfigurationReqAuthenticationDetailsPtrInput is an input type that accepts ConfigConfigurationReqAuthenticationDetailsArgs, ConfigConfigurationReqAuthenticationDetailsPtr and ConfigConfigurationReqAuthenticationDetailsPtrOutput values.
// You can construct a concrete instance of `ConfigConfigurationReqAuthenticationDetailsPtrInput` via:
//
//	        ConfigConfigurationReqAuthenticationDetailsArgs{...}
//
//	or:
//
//	        nil
type ConfigConfigurationReqAuthenticationDetailsPtrInput interface {
	pulumi.Input

	ToConfigConfigurationReqAuthenticationDetailsPtrOutput() ConfigConfigurationReqAuthenticationDetailsPtrOutput
	ToConfigConfigurationReqAuthenticationDetailsPtrOutputWithContext(context.Context) ConfigConfigurationReqAuthenticationDetailsPtrOutput
}

type configConfigurationReqAuthenticationDetailsPtrType ConfigConfigurationReqAuthenticationDetailsArgs

func ConfigConfigurationReqAuthenticationDetailsPtr(v *ConfigConfigurationReqAuthenticationDetailsArgs) ConfigConfigurationReqAuthenticationDetailsPtrInput {
	return (*configConfigurationReqAuthenticationDetailsPtrType)(v)
}

func (*configConfigurationReqAuthenticationDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (i *configConfigurationReqAuthenticationDetailsPtrType) ToConfigConfigurationReqAuthenticationDetailsPtrOutput() ConfigConfigurationReqAuthenticationDetailsPtrOutput {
	return i.ToConfigConfigurationReqAuthenticationDetailsPtrOutputWithContext(context.Background())
}

func (i *configConfigurationReqAuthenticationDetailsPtrType) ToConfigConfigurationReqAuthenticationDetailsPtrOutputWithContext(ctx context.Context) ConfigConfigurationReqAuthenticationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationReqAuthenticationDetailsPtrOutput)
}

type ConfigConfigurationReqAuthenticationDetailsOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationReqAuthenticationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (o ConfigConfigurationReqAuthenticationDetailsOutput) ToConfigConfigurationReqAuthenticationDetailsOutput() ConfigConfigurationReqAuthenticationDetailsOutput {
	return o
}

func (o ConfigConfigurationReqAuthenticationDetailsOutput) ToConfigConfigurationReqAuthenticationDetailsOutputWithContext(ctx context.Context) ConfigConfigurationReqAuthenticationDetailsOutput {
	return o
}

func (o ConfigConfigurationReqAuthenticationDetailsOutput) ToConfigConfigurationReqAuthenticationDetailsPtrOutput() ConfigConfigurationReqAuthenticationDetailsPtrOutput {
	return o.ToConfigConfigurationReqAuthenticationDetailsPtrOutputWithContext(context.Background())
}

func (o ConfigConfigurationReqAuthenticationDetailsOutput) ToConfigConfigurationReqAuthenticationDetailsPtrOutputWithContext(ctx context.Context) ConfigConfigurationReqAuthenticationDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigConfigurationReqAuthenticationDetails) *ConfigConfigurationReqAuthenticationDetails {
		return &v
	}).(ConfigConfigurationReqAuthenticationDetailsPtrOutput)
}

// (Updatable) List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o ConfigConfigurationReqAuthenticationDetailsOutput) AuthHeaders() ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o.ApplyT(func(v ConfigConfigurationReqAuthenticationDetails) []ConfigConfigurationReqAuthenticationDetailsAuthHeader {
		return v.AuthHeaders
	}).(ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput)
}

// (Updatable) Request method.
func (o ConfigConfigurationReqAuthenticationDetailsOutput) AuthRequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationReqAuthenticationDetails) *string { return v.AuthRequestMethod }).(pulumi.StringPtrOutput)
}

// (Updatable) Request post body.
func (o ConfigConfigurationReqAuthenticationDetailsOutput) AuthRequestPostBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationReqAuthenticationDetails) *string { return v.AuthRequestPostBody }).(pulumi.StringPtrOutput)
}

// (Updatable) Authentication token.
func (o ConfigConfigurationReqAuthenticationDetailsOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationReqAuthenticationDetails) *string { return v.AuthToken }).(pulumi.StringPtrOutput)
}

// (Updatable) URL to get authetication token.
func (o ConfigConfigurationReqAuthenticationDetailsOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationReqAuthenticationDetails) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

// (Updatable) Username for authentication.
func (o ConfigConfigurationReqAuthenticationDetailsOutput) AuthUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationReqAuthenticationDetails) *string { return v.AuthUserName }).(pulumi.StringPtrOutput)
}

// (Updatable) User password for authentication.
func (o ConfigConfigurationReqAuthenticationDetailsOutput) AuthUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationReqAuthenticationDetails) *string { return v.AuthUserPassword }).(pulumi.StringPtrOutput)
}

// (Updatable) Request http oauth scheme.
func (o ConfigConfigurationReqAuthenticationDetailsOutput) OauthScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationReqAuthenticationDetails) *string { return v.OauthScheme }).(pulumi.StringPtrOutput)
}

type ConfigConfigurationReqAuthenticationDetailsPtrOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationReqAuthenticationDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigConfigurationReqAuthenticationDetails)(nil)).Elem()
}

func (o ConfigConfigurationReqAuthenticationDetailsPtrOutput) ToConfigConfigurationReqAuthenticationDetailsPtrOutput() ConfigConfigurationReqAuthenticationDetailsPtrOutput {
	return o
}

func (o ConfigConfigurationReqAuthenticationDetailsPtrOutput) ToConfigConfigurationReqAuthenticationDetailsPtrOutputWithContext(ctx context.Context) ConfigConfigurationReqAuthenticationDetailsPtrOutput {
	return o
}

func (o ConfigConfigurationReqAuthenticationDetailsPtrOutput) Elem() ConfigConfigurationReqAuthenticationDetailsOutput {
	return o.ApplyT(func(v *ConfigConfigurationReqAuthenticationDetails) ConfigConfigurationReqAuthenticationDetails {
		if v != nil {
			return *v
		}
		var ret ConfigConfigurationReqAuthenticationDetails
		return ret
	}).(ConfigConfigurationReqAuthenticationDetailsOutput)
}

// (Updatable) List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o ConfigConfigurationReqAuthenticationDetailsPtrOutput) AuthHeaders() ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o.ApplyT(func(v *ConfigConfigurationReqAuthenticationDetails) []ConfigConfigurationReqAuthenticationDetailsAuthHeader {
		if v == nil {
			return nil
		}
		return v.AuthHeaders
	}).(ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput)
}

// (Updatable) Request method.
func (o ConfigConfigurationReqAuthenticationDetailsPtrOutput) AuthRequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthRequestMethod
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Request post body.
func (o ConfigConfigurationReqAuthenticationDetailsPtrOutput) AuthRequestPostBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthRequestPostBody
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Authentication token.
func (o ConfigConfigurationReqAuthenticationDetailsPtrOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthToken
	}).(pulumi.StringPtrOutput)
}

// (Updatable) URL to get authetication token.
func (o ConfigConfigurationReqAuthenticationDetailsPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Username for authentication.
func (o ConfigConfigurationReqAuthenticationDetailsPtrOutput) AuthUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthUserName
	}).(pulumi.StringPtrOutput)
}

// (Updatable) User password for authentication.
func (o ConfigConfigurationReqAuthenticationDetailsPtrOutput) AuthUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.AuthUserPassword
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Request http oauth scheme.
func (o ConfigConfigurationReqAuthenticationDetailsPtrOutput) OauthScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConfigurationReqAuthenticationDetails) *string {
		if v == nil {
			return nil
		}
		return v.OauthScheme
	}).(pulumi.StringPtrOutput)
}

type ConfigConfigurationReqAuthenticationDetailsAuthHeader struct {
	// (Updatable) Name of the header.
	HeaderName *string `pulumi:"headerName"`
	// (Updatable) Value of the header.
	HeaderValue *string `pulumi:"headerValue"`
}

// ConfigConfigurationReqAuthenticationDetailsAuthHeaderInput is an input type that accepts ConfigConfigurationReqAuthenticationDetailsAuthHeaderArgs and ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput values.
// You can construct a concrete instance of `ConfigConfigurationReqAuthenticationDetailsAuthHeaderInput` via:
//
//	ConfigConfigurationReqAuthenticationDetailsAuthHeaderArgs{...}
type ConfigConfigurationReqAuthenticationDetailsAuthHeaderInput interface {
	pulumi.Input

	ToConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput() ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput
	ToConfigConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(context.Context) ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput
}

type ConfigConfigurationReqAuthenticationDetailsAuthHeaderArgs struct {
	// (Updatable) Name of the header.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// (Updatable) Value of the header.
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
}

func (ConfigConfigurationReqAuthenticationDetailsAuthHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (i ConfigConfigurationReqAuthenticationDetailsAuthHeaderArgs) ToConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput() ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return i.ToConfigConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(context.Background())
}

func (i ConfigConfigurationReqAuthenticationDetailsAuthHeaderArgs) ToConfigConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(ctx context.Context) ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput)
}

// ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayInput is an input type that accepts ConfigConfigurationReqAuthenticationDetailsAuthHeaderArray and ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput values.
// You can construct a concrete instance of `ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayInput` via:
//
//	ConfigConfigurationReqAuthenticationDetailsAuthHeaderArray{ ConfigConfigurationReqAuthenticationDetailsAuthHeaderArgs{...} }
type ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayInput interface {
	pulumi.Input

	ToConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput
	ToConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(context.Context) ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput
}

type ConfigConfigurationReqAuthenticationDetailsAuthHeaderArray []ConfigConfigurationReqAuthenticationDetailsAuthHeaderInput

func (ConfigConfigurationReqAuthenticationDetailsAuthHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (i ConfigConfigurationReqAuthenticationDetailsAuthHeaderArray) ToConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return i.ToConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(context.Background())
}

func (i ConfigConfigurationReqAuthenticationDetailsAuthHeaderArray) ToConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(ctx context.Context) ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput)
}

type ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (o ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput) ToConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput() ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return o
}

func (o ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput) ToConfigConfigurationReqAuthenticationDetailsAuthHeaderOutputWithContext(ctx context.Context) ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return o
}

// (Updatable) Name of the header.
func (o ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationReqAuthenticationDetailsAuthHeader) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the header.
func (o ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationReqAuthenticationDetailsAuthHeader) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigConfigurationReqAuthenticationDetailsAuthHeader)(nil)).Elem()
}

func (o ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ToConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput() ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o
}

func (o ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) ToConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutputWithContext(ctx context.Context) ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput {
	return o
}

func (o ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput) Index(i pulumi.IntInput) ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigConfigurationReqAuthenticationDetailsAuthHeader {
		return vs[0].([]ConfigConfigurationReqAuthenticationDetailsAuthHeader)[vs[1].(int)]
	}).(ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput)
}

type ConfigConfigurationRequestHeader struct {
	// (Updatable) Name of the header.
	HeaderName *string `pulumi:"headerName"`
	// (Updatable) Value of the header.
	HeaderValue *string `pulumi:"headerValue"`
}

// ConfigConfigurationRequestHeaderInput is an input type that accepts ConfigConfigurationRequestHeaderArgs and ConfigConfigurationRequestHeaderOutput values.
// You can construct a concrete instance of `ConfigConfigurationRequestHeaderInput` via:
//
//	ConfigConfigurationRequestHeaderArgs{...}
type ConfigConfigurationRequestHeaderInput interface {
	pulumi.Input

	ToConfigConfigurationRequestHeaderOutput() ConfigConfigurationRequestHeaderOutput
	ToConfigConfigurationRequestHeaderOutputWithContext(context.Context) ConfigConfigurationRequestHeaderOutput
}

type ConfigConfigurationRequestHeaderArgs struct {
	// (Updatable) Name of the header.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// (Updatable) Value of the header.
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
}

func (ConfigConfigurationRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationRequestHeader)(nil)).Elem()
}

func (i ConfigConfigurationRequestHeaderArgs) ToConfigConfigurationRequestHeaderOutput() ConfigConfigurationRequestHeaderOutput {
	return i.ToConfigConfigurationRequestHeaderOutputWithContext(context.Background())
}

func (i ConfigConfigurationRequestHeaderArgs) ToConfigConfigurationRequestHeaderOutputWithContext(ctx context.Context) ConfigConfigurationRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationRequestHeaderOutput)
}

// ConfigConfigurationRequestHeaderArrayInput is an input type that accepts ConfigConfigurationRequestHeaderArray and ConfigConfigurationRequestHeaderArrayOutput values.
// You can construct a concrete instance of `ConfigConfigurationRequestHeaderArrayInput` via:
//
//	ConfigConfigurationRequestHeaderArray{ ConfigConfigurationRequestHeaderArgs{...} }
type ConfigConfigurationRequestHeaderArrayInput interface {
	pulumi.Input

	ToConfigConfigurationRequestHeaderArrayOutput() ConfigConfigurationRequestHeaderArrayOutput
	ToConfigConfigurationRequestHeaderArrayOutputWithContext(context.Context) ConfigConfigurationRequestHeaderArrayOutput
}

type ConfigConfigurationRequestHeaderArray []ConfigConfigurationRequestHeaderInput

func (ConfigConfigurationRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigConfigurationRequestHeader)(nil)).Elem()
}

func (i ConfigConfigurationRequestHeaderArray) ToConfigConfigurationRequestHeaderArrayOutput() ConfigConfigurationRequestHeaderArrayOutput {
	return i.ToConfigConfigurationRequestHeaderArrayOutputWithContext(context.Background())
}

func (i ConfigConfigurationRequestHeaderArray) ToConfigConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) ConfigConfigurationRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationRequestHeaderArrayOutput)
}

type ConfigConfigurationRequestHeaderOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationRequestHeader)(nil)).Elem()
}

func (o ConfigConfigurationRequestHeaderOutput) ToConfigConfigurationRequestHeaderOutput() ConfigConfigurationRequestHeaderOutput {
	return o
}

func (o ConfigConfigurationRequestHeaderOutput) ToConfigConfigurationRequestHeaderOutputWithContext(ctx context.Context) ConfigConfigurationRequestHeaderOutput {
	return o
}

// (Updatable) Name of the header.
func (o ConfigConfigurationRequestHeaderOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationRequestHeader) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the header.
func (o ConfigConfigurationRequestHeaderOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationRequestHeader) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type ConfigConfigurationRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigConfigurationRequestHeader)(nil)).Elem()
}

func (o ConfigConfigurationRequestHeaderArrayOutput) ToConfigConfigurationRequestHeaderArrayOutput() ConfigConfigurationRequestHeaderArrayOutput {
	return o
}

func (o ConfigConfigurationRequestHeaderArrayOutput) ToConfigConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) ConfigConfigurationRequestHeaderArrayOutput {
	return o
}

func (o ConfigConfigurationRequestHeaderArrayOutput) Index(i pulumi.IntInput) ConfigConfigurationRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigConfigurationRequestHeader {
		return vs[0].([]ConfigConfigurationRequestHeader)[vs[1].(int)]
	}).(ConfigConfigurationRequestHeaderOutput)
}

type ConfigConfigurationRequestQueryParam struct {
	// (Updatable) Name of the parameter.
	ParamName *string `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue *string `pulumi:"paramValue"`
}

// ConfigConfigurationRequestQueryParamInput is an input type that accepts ConfigConfigurationRequestQueryParamArgs and ConfigConfigurationRequestQueryParamOutput values.
// You can construct a concrete instance of `ConfigConfigurationRequestQueryParamInput` via:
//
//	ConfigConfigurationRequestQueryParamArgs{...}
type ConfigConfigurationRequestQueryParamInput interface {
	pulumi.Input

	ToConfigConfigurationRequestQueryParamOutput() ConfigConfigurationRequestQueryParamOutput
	ToConfigConfigurationRequestQueryParamOutputWithContext(context.Context) ConfigConfigurationRequestQueryParamOutput
}

type ConfigConfigurationRequestQueryParamArgs struct {
	// (Updatable) Name of the parameter.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue pulumi.StringPtrInput `pulumi:"paramValue"`
}

func (ConfigConfigurationRequestQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationRequestQueryParam)(nil)).Elem()
}

func (i ConfigConfigurationRequestQueryParamArgs) ToConfigConfigurationRequestQueryParamOutput() ConfigConfigurationRequestQueryParamOutput {
	return i.ToConfigConfigurationRequestQueryParamOutputWithContext(context.Background())
}

func (i ConfigConfigurationRequestQueryParamArgs) ToConfigConfigurationRequestQueryParamOutputWithContext(ctx context.Context) ConfigConfigurationRequestQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationRequestQueryParamOutput)
}

// ConfigConfigurationRequestQueryParamArrayInput is an input type that accepts ConfigConfigurationRequestQueryParamArray and ConfigConfigurationRequestQueryParamArrayOutput values.
// You can construct a concrete instance of `ConfigConfigurationRequestQueryParamArrayInput` via:
//
//	ConfigConfigurationRequestQueryParamArray{ ConfigConfigurationRequestQueryParamArgs{...} }
type ConfigConfigurationRequestQueryParamArrayInput interface {
	pulumi.Input

	ToConfigConfigurationRequestQueryParamArrayOutput() ConfigConfigurationRequestQueryParamArrayOutput
	ToConfigConfigurationRequestQueryParamArrayOutputWithContext(context.Context) ConfigConfigurationRequestQueryParamArrayOutput
}

type ConfigConfigurationRequestQueryParamArray []ConfigConfigurationRequestQueryParamInput

func (ConfigConfigurationRequestQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigConfigurationRequestQueryParam)(nil)).Elem()
}

func (i ConfigConfigurationRequestQueryParamArray) ToConfigConfigurationRequestQueryParamArrayOutput() ConfigConfigurationRequestQueryParamArrayOutput {
	return i.ToConfigConfigurationRequestQueryParamArrayOutputWithContext(context.Background())
}

func (i ConfigConfigurationRequestQueryParamArray) ToConfigConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) ConfigConfigurationRequestQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationRequestQueryParamArrayOutput)
}

type ConfigConfigurationRequestQueryParamOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationRequestQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationRequestQueryParam)(nil)).Elem()
}

func (o ConfigConfigurationRequestQueryParamOutput) ToConfigConfigurationRequestQueryParamOutput() ConfigConfigurationRequestQueryParamOutput {
	return o
}

func (o ConfigConfigurationRequestQueryParamOutput) ToConfigConfigurationRequestQueryParamOutputWithContext(ctx context.Context) ConfigConfigurationRequestQueryParamOutput {
	return o
}

// (Updatable) Name of the parameter.
func (o ConfigConfigurationRequestQueryParamOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationRequestQueryParam) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the parameter.
func (o ConfigConfigurationRequestQueryParamOutput) ParamValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationRequestQueryParam) *string { return v.ParamValue }).(pulumi.StringPtrOutput)
}

type ConfigConfigurationRequestQueryParamArrayOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationRequestQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigConfigurationRequestQueryParam)(nil)).Elem()
}

func (o ConfigConfigurationRequestQueryParamArrayOutput) ToConfigConfigurationRequestQueryParamArrayOutput() ConfigConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o ConfigConfigurationRequestQueryParamArrayOutput) ToConfigConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) ConfigConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o ConfigConfigurationRequestQueryParamArrayOutput) Index(i pulumi.IntInput) ConfigConfigurationRequestQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigConfigurationRequestQueryParam {
		return vs[0].([]ConfigConfigurationRequestQueryParam)[vs[1].(int)]
	}).(ConfigConfigurationRequestQueryParamOutput)
}

type ConfigConfigurationVerifyText struct {
	// (Updatable) Verification text in the response.
	Text *string `pulumi:"text"`
}

// ConfigConfigurationVerifyTextInput is an input type that accepts ConfigConfigurationVerifyTextArgs and ConfigConfigurationVerifyTextOutput values.
// You can construct a concrete instance of `ConfigConfigurationVerifyTextInput` via:
//
//	ConfigConfigurationVerifyTextArgs{...}
type ConfigConfigurationVerifyTextInput interface {
	pulumi.Input

	ToConfigConfigurationVerifyTextOutput() ConfigConfigurationVerifyTextOutput
	ToConfigConfigurationVerifyTextOutputWithContext(context.Context) ConfigConfigurationVerifyTextOutput
}

type ConfigConfigurationVerifyTextArgs struct {
	// (Updatable) Verification text in the response.
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (ConfigConfigurationVerifyTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationVerifyText)(nil)).Elem()
}

func (i ConfigConfigurationVerifyTextArgs) ToConfigConfigurationVerifyTextOutput() ConfigConfigurationVerifyTextOutput {
	return i.ToConfigConfigurationVerifyTextOutputWithContext(context.Background())
}

func (i ConfigConfigurationVerifyTextArgs) ToConfigConfigurationVerifyTextOutputWithContext(ctx context.Context) ConfigConfigurationVerifyTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationVerifyTextOutput)
}

// ConfigConfigurationVerifyTextArrayInput is an input type that accepts ConfigConfigurationVerifyTextArray and ConfigConfigurationVerifyTextArrayOutput values.
// You can construct a concrete instance of `ConfigConfigurationVerifyTextArrayInput` via:
//
//	ConfigConfigurationVerifyTextArray{ ConfigConfigurationVerifyTextArgs{...} }
type ConfigConfigurationVerifyTextArrayInput interface {
	pulumi.Input

	ToConfigConfigurationVerifyTextArrayOutput() ConfigConfigurationVerifyTextArrayOutput
	ToConfigConfigurationVerifyTextArrayOutputWithContext(context.Context) ConfigConfigurationVerifyTextArrayOutput
}

type ConfigConfigurationVerifyTextArray []ConfigConfigurationVerifyTextInput

func (ConfigConfigurationVerifyTextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigConfigurationVerifyText)(nil)).Elem()
}

func (i ConfigConfigurationVerifyTextArray) ToConfigConfigurationVerifyTextArrayOutput() ConfigConfigurationVerifyTextArrayOutput {
	return i.ToConfigConfigurationVerifyTextArrayOutputWithContext(context.Background())
}

func (i ConfigConfigurationVerifyTextArray) ToConfigConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) ConfigConfigurationVerifyTextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConfigurationVerifyTextArrayOutput)
}

type ConfigConfigurationVerifyTextOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationVerifyTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConfigurationVerifyText)(nil)).Elem()
}

func (o ConfigConfigurationVerifyTextOutput) ToConfigConfigurationVerifyTextOutput() ConfigConfigurationVerifyTextOutput {
	return o
}

func (o ConfigConfigurationVerifyTextOutput) ToConfigConfigurationVerifyTextOutputWithContext(ctx context.Context) ConfigConfigurationVerifyTextOutput {
	return o
}

// (Updatable) Verification text in the response.
func (o ConfigConfigurationVerifyTextOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConfigurationVerifyText) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type ConfigConfigurationVerifyTextArrayOutput struct{ *pulumi.OutputState }

func (ConfigConfigurationVerifyTextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigConfigurationVerifyText)(nil)).Elem()
}

func (o ConfigConfigurationVerifyTextArrayOutput) ToConfigConfigurationVerifyTextArrayOutput() ConfigConfigurationVerifyTextArrayOutput {
	return o
}

func (o ConfigConfigurationVerifyTextArrayOutput) ToConfigConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) ConfigConfigurationVerifyTextArrayOutput {
	return o
}

func (o ConfigConfigurationVerifyTextArrayOutput) Index(i pulumi.IntInput) ConfigConfigurationVerifyTextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigConfigurationVerifyText {
		return vs[0].([]ConfigConfigurationVerifyText)[vs[1].(int)]
	}).(ConfigConfigurationVerifyTextOutput)
}

type ConfigScriptParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten *bool `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret *bool `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameters []ConfigScriptParameterMonitorScriptParameter `pulumi:"monitorScriptParameters"`
	// (Updatable) Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// ConfigScriptParameterInput is an input type that accepts ConfigScriptParameterArgs and ConfigScriptParameterOutput values.
// You can construct a concrete instance of `ConfigScriptParameterInput` via:
//
//	ConfigScriptParameterArgs{...}
type ConfigScriptParameterInput interface {
	pulumi.Input

	ToConfigScriptParameterOutput() ConfigScriptParameterOutput
	ToConfigScriptParameterOutputWithContext(context.Context) ConfigScriptParameterOutput
}

type ConfigScriptParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolPtrInput `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameters ConfigScriptParameterMonitorScriptParameterArrayInput `pulumi:"monitorScriptParameters"`
	// (Updatable) Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (ConfigScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigScriptParameter)(nil)).Elem()
}

func (i ConfigScriptParameterArgs) ToConfigScriptParameterOutput() ConfigScriptParameterOutput {
	return i.ToConfigScriptParameterOutputWithContext(context.Background())
}

func (i ConfigScriptParameterArgs) ToConfigScriptParameterOutputWithContext(ctx context.Context) ConfigScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigScriptParameterOutput)
}

// ConfigScriptParameterArrayInput is an input type that accepts ConfigScriptParameterArray and ConfigScriptParameterArrayOutput values.
// You can construct a concrete instance of `ConfigScriptParameterArrayInput` via:
//
//	ConfigScriptParameterArray{ ConfigScriptParameterArgs{...} }
type ConfigScriptParameterArrayInput interface {
	pulumi.Input

	ToConfigScriptParameterArrayOutput() ConfigScriptParameterArrayOutput
	ToConfigScriptParameterArrayOutputWithContext(context.Context) ConfigScriptParameterArrayOutput
}

type ConfigScriptParameterArray []ConfigScriptParameterInput

func (ConfigScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigScriptParameter)(nil)).Elem()
}

func (i ConfigScriptParameterArray) ToConfigScriptParameterArrayOutput() ConfigScriptParameterArrayOutput {
	return i.ToConfigScriptParameterArrayOutputWithContext(context.Background())
}

func (i ConfigScriptParameterArray) ToConfigScriptParameterArrayOutputWithContext(ctx context.Context) ConfigScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigScriptParameterArrayOutput)
}

type ConfigScriptParameterOutput struct{ *pulumi.OutputState }

func (ConfigScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigScriptParameter)(nil)).Elem()
}

func (o ConfigScriptParameterOutput) ToConfigScriptParameterOutput() ConfigScriptParameterOutput {
	return o
}

func (o ConfigScriptParameterOutput) ToConfigScriptParameterOutputWithContext(ctx context.Context) ConfigScriptParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o ConfigScriptParameterOutput) IsOverwritten() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigScriptParameter) *bool { return v.IsOverwritten }).(pulumi.BoolPtrOutput)
}

// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
func (o ConfigScriptParameterOutput) GetIsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigScriptParameter) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// Details of the script parameter that can be used to overwrite the parameter present in the script.
func (o ConfigScriptParameterOutput) MonitorScriptParameters() ConfigScriptParameterMonitorScriptParameterArrayOutput {
	return o.ApplyT(func(v ConfigScriptParameter) []ConfigScriptParameterMonitorScriptParameter {
		return v.MonitorScriptParameters
	}).(ConfigScriptParameterMonitorScriptParameterArrayOutput)
}

// (Updatable) Name of the parameter.
func (o ConfigScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// (Updatable) Value of the parameter.
func (o ConfigScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

type ConfigScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (ConfigScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigScriptParameter)(nil)).Elem()
}

func (o ConfigScriptParameterArrayOutput) ToConfigScriptParameterArrayOutput() ConfigScriptParameterArrayOutput {
	return o
}

func (o ConfigScriptParameterArrayOutput) ToConfigScriptParameterArrayOutputWithContext(ctx context.Context) ConfigScriptParameterArrayOutput {
	return o
}

func (o ConfigScriptParameterArrayOutput) Index(i pulumi.IntInput) ConfigScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigScriptParameter {
		return vs[0].([]ConfigScriptParameter)[vs[1].(int)]
	}).(ConfigScriptParameterOutput)
}

type ConfigScriptParameterMonitorScriptParameter struct {
	// (Updatable) Name of the parameter.
	ParamName *string `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue *string `pulumi:"paramValue"`
}

// ConfigScriptParameterMonitorScriptParameterInput is an input type that accepts ConfigScriptParameterMonitorScriptParameterArgs and ConfigScriptParameterMonitorScriptParameterOutput values.
// You can construct a concrete instance of `ConfigScriptParameterMonitorScriptParameterInput` via:
//
//	ConfigScriptParameterMonitorScriptParameterArgs{...}
type ConfigScriptParameterMonitorScriptParameterInput interface {
	pulumi.Input

	ToConfigScriptParameterMonitorScriptParameterOutput() ConfigScriptParameterMonitorScriptParameterOutput
	ToConfigScriptParameterMonitorScriptParameterOutputWithContext(context.Context) ConfigScriptParameterMonitorScriptParameterOutput
}

type ConfigScriptParameterMonitorScriptParameterArgs struct {
	// (Updatable) Name of the parameter.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue pulumi.StringPtrInput `pulumi:"paramValue"`
}

func (ConfigScriptParameterMonitorScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (i ConfigScriptParameterMonitorScriptParameterArgs) ToConfigScriptParameterMonitorScriptParameterOutput() ConfigScriptParameterMonitorScriptParameterOutput {
	return i.ToConfigScriptParameterMonitorScriptParameterOutputWithContext(context.Background())
}

func (i ConfigScriptParameterMonitorScriptParameterArgs) ToConfigScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) ConfigScriptParameterMonitorScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigScriptParameterMonitorScriptParameterOutput)
}

// ConfigScriptParameterMonitorScriptParameterArrayInput is an input type that accepts ConfigScriptParameterMonitorScriptParameterArray and ConfigScriptParameterMonitorScriptParameterArrayOutput values.
// You can construct a concrete instance of `ConfigScriptParameterMonitorScriptParameterArrayInput` via:
//
//	ConfigScriptParameterMonitorScriptParameterArray{ ConfigScriptParameterMonitorScriptParameterArgs{...} }
type ConfigScriptParameterMonitorScriptParameterArrayInput interface {
	pulumi.Input

	ToConfigScriptParameterMonitorScriptParameterArrayOutput() ConfigScriptParameterMonitorScriptParameterArrayOutput
	ToConfigScriptParameterMonitorScriptParameterArrayOutputWithContext(context.Context) ConfigScriptParameterMonitorScriptParameterArrayOutput
}

type ConfigScriptParameterMonitorScriptParameterArray []ConfigScriptParameterMonitorScriptParameterInput

func (ConfigScriptParameterMonitorScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (i ConfigScriptParameterMonitorScriptParameterArray) ToConfigScriptParameterMonitorScriptParameterArrayOutput() ConfigScriptParameterMonitorScriptParameterArrayOutput {
	return i.ToConfigScriptParameterMonitorScriptParameterArrayOutputWithContext(context.Background())
}

func (i ConfigScriptParameterMonitorScriptParameterArray) ToConfigScriptParameterMonitorScriptParameterArrayOutputWithContext(ctx context.Context) ConfigScriptParameterMonitorScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigScriptParameterMonitorScriptParameterArrayOutput)
}

type ConfigScriptParameterMonitorScriptParameterOutput struct{ *pulumi.OutputState }

func (ConfigScriptParameterMonitorScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (o ConfigScriptParameterMonitorScriptParameterOutput) ToConfigScriptParameterMonitorScriptParameterOutput() ConfigScriptParameterMonitorScriptParameterOutput {
	return o
}

func (o ConfigScriptParameterMonitorScriptParameterOutput) ToConfigScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) ConfigScriptParameterMonitorScriptParameterOutput {
	return o
}

// (Updatable) Name of the parameter.
func (o ConfigScriptParameterMonitorScriptParameterOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigScriptParameterMonitorScriptParameter) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the parameter.
func (o ConfigScriptParameterMonitorScriptParameterOutput) ParamValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigScriptParameterMonitorScriptParameter) *string { return v.ParamValue }).(pulumi.StringPtrOutput)
}

type ConfigScriptParameterMonitorScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (ConfigScriptParameterMonitorScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (o ConfigScriptParameterMonitorScriptParameterArrayOutput) ToConfigScriptParameterMonitorScriptParameterArrayOutput() ConfigScriptParameterMonitorScriptParameterArrayOutput {
	return o
}

func (o ConfigScriptParameterMonitorScriptParameterArrayOutput) ToConfigScriptParameterMonitorScriptParameterArrayOutputWithContext(ctx context.Context) ConfigScriptParameterMonitorScriptParameterArrayOutput {
	return o
}

func (o ConfigScriptParameterMonitorScriptParameterArrayOutput) Index(i pulumi.IntInput) ConfigScriptParameterMonitorScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigScriptParameterMonitorScriptParameter {
		return vs[0].([]ConfigScriptParameterMonitorScriptParameter)[vs[1].(int)]
	}).(ConfigScriptParameterMonitorScriptParameterOutput)
}

type DedicatedVantagePointDvpStackDetails struct {
	// (Updatable) Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStackId string `pulumi:"dvpStackId"`
	// (Updatable) Type of stack.
	DvpStackType string `pulumi:"dvpStackType"`
	// (Updatable) Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStreamId string `pulumi:"dvpStreamId"`
	// (Updatable) Version of the dedicated vantage point.
	DvpVersion string `pulumi:"dvpVersion"`
}

// DedicatedVantagePointDvpStackDetailsInput is an input type that accepts DedicatedVantagePointDvpStackDetailsArgs and DedicatedVantagePointDvpStackDetailsOutput values.
// You can construct a concrete instance of `DedicatedVantagePointDvpStackDetailsInput` via:
//
//	DedicatedVantagePointDvpStackDetailsArgs{...}
type DedicatedVantagePointDvpStackDetailsInput interface {
	pulumi.Input

	ToDedicatedVantagePointDvpStackDetailsOutput() DedicatedVantagePointDvpStackDetailsOutput
	ToDedicatedVantagePointDvpStackDetailsOutputWithContext(context.Context) DedicatedVantagePointDvpStackDetailsOutput
}

type DedicatedVantagePointDvpStackDetailsArgs struct {
	// (Updatable) Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStackId pulumi.StringInput `pulumi:"dvpStackId"`
	// (Updatable) Type of stack.
	DvpStackType pulumi.StringInput `pulumi:"dvpStackType"`
	// (Updatable) Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStreamId pulumi.StringInput `pulumi:"dvpStreamId"`
	// (Updatable) Version of the dedicated vantage point.
	DvpVersion pulumi.StringInput `pulumi:"dvpVersion"`
}

func (DedicatedVantagePointDvpStackDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedVantagePointDvpStackDetails)(nil)).Elem()
}

func (i DedicatedVantagePointDvpStackDetailsArgs) ToDedicatedVantagePointDvpStackDetailsOutput() DedicatedVantagePointDvpStackDetailsOutput {
	return i.ToDedicatedVantagePointDvpStackDetailsOutputWithContext(context.Background())
}

func (i DedicatedVantagePointDvpStackDetailsArgs) ToDedicatedVantagePointDvpStackDetailsOutputWithContext(ctx context.Context) DedicatedVantagePointDvpStackDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedVantagePointDvpStackDetailsOutput)
}

func (i DedicatedVantagePointDvpStackDetailsArgs) ToDedicatedVantagePointDvpStackDetailsPtrOutput() DedicatedVantagePointDvpStackDetailsPtrOutput {
	return i.ToDedicatedVantagePointDvpStackDetailsPtrOutputWithContext(context.Background())
}

func (i DedicatedVantagePointDvpStackDetailsArgs) ToDedicatedVantagePointDvpStackDetailsPtrOutputWithContext(ctx context.Context) DedicatedVantagePointDvpStackDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedVantagePointDvpStackDetailsOutput).ToDedicatedVantagePointDvpStackDetailsPtrOutputWithContext(ctx)
}

// DedicatedVantagePointDvpStackDetailsPtrInput is an input type that accepts DedicatedVantagePointDvpStackDetailsArgs, DedicatedVantagePointDvpStackDetailsPtr and DedicatedVantagePointDvpStackDetailsPtrOutput values.
// You can construct a concrete instance of `DedicatedVantagePointDvpStackDetailsPtrInput` via:
//
//	        DedicatedVantagePointDvpStackDetailsArgs{...}
//
//	or:
//
//	        nil
type DedicatedVantagePointDvpStackDetailsPtrInput interface {
	pulumi.Input

	ToDedicatedVantagePointDvpStackDetailsPtrOutput() DedicatedVantagePointDvpStackDetailsPtrOutput
	ToDedicatedVantagePointDvpStackDetailsPtrOutputWithContext(context.Context) DedicatedVantagePointDvpStackDetailsPtrOutput
}

type dedicatedVantagePointDvpStackDetailsPtrType DedicatedVantagePointDvpStackDetailsArgs

func DedicatedVantagePointDvpStackDetailsPtr(v *DedicatedVantagePointDvpStackDetailsArgs) DedicatedVantagePointDvpStackDetailsPtrInput {
	return (*dedicatedVantagePointDvpStackDetailsPtrType)(v)
}

func (*dedicatedVantagePointDvpStackDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedVantagePointDvpStackDetails)(nil)).Elem()
}

func (i *dedicatedVantagePointDvpStackDetailsPtrType) ToDedicatedVantagePointDvpStackDetailsPtrOutput() DedicatedVantagePointDvpStackDetailsPtrOutput {
	return i.ToDedicatedVantagePointDvpStackDetailsPtrOutputWithContext(context.Background())
}

func (i *dedicatedVantagePointDvpStackDetailsPtrType) ToDedicatedVantagePointDvpStackDetailsPtrOutputWithContext(ctx context.Context) DedicatedVantagePointDvpStackDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedVantagePointDvpStackDetailsPtrOutput)
}

type DedicatedVantagePointDvpStackDetailsOutput struct{ *pulumi.OutputState }

func (DedicatedVantagePointDvpStackDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedVantagePointDvpStackDetails)(nil)).Elem()
}

func (o DedicatedVantagePointDvpStackDetailsOutput) ToDedicatedVantagePointDvpStackDetailsOutput() DedicatedVantagePointDvpStackDetailsOutput {
	return o
}

func (o DedicatedVantagePointDvpStackDetailsOutput) ToDedicatedVantagePointDvpStackDetailsOutputWithContext(ctx context.Context) DedicatedVantagePointDvpStackDetailsOutput {
	return o
}

func (o DedicatedVantagePointDvpStackDetailsOutput) ToDedicatedVantagePointDvpStackDetailsPtrOutput() DedicatedVantagePointDvpStackDetailsPtrOutput {
	return o.ToDedicatedVantagePointDvpStackDetailsPtrOutputWithContext(context.Background())
}

func (o DedicatedVantagePointDvpStackDetailsOutput) ToDedicatedVantagePointDvpStackDetailsPtrOutputWithContext(ctx context.Context) DedicatedVantagePointDvpStackDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DedicatedVantagePointDvpStackDetails) *DedicatedVantagePointDvpStackDetails {
		return &v
	}).(DedicatedVantagePointDvpStackDetailsPtrOutput)
}

// (Updatable) Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
func (o DedicatedVantagePointDvpStackDetailsOutput) DvpStackId() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedVantagePointDvpStackDetails) string { return v.DvpStackId }).(pulumi.StringOutput)
}

// (Updatable) Type of stack.
func (o DedicatedVantagePointDvpStackDetailsOutput) DvpStackType() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedVantagePointDvpStackDetails) string { return v.DvpStackType }).(pulumi.StringOutput)
}

// (Updatable) Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
func (o DedicatedVantagePointDvpStackDetailsOutput) DvpStreamId() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedVantagePointDvpStackDetails) string { return v.DvpStreamId }).(pulumi.StringOutput)
}

// (Updatable) Version of the dedicated vantage point.
func (o DedicatedVantagePointDvpStackDetailsOutput) DvpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedVantagePointDvpStackDetails) string { return v.DvpVersion }).(pulumi.StringOutput)
}

type DedicatedVantagePointDvpStackDetailsPtrOutput struct{ *pulumi.OutputState }

func (DedicatedVantagePointDvpStackDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedVantagePointDvpStackDetails)(nil)).Elem()
}

func (o DedicatedVantagePointDvpStackDetailsPtrOutput) ToDedicatedVantagePointDvpStackDetailsPtrOutput() DedicatedVantagePointDvpStackDetailsPtrOutput {
	return o
}

func (o DedicatedVantagePointDvpStackDetailsPtrOutput) ToDedicatedVantagePointDvpStackDetailsPtrOutputWithContext(ctx context.Context) DedicatedVantagePointDvpStackDetailsPtrOutput {
	return o
}

func (o DedicatedVantagePointDvpStackDetailsPtrOutput) Elem() DedicatedVantagePointDvpStackDetailsOutput {
	return o.ApplyT(func(v *DedicatedVantagePointDvpStackDetails) DedicatedVantagePointDvpStackDetails {
		if v != nil {
			return *v
		}
		var ret DedicatedVantagePointDvpStackDetails
		return ret
	}).(DedicatedVantagePointDvpStackDetailsOutput)
}

// (Updatable) Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
func (o DedicatedVantagePointDvpStackDetailsPtrOutput) DvpStackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedVantagePointDvpStackDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DvpStackId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Type of stack.
func (o DedicatedVantagePointDvpStackDetailsPtrOutput) DvpStackType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedVantagePointDvpStackDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DvpStackType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
func (o DedicatedVantagePointDvpStackDetailsPtrOutput) DvpStreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedVantagePointDvpStackDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DvpStreamId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Version of the dedicated vantage point.
func (o DedicatedVantagePointDvpStackDetailsPtrOutput) DvpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedVantagePointDvpStackDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DvpVersion
	}).(pulumi.StringPtrOutput)
}

type DedicatedVantagePointMonitorStatusCountMap struct {
	// Number of disabled monitors using the script.
	Disabled *int `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled *int `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid *int `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total *int `pulumi:"total"`
}

// DedicatedVantagePointMonitorStatusCountMapInput is an input type that accepts DedicatedVantagePointMonitorStatusCountMap and DedicatedVantagePointMonitorStatusCountMapOutput values.
// You can construct a concrete instance of `DedicatedVantagePointMonitorStatusCountMapInput` via:
//
//	DedicatedVantagePointMonitorStatusCountMap{ "key": DedicatedVantagePointMonitorStatusCountArgs{...} }
type DedicatedVantagePointMonitorStatusCountMapInput interface {
	pulumi.Input

	ToDedicatedVantagePointMonitorStatusCountMapOutput() DedicatedVantagePointMonitorStatusCountMapOutput
	ToDedicatedVantagePointMonitorStatusCountMapOutputWithContext(context.Context) DedicatedVantagePointMonitorStatusCountMapOutput
}

type DedicatedVantagePointMonitorStatusCountMapArgs struct {
	// Number of disabled monitors using the script.
	Disabled pulumi.IntPtrInput `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled pulumi.IntPtrInput `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid pulumi.IntPtrInput `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total pulumi.IntPtrInput `pulumi:"total"`
}

func (DedicatedVantagePointMonitorStatusCountMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedVantagePointMonitorStatusCountMap)(nil)).Elem()
}

func (i DedicatedVantagePointMonitorStatusCountMapArgs) ToDedicatedVantagePointMonitorStatusCountMapOutput() DedicatedVantagePointMonitorStatusCountMapOutput {
	return i.ToDedicatedVantagePointMonitorStatusCountMapOutputWithContext(context.Background())
}

func (i DedicatedVantagePointMonitorStatusCountMapArgs) ToDedicatedVantagePointMonitorStatusCountMapOutputWithContext(ctx context.Context) DedicatedVantagePointMonitorStatusCountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedVantagePointMonitorStatusCountMapOutput)
}

// DedicatedVantagePointMonitorStatusCountMapArrayInput is an input type that accepts DedicatedVantagePointMonitorStatusCountMapArray and DedicatedVantagePointMonitorStatusCountMapArrayOutput values.
// You can construct a concrete instance of `DedicatedVantagePointMonitorStatusCountMapArrayInput` via:
//
//	DedicatedVantagePointMonitorStatusCountMapArray{ DedicatedVantagePointMonitorStatusCountMapArgs{...} }
type DedicatedVantagePointMonitorStatusCountMapArrayInput interface {
	pulumi.Input

	ToDedicatedVantagePointMonitorStatusCountMapArrayOutput() DedicatedVantagePointMonitorStatusCountMapArrayOutput
	ToDedicatedVantagePointMonitorStatusCountMapArrayOutputWithContext(context.Context) DedicatedVantagePointMonitorStatusCountMapArrayOutput
}

type DedicatedVantagePointMonitorStatusCountMapArray []DedicatedVantagePointMonitorStatusCountMapInput

func (DedicatedVantagePointMonitorStatusCountMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DedicatedVantagePointMonitorStatusCountMap)(nil)).Elem()
}

func (i DedicatedVantagePointMonitorStatusCountMapArray) ToDedicatedVantagePointMonitorStatusCountMapArrayOutput() DedicatedVantagePointMonitorStatusCountMapArrayOutput {
	return i.ToDedicatedVantagePointMonitorStatusCountMapArrayOutputWithContext(context.Background())
}

func (i DedicatedVantagePointMonitorStatusCountMapArray) ToDedicatedVantagePointMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) DedicatedVantagePointMonitorStatusCountMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedVantagePointMonitorStatusCountMapArrayOutput)
}

type DedicatedVantagePointMonitorStatusCountMapOutput struct{ *pulumi.OutputState }

func (DedicatedVantagePointMonitorStatusCountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedVantagePointMonitorStatusCountMap)(nil)).Elem()
}

func (o DedicatedVantagePointMonitorStatusCountMapOutput) ToDedicatedVantagePointMonitorStatusCountMapOutput() DedicatedVantagePointMonitorStatusCountMapOutput {
	return o
}

func (o DedicatedVantagePointMonitorStatusCountMapOutput) ToDedicatedVantagePointMonitorStatusCountMapOutputWithContext(ctx context.Context) DedicatedVantagePointMonitorStatusCountMapOutput {
	return o
}

// Number of disabled monitors using the script.
func (o DedicatedVantagePointMonitorStatusCountMapOutput) Disabled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedVantagePointMonitorStatusCountMap) *int { return v.Disabled }).(pulumi.IntPtrOutput)
}

// Number of enabled monitors using the script.
func (o DedicatedVantagePointMonitorStatusCountMapOutput) Enabled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedVantagePointMonitorStatusCountMap) *int { return v.Enabled }).(pulumi.IntPtrOutput)
}

// Number of invalid monitors using the script.
func (o DedicatedVantagePointMonitorStatusCountMapOutput) Invalid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedVantagePointMonitorStatusCountMap) *int { return v.Invalid }).(pulumi.IntPtrOutput)
}

// Total number of monitors using the script.
func (o DedicatedVantagePointMonitorStatusCountMapOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedVantagePointMonitorStatusCountMap) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type DedicatedVantagePointMonitorStatusCountMapArrayOutput struct{ *pulumi.OutputState }

func (DedicatedVantagePointMonitorStatusCountMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DedicatedVantagePointMonitorStatusCountMap)(nil)).Elem()
}

func (o DedicatedVantagePointMonitorStatusCountMapArrayOutput) ToDedicatedVantagePointMonitorStatusCountMapArrayOutput() DedicatedVantagePointMonitorStatusCountMapArrayOutput {
	return o
}

func (o DedicatedVantagePointMonitorStatusCountMapArrayOutput) ToDedicatedVantagePointMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) DedicatedVantagePointMonitorStatusCountMapArrayOutput {
	return o
}

func (o DedicatedVantagePointMonitorStatusCountMapArrayOutput) Index(i pulumi.IntInput) DedicatedVantagePointMonitorStatusCountMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DedicatedVantagePointMonitorStatusCountMap {
		return vs[0].([]DedicatedVantagePointMonitorStatusCountMap)[vs[1].(int)]
	}).(DedicatedVantagePointMonitorStatusCountMapOutput)
}

type ScriptMonitorStatusCountMap struct {
	// Number of disabled monitors using the script.
	Disabled *int `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled *int `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid *int `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total *int `pulumi:"total"`
}

// ScriptMonitorStatusCountMapInput is an input type that accepts ScriptMonitorStatusCountMap and ScriptMonitorStatusCountMapOutput values.
// You can construct a concrete instance of `ScriptMonitorStatusCountMapInput` via:
//
//	ScriptMonitorStatusCountMap{ "key": ScriptMonitorStatusCountArgs{...} }
type ScriptMonitorStatusCountMapInput interface {
	pulumi.Input

	ToScriptMonitorStatusCountMapOutput() ScriptMonitorStatusCountMapOutput
	ToScriptMonitorStatusCountMapOutputWithContext(context.Context) ScriptMonitorStatusCountMapOutput
}

type ScriptMonitorStatusCountMapArgs struct {
	// Number of disabled monitors using the script.
	Disabled pulumi.IntPtrInput `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled pulumi.IntPtrInput `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid pulumi.IntPtrInput `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total pulumi.IntPtrInput `pulumi:"total"`
}

func (ScriptMonitorStatusCountMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptMonitorStatusCountMap)(nil)).Elem()
}

func (i ScriptMonitorStatusCountMapArgs) ToScriptMonitorStatusCountMapOutput() ScriptMonitorStatusCountMapOutput {
	return i.ToScriptMonitorStatusCountMapOutputWithContext(context.Background())
}

func (i ScriptMonitorStatusCountMapArgs) ToScriptMonitorStatusCountMapOutputWithContext(ctx context.Context) ScriptMonitorStatusCountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptMonitorStatusCountMapOutput)
}

// ScriptMonitorStatusCountMapArrayInput is an input type that accepts ScriptMonitorStatusCountMapArray and ScriptMonitorStatusCountMapArrayOutput values.
// You can construct a concrete instance of `ScriptMonitorStatusCountMapArrayInput` via:
//
//	ScriptMonitorStatusCountMapArray{ ScriptMonitorStatusCountMapArgs{...} }
type ScriptMonitorStatusCountMapArrayInput interface {
	pulumi.Input

	ToScriptMonitorStatusCountMapArrayOutput() ScriptMonitorStatusCountMapArrayOutput
	ToScriptMonitorStatusCountMapArrayOutputWithContext(context.Context) ScriptMonitorStatusCountMapArrayOutput
}

type ScriptMonitorStatusCountMapArray []ScriptMonitorStatusCountMapInput

func (ScriptMonitorStatusCountMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScriptMonitorStatusCountMap)(nil)).Elem()
}

func (i ScriptMonitorStatusCountMapArray) ToScriptMonitorStatusCountMapArrayOutput() ScriptMonitorStatusCountMapArrayOutput {
	return i.ToScriptMonitorStatusCountMapArrayOutputWithContext(context.Background())
}

func (i ScriptMonitorStatusCountMapArray) ToScriptMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) ScriptMonitorStatusCountMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptMonitorStatusCountMapArrayOutput)
}

type ScriptMonitorStatusCountMapOutput struct{ *pulumi.OutputState }

func (ScriptMonitorStatusCountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptMonitorStatusCountMap)(nil)).Elem()
}

func (o ScriptMonitorStatusCountMapOutput) ToScriptMonitorStatusCountMapOutput() ScriptMonitorStatusCountMapOutput {
	return o
}

func (o ScriptMonitorStatusCountMapOutput) ToScriptMonitorStatusCountMapOutputWithContext(ctx context.Context) ScriptMonitorStatusCountMapOutput {
	return o
}

// Number of disabled monitors using the script.
func (o ScriptMonitorStatusCountMapOutput) Disabled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScriptMonitorStatusCountMap) *int { return v.Disabled }).(pulumi.IntPtrOutput)
}

// Number of enabled monitors using the script.
func (o ScriptMonitorStatusCountMapOutput) Enabled() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScriptMonitorStatusCountMap) *int { return v.Enabled }).(pulumi.IntPtrOutput)
}

// Number of invalid monitors using the script.
func (o ScriptMonitorStatusCountMapOutput) Invalid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScriptMonitorStatusCountMap) *int { return v.Invalid }).(pulumi.IntPtrOutput)
}

// Total number of monitors using the script.
func (o ScriptMonitorStatusCountMapOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScriptMonitorStatusCountMap) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type ScriptMonitorStatusCountMapArrayOutput struct{ *pulumi.OutputState }

func (ScriptMonitorStatusCountMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScriptMonitorStatusCountMap)(nil)).Elem()
}

func (o ScriptMonitorStatusCountMapArrayOutput) ToScriptMonitorStatusCountMapArrayOutput() ScriptMonitorStatusCountMapArrayOutput {
	return o
}

func (o ScriptMonitorStatusCountMapArrayOutput) ToScriptMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) ScriptMonitorStatusCountMapArrayOutput {
	return o
}

func (o ScriptMonitorStatusCountMapArrayOutput) Index(i pulumi.IntInput) ScriptMonitorStatusCountMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScriptMonitorStatusCountMap {
		return vs[0].([]ScriptMonitorStatusCountMap)[vs[1].(int)]
	}).(ScriptMonitorStatusCountMapOutput)
}

type ScriptParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten *bool `pulumi:"isOverwritten"`
	// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret *bool `pulumi:"isSecret"`
	// (Updatable) Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue *string `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameters []ScriptParameterScriptParameter `pulumi:"scriptParameters"`
}

// ScriptParameterInput is an input type that accepts ScriptParameterArgs and ScriptParameterOutput values.
// You can construct a concrete instance of `ScriptParameterInput` via:
//
//	ScriptParameterArgs{...}
type ScriptParameterInput interface {
	pulumi.Input

	ToScriptParameterOutput() ScriptParameterOutput
	ToScriptParameterOutputWithContext(context.Context) ScriptParameterOutput
}

type ScriptParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolPtrInput `pulumi:"isOverwritten"`
	// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// (Updatable) Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue pulumi.StringPtrInput `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameters ScriptParameterScriptParameterArrayInput `pulumi:"scriptParameters"`
}

func (ScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptParameter)(nil)).Elem()
}

func (i ScriptParameterArgs) ToScriptParameterOutput() ScriptParameterOutput {
	return i.ToScriptParameterOutputWithContext(context.Background())
}

func (i ScriptParameterArgs) ToScriptParameterOutputWithContext(ctx context.Context) ScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptParameterOutput)
}

// ScriptParameterArrayInput is an input type that accepts ScriptParameterArray and ScriptParameterArrayOutput values.
// You can construct a concrete instance of `ScriptParameterArrayInput` via:
//
//	ScriptParameterArray{ ScriptParameterArgs{...} }
type ScriptParameterArrayInput interface {
	pulumi.Input

	ToScriptParameterArrayOutput() ScriptParameterArrayOutput
	ToScriptParameterArrayOutputWithContext(context.Context) ScriptParameterArrayOutput
}

type ScriptParameterArray []ScriptParameterInput

func (ScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScriptParameter)(nil)).Elem()
}

func (i ScriptParameterArray) ToScriptParameterArrayOutput() ScriptParameterArrayOutput {
	return i.ToScriptParameterArrayOutputWithContext(context.Background())
}

func (i ScriptParameterArray) ToScriptParameterArrayOutputWithContext(ctx context.Context) ScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptParameterArrayOutput)
}

type ScriptParameterOutput struct{ *pulumi.OutputState }

func (ScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptParameter)(nil)).Elem()
}

func (o ScriptParameterOutput) ToScriptParameterOutput() ScriptParameterOutput {
	return o
}

func (o ScriptParameterOutput) ToScriptParameterOutputWithContext(ctx context.Context) ScriptParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o ScriptParameterOutput) IsOverwritten() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScriptParameter) *bool { return v.IsOverwritten }).(pulumi.BoolPtrOutput)
}

// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o ScriptParameterOutput) GetIsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScriptParameter) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// (Updatable) Name of the parameter.
func (o ScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v ScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// (Updatable) Value of the parameter.
func (o ScriptParameterOutput) ParamValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptParameter) *string { return v.ParamValue }).(pulumi.StringPtrOutput)
}

// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
func (o ScriptParameterOutput) ScriptParameters() ScriptParameterScriptParameterArrayOutput {
	return o.ApplyT(func(v ScriptParameter) []ScriptParameterScriptParameter { return v.ScriptParameters }).(ScriptParameterScriptParameterArrayOutput)
}

type ScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (ScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScriptParameter)(nil)).Elem()
}

func (o ScriptParameterArrayOutput) ToScriptParameterArrayOutput() ScriptParameterArrayOutput {
	return o
}

func (o ScriptParameterArrayOutput) ToScriptParameterArrayOutputWithContext(ctx context.Context) ScriptParameterArrayOutput {
	return o
}

func (o ScriptParameterArrayOutput) Index(i pulumi.IntInput) ScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScriptParameter {
		return vs[0].([]ScriptParameter)[vs[1].(int)]
	}).(ScriptParameterOutput)
}

type ScriptParameterScriptParameter struct {
	// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret *bool `pulumi:"isSecret"`
	// (Updatable) Name of the parameter.
	ParamName *string `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue *string `pulumi:"paramValue"`
}

// ScriptParameterScriptParameterInput is an input type that accepts ScriptParameterScriptParameterArgs and ScriptParameterScriptParameterOutput values.
// You can construct a concrete instance of `ScriptParameterScriptParameterInput` via:
//
//	ScriptParameterScriptParameterArgs{...}
type ScriptParameterScriptParameterInput interface {
	pulumi.Input

	ToScriptParameterScriptParameterOutput() ScriptParameterScriptParameterOutput
	ToScriptParameterScriptParameterOutputWithContext(context.Context) ScriptParameterScriptParameterOutput
}

type ScriptParameterScriptParameterArgs struct {
	// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// (Updatable) Name of the parameter.
	ParamName pulumi.StringPtrInput `pulumi:"paramName"`
	// (Updatable) Value of the parameter.
	ParamValue pulumi.StringPtrInput `pulumi:"paramValue"`
}

func (ScriptParameterScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptParameterScriptParameter)(nil)).Elem()
}

func (i ScriptParameterScriptParameterArgs) ToScriptParameterScriptParameterOutput() ScriptParameterScriptParameterOutput {
	return i.ToScriptParameterScriptParameterOutputWithContext(context.Background())
}

func (i ScriptParameterScriptParameterArgs) ToScriptParameterScriptParameterOutputWithContext(ctx context.Context) ScriptParameterScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptParameterScriptParameterOutput)
}

// ScriptParameterScriptParameterArrayInput is an input type that accepts ScriptParameterScriptParameterArray and ScriptParameterScriptParameterArrayOutput values.
// You can construct a concrete instance of `ScriptParameterScriptParameterArrayInput` via:
//
//	ScriptParameterScriptParameterArray{ ScriptParameterScriptParameterArgs{...} }
type ScriptParameterScriptParameterArrayInput interface {
	pulumi.Input

	ToScriptParameterScriptParameterArrayOutput() ScriptParameterScriptParameterArrayOutput
	ToScriptParameterScriptParameterArrayOutputWithContext(context.Context) ScriptParameterScriptParameterArrayOutput
}

type ScriptParameterScriptParameterArray []ScriptParameterScriptParameterInput

func (ScriptParameterScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScriptParameterScriptParameter)(nil)).Elem()
}

func (i ScriptParameterScriptParameterArray) ToScriptParameterScriptParameterArrayOutput() ScriptParameterScriptParameterArrayOutput {
	return i.ToScriptParameterScriptParameterArrayOutputWithContext(context.Background())
}

func (i ScriptParameterScriptParameterArray) ToScriptParameterScriptParameterArrayOutputWithContext(ctx context.Context) ScriptParameterScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScriptParameterScriptParameterArrayOutput)
}

type ScriptParameterScriptParameterOutput struct{ *pulumi.OutputState }

func (ScriptParameterScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScriptParameterScriptParameter)(nil)).Elem()
}

func (o ScriptParameterScriptParameterOutput) ToScriptParameterScriptParameterOutput() ScriptParameterScriptParameterOutput {
	return o
}

func (o ScriptParameterScriptParameterOutput) ToScriptParameterScriptParameterOutputWithContext(ctx context.Context) ScriptParameterScriptParameterOutput {
	return o
}

// (Updatable) If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o ScriptParameterScriptParameterOutput) GetIsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScriptParameterScriptParameter) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// (Updatable) Name of the parameter.
func (o ScriptParameterScriptParameterOutput) ParamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptParameterScriptParameter) *string { return v.ParamName }).(pulumi.StringPtrOutput)
}

// (Updatable) Value of the parameter.
func (o ScriptParameterScriptParameterOutput) ParamValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScriptParameterScriptParameter) *string { return v.ParamValue }).(pulumi.StringPtrOutput)
}

type ScriptParameterScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (ScriptParameterScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScriptParameterScriptParameter)(nil)).Elem()
}

func (o ScriptParameterScriptParameterArrayOutput) ToScriptParameterScriptParameterArrayOutput() ScriptParameterScriptParameterArrayOutput {
	return o
}

func (o ScriptParameterScriptParameterArrayOutput) ToScriptParameterScriptParameterArrayOutputWithContext(ctx context.Context) ScriptParameterScriptParameterArrayOutput {
	return o
}

func (o ScriptParameterScriptParameterArrayOutput) Index(i pulumi.IntInput) ScriptParameterScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScriptParameterScriptParameter {
		return vs[0].([]ScriptParameterScriptParameter)[vs[1].(int)]
	}).(ScriptParameterScriptParameterOutput)
}

type GetDedicatedVantagePointDvpStackDetail struct {
	// Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStackId string `pulumi:"dvpStackId"`
	// Type of stack.
	DvpStackType string `pulumi:"dvpStackType"`
	// Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStreamId string `pulumi:"dvpStreamId"`
	// Version of the dedicated vantage point.
	DvpVersion string `pulumi:"dvpVersion"`
}

// GetDedicatedVantagePointDvpStackDetailInput is an input type that accepts GetDedicatedVantagePointDvpStackDetailArgs and GetDedicatedVantagePointDvpStackDetailOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointDvpStackDetailInput` via:
//
//	GetDedicatedVantagePointDvpStackDetailArgs{...}
type GetDedicatedVantagePointDvpStackDetailInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointDvpStackDetailOutput() GetDedicatedVantagePointDvpStackDetailOutput
	ToGetDedicatedVantagePointDvpStackDetailOutputWithContext(context.Context) GetDedicatedVantagePointDvpStackDetailOutput
}

type GetDedicatedVantagePointDvpStackDetailArgs struct {
	// Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStackId pulumi.StringInput `pulumi:"dvpStackId"`
	// Type of stack.
	DvpStackType pulumi.StringInput `pulumi:"dvpStackType"`
	// Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStreamId pulumi.StringInput `pulumi:"dvpStreamId"`
	// Version of the dedicated vantage point.
	DvpVersion pulumi.StringInput `pulumi:"dvpVersion"`
}

func (GetDedicatedVantagePointDvpStackDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointDvpStackDetail)(nil)).Elem()
}

func (i GetDedicatedVantagePointDvpStackDetailArgs) ToGetDedicatedVantagePointDvpStackDetailOutput() GetDedicatedVantagePointDvpStackDetailOutput {
	return i.ToGetDedicatedVantagePointDvpStackDetailOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointDvpStackDetailArgs) ToGetDedicatedVantagePointDvpStackDetailOutputWithContext(ctx context.Context) GetDedicatedVantagePointDvpStackDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointDvpStackDetailOutput)
}

// GetDedicatedVantagePointDvpStackDetailArrayInput is an input type that accepts GetDedicatedVantagePointDvpStackDetailArray and GetDedicatedVantagePointDvpStackDetailArrayOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointDvpStackDetailArrayInput` via:
//
//	GetDedicatedVantagePointDvpStackDetailArray{ GetDedicatedVantagePointDvpStackDetailArgs{...} }
type GetDedicatedVantagePointDvpStackDetailArrayInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointDvpStackDetailArrayOutput() GetDedicatedVantagePointDvpStackDetailArrayOutput
	ToGetDedicatedVantagePointDvpStackDetailArrayOutputWithContext(context.Context) GetDedicatedVantagePointDvpStackDetailArrayOutput
}

type GetDedicatedVantagePointDvpStackDetailArray []GetDedicatedVantagePointDvpStackDetailInput

func (GetDedicatedVantagePointDvpStackDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointDvpStackDetail)(nil)).Elem()
}

func (i GetDedicatedVantagePointDvpStackDetailArray) ToGetDedicatedVantagePointDvpStackDetailArrayOutput() GetDedicatedVantagePointDvpStackDetailArrayOutput {
	return i.ToGetDedicatedVantagePointDvpStackDetailArrayOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointDvpStackDetailArray) ToGetDedicatedVantagePointDvpStackDetailArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointDvpStackDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointDvpStackDetailArrayOutput)
}

type GetDedicatedVantagePointDvpStackDetailOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointDvpStackDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointDvpStackDetail)(nil)).Elem()
}

func (o GetDedicatedVantagePointDvpStackDetailOutput) ToGetDedicatedVantagePointDvpStackDetailOutput() GetDedicatedVantagePointDvpStackDetailOutput {
	return o
}

func (o GetDedicatedVantagePointDvpStackDetailOutput) ToGetDedicatedVantagePointDvpStackDetailOutputWithContext(ctx context.Context) GetDedicatedVantagePointDvpStackDetailOutput {
	return o
}

// Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
func (o GetDedicatedVantagePointDvpStackDetailOutput) DvpStackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointDvpStackDetail) string { return v.DvpStackId }).(pulumi.StringOutput)
}

// Type of stack.
func (o GetDedicatedVantagePointDvpStackDetailOutput) DvpStackType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointDvpStackDetail) string { return v.DvpStackType }).(pulumi.StringOutput)
}

// Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
func (o GetDedicatedVantagePointDvpStackDetailOutput) DvpStreamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointDvpStackDetail) string { return v.DvpStreamId }).(pulumi.StringOutput)
}

// Version of the dedicated vantage point.
func (o GetDedicatedVantagePointDvpStackDetailOutput) DvpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointDvpStackDetail) string { return v.DvpVersion }).(pulumi.StringOutput)
}

type GetDedicatedVantagePointDvpStackDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointDvpStackDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointDvpStackDetail)(nil)).Elem()
}

func (o GetDedicatedVantagePointDvpStackDetailArrayOutput) ToGetDedicatedVantagePointDvpStackDetailArrayOutput() GetDedicatedVantagePointDvpStackDetailArrayOutput {
	return o
}

func (o GetDedicatedVantagePointDvpStackDetailArrayOutput) ToGetDedicatedVantagePointDvpStackDetailArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointDvpStackDetailArrayOutput {
	return o
}

func (o GetDedicatedVantagePointDvpStackDetailArrayOutput) Index(i pulumi.IntInput) GetDedicatedVantagePointDvpStackDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedVantagePointDvpStackDetail {
		return vs[0].([]GetDedicatedVantagePointDvpStackDetail)[vs[1].(int)]
	}).(GetDedicatedVantagePointDvpStackDetailOutput)
}

type GetDedicatedVantagePointMonitorStatusCountMap struct {
	// Number of disabled monitors using the script.
	Disabled int `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled int `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid int `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total int `pulumi:"total"`
}

// GetDedicatedVantagePointMonitorStatusCountMapInput is an input type that accepts GetDedicatedVantagePointMonitorStatusCountMap and GetDedicatedVantagePointMonitorStatusCountMapOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointMonitorStatusCountMapInput` via:
//
//	GetDedicatedVantagePointMonitorStatusCountMap{ "key": GetDedicatedVantagePointMonitorStatusCountArgs{...} }
type GetDedicatedVantagePointMonitorStatusCountMapInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointMonitorStatusCountMapOutput() GetDedicatedVantagePointMonitorStatusCountMapOutput
	ToGetDedicatedVantagePointMonitorStatusCountMapOutputWithContext(context.Context) GetDedicatedVantagePointMonitorStatusCountMapOutput
}

type GetDedicatedVantagePointMonitorStatusCountMapArgs struct {
	// Number of disabled monitors using the script.
	Disabled pulumi.IntInput `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled pulumi.IntInput `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid pulumi.IntInput `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetDedicatedVantagePointMonitorStatusCountMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointMonitorStatusCountMap)(nil)).Elem()
}

func (i GetDedicatedVantagePointMonitorStatusCountMapArgs) ToGetDedicatedVantagePointMonitorStatusCountMapOutput() GetDedicatedVantagePointMonitorStatusCountMapOutput {
	return i.ToGetDedicatedVantagePointMonitorStatusCountMapOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointMonitorStatusCountMapArgs) ToGetDedicatedVantagePointMonitorStatusCountMapOutputWithContext(ctx context.Context) GetDedicatedVantagePointMonitorStatusCountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointMonitorStatusCountMapOutput)
}

// GetDedicatedVantagePointMonitorStatusCountMapArrayInput is an input type that accepts GetDedicatedVantagePointMonitorStatusCountMapArray and GetDedicatedVantagePointMonitorStatusCountMapArrayOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointMonitorStatusCountMapArrayInput` via:
//
//	GetDedicatedVantagePointMonitorStatusCountMapArray{ GetDedicatedVantagePointMonitorStatusCountMapArgs{...} }
type GetDedicatedVantagePointMonitorStatusCountMapArrayInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointMonitorStatusCountMapArrayOutput() GetDedicatedVantagePointMonitorStatusCountMapArrayOutput
	ToGetDedicatedVantagePointMonitorStatusCountMapArrayOutputWithContext(context.Context) GetDedicatedVantagePointMonitorStatusCountMapArrayOutput
}

type GetDedicatedVantagePointMonitorStatusCountMapArray []GetDedicatedVantagePointMonitorStatusCountMapInput

func (GetDedicatedVantagePointMonitorStatusCountMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointMonitorStatusCountMap)(nil)).Elem()
}

func (i GetDedicatedVantagePointMonitorStatusCountMapArray) ToGetDedicatedVantagePointMonitorStatusCountMapArrayOutput() GetDedicatedVantagePointMonitorStatusCountMapArrayOutput {
	return i.ToGetDedicatedVantagePointMonitorStatusCountMapArrayOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointMonitorStatusCountMapArray) ToGetDedicatedVantagePointMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointMonitorStatusCountMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointMonitorStatusCountMapArrayOutput)
}

type GetDedicatedVantagePointMonitorStatusCountMapOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointMonitorStatusCountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointMonitorStatusCountMap)(nil)).Elem()
}

func (o GetDedicatedVantagePointMonitorStatusCountMapOutput) ToGetDedicatedVantagePointMonitorStatusCountMapOutput() GetDedicatedVantagePointMonitorStatusCountMapOutput {
	return o
}

func (o GetDedicatedVantagePointMonitorStatusCountMapOutput) ToGetDedicatedVantagePointMonitorStatusCountMapOutputWithContext(ctx context.Context) GetDedicatedVantagePointMonitorStatusCountMapOutput {
	return o
}

// Number of disabled monitors using the script.
func (o GetDedicatedVantagePointMonitorStatusCountMapOutput) Disabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointMonitorStatusCountMap) int { return v.Disabled }).(pulumi.IntOutput)
}

// Number of enabled monitors using the script.
func (o GetDedicatedVantagePointMonitorStatusCountMapOutput) Enabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointMonitorStatusCountMap) int { return v.Enabled }).(pulumi.IntOutput)
}

// Number of invalid monitors using the script.
func (o GetDedicatedVantagePointMonitorStatusCountMapOutput) Invalid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointMonitorStatusCountMap) int { return v.Invalid }).(pulumi.IntOutput)
}

// Total number of monitors using the script.
func (o GetDedicatedVantagePointMonitorStatusCountMapOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointMonitorStatusCountMap) int { return v.Total }).(pulumi.IntOutput)
}

type GetDedicatedVantagePointMonitorStatusCountMapArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointMonitorStatusCountMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointMonitorStatusCountMap)(nil)).Elem()
}

func (o GetDedicatedVantagePointMonitorStatusCountMapArrayOutput) ToGetDedicatedVantagePointMonitorStatusCountMapArrayOutput() GetDedicatedVantagePointMonitorStatusCountMapArrayOutput {
	return o
}

func (o GetDedicatedVantagePointMonitorStatusCountMapArrayOutput) ToGetDedicatedVantagePointMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointMonitorStatusCountMapArrayOutput {
	return o
}

func (o GetDedicatedVantagePointMonitorStatusCountMapArrayOutput) Index(i pulumi.IntInput) GetDedicatedVantagePointMonitorStatusCountMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedVantagePointMonitorStatusCountMap {
		return vs[0].([]GetDedicatedVantagePointMonitorStatusCountMap)[vs[1].(int)]
	}).(GetDedicatedVantagePointMonitorStatusCountMapOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollection struct {
	Items []GetDedicatedVantagePointsDedicatedVantagePointCollectionItem `pulumi:"items"`
}

// GetDedicatedVantagePointsDedicatedVantagePointCollectionInput is an input type that accepts GetDedicatedVantagePointsDedicatedVantagePointCollectionArgs and GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointsDedicatedVantagePointCollectionInput` via:
//
//	GetDedicatedVantagePointsDedicatedVantagePointCollectionArgs{...}
type GetDedicatedVantagePointsDedicatedVantagePointCollectionInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput
	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionOutputWithContext(context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionArgs struct {
	Items GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayInput `pulumi:"items"`
}

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollection)(nil)).Elem()
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionArgs) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput {
	return i.ToGetDedicatedVantagePointsDedicatedVantagePointCollectionOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionArgs) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput)
}

// GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayInput is an input type that accepts GetDedicatedVantagePointsDedicatedVantagePointCollectionArray and GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayInput` via:
//
//	GetDedicatedVantagePointsDedicatedVantagePointCollectionArray{ GetDedicatedVantagePointsDedicatedVantagePointCollectionArgs{...} }
type GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput
	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutputWithContext(context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionArray []GetDedicatedVantagePointsDedicatedVantagePointCollectionInput

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointsDedicatedVantagePointCollection)(nil)).Elem()
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionArray) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput {
	return i.ToGetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionArray) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollection)(nil)).Elem()
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput) Items() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollection) []GetDedicatedVantagePointsDedicatedVantagePointCollectionItem {
		return v.Items
	}).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointsDedicatedVantagePointCollection)(nil)).Elem()
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput) Index(i pulumi.IntInput) GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedVantagePointsDedicatedVantagePointCollection {
		return vs[0].([]GetDedicatedVantagePointsDedicatedVantagePointCollection)[vs[1].(int)]
	}).(GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItem struct {
	// The APM domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name.
	DisplayName string `pulumi:"displayName"`
	// Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
	DvpStackDetails []GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail `pulumi:"dvpStackDetails"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated vantage point.
	Id string `pulumi:"id"`
	// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
	MonitorStatusCountMaps []GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap `pulumi:"monitorStatusCountMaps"`
	// A filter to return only the resources that match the entire name.
	Name string `pulumi:"name"`
	// Name of the region.
	Region string `pulumi:"region"`
	// A filter to return only the dedicated vantage points that match a given status.
	Status string `pulumi:"status"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDedicatedVantagePointsDedicatedVantagePointCollectionItemInput is an input type that accepts GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArgs and GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointsDedicatedVantagePointCollectionItemInput` via:
//
//	GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArgs{...}
type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput
	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutputWithContext(context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArgs struct {
	// The APM domain ID the request is intended for.
	ApmDomainId pulumi.StringInput `pulumi:"apmDomainId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
	DvpStackDetails GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayInput `pulumi:"dvpStackDetails"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated vantage point.
	Id pulumi.StringInput `pulumi:"id"`
	// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
	MonitorStatusCountMaps GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayInput `pulumi:"monitorStatusCountMaps"`
	// A filter to return only the resources that match the entire name.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the region.
	Region pulumi.StringInput `pulumi:"region"`
	// A filter to return only the dedicated vantage points that match a given status.
	Status pulumi.StringInput `pulumi:"status"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItem)(nil)).Elem()
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArgs) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput {
	return i.ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArgs) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput)
}

// GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayInput is an input type that accepts GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArray and GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayInput` via:
//
//	GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArray{ GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArgs{...} }
type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput
	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutputWithContext(context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArray []GetDedicatedVantagePointsDedicatedVantagePointCollectionItemInput

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointsDedicatedVantagePointCollectionItem)(nil)).Elem()
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArray) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput {
	return i.ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArray) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItem)(nil)).Elem()
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput {
	return o
}

// The APM domain ID the request is intended for.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) string { return v.ApmDomainId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// A filter to return only the resources that match the entire display name.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Details of a Dedicated Vantage Point (DVP) stack in Resource Manager.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) DvpStackDetails() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) []GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail {
		return v.DvpStackDetails
	}).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dedicated vantage point.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) MonitorStatusCountMaps() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) []GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap {
		return v.MonitorStatusCountMaps
	}).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput)
}

// A filter to return only the resources that match the entire name.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the region.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) string { return v.Region }).(pulumi.StringOutput)
}

// A filter to return only the dedicated vantage points that match a given status.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) string { return v.Status }).(pulumi.StringOutput)
}

// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointsDedicatedVantagePointCollectionItem)(nil)).Elem()
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedVantagePointsDedicatedVantagePointCollectionItem {
		return vs[0].([]GetDedicatedVantagePointsDedicatedVantagePointCollectionItem)[vs[1].(int)]
	}).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail struct {
	// Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStackId string `pulumi:"dvpStackId"`
	// Type of stack.
	DvpStackType string `pulumi:"dvpStackType"`
	// Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStreamId string `pulumi:"dvpStreamId"`
	// Version of the dedicated vantage point.
	DvpVersion string `pulumi:"dvpVersion"`
}

// GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailInput is an input type that accepts GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArgs and GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailInput` via:
//
//	GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArgs{...}
type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput
	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutputWithContext(context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArgs struct {
	// Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStackId pulumi.StringInput `pulumi:"dvpStackId"`
	// Type of stack.
	DvpStackType pulumi.StringInput `pulumi:"dvpStackType"`
	// Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
	DvpStreamId pulumi.StringInput `pulumi:"dvpStreamId"`
	// Version of the dedicated vantage point.
	DvpVersion pulumi.StringInput `pulumi:"dvpVersion"`
}

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail)(nil)).Elem()
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArgs) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput {
	return i.ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArgs) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput)
}

// GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayInput is an input type that accepts GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArray and GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayInput` via:
//
//	GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArray{ GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArgs{...} }
type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput
	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutputWithContext(context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArray []GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailInput

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail)(nil)).Elem()
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArray) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput {
	return i.ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArray) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail)(nil)).Elem()
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput {
	return o
}

// Stack [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput) DvpStackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail) string {
		return v.DvpStackId
	}).(pulumi.StringOutput)
}

// Type of stack.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput) DvpStackType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail) string {
		return v.DvpStackType
	}).(pulumi.StringOutput)
}

// Stream [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Resource Manager stack for dedicated vantage point.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput) DvpStreamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail) string {
		return v.DvpStreamId
	}).(pulumi.StringOutput)
}

// Version of the dedicated vantage point.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput) DvpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail) string {
		return v.DvpVersion
	}).(pulumi.StringOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail)(nil)).Elem()
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput) Index(i pulumi.IntInput) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail {
		return vs[0].([]GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetail)[vs[1].(int)]
	}).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap struct {
	// Number of disabled monitors using the script.
	Disabled int `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled int `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid int `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total int `pulumi:"total"`
}

// GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapInput is an input type that accepts GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap and GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapInput` via:
//
//	GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap{ "key": GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountArgs{...} }
type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput
	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutputWithContext(context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArgs struct {
	// Number of disabled monitors using the script.
	Disabled pulumi.IntInput `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled pulumi.IntInput `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid pulumi.IntInput `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap)(nil)).Elem()
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArgs) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput {
	return i.ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArgs) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput)
}

// GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayInput is an input type that accepts GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArray and GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayInput` via:
//
//	GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArray{ GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArgs{...} }
type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput
	ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutputWithContext(context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArray []GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapInput

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap)(nil)).Elem()
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArray) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput {
	return i.ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArray) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap)(nil)).Elem()
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput {
	return o
}

// Number of disabled monitors using the script.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput) Disabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap) int {
		return v.Disabled
	}).(pulumi.IntOutput)
}

// Number of enabled monitors using the script.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput) Enabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap) int {
		return v.Enabled
	}).(pulumi.IntOutput)
}

// Number of invalid monitors using the script.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput) Invalid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap) int {
		return v.Invalid
	}).(pulumi.IntOutput)
}

// Total number of monitors using the script.
func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap) int {
		return v.Total
	}).(pulumi.IntOutput)
}

type GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap)(nil)).Elem()
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput() GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput) ToGetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput {
	return o
}

func (o GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput) Index(i pulumi.IntInput) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap {
		return vs[0].([]GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMap)[vs[1].(int)]
	}).(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput)
}

type GetDedicatedVantagePointsFilter struct {
	// A filter to return only the resources that match the entire name.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetDedicatedVantagePointsFilterInput is an input type that accepts GetDedicatedVantagePointsFilterArgs and GetDedicatedVantagePointsFilterOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointsFilterInput` via:
//
//	GetDedicatedVantagePointsFilterArgs{...}
type GetDedicatedVantagePointsFilterInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointsFilterOutput() GetDedicatedVantagePointsFilterOutput
	ToGetDedicatedVantagePointsFilterOutputWithContext(context.Context) GetDedicatedVantagePointsFilterOutput
}

type GetDedicatedVantagePointsFilterArgs struct {
	// A filter to return only the resources that match the entire name.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDedicatedVantagePointsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsFilter)(nil)).Elem()
}

func (i GetDedicatedVantagePointsFilterArgs) ToGetDedicatedVantagePointsFilterOutput() GetDedicatedVantagePointsFilterOutput {
	return i.ToGetDedicatedVantagePointsFilterOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointsFilterArgs) ToGetDedicatedVantagePointsFilterOutputWithContext(ctx context.Context) GetDedicatedVantagePointsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointsFilterOutput)
}

// GetDedicatedVantagePointsFilterArrayInput is an input type that accepts GetDedicatedVantagePointsFilterArray and GetDedicatedVantagePointsFilterArrayOutput values.
// You can construct a concrete instance of `GetDedicatedVantagePointsFilterArrayInput` via:
//
//	GetDedicatedVantagePointsFilterArray{ GetDedicatedVantagePointsFilterArgs{...} }
type GetDedicatedVantagePointsFilterArrayInput interface {
	pulumi.Input

	ToGetDedicatedVantagePointsFilterArrayOutput() GetDedicatedVantagePointsFilterArrayOutput
	ToGetDedicatedVantagePointsFilterArrayOutputWithContext(context.Context) GetDedicatedVantagePointsFilterArrayOutput
}

type GetDedicatedVantagePointsFilterArray []GetDedicatedVantagePointsFilterInput

func (GetDedicatedVantagePointsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointsFilter)(nil)).Elem()
}

func (i GetDedicatedVantagePointsFilterArray) ToGetDedicatedVantagePointsFilterArrayOutput() GetDedicatedVantagePointsFilterArrayOutput {
	return i.ToGetDedicatedVantagePointsFilterArrayOutputWithContext(context.Background())
}

func (i GetDedicatedVantagePointsFilterArray) ToGetDedicatedVantagePointsFilterArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedVantagePointsFilterArrayOutput)
}

type GetDedicatedVantagePointsFilterOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedVantagePointsFilter)(nil)).Elem()
}

func (o GetDedicatedVantagePointsFilterOutput) ToGetDedicatedVantagePointsFilterOutput() GetDedicatedVantagePointsFilterOutput {
	return o
}

func (o GetDedicatedVantagePointsFilterOutput) ToGetDedicatedVantagePointsFilterOutputWithContext(ctx context.Context) GetDedicatedVantagePointsFilterOutput {
	return o
}

// A filter to return only the resources that match the entire name.
func (o GetDedicatedVantagePointsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDedicatedVantagePointsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetDedicatedVantagePointsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDedicatedVantagePointsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDedicatedVantagePointsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedVantagePointsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedVantagePointsFilter)(nil)).Elem()
}

func (o GetDedicatedVantagePointsFilterArrayOutput) ToGetDedicatedVantagePointsFilterArrayOutput() GetDedicatedVantagePointsFilterArrayOutput {
	return o
}

func (o GetDedicatedVantagePointsFilterArrayOutput) ToGetDedicatedVantagePointsFilterArrayOutputWithContext(ctx context.Context) GetDedicatedVantagePointsFilterArrayOutput {
	return o
}

func (o GetDedicatedVantagePointsFilterArrayOutput) Index(i pulumi.IntInput) GetDedicatedVantagePointsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedVantagePointsFilter {
		return vs[0].([]GetDedicatedVantagePointsFilter)[vs[1].(int)]
	}).(GetDedicatedVantagePointsFilterOutput)
}

type GetMonitorConfiguration struct {
	// Type of configuration.
	ConfigType string `pulumi:"configType"`
	// Dns settings.
	DnsConfigurations []GetMonitorConfigurationDnsConfiguration `pulumi:"dnsConfigurations"`
	// If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled bool `pulumi:"isCertificateValidationEnabled"`
	// If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried bool `pulumi:"isFailureRetried"`
	// If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled bool `pulumi:"isRedirectionEnabled"`
	// Details of the network configuration.
	NetworkConfigurations []GetMonitorConfigurationNetworkConfiguration `pulumi:"networkConfigurations"`
	// Details for request HTTP authentication.
	ReqAuthenticationDetails []GetMonitorConfigurationReqAuthenticationDetail `pulumi:"reqAuthenticationDetails"`
	// Request http authentication scheme.
	ReqAuthenticationScheme string `pulumi:"reqAuthenticationScheme"`
	// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders []GetMonitorConfigurationRequestHeader `pulumi:"requestHeaders"`
	// Request HTTP method.
	RequestMethod string `pulumi:"requestMethod"`
	// Request post body content.
	RequestPostBody string `pulumi:"requestPostBody"`
	// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams []GetMonitorConfigurationRequestQueryParam `pulumi:"requestQueryParams"`
	// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes []string `pulumi:"verifyResponseCodes"`
	// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent string `pulumi:"verifyResponseContent"`
	// Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts []GetMonitorConfigurationVerifyText `pulumi:"verifyTexts"`
}

// GetMonitorConfigurationInput is an input type that accepts GetMonitorConfigurationArgs and GetMonitorConfigurationOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationInput` via:
//
//	GetMonitorConfigurationArgs{...}
type GetMonitorConfigurationInput interface {
	pulumi.Input

	ToGetMonitorConfigurationOutput() GetMonitorConfigurationOutput
	ToGetMonitorConfigurationOutputWithContext(context.Context) GetMonitorConfigurationOutput
}

type GetMonitorConfigurationArgs struct {
	// Type of configuration.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// Dns settings.
	DnsConfigurations GetMonitorConfigurationDnsConfigurationArrayInput `pulumi:"dnsConfigurations"`
	// If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled pulumi.BoolInput `pulumi:"isCertificateValidationEnabled"`
	// If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried pulumi.BoolInput `pulumi:"isFailureRetried"`
	// If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled pulumi.BoolInput `pulumi:"isRedirectionEnabled"`
	// Details of the network configuration.
	NetworkConfigurations GetMonitorConfigurationNetworkConfigurationArrayInput `pulumi:"networkConfigurations"`
	// Details for request HTTP authentication.
	ReqAuthenticationDetails GetMonitorConfigurationReqAuthenticationDetailArrayInput `pulumi:"reqAuthenticationDetails"`
	// Request http authentication scheme.
	ReqAuthenticationScheme pulumi.StringInput `pulumi:"reqAuthenticationScheme"`
	// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders GetMonitorConfigurationRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// Request HTTP method.
	RequestMethod pulumi.StringInput `pulumi:"requestMethod"`
	// Request post body content.
	RequestPostBody pulumi.StringInput `pulumi:"requestPostBody"`
	// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams GetMonitorConfigurationRequestQueryParamArrayInput `pulumi:"requestQueryParams"`
	// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes pulumi.StringArrayInput `pulumi:"verifyResponseCodes"`
	// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent pulumi.StringInput `pulumi:"verifyResponseContent"`
	// Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts GetMonitorConfigurationVerifyTextArrayInput `pulumi:"verifyTexts"`
}

func (GetMonitorConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfiguration)(nil)).Elem()
}

func (i GetMonitorConfigurationArgs) ToGetMonitorConfigurationOutput() GetMonitorConfigurationOutput {
	return i.ToGetMonitorConfigurationOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationArgs) ToGetMonitorConfigurationOutputWithContext(ctx context.Context) GetMonitorConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationOutput)
}

// GetMonitorConfigurationArrayInput is an input type that accepts GetMonitorConfigurationArray and GetMonitorConfigurationArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationArrayInput` via:
//
//	GetMonitorConfigurationArray{ GetMonitorConfigurationArgs{...} }
type GetMonitorConfigurationArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationArrayOutput() GetMonitorConfigurationArrayOutput
	ToGetMonitorConfigurationArrayOutputWithContext(context.Context) GetMonitorConfigurationArrayOutput
}

type GetMonitorConfigurationArray []GetMonitorConfigurationInput

func (GetMonitorConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfiguration)(nil)).Elem()
}

func (i GetMonitorConfigurationArray) ToGetMonitorConfigurationArrayOutput() GetMonitorConfigurationArrayOutput {
	return i.ToGetMonitorConfigurationArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationArray) ToGetMonitorConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationArrayOutput)
}

type GetMonitorConfigurationOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfiguration)(nil)).Elem()
}

func (o GetMonitorConfigurationOutput) ToGetMonitorConfigurationOutput() GetMonitorConfigurationOutput {
	return o
}

func (o GetMonitorConfigurationOutput) ToGetMonitorConfigurationOutputWithContext(ctx context.Context) GetMonitorConfigurationOutput {
	return o
}

// Type of configuration.
func (o GetMonitorConfigurationOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) string { return v.ConfigType }).(pulumi.StringOutput)
}

// Dns settings.
func (o GetMonitorConfigurationOutput) DnsConfigurations() GetMonitorConfigurationDnsConfigurationArrayOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) []GetMonitorConfigurationDnsConfiguration { return v.DnsConfigurations }).(GetMonitorConfigurationDnsConfigurationArrayOutput)
}

// If certificate validation is enabled, then the call will fail in case of certification errors.
func (o GetMonitorConfigurationOutput) IsCertificateValidationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) bool { return v.IsCertificateValidationEnabled }).(pulumi.BoolOutput)
}

// If isFailureRetried is enabled, then a failed call will be retried.
func (o GetMonitorConfigurationOutput) IsFailureRetried() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) bool { return v.IsFailureRetried }).(pulumi.BoolOutput)
}

// If redirection enabled, then redirects will be allowed while accessing target URL.
func (o GetMonitorConfigurationOutput) IsRedirectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) bool { return v.IsRedirectionEnabled }).(pulumi.BoolOutput)
}

// Details of the network configuration.
func (o GetMonitorConfigurationOutput) NetworkConfigurations() GetMonitorConfigurationNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) []GetMonitorConfigurationNetworkConfiguration {
		return v.NetworkConfigurations
	}).(GetMonitorConfigurationNetworkConfigurationArrayOutput)
}

// Details for request HTTP authentication.
func (o GetMonitorConfigurationOutput) ReqAuthenticationDetails() GetMonitorConfigurationReqAuthenticationDetailArrayOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) []GetMonitorConfigurationReqAuthenticationDetail {
		return v.ReqAuthenticationDetails
	}).(GetMonitorConfigurationReqAuthenticationDetailArrayOutput)
}

// Request http authentication scheme.
func (o GetMonitorConfigurationOutput) ReqAuthenticationScheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) string { return v.ReqAuthenticationScheme }).(pulumi.StringOutput)
}

// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o GetMonitorConfigurationOutput) RequestHeaders() GetMonitorConfigurationRequestHeaderArrayOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) []GetMonitorConfigurationRequestHeader { return v.RequestHeaders }).(GetMonitorConfigurationRequestHeaderArrayOutput)
}

// Request HTTP method.
func (o GetMonitorConfigurationOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) string { return v.RequestMethod }).(pulumi.StringOutput)
}

// Request post body content.
func (o GetMonitorConfigurationOutput) RequestPostBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) string { return v.RequestPostBody }).(pulumi.StringOutput)
}

// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
func (o GetMonitorConfigurationOutput) RequestQueryParams() GetMonitorConfigurationRequestQueryParamArrayOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) []GetMonitorConfigurationRequestQueryParam {
		return v.RequestQueryParams
	}).(GetMonitorConfigurationRequestQueryParamArrayOutput)
}

// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
func (o GetMonitorConfigurationOutput) VerifyResponseCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) []string { return v.VerifyResponseCodes }).(pulumi.StringArrayOutput)
}

// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
func (o GetMonitorConfigurationOutput) VerifyResponseContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) string { return v.VerifyResponseContent }).(pulumi.StringOutput)
}

// Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
func (o GetMonitorConfigurationOutput) VerifyTexts() GetMonitorConfigurationVerifyTextArrayOutput {
	return o.ApplyT(func(v GetMonitorConfiguration) []GetMonitorConfigurationVerifyText { return v.VerifyTexts }).(GetMonitorConfigurationVerifyTextArrayOutput)
}

type GetMonitorConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfiguration)(nil)).Elem()
}

func (o GetMonitorConfigurationArrayOutput) ToGetMonitorConfigurationArrayOutput() GetMonitorConfigurationArrayOutput {
	return o
}

func (o GetMonitorConfigurationArrayOutput) ToGetMonitorConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationArrayOutput {
	return o
}

func (o GetMonitorConfigurationArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfiguration {
		return vs[0].([]GetMonitorConfiguration)[vs[1].(int)]
	}).(GetMonitorConfigurationOutput)
}

type GetMonitorConfigurationDnsConfiguration struct {
	// If isOverrideDns is true, then dns will be overridden.
	IsOverrideDns bool `pulumi:"isOverrideDns"`
	// Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
	OverrideDnsIp string `pulumi:"overrideDnsIp"`
}

// GetMonitorConfigurationDnsConfigurationInput is an input type that accepts GetMonitorConfigurationDnsConfigurationArgs and GetMonitorConfigurationDnsConfigurationOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationDnsConfigurationInput` via:
//
//	GetMonitorConfigurationDnsConfigurationArgs{...}
type GetMonitorConfigurationDnsConfigurationInput interface {
	pulumi.Input

	ToGetMonitorConfigurationDnsConfigurationOutput() GetMonitorConfigurationDnsConfigurationOutput
	ToGetMonitorConfigurationDnsConfigurationOutputWithContext(context.Context) GetMonitorConfigurationDnsConfigurationOutput
}

type GetMonitorConfigurationDnsConfigurationArgs struct {
	// If isOverrideDns is true, then dns will be overridden.
	IsOverrideDns pulumi.BoolInput `pulumi:"isOverrideDns"`
	// Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
	OverrideDnsIp pulumi.StringInput `pulumi:"overrideDnsIp"`
}

func (GetMonitorConfigurationDnsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationDnsConfiguration)(nil)).Elem()
}

func (i GetMonitorConfigurationDnsConfigurationArgs) ToGetMonitorConfigurationDnsConfigurationOutput() GetMonitorConfigurationDnsConfigurationOutput {
	return i.ToGetMonitorConfigurationDnsConfigurationOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationDnsConfigurationArgs) ToGetMonitorConfigurationDnsConfigurationOutputWithContext(ctx context.Context) GetMonitorConfigurationDnsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationDnsConfigurationOutput)
}

// GetMonitorConfigurationDnsConfigurationArrayInput is an input type that accepts GetMonitorConfigurationDnsConfigurationArray and GetMonitorConfigurationDnsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationDnsConfigurationArrayInput` via:
//
//	GetMonitorConfigurationDnsConfigurationArray{ GetMonitorConfigurationDnsConfigurationArgs{...} }
type GetMonitorConfigurationDnsConfigurationArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationDnsConfigurationArrayOutput() GetMonitorConfigurationDnsConfigurationArrayOutput
	ToGetMonitorConfigurationDnsConfigurationArrayOutputWithContext(context.Context) GetMonitorConfigurationDnsConfigurationArrayOutput
}

type GetMonitorConfigurationDnsConfigurationArray []GetMonitorConfigurationDnsConfigurationInput

func (GetMonitorConfigurationDnsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationDnsConfiguration)(nil)).Elem()
}

func (i GetMonitorConfigurationDnsConfigurationArray) ToGetMonitorConfigurationDnsConfigurationArrayOutput() GetMonitorConfigurationDnsConfigurationArrayOutput {
	return i.ToGetMonitorConfigurationDnsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationDnsConfigurationArray) ToGetMonitorConfigurationDnsConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationDnsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationDnsConfigurationArrayOutput)
}

type GetMonitorConfigurationDnsConfigurationOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationDnsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationDnsConfiguration)(nil)).Elem()
}

func (o GetMonitorConfigurationDnsConfigurationOutput) ToGetMonitorConfigurationDnsConfigurationOutput() GetMonitorConfigurationDnsConfigurationOutput {
	return o
}

func (o GetMonitorConfigurationDnsConfigurationOutput) ToGetMonitorConfigurationDnsConfigurationOutputWithContext(ctx context.Context) GetMonitorConfigurationDnsConfigurationOutput {
	return o
}

// If isOverrideDns is true, then dns will be overridden.
func (o GetMonitorConfigurationDnsConfigurationOutput) IsOverrideDns() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorConfigurationDnsConfiguration) bool { return v.IsOverrideDns }).(pulumi.BoolOutput)
}

// Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
func (o GetMonitorConfigurationDnsConfigurationOutput) OverrideDnsIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationDnsConfiguration) string { return v.OverrideDnsIp }).(pulumi.StringOutput)
}

type GetMonitorConfigurationDnsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationDnsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationDnsConfiguration)(nil)).Elem()
}

func (o GetMonitorConfigurationDnsConfigurationArrayOutput) ToGetMonitorConfigurationDnsConfigurationArrayOutput() GetMonitorConfigurationDnsConfigurationArrayOutput {
	return o
}

func (o GetMonitorConfigurationDnsConfigurationArrayOutput) ToGetMonitorConfigurationDnsConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationDnsConfigurationArrayOutput {
	return o
}

func (o GetMonitorConfigurationDnsConfigurationArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationDnsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigurationDnsConfiguration {
		return vs[0].([]GetMonitorConfigurationDnsConfiguration)[vs[1].(int)]
	}).(GetMonitorConfigurationDnsConfigurationOutput)
}

type GetMonitorConfigurationNetworkConfiguration struct {
	// Number of hops.
	NumberOfHops int `pulumi:"numberOfHops"`
	// Type of probe mode when TCP protocol is selected.
	ProbeMode string `pulumi:"probeMode"`
	// Number of probes per hop.
	ProbePerHop int `pulumi:"probePerHop"`
	// Type of protocol.
	Protocol string `pulumi:"protocol"`
	// Number of probe packets sent out simultaneously.
	TransmissionRate int `pulumi:"transmissionRate"`
}

// GetMonitorConfigurationNetworkConfigurationInput is an input type that accepts GetMonitorConfigurationNetworkConfigurationArgs and GetMonitorConfigurationNetworkConfigurationOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationNetworkConfigurationInput` via:
//
//	GetMonitorConfigurationNetworkConfigurationArgs{...}
type GetMonitorConfigurationNetworkConfigurationInput interface {
	pulumi.Input

	ToGetMonitorConfigurationNetworkConfigurationOutput() GetMonitorConfigurationNetworkConfigurationOutput
	ToGetMonitorConfigurationNetworkConfigurationOutputWithContext(context.Context) GetMonitorConfigurationNetworkConfigurationOutput
}

type GetMonitorConfigurationNetworkConfigurationArgs struct {
	// Number of hops.
	NumberOfHops pulumi.IntInput `pulumi:"numberOfHops"`
	// Type of probe mode when TCP protocol is selected.
	ProbeMode pulumi.StringInput `pulumi:"probeMode"`
	// Number of probes per hop.
	ProbePerHop pulumi.IntInput `pulumi:"probePerHop"`
	// Type of protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Number of probe packets sent out simultaneously.
	TransmissionRate pulumi.IntInput `pulumi:"transmissionRate"`
}

func (GetMonitorConfigurationNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationNetworkConfiguration)(nil)).Elem()
}

func (i GetMonitorConfigurationNetworkConfigurationArgs) ToGetMonitorConfigurationNetworkConfigurationOutput() GetMonitorConfigurationNetworkConfigurationOutput {
	return i.ToGetMonitorConfigurationNetworkConfigurationOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationNetworkConfigurationArgs) ToGetMonitorConfigurationNetworkConfigurationOutputWithContext(ctx context.Context) GetMonitorConfigurationNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationNetworkConfigurationOutput)
}

// GetMonitorConfigurationNetworkConfigurationArrayInput is an input type that accepts GetMonitorConfigurationNetworkConfigurationArray and GetMonitorConfigurationNetworkConfigurationArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationNetworkConfigurationArrayInput` via:
//
//	GetMonitorConfigurationNetworkConfigurationArray{ GetMonitorConfigurationNetworkConfigurationArgs{...} }
type GetMonitorConfigurationNetworkConfigurationArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationNetworkConfigurationArrayOutput() GetMonitorConfigurationNetworkConfigurationArrayOutput
	ToGetMonitorConfigurationNetworkConfigurationArrayOutputWithContext(context.Context) GetMonitorConfigurationNetworkConfigurationArrayOutput
}

type GetMonitorConfigurationNetworkConfigurationArray []GetMonitorConfigurationNetworkConfigurationInput

func (GetMonitorConfigurationNetworkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationNetworkConfiguration)(nil)).Elem()
}

func (i GetMonitorConfigurationNetworkConfigurationArray) ToGetMonitorConfigurationNetworkConfigurationArrayOutput() GetMonitorConfigurationNetworkConfigurationArrayOutput {
	return i.ToGetMonitorConfigurationNetworkConfigurationArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationNetworkConfigurationArray) ToGetMonitorConfigurationNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationNetworkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationNetworkConfigurationArrayOutput)
}

type GetMonitorConfigurationNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationNetworkConfiguration)(nil)).Elem()
}

func (o GetMonitorConfigurationNetworkConfigurationOutput) ToGetMonitorConfigurationNetworkConfigurationOutput() GetMonitorConfigurationNetworkConfigurationOutput {
	return o
}

func (o GetMonitorConfigurationNetworkConfigurationOutput) ToGetMonitorConfigurationNetworkConfigurationOutputWithContext(ctx context.Context) GetMonitorConfigurationNetworkConfigurationOutput {
	return o
}

// Number of hops.
func (o GetMonitorConfigurationNetworkConfigurationOutput) NumberOfHops() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorConfigurationNetworkConfiguration) int { return v.NumberOfHops }).(pulumi.IntOutput)
}

// Type of probe mode when TCP protocol is selected.
func (o GetMonitorConfigurationNetworkConfigurationOutput) ProbeMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationNetworkConfiguration) string { return v.ProbeMode }).(pulumi.StringOutput)
}

// Number of probes per hop.
func (o GetMonitorConfigurationNetworkConfigurationOutput) ProbePerHop() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorConfigurationNetworkConfiguration) int { return v.ProbePerHop }).(pulumi.IntOutput)
}

// Type of protocol.
func (o GetMonitorConfigurationNetworkConfigurationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationNetworkConfiguration) string { return v.Protocol }).(pulumi.StringOutput)
}

// Number of probe packets sent out simultaneously.
func (o GetMonitorConfigurationNetworkConfigurationOutput) TransmissionRate() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorConfigurationNetworkConfiguration) int { return v.TransmissionRate }).(pulumi.IntOutput)
}

type GetMonitorConfigurationNetworkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationNetworkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationNetworkConfiguration)(nil)).Elem()
}

func (o GetMonitorConfigurationNetworkConfigurationArrayOutput) ToGetMonitorConfigurationNetworkConfigurationArrayOutput() GetMonitorConfigurationNetworkConfigurationArrayOutput {
	return o
}

func (o GetMonitorConfigurationNetworkConfigurationArrayOutput) ToGetMonitorConfigurationNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationNetworkConfigurationArrayOutput {
	return o
}

func (o GetMonitorConfigurationNetworkConfigurationArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationNetworkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigurationNetworkConfiguration {
		return vs[0].([]GetMonitorConfigurationNetworkConfiguration)[vs[1].(int)]
	}).(GetMonitorConfigurationNetworkConfigurationOutput)
}

type GetMonitorConfigurationReqAuthenticationDetail struct {
	// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders []GetMonitorConfigurationReqAuthenticationDetailAuthHeader `pulumi:"authHeaders"`
	// Request method.
	AuthRequestMethod string `pulumi:"authRequestMethod"`
	// Request post body.
	AuthRequestPostBody string `pulumi:"authRequestPostBody"`
	// Authentication token.
	AuthToken string `pulumi:"authToken"`
	// URL to get authetication token.
	AuthUrl string `pulumi:"authUrl"`
	// Username for authentication.
	AuthUserName string `pulumi:"authUserName"`
	// User password for authentication.
	AuthUserPassword string `pulumi:"authUserPassword"`
	// Request http oauth scheme.
	OauthScheme string `pulumi:"oauthScheme"`
}

// GetMonitorConfigurationReqAuthenticationDetailInput is an input type that accepts GetMonitorConfigurationReqAuthenticationDetailArgs and GetMonitorConfigurationReqAuthenticationDetailOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationReqAuthenticationDetailInput` via:
//
//	GetMonitorConfigurationReqAuthenticationDetailArgs{...}
type GetMonitorConfigurationReqAuthenticationDetailInput interface {
	pulumi.Input

	ToGetMonitorConfigurationReqAuthenticationDetailOutput() GetMonitorConfigurationReqAuthenticationDetailOutput
	ToGetMonitorConfigurationReqAuthenticationDetailOutputWithContext(context.Context) GetMonitorConfigurationReqAuthenticationDetailOutput
}

type GetMonitorConfigurationReqAuthenticationDetailArgs struct {
	// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayInput `pulumi:"authHeaders"`
	// Request method.
	AuthRequestMethod pulumi.StringInput `pulumi:"authRequestMethod"`
	// Request post body.
	AuthRequestPostBody pulumi.StringInput `pulumi:"authRequestPostBody"`
	// Authentication token.
	AuthToken pulumi.StringInput `pulumi:"authToken"`
	// URL to get authetication token.
	AuthUrl pulumi.StringInput `pulumi:"authUrl"`
	// Username for authentication.
	AuthUserName pulumi.StringInput `pulumi:"authUserName"`
	// User password for authentication.
	AuthUserPassword pulumi.StringInput `pulumi:"authUserPassword"`
	// Request http oauth scheme.
	OauthScheme pulumi.StringInput `pulumi:"oauthScheme"`
}

func (GetMonitorConfigurationReqAuthenticationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetail)(nil)).Elem()
}

func (i GetMonitorConfigurationReqAuthenticationDetailArgs) ToGetMonitorConfigurationReqAuthenticationDetailOutput() GetMonitorConfigurationReqAuthenticationDetailOutput {
	return i.ToGetMonitorConfigurationReqAuthenticationDetailOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationReqAuthenticationDetailArgs) ToGetMonitorConfigurationReqAuthenticationDetailOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationReqAuthenticationDetailOutput)
}

// GetMonitorConfigurationReqAuthenticationDetailArrayInput is an input type that accepts GetMonitorConfigurationReqAuthenticationDetailArray and GetMonitorConfigurationReqAuthenticationDetailArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationReqAuthenticationDetailArrayInput` via:
//
//	GetMonitorConfigurationReqAuthenticationDetailArray{ GetMonitorConfigurationReqAuthenticationDetailArgs{...} }
type GetMonitorConfigurationReqAuthenticationDetailArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationReqAuthenticationDetailArrayOutput() GetMonitorConfigurationReqAuthenticationDetailArrayOutput
	ToGetMonitorConfigurationReqAuthenticationDetailArrayOutputWithContext(context.Context) GetMonitorConfigurationReqAuthenticationDetailArrayOutput
}

type GetMonitorConfigurationReqAuthenticationDetailArray []GetMonitorConfigurationReqAuthenticationDetailInput

func (GetMonitorConfigurationReqAuthenticationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationReqAuthenticationDetail)(nil)).Elem()
}

func (i GetMonitorConfigurationReqAuthenticationDetailArray) ToGetMonitorConfigurationReqAuthenticationDetailArrayOutput() GetMonitorConfigurationReqAuthenticationDetailArrayOutput {
	return i.ToGetMonitorConfigurationReqAuthenticationDetailArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationReqAuthenticationDetailArray) ToGetMonitorConfigurationReqAuthenticationDetailArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationReqAuthenticationDetailArrayOutput)
}

type GetMonitorConfigurationReqAuthenticationDetailOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationReqAuthenticationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetail)(nil)).Elem()
}

func (o GetMonitorConfigurationReqAuthenticationDetailOutput) ToGetMonitorConfigurationReqAuthenticationDetailOutput() GetMonitorConfigurationReqAuthenticationDetailOutput {
	return o
}

func (o GetMonitorConfigurationReqAuthenticationDetailOutput) ToGetMonitorConfigurationReqAuthenticationDetailOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailOutput {
	return o
}

// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o GetMonitorConfigurationReqAuthenticationDetailOutput) AuthHeaders() GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetail) []GetMonitorConfigurationReqAuthenticationDetailAuthHeader {
		return v.AuthHeaders
	}).(GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput)
}

// Request method.
func (o GetMonitorConfigurationReqAuthenticationDetailOutput) AuthRequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetail) string { return v.AuthRequestMethod }).(pulumi.StringOutput)
}

// Request post body.
func (o GetMonitorConfigurationReqAuthenticationDetailOutput) AuthRequestPostBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetail) string { return v.AuthRequestPostBody }).(pulumi.StringOutput)
}

// Authentication token.
func (o GetMonitorConfigurationReqAuthenticationDetailOutput) AuthToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetail) string { return v.AuthToken }).(pulumi.StringOutput)
}

// URL to get authetication token.
func (o GetMonitorConfigurationReqAuthenticationDetailOutput) AuthUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetail) string { return v.AuthUrl }).(pulumi.StringOutput)
}

// Username for authentication.
func (o GetMonitorConfigurationReqAuthenticationDetailOutput) AuthUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetail) string { return v.AuthUserName }).(pulumi.StringOutput)
}

// User password for authentication.
func (o GetMonitorConfigurationReqAuthenticationDetailOutput) AuthUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetail) string { return v.AuthUserPassword }).(pulumi.StringOutput)
}

// Request http oauth scheme.
func (o GetMonitorConfigurationReqAuthenticationDetailOutput) OauthScheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetail) string { return v.OauthScheme }).(pulumi.StringOutput)
}

type GetMonitorConfigurationReqAuthenticationDetailArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationReqAuthenticationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationReqAuthenticationDetail)(nil)).Elem()
}

func (o GetMonitorConfigurationReqAuthenticationDetailArrayOutput) ToGetMonitorConfigurationReqAuthenticationDetailArrayOutput() GetMonitorConfigurationReqAuthenticationDetailArrayOutput {
	return o
}

func (o GetMonitorConfigurationReqAuthenticationDetailArrayOutput) ToGetMonitorConfigurationReqAuthenticationDetailArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailArrayOutput {
	return o
}

func (o GetMonitorConfigurationReqAuthenticationDetailArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationReqAuthenticationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigurationReqAuthenticationDetail {
		return vs[0].([]GetMonitorConfigurationReqAuthenticationDetail)[vs[1].(int)]
	}).(GetMonitorConfigurationReqAuthenticationDetailOutput)
}

type GetMonitorConfigurationReqAuthenticationDetailAuthHeader struct {
	// Name of the header.
	HeaderName string `pulumi:"headerName"`
	// Value of the header.
	HeaderValue string `pulumi:"headerValue"`
}

// GetMonitorConfigurationReqAuthenticationDetailAuthHeaderInput is an input type that accepts GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArgs and GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationReqAuthenticationDetailAuthHeaderInput` via:
//
//	GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArgs{...}
type GetMonitorConfigurationReqAuthenticationDetailAuthHeaderInput interface {
	pulumi.Input

	ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput() GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput
	ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutputWithContext(context.Context) GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput
}

type GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArgs struct {
	// Name of the header.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Value of the header.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetailAuthHeader)(nil)).Elem()
}

func (i GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArgs) ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput() GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput {
	return i.ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArgs) ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput)
}

// GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayInput is an input type that accepts GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArray and GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayInput` via:
//
//	GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArray{ GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArgs{...} }
type GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput() GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput
	ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutputWithContext(context.Context) GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput
}

type GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArray []GetMonitorConfigurationReqAuthenticationDetailAuthHeaderInput

func (GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationReqAuthenticationDetailAuthHeader)(nil)).Elem()
}

func (i GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArray) ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput() GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput {
	return i.ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArray) ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput)
}

type GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetailAuthHeader)(nil)).Elem()
}

func (o GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput) ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput() GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput {
	return o
}

func (o GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput) ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput {
	return o
}

// Name of the header.
func (o GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetailAuthHeader) string { return v.HeaderName }).(pulumi.StringOutput)
}

// Value of the header.
func (o GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationReqAuthenticationDetailAuthHeader) string { return v.HeaderValue }).(pulumi.StringOutput)
}

type GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationReqAuthenticationDetailAuthHeader)(nil)).Elem()
}

func (o GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput) ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput() GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput {
	return o
}

func (o GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput) ToGetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput {
	return o
}

func (o GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigurationReqAuthenticationDetailAuthHeader {
		return vs[0].([]GetMonitorConfigurationReqAuthenticationDetailAuthHeader)[vs[1].(int)]
	}).(GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput)
}

type GetMonitorConfigurationRequestHeader struct {
	// Name of the header.
	HeaderName string `pulumi:"headerName"`
	// Value of the header.
	HeaderValue string `pulumi:"headerValue"`
}

// GetMonitorConfigurationRequestHeaderInput is an input type that accepts GetMonitorConfigurationRequestHeaderArgs and GetMonitorConfigurationRequestHeaderOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationRequestHeaderInput` via:
//
//	GetMonitorConfigurationRequestHeaderArgs{...}
type GetMonitorConfigurationRequestHeaderInput interface {
	pulumi.Input

	ToGetMonitorConfigurationRequestHeaderOutput() GetMonitorConfigurationRequestHeaderOutput
	ToGetMonitorConfigurationRequestHeaderOutputWithContext(context.Context) GetMonitorConfigurationRequestHeaderOutput
}

type GetMonitorConfigurationRequestHeaderArgs struct {
	// Name of the header.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Value of the header.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (GetMonitorConfigurationRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationRequestHeader)(nil)).Elem()
}

func (i GetMonitorConfigurationRequestHeaderArgs) ToGetMonitorConfigurationRequestHeaderOutput() GetMonitorConfigurationRequestHeaderOutput {
	return i.ToGetMonitorConfigurationRequestHeaderOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationRequestHeaderArgs) ToGetMonitorConfigurationRequestHeaderOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationRequestHeaderOutput)
}

// GetMonitorConfigurationRequestHeaderArrayInput is an input type that accepts GetMonitorConfigurationRequestHeaderArray and GetMonitorConfigurationRequestHeaderArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationRequestHeaderArrayInput` via:
//
//	GetMonitorConfigurationRequestHeaderArray{ GetMonitorConfigurationRequestHeaderArgs{...} }
type GetMonitorConfigurationRequestHeaderArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationRequestHeaderArrayOutput() GetMonitorConfigurationRequestHeaderArrayOutput
	ToGetMonitorConfigurationRequestHeaderArrayOutputWithContext(context.Context) GetMonitorConfigurationRequestHeaderArrayOutput
}

type GetMonitorConfigurationRequestHeaderArray []GetMonitorConfigurationRequestHeaderInput

func (GetMonitorConfigurationRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationRequestHeader)(nil)).Elem()
}

func (i GetMonitorConfigurationRequestHeaderArray) ToGetMonitorConfigurationRequestHeaderArrayOutput() GetMonitorConfigurationRequestHeaderArrayOutput {
	return i.ToGetMonitorConfigurationRequestHeaderArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationRequestHeaderArray) ToGetMonitorConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationRequestHeaderArrayOutput)
}

type GetMonitorConfigurationRequestHeaderOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationRequestHeader)(nil)).Elem()
}

func (o GetMonitorConfigurationRequestHeaderOutput) ToGetMonitorConfigurationRequestHeaderOutput() GetMonitorConfigurationRequestHeaderOutput {
	return o
}

func (o GetMonitorConfigurationRequestHeaderOutput) ToGetMonitorConfigurationRequestHeaderOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestHeaderOutput {
	return o
}

// Name of the header.
func (o GetMonitorConfigurationRequestHeaderOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationRequestHeader) string { return v.HeaderName }).(pulumi.StringOutput)
}

// Value of the header.
func (o GetMonitorConfigurationRequestHeaderOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationRequestHeader) string { return v.HeaderValue }).(pulumi.StringOutput)
}

type GetMonitorConfigurationRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationRequestHeader)(nil)).Elem()
}

func (o GetMonitorConfigurationRequestHeaderArrayOutput) ToGetMonitorConfigurationRequestHeaderArrayOutput() GetMonitorConfigurationRequestHeaderArrayOutput {
	return o
}

func (o GetMonitorConfigurationRequestHeaderArrayOutput) ToGetMonitorConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestHeaderArrayOutput {
	return o
}

func (o GetMonitorConfigurationRequestHeaderArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigurationRequestHeader {
		return vs[0].([]GetMonitorConfigurationRequestHeader)[vs[1].(int)]
	}).(GetMonitorConfigurationRequestHeaderOutput)
}

type GetMonitorConfigurationRequestQueryParam struct {
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorConfigurationRequestQueryParamInput is an input type that accepts GetMonitorConfigurationRequestQueryParamArgs and GetMonitorConfigurationRequestQueryParamOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationRequestQueryParamInput` via:
//
//	GetMonitorConfigurationRequestQueryParamArgs{...}
type GetMonitorConfigurationRequestQueryParamInput interface {
	pulumi.Input

	ToGetMonitorConfigurationRequestQueryParamOutput() GetMonitorConfigurationRequestQueryParamOutput
	ToGetMonitorConfigurationRequestQueryParamOutputWithContext(context.Context) GetMonitorConfigurationRequestQueryParamOutput
}

type GetMonitorConfigurationRequestQueryParamArgs struct {
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorConfigurationRequestQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (i GetMonitorConfigurationRequestQueryParamArgs) ToGetMonitorConfigurationRequestQueryParamOutput() GetMonitorConfigurationRequestQueryParamOutput {
	return i.ToGetMonitorConfigurationRequestQueryParamOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationRequestQueryParamArgs) ToGetMonitorConfigurationRequestQueryParamOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationRequestQueryParamOutput)
}

// GetMonitorConfigurationRequestQueryParamArrayInput is an input type that accepts GetMonitorConfigurationRequestQueryParamArray and GetMonitorConfigurationRequestQueryParamArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationRequestQueryParamArrayInput` via:
//
//	GetMonitorConfigurationRequestQueryParamArray{ GetMonitorConfigurationRequestQueryParamArgs{...} }
type GetMonitorConfigurationRequestQueryParamArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationRequestQueryParamArrayOutput() GetMonitorConfigurationRequestQueryParamArrayOutput
	ToGetMonitorConfigurationRequestQueryParamArrayOutputWithContext(context.Context) GetMonitorConfigurationRequestQueryParamArrayOutput
}

type GetMonitorConfigurationRequestQueryParamArray []GetMonitorConfigurationRequestQueryParamInput

func (GetMonitorConfigurationRequestQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (i GetMonitorConfigurationRequestQueryParamArray) ToGetMonitorConfigurationRequestQueryParamArrayOutput() GetMonitorConfigurationRequestQueryParamArrayOutput {
	return i.ToGetMonitorConfigurationRequestQueryParamArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationRequestQueryParamArray) ToGetMonitorConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationRequestQueryParamArrayOutput)
}

type GetMonitorConfigurationRequestQueryParamOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationRequestQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (o GetMonitorConfigurationRequestQueryParamOutput) ToGetMonitorConfigurationRequestQueryParamOutput() GetMonitorConfigurationRequestQueryParamOutput {
	return o
}

func (o GetMonitorConfigurationRequestQueryParamOutput) ToGetMonitorConfigurationRequestQueryParamOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestQueryParamOutput {
	return o
}

// Name of the parameter.
func (o GetMonitorConfigurationRequestQueryParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationRequestQueryParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorConfigurationRequestQueryParamOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationRequestQueryParam) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetMonitorConfigurationRequestQueryParamArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationRequestQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationRequestQueryParam)(nil)).Elem()
}

func (o GetMonitorConfigurationRequestQueryParamArrayOutput) ToGetMonitorConfigurationRequestQueryParamArrayOutput() GetMonitorConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o GetMonitorConfigurationRequestQueryParamArrayOutput) ToGetMonitorConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o GetMonitorConfigurationRequestQueryParamArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationRequestQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigurationRequestQueryParam {
		return vs[0].([]GetMonitorConfigurationRequestQueryParam)[vs[1].(int)]
	}).(GetMonitorConfigurationRequestQueryParamOutput)
}

type GetMonitorConfigurationVerifyText struct {
	// Verification text in the response.
	Text string `pulumi:"text"`
}

// GetMonitorConfigurationVerifyTextInput is an input type that accepts GetMonitorConfigurationVerifyTextArgs and GetMonitorConfigurationVerifyTextOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationVerifyTextInput` via:
//
//	GetMonitorConfigurationVerifyTextArgs{...}
type GetMonitorConfigurationVerifyTextInput interface {
	pulumi.Input

	ToGetMonitorConfigurationVerifyTextOutput() GetMonitorConfigurationVerifyTextOutput
	ToGetMonitorConfigurationVerifyTextOutputWithContext(context.Context) GetMonitorConfigurationVerifyTextOutput
}

type GetMonitorConfigurationVerifyTextArgs struct {
	// Verification text in the response.
	Text pulumi.StringInput `pulumi:"text"`
}

func (GetMonitorConfigurationVerifyTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationVerifyText)(nil)).Elem()
}

func (i GetMonitorConfigurationVerifyTextArgs) ToGetMonitorConfigurationVerifyTextOutput() GetMonitorConfigurationVerifyTextOutput {
	return i.ToGetMonitorConfigurationVerifyTextOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationVerifyTextArgs) ToGetMonitorConfigurationVerifyTextOutputWithContext(ctx context.Context) GetMonitorConfigurationVerifyTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationVerifyTextOutput)
}

// GetMonitorConfigurationVerifyTextArrayInput is an input type that accepts GetMonitorConfigurationVerifyTextArray and GetMonitorConfigurationVerifyTextArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigurationVerifyTextArrayInput` via:
//
//	GetMonitorConfigurationVerifyTextArray{ GetMonitorConfigurationVerifyTextArgs{...} }
type GetMonitorConfigurationVerifyTextArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigurationVerifyTextArrayOutput() GetMonitorConfigurationVerifyTextArrayOutput
	ToGetMonitorConfigurationVerifyTextArrayOutputWithContext(context.Context) GetMonitorConfigurationVerifyTextArrayOutput
}

type GetMonitorConfigurationVerifyTextArray []GetMonitorConfigurationVerifyTextInput

func (GetMonitorConfigurationVerifyTextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationVerifyText)(nil)).Elem()
}

func (i GetMonitorConfigurationVerifyTextArray) ToGetMonitorConfigurationVerifyTextArrayOutput() GetMonitorConfigurationVerifyTextArrayOutput {
	return i.ToGetMonitorConfigurationVerifyTextArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigurationVerifyTextArray) ToGetMonitorConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationVerifyTextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigurationVerifyTextArrayOutput)
}

type GetMonitorConfigurationVerifyTextOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationVerifyTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigurationVerifyText)(nil)).Elem()
}

func (o GetMonitorConfigurationVerifyTextOutput) ToGetMonitorConfigurationVerifyTextOutput() GetMonitorConfigurationVerifyTextOutput {
	return o
}

func (o GetMonitorConfigurationVerifyTextOutput) ToGetMonitorConfigurationVerifyTextOutputWithContext(ctx context.Context) GetMonitorConfigurationVerifyTextOutput {
	return o
}

// Verification text in the response.
func (o GetMonitorConfigurationVerifyTextOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigurationVerifyText) string { return v.Text }).(pulumi.StringOutput)
}

type GetMonitorConfigurationVerifyTextArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigurationVerifyTextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigurationVerifyText)(nil)).Elem()
}

func (o GetMonitorConfigurationVerifyTextArrayOutput) ToGetMonitorConfigurationVerifyTextArrayOutput() GetMonitorConfigurationVerifyTextArrayOutput {
	return o
}

func (o GetMonitorConfigurationVerifyTextArrayOutput) ToGetMonitorConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) GetMonitorConfigurationVerifyTextArrayOutput {
	return o
}

func (o GetMonitorConfigurationVerifyTextArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigurationVerifyTextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigurationVerifyText {
		return vs[0].([]GetMonitorConfigurationVerifyText)[vs[1].(int)]
	}).(GetMonitorConfigurationVerifyTextOutput)
}

type GetMonitorScriptParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten bool `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret bool `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameters []GetMonitorScriptParameterMonitorScriptParameter `pulumi:"monitorScriptParameters"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorScriptParameterInput is an input type that accepts GetMonitorScriptParameterArgs and GetMonitorScriptParameterOutput values.
// You can construct a concrete instance of `GetMonitorScriptParameterInput` via:
//
//	GetMonitorScriptParameterArgs{...}
type GetMonitorScriptParameterInput interface {
	pulumi.Input

	ToGetMonitorScriptParameterOutput() GetMonitorScriptParameterOutput
	ToGetMonitorScriptParameterOutputWithContext(context.Context) GetMonitorScriptParameterOutput
}

type GetMonitorScriptParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolInput `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameters GetMonitorScriptParameterMonitorScriptParameterArrayInput `pulumi:"monitorScriptParameters"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorScriptParameter)(nil)).Elem()
}

func (i GetMonitorScriptParameterArgs) ToGetMonitorScriptParameterOutput() GetMonitorScriptParameterOutput {
	return i.ToGetMonitorScriptParameterOutputWithContext(context.Background())
}

func (i GetMonitorScriptParameterArgs) ToGetMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorScriptParameterOutput)
}

// GetMonitorScriptParameterArrayInput is an input type that accepts GetMonitorScriptParameterArray and GetMonitorScriptParameterArrayOutput values.
// You can construct a concrete instance of `GetMonitorScriptParameterArrayInput` via:
//
//	GetMonitorScriptParameterArray{ GetMonitorScriptParameterArgs{...} }
type GetMonitorScriptParameterArrayInput interface {
	pulumi.Input

	ToGetMonitorScriptParameterArrayOutput() GetMonitorScriptParameterArrayOutput
	ToGetMonitorScriptParameterArrayOutputWithContext(context.Context) GetMonitorScriptParameterArrayOutput
}

type GetMonitorScriptParameterArray []GetMonitorScriptParameterInput

func (GetMonitorScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorScriptParameter)(nil)).Elem()
}

func (i GetMonitorScriptParameterArray) ToGetMonitorScriptParameterArrayOutput() GetMonitorScriptParameterArrayOutput {
	return i.ToGetMonitorScriptParameterArrayOutputWithContext(context.Background())
}

func (i GetMonitorScriptParameterArray) ToGetMonitorScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorScriptParameterArrayOutput)
}

type GetMonitorScriptParameterOutput struct{ *pulumi.OutputState }

func (GetMonitorScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorScriptParameter)(nil)).Elem()
}

func (o GetMonitorScriptParameterOutput) ToGetMonitorScriptParameterOutput() GetMonitorScriptParameterOutput {
	return o
}

func (o GetMonitorScriptParameterOutput) ToGetMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorScriptParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o GetMonitorScriptParameterOutput) IsOverwritten() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorScriptParameter) bool { return v.IsOverwritten }).(pulumi.BoolOutput)
}

// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
func (o GetMonitorScriptParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorScriptParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Details of the script parameter that can be used to overwrite the parameter present in the script.
func (o GetMonitorScriptParameterOutput) MonitorScriptParameters() GetMonitorScriptParameterMonitorScriptParameterArrayOutput {
	return o.ApplyT(func(v GetMonitorScriptParameter) []GetMonitorScriptParameterMonitorScriptParameter {
		return v.MonitorScriptParameters
	}).(GetMonitorScriptParameterMonitorScriptParameterArrayOutput)
}

// Name of the parameter.
func (o GetMonitorScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetMonitorScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorScriptParameter)(nil)).Elem()
}

func (o GetMonitorScriptParameterArrayOutput) ToGetMonitorScriptParameterArrayOutput() GetMonitorScriptParameterArrayOutput {
	return o
}

func (o GetMonitorScriptParameterArrayOutput) ToGetMonitorScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorScriptParameterArrayOutput {
	return o
}

func (o GetMonitorScriptParameterArrayOutput) Index(i pulumi.IntInput) GetMonitorScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorScriptParameter {
		return vs[0].([]GetMonitorScriptParameter)[vs[1].(int)]
	}).(GetMonitorScriptParameterOutput)
}

type GetMonitorScriptParameterMonitorScriptParameter struct {
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorScriptParameterMonitorScriptParameterInput is an input type that accepts GetMonitorScriptParameterMonitorScriptParameterArgs and GetMonitorScriptParameterMonitorScriptParameterOutput values.
// You can construct a concrete instance of `GetMonitorScriptParameterMonitorScriptParameterInput` via:
//
//	GetMonitorScriptParameterMonitorScriptParameterArgs{...}
type GetMonitorScriptParameterMonitorScriptParameterInput interface {
	pulumi.Input

	ToGetMonitorScriptParameterMonitorScriptParameterOutput() GetMonitorScriptParameterMonitorScriptParameterOutput
	ToGetMonitorScriptParameterMonitorScriptParameterOutputWithContext(context.Context) GetMonitorScriptParameterMonitorScriptParameterOutput
}

type GetMonitorScriptParameterMonitorScriptParameterArgs struct {
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorScriptParameterMonitorScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (i GetMonitorScriptParameterMonitorScriptParameterArgs) ToGetMonitorScriptParameterMonitorScriptParameterOutput() GetMonitorScriptParameterMonitorScriptParameterOutput {
	return i.ToGetMonitorScriptParameterMonitorScriptParameterOutputWithContext(context.Background())
}

func (i GetMonitorScriptParameterMonitorScriptParameterArgs) ToGetMonitorScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorScriptParameterMonitorScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorScriptParameterMonitorScriptParameterOutput)
}

// GetMonitorScriptParameterMonitorScriptParameterArrayInput is an input type that accepts GetMonitorScriptParameterMonitorScriptParameterArray and GetMonitorScriptParameterMonitorScriptParameterArrayOutput values.
// You can construct a concrete instance of `GetMonitorScriptParameterMonitorScriptParameterArrayInput` via:
//
//	GetMonitorScriptParameterMonitorScriptParameterArray{ GetMonitorScriptParameterMonitorScriptParameterArgs{...} }
type GetMonitorScriptParameterMonitorScriptParameterArrayInput interface {
	pulumi.Input

	ToGetMonitorScriptParameterMonitorScriptParameterArrayOutput() GetMonitorScriptParameterMonitorScriptParameterArrayOutput
	ToGetMonitorScriptParameterMonitorScriptParameterArrayOutputWithContext(context.Context) GetMonitorScriptParameterMonitorScriptParameterArrayOutput
}

type GetMonitorScriptParameterMonitorScriptParameterArray []GetMonitorScriptParameterMonitorScriptParameterInput

func (GetMonitorScriptParameterMonitorScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (i GetMonitorScriptParameterMonitorScriptParameterArray) ToGetMonitorScriptParameterMonitorScriptParameterArrayOutput() GetMonitorScriptParameterMonitorScriptParameterArrayOutput {
	return i.ToGetMonitorScriptParameterMonitorScriptParameterArrayOutputWithContext(context.Background())
}

func (i GetMonitorScriptParameterMonitorScriptParameterArray) ToGetMonitorScriptParameterMonitorScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorScriptParameterMonitorScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorScriptParameterMonitorScriptParameterArrayOutput)
}

type GetMonitorScriptParameterMonitorScriptParameterOutput struct{ *pulumi.OutputState }

func (GetMonitorScriptParameterMonitorScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (o GetMonitorScriptParameterMonitorScriptParameterOutput) ToGetMonitorScriptParameterMonitorScriptParameterOutput() GetMonitorScriptParameterMonitorScriptParameterOutput {
	return o
}

func (o GetMonitorScriptParameterMonitorScriptParameterOutput) ToGetMonitorScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorScriptParameterMonitorScriptParameterOutput {
	return o
}

// Name of the parameter.
func (o GetMonitorScriptParameterMonitorScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorScriptParameterMonitorScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorScriptParameterMonitorScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorScriptParameterMonitorScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetMonitorScriptParameterMonitorScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorScriptParameterMonitorScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (o GetMonitorScriptParameterMonitorScriptParameterArrayOutput) ToGetMonitorScriptParameterMonitorScriptParameterArrayOutput() GetMonitorScriptParameterMonitorScriptParameterArrayOutput {
	return o
}

func (o GetMonitorScriptParameterMonitorScriptParameterArrayOutput) ToGetMonitorScriptParameterMonitorScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorScriptParameterMonitorScriptParameterArrayOutput {
	return o
}

func (o GetMonitorScriptParameterMonitorScriptParameterArrayOutput) Index(i pulumi.IntInput) GetMonitorScriptParameterMonitorScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorScriptParameterMonitorScriptParameter {
		return vs[0].([]GetMonitorScriptParameterMonitorScriptParameter)[vs[1].(int)]
	}).(GetMonitorScriptParameterMonitorScriptParameterOutput)
}

type GetMonitorsFilter struct {
	// Name of the vantage point.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetMonitorsFilterInput is an input type that accepts GetMonitorsFilterArgs and GetMonitorsFilterOutput values.
// You can construct a concrete instance of `GetMonitorsFilterInput` via:
//
//	GetMonitorsFilterArgs{...}
type GetMonitorsFilterInput interface {
	pulumi.Input

	ToGetMonitorsFilterOutput() GetMonitorsFilterOutput
	ToGetMonitorsFilterOutputWithContext(context.Context) GetMonitorsFilterOutput
}

type GetMonitorsFilterArgs struct {
	// Name of the vantage point.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMonitorsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsFilter)(nil)).Elem()
}

func (i GetMonitorsFilterArgs) ToGetMonitorsFilterOutput() GetMonitorsFilterOutput {
	return i.ToGetMonitorsFilterOutputWithContext(context.Background())
}

func (i GetMonitorsFilterArgs) ToGetMonitorsFilterOutputWithContext(ctx context.Context) GetMonitorsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsFilterOutput)
}

// GetMonitorsFilterArrayInput is an input type that accepts GetMonitorsFilterArray and GetMonitorsFilterArrayOutput values.
// You can construct a concrete instance of `GetMonitorsFilterArrayInput` via:
//
//	GetMonitorsFilterArray{ GetMonitorsFilterArgs{...} }
type GetMonitorsFilterArrayInput interface {
	pulumi.Input

	ToGetMonitorsFilterArrayOutput() GetMonitorsFilterArrayOutput
	ToGetMonitorsFilterArrayOutputWithContext(context.Context) GetMonitorsFilterArrayOutput
}

type GetMonitorsFilterArray []GetMonitorsFilterInput

func (GetMonitorsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsFilter)(nil)).Elem()
}

func (i GetMonitorsFilterArray) ToGetMonitorsFilterArrayOutput() GetMonitorsFilterArrayOutput {
	return i.ToGetMonitorsFilterArrayOutputWithContext(context.Background())
}

func (i GetMonitorsFilterArray) ToGetMonitorsFilterArrayOutputWithContext(ctx context.Context) GetMonitorsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsFilterArrayOutput)
}

type GetMonitorsFilterOutput struct{ *pulumi.OutputState }

func (GetMonitorsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsFilter)(nil)).Elem()
}

func (o GetMonitorsFilterOutput) ToGetMonitorsFilterOutput() GetMonitorsFilterOutput {
	return o
}

func (o GetMonitorsFilterOutput) ToGetMonitorsFilterOutputWithContext(ctx context.Context) GetMonitorsFilterOutput {
	return o
}

// Name of the vantage point.
func (o GetMonitorsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMonitorsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMonitorsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetMonitorsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMonitorsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsFilter)(nil)).Elem()
}

func (o GetMonitorsFilterArrayOutput) ToGetMonitorsFilterArrayOutput() GetMonitorsFilterArrayOutput {
	return o
}

func (o GetMonitorsFilterArrayOutput) ToGetMonitorsFilterArrayOutputWithContext(ctx context.Context) GetMonitorsFilterArrayOutput {
	return o
}

func (o GetMonitorsFilterArrayOutput) Index(i pulumi.IntInput) GetMonitorsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsFilter {
		return vs[0].([]GetMonitorsFilter)[vs[1].(int)]
	}).(GetMonitorsFilterOutput)
}

type GetMonitorsMonitorCollection struct {
	Items []GetMonitorsMonitorCollectionItem `pulumi:"items"`
}

// GetMonitorsMonitorCollectionInput is an input type that accepts GetMonitorsMonitorCollectionArgs and GetMonitorsMonitorCollectionOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionInput` via:
//
//	GetMonitorsMonitorCollectionArgs{...}
type GetMonitorsMonitorCollectionInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionOutput() GetMonitorsMonitorCollectionOutput
	ToGetMonitorsMonitorCollectionOutputWithContext(context.Context) GetMonitorsMonitorCollectionOutput
}

type GetMonitorsMonitorCollectionArgs struct {
	Items GetMonitorsMonitorCollectionItemArrayInput `pulumi:"items"`
}

func (GetMonitorsMonitorCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollection)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionArgs) ToGetMonitorsMonitorCollectionOutput() GetMonitorsMonitorCollectionOutput {
	return i.ToGetMonitorsMonitorCollectionOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionArgs) ToGetMonitorsMonitorCollectionOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionOutput)
}

// GetMonitorsMonitorCollectionArrayInput is an input type that accepts GetMonitorsMonitorCollectionArray and GetMonitorsMonitorCollectionArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionArrayInput` via:
//
//	GetMonitorsMonitorCollectionArray{ GetMonitorsMonitorCollectionArgs{...} }
type GetMonitorsMonitorCollectionArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionArrayOutput() GetMonitorsMonitorCollectionArrayOutput
	ToGetMonitorsMonitorCollectionArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionArrayOutput
}

type GetMonitorsMonitorCollectionArray []GetMonitorsMonitorCollectionInput

func (GetMonitorsMonitorCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollection)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionArray) ToGetMonitorsMonitorCollectionArrayOutput() GetMonitorsMonitorCollectionArrayOutput {
	return i.ToGetMonitorsMonitorCollectionArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionArray) ToGetMonitorsMonitorCollectionArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionArrayOutput)
}

type GetMonitorsMonitorCollectionOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollection)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionOutput) ToGetMonitorsMonitorCollectionOutput() GetMonitorsMonitorCollectionOutput {
	return o
}

func (o GetMonitorsMonitorCollectionOutput) ToGetMonitorsMonitorCollectionOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionOutput {
	return o
}

func (o GetMonitorsMonitorCollectionOutput) Items() GetMonitorsMonitorCollectionItemArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollection) []GetMonitorsMonitorCollectionItem { return v.Items }).(GetMonitorsMonitorCollectionItemArrayOutput)
}

type GetMonitorsMonitorCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollection)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionArrayOutput) ToGetMonitorsMonitorCollectionArrayOutput() GetMonitorsMonitorCollectionArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionArrayOutput) ToGetMonitorsMonitorCollectionArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollection {
		return vs[0].([]GetMonitorsMonitorCollection)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionOutput)
}

type GetMonitorsMonitorCollectionItem struct {
	// The APM domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// Time interval between 2 runs in round robin batch mode (*SchedulingPolicy - BATCHED_ROUND_ROBIN).
	BatchIntervalInSeconds int `pulumi:"batchIntervalInSeconds"`
	// Details of monitor configuration.
	Configurations []GetMonitorsMonitorCollectionItemConfiguration `pulumi:"configurations"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
	Id string `pulumi:"id"`
	// If isRunNow is enabled, then the monitor will run now.
	IsRunNow bool `pulumi:"isRunNow"`
	// If runOnce is enabled, then the monitor will run once.
	IsRunOnce bool `pulumi:"isRunOnce"`
	// A filter to return only monitors that match the given monitor type. Supported values are SCRIPTED_BROWSER, BROWSER, SCRIPTED_REST and REST.
	MonitorType string `pulumi:"monitorType"`
	// Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
	RepeatIntervalInSeconds int `pulumi:"repeatIntervalInSeconds"`
	// Scheduling policy on Vantage points.
	SchedulingPolicy string `pulumi:"schedulingPolicy"`
	// A filter to return only monitors using scriptId.
	ScriptId string `pulumi:"scriptId"`
	// Name of the script.
	ScriptName string `pulumi:"scriptName"`
	// List of script parameters. Example: `[{"monitorScriptParameter": {"paramName": "userid", "paramValue":"testuser"}, "isSecret": false, "isOverwritten": false}]`
	ScriptParameters []GetMonitorsMonitorCollectionItemScriptParameter `pulumi:"scriptParameters"`
	// A filter to return only monitors that match the status given.
	Status string `pulumi:"status"`
	// Specify the endpoint on which to run the monitor. For BROWSER and REST monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is.
	Target string `pulumi:"target"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// Timeout in seconds. Timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
	TimeoutInSeconds int `pulumi:"timeoutInSeconds"`
	// Number of vantage points where monitor is running.
	VantagePointCount int `pulumi:"vantagePointCount"`
	// List of public and dedicated vantage points where the monitor is running.
	VantagePoints []string `pulumi:"vantagePoints"`
}

// GetMonitorsMonitorCollectionItemInput is an input type that accepts GetMonitorsMonitorCollectionItemArgs and GetMonitorsMonitorCollectionItemOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemInput` via:
//
//	GetMonitorsMonitorCollectionItemArgs{...}
type GetMonitorsMonitorCollectionItemInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemOutput() GetMonitorsMonitorCollectionItemOutput
	ToGetMonitorsMonitorCollectionItemOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemOutput
}

type GetMonitorsMonitorCollectionItemArgs struct {
	// The APM domain ID the request is intended for.
	ApmDomainId pulumi.StringInput `pulumi:"apmDomainId"`
	// Time interval between 2 runs in round robin batch mode (*SchedulingPolicy - BATCHED_ROUND_ROBIN).
	BatchIntervalInSeconds pulumi.IntInput `pulumi:"batchIntervalInSeconds"`
	// Details of monitor configuration.
	Configurations GetMonitorsMonitorCollectionItemConfigurationArrayInput `pulumi:"configurations"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
	Id pulumi.StringInput `pulumi:"id"`
	// If isRunNow is enabled, then the monitor will run now.
	IsRunNow pulumi.BoolInput `pulumi:"isRunNow"`
	// If runOnce is enabled, then the monitor will run once.
	IsRunOnce pulumi.BoolInput `pulumi:"isRunOnce"`
	// A filter to return only monitors that match the given monitor type. Supported values are SCRIPTED_BROWSER, BROWSER, SCRIPTED_REST and REST.
	MonitorType pulumi.StringInput `pulumi:"monitorType"`
	// Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
	RepeatIntervalInSeconds pulumi.IntInput `pulumi:"repeatIntervalInSeconds"`
	// Scheduling policy on Vantage points.
	SchedulingPolicy pulumi.StringInput `pulumi:"schedulingPolicy"`
	// A filter to return only monitors using scriptId.
	ScriptId pulumi.StringInput `pulumi:"scriptId"`
	// Name of the script.
	ScriptName pulumi.StringInput `pulumi:"scriptName"`
	// List of script parameters. Example: `[{"monitorScriptParameter": {"paramName": "userid", "paramValue":"testuser"}, "isSecret": false, "isOverwritten": false}]`
	ScriptParameters GetMonitorsMonitorCollectionItemScriptParameterArrayInput `pulumi:"scriptParameters"`
	// A filter to return only monitors that match the status given.
	Status pulumi.StringInput `pulumi:"status"`
	// Specify the endpoint on which to run the monitor. For BROWSER and REST monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is.
	Target pulumi.StringInput `pulumi:"target"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Timeout in seconds. Timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
	TimeoutInSeconds pulumi.IntInput `pulumi:"timeoutInSeconds"`
	// Number of vantage points where monitor is running.
	VantagePointCount pulumi.IntInput `pulumi:"vantagePointCount"`
	// List of public and dedicated vantage points where the monitor is running.
	VantagePoints pulumi.StringArrayInput `pulumi:"vantagePoints"`
}

func (GetMonitorsMonitorCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItem)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemArgs) ToGetMonitorsMonitorCollectionItemOutput() GetMonitorsMonitorCollectionItemOutput {
	return i.ToGetMonitorsMonitorCollectionItemOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemArgs) ToGetMonitorsMonitorCollectionItemOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemOutput)
}

// GetMonitorsMonitorCollectionItemArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemArray and GetMonitorsMonitorCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemArrayInput` via:
//
//	GetMonitorsMonitorCollectionItemArray{ GetMonitorsMonitorCollectionItemArgs{...} }
type GetMonitorsMonitorCollectionItemArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemArrayOutput() GetMonitorsMonitorCollectionItemArrayOutput
	ToGetMonitorsMonitorCollectionItemArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemArrayOutput
}

type GetMonitorsMonitorCollectionItemArray []GetMonitorsMonitorCollectionItemInput

func (GetMonitorsMonitorCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItem)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemArray) ToGetMonitorsMonitorCollectionItemArrayOutput() GetMonitorsMonitorCollectionItemArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemArray) ToGetMonitorsMonitorCollectionItemArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemArrayOutput)
}

type GetMonitorsMonitorCollectionItemOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItem)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemOutput) ToGetMonitorsMonitorCollectionItemOutput() GetMonitorsMonitorCollectionItemOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemOutput) ToGetMonitorsMonitorCollectionItemOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemOutput {
	return o
}

// The APM domain ID the request is intended for.
func (o GetMonitorsMonitorCollectionItemOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.ApmDomainId }).(pulumi.StringOutput)
}

// Time interval between 2 runs in round robin batch mode (*SchedulingPolicy - BATCHED_ROUND_ROBIN).
func (o GetMonitorsMonitorCollectionItemOutput) BatchIntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) int { return v.BatchIntervalInSeconds }).(pulumi.IntOutput)
}

// Details of monitor configuration.
func (o GetMonitorsMonitorCollectionItemOutput) Configurations() GetMonitorsMonitorCollectionItemConfigurationArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) []GetMonitorsMonitorCollectionItemConfiguration {
		return v.Configurations
	}).(GetMonitorsMonitorCollectionItemConfigurationArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetMonitorsMonitorCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only the resources that match the entire display name.
func (o GetMonitorsMonitorCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetMonitorsMonitorCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitor.
func (o GetMonitorsMonitorCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// If isRunNow is enabled, then the monitor will run now.
func (o GetMonitorsMonitorCollectionItemOutput) IsRunNow() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) bool { return v.IsRunNow }).(pulumi.BoolOutput)
}

// If runOnce is enabled, then the monitor will run once.
func (o GetMonitorsMonitorCollectionItemOutput) IsRunOnce() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) bool { return v.IsRunOnce }).(pulumi.BoolOutput)
}

// A filter to return only monitors that match the given monitor type. Supported values are SCRIPTED_BROWSER, BROWSER, SCRIPTED_REST and REST.
func (o GetMonitorsMonitorCollectionItemOutput) MonitorType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.MonitorType }).(pulumi.StringOutput)
}

// Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
func (o GetMonitorsMonitorCollectionItemOutput) RepeatIntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) int { return v.RepeatIntervalInSeconds }).(pulumi.IntOutput)
}

// Scheduling policy on Vantage points.
func (o GetMonitorsMonitorCollectionItemOutput) SchedulingPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.SchedulingPolicy }).(pulumi.StringOutput)
}

// A filter to return only monitors using scriptId.
func (o GetMonitorsMonitorCollectionItemOutput) ScriptId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.ScriptId }).(pulumi.StringOutput)
}

// Name of the script.
func (o GetMonitorsMonitorCollectionItemOutput) ScriptName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.ScriptName }).(pulumi.StringOutput)
}

// List of script parameters. Example: `[{"monitorScriptParameter": {"paramName": "userid", "paramValue":"testuser"}, "isSecret": false, "isOverwritten": false}]`
func (o GetMonitorsMonitorCollectionItemOutput) ScriptParameters() GetMonitorsMonitorCollectionItemScriptParameterArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) []GetMonitorsMonitorCollectionItemScriptParameter {
		return v.ScriptParameters
	}).(GetMonitorsMonitorCollectionItemScriptParameterArrayOutput)
}

// A filter to return only monitors that match the status given.
func (o GetMonitorsMonitorCollectionItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.Status }).(pulumi.StringOutput)
}

// Specify the endpoint on which to run the monitor. For BROWSER and REST monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is.
func (o GetMonitorsMonitorCollectionItemOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.Target }).(pulumi.StringOutput)
}

// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
func (o GetMonitorsMonitorCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
func (o GetMonitorsMonitorCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Timeout in seconds. Timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
func (o GetMonitorsMonitorCollectionItemOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) int { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

// Number of vantage points where monitor is running.
func (o GetMonitorsMonitorCollectionItemOutput) VantagePointCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) int { return v.VantagePointCount }).(pulumi.IntOutput)
}

// List of public and dedicated vantage points where the monitor is running.
func (o GetMonitorsMonitorCollectionItemOutput) VantagePoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItem) []string { return v.VantagePoints }).(pulumi.StringArrayOutput)
}

type GetMonitorsMonitorCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItem)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemArrayOutput) ToGetMonitorsMonitorCollectionItemArrayOutput() GetMonitorsMonitorCollectionItemArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemArrayOutput) ToGetMonitorsMonitorCollectionItemArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItem {
		return vs[0].([]GetMonitorsMonitorCollectionItem)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemOutput)
}

type GetMonitorsMonitorCollectionItemConfiguration struct {
	// Type of configuration.
	ConfigType string `pulumi:"configType"`
	// Dns settings.
	DnsConfigurations []GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration `pulumi:"dnsConfigurations"`
	// If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled bool `pulumi:"isCertificateValidationEnabled"`
	// If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried bool `pulumi:"isFailureRetried"`
	// If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled bool `pulumi:"isRedirectionEnabled"`
	// Details of the network configuration.
	NetworkConfigurations []GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration `pulumi:"networkConfigurations"`
	// Details for request HTTP authentication.
	ReqAuthenticationDetails []GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail `pulumi:"reqAuthenticationDetails"`
	// Request http authentication scheme.
	ReqAuthenticationScheme string `pulumi:"reqAuthenticationScheme"`
	// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders []GetMonitorsMonitorCollectionItemConfigurationRequestHeader `pulumi:"requestHeaders"`
	// Request HTTP method.
	RequestMethod string `pulumi:"requestMethod"`
	// Request post body content.
	RequestPostBody string `pulumi:"requestPostBody"`
	// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams []GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam `pulumi:"requestQueryParams"`
	// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes []string `pulumi:"verifyResponseCodes"`
	// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent string `pulumi:"verifyResponseContent"`
	// Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts []GetMonitorsMonitorCollectionItemConfigurationVerifyText `pulumi:"verifyTexts"`
}

// GetMonitorsMonitorCollectionItemConfigurationInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationArgs and GetMonitorsMonitorCollectionItemConfigurationOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationOutput
	ToGetMonitorsMonitorCollectionItemConfigurationOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationOutput
}

type GetMonitorsMonitorCollectionItemConfigurationArgs struct {
	// Type of configuration.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// Dns settings.
	DnsConfigurations GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayInput `pulumi:"dnsConfigurations"`
	// If certificate validation is enabled, then the call will fail in case of certification errors.
	IsCertificateValidationEnabled pulumi.BoolInput `pulumi:"isCertificateValidationEnabled"`
	// If isFailureRetried is enabled, then a failed call will be retried.
	IsFailureRetried pulumi.BoolInput `pulumi:"isFailureRetried"`
	// If redirection enabled, then redirects will be allowed while accessing target URL.
	IsRedirectionEnabled pulumi.BoolInput `pulumi:"isRedirectionEnabled"`
	// Details of the network configuration.
	NetworkConfigurations GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayInput `pulumi:"networkConfigurations"`
	// Details for request HTTP authentication.
	ReqAuthenticationDetails GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayInput `pulumi:"reqAuthenticationDetails"`
	// Request http authentication scheme.
	ReqAuthenticationScheme pulumi.StringInput `pulumi:"reqAuthenticationScheme"`
	// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	RequestHeaders GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// Request HTTP method.
	RequestMethod pulumi.StringInput `pulumi:"requestMethod"`
	// Request post body content.
	RequestPostBody pulumi.StringInput `pulumi:"requestPostBody"`
	// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
	RequestQueryParams GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayInput `pulumi:"requestQueryParams"`
	// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
	VerifyResponseCodes pulumi.StringArrayInput `pulumi:"verifyResponseCodes"`
	// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
	VerifyResponseContent pulumi.StringInput `pulumi:"verifyResponseContent"`
	// Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
	VerifyTexts GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayInput `pulumi:"verifyTexts"`
}

func (GetMonitorsMonitorCollectionItemConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfiguration)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationArgs) ToGetMonitorsMonitorCollectionItemConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationArgs) ToGetMonitorsMonitorCollectionItemConfigurationOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationArray and GetMonitorsMonitorCollectionItemConfigurationArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationArrayInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationArray{ GetMonitorsMonitorCollectionItemConfigurationArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationArrayOutput() GetMonitorsMonitorCollectionItemConfigurationArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationArray []GetMonitorsMonitorCollectionItemConfigurationInput

func (GetMonitorsMonitorCollectionItemConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfiguration)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationArray) ToGetMonitorsMonitorCollectionItemConfigurationArrayOutput() GetMonitorsMonitorCollectionItemConfigurationArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationArray) ToGetMonitorsMonitorCollectionItemConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfiguration)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationOutput) ToGetMonitorsMonitorCollectionItemConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationOutput) ToGetMonitorsMonitorCollectionItemConfigurationOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationOutput {
	return o
}

// Type of configuration.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) string { return v.ConfigType }).(pulumi.StringOutput)
}

// Dns settings.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) DnsConfigurations() GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) []GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration {
		return v.DnsConfigurations
	}).(GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput)
}

// If certificate validation is enabled, then the call will fail in case of certification errors.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) IsCertificateValidationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) bool { return v.IsCertificateValidationEnabled }).(pulumi.BoolOutput)
}

// If isFailureRetried is enabled, then a failed call will be retried.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) IsFailureRetried() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) bool { return v.IsFailureRetried }).(pulumi.BoolOutput)
}

// If redirection enabled, then redirects will be allowed while accessing target URL.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) IsRedirectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) bool { return v.IsRedirectionEnabled }).(pulumi.BoolOutput)
}

// Details of the network configuration.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) NetworkConfigurations() GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) []GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration {
		return v.NetworkConfigurations
	}).(GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput)
}

// Details for request HTTP authentication.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) ReqAuthenticationDetails() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) []GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail {
		return v.ReqAuthenticationDetails
	}).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput)
}

// Request http authentication scheme.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) ReqAuthenticationScheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) string { return v.ReqAuthenticationScheme }).(pulumi.StringOutput)
}

// List of request headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) RequestHeaders() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) []GetMonitorsMonitorCollectionItemConfigurationRequestHeader {
		return v.RequestHeaders
	}).(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput)
}

// Request HTTP method.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) string { return v.RequestMethod }).(pulumi.StringOutput)
}

// Request post body content.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) RequestPostBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) string { return v.RequestPostBody }).(pulumi.StringOutput)
}

// List of request query params. Example: `[{"paramName": "sortOrder", "paramValue": "asc"}]`
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) RequestQueryParams() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) []GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam {
		return v.RequestQueryParams
	}).(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput)
}

// Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) VerifyResponseCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) []string { return v.VerifyResponseCodes }).(pulumi.StringArrayOutput)
}

// Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) VerifyResponseContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) string { return v.VerifyResponseContent }).(pulumi.StringOutput)
}

// Verifies all the search strings present in the response. If any search string is not present in the response, then it will be considered as a failure.
func (o GetMonitorsMonitorCollectionItemConfigurationOutput) VerifyTexts() GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfiguration) []GetMonitorsMonitorCollectionItemConfigurationVerifyText {
		return v.VerifyTexts
	}).(GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfiguration)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationArrayOutput() GetMonitorsMonitorCollectionItemConfigurationArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfiguration {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfiguration)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration struct {
	// If isOverrideDns is true, then dns will be overridden.
	IsOverrideDns bool `pulumi:"isOverrideDns"`
	// Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
	OverrideDnsIp string `pulumi:"overrideDnsIp"`
}

// GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArgs and GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput
	ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput
}

type GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArgs struct {
	// If isOverrideDns is true, then dns will be overridden.
	IsOverrideDns pulumi.BoolInput `pulumi:"isOverrideDns"`
	// Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
	OverrideDnsIp pulumi.StringInput `pulumi:"overrideDnsIp"`
}

func (GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArgs) ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArgs) ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArray and GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArray{ GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput() GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArray []GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationInput

func (GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArray) ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput() GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArray) ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput) ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput) ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput {
	return o
}

// If isOverrideDns is true, then dns will be overridden.
func (o GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput) IsOverrideDns() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration) bool { return v.IsOverrideDns }).(pulumi.BoolOutput)
}

// Override dns ip value. This value will be honored only if *ref-isOverrideDns is set to true.
func (o GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput) OverrideDnsIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration) string { return v.OverrideDnsIp }).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput() GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfigurationDnsConfiguration)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration struct {
	// Number of hops.
	NumberOfHops int `pulumi:"numberOfHops"`
	// Type of probe mode when TCP protocol is selected.
	ProbeMode string `pulumi:"probeMode"`
	// Number of probes per hop.
	ProbePerHop int `pulumi:"probePerHop"`
	// Type of protocol.
	Protocol string `pulumi:"protocol"`
	// Number of probe packets sent out simultaneously.
	TransmissionRate int `pulumi:"transmissionRate"`
}

// GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArgs and GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput
	ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput
}

type GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArgs struct {
	// Number of hops.
	NumberOfHops pulumi.IntInput `pulumi:"numberOfHops"`
	// Type of probe mode when TCP protocol is selected.
	ProbeMode pulumi.StringInput `pulumi:"probeMode"`
	// Number of probes per hop.
	ProbePerHop pulumi.IntInput `pulumi:"probePerHop"`
	// Type of protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Number of probe packets sent out simultaneously.
	TransmissionRate pulumi.IntInput `pulumi:"transmissionRate"`
}

func (GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArgs) ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArgs) ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArray and GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArray{ GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput() GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArray []GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationInput

func (GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArray) ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput() GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArray) ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput) ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput() GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput) ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput {
	return o
}

// Number of hops.
func (o GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput) NumberOfHops() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration) int { return v.NumberOfHops }).(pulumi.IntOutput)
}

// Type of probe mode when TCP protocol is selected.
func (o GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput) ProbeMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration) string { return v.ProbeMode }).(pulumi.StringOutput)
}

// Number of probes per hop.
func (o GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput) ProbePerHop() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration) int { return v.ProbePerHop }).(pulumi.IntOutput)
}

// Type of protocol.
func (o GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration) string { return v.Protocol }).(pulumi.StringOutput)
}

// Number of probe packets sent out simultaneously.
func (o GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput) TransmissionRate() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration) int {
		return v.TransmissionRate
	}).(pulumi.IntOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput() GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfigurationNetworkConfiguration)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail struct {
	// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders []GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader `pulumi:"authHeaders"`
	// Request method.
	AuthRequestMethod string `pulumi:"authRequestMethod"`
	// Request post body.
	AuthRequestPostBody string `pulumi:"authRequestPostBody"`
	// Authentication token.
	AuthToken string `pulumi:"authToken"`
	// URL to get authetication token.
	AuthUrl string `pulumi:"authUrl"`
	// Username for authentication.
	AuthUserName string `pulumi:"authUserName"`
	// User password for authentication.
	AuthUserPassword string `pulumi:"authUserPassword"`
	// Request http oauth scheme.
	OauthScheme string `pulumi:"oauthScheme"`
}

// GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArgs and GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput
	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArgs struct {
	// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
	AuthHeaders GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayInput `pulumi:"authHeaders"`
	// Request method.
	AuthRequestMethod pulumi.StringInput `pulumi:"authRequestMethod"`
	// Request post body.
	AuthRequestPostBody pulumi.StringInput `pulumi:"authRequestPostBody"`
	// Authentication token.
	AuthToken pulumi.StringInput `pulumi:"authToken"`
	// URL to get authetication token.
	AuthUrl pulumi.StringInput `pulumi:"authUrl"`
	// Username for authentication.
	AuthUserName pulumi.StringInput `pulumi:"authUserName"`
	// User password for authentication.
	AuthUserPassword pulumi.StringInput `pulumi:"authUserPassword"`
	// Request http oauth scheme.
	OauthScheme pulumi.StringInput `pulumi:"oauthScheme"`
}

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArgs) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArgs) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArray and GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArray{ GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArray []GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailInput

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArray) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArray) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput {
	return o
}

// List of authentication headers. Example: `[{"headerName": "content-type", "headerValue":"json"}]`
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput) AuthHeaders() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail) []GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader {
		return v.AuthHeaders
	}).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput)
}

// Request method.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput) AuthRequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail) string {
		return v.AuthRequestMethod
	}).(pulumi.StringOutput)
}

// Request post body.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput) AuthRequestPostBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail) string {
		return v.AuthRequestPostBody
	}).(pulumi.StringOutput)
}

// Authentication token.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput) AuthToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail) string {
		return v.AuthToken
	}).(pulumi.StringOutput)
}

// URL to get authetication token.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput) AuthUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail) string { return v.AuthUrl }).(pulumi.StringOutput)
}

// Username for authentication.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput) AuthUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail) string {
		return v.AuthUserName
	}).(pulumi.StringOutput)
}

// User password for authentication.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput) AuthUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail) string {
		return v.AuthUserPassword
	}).(pulumi.StringOutput)
}

// Request http oauth scheme.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput) OauthScheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail) string {
		return v.OauthScheme
	}).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetail)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader struct {
	// Name of the header.
	HeaderName string `pulumi:"headerName"`
	// Value of the header.
	HeaderValue string `pulumi:"headerValue"`
}

// GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArgs and GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput
	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArgs struct {
	// Name of the header.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Value of the header.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArgs) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArgs) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArray and GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArray{ GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArray []GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderInput

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArray) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArray) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput {
	return o
}

// Name of the header.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader) string {
		return v.HeaderName
	}).(pulumi.StringOutput)
}

// Value of the header.
func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader) string {
		return v.HeaderValue
	}).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeader)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestHeader struct {
	// Name of the header.
	HeaderName string `pulumi:"headerName"`
	// Value of the header.
	HeaderValue string `pulumi:"headerValue"`
}

// GetMonitorsMonitorCollectionItemConfigurationRequestHeaderInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs and GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationRequestHeaderInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput
	ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput
}

type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs struct {
	// Name of the header.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Value of the header.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestHeader)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray and GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray{ GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray []GetMonitorsMonitorCollectionItemConfigurationRequestHeaderInput

func (GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationRequestHeader)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestHeader)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput {
	return o
}

// Name of the header.
func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationRequestHeader) string { return v.HeaderName }).(pulumi.StringOutput)
}

// Value of the header.
func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationRequestHeader) string { return v.HeaderValue }).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationRequestHeader)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfigurationRequestHeader {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfigurationRequestHeader)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam struct {
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs and GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput
	ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput
}

type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs struct {
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray and GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray{ GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray []GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamInput

func (GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput {
	return o
}

// Name of the parameter.
func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput() GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfigurationRequestQueryParam)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationVerifyText struct {
	// Verification text in the response.
	Text string `pulumi:"text"`
}

// GetMonitorsMonitorCollectionItemConfigurationVerifyTextInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs and GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationVerifyTextInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs{...}
type GetMonitorsMonitorCollectionItemConfigurationVerifyTextInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput
	ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput
}

type GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs struct {
	// Verification text in the response.
	Text pulumi.StringInput `pulumi:"text"`
}

func (GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationVerifyText)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput)
}

// GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray and GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayInput` via:
//
//	GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray{ GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs{...} }
type GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput
	ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput
}

type GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray []GetMonitorsMonitorCollectionItemConfigurationVerifyTextInput

func (GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationVerifyText)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationVerifyText)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput {
	return o
}

// Verification text in the response.
func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemConfigurationVerifyText) string { return v.Text }).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemConfigurationVerifyText)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput() GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput) ToGetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemConfigurationVerifyText {
		return vs[0].([]GetMonitorsMonitorCollectionItemConfigurationVerifyText)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput)
}

type GetMonitorsMonitorCollectionItemScriptParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten bool `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret bool `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameters []GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter `pulumi:"monitorScriptParameters"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorsMonitorCollectionItemScriptParameterInput is an input type that accepts GetMonitorsMonitorCollectionItemScriptParameterArgs and GetMonitorsMonitorCollectionItemScriptParameterOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemScriptParameterInput` via:
//
//	GetMonitorsMonitorCollectionItemScriptParameterArgs{...}
type GetMonitorsMonitorCollectionItemScriptParameterInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterOutput
	ToGetMonitorsMonitorCollectionItemScriptParameterOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemScriptParameterOutput
}

type GetMonitorsMonitorCollectionItemScriptParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolInput `pulumi:"isOverwritten"`
	// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Details of the script parameter that can be used to overwrite the parameter present in the script.
	MonitorScriptParameters GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayInput `pulumi:"monitorScriptParameters"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorsMonitorCollectionItemScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameter)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemScriptParameterArgs) ToGetMonitorsMonitorCollectionItemScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterOutput {
	return i.ToGetMonitorsMonitorCollectionItemScriptParameterOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemScriptParameterArgs) ToGetMonitorsMonitorCollectionItemScriptParameterOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemScriptParameterOutput)
}

// GetMonitorsMonitorCollectionItemScriptParameterArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemScriptParameterArray and GetMonitorsMonitorCollectionItemScriptParameterArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemScriptParameterArrayInput` via:
//
//	GetMonitorsMonitorCollectionItemScriptParameterArray{ GetMonitorsMonitorCollectionItemScriptParameterArgs{...} }
type GetMonitorsMonitorCollectionItemScriptParameterArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutput() GetMonitorsMonitorCollectionItemScriptParameterArrayOutput
	ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemScriptParameterArrayOutput
}

type GetMonitorsMonitorCollectionItemScriptParameterArray []GetMonitorsMonitorCollectionItemScriptParameterInput

func (GetMonitorsMonitorCollectionItemScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemScriptParameter)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemScriptParameterArray) ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutput() GetMonitorsMonitorCollectionItemScriptParameterArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemScriptParameterArray) ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemScriptParameterArrayOutput)
}

type GetMonitorsMonitorCollectionItemScriptParameterOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameter)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) ToGetMonitorsMonitorCollectionItemScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) ToGetMonitorsMonitorCollectionItemScriptParameterOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) IsOverwritten() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameter) bool { return v.IsOverwritten }).(pulumi.BoolOutput)
}

// Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Details of the script parameter that can be used to overwrite the parameter present in the script.
func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) MonitorScriptParameters() GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameter) []GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter {
		return v.MonitorScriptParameters
	}).(GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput)
}

// Name of the parameter.
func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorsMonitorCollectionItemScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemScriptParameter)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemScriptParameterArrayOutput) ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutput() GetMonitorsMonitorCollectionItemScriptParameterArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemScriptParameterArrayOutput) ToGetMonitorsMonitorCollectionItemScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemScriptParameterArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemScriptParameter {
		return vs[0].([]GetMonitorsMonitorCollectionItemScriptParameter)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemScriptParameterOutput)
}

type GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter struct {
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterInput is an input type that accepts GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs and GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterInput` via:
//
//	GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs{...}
type GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput
	ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput
}

type GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs struct {
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput {
	return i.ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput)
}

// GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayInput is an input type that accepts GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArray and GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayInput` via:
//
//	GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArray{ GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs{...} }
type GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput() GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput
	ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutputWithContext(context.Context) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput
}

type GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArray []GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterInput

func (GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (i GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArray) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput() GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput {
	return i.ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArray) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput)
}

type GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput() GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput {
	return o
}

// Name of the parameter.
func (o GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter) string {
		return v.ParamName
	}).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter) string {
		return v.ParamValue
	}).(pulumi.StringOutput)
}

type GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter)(nil)).Elem()
}

func (o GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput() GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput) ToGetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput {
	return o
}

func (o GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter {
		return vs[0].([]GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameter)[vs[1].(int)]
	}).(GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput)
}

type GetResultResultDataSet struct {
	// Data content in byte format. Example: Zip or Screenshot.
	ByteContent string `pulumi:"byteContent"`
	// Name of the data.
	Name string `pulumi:"name"`
	// Data content in string format. Example: HAR.
	StringContent string `pulumi:"stringContent"`
	// The time when the data was generated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	Timestamp string `pulumi:"timestamp"`
}

// GetResultResultDataSetInput is an input type that accepts GetResultResultDataSetArgs and GetResultResultDataSetOutput values.
// You can construct a concrete instance of `GetResultResultDataSetInput` via:
//
//	GetResultResultDataSetArgs{...}
type GetResultResultDataSetInput interface {
	pulumi.Input

	ToGetResultResultDataSetOutput() GetResultResultDataSetOutput
	ToGetResultResultDataSetOutputWithContext(context.Context) GetResultResultDataSetOutput
}

type GetResultResultDataSetArgs struct {
	// Data content in byte format. Example: Zip or Screenshot.
	ByteContent pulumi.StringInput `pulumi:"byteContent"`
	// Name of the data.
	Name pulumi.StringInput `pulumi:"name"`
	// Data content in string format. Example: HAR.
	StringContent pulumi.StringInput `pulumi:"stringContent"`
	// The time when the data was generated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
}

func (GetResultResultDataSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResultResultDataSet)(nil)).Elem()
}

func (i GetResultResultDataSetArgs) ToGetResultResultDataSetOutput() GetResultResultDataSetOutput {
	return i.ToGetResultResultDataSetOutputWithContext(context.Background())
}

func (i GetResultResultDataSetArgs) ToGetResultResultDataSetOutputWithContext(ctx context.Context) GetResultResultDataSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResultResultDataSetOutput)
}

// GetResultResultDataSetArrayInput is an input type that accepts GetResultResultDataSetArray and GetResultResultDataSetArrayOutput values.
// You can construct a concrete instance of `GetResultResultDataSetArrayInput` via:
//
//	GetResultResultDataSetArray{ GetResultResultDataSetArgs{...} }
type GetResultResultDataSetArrayInput interface {
	pulumi.Input

	ToGetResultResultDataSetArrayOutput() GetResultResultDataSetArrayOutput
	ToGetResultResultDataSetArrayOutputWithContext(context.Context) GetResultResultDataSetArrayOutput
}

type GetResultResultDataSetArray []GetResultResultDataSetInput

func (GetResultResultDataSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResultResultDataSet)(nil)).Elem()
}

func (i GetResultResultDataSetArray) ToGetResultResultDataSetArrayOutput() GetResultResultDataSetArrayOutput {
	return i.ToGetResultResultDataSetArrayOutputWithContext(context.Background())
}

func (i GetResultResultDataSetArray) ToGetResultResultDataSetArrayOutputWithContext(ctx context.Context) GetResultResultDataSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResultResultDataSetArrayOutput)
}

type GetResultResultDataSetOutput struct{ *pulumi.OutputState }

func (GetResultResultDataSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResultResultDataSet)(nil)).Elem()
}

func (o GetResultResultDataSetOutput) ToGetResultResultDataSetOutput() GetResultResultDataSetOutput {
	return o
}

func (o GetResultResultDataSetOutput) ToGetResultResultDataSetOutputWithContext(ctx context.Context) GetResultResultDataSetOutput {
	return o
}

// Data content in byte format. Example: Zip or Screenshot.
func (o GetResultResultDataSetOutput) ByteContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetResultResultDataSet) string { return v.ByteContent }).(pulumi.StringOutput)
}

// Name of the data.
func (o GetResultResultDataSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResultResultDataSet) string { return v.Name }).(pulumi.StringOutput)
}

// Data content in string format. Example: HAR.
func (o GetResultResultDataSetOutput) StringContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetResultResultDataSet) string { return v.StringContent }).(pulumi.StringOutput)
}

// The time when the data was generated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
func (o GetResultResultDataSetOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetResultResultDataSet) string { return v.Timestamp }).(pulumi.StringOutput)
}

type GetResultResultDataSetArrayOutput struct{ *pulumi.OutputState }

func (GetResultResultDataSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResultResultDataSet)(nil)).Elem()
}

func (o GetResultResultDataSetArrayOutput) ToGetResultResultDataSetArrayOutput() GetResultResultDataSetArrayOutput {
	return o
}

func (o GetResultResultDataSetArrayOutput) ToGetResultResultDataSetArrayOutputWithContext(ctx context.Context) GetResultResultDataSetArrayOutput {
	return o
}

func (o GetResultResultDataSetArrayOutput) Index(i pulumi.IntInput) GetResultResultDataSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResultResultDataSet {
		return vs[0].([]GetResultResultDataSet)[vs[1].(int)]
	}).(GetResultResultDataSetOutput)
}

type GetScriptMonitorStatusCountMap struct {
	// Number of disabled monitors using the script.
	Disabled int `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled int `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid int `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total int `pulumi:"total"`
}

// GetScriptMonitorStatusCountMapInput is an input type that accepts GetScriptMonitorStatusCountMap and GetScriptMonitorStatusCountMapOutput values.
// You can construct a concrete instance of `GetScriptMonitorStatusCountMapInput` via:
//
//	GetScriptMonitorStatusCountMap{ "key": GetScriptMonitorStatusCountArgs{...} }
type GetScriptMonitorStatusCountMapInput interface {
	pulumi.Input

	ToGetScriptMonitorStatusCountMapOutput() GetScriptMonitorStatusCountMapOutput
	ToGetScriptMonitorStatusCountMapOutputWithContext(context.Context) GetScriptMonitorStatusCountMapOutput
}

type GetScriptMonitorStatusCountMapArgs struct {
	// Number of disabled monitors using the script.
	Disabled pulumi.IntInput `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled pulumi.IntInput `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid pulumi.IntInput `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetScriptMonitorStatusCountMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptMonitorStatusCountMap)(nil)).Elem()
}

func (i GetScriptMonitorStatusCountMapArgs) ToGetScriptMonitorStatusCountMapOutput() GetScriptMonitorStatusCountMapOutput {
	return i.ToGetScriptMonitorStatusCountMapOutputWithContext(context.Background())
}

func (i GetScriptMonitorStatusCountMapArgs) ToGetScriptMonitorStatusCountMapOutputWithContext(ctx context.Context) GetScriptMonitorStatusCountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptMonitorStatusCountMapOutput)
}

// GetScriptMonitorStatusCountMapArrayInput is an input type that accepts GetScriptMonitorStatusCountMapArray and GetScriptMonitorStatusCountMapArrayOutput values.
// You can construct a concrete instance of `GetScriptMonitorStatusCountMapArrayInput` via:
//
//	GetScriptMonitorStatusCountMapArray{ GetScriptMonitorStatusCountMapArgs{...} }
type GetScriptMonitorStatusCountMapArrayInput interface {
	pulumi.Input

	ToGetScriptMonitorStatusCountMapArrayOutput() GetScriptMonitorStatusCountMapArrayOutput
	ToGetScriptMonitorStatusCountMapArrayOutputWithContext(context.Context) GetScriptMonitorStatusCountMapArrayOutput
}

type GetScriptMonitorStatusCountMapArray []GetScriptMonitorStatusCountMapInput

func (GetScriptMonitorStatusCountMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptMonitorStatusCountMap)(nil)).Elem()
}

func (i GetScriptMonitorStatusCountMapArray) ToGetScriptMonitorStatusCountMapArrayOutput() GetScriptMonitorStatusCountMapArrayOutput {
	return i.ToGetScriptMonitorStatusCountMapArrayOutputWithContext(context.Background())
}

func (i GetScriptMonitorStatusCountMapArray) ToGetScriptMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) GetScriptMonitorStatusCountMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptMonitorStatusCountMapArrayOutput)
}

type GetScriptMonitorStatusCountMapOutput struct{ *pulumi.OutputState }

func (GetScriptMonitorStatusCountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptMonitorStatusCountMap)(nil)).Elem()
}

func (o GetScriptMonitorStatusCountMapOutput) ToGetScriptMonitorStatusCountMapOutput() GetScriptMonitorStatusCountMapOutput {
	return o
}

func (o GetScriptMonitorStatusCountMapOutput) ToGetScriptMonitorStatusCountMapOutputWithContext(ctx context.Context) GetScriptMonitorStatusCountMapOutput {
	return o
}

// Number of disabled monitors using the script.
func (o GetScriptMonitorStatusCountMapOutput) Disabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptMonitorStatusCountMap) int { return v.Disabled }).(pulumi.IntOutput)
}

// Number of enabled monitors using the script.
func (o GetScriptMonitorStatusCountMapOutput) Enabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptMonitorStatusCountMap) int { return v.Enabled }).(pulumi.IntOutput)
}

// Number of invalid monitors using the script.
func (o GetScriptMonitorStatusCountMapOutput) Invalid() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptMonitorStatusCountMap) int { return v.Invalid }).(pulumi.IntOutput)
}

// Total number of monitors using the script.
func (o GetScriptMonitorStatusCountMapOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptMonitorStatusCountMap) int { return v.Total }).(pulumi.IntOutput)
}

type GetScriptMonitorStatusCountMapArrayOutput struct{ *pulumi.OutputState }

func (GetScriptMonitorStatusCountMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptMonitorStatusCountMap)(nil)).Elem()
}

func (o GetScriptMonitorStatusCountMapArrayOutput) ToGetScriptMonitorStatusCountMapArrayOutput() GetScriptMonitorStatusCountMapArrayOutput {
	return o
}

func (o GetScriptMonitorStatusCountMapArrayOutput) ToGetScriptMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) GetScriptMonitorStatusCountMapArrayOutput {
	return o
}

func (o GetScriptMonitorStatusCountMapArrayOutput) Index(i pulumi.IntInput) GetScriptMonitorStatusCountMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptMonitorStatusCountMap {
		return vs[0].([]GetScriptMonitorStatusCountMap)[vs[1].(int)]
	}).(GetScriptMonitorStatusCountMapOutput)
}

type GetScriptParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten bool `pulumi:"isOverwritten"`
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret bool `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameters []GetScriptParameterScriptParameter `pulumi:"scriptParameters"`
}

// GetScriptParameterInput is an input type that accepts GetScriptParameterArgs and GetScriptParameterOutput values.
// You can construct a concrete instance of `GetScriptParameterInput` via:
//
//	GetScriptParameterArgs{...}
type GetScriptParameterInput interface {
	pulumi.Input

	ToGetScriptParameterOutput() GetScriptParameterOutput
	ToGetScriptParameterOutputWithContext(context.Context) GetScriptParameterOutput
}

type GetScriptParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolInput `pulumi:"isOverwritten"`
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameters GetScriptParameterScriptParameterArrayInput `pulumi:"scriptParameters"`
}

func (GetScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptParameter)(nil)).Elem()
}

func (i GetScriptParameterArgs) ToGetScriptParameterOutput() GetScriptParameterOutput {
	return i.ToGetScriptParameterOutputWithContext(context.Background())
}

func (i GetScriptParameterArgs) ToGetScriptParameterOutputWithContext(ctx context.Context) GetScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptParameterOutput)
}

// GetScriptParameterArrayInput is an input type that accepts GetScriptParameterArray and GetScriptParameterArrayOutput values.
// You can construct a concrete instance of `GetScriptParameterArrayInput` via:
//
//	GetScriptParameterArray{ GetScriptParameterArgs{...} }
type GetScriptParameterArrayInput interface {
	pulumi.Input

	ToGetScriptParameterArrayOutput() GetScriptParameterArrayOutput
	ToGetScriptParameterArrayOutputWithContext(context.Context) GetScriptParameterArrayOutput
}

type GetScriptParameterArray []GetScriptParameterInput

func (GetScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptParameter)(nil)).Elem()
}

func (i GetScriptParameterArray) ToGetScriptParameterArrayOutput() GetScriptParameterArrayOutput {
	return i.ToGetScriptParameterArrayOutputWithContext(context.Background())
}

func (i GetScriptParameterArray) ToGetScriptParameterArrayOutputWithContext(ctx context.Context) GetScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptParameterArrayOutput)
}

type GetScriptParameterOutput struct{ *pulumi.OutputState }

func (GetScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptParameter)(nil)).Elem()
}

func (o GetScriptParameterOutput) ToGetScriptParameterOutput() GetScriptParameterOutput {
	return o
}

func (o GetScriptParameterOutput) ToGetScriptParameterOutputWithContext(ctx context.Context) GetScriptParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o GetScriptParameterOutput) IsOverwritten() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptParameter) bool { return v.IsOverwritten }).(pulumi.BoolOutput)
}

// If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o GetScriptParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Name of the parameter.
func (o GetScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
func (o GetScriptParameterOutput) ScriptParameters() GetScriptParameterScriptParameterArrayOutput {
	return o.ApplyT(func(v GetScriptParameter) []GetScriptParameterScriptParameter { return v.ScriptParameters }).(GetScriptParameterScriptParameterArrayOutput)
}

type GetScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (GetScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptParameter)(nil)).Elem()
}

func (o GetScriptParameterArrayOutput) ToGetScriptParameterArrayOutput() GetScriptParameterArrayOutput {
	return o
}

func (o GetScriptParameterArrayOutput) ToGetScriptParameterArrayOutputWithContext(ctx context.Context) GetScriptParameterArrayOutput {
	return o
}

func (o GetScriptParameterArrayOutput) Index(i pulumi.IntInput) GetScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptParameter {
		return vs[0].([]GetScriptParameter)[vs[1].(int)]
	}).(GetScriptParameterOutput)
}

type GetScriptParameterScriptParameter struct {
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret bool `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetScriptParameterScriptParameterInput is an input type that accepts GetScriptParameterScriptParameterArgs and GetScriptParameterScriptParameterOutput values.
// You can construct a concrete instance of `GetScriptParameterScriptParameterInput` via:
//
//	GetScriptParameterScriptParameterArgs{...}
type GetScriptParameterScriptParameterInput interface {
	pulumi.Input

	ToGetScriptParameterScriptParameterOutput() GetScriptParameterScriptParameterOutput
	ToGetScriptParameterScriptParameterOutputWithContext(context.Context) GetScriptParameterScriptParameterOutput
}

type GetScriptParameterScriptParameterArgs struct {
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetScriptParameterScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptParameterScriptParameter)(nil)).Elem()
}

func (i GetScriptParameterScriptParameterArgs) ToGetScriptParameterScriptParameterOutput() GetScriptParameterScriptParameterOutput {
	return i.ToGetScriptParameterScriptParameterOutputWithContext(context.Background())
}

func (i GetScriptParameterScriptParameterArgs) ToGetScriptParameterScriptParameterOutputWithContext(ctx context.Context) GetScriptParameterScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptParameterScriptParameterOutput)
}

// GetScriptParameterScriptParameterArrayInput is an input type that accepts GetScriptParameterScriptParameterArray and GetScriptParameterScriptParameterArrayOutput values.
// You can construct a concrete instance of `GetScriptParameterScriptParameterArrayInput` via:
//
//	GetScriptParameterScriptParameterArray{ GetScriptParameterScriptParameterArgs{...} }
type GetScriptParameterScriptParameterArrayInput interface {
	pulumi.Input

	ToGetScriptParameterScriptParameterArrayOutput() GetScriptParameterScriptParameterArrayOutput
	ToGetScriptParameterScriptParameterArrayOutputWithContext(context.Context) GetScriptParameterScriptParameterArrayOutput
}

type GetScriptParameterScriptParameterArray []GetScriptParameterScriptParameterInput

func (GetScriptParameterScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptParameterScriptParameter)(nil)).Elem()
}

func (i GetScriptParameterScriptParameterArray) ToGetScriptParameterScriptParameterArrayOutput() GetScriptParameterScriptParameterArrayOutput {
	return i.ToGetScriptParameterScriptParameterArrayOutputWithContext(context.Background())
}

func (i GetScriptParameterScriptParameterArray) ToGetScriptParameterScriptParameterArrayOutputWithContext(ctx context.Context) GetScriptParameterScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptParameterScriptParameterArrayOutput)
}

type GetScriptParameterScriptParameterOutput struct{ *pulumi.OutputState }

func (GetScriptParameterScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptParameterScriptParameter)(nil)).Elem()
}

func (o GetScriptParameterScriptParameterOutput) ToGetScriptParameterScriptParameterOutput() GetScriptParameterScriptParameterOutput {
	return o
}

func (o GetScriptParameterScriptParameterOutput) ToGetScriptParameterScriptParameterOutputWithContext(ctx context.Context) GetScriptParameterScriptParameterOutput {
	return o
}

// If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o GetScriptParameterScriptParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptParameterScriptParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Name of the parameter.
func (o GetScriptParameterScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptParameterScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetScriptParameterScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptParameterScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetScriptParameterScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (GetScriptParameterScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptParameterScriptParameter)(nil)).Elem()
}

func (o GetScriptParameterScriptParameterArrayOutput) ToGetScriptParameterScriptParameterArrayOutput() GetScriptParameterScriptParameterArrayOutput {
	return o
}

func (o GetScriptParameterScriptParameterArrayOutput) ToGetScriptParameterScriptParameterArrayOutputWithContext(ctx context.Context) GetScriptParameterScriptParameterArrayOutput {
	return o
}

func (o GetScriptParameterScriptParameterArrayOutput) Index(i pulumi.IntInput) GetScriptParameterScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptParameterScriptParameter {
		return vs[0].([]GetScriptParameterScriptParameter)[vs[1].(int)]
	}).(GetScriptParameterScriptParameterOutput)
}

type GetScriptsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetScriptsFilterInput is an input type that accepts GetScriptsFilterArgs and GetScriptsFilterOutput values.
// You can construct a concrete instance of `GetScriptsFilterInput` via:
//
//	GetScriptsFilterArgs{...}
type GetScriptsFilterInput interface {
	pulumi.Input

	ToGetScriptsFilterOutput() GetScriptsFilterOutput
	ToGetScriptsFilterOutputWithContext(context.Context) GetScriptsFilterOutput
}

type GetScriptsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetScriptsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsFilter)(nil)).Elem()
}

func (i GetScriptsFilterArgs) ToGetScriptsFilterOutput() GetScriptsFilterOutput {
	return i.ToGetScriptsFilterOutputWithContext(context.Background())
}

func (i GetScriptsFilterArgs) ToGetScriptsFilterOutputWithContext(ctx context.Context) GetScriptsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsFilterOutput)
}

// GetScriptsFilterArrayInput is an input type that accepts GetScriptsFilterArray and GetScriptsFilterArrayOutput values.
// You can construct a concrete instance of `GetScriptsFilterArrayInput` via:
//
//	GetScriptsFilterArray{ GetScriptsFilterArgs{...} }
type GetScriptsFilterArrayInput interface {
	pulumi.Input

	ToGetScriptsFilterArrayOutput() GetScriptsFilterArrayOutput
	ToGetScriptsFilterArrayOutputWithContext(context.Context) GetScriptsFilterArrayOutput
}

type GetScriptsFilterArray []GetScriptsFilterInput

func (GetScriptsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsFilter)(nil)).Elem()
}

func (i GetScriptsFilterArray) ToGetScriptsFilterArrayOutput() GetScriptsFilterArrayOutput {
	return i.ToGetScriptsFilterArrayOutputWithContext(context.Background())
}

func (i GetScriptsFilterArray) ToGetScriptsFilterArrayOutputWithContext(ctx context.Context) GetScriptsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsFilterArrayOutput)
}

type GetScriptsFilterOutput struct{ *pulumi.OutputState }

func (GetScriptsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsFilter)(nil)).Elem()
}

func (o GetScriptsFilterOutput) ToGetScriptsFilterOutput() GetScriptsFilterOutput {
	return o
}

func (o GetScriptsFilterOutput) ToGetScriptsFilterOutputWithContext(ctx context.Context) GetScriptsFilterOutput {
	return o
}

func (o GetScriptsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetScriptsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetScriptsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetScriptsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScriptsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetScriptsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetScriptsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsFilter)(nil)).Elem()
}

func (o GetScriptsFilterArrayOutput) ToGetScriptsFilterArrayOutput() GetScriptsFilterArrayOutput {
	return o
}

func (o GetScriptsFilterArrayOutput) ToGetScriptsFilterArrayOutputWithContext(ctx context.Context) GetScriptsFilterArrayOutput {
	return o
}

func (o GetScriptsFilterArrayOutput) Index(i pulumi.IntInput) GetScriptsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptsFilter {
		return vs[0].([]GetScriptsFilter)[vs[1].(int)]
	}).(GetScriptsFilterOutput)
}

type GetScriptsScriptCollection struct {
	Items []GetScriptsScriptCollectionItem `pulumi:"items"`
}

// GetScriptsScriptCollectionInput is an input type that accepts GetScriptsScriptCollectionArgs and GetScriptsScriptCollectionOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionInput` via:
//
//	GetScriptsScriptCollectionArgs{...}
type GetScriptsScriptCollectionInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionOutput() GetScriptsScriptCollectionOutput
	ToGetScriptsScriptCollectionOutputWithContext(context.Context) GetScriptsScriptCollectionOutput
}

type GetScriptsScriptCollectionArgs struct {
	Items GetScriptsScriptCollectionItemArrayInput `pulumi:"items"`
}

func (GetScriptsScriptCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollection)(nil)).Elem()
}

func (i GetScriptsScriptCollectionArgs) ToGetScriptsScriptCollectionOutput() GetScriptsScriptCollectionOutput {
	return i.ToGetScriptsScriptCollectionOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionArgs) ToGetScriptsScriptCollectionOutputWithContext(ctx context.Context) GetScriptsScriptCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionOutput)
}

// GetScriptsScriptCollectionArrayInput is an input type that accepts GetScriptsScriptCollectionArray and GetScriptsScriptCollectionArrayOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionArrayInput` via:
//
//	GetScriptsScriptCollectionArray{ GetScriptsScriptCollectionArgs{...} }
type GetScriptsScriptCollectionArrayInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionArrayOutput() GetScriptsScriptCollectionArrayOutput
	ToGetScriptsScriptCollectionArrayOutputWithContext(context.Context) GetScriptsScriptCollectionArrayOutput
}

type GetScriptsScriptCollectionArray []GetScriptsScriptCollectionInput

func (GetScriptsScriptCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollection)(nil)).Elem()
}

func (i GetScriptsScriptCollectionArray) ToGetScriptsScriptCollectionArrayOutput() GetScriptsScriptCollectionArrayOutput {
	return i.ToGetScriptsScriptCollectionArrayOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionArray) ToGetScriptsScriptCollectionArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionArrayOutput)
}

type GetScriptsScriptCollectionOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollection)(nil)).Elem()
}

func (o GetScriptsScriptCollectionOutput) ToGetScriptsScriptCollectionOutput() GetScriptsScriptCollectionOutput {
	return o
}

func (o GetScriptsScriptCollectionOutput) ToGetScriptsScriptCollectionOutputWithContext(ctx context.Context) GetScriptsScriptCollectionOutput {
	return o
}

func (o GetScriptsScriptCollectionOutput) Items() GetScriptsScriptCollectionItemArrayOutput {
	return o.ApplyT(func(v GetScriptsScriptCollection) []GetScriptsScriptCollectionItem { return v.Items }).(GetScriptsScriptCollectionItemArrayOutput)
}

type GetScriptsScriptCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollection)(nil)).Elem()
}

func (o GetScriptsScriptCollectionArrayOutput) ToGetScriptsScriptCollectionArrayOutput() GetScriptsScriptCollectionArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionArrayOutput) ToGetScriptsScriptCollectionArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionArrayOutput) Index(i pulumi.IntInput) GetScriptsScriptCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptsScriptCollection {
		return vs[0].([]GetScriptsScriptCollection)[vs[1].(int)]
	}).(GetScriptsScriptCollectionOutput)
}

type GetScriptsScriptCollectionItem struct {
	// The APM domain ID the request is intended for.
	ApmDomainId string `pulumi:"apmDomainId"`
	// The content of the script. It may contain custom-defined tags that can be used for setting dynamic parameters. The format to set dynamic parameters is: `<ORAP><ON>param name</ON><OV>param value</OV><OS>isParamValueSecret(true/false)</OS></ORAP>`. Param value and isParamValueSecret are optional, the default value for isParamValueSecret is false. Examples: With mandatory param name : `<ORAP><ON>param name</ON></ORAP>` With parameter name and value : `<ORAP><ON>param name</ON><OV>param value</OV></ORAP>` Note that the content is valid if it matches the given content type. For example, if the content type is SIDE, then the content should be in Side script format. If the content type is JS, then the content should be in JavaScript format.
	Content string `pulumi:"content"`
	// File name of the uploaded script content.
	ContentFileName string `pulumi:"contentFileName"`
	// Size of the script content.
	ContentSizeInBytes int `pulumi:"contentSizeInBytes"`
	// A filter to return only resources that match the content type given.
	ContentType string `pulumi:"contentType"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
	Id string `pulumi:"id"`
	// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
	MonitorStatusCountMaps []GetScriptsScriptCollectionItemMonitorStatusCountMap `pulumi:"monitorStatusCountMaps"`
	// List of script parameters. Example: `[{"scriptParameter": {"paramName": "userid", "paramValue":"testuser", "isSecret": false}, "isOverwritten": false}]`
	Parameters []GetScriptsScriptCollectionItemParameter `pulumi:"parameters"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// The time the script was uploaded.
	TimeUploaded string `pulumi:"timeUploaded"`
}

// GetScriptsScriptCollectionItemInput is an input type that accepts GetScriptsScriptCollectionItemArgs and GetScriptsScriptCollectionItemOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemInput` via:
//
//	GetScriptsScriptCollectionItemArgs{...}
type GetScriptsScriptCollectionItemInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemOutput() GetScriptsScriptCollectionItemOutput
	ToGetScriptsScriptCollectionItemOutputWithContext(context.Context) GetScriptsScriptCollectionItemOutput
}

type GetScriptsScriptCollectionItemArgs struct {
	// The APM domain ID the request is intended for.
	ApmDomainId pulumi.StringInput `pulumi:"apmDomainId"`
	// The content of the script. It may contain custom-defined tags that can be used for setting dynamic parameters. The format to set dynamic parameters is: `<ORAP><ON>param name</ON><OV>param value</OV><OS>isParamValueSecret(true/false)</OS></ORAP>`. Param value and isParamValueSecret are optional, the default value for isParamValueSecret is false. Examples: With mandatory param name : `<ORAP><ON>param name</ON></ORAP>` With parameter name and value : `<ORAP><ON>param name</ON><OV>param value</OV></ORAP>` Note that the content is valid if it matches the given content type. For example, if the content type is SIDE, then the content should be in Side script format. If the content type is JS, then the content should be in JavaScript format.
	Content pulumi.StringInput `pulumi:"content"`
	// File name of the uploaded script content.
	ContentFileName pulumi.StringInput `pulumi:"contentFileName"`
	// Size of the script content.
	ContentSizeInBytes pulumi.IntInput `pulumi:"contentSizeInBytes"`
	// A filter to return only resources that match the content type given.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only the resources that match the entire display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
	Id pulumi.StringInput `pulumi:"id"`
	// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
	MonitorStatusCountMaps GetScriptsScriptCollectionItemMonitorStatusCountMapArrayInput `pulumi:"monitorStatusCountMaps"`
	// List of script parameters. Example: `[{"scriptParameter": {"paramName": "userid", "paramValue":"testuser", "isSecret": false}, "isOverwritten": false}]`
	Parameters GetScriptsScriptCollectionItemParameterArrayInput `pulumi:"parameters"`
	// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// The time the script was uploaded.
	TimeUploaded pulumi.StringInput `pulumi:"timeUploaded"`
}

func (GetScriptsScriptCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItem)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemArgs) ToGetScriptsScriptCollectionItemOutput() GetScriptsScriptCollectionItemOutput {
	return i.ToGetScriptsScriptCollectionItemOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemArgs) ToGetScriptsScriptCollectionItemOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemOutput)
}

// GetScriptsScriptCollectionItemArrayInput is an input type that accepts GetScriptsScriptCollectionItemArray and GetScriptsScriptCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemArrayInput` via:
//
//	GetScriptsScriptCollectionItemArray{ GetScriptsScriptCollectionItemArgs{...} }
type GetScriptsScriptCollectionItemArrayInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemArrayOutput() GetScriptsScriptCollectionItemArrayOutput
	ToGetScriptsScriptCollectionItemArrayOutputWithContext(context.Context) GetScriptsScriptCollectionItemArrayOutput
}

type GetScriptsScriptCollectionItemArray []GetScriptsScriptCollectionItemInput

func (GetScriptsScriptCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItem)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemArray) ToGetScriptsScriptCollectionItemArrayOutput() GetScriptsScriptCollectionItemArrayOutput {
	return i.ToGetScriptsScriptCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemArray) ToGetScriptsScriptCollectionItemArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemArrayOutput)
}

type GetScriptsScriptCollectionItemOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItem)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemOutput) ToGetScriptsScriptCollectionItemOutput() GetScriptsScriptCollectionItemOutput {
	return o
}

func (o GetScriptsScriptCollectionItemOutput) ToGetScriptsScriptCollectionItemOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemOutput {
	return o
}

// The APM domain ID the request is intended for.
func (o GetScriptsScriptCollectionItemOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.ApmDomainId }).(pulumi.StringOutput)
}

// The content of the script. It may contain custom-defined tags that can be used for setting dynamic parameters. The format to set dynamic parameters is: `<ORAP><ON>param name</ON><OV>param value</OV><OS>isParamValueSecret(true/false)</OS></ORAP>`. Param value and isParamValueSecret are optional, the default value for isParamValueSecret is false. Examples: With mandatory param name : `<ORAP><ON>param name</ON></ORAP>` With parameter name and value : `<ORAP><ON>param name</ON><OV>param value</OV></ORAP>` Note that the content is valid if it matches the given content type. For example, if the content type is SIDE, then the content should be in Side script format. If the content type is JS, then the content should be in JavaScript format.
func (o GetScriptsScriptCollectionItemOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.Content }).(pulumi.StringOutput)
}

// File name of the uploaded script content.
func (o GetScriptsScriptCollectionItemOutput) ContentFileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.ContentFileName }).(pulumi.StringOutput)
}

// Size of the script content.
func (o GetScriptsScriptCollectionItemOutput) ContentSizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) int { return v.ContentSizeInBytes }).(pulumi.IntOutput)
}

// A filter to return only resources that match the content type given.
func (o GetScriptsScriptCollectionItemOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.ContentType }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetScriptsScriptCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only the resources that match the entire display name.
func (o GetScriptsScriptCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetScriptsScriptCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
func (o GetScriptsScriptCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Details of the monitor count per state. Example: `{ "total" : 5, "enabled" : 3 , "disabled" : 2, "invalid" : 0 }`
func (o GetScriptsScriptCollectionItemOutput) MonitorStatusCountMaps() GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) []GetScriptsScriptCollectionItemMonitorStatusCountMap {
		return v.MonitorStatusCountMaps
	}).(GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput)
}

// List of script parameters. Example: `[{"scriptParameter": {"paramName": "userid", "paramValue":"testuser", "isSecret": false}, "isOverwritten": false}]`
func (o GetScriptsScriptCollectionItemOutput) Parameters() GetScriptsScriptCollectionItemParameterArrayOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) []GetScriptsScriptCollectionItemParameter { return v.Parameters }).(GetScriptsScriptCollectionItemParameterArrayOutput)
}

// The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
func (o GetScriptsScriptCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
func (o GetScriptsScriptCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The time the script was uploaded.
func (o GetScriptsScriptCollectionItemOutput) TimeUploaded() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItem) string { return v.TimeUploaded }).(pulumi.StringOutput)
}

type GetScriptsScriptCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItem)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemArrayOutput) ToGetScriptsScriptCollectionItemArrayOutput() GetScriptsScriptCollectionItemArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemArrayOutput) ToGetScriptsScriptCollectionItemArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemArrayOutput) Index(i pulumi.IntInput) GetScriptsScriptCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptsScriptCollectionItem {
		return vs[0].([]GetScriptsScriptCollectionItem)[vs[1].(int)]
	}).(GetScriptsScriptCollectionItemOutput)
}

type GetScriptsScriptCollectionItemMonitorStatusCountMap struct {
	// Number of disabled monitors using the script.
	Disabled int `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled int `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid int `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total int `pulumi:"total"`
}

// GetScriptsScriptCollectionItemMonitorStatusCountMapInput is an input type that accepts GetScriptsScriptCollectionItemMonitorStatusCountMap and GetScriptsScriptCollectionItemMonitorStatusCountMapOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemMonitorStatusCountMapInput` via:
//
//	GetScriptsScriptCollectionItemMonitorStatusCountMap{ "key": GetScriptsScriptCollectionItemMonitorStatusCountArgs{...} }
type GetScriptsScriptCollectionItemMonitorStatusCountMapInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutput() GetScriptsScriptCollectionItemMonitorStatusCountMapOutput
	ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutputWithContext(context.Context) GetScriptsScriptCollectionItemMonitorStatusCountMapOutput
}

type GetScriptsScriptCollectionItemMonitorStatusCountMapArgs struct {
	// Number of disabled monitors using the script.
	Disabled pulumi.IntInput `pulumi:"disabled"`
	// Number of enabled monitors using the script.
	Enabled pulumi.IntInput `pulumi:"enabled"`
	// Number of invalid monitors using the script.
	Invalid pulumi.IntInput `pulumi:"invalid"`
	// Total number of monitors using the script.
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetScriptsScriptCollectionItemMonitorStatusCountMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemMonitorStatusCountMap)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemMonitorStatusCountMapArgs) ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutput() GetScriptsScriptCollectionItemMonitorStatusCountMapOutput {
	return i.ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemMonitorStatusCountMapArgs) ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemMonitorStatusCountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemMonitorStatusCountMapOutput)
}

// GetScriptsScriptCollectionItemMonitorStatusCountMapArrayInput is an input type that accepts GetScriptsScriptCollectionItemMonitorStatusCountMapArray and GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemMonitorStatusCountMapArrayInput` via:
//
//	GetScriptsScriptCollectionItemMonitorStatusCountMapArray{ GetScriptsScriptCollectionItemMonitorStatusCountMapArgs{...} }
type GetScriptsScriptCollectionItemMonitorStatusCountMapArrayInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput() GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput
	ToGetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutputWithContext(context.Context) GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput
}

type GetScriptsScriptCollectionItemMonitorStatusCountMapArray []GetScriptsScriptCollectionItemMonitorStatusCountMapInput

func (GetScriptsScriptCollectionItemMonitorStatusCountMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItemMonitorStatusCountMap)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemMonitorStatusCountMapArray) ToGetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput() GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput {
	return i.ToGetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemMonitorStatusCountMapArray) ToGetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput)
}

type GetScriptsScriptCollectionItemMonitorStatusCountMapOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemMonitorStatusCountMap)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutput() GetScriptsScriptCollectionItemMonitorStatusCountMapOutput {
	return o
}

func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) ToGetScriptsScriptCollectionItemMonitorStatusCountMapOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemMonitorStatusCountMapOutput {
	return o
}

// Number of disabled monitors using the script.
func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) Disabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemMonitorStatusCountMap) int { return v.Disabled }).(pulumi.IntOutput)
}

// Number of enabled monitors using the script.
func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) Enabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemMonitorStatusCountMap) int { return v.Enabled }).(pulumi.IntOutput)
}

// Number of invalid monitors using the script.
func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) Invalid() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemMonitorStatusCountMap) int { return v.Invalid }).(pulumi.IntOutput)
}

// Total number of monitors using the script.
func (o GetScriptsScriptCollectionItemMonitorStatusCountMapOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemMonitorStatusCountMap) int { return v.Total }).(pulumi.IntOutput)
}

type GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItemMonitorStatusCountMap)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput) ToGetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput() GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput) ToGetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput) Index(i pulumi.IntInput) GetScriptsScriptCollectionItemMonitorStatusCountMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptsScriptCollectionItemMonitorStatusCountMap {
		return vs[0].([]GetScriptsScriptCollectionItemMonitorStatusCountMap)[vs[1].(int)]
	}).(GetScriptsScriptCollectionItemMonitorStatusCountMapOutput)
}

type GetScriptsScriptCollectionItemParameter struct {
	// If parameter value is default or overwritten.
	IsOverwritten bool `pulumi:"isOverwritten"`
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret bool `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameters []GetScriptsScriptCollectionItemParameterScriptParameter `pulumi:"scriptParameters"`
}

// GetScriptsScriptCollectionItemParameterInput is an input type that accepts GetScriptsScriptCollectionItemParameterArgs and GetScriptsScriptCollectionItemParameterOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemParameterInput` via:
//
//	GetScriptsScriptCollectionItemParameterArgs{...}
type GetScriptsScriptCollectionItemParameterInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemParameterOutput() GetScriptsScriptCollectionItemParameterOutput
	ToGetScriptsScriptCollectionItemParameterOutputWithContext(context.Context) GetScriptsScriptCollectionItemParameterOutput
}

type GetScriptsScriptCollectionItemParameterArgs struct {
	// If parameter value is default or overwritten.
	IsOverwritten pulumi.BoolInput `pulumi:"isOverwritten"`
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
	// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
	ScriptParameters GetScriptsScriptCollectionItemParameterScriptParameterArrayInput `pulumi:"scriptParameters"`
}

func (GetScriptsScriptCollectionItemParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemParameter)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemParameterArgs) ToGetScriptsScriptCollectionItemParameterOutput() GetScriptsScriptCollectionItemParameterOutput {
	return i.ToGetScriptsScriptCollectionItemParameterOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemParameterArgs) ToGetScriptsScriptCollectionItemParameterOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemParameterOutput)
}

// GetScriptsScriptCollectionItemParameterArrayInput is an input type that accepts GetScriptsScriptCollectionItemParameterArray and GetScriptsScriptCollectionItemParameterArrayOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemParameterArrayInput` via:
//
//	GetScriptsScriptCollectionItemParameterArray{ GetScriptsScriptCollectionItemParameterArgs{...} }
type GetScriptsScriptCollectionItemParameterArrayInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemParameterArrayOutput() GetScriptsScriptCollectionItemParameterArrayOutput
	ToGetScriptsScriptCollectionItemParameterArrayOutputWithContext(context.Context) GetScriptsScriptCollectionItemParameterArrayOutput
}

type GetScriptsScriptCollectionItemParameterArray []GetScriptsScriptCollectionItemParameterInput

func (GetScriptsScriptCollectionItemParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItemParameter)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemParameterArray) ToGetScriptsScriptCollectionItemParameterArrayOutput() GetScriptsScriptCollectionItemParameterArrayOutput {
	return i.ToGetScriptsScriptCollectionItemParameterArrayOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemParameterArray) ToGetScriptsScriptCollectionItemParameterArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemParameterArrayOutput)
}

type GetScriptsScriptCollectionItemParameterOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemParameter)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemParameterOutput) ToGetScriptsScriptCollectionItemParameterOutput() GetScriptsScriptCollectionItemParameterOutput {
	return o
}

func (o GetScriptsScriptCollectionItemParameterOutput) ToGetScriptsScriptCollectionItemParameterOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterOutput {
	return o
}

// If parameter value is default or overwritten.
func (o GetScriptsScriptCollectionItemParameterOutput) IsOverwritten() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameter) bool { return v.IsOverwritten }).(pulumi.BoolOutput)
}

// If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o GetScriptsScriptCollectionItemParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Name of the parameter.
func (o GetScriptsScriptCollectionItemParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetScriptsScriptCollectionItemParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

// Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
func (o GetScriptsScriptCollectionItemParameterOutput) ScriptParameters() GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameter) []GetScriptsScriptCollectionItemParameterScriptParameter {
		return v.ScriptParameters
	}).(GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput)
}

type GetScriptsScriptCollectionItemParameterArrayOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItemParameter)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemParameterArrayOutput) ToGetScriptsScriptCollectionItemParameterArrayOutput() GetScriptsScriptCollectionItemParameterArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemParameterArrayOutput) ToGetScriptsScriptCollectionItemParameterArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemParameterArrayOutput) Index(i pulumi.IntInput) GetScriptsScriptCollectionItemParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptsScriptCollectionItemParameter {
		return vs[0].([]GetScriptsScriptCollectionItemParameter)[vs[1].(int)]
	}).(GetScriptsScriptCollectionItemParameterOutput)
}

type GetScriptsScriptCollectionItemParameterScriptParameter struct {
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret bool `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName string `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue string `pulumi:"paramValue"`
}

// GetScriptsScriptCollectionItemParameterScriptParameterInput is an input type that accepts GetScriptsScriptCollectionItemParameterScriptParameterArgs and GetScriptsScriptCollectionItemParameterScriptParameterOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemParameterScriptParameterInput` via:
//
//	GetScriptsScriptCollectionItemParameterScriptParameterArgs{...}
type GetScriptsScriptCollectionItemParameterScriptParameterInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemParameterScriptParameterOutput() GetScriptsScriptCollectionItemParameterScriptParameterOutput
	ToGetScriptsScriptCollectionItemParameterScriptParameterOutputWithContext(context.Context) GetScriptsScriptCollectionItemParameterScriptParameterOutput
}

type GetScriptsScriptCollectionItemParameterScriptParameterArgs struct {
	// If the parameter value is secret and should be kept confidential, then set isSecret to true.
	IsSecret pulumi.BoolInput `pulumi:"isSecret"`
	// Name of the parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// Value of the parameter.
	ParamValue pulumi.StringInput `pulumi:"paramValue"`
}

func (GetScriptsScriptCollectionItemParameterScriptParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemParameterScriptParameter)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemParameterScriptParameterArgs) ToGetScriptsScriptCollectionItemParameterScriptParameterOutput() GetScriptsScriptCollectionItemParameterScriptParameterOutput {
	return i.ToGetScriptsScriptCollectionItemParameterScriptParameterOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemParameterScriptParameterArgs) ToGetScriptsScriptCollectionItemParameterScriptParameterOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterScriptParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemParameterScriptParameterOutput)
}

// GetScriptsScriptCollectionItemParameterScriptParameterArrayInput is an input type that accepts GetScriptsScriptCollectionItemParameterScriptParameterArray and GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput values.
// You can construct a concrete instance of `GetScriptsScriptCollectionItemParameterScriptParameterArrayInput` via:
//
//	GetScriptsScriptCollectionItemParameterScriptParameterArray{ GetScriptsScriptCollectionItemParameterScriptParameterArgs{...} }
type GetScriptsScriptCollectionItemParameterScriptParameterArrayInput interface {
	pulumi.Input

	ToGetScriptsScriptCollectionItemParameterScriptParameterArrayOutput() GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput
	ToGetScriptsScriptCollectionItemParameterScriptParameterArrayOutputWithContext(context.Context) GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput
}

type GetScriptsScriptCollectionItemParameterScriptParameterArray []GetScriptsScriptCollectionItemParameterScriptParameterInput

func (GetScriptsScriptCollectionItemParameterScriptParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItemParameterScriptParameter)(nil)).Elem()
}

func (i GetScriptsScriptCollectionItemParameterScriptParameterArray) ToGetScriptsScriptCollectionItemParameterScriptParameterArrayOutput() GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput {
	return i.ToGetScriptsScriptCollectionItemParameterScriptParameterArrayOutputWithContext(context.Background())
}

func (i GetScriptsScriptCollectionItemParameterScriptParameterArray) ToGetScriptsScriptCollectionItemParameterScriptParameterArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput)
}

type GetScriptsScriptCollectionItemParameterScriptParameterOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemParameterScriptParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptsScriptCollectionItemParameterScriptParameter)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemParameterScriptParameterOutput) ToGetScriptsScriptCollectionItemParameterScriptParameterOutput() GetScriptsScriptCollectionItemParameterScriptParameterOutput {
	return o
}

func (o GetScriptsScriptCollectionItemParameterScriptParameterOutput) ToGetScriptsScriptCollectionItemParameterScriptParameterOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterScriptParameterOutput {
	return o
}

// If the parameter value is secret and should be kept confidential, then set isSecret to true.
func (o GetScriptsScriptCollectionItemParameterScriptParameterOutput) GetIsSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameterScriptParameter) bool { return v.IsSecret }).(pulumi.BoolOutput)
}

// Name of the parameter.
func (o GetScriptsScriptCollectionItemParameterScriptParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameterScriptParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// Value of the parameter.
func (o GetScriptsScriptCollectionItemParameterScriptParameterOutput) ParamValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptsScriptCollectionItemParameterScriptParameter) string { return v.ParamValue }).(pulumi.StringOutput)
}

type GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput struct{ *pulumi.OutputState }

func (GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptsScriptCollectionItemParameterScriptParameter)(nil)).Elem()
}

func (o GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput) ToGetScriptsScriptCollectionItemParameterScriptParameterArrayOutput() GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput) ToGetScriptsScriptCollectionItemParameterScriptParameterArrayOutputWithContext(ctx context.Context) GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput {
	return o
}

func (o GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput) Index(i pulumi.IntInput) GetScriptsScriptCollectionItemParameterScriptParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptsScriptCollectionItemParameterScriptParameter {
		return vs[0].([]GetScriptsScriptCollectionItemParameterScriptParameter)[vs[1].(int)]
	}).(GetScriptsScriptCollectionItemParameterScriptParameterOutput)
}

type GetVantagePointItem struct {
	// A filter to return only the resources that match the entire display name.
	DisplayName string `pulumi:"displayName"`
	// Geographic summary of a vantage point.
	Geos []GetVantagePointItemGeo `pulumi:"geos"`
	// A filter to return only the resources that match the entire name.
	Name string `pulumi:"name"`
}

// GetVantagePointItemInput is an input type that accepts GetVantagePointItemArgs and GetVantagePointItemOutput values.
// You can construct a concrete instance of `GetVantagePointItemInput` via:
//
//	GetVantagePointItemArgs{...}
type GetVantagePointItemInput interface {
	pulumi.Input

	ToGetVantagePointItemOutput() GetVantagePointItemOutput
	ToGetVantagePointItemOutputWithContext(context.Context) GetVantagePointItemOutput
}

type GetVantagePointItemArgs struct {
	// A filter to return only the resources that match the entire display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Geographic summary of a vantage point.
	Geos GetVantagePointItemGeoArrayInput `pulumi:"geos"`
	// A filter to return only the resources that match the entire name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVantagePointItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointItem)(nil)).Elem()
}

func (i GetVantagePointItemArgs) ToGetVantagePointItemOutput() GetVantagePointItemOutput {
	return i.ToGetVantagePointItemOutputWithContext(context.Background())
}

func (i GetVantagePointItemArgs) ToGetVantagePointItemOutputWithContext(ctx context.Context) GetVantagePointItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointItemOutput)
}

// GetVantagePointItemArrayInput is an input type that accepts GetVantagePointItemArray and GetVantagePointItemArrayOutput values.
// You can construct a concrete instance of `GetVantagePointItemArrayInput` via:
//
//	GetVantagePointItemArray{ GetVantagePointItemArgs{...} }
type GetVantagePointItemArrayInput interface {
	pulumi.Input

	ToGetVantagePointItemArrayOutput() GetVantagePointItemArrayOutput
	ToGetVantagePointItemArrayOutputWithContext(context.Context) GetVantagePointItemArrayOutput
}

type GetVantagePointItemArray []GetVantagePointItemInput

func (GetVantagePointItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointItem)(nil)).Elem()
}

func (i GetVantagePointItemArray) ToGetVantagePointItemArrayOutput() GetVantagePointItemArrayOutput {
	return i.ToGetVantagePointItemArrayOutputWithContext(context.Background())
}

func (i GetVantagePointItemArray) ToGetVantagePointItemArrayOutputWithContext(ctx context.Context) GetVantagePointItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointItemArrayOutput)
}

type GetVantagePointItemOutput struct{ *pulumi.OutputState }

func (GetVantagePointItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointItem)(nil)).Elem()
}

func (o GetVantagePointItemOutput) ToGetVantagePointItemOutput() GetVantagePointItemOutput {
	return o
}

func (o GetVantagePointItemOutput) ToGetVantagePointItemOutputWithContext(ctx context.Context) GetVantagePointItemOutput {
	return o
}

// A filter to return only the resources that match the entire display name.
func (o GetVantagePointItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Geographic summary of a vantage point.
func (o GetVantagePointItemOutput) Geos() GetVantagePointItemGeoArrayOutput {
	return o.ApplyT(func(v GetVantagePointItem) []GetVantagePointItemGeo { return v.Geos }).(GetVantagePointItemGeoArrayOutput)
}

// A filter to return only the resources that match the entire name.
func (o GetVantagePointItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointItem) string { return v.Name }).(pulumi.StringOutput)
}

type GetVantagePointItemArrayOutput struct{ *pulumi.OutputState }

func (GetVantagePointItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointItem)(nil)).Elem()
}

func (o GetVantagePointItemArrayOutput) ToGetVantagePointItemArrayOutput() GetVantagePointItemArrayOutput {
	return o
}

func (o GetVantagePointItemArrayOutput) ToGetVantagePointItemArrayOutputWithContext(ctx context.Context) GetVantagePointItemArrayOutput {
	return o
}

func (o GetVantagePointItemArrayOutput) Index(i pulumi.IntInput) GetVantagePointItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVantagePointItem {
		return vs[0].([]GetVantagePointItem)[vs[1].(int)]
	}).(GetVantagePointItemOutput)
}

type GetVantagePointItemGeo struct {
	// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
	AdminDivCode string `pulumi:"adminDivCode"`
	// Common English-language name for the city.
	CityName string `pulumi:"cityName"`
	// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
	CountryCode string `pulumi:"countryCode"`
	// The common English-language name for the country.
	CountryName string `pulumi:"countryName"`
	// Degrees north of the Equator.
	Latitude float64 `pulumi:"latitude"`
	// Degrees east of the prime meridian.
	Longitude float64 `pulumi:"longitude"`
}

// GetVantagePointItemGeoInput is an input type that accepts GetVantagePointItemGeoArgs and GetVantagePointItemGeoOutput values.
// You can construct a concrete instance of `GetVantagePointItemGeoInput` via:
//
//	GetVantagePointItemGeoArgs{...}
type GetVantagePointItemGeoInput interface {
	pulumi.Input

	ToGetVantagePointItemGeoOutput() GetVantagePointItemGeoOutput
	ToGetVantagePointItemGeoOutputWithContext(context.Context) GetVantagePointItemGeoOutput
}

type GetVantagePointItemGeoArgs struct {
	// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
	AdminDivCode pulumi.StringInput `pulumi:"adminDivCode"`
	// Common English-language name for the city.
	CityName pulumi.StringInput `pulumi:"cityName"`
	// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The common English-language name for the country.
	CountryName pulumi.StringInput `pulumi:"countryName"`
	// Degrees north of the Equator.
	Latitude pulumi.Float64Input `pulumi:"latitude"`
	// Degrees east of the prime meridian.
	Longitude pulumi.Float64Input `pulumi:"longitude"`
}

func (GetVantagePointItemGeoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointItemGeo)(nil)).Elem()
}

func (i GetVantagePointItemGeoArgs) ToGetVantagePointItemGeoOutput() GetVantagePointItemGeoOutput {
	return i.ToGetVantagePointItemGeoOutputWithContext(context.Background())
}

func (i GetVantagePointItemGeoArgs) ToGetVantagePointItemGeoOutputWithContext(ctx context.Context) GetVantagePointItemGeoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointItemGeoOutput)
}

// GetVantagePointItemGeoArrayInput is an input type that accepts GetVantagePointItemGeoArray and GetVantagePointItemGeoArrayOutput values.
// You can construct a concrete instance of `GetVantagePointItemGeoArrayInput` via:
//
//	GetVantagePointItemGeoArray{ GetVantagePointItemGeoArgs{...} }
type GetVantagePointItemGeoArrayInput interface {
	pulumi.Input

	ToGetVantagePointItemGeoArrayOutput() GetVantagePointItemGeoArrayOutput
	ToGetVantagePointItemGeoArrayOutputWithContext(context.Context) GetVantagePointItemGeoArrayOutput
}

type GetVantagePointItemGeoArray []GetVantagePointItemGeoInput

func (GetVantagePointItemGeoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointItemGeo)(nil)).Elem()
}

func (i GetVantagePointItemGeoArray) ToGetVantagePointItemGeoArrayOutput() GetVantagePointItemGeoArrayOutput {
	return i.ToGetVantagePointItemGeoArrayOutputWithContext(context.Background())
}

func (i GetVantagePointItemGeoArray) ToGetVantagePointItemGeoArrayOutputWithContext(ctx context.Context) GetVantagePointItemGeoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointItemGeoArrayOutput)
}

type GetVantagePointItemGeoOutput struct{ *pulumi.OutputState }

func (GetVantagePointItemGeoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointItemGeo)(nil)).Elem()
}

func (o GetVantagePointItemGeoOutput) ToGetVantagePointItemGeoOutput() GetVantagePointItemGeoOutput {
	return o
}

func (o GetVantagePointItemGeoOutput) ToGetVantagePointItemGeoOutputWithContext(ctx context.Context) GetVantagePointItemGeoOutput {
	return o
}

// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
func (o GetVantagePointItemGeoOutput) AdminDivCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointItemGeo) string { return v.AdminDivCode }).(pulumi.StringOutput)
}

// Common English-language name for the city.
func (o GetVantagePointItemGeoOutput) CityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointItemGeo) string { return v.CityName }).(pulumi.StringOutput)
}

// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
func (o GetVantagePointItemGeoOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointItemGeo) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The common English-language name for the country.
func (o GetVantagePointItemGeoOutput) CountryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointItemGeo) string { return v.CountryName }).(pulumi.StringOutput)
}

// Degrees north of the Equator.
func (o GetVantagePointItemGeoOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetVantagePointItemGeo) float64 { return v.Latitude }).(pulumi.Float64Output)
}

// Degrees east of the prime meridian.
func (o GetVantagePointItemGeoOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetVantagePointItemGeo) float64 { return v.Longitude }).(pulumi.Float64Output)
}

type GetVantagePointItemGeoArrayOutput struct{ *pulumi.OutputState }

func (GetVantagePointItemGeoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointItemGeo)(nil)).Elem()
}

func (o GetVantagePointItemGeoArrayOutput) ToGetVantagePointItemGeoArrayOutput() GetVantagePointItemGeoArrayOutput {
	return o
}

func (o GetVantagePointItemGeoArrayOutput) ToGetVantagePointItemGeoArrayOutputWithContext(ctx context.Context) GetVantagePointItemGeoArrayOutput {
	return o
}

func (o GetVantagePointItemGeoArrayOutput) Index(i pulumi.IntInput) GetVantagePointItemGeoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVantagePointItemGeo {
		return vs[0].([]GetVantagePointItemGeo)[vs[1].(int)]
	}).(GetVantagePointItemGeoOutput)
}

type GetVantagePointsFilter struct {
	// A filter to return only the resources that match the entire name.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetVantagePointsFilterInput is an input type that accepts GetVantagePointsFilterArgs and GetVantagePointsFilterOutput values.
// You can construct a concrete instance of `GetVantagePointsFilterInput` via:
//
//	GetVantagePointsFilterArgs{...}
type GetVantagePointsFilterInput interface {
	pulumi.Input

	ToGetVantagePointsFilterOutput() GetVantagePointsFilterOutput
	ToGetVantagePointsFilterOutputWithContext(context.Context) GetVantagePointsFilterOutput
}

type GetVantagePointsFilterArgs struct {
	// A filter to return only the resources that match the entire name.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVantagePointsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsFilter)(nil)).Elem()
}

func (i GetVantagePointsFilterArgs) ToGetVantagePointsFilterOutput() GetVantagePointsFilterOutput {
	return i.ToGetVantagePointsFilterOutputWithContext(context.Background())
}

func (i GetVantagePointsFilterArgs) ToGetVantagePointsFilterOutputWithContext(ctx context.Context) GetVantagePointsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsFilterOutput)
}

// GetVantagePointsFilterArrayInput is an input type that accepts GetVantagePointsFilterArray and GetVantagePointsFilterArrayOutput values.
// You can construct a concrete instance of `GetVantagePointsFilterArrayInput` via:
//
//	GetVantagePointsFilterArray{ GetVantagePointsFilterArgs{...} }
type GetVantagePointsFilterArrayInput interface {
	pulumi.Input

	ToGetVantagePointsFilterArrayOutput() GetVantagePointsFilterArrayOutput
	ToGetVantagePointsFilterArrayOutputWithContext(context.Context) GetVantagePointsFilterArrayOutput
}

type GetVantagePointsFilterArray []GetVantagePointsFilterInput

func (GetVantagePointsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsFilter)(nil)).Elem()
}

func (i GetVantagePointsFilterArray) ToGetVantagePointsFilterArrayOutput() GetVantagePointsFilterArrayOutput {
	return i.ToGetVantagePointsFilterArrayOutputWithContext(context.Background())
}

func (i GetVantagePointsFilterArray) ToGetVantagePointsFilterArrayOutputWithContext(ctx context.Context) GetVantagePointsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsFilterArrayOutput)
}

type GetVantagePointsFilterOutput struct{ *pulumi.OutputState }

func (GetVantagePointsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsFilter)(nil)).Elem()
}

func (o GetVantagePointsFilterOutput) ToGetVantagePointsFilterOutput() GetVantagePointsFilterOutput {
	return o
}

func (o GetVantagePointsFilterOutput) ToGetVantagePointsFilterOutputWithContext(ctx context.Context) GetVantagePointsFilterOutput {
	return o
}

// A filter to return only the resources that match the entire name.
func (o GetVantagePointsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVantagePointsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVantagePointsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetVantagePointsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVantagePointsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVantagePointsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVantagePointsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsFilter)(nil)).Elem()
}

func (o GetVantagePointsFilterArrayOutput) ToGetVantagePointsFilterArrayOutput() GetVantagePointsFilterArrayOutput {
	return o
}

func (o GetVantagePointsFilterArrayOutput) ToGetVantagePointsFilterArrayOutputWithContext(ctx context.Context) GetVantagePointsFilterArrayOutput {
	return o
}

func (o GetVantagePointsFilterArrayOutput) Index(i pulumi.IntInput) GetVantagePointsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVantagePointsFilter {
		return vs[0].([]GetVantagePointsFilter)[vs[1].(int)]
	}).(GetVantagePointsFilterOutput)
}

type GetVantagePointsPublicVantagePointCollection struct {
	// List of PublicVantagePointSummary items.
	Items []GetVantagePointsPublicVantagePointCollectionItem `pulumi:"items"`
}

// GetVantagePointsPublicVantagePointCollectionInput is an input type that accepts GetVantagePointsPublicVantagePointCollectionArgs and GetVantagePointsPublicVantagePointCollectionOutput values.
// You can construct a concrete instance of `GetVantagePointsPublicVantagePointCollectionInput` via:
//
//	GetVantagePointsPublicVantagePointCollectionArgs{...}
type GetVantagePointsPublicVantagePointCollectionInput interface {
	pulumi.Input

	ToGetVantagePointsPublicVantagePointCollectionOutput() GetVantagePointsPublicVantagePointCollectionOutput
	ToGetVantagePointsPublicVantagePointCollectionOutputWithContext(context.Context) GetVantagePointsPublicVantagePointCollectionOutput
}

type GetVantagePointsPublicVantagePointCollectionArgs struct {
	// List of PublicVantagePointSummary items.
	Items GetVantagePointsPublicVantagePointCollectionItemArrayInput `pulumi:"items"`
}

func (GetVantagePointsPublicVantagePointCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsPublicVantagePointCollection)(nil)).Elem()
}

func (i GetVantagePointsPublicVantagePointCollectionArgs) ToGetVantagePointsPublicVantagePointCollectionOutput() GetVantagePointsPublicVantagePointCollectionOutput {
	return i.ToGetVantagePointsPublicVantagePointCollectionOutputWithContext(context.Background())
}

func (i GetVantagePointsPublicVantagePointCollectionArgs) ToGetVantagePointsPublicVantagePointCollectionOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsPublicVantagePointCollectionOutput)
}

// GetVantagePointsPublicVantagePointCollectionArrayInput is an input type that accepts GetVantagePointsPublicVantagePointCollectionArray and GetVantagePointsPublicVantagePointCollectionArrayOutput values.
// You can construct a concrete instance of `GetVantagePointsPublicVantagePointCollectionArrayInput` via:
//
//	GetVantagePointsPublicVantagePointCollectionArray{ GetVantagePointsPublicVantagePointCollectionArgs{...} }
type GetVantagePointsPublicVantagePointCollectionArrayInput interface {
	pulumi.Input

	ToGetVantagePointsPublicVantagePointCollectionArrayOutput() GetVantagePointsPublicVantagePointCollectionArrayOutput
	ToGetVantagePointsPublicVantagePointCollectionArrayOutputWithContext(context.Context) GetVantagePointsPublicVantagePointCollectionArrayOutput
}

type GetVantagePointsPublicVantagePointCollectionArray []GetVantagePointsPublicVantagePointCollectionInput

func (GetVantagePointsPublicVantagePointCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsPublicVantagePointCollection)(nil)).Elem()
}

func (i GetVantagePointsPublicVantagePointCollectionArray) ToGetVantagePointsPublicVantagePointCollectionArrayOutput() GetVantagePointsPublicVantagePointCollectionArrayOutput {
	return i.ToGetVantagePointsPublicVantagePointCollectionArrayOutputWithContext(context.Background())
}

func (i GetVantagePointsPublicVantagePointCollectionArray) ToGetVantagePointsPublicVantagePointCollectionArrayOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsPublicVantagePointCollectionArrayOutput)
}

type GetVantagePointsPublicVantagePointCollectionOutput struct{ *pulumi.OutputState }

func (GetVantagePointsPublicVantagePointCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsPublicVantagePointCollection)(nil)).Elem()
}

func (o GetVantagePointsPublicVantagePointCollectionOutput) ToGetVantagePointsPublicVantagePointCollectionOutput() GetVantagePointsPublicVantagePointCollectionOutput {
	return o
}

func (o GetVantagePointsPublicVantagePointCollectionOutput) ToGetVantagePointsPublicVantagePointCollectionOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionOutput {
	return o
}

// List of PublicVantagePointSummary items.
func (o GetVantagePointsPublicVantagePointCollectionOutput) Items() GetVantagePointsPublicVantagePointCollectionItemArrayOutput {
	return o.ApplyT(func(v GetVantagePointsPublicVantagePointCollection) []GetVantagePointsPublicVantagePointCollectionItem {
		return v.Items
	}).(GetVantagePointsPublicVantagePointCollectionItemArrayOutput)
}

type GetVantagePointsPublicVantagePointCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetVantagePointsPublicVantagePointCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsPublicVantagePointCollection)(nil)).Elem()
}

func (o GetVantagePointsPublicVantagePointCollectionArrayOutput) ToGetVantagePointsPublicVantagePointCollectionArrayOutput() GetVantagePointsPublicVantagePointCollectionArrayOutput {
	return o
}

func (o GetVantagePointsPublicVantagePointCollectionArrayOutput) ToGetVantagePointsPublicVantagePointCollectionArrayOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionArrayOutput {
	return o
}

func (o GetVantagePointsPublicVantagePointCollectionArrayOutput) Index(i pulumi.IntInput) GetVantagePointsPublicVantagePointCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVantagePointsPublicVantagePointCollection {
		return vs[0].([]GetVantagePointsPublicVantagePointCollection)[vs[1].(int)]
	}).(GetVantagePointsPublicVantagePointCollectionOutput)
}

type GetVantagePointsPublicVantagePointCollectionItem struct {
	// A filter to return only the resources that match the entire display name.
	DisplayName string `pulumi:"displayName"`
	// Geographic summary of a vantage point.
	Geos []GetVantagePointsPublicVantagePointCollectionItemGeo `pulumi:"geos"`
	// A filter to return only the resources that match the entire name.
	Name string `pulumi:"name"`
}

// GetVantagePointsPublicVantagePointCollectionItemInput is an input type that accepts GetVantagePointsPublicVantagePointCollectionItemArgs and GetVantagePointsPublicVantagePointCollectionItemOutput values.
// You can construct a concrete instance of `GetVantagePointsPublicVantagePointCollectionItemInput` via:
//
//	GetVantagePointsPublicVantagePointCollectionItemArgs{...}
type GetVantagePointsPublicVantagePointCollectionItemInput interface {
	pulumi.Input

	ToGetVantagePointsPublicVantagePointCollectionItemOutput() GetVantagePointsPublicVantagePointCollectionItemOutput
	ToGetVantagePointsPublicVantagePointCollectionItemOutputWithContext(context.Context) GetVantagePointsPublicVantagePointCollectionItemOutput
}

type GetVantagePointsPublicVantagePointCollectionItemArgs struct {
	// A filter to return only the resources that match the entire display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Geographic summary of a vantage point.
	Geos GetVantagePointsPublicVantagePointCollectionItemGeoArrayInput `pulumi:"geos"`
	// A filter to return only the resources that match the entire name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVantagePointsPublicVantagePointCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsPublicVantagePointCollectionItem)(nil)).Elem()
}

func (i GetVantagePointsPublicVantagePointCollectionItemArgs) ToGetVantagePointsPublicVantagePointCollectionItemOutput() GetVantagePointsPublicVantagePointCollectionItemOutput {
	return i.ToGetVantagePointsPublicVantagePointCollectionItemOutputWithContext(context.Background())
}

func (i GetVantagePointsPublicVantagePointCollectionItemArgs) ToGetVantagePointsPublicVantagePointCollectionItemOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsPublicVantagePointCollectionItemOutput)
}

// GetVantagePointsPublicVantagePointCollectionItemArrayInput is an input type that accepts GetVantagePointsPublicVantagePointCollectionItemArray and GetVantagePointsPublicVantagePointCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetVantagePointsPublicVantagePointCollectionItemArrayInput` via:
//
//	GetVantagePointsPublicVantagePointCollectionItemArray{ GetVantagePointsPublicVantagePointCollectionItemArgs{...} }
type GetVantagePointsPublicVantagePointCollectionItemArrayInput interface {
	pulumi.Input

	ToGetVantagePointsPublicVantagePointCollectionItemArrayOutput() GetVantagePointsPublicVantagePointCollectionItemArrayOutput
	ToGetVantagePointsPublicVantagePointCollectionItemArrayOutputWithContext(context.Context) GetVantagePointsPublicVantagePointCollectionItemArrayOutput
}

type GetVantagePointsPublicVantagePointCollectionItemArray []GetVantagePointsPublicVantagePointCollectionItemInput

func (GetVantagePointsPublicVantagePointCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsPublicVantagePointCollectionItem)(nil)).Elem()
}

func (i GetVantagePointsPublicVantagePointCollectionItemArray) ToGetVantagePointsPublicVantagePointCollectionItemArrayOutput() GetVantagePointsPublicVantagePointCollectionItemArrayOutput {
	return i.ToGetVantagePointsPublicVantagePointCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetVantagePointsPublicVantagePointCollectionItemArray) ToGetVantagePointsPublicVantagePointCollectionItemArrayOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsPublicVantagePointCollectionItemArrayOutput)
}

type GetVantagePointsPublicVantagePointCollectionItemOutput struct{ *pulumi.OutputState }

func (GetVantagePointsPublicVantagePointCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsPublicVantagePointCollectionItem)(nil)).Elem()
}

func (o GetVantagePointsPublicVantagePointCollectionItemOutput) ToGetVantagePointsPublicVantagePointCollectionItemOutput() GetVantagePointsPublicVantagePointCollectionItemOutput {
	return o
}

func (o GetVantagePointsPublicVantagePointCollectionItemOutput) ToGetVantagePointsPublicVantagePointCollectionItemOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionItemOutput {
	return o
}

// A filter to return only the resources that match the entire display name.
func (o GetVantagePointsPublicVantagePointCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsPublicVantagePointCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Geographic summary of a vantage point.
func (o GetVantagePointsPublicVantagePointCollectionItemOutput) Geos() GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput {
	return o.ApplyT(func(v GetVantagePointsPublicVantagePointCollectionItem) []GetVantagePointsPublicVantagePointCollectionItemGeo {
		return v.Geos
	}).(GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput)
}

// A filter to return only the resources that match the entire name.
func (o GetVantagePointsPublicVantagePointCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsPublicVantagePointCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

type GetVantagePointsPublicVantagePointCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetVantagePointsPublicVantagePointCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsPublicVantagePointCollectionItem)(nil)).Elem()
}

func (o GetVantagePointsPublicVantagePointCollectionItemArrayOutput) ToGetVantagePointsPublicVantagePointCollectionItemArrayOutput() GetVantagePointsPublicVantagePointCollectionItemArrayOutput {
	return o
}

func (o GetVantagePointsPublicVantagePointCollectionItemArrayOutput) ToGetVantagePointsPublicVantagePointCollectionItemArrayOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionItemArrayOutput {
	return o
}

func (o GetVantagePointsPublicVantagePointCollectionItemArrayOutput) Index(i pulumi.IntInput) GetVantagePointsPublicVantagePointCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVantagePointsPublicVantagePointCollectionItem {
		return vs[0].([]GetVantagePointsPublicVantagePointCollectionItem)[vs[1].(int)]
	}).(GetVantagePointsPublicVantagePointCollectionItemOutput)
}

type GetVantagePointsPublicVantagePointCollectionItemGeo struct {
	// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
	AdminDivCode string `pulumi:"adminDivCode"`
	// Common English-language name for the city.
	CityName string `pulumi:"cityName"`
	// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
	CountryCode string `pulumi:"countryCode"`
	// The common English-language name for the country.
	CountryName string `pulumi:"countryName"`
	// Degrees north of the Equator.
	Latitude float64 `pulumi:"latitude"`
	// Degrees east of the prime meridian.
	Longitude float64 `pulumi:"longitude"`
}

// GetVantagePointsPublicVantagePointCollectionItemGeoInput is an input type that accepts GetVantagePointsPublicVantagePointCollectionItemGeoArgs and GetVantagePointsPublicVantagePointCollectionItemGeoOutput values.
// You can construct a concrete instance of `GetVantagePointsPublicVantagePointCollectionItemGeoInput` via:
//
//	GetVantagePointsPublicVantagePointCollectionItemGeoArgs{...}
type GetVantagePointsPublicVantagePointCollectionItemGeoInput interface {
	pulumi.Input

	ToGetVantagePointsPublicVantagePointCollectionItemGeoOutput() GetVantagePointsPublicVantagePointCollectionItemGeoOutput
	ToGetVantagePointsPublicVantagePointCollectionItemGeoOutputWithContext(context.Context) GetVantagePointsPublicVantagePointCollectionItemGeoOutput
}

type GetVantagePointsPublicVantagePointCollectionItemGeoArgs struct {
	// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
	AdminDivCode pulumi.StringInput `pulumi:"adminDivCode"`
	// Common English-language name for the city.
	CityName pulumi.StringInput `pulumi:"cityName"`
	// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The common English-language name for the country.
	CountryName pulumi.StringInput `pulumi:"countryName"`
	// Degrees north of the Equator.
	Latitude pulumi.Float64Input `pulumi:"latitude"`
	// Degrees east of the prime meridian.
	Longitude pulumi.Float64Input `pulumi:"longitude"`
}

func (GetVantagePointsPublicVantagePointCollectionItemGeoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsPublicVantagePointCollectionItemGeo)(nil)).Elem()
}

func (i GetVantagePointsPublicVantagePointCollectionItemGeoArgs) ToGetVantagePointsPublicVantagePointCollectionItemGeoOutput() GetVantagePointsPublicVantagePointCollectionItemGeoOutput {
	return i.ToGetVantagePointsPublicVantagePointCollectionItemGeoOutputWithContext(context.Background())
}

func (i GetVantagePointsPublicVantagePointCollectionItemGeoArgs) ToGetVantagePointsPublicVantagePointCollectionItemGeoOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionItemGeoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsPublicVantagePointCollectionItemGeoOutput)
}

// GetVantagePointsPublicVantagePointCollectionItemGeoArrayInput is an input type that accepts GetVantagePointsPublicVantagePointCollectionItemGeoArray and GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput values.
// You can construct a concrete instance of `GetVantagePointsPublicVantagePointCollectionItemGeoArrayInput` via:
//
//	GetVantagePointsPublicVantagePointCollectionItemGeoArray{ GetVantagePointsPublicVantagePointCollectionItemGeoArgs{...} }
type GetVantagePointsPublicVantagePointCollectionItemGeoArrayInput interface {
	pulumi.Input

	ToGetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput() GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput
	ToGetVantagePointsPublicVantagePointCollectionItemGeoArrayOutputWithContext(context.Context) GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput
}

type GetVantagePointsPublicVantagePointCollectionItemGeoArray []GetVantagePointsPublicVantagePointCollectionItemGeoInput

func (GetVantagePointsPublicVantagePointCollectionItemGeoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsPublicVantagePointCollectionItemGeo)(nil)).Elem()
}

func (i GetVantagePointsPublicVantagePointCollectionItemGeoArray) ToGetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput() GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput {
	return i.ToGetVantagePointsPublicVantagePointCollectionItemGeoArrayOutputWithContext(context.Background())
}

func (i GetVantagePointsPublicVantagePointCollectionItemGeoArray) ToGetVantagePointsPublicVantagePointCollectionItemGeoArrayOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput)
}

type GetVantagePointsPublicVantagePointCollectionItemGeoOutput struct{ *pulumi.OutputState }

func (GetVantagePointsPublicVantagePointCollectionItemGeoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVantagePointsPublicVantagePointCollectionItemGeo)(nil)).Elem()
}

func (o GetVantagePointsPublicVantagePointCollectionItemGeoOutput) ToGetVantagePointsPublicVantagePointCollectionItemGeoOutput() GetVantagePointsPublicVantagePointCollectionItemGeoOutput {
	return o
}

func (o GetVantagePointsPublicVantagePointCollectionItemGeoOutput) ToGetVantagePointsPublicVantagePointCollectionItemGeoOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionItemGeoOutput {
	return o
}

// The ISO 3166-2 code for this location's first-level administrative division, either a US state or Canadian province. Only included for locations in the US or Canada. For a list of codes, see Country Codes.
func (o GetVantagePointsPublicVantagePointCollectionItemGeoOutput) AdminDivCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsPublicVantagePointCollectionItemGeo) string { return v.AdminDivCode }).(pulumi.StringOutput)
}

// Common English-language name for the city.
func (o GetVantagePointsPublicVantagePointCollectionItemGeoOutput) CityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsPublicVantagePointCollectionItemGeo) string { return v.CityName }).(pulumi.StringOutput)
}

// The ISO 3166-1 alpha-2 country code. For a list of codes, see Country Codes.
func (o GetVantagePointsPublicVantagePointCollectionItemGeoOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsPublicVantagePointCollectionItemGeo) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The common English-language name for the country.
func (o GetVantagePointsPublicVantagePointCollectionItemGeoOutput) CountryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVantagePointsPublicVantagePointCollectionItemGeo) string { return v.CountryName }).(pulumi.StringOutput)
}

// Degrees north of the Equator.
func (o GetVantagePointsPublicVantagePointCollectionItemGeoOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetVantagePointsPublicVantagePointCollectionItemGeo) float64 { return v.Latitude }).(pulumi.Float64Output)
}

// Degrees east of the prime meridian.
func (o GetVantagePointsPublicVantagePointCollectionItemGeoOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetVantagePointsPublicVantagePointCollectionItemGeo) float64 { return v.Longitude }).(pulumi.Float64Output)
}

type GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput struct{ *pulumi.OutputState }

func (GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVantagePointsPublicVantagePointCollectionItemGeo)(nil)).Elem()
}

func (o GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput) ToGetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput() GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput {
	return o
}

func (o GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput) ToGetVantagePointsPublicVantagePointCollectionItemGeoArrayOutputWithContext(ctx context.Context) GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput {
	return o
}

func (o GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput) Index(i pulumi.IntInput) GetVantagePointsPublicVantagePointCollectionItemGeoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVantagePointsPublicVantagePointCollectionItemGeo {
		return vs[0].([]GetVantagePointsPublicVantagePointCollectionItemGeo)[vs[1].(int)]
	}).(GetVantagePointsPublicVantagePointCollectionItemGeoOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationInput)(nil)).Elem(), ConfigConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationPtrInput)(nil)).Elem(), ConfigConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationDnsConfigurationInput)(nil)).Elem(), ConfigConfigurationDnsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationDnsConfigurationPtrInput)(nil)).Elem(), ConfigConfigurationDnsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationNetworkConfigurationInput)(nil)).Elem(), ConfigConfigurationNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationNetworkConfigurationPtrInput)(nil)).Elem(), ConfigConfigurationNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationReqAuthenticationDetailsInput)(nil)).Elem(), ConfigConfigurationReqAuthenticationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationReqAuthenticationDetailsPtrInput)(nil)).Elem(), ConfigConfigurationReqAuthenticationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationReqAuthenticationDetailsAuthHeaderInput)(nil)).Elem(), ConfigConfigurationReqAuthenticationDetailsAuthHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayInput)(nil)).Elem(), ConfigConfigurationReqAuthenticationDetailsAuthHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationRequestHeaderInput)(nil)).Elem(), ConfigConfigurationRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationRequestHeaderArrayInput)(nil)).Elem(), ConfigConfigurationRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationRequestQueryParamInput)(nil)).Elem(), ConfigConfigurationRequestQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationRequestQueryParamArrayInput)(nil)).Elem(), ConfigConfigurationRequestQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationVerifyTextInput)(nil)).Elem(), ConfigConfigurationVerifyTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConfigurationVerifyTextArrayInput)(nil)).Elem(), ConfigConfigurationVerifyTextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigScriptParameterInput)(nil)).Elem(), ConfigScriptParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigScriptParameterArrayInput)(nil)).Elem(), ConfigScriptParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigScriptParameterMonitorScriptParameterInput)(nil)).Elem(), ConfigScriptParameterMonitorScriptParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigScriptParameterMonitorScriptParameterArrayInput)(nil)).Elem(), ConfigScriptParameterMonitorScriptParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedVantagePointDvpStackDetailsInput)(nil)).Elem(), DedicatedVantagePointDvpStackDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedVantagePointDvpStackDetailsPtrInput)(nil)).Elem(), DedicatedVantagePointDvpStackDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedVantagePointMonitorStatusCountMapInput)(nil)).Elem(), DedicatedVantagePointMonitorStatusCountMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedVantagePointMonitorStatusCountMapArrayInput)(nil)).Elem(), DedicatedVantagePointMonitorStatusCountMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScriptMonitorStatusCountMapInput)(nil)).Elem(), ScriptMonitorStatusCountMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScriptMonitorStatusCountMapArrayInput)(nil)).Elem(), ScriptMonitorStatusCountMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScriptParameterInput)(nil)).Elem(), ScriptParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScriptParameterArrayInput)(nil)).Elem(), ScriptParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScriptParameterScriptParameterInput)(nil)).Elem(), ScriptParameterScriptParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScriptParameterScriptParameterArrayInput)(nil)).Elem(), ScriptParameterScriptParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointDvpStackDetailInput)(nil)).Elem(), GetDedicatedVantagePointDvpStackDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointDvpStackDetailArrayInput)(nil)).Elem(), GetDedicatedVantagePointDvpStackDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointMonitorStatusCountMapInput)(nil)).Elem(), GetDedicatedVantagePointMonitorStatusCountMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointMonitorStatusCountMapArrayInput)(nil)).Elem(), GetDedicatedVantagePointMonitorStatusCountMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionInput)(nil)).Elem(), GetDedicatedVantagePointsDedicatedVantagePointCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayInput)(nil)).Elem(), GetDedicatedVantagePointsDedicatedVantagePointCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItemInput)(nil)).Elem(), GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayInput)(nil)).Elem(), GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailInput)(nil)).Elem(), GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayInput)(nil)).Elem(), GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapInput)(nil)).Elem(), GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayInput)(nil)).Elem(), GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointsFilterInput)(nil)).Elem(), GetDedicatedVantagePointsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedVantagePointsFilterArrayInput)(nil)).Elem(), GetDedicatedVantagePointsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationInput)(nil)).Elem(), GetMonitorConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationArrayInput)(nil)).Elem(), GetMonitorConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationDnsConfigurationInput)(nil)).Elem(), GetMonitorConfigurationDnsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationDnsConfigurationArrayInput)(nil)).Elem(), GetMonitorConfigurationDnsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationNetworkConfigurationInput)(nil)).Elem(), GetMonitorConfigurationNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationNetworkConfigurationArrayInput)(nil)).Elem(), GetMonitorConfigurationNetworkConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetailInput)(nil)).Elem(), GetMonitorConfigurationReqAuthenticationDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetailArrayInput)(nil)).Elem(), GetMonitorConfigurationReqAuthenticationDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetailAuthHeaderInput)(nil)).Elem(), GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayInput)(nil)).Elem(), GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationRequestHeaderInput)(nil)).Elem(), GetMonitorConfigurationRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationRequestHeaderArrayInput)(nil)).Elem(), GetMonitorConfigurationRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationRequestQueryParamInput)(nil)).Elem(), GetMonitorConfigurationRequestQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationRequestQueryParamArrayInput)(nil)).Elem(), GetMonitorConfigurationRequestQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationVerifyTextInput)(nil)).Elem(), GetMonitorConfigurationVerifyTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigurationVerifyTextArrayInput)(nil)).Elem(), GetMonitorConfigurationVerifyTextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorScriptParameterInput)(nil)).Elem(), GetMonitorScriptParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorScriptParameterArrayInput)(nil)).Elem(), GetMonitorScriptParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorScriptParameterMonitorScriptParameterInput)(nil)).Elem(), GetMonitorScriptParameterMonitorScriptParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorScriptParameterMonitorScriptParameterArrayInput)(nil)).Elem(), GetMonitorScriptParameterMonitorScriptParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsFilterInput)(nil)).Elem(), GetMonitorsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsFilterArrayInput)(nil)).Elem(), GetMonitorsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionInput)(nil)).Elem(), GetMonitorsMonitorCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestHeaderInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationVerifyTextInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationVerifyTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemConfigurationVerifyTextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameterInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemScriptParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameterArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemScriptParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayInput)(nil)).Elem(), GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResultResultDataSetInput)(nil)).Elem(), GetResultResultDataSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResultResultDataSetArrayInput)(nil)).Elem(), GetResultResultDataSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptMonitorStatusCountMapInput)(nil)).Elem(), GetScriptMonitorStatusCountMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptMonitorStatusCountMapArrayInput)(nil)).Elem(), GetScriptMonitorStatusCountMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptParameterInput)(nil)).Elem(), GetScriptParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptParameterArrayInput)(nil)).Elem(), GetScriptParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptParameterScriptParameterInput)(nil)).Elem(), GetScriptParameterScriptParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptParameterScriptParameterArrayInput)(nil)).Elem(), GetScriptParameterScriptParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsFilterInput)(nil)).Elem(), GetScriptsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsFilterArrayInput)(nil)).Elem(), GetScriptsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsScriptCollectionInput)(nil)).Elem(), GetScriptsScriptCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsScriptCollectionArrayInput)(nil)).Elem(), GetScriptsScriptCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsScriptCollectionItemInput)(nil)).Elem(), GetScriptsScriptCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsScriptCollectionItemArrayInput)(nil)).Elem(), GetScriptsScriptCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsScriptCollectionItemMonitorStatusCountMapInput)(nil)).Elem(), GetScriptsScriptCollectionItemMonitorStatusCountMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsScriptCollectionItemMonitorStatusCountMapArrayInput)(nil)).Elem(), GetScriptsScriptCollectionItemMonitorStatusCountMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsScriptCollectionItemParameterInput)(nil)).Elem(), GetScriptsScriptCollectionItemParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsScriptCollectionItemParameterArrayInput)(nil)).Elem(), GetScriptsScriptCollectionItemParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsScriptCollectionItemParameterScriptParameterInput)(nil)).Elem(), GetScriptsScriptCollectionItemParameterScriptParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScriptsScriptCollectionItemParameterScriptParameterArrayInput)(nil)).Elem(), GetScriptsScriptCollectionItemParameterScriptParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointItemInput)(nil)).Elem(), GetVantagePointItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointItemArrayInput)(nil)).Elem(), GetVantagePointItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointItemGeoInput)(nil)).Elem(), GetVantagePointItemGeoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointItemGeoArrayInput)(nil)).Elem(), GetVantagePointItemGeoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsFilterInput)(nil)).Elem(), GetVantagePointsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsFilterArrayInput)(nil)).Elem(), GetVantagePointsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsPublicVantagePointCollectionInput)(nil)).Elem(), GetVantagePointsPublicVantagePointCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsPublicVantagePointCollectionArrayInput)(nil)).Elem(), GetVantagePointsPublicVantagePointCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsPublicVantagePointCollectionItemInput)(nil)).Elem(), GetVantagePointsPublicVantagePointCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsPublicVantagePointCollectionItemArrayInput)(nil)).Elem(), GetVantagePointsPublicVantagePointCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsPublicVantagePointCollectionItemGeoInput)(nil)).Elem(), GetVantagePointsPublicVantagePointCollectionItemGeoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVantagePointsPublicVantagePointCollectionItemGeoArrayInput)(nil)).Elem(), GetVantagePointsPublicVantagePointCollectionItemGeoArray{})
	pulumi.RegisterOutputType(ConfigConfigurationOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationDnsConfigurationOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationDnsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationReqAuthenticationDetailsOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationReqAuthenticationDetailsPtrOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationReqAuthenticationDetailsAuthHeaderOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationReqAuthenticationDetailsAuthHeaderArrayOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationRequestHeaderOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationRequestQueryParamOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationRequestQueryParamArrayOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationVerifyTextOutput{})
	pulumi.RegisterOutputType(ConfigConfigurationVerifyTextArrayOutput{})
	pulumi.RegisterOutputType(ConfigScriptParameterOutput{})
	pulumi.RegisterOutputType(ConfigScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(ConfigScriptParameterMonitorScriptParameterOutput{})
	pulumi.RegisterOutputType(ConfigScriptParameterMonitorScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(DedicatedVantagePointDvpStackDetailsOutput{})
	pulumi.RegisterOutputType(DedicatedVantagePointDvpStackDetailsPtrOutput{})
	pulumi.RegisterOutputType(DedicatedVantagePointMonitorStatusCountMapOutput{})
	pulumi.RegisterOutputType(DedicatedVantagePointMonitorStatusCountMapArrayOutput{})
	pulumi.RegisterOutputType(ScriptMonitorStatusCountMapOutput{})
	pulumi.RegisterOutputType(ScriptMonitorStatusCountMapArrayOutput{})
	pulumi.RegisterOutputType(ScriptParameterOutput{})
	pulumi.RegisterOutputType(ScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(ScriptParameterScriptParameterOutput{})
	pulumi.RegisterOutputType(ScriptParameterScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointDvpStackDetailOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointDvpStackDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointMonitorStatusCountMapOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointMonitorStatusCountMapArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointsDedicatedVantagePointCollectionOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointsDedicatedVantagePointCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemDvpStackDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointsDedicatedVantagePointCollectionItemMonitorStatusCountMapArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointsFilterOutput{})
	pulumi.RegisterOutputType(GetDedicatedVantagePointsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationDnsConfigurationOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationDnsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationNetworkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationReqAuthenticationDetailOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationReqAuthenticationDetailArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationReqAuthenticationDetailAuthHeaderOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationReqAuthenticationDetailAuthHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationRequestHeaderOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationRequestQueryParamOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationRequestQueryParamArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationVerifyTextOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigurationVerifyTextArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorScriptParameterOutput{})
	pulumi.RegisterOutputType(GetMonitorScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorScriptParameterMonitorScriptParameterOutput{})
	pulumi.RegisterOutputType(GetMonitorScriptParameterMonitorScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsFilterOutput{})
	pulumi.RegisterOutputType(GetMonitorsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationDnsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationNetworkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationReqAuthenticationDetailAuthHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationRequestQueryParamArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationVerifyTextOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemConfigurationVerifyTextArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemScriptParameterOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorCollectionItemScriptParameterMonitorScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(GetResultResultDataSetOutput{})
	pulumi.RegisterOutputType(GetResultResultDataSetArrayOutput{})
	pulumi.RegisterOutputType(GetScriptMonitorStatusCountMapOutput{})
	pulumi.RegisterOutputType(GetScriptMonitorStatusCountMapArrayOutput{})
	pulumi.RegisterOutputType(GetScriptParameterOutput{})
	pulumi.RegisterOutputType(GetScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(GetScriptParameterScriptParameterOutput{})
	pulumi.RegisterOutputType(GetScriptParameterScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(GetScriptsFilterOutput{})
	pulumi.RegisterOutputType(GetScriptsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemMonitorStatusCountMapOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemMonitorStatusCountMapArrayOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemParameterOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemParameterArrayOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemParameterScriptParameterOutput{})
	pulumi.RegisterOutputType(GetScriptsScriptCollectionItemParameterScriptParameterArrayOutput{})
	pulumi.RegisterOutputType(GetVantagePointItemOutput{})
	pulumi.RegisterOutputType(GetVantagePointItemArrayOutput{})
	pulumi.RegisterOutputType(GetVantagePointItemGeoOutput{})
	pulumi.RegisterOutputType(GetVantagePointItemGeoArrayOutput{})
	pulumi.RegisterOutputType(GetVantagePointsFilterOutput{})
	pulumi.RegisterOutputType(GetVantagePointsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVantagePointsPublicVantagePointCollectionOutput{})
	pulumi.RegisterOutputType(GetVantagePointsPublicVantagePointCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetVantagePointsPublicVantagePointCollectionItemOutput{})
	pulumi.RegisterOutputType(GetVantagePointsPublicVantagePointCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetVantagePointsPublicVantagePointCollectionItemGeoOutput{})
	pulumi.RegisterOutputType(GetVantagePointsPublicVantagePointCollectionItemGeoArrayOutput{})
}
