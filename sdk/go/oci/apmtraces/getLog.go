// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apmtraces

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Log resource in Oracle Cloud Infrastructure Apm Traces service.
//
// Retrieve a log in the APM Domain.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/apmtraces"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apmtraces.GetLog(ctx, &apmtraces.GetLogArgs{
//				ApmDomainId:                        testApmDomain.Id,
//				LogKey:                             logLogKey,
//				TimeLogEndedLessThan:               logTimeLogEndedLessThan,
//				TimeLogStartedGreaterThanOrEqualTo: logTimeLogStartedGreaterThanOrEqualTo,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLog(ctx *pulumi.Context, args *GetLogArgs, opts ...pulumi.InvokeOption) (*GetLogResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogResult
	err := ctx.Invoke("oci:ApmTraces/getLog:getLog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLog.
type GetLogArgs struct {
	// The APM Domain ID for the intended request.
	ApmDomainId string `pulumi:"apmDomainId"`
	// Log key.
	LogKey string `pulumi:"logKey"`
	// Include logs with log time less than this value.
	TimeLogEndedLessThan string `pulumi:"timeLogEndedLessThan"`
	// Include logs with log time equal to or greater than this value.
	TimeLogStartedGreaterThanOrEqualTo string `pulumi:"timeLogStartedGreaterThanOrEqualTo"`
}

// A collection of values returned by getLog.
type GetLogResult struct {
	ApmDomainId string `pulumi:"apmDomainId"`
	// Metadata about the attributes in the logs.
	AttributeMetadata map[string]string `pulumi:"attributeMetadata"`
	// List of attributes associated with the logs.
	Attributes []GetLogAttribute `pulumi:"attributes"`
	// Log body (Body).
	Body string `pulumi:"body"`
	// Name of the event.
	EventName string `pulumi:"eventName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier (logId) for the logKey.  Note that this field is defined as logKey in the API and it maps to the logId in Application Performance Monitoring.
	LogKey string `pulumi:"logKey"`
	// Full values for attributes that are too long to be stored as a log attribute (Overflow).
	OverflowAttributes string `pulumi:"overflowAttributes"`
	// Log Severity number (SeverityNumber).
	SeverityNumber int `pulumi:"severityNumber"`
	// Log Severity text (SeverityText).  Also known as Log level.
	SeverityText string `pulumi:"severityText"`
	// Unique identifier for the span (spanId) associated with this log.
	SpanKey string `pulumi:"spanKey"`
	// Time that the log event occurred (CreatedTime).
	TimeCreated                        string `pulumi:"timeCreated"`
	TimeLogEndedLessThan               string `pulumi:"timeLogEndedLessThan"`
	TimeLogStartedGreaterThanOrEqualTo string `pulumi:"timeLogStartedGreaterThanOrEqualTo"`
	// Time that the log was received by apm (ObservedTime).
	TimeObserved string `pulumi:"timeObserved"`
	// Time used by the time picker (RecordedTime).  Either the timeCreated if present or the timeObserved.
	Timestamp string `pulumi:"timestamp"`
	// Trace flags.
	TraceFlags int `pulumi:"traceFlags"`
	// Unique identifier for the trace (traceId) associated with this log.
	TraceKey string `pulumi:"traceKey"`
}

func GetLogOutput(ctx *pulumi.Context, args GetLogOutputArgs, opts ...pulumi.InvokeOption) GetLogResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLogResultOutput, error) {
			args := v.(GetLogArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ApmTraces/getLog:getLog", args, GetLogResultOutput{}, options).(GetLogResultOutput), nil
		}).(GetLogResultOutput)
}

// A collection of arguments for invoking getLog.
type GetLogOutputArgs struct {
	// The APM Domain ID for the intended request.
	ApmDomainId pulumi.StringInput `pulumi:"apmDomainId"`
	// Log key.
	LogKey pulumi.StringInput `pulumi:"logKey"`
	// Include logs with log time less than this value.
	TimeLogEndedLessThan pulumi.StringInput `pulumi:"timeLogEndedLessThan"`
	// Include logs with log time equal to or greater than this value.
	TimeLogStartedGreaterThanOrEqualTo pulumi.StringInput `pulumi:"timeLogStartedGreaterThanOrEqualTo"`
}

func (GetLogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogArgs)(nil)).Elem()
}

// A collection of values returned by getLog.
type GetLogResultOutput struct{ *pulumi.OutputState }

func (GetLogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogResult)(nil)).Elem()
}

func (o GetLogResultOutput) ToGetLogResultOutput() GetLogResultOutput {
	return o
}

func (o GetLogResultOutput) ToGetLogResultOutputWithContext(ctx context.Context) GetLogResultOutput {
	return o
}

func (o GetLogResultOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.ApmDomainId }).(pulumi.StringOutput)
}

// Metadata about the attributes in the logs.
func (o GetLogResultOutput) AttributeMetadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLogResult) map[string]string { return v.AttributeMetadata }).(pulumi.StringMapOutput)
}

// List of attributes associated with the logs.
func (o GetLogResultOutput) Attributes() GetLogAttributeArrayOutput {
	return o.ApplyT(func(v GetLogResult) []GetLogAttribute { return v.Attributes }).(GetLogAttributeArrayOutput)
}

// Log body (Body).
func (o GetLogResultOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.Body }).(pulumi.StringOutput)
}

// Name of the event.
func (o GetLogResultOutput) EventName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.EventName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier (logId) for the logKey.  Note that this field is defined as logKey in the API and it maps to the logId in Application Performance Monitoring.
func (o GetLogResultOutput) LogKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.LogKey }).(pulumi.StringOutput)
}

// Full values for attributes that are too long to be stored as a log attribute (Overflow).
func (o GetLogResultOutput) OverflowAttributes() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.OverflowAttributes }).(pulumi.StringOutput)
}

// Log Severity number (SeverityNumber).
func (o GetLogResultOutput) SeverityNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogResult) int { return v.SeverityNumber }).(pulumi.IntOutput)
}

// Log Severity text (SeverityText).  Also known as Log level.
func (o GetLogResultOutput) SeverityText() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.SeverityText }).(pulumi.StringOutput)
}

// Unique identifier for the span (spanId) associated with this log.
func (o GetLogResultOutput) SpanKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.SpanKey }).(pulumi.StringOutput)
}

// Time that the log event occurred (CreatedTime).
func (o GetLogResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

func (o GetLogResultOutput) TimeLogEndedLessThan() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.TimeLogEndedLessThan }).(pulumi.StringOutput)
}

func (o GetLogResultOutput) TimeLogStartedGreaterThanOrEqualTo() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.TimeLogStartedGreaterThanOrEqualTo }).(pulumi.StringOutput)
}

// Time that the log was received by apm (ObservedTime).
func (o GetLogResultOutput) TimeObserved() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.TimeObserved }).(pulumi.StringOutput)
}

// Time used by the time picker (RecordedTime).  Either the timeCreated if present or the timeObserved.
func (o GetLogResultOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.Timestamp }).(pulumi.StringOutput)
}

// Trace flags.
func (o GetLogResultOutput) TraceFlags() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogResult) int { return v.TraceFlags }).(pulumi.IntOutput)
}

// Unique identifier for the trace (traceId) associated with this log.
func (o GetLogResultOutput) TraceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogResult) string { return v.TraceKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogResultOutput{})
}
