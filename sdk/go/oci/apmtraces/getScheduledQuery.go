// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apmtraces

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Scheduled Query resource in Oracle Cloud Infrastructure Apm Traces service.
//
// Retrieve a scheduled query in the APM Domain.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/apmtraces"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apmtraces.GetScheduledQuery(ctx, &apmtraces.GetScheduledQueryArgs{
//				ApmDomainId:      testApmDomain.Id,
//				ScheduledQueryId: testScheduledQueryOciApmTracesScheduledQuery.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupScheduledQuery(ctx *pulumi.Context, args *LookupScheduledQueryArgs, opts ...pulumi.InvokeOption) (*LookupScheduledQueryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupScheduledQueryResult
	err := ctx.Invoke("oci:ApmTraces/getScheduledQuery:getScheduledQuery", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScheduledQuery.
type LookupScheduledQueryArgs struct {
	// The APM Domain ID for the intended request.
	ApmDomainId string `pulumi:"apmDomainId"`
	// Id of the scheduled query.
	ScheduledQueryId string `pulumi:"scheduledQueryId"`
}

// A collection of values returned by getScheduledQuery.
type LookupScheduledQueryResult struct {
	ApmDomainId string `pulumi:"apmDomainId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled query . An OCID is generated when the scheduled query is created.
	Id        string `pulumi:"id"`
	OpcDryRun string `pulumi:"opcDryRun"`
	// Description for the scheduled query.
	ScheduledQueryDescription string `pulumi:"scheduledQueryDescription"`
	ScheduledQueryId          string `pulumi:"scheduledQueryId"`
	// Scheduled query instances.
	ScheduledQueryInstances string `pulumi:"scheduledQueryInstances"`
	// Maximum runtime for the scheduled query in seconds.
	ScheduledQueryMaximumRuntimeInSeconds string `pulumi:"scheduledQueryMaximumRuntimeInSeconds"`
	// Name of the scheduled query.
	ScheduledQueryName string `pulumi:"scheduledQueryName"`
	// Next run for the scheduled query.
	ScheduledQueryNextRunInMs string `pulumi:"scheduledQueryNextRunInMs"`
	// Definition of the scheduled query processing configuration.
	ScheduledQueryProcessingConfigurations []GetScheduledQueryScheduledQueryProcessingConfiguration `pulumi:"scheduledQueryProcessingConfigurations"`
	// Processing sub type of the scheduled query.
	ScheduledQueryProcessingSubType string `pulumi:"scheduledQueryProcessingSubType"`
	// Processing type of the scheduled query.
	ScheduledQueryProcessingType string `pulumi:"scheduledQueryProcessingType"`
	// Retention criteria for the scheduled query.
	ScheduledQueryRetentionCriteria string `pulumi:"scheduledQueryRetentionCriteria"`
	// Retention period for the scheduled query in milliseconds.
	ScheduledQueryRetentionPeriodInMs string `pulumi:"scheduledQueryRetentionPeriodInMs"`
	// Schedule for the scheduled query.
	ScheduledQuerySchedule string `pulumi:"scheduledQuerySchedule"`
	// Scheduled query to be run.
	ScheduledQueryText string `pulumi:"scheduledQueryText"`
	// The current lifecycle state of the Scheduled Query.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
}

func LookupScheduledQueryOutput(ctx *pulumi.Context, args LookupScheduledQueryOutputArgs, opts ...pulumi.InvokeOption) LookupScheduledQueryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupScheduledQueryResultOutput, error) {
			args := v.(LookupScheduledQueryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ApmTraces/getScheduledQuery:getScheduledQuery", args, LookupScheduledQueryResultOutput{}, options).(LookupScheduledQueryResultOutput), nil
		}).(LookupScheduledQueryResultOutput)
}

// A collection of arguments for invoking getScheduledQuery.
type LookupScheduledQueryOutputArgs struct {
	// The APM Domain ID for the intended request.
	ApmDomainId pulumi.StringInput `pulumi:"apmDomainId"`
	// Id of the scheduled query.
	ScheduledQueryId pulumi.StringInput `pulumi:"scheduledQueryId"`
}

func (LookupScheduledQueryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduledQueryArgs)(nil)).Elem()
}

// A collection of values returned by getScheduledQuery.
type LookupScheduledQueryResultOutput struct{ *pulumi.OutputState }

func (LookupScheduledQueryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduledQueryResult)(nil)).Elem()
}

func (o LookupScheduledQueryResultOutput) ToLookupScheduledQueryResultOutput() LookupScheduledQueryResultOutput {
	return o
}

func (o LookupScheduledQueryResultOutput) ToLookupScheduledQueryResultOutputWithContext(ctx context.Context) LookupScheduledQueryResultOutput {
	return o
}

func (o LookupScheduledQueryResultOutput) ApmDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ApmDomainId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupScheduledQueryResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupScheduledQueryResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled query . An OCID is generated when the scheduled query is created.
func (o LookupScheduledQueryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupScheduledQueryResultOutput) OpcDryRun() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.OpcDryRun }).(pulumi.StringOutput)
}

// Description for the scheduled query.
func (o LookupScheduledQueryResultOutput) ScheduledQueryDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQueryDescription }).(pulumi.StringOutput)
}

func (o LookupScheduledQueryResultOutput) ScheduledQueryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQueryId }).(pulumi.StringOutput)
}

// Scheduled query instances.
func (o LookupScheduledQueryResultOutput) ScheduledQueryInstances() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQueryInstances }).(pulumi.StringOutput)
}

// Maximum runtime for the scheduled query in seconds.
func (o LookupScheduledQueryResultOutput) ScheduledQueryMaximumRuntimeInSeconds() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQueryMaximumRuntimeInSeconds }).(pulumi.StringOutput)
}

// Name of the scheduled query.
func (o LookupScheduledQueryResultOutput) ScheduledQueryName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQueryName }).(pulumi.StringOutput)
}

// Next run for the scheduled query.
func (o LookupScheduledQueryResultOutput) ScheduledQueryNextRunInMs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQueryNextRunInMs }).(pulumi.StringOutput)
}

// Definition of the scheduled query processing configuration.
func (o LookupScheduledQueryResultOutput) ScheduledQueryProcessingConfigurations() GetScheduledQueryScheduledQueryProcessingConfigurationArrayOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) []GetScheduledQueryScheduledQueryProcessingConfiguration {
		return v.ScheduledQueryProcessingConfigurations
	}).(GetScheduledQueryScheduledQueryProcessingConfigurationArrayOutput)
}

// Processing sub type of the scheduled query.
func (o LookupScheduledQueryResultOutput) ScheduledQueryProcessingSubType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQueryProcessingSubType }).(pulumi.StringOutput)
}

// Processing type of the scheduled query.
func (o LookupScheduledQueryResultOutput) ScheduledQueryProcessingType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQueryProcessingType }).(pulumi.StringOutput)
}

// Retention criteria for the scheduled query.
func (o LookupScheduledQueryResultOutput) ScheduledQueryRetentionCriteria() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQueryRetentionCriteria }).(pulumi.StringOutput)
}

// Retention period for the scheduled query in milliseconds.
func (o LookupScheduledQueryResultOutput) ScheduledQueryRetentionPeriodInMs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQueryRetentionPeriodInMs }).(pulumi.StringOutput)
}

// Schedule for the scheduled query.
func (o LookupScheduledQueryResultOutput) ScheduledQuerySchedule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQuerySchedule }).(pulumi.StringOutput)
}

// Scheduled query to be run.
func (o LookupScheduledQueryResultOutput) ScheduledQueryText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.ScheduledQueryText }).(pulumi.StringOutput)
}

// The current lifecycle state of the Scheduled Query.
func (o LookupScheduledQueryResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupScheduledQueryResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduledQueryResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupScheduledQueryResultOutput{})
}
