// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package artifacts

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Container Repository resource in Oracle Cloud Infrastructure Artifacts service.
//
// Create a new empty container repository. Avoid entering confidential information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/artifacts"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := artifacts.NewContainerRepository(ctx, "test_container_repository", &artifacts.ContainerRepositoryArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				DisplayName:   pulumi.Any(containerRepositoryDisplayName),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				IsImmutable: pulumi.Any(containerRepositoryIsImmutable),
//				IsPublic:    pulumi.Any(containerRepositoryIsPublic),
//				Readme: &artifacts.ContainerRepositoryReadmeArgs{
//					Content: pulumi.Any(containerRepositoryReadmeContent),
//					Format:  pulumi.Any(containerRepositoryReadmeFormat),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ContainerRepositories can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Artifacts/containerRepository:ContainerRepository test_container_repository "container/repositories/{repositoryId}"
// ```
type ContainerRepository struct {
	pulumi.CustomResourceState

	// Total storage size in GBs that will be charged.
	BillableSizeInGbs pulumi.StringOutput `pulumi:"billableSizeInGbs"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The id of the user or principal that created the resource.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// The container repository name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Total number of images.
	ImageCount pulumi.IntOutput `pulumi:"imageCount"`
	// (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
	IsImmutable pulumi.BoolOutput `pulumi:"isImmutable"`
	// (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
	IsPublic pulumi.BoolOutput `pulumi:"isPublic"`
	// Total number of layers.
	LayerCount pulumi.IntOutput `pulumi:"layerCount"`
	// Total storage in bytes consumed by layers.
	LayersSizeInBytes pulumi.StringOutput `pulumi:"layersSizeInBytes"`
	// The tenancy namespace used in the container repository path.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// (Updatable) Container repository readme.
	Readme ContainerRepositoryReadmeOutput `pulumi:"readme"`
	// The current state of the container repository.
	State pulumi.StringOutput `pulumi:"state"`
	// The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// An RFC 3339 timestamp indicating when the repository was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// An RFC 3339 timestamp indicating when an image was last pushed to the repository.
	TimeLastPushed pulumi.StringOutput `pulumi:"timeLastPushed"`
}

// NewContainerRepository registers a new resource with the given unique name, arguments, and options.
func NewContainerRepository(ctx *pulumi.Context,
	name string, args *ContainerRepositoryArgs, opts ...pulumi.ResourceOption) (*ContainerRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ContainerRepository
	err := ctx.RegisterResource("oci:Artifacts/containerRepository:ContainerRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerRepository gets an existing ContainerRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerRepositoryState, opts ...pulumi.ResourceOption) (*ContainerRepository, error) {
	var resource ContainerRepository
	err := ctx.ReadResource("oci:Artifacts/containerRepository:ContainerRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerRepository resources.
type containerRepositoryState struct {
	// Total storage size in GBs that will be charged.
	BillableSizeInGbs *string `pulumi:"billableSizeInGbs"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
	CompartmentId *string `pulumi:"compartmentId"`
	// The id of the user or principal that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The container repository name.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Total number of images.
	ImageCount *int `pulumi:"imageCount"`
	// (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
	IsImmutable *bool `pulumi:"isImmutable"`
	// (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
	IsPublic *bool `pulumi:"isPublic"`
	// Total number of layers.
	LayerCount *int `pulumi:"layerCount"`
	// Total storage in bytes consumed by layers.
	LayersSizeInBytes *string `pulumi:"layersSizeInBytes"`
	// The tenancy namespace used in the container repository path.
	Namespace *string `pulumi:"namespace"`
	// (Updatable) Container repository readme.
	Readme *ContainerRepositoryReadme `pulumi:"readme"`
	// The current state of the container repository.
	State *string `pulumi:"state"`
	// The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// An RFC 3339 timestamp indicating when the repository was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// An RFC 3339 timestamp indicating when an image was last pushed to the repository.
	TimeLastPushed *string `pulumi:"timeLastPushed"`
}

type ContainerRepositoryState struct {
	// Total storage size in GBs that will be charged.
	BillableSizeInGbs pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
	CompartmentId pulumi.StringPtrInput
	// The id of the user or principal that created the resource.
	CreatedBy pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// The container repository name.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Total number of images.
	ImageCount pulumi.IntPtrInput
	// (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
	IsImmutable pulumi.BoolPtrInput
	// (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
	IsPublic pulumi.BoolPtrInput
	// Total number of layers.
	LayerCount pulumi.IntPtrInput
	// Total storage in bytes consumed by layers.
	LayersSizeInBytes pulumi.StringPtrInput
	// The tenancy namespace used in the container repository path.
	Namespace pulumi.StringPtrInput
	// (Updatable) Container repository readme.
	Readme ContainerRepositoryReadmePtrInput
	// The current state of the container repository.
	State pulumi.StringPtrInput
	// The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// An RFC 3339 timestamp indicating when the repository was created.
	TimeCreated pulumi.StringPtrInput
	// An RFC 3339 timestamp indicating when an image was last pushed to the repository.
	TimeLastPushed pulumi.StringPtrInput
}

func (ContainerRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerRepositoryState)(nil)).Elem()
}

type containerRepositoryArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The container repository name.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
	IsImmutable *bool `pulumi:"isImmutable"`
	// (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
	IsPublic *bool `pulumi:"isPublic"`
	// (Updatable) Container repository readme.
	Readme *ContainerRepositoryReadme `pulumi:"readme"`
}

// The set of arguments for constructing a ContainerRepository resource.
type ContainerRepositoryArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// The container repository name.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
	IsImmutable pulumi.BoolPtrInput
	// (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
	IsPublic pulumi.BoolPtrInput
	// (Updatable) Container repository readme.
	Readme ContainerRepositoryReadmePtrInput
}

func (ContainerRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerRepositoryArgs)(nil)).Elem()
}

type ContainerRepositoryInput interface {
	pulumi.Input

	ToContainerRepositoryOutput() ContainerRepositoryOutput
	ToContainerRepositoryOutputWithContext(ctx context.Context) ContainerRepositoryOutput
}

func (*ContainerRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRepository)(nil)).Elem()
}

func (i *ContainerRepository) ToContainerRepositoryOutput() ContainerRepositoryOutput {
	return i.ToContainerRepositoryOutputWithContext(context.Background())
}

func (i *ContainerRepository) ToContainerRepositoryOutputWithContext(ctx context.Context) ContainerRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRepositoryOutput)
}

// ContainerRepositoryArrayInput is an input type that accepts ContainerRepositoryArray and ContainerRepositoryArrayOutput values.
// You can construct a concrete instance of `ContainerRepositoryArrayInput` via:
//
//	ContainerRepositoryArray{ ContainerRepositoryArgs{...} }
type ContainerRepositoryArrayInput interface {
	pulumi.Input

	ToContainerRepositoryArrayOutput() ContainerRepositoryArrayOutput
	ToContainerRepositoryArrayOutputWithContext(context.Context) ContainerRepositoryArrayOutput
}

type ContainerRepositoryArray []ContainerRepositoryInput

func (ContainerRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContainerRepository)(nil)).Elem()
}

func (i ContainerRepositoryArray) ToContainerRepositoryArrayOutput() ContainerRepositoryArrayOutput {
	return i.ToContainerRepositoryArrayOutputWithContext(context.Background())
}

func (i ContainerRepositoryArray) ToContainerRepositoryArrayOutputWithContext(ctx context.Context) ContainerRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRepositoryArrayOutput)
}

// ContainerRepositoryMapInput is an input type that accepts ContainerRepositoryMap and ContainerRepositoryMapOutput values.
// You can construct a concrete instance of `ContainerRepositoryMapInput` via:
//
//	ContainerRepositoryMap{ "key": ContainerRepositoryArgs{...} }
type ContainerRepositoryMapInput interface {
	pulumi.Input

	ToContainerRepositoryMapOutput() ContainerRepositoryMapOutput
	ToContainerRepositoryMapOutputWithContext(context.Context) ContainerRepositoryMapOutput
}

type ContainerRepositoryMap map[string]ContainerRepositoryInput

func (ContainerRepositoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContainerRepository)(nil)).Elem()
}

func (i ContainerRepositoryMap) ToContainerRepositoryMapOutput() ContainerRepositoryMapOutput {
	return i.ToContainerRepositoryMapOutputWithContext(context.Background())
}

func (i ContainerRepositoryMap) ToContainerRepositoryMapOutputWithContext(ctx context.Context) ContainerRepositoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRepositoryMapOutput)
}

type ContainerRepositoryOutput struct{ *pulumi.OutputState }

func (ContainerRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRepository)(nil)).Elem()
}

func (o ContainerRepositoryOutput) ToContainerRepositoryOutput() ContainerRepositoryOutput {
	return o
}

func (o ContainerRepositoryOutput) ToContainerRepositoryOutputWithContext(ctx context.Context) ContainerRepositoryOutput {
	return o
}

// Total storage size in GBs that will be charged.
func (o ContainerRepositoryOutput) BillableSizeInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringOutput { return v.BillableSizeInGbs }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the resource.
func (o ContainerRepositoryOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The id of the user or principal that created the resource.
func (o ContainerRepositoryOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o ContainerRepositoryOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The container repository name.
func (o ContainerRepositoryOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o ContainerRepositoryOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Total number of images.
func (o ContainerRepositoryOutput) ImageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.IntOutput { return v.ImageCount }).(pulumi.IntOutput)
}

// (Updatable) Whether the repository is immutable. Images cannot be overwritten in an immutable repository.
func (o ContainerRepositoryOutput) IsImmutable() pulumi.BoolOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.BoolOutput { return v.IsImmutable }).(pulumi.BoolOutput)
}

// (Updatable) Whether the repository is public. A public repository allows unauthenticated access.
func (o ContainerRepositoryOutput) IsPublic() pulumi.BoolOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.BoolOutput { return v.IsPublic }).(pulumi.BoolOutput)
}

// Total number of layers.
func (o ContainerRepositoryOutput) LayerCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.IntOutput { return v.LayerCount }).(pulumi.IntOutput)
}

// Total storage in bytes consumed by layers.
func (o ContainerRepositoryOutput) LayersSizeInBytes() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringOutput { return v.LayersSizeInBytes }).(pulumi.StringOutput)
}

// The tenancy namespace used in the container repository path.
func (o ContainerRepositoryOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// (Updatable) Container repository readme.
func (o ContainerRepositoryOutput) Readme() ContainerRepositoryReadmeOutput {
	return o.ApplyT(func(v *ContainerRepository) ContainerRepositoryReadmeOutput { return v.Readme }).(ContainerRepositoryReadmeOutput)
}

// The current state of the container repository.
func (o ContainerRepositoryOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The system tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ContainerRepositoryOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// An RFC 3339 timestamp indicating when the repository was created.
func (o ContainerRepositoryOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// An RFC 3339 timestamp indicating when an image was last pushed to the repository.
func (o ContainerRepositoryOutput) TimeLastPushed() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRepository) pulumi.StringOutput { return v.TimeLastPushed }).(pulumi.StringOutput)
}

type ContainerRepositoryArrayOutput struct{ *pulumi.OutputState }

func (ContainerRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContainerRepository)(nil)).Elem()
}

func (o ContainerRepositoryArrayOutput) ToContainerRepositoryArrayOutput() ContainerRepositoryArrayOutput {
	return o
}

func (o ContainerRepositoryArrayOutput) ToContainerRepositoryArrayOutputWithContext(ctx context.Context) ContainerRepositoryArrayOutput {
	return o
}

func (o ContainerRepositoryArrayOutput) Index(i pulumi.IntInput) ContainerRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ContainerRepository {
		return vs[0].([]*ContainerRepository)[vs[1].(int)]
	}).(ContainerRepositoryOutput)
}

type ContainerRepositoryMapOutput struct{ *pulumi.OutputState }

func (ContainerRepositoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContainerRepository)(nil)).Elem()
}

func (o ContainerRepositoryMapOutput) ToContainerRepositoryMapOutput() ContainerRepositoryMapOutput {
	return o
}

func (o ContainerRepositoryMapOutput) ToContainerRepositoryMapOutputWithContext(ctx context.Context) ContainerRepositoryMapOutput {
	return o
}

func (o ContainerRepositoryMapOutput) MapIndex(k pulumi.StringInput) ContainerRepositoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ContainerRepository {
		return vs[0].(map[string]*ContainerRepository)[vs[1].(string)]
	}).(ContainerRepositoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRepositoryInput)(nil)).Elem(), &ContainerRepository{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRepositoryArrayInput)(nil)).Elem(), ContainerRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRepositoryMapInput)(nil)).Elem(), ContainerRepositoryMap{})
	pulumi.RegisterOutputType(ContainerRepositoryOutput{})
	pulumi.RegisterOutputType(ContainerRepositoryArrayOutput{})
	pulumi.RegisterOutputType(ContainerRepositoryMapOutput{})
}
