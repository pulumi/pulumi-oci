// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package audit

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Audit Events in Oracle Cloud Infrastructure Audit service.
//
// Returns all the audit events processed for the specified compartment within the specified
// time range.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Audit"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Audit.GetEvents(ctx, &audit.GetEventsArgs{
//				CompartmentId: compartmentId,
//				EndTime:       auditEventEndTime,
//				StartTime:     auditEventStartTime,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEvents(ctx *pulumi.Context, args *GetEventsArgs, opts ...pulumi.InvokeOption) (*GetEventsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEventsResult
	err := ctx.Invoke("oci:Audit/getEvents:getEvents", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEvents.
type GetEventsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Returns events that were processed before this end date and time, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	//
	// For example, a start value of `2017-01-01T00:00:00Z` and an end value of `2017-01-02T00:00:00Z` will retrieve a list of all events processed on January 1, 2017. Similarly, a start value of `2017-01-01T00:00:00Z` and an end value of `2017-02-01T00:00:00Z` will result in a list of all events processed between January 1, 2017 and January 31, 2017. You can specify a value with granularity to the minute. Seconds (and milliseconds, if included) must be set to `0`.
	EndTime string            `pulumi:"endTime"`
	Filters []GetEventsFilter `pulumi:"filters"`
	// Returns events that were processed at or after this start date and time, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	//
	// For example, a start value of `2017-01-15T11:30:00Z` will retrieve a list of all events processed since 30 minutes after the 11th hour of January 15, 2017, in Coordinated Universal Time (UTC). You can specify a value with granularity to the minute. Seconds (and milliseconds, if included) must be set to `0`.
	StartTime string `pulumi:"startTime"`
}

// A collection of values returned by getEvents.
type GetEventsResult struct {
	// The list of audit_events.
	AuditEvents []GetEventsAuditEvent `pulumi:"auditEvents"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the resource  emitting the event.
	CompartmentId string            `pulumi:"compartmentId"`
	EndTime       string            `pulumi:"endTime"`
	Filters       []GetEventsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	StartTime string `pulumi:"startTime"`
}

func GetEventsOutput(ctx *pulumi.Context, args GetEventsOutputArgs, opts ...pulumi.InvokeOption) GetEventsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEventsResultOutput, error) {
			args := v.(GetEventsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetEventsResult
			secret, err := ctx.InvokePackageRaw("oci:Audit/getEvents:getEvents", args, &rv, "", opts...)
			if err != nil {
				return GetEventsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetEventsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetEventsResultOutput), nil
			}
			return output, nil
		}).(GetEventsResultOutput)
}

// A collection of arguments for invoking getEvents.
type GetEventsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Returns events that were processed before this end date and time, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	//
	// For example, a start value of `2017-01-01T00:00:00Z` and an end value of `2017-01-02T00:00:00Z` will retrieve a list of all events processed on January 1, 2017. Similarly, a start value of `2017-01-01T00:00:00Z` and an end value of `2017-02-01T00:00:00Z` will result in a list of all events processed between January 1, 2017 and January 31, 2017. You can specify a value with granularity to the minute. Seconds (and milliseconds, if included) must be set to `0`.
	EndTime pulumi.StringInput        `pulumi:"endTime"`
	Filters GetEventsFilterArrayInput `pulumi:"filters"`
	// Returns events that were processed at or after this start date and time, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	//
	// For example, a start value of `2017-01-15T11:30:00Z` will retrieve a list of all events processed since 30 minutes after the 11th hour of January 15, 2017, in Coordinated Universal Time (UTC). You can specify a value with granularity to the minute. Seconds (and milliseconds, if included) must be set to `0`.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetEventsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsArgs)(nil)).Elem()
}

// A collection of values returned by getEvents.
type GetEventsResultOutput struct{ *pulumi.OutputState }

func (GetEventsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsResult)(nil)).Elem()
}

func (o GetEventsResultOutput) ToGetEventsResultOutput() GetEventsResultOutput {
	return o
}

func (o GetEventsResultOutput) ToGetEventsResultOutputWithContext(ctx context.Context) GetEventsResultOutput {
	return o
}

// The list of audit_events.
func (o GetEventsResultOutput) AuditEvents() GetEventsAuditEventArrayOutput {
	return o.ApplyT(func(v GetEventsResult) []GetEventsAuditEvent { return v.AuditEvents }).(GetEventsAuditEventArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the resource  emitting the event.
func (o GetEventsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetEventsResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsResult) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetEventsResultOutput) Filters() GetEventsFilterArrayOutput {
	return o.ApplyT(func(v GetEventsResult) []GetEventsFilter { return v.Filters }).(GetEventsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEventsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEventsResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEventsResultOutput{})
}
