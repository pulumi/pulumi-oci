// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Auto Scaling Configuration resource in Oracle Cloud Infrastructure Auto Scaling service.
//
// Creates an autoscaling configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Autoscaling"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Autoscaling.NewAutoScalingConfiguration(ctx, "test_auto_scaling_configuration", &Autoscaling.AutoScalingConfigurationArgs{
//				AutoScalingResources: &autoscaling.AutoScalingConfigurationAutoScalingResourcesArgs{
//					Id:   pulumi.Any(autoScalingConfigurationAutoScalingResourcesId),
//					Type: pulumi.Any(autoScalingConfigurationAutoScalingResourcesType),
//				},
//				CompartmentId: pulumi.Any(compartmentId),
//				Policies: autoscaling.AutoScalingConfigurationPolicyArray{
//					&autoscaling.AutoScalingConfigurationPolicyArgs{
//						PolicyType: pulumi.Any(autoScalingConfigurationPoliciesPolicyType),
//						Capacity: &autoscaling.AutoScalingConfigurationPolicyCapacityArgs{
//							Initial: pulumi.Any(autoScalingConfigurationPoliciesCapacityInitial),
//							Max:     pulumi.Any(autoScalingConfigurationPoliciesCapacityMax),
//							Min:     pulumi.Any(autoScalingConfigurationPoliciesCapacityMin),
//						},
//						DisplayName: pulumi.Any(autoScalingConfigurationPoliciesDisplayName),
//						ExecutionSchedule: &autoscaling.AutoScalingConfigurationPolicyExecutionScheduleArgs{
//							Expression: pulumi.Any(autoScalingConfigurationPoliciesExecutionScheduleExpression),
//							Timezone:   pulumi.Any(autoScalingConfigurationPoliciesExecutionScheduleTimezone),
//							Type:       pulumi.Any(autoScalingConfigurationPoliciesExecutionScheduleType),
//						},
//						IsEnabled: pulumi.Any(autoScalingConfigurationPoliciesIsEnabled),
//						ResourceAction: &autoscaling.AutoScalingConfigurationPolicyResourceActionArgs{
//							Action:     pulumi.Any(autoScalingConfigurationPoliciesResourceActionAction),
//							ActionType: pulumi.Any(autoScalingConfigurationPoliciesResourceActionActionType),
//						},
//						Rules: autoscaling.AutoScalingConfigurationPolicyRuleArray{
//							&autoscaling.AutoScalingConfigurationPolicyRuleArgs{
//								Action: &autoscaling.AutoScalingConfigurationPolicyRuleActionArgs{
//									Type:  pulumi.Any(autoScalingConfigurationPoliciesRulesActionType),
//									Value: pulumi.Any(autoScalingConfigurationPoliciesRulesActionValue),
//								},
//								DisplayName: pulumi.Any(autoScalingConfigurationPoliciesRulesDisplayName),
//								Metric: &autoscaling.AutoScalingConfigurationPolicyRuleMetricArgs{
//									MetricType: pulumi.Any(autoScalingConfigurationPoliciesRulesMetricMetricType),
//									Threshold: &autoscaling.AutoScalingConfigurationPolicyRuleMetricThresholdArgs{
//										Operator: pulumi.Any(autoScalingConfigurationPoliciesRulesMetricThresholdOperator),
//										Value:    pulumi.Any(autoScalingConfigurationPoliciesRulesMetricThresholdValue),
//									},
//								},
//							},
//						},
//					},
//				},
//				CoolDownInSeconds: pulumi.Any(autoScalingConfigurationCoolDownInSeconds),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				DisplayName: pulumi.Any(autoScalingConfigurationDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				IsEnabled: pulumi.Any(autoScalingConfigurationIsEnabled),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AutoScalingConfigurations can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Autoscaling/autoScalingConfiguration:AutoScalingConfiguration test_auto_scaling_configuration "id"
// ```
type AutoScalingConfiguration struct {
	pulumi.CustomResourceState

	// A resource that is managed by an autoscaling configuration. The only supported type is `instancePool`.
	//
	// Each instance pool can have one autoscaling configuration.
	AutoScalingResources AutoScalingConfigurationAutoScalingResourcesOutput `pulumi:"autoScalingResources"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the autoscaling configuration.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) For threshold-based autoscaling policies, this value is the minimum period of time to wait between scaling actions. The cooldown period gives the system time to stabilize before rescaling. The minimum value is 300 seconds, which is also the default. The cooldown period starts when the instance pool reaches the running state.
	//
	// For schedule-based autoscaling policies, this value is not used.
	CoolDownInSeconds pulumi.IntOutput `pulumi:"coolDownInSeconds"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) Whether the autoscaling configuration is enabled.
	IsEnabled pulumi.BoolOutput `pulumi:"isEnabled"`
	// The maximum number of resources to scale out to.
	MaxResourceCount pulumi.IntOutput `pulumi:"maxResourceCount"`
	// The minimum number of resources to scale in to.
	MinResourceCount pulumi.IntOutput `pulumi:"minResourceCount"`
	// Autoscaling policy definitions for the autoscaling configuration. An autoscaling policy defines the criteria that trigger autoscaling actions and the actions to take.
	Policies AutoScalingConfigurationPolicyArrayOutput `pulumi:"policies"`
	// The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewAutoScalingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewAutoScalingConfiguration(ctx *pulumi.Context,
	name string, args *AutoScalingConfigurationArgs, opts ...pulumi.ResourceOption) (*AutoScalingConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoScalingResources == nil {
		return nil, errors.New("invalid value for required argument 'AutoScalingResources'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Policies == nil {
		return nil, errors.New("invalid value for required argument 'Policies'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutoScalingConfiguration
	err := ctx.RegisterResource("oci:Autoscaling/autoScalingConfiguration:AutoScalingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoScalingConfiguration gets an existing AutoScalingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoScalingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoScalingConfigurationState, opts ...pulumi.ResourceOption) (*AutoScalingConfiguration, error) {
	var resource AutoScalingConfiguration
	err := ctx.ReadResource("oci:Autoscaling/autoScalingConfiguration:AutoScalingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoScalingConfiguration resources.
type autoScalingConfigurationState struct {
	// A resource that is managed by an autoscaling configuration. The only supported type is `instancePool`.
	//
	// Each instance pool can have one autoscaling configuration.
	AutoScalingResources *AutoScalingConfigurationAutoScalingResources `pulumi:"autoScalingResources"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the autoscaling configuration.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) For threshold-based autoscaling policies, this value is the minimum period of time to wait between scaling actions. The cooldown period gives the system time to stabilize before rescaling. The minimum value is 300 seconds, which is also the default. The cooldown period starts when the instance pool reaches the running state.
	//
	// For schedule-based autoscaling policies, this value is not used.
	CoolDownInSeconds *int `pulumi:"coolDownInSeconds"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Whether the autoscaling configuration is enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// The maximum number of resources to scale out to.
	MaxResourceCount *int `pulumi:"maxResourceCount"`
	// The minimum number of resources to scale in to.
	MinResourceCount *int `pulumi:"minResourceCount"`
	// Autoscaling policy definitions for the autoscaling configuration. An autoscaling policy defines the criteria that trigger autoscaling actions and the actions to take.
	Policies []AutoScalingConfigurationPolicy `pulumi:"policies"`
	// The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type AutoScalingConfigurationState struct {
	// A resource that is managed by an autoscaling configuration. The only supported type is `instancePool`.
	//
	// Each instance pool can have one autoscaling configuration.
	AutoScalingResources AutoScalingConfigurationAutoScalingResourcesPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the autoscaling configuration.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) For threshold-based autoscaling policies, this value is the minimum period of time to wait between scaling actions. The cooldown period gives the system time to stabilize before rescaling. The minimum value is 300 seconds, which is also the default. The cooldown period starts when the instance pool reaches the running state.
	//
	// For schedule-based autoscaling policies, this value is not used.
	CoolDownInSeconds pulumi.IntPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Whether the autoscaling configuration is enabled.
	IsEnabled pulumi.BoolPtrInput
	// The maximum number of resources to scale out to.
	MaxResourceCount pulumi.IntPtrInput
	// The minimum number of resources to scale in to.
	MinResourceCount pulumi.IntPtrInput
	// Autoscaling policy definitions for the autoscaling configuration. An autoscaling policy defines the criteria that trigger autoscaling actions and the actions to take.
	Policies AutoScalingConfigurationPolicyArrayInput
	// The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (AutoScalingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoScalingConfigurationState)(nil)).Elem()
}

type autoScalingConfigurationArgs struct {
	// A resource that is managed by an autoscaling configuration. The only supported type is `instancePool`.
	//
	// Each instance pool can have one autoscaling configuration.
	AutoScalingResources AutoScalingConfigurationAutoScalingResources `pulumi:"autoScalingResources"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the autoscaling configuration.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) For threshold-based autoscaling policies, this value is the minimum period of time to wait between scaling actions. The cooldown period gives the system time to stabilize before rescaling. The minimum value is 300 seconds, which is also the default. The cooldown period starts when the instance pool reaches the running state.
	//
	// For schedule-based autoscaling policies, this value is not used.
	CoolDownInSeconds *int `pulumi:"coolDownInSeconds"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Whether the autoscaling configuration is enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Autoscaling policy definitions for the autoscaling configuration. An autoscaling policy defines the criteria that trigger autoscaling actions and the actions to take.
	Policies []AutoScalingConfigurationPolicy `pulumi:"policies"`
}

// The set of arguments for constructing a AutoScalingConfiguration resource.
type AutoScalingConfigurationArgs struct {
	// A resource that is managed by an autoscaling configuration. The only supported type is `instancePool`.
	//
	// Each instance pool can have one autoscaling configuration.
	AutoScalingResources AutoScalingConfigurationAutoScalingResourcesInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the autoscaling configuration.
	CompartmentId pulumi.StringInput
	// (Updatable) For threshold-based autoscaling policies, this value is the minimum period of time to wait between scaling actions. The cooldown period gives the system time to stabilize before rescaling. The minimum value is 300 seconds, which is also the default. The cooldown period starts when the instance pool reaches the running state.
	//
	// For schedule-based autoscaling policies, this value is not used.
	CoolDownInSeconds pulumi.IntPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Whether the autoscaling configuration is enabled.
	IsEnabled pulumi.BoolPtrInput
	// Autoscaling policy definitions for the autoscaling configuration. An autoscaling policy defines the criteria that trigger autoscaling actions and the actions to take.
	Policies AutoScalingConfigurationPolicyArrayInput
}

func (AutoScalingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoScalingConfigurationArgs)(nil)).Elem()
}

type AutoScalingConfigurationInput interface {
	pulumi.Input

	ToAutoScalingConfigurationOutput() AutoScalingConfigurationOutput
	ToAutoScalingConfigurationOutputWithContext(ctx context.Context) AutoScalingConfigurationOutput
}

func (*AutoScalingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScalingConfiguration)(nil)).Elem()
}

func (i *AutoScalingConfiguration) ToAutoScalingConfigurationOutput() AutoScalingConfigurationOutput {
	return i.ToAutoScalingConfigurationOutputWithContext(context.Background())
}

func (i *AutoScalingConfiguration) ToAutoScalingConfigurationOutputWithContext(ctx context.Context) AutoScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalingConfigurationOutput)
}

// AutoScalingConfigurationArrayInput is an input type that accepts AutoScalingConfigurationArray and AutoScalingConfigurationArrayOutput values.
// You can construct a concrete instance of `AutoScalingConfigurationArrayInput` via:
//
//	AutoScalingConfigurationArray{ AutoScalingConfigurationArgs{...} }
type AutoScalingConfigurationArrayInput interface {
	pulumi.Input

	ToAutoScalingConfigurationArrayOutput() AutoScalingConfigurationArrayOutput
	ToAutoScalingConfigurationArrayOutputWithContext(context.Context) AutoScalingConfigurationArrayOutput
}

type AutoScalingConfigurationArray []AutoScalingConfigurationInput

func (AutoScalingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoScalingConfiguration)(nil)).Elem()
}

func (i AutoScalingConfigurationArray) ToAutoScalingConfigurationArrayOutput() AutoScalingConfigurationArrayOutput {
	return i.ToAutoScalingConfigurationArrayOutputWithContext(context.Background())
}

func (i AutoScalingConfigurationArray) ToAutoScalingConfigurationArrayOutputWithContext(ctx context.Context) AutoScalingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalingConfigurationArrayOutput)
}

// AutoScalingConfigurationMapInput is an input type that accepts AutoScalingConfigurationMap and AutoScalingConfigurationMapOutput values.
// You can construct a concrete instance of `AutoScalingConfigurationMapInput` via:
//
//	AutoScalingConfigurationMap{ "key": AutoScalingConfigurationArgs{...} }
type AutoScalingConfigurationMapInput interface {
	pulumi.Input

	ToAutoScalingConfigurationMapOutput() AutoScalingConfigurationMapOutput
	ToAutoScalingConfigurationMapOutputWithContext(context.Context) AutoScalingConfigurationMapOutput
}

type AutoScalingConfigurationMap map[string]AutoScalingConfigurationInput

func (AutoScalingConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoScalingConfiguration)(nil)).Elem()
}

func (i AutoScalingConfigurationMap) ToAutoScalingConfigurationMapOutput() AutoScalingConfigurationMapOutput {
	return i.ToAutoScalingConfigurationMapOutputWithContext(context.Background())
}

func (i AutoScalingConfigurationMap) ToAutoScalingConfigurationMapOutputWithContext(ctx context.Context) AutoScalingConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalingConfigurationMapOutput)
}

type AutoScalingConfigurationOutput struct{ *pulumi.OutputState }

func (AutoScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScalingConfiguration)(nil)).Elem()
}

func (o AutoScalingConfigurationOutput) ToAutoScalingConfigurationOutput() AutoScalingConfigurationOutput {
	return o
}

func (o AutoScalingConfigurationOutput) ToAutoScalingConfigurationOutputWithContext(ctx context.Context) AutoScalingConfigurationOutput {
	return o
}

// A resource that is managed by an autoscaling configuration. The only supported type is `instancePool`.
//
// Each instance pool can have one autoscaling configuration.
func (o AutoScalingConfigurationOutput) AutoScalingResources() AutoScalingConfigurationAutoScalingResourcesOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) AutoScalingConfigurationAutoScalingResourcesOutput {
		return v.AutoScalingResources
	}).(AutoScalingConfigurationAutoScalingResourcesOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the autoscaling configuration.
func (o AutoScalingConfigurationOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) For threshold-based autoscaling policies, this value is the minimum period of time to wait between scaling actions. The cooldown period gives the system time to stabilize before rescaling. The minimum value is 300 seconds, which is also the default. The cooldown period starts when the instance pool reaches the running state.
//
// For schedule-based autoscaling policies, this value is not used.
func (o AutoScalingConfigurationOutput) CoolDownInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.IntOutput { return v.CoolDownInSeconds }).(pulumi.IntOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o AutoScalingConfigurationOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o AutoScalingConfigurationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o AutoScalingConfigurationOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) Whether the autoscaling configuration is enabled.
func (o AutoScalingConfigurationOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.BoolOutput { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The maximum number of resources to scale out to.
func (o AutoScalingConfigurationOutput) MaxResourceCount() pulumi.IntOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.IntOutput { return v.MaxResourceCount }).(pulumi.IntOutput)
}

// The minimum number of resources to scale in to.
func (o AutoScalingConfigurationOutput) MinResourceCount() pulumi.IntOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.IntOutput { return v.MinResourceCount }).(pulumi.IntOutput)
}

// Autoscaling policy definitions for the autoscaling configuration. An autoscaling policy defines the criteria that trigger autoscaling actions and the actions to take.
func (o AutoScalingConfigurationOutput) Policies() AutoScalingConfigurationPolicyArrayOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) AutoScalingConfigurationPolicyArrayOutput { return v.Policies }).(AutoScalingConfigurationPolicyArrayOutput)
}

// The date and time the autoscaling configuration was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
func (o AutoScalingConfigurationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type AutoScalingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AutoScalingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoScalingConfiguration)(nil)).Elem()
}

func (o AutoScalingConfigurationArrayOutput) ToAutoScalingConfigurationArrayOutput() AutoScalingConfigurationArrayOutput {
	return o
}

func (o AutoScalingConfigurationArrayOutput) ToAutoScalingConfigurationArrayOutputWithContext(ctx context.Context) AutoScalingConfigurationArrayOutput {
	return o
}

func (o AutoScalingConfigurationArrayOutput) Index(i pulumi.IntInput) AutoScalingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutoScalingConfiguration {
		return vs[0].([]*AutoScalingConfiguration)[vs[1].(int)]
	}).(AutoScalingConfigurationOutput)
}

type AutoScalingConfigurationMapOutput struct{ *pulumi.OutputState }

func (AutoScalingConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoScalingConfiguration)(nil)).Elem()
}

func (o AutoScalingConfigurationMapOutput) ToAutoScalingConfigurationMapOutput() AutoScalingConfigurationMapOutput {
	return o
}

func (o AutoScalingConfigurationMapOutput) ToAutoScalingConfigurationMapOutputWithContext(ctx context.Context) AutoScalingConfigurationMapOutput {
	return o
}

func (o AutoScalingConfigurationMapOutput) MapIndex(k pulumi.StringInput) AutoScalingConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutoScalingConfiguration {
		return vs[0].(map[string]*AutoScalingConfiguration)[vs[1].(string)]
	}).(AutoScalingConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoScalingConfigurationInput)(nil)).Elem(), &AutoScalingConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoScalingConfigurationArrayInput)(nil)).Elem(), AutoScalingConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoScalingConfigurationMapInput)(nil)).Elem(), AutoScalingConfigurationMap{})
	pulumi.RegisterOutputType(AutoScalingConfigurationOutput{})
	pulumi.RegisterOutputType(AutoScalingConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AutoScalingConfigurationMapOutput{})
}
