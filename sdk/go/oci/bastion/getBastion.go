// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bastion

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Bastion resource in Oracle Cloud Infrastructure Bastion service.
//
// Retrieves a bastion identified by the bastion ID. A bastion provides secured, public access to target resources in the cloud that you cannot otherwise reach from the internet.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Bastion"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Bastion.GetBastion(ctx, &bastion.GetBastionArgs{
//				BastionId: testBastionOciBastionBastion.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBastion(ctx *pulumi.Context, args *LookupBastionArgs, opts ...pulumi.InvokeOption) (*LookupBastionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBastionResult
	err := ctx.Invoke("oci:Bastion/getBastion:getBastion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBastion.
type LookupBastionArgs struct {
	// The unique identifier (OCID) of the bastion.
	BastionId string `pulumi:"bastionId"`
}

// A collection of values returned by getBastion.
type LookupBastionResult struct {
	BastionId string `pulumi:"bastionId"`
	// The type of bastion.
	BastionType string `pulumi:"bastionType"`
	// A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
	ClientCidrBlockAllowLists []string `pulumi:"clientCidrBlockAllowLists"`
	// The unique identifier (OCID) of the compartment where the bastion is located.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Flag to enable FQDN and SOCKS5 Proxy Support. Example: `ENABLED`, `DISABLED`
	DnsProxyStatus string `pulumi:"dnsProxyStatus"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The unique identifier (OCID) of the bastion, which can't be changed after creation.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The maximum amount of time that any session on the bastion can remain active.
	MaxSessionTtlInSeconds int `pulumi:"maxSessionTtlInSeconds"`
	// The maximum number of active sessions allowed on the bastion.
	MaxSessionsAllowed int `pulumi:"maxSessionsAllowed"`
	// The name of the bastion, which can't be changed after creation.
	Name string `pulumi:"name"`
	// The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
	PhoneBookEntry string `pulumi:"phoneBookEntry"`
	// The private IP address of the created private endpoint.
	PrivateEndpointIpAddress string `pulumi:"privateEndpointIpAddress"`
	// The current state of the bastion.
	State string `pulumi:"state"`
	// A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
	StaticJumpHostIpAddresses []string `pulumi:"staticJumpHostIpAddresses"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The unique identifier (OCID) of the subnet that the bastion connects to.
	TargetSubnetId string `pulumi:"targetSubnetId"`
	// The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
	TargetVcnId string `pulumi:"targetVcnId"`
	// The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupBastionOutput(ctx *pulumi.Context, args LookupBastionOutputArgs, opts ...pulumi.InvokeOption) LookupBastionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBastionResultOutput, error) {
			args := v.(LookupBastionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupBastionResult
			secret, err := ctx.InvokePackageRaw("oci:Bastion/getBastion:getBastion", args, &rv, "", opts...)
			if err != nil {
				return LookupBastionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupBastionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupBastionResultOutput), nil
			}
			return output, nil
		}).(LookupBastionResultOutput)
}

// A collection of arguments for invoking getBastion.
type LookupBastionOutputArgs struct {
	// The unique identifier (OCID) of the bastion.
	BastionId pulumi.StringInput `pulumi:"bastionId"`
}

func (LookupBastionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBastionArgs)(nil)).Elem()
}

// A collection of values returned by getBastion.
type LookupBastionResultOutput struct{ *pulumi.OutputState }

func (LookupBastionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBastionResult)(nil)).Elem()
}

func (o LookupBastionResultOutput) ToLookupBastionResultOutput() LookupBastionResultOutput {
	return o
}

func (o LookupBastionResultOutput) ToLookupBastionResultOutputWithContext(ctx context.Context) LookupBastionResultOutput {
	return o
}

func (o LookupBastionResultOutput) BastionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.BastionId }).(pulumi.StringOutput)
}

// The type of bastion.
func (o LookupBastionResultOutput) BastionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.BastionType }).(pulumi.StringOutput)
}

// A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
func (o LookupBastionResultOutput) ClientCidrBlockAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBastionResult) []string { return v.ClientCidrBlockAllowLists }).(pulumi.StringArrayOutput)
}

// The unique identifier (OCID) of the compartment where the bastion is located.
func (o LookupBastionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupBastionResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBastionResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Flag to enable FQDN and SOCKS5 Proxy Support. Example: `ENABLED`, `DISABLED`
func (o LookupBastionResultOutput) DnsProxyStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.DnsProxyStatus }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupBastionResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBastionResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The unique identifier (OCID) of the bastion, which can't be changed after creation.
func (o LookupBastionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail.
func (o LookupBastionResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The maximum amount of time that any session on the bastion can remain active.
func (o LookupBastionResultOutput) MaxSessionTtlInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBastionResult) int { return v.MaxSessionTtlInSeconds }).(pulumi.IntOutput)
}

// The maximum number of active sessions allowed on the bastion.
func (o LookupBastionResultOutput) MaxSessionsAllowed() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBastionResult) int { return v.MaxSessionsAllowed }).(pulumi.IntOutput)
}

// The name of the bastion, which can't be changed after creation.
func (o LookupBastionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
func (o LookupBastionResultOutput) PhoneBookEntry() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.PhoneBookEntry }).(pulumi.StringOutput)
}

// The private IP address of the created private endpoint.
func (o LookupBastionResultOutput) PrivateEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.PrivateEndpointIpAddress }).(pulumi.StringOutput)
}

// The current state of the bastion.
func (o LookupBastionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.State }).(pulumi.StringOutput)
}

// A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
func (o LookupBastionResultOutput) StaticJumpHostIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBastionResult) []string { return v.StaticJumpHostIpAddresses }).(pulumi.StringArrayOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupBastionResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBastionResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The unique identifier (OCID) of the subnet that the bastion connects to.
func (o LookupBastionResultOutput) TargetSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.TargetSubnetId }).(pulumi.StringOutput)
}

// The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
func (o LookupBastionResultOutput) TargetVcnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.TargetVcnId }).(pulumi.StringOutput)
}

// The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
func (o LookupBastionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
func (o LookupBastionResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBastionResultOutput{})
}
