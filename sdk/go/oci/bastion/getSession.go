// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bastion

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Session resource in Oracle Cloud Infrastructure Bastion service.
//
// Retrieves a session identified by the session ID. A bastion session lets authorized users connect to a target resource for a predetermined amount of time.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/bastion"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bastion.GetSession(ctx, &bastion.GetSessionArgs{
//				SessionId: testSessionOciBastionSession.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSession(ctx *pulumi.Context, args *LookupSessionArgs, opts ...pulumi.InvokeOption) (*LookupSessionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSessionResult
	err := ctx.Invoke("oci:Bastion/getSession:getSession", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSession.
type LookupSessionArgs struct {
	// The unique identifier (OCID) of the session.
	SessionId string `pulumi:"sessionId"`
}

// A collection of values returned by getSession.
type LookupSessionResult struct {
	// The unique identifier (OCID) of the bastion that is hosting this session.
	BastionId string `pulumi:"bastionId"`
	// The name of the bastion that is hosting this session.
	BastionName string `pulumi:"bastionName"`
	// The public key of the bastion host. You can use this to verify that you're connecting to the correct bastion.
	BastionPublicHostKeyInfo string `pulumi:"bastionPublicHostKeyInfo"`
	// The username that the session uses to connect to the target resource.
	BastionUserName string `pulumi:"bastionUserName"`
	// The name of the session.
	DisplayName string `pulumi:"displayName"`
	// The unique identifier (OCID) of the session, which can't be changed after creation.
	Id string `pulumi:"id"`
	// Public key details for a bastion session.
	KeyDetails []GetSessionKeyDetail `pulumi:"keyDetails"`
	// The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
	KeyType string `pulumi:"keyType"`
	// A message describing the current session state in more detail.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	SessionId        string `pulumi:"sessionId"`
	// The amount of time the session can remain active.
	SessionTtlInSeconds int `pulumi:"sessionTtlInSeconds"`
	// The connection message for the session.
	SshMetadata map[string]string `pulumi:"sshMetadata"`
	// The current state of the session.
	State string `pulumi:"state"`
	// Details about a bastion session's target resource.
	TargetResourceDetails []GetSessionTargetResourceDetail `pulumi:"targetResourceDetails"`
	// The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupSessionOutput(ctx *pulumi.Context, args LookupSessionOutputArgs, opts ...pulumi.InvokeOption) LookupSessionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSessionResultOutput, error) {
			args := v.(LookupSessionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Bastion/getSession:getSession", args, LookupSessionResultOutput{}, options).(LookupSessionResultOutput), nil
		}).(LookupSessionResultOutput)
}

// A collection of arguments for invoking getSession.
type LookupSessionOutputArgs struct {
	// The unique identifier (OCID) of the session.
	SessionId pulumi.StringInput `pulumi:"sessionId"`
}

func (LookupSessionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSessionArgs)(nil)).Elem()
}

// A collection of values returned by getSession.
type LookupSessionResultOutput struct{ *pulumi.OutputState }

func (LookupSessionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSessionResult)(nil)).Elem()
}

func (o LookupSessionResultOutput) ToLookupSessionResultOutput() LookupSessionResultOutput {
	return o
}

func (o LookupSessionResultOutput) ToLookupSessionResultOutputWithContext(ctx context.Context) LookupSessionResultOutput {
	return o
}

// The unique identifier (OCID) of the bastion that is hosting this session.
func (o LookupSessionResultOutput) BastionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.BastionId }).(pulumi.StringOutput)
}

// The name of the bastion that is hosting this session.
func (o LookupSessionResultOutput) BastionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.BastionName }).(pulumi.StringOutput)
}

// The public key of the bastion host. You can use this to verify that you're connecting to the correct bastion.
func (o LookupSessionResultOutput) BastionPublicHostKeyInfo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.BastionPublicHostKeyInfo }).(pulumi.StringOutput)
}

// The username that the session uses to connect to the target resource.
func (o LookupSessionResultOutput) BastionUserName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.BastionUserName }).(pulumi.StringOutput)
}

// The name of the session.
func (o LookupSessionResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The unique identifier (OCID) of the session, which can't be changed after creation.
func (o LookupSessionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Public key details for a bastion session.
func (o LookupSessionResultOutput) KeyDetails() GetSessionKeyDetailArrayOutput {
	return o.ApplyT(func(v LookupSessionResult) []GetSessionKeyDetail { return v.KeyDetails }).(GetSessionKeyDetailArrayOutput)
}

// The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
func (o LookupSessionResultOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.KeyType }).(pulumi.StringOutput)
}

// A message describing the current session state in more detail.
func (o LookupSessionResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o LookupSessionResultOutput) SessionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.SessionId }).(pulumi.StringOutput)
}

// The amount of time the session can remain active.
func (o LookupSessionResultOutput) SessionTtlInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSessionResult) int { return v.SessionTtlInSeconds }).(pulumi.IntOutput)
}

// The connection message for the session.
func (o LookupSessionResultOutput) SshMetadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSessionResult) map[string]string { return v.SshMetadata }).(pulumi.StringMapOutput)
}

// The current state of the session.
func (o LookupSessionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.State }).(pulumi.StringOutput)
}

// Details about a bastion session's target resource.
func (o LookupSessionResultOutput) TargetResourceDetails() GetSessionTargetResourceDetailArrayOutput {
	return o.ApplyT(func(v LookupSessionResult) []GetSessionTargetResourceDetail { return v.TargetResourceDetails }).(GetSessionTargetResourceDetailArrayOutput)
}

// The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
func (o LookupSessionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
func (o LookupSessionResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSessionResultOutput{})
}
