// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bastion

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Sessions in Oracle Cloud Infrastructure Bastion service.
//
// Retrieves a list of SessionSummary objects for an existing bastion. Bastion sessions let authorized users connect to a target resource for a predetermined amount of time.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/bastion"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bastion.GetSessions(ctx, &bastion.GetSessionsArgs{
//				BastionId:             testBastion.Id,
//				DisplayName:           pulumi.StringRef(sessionDisplayName),
//				SessionId:             pulumi.StringRef(testSession.Id),
//				SessionLifecycleState: pulumi.StringRef(sessionSessionLifecycleState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSessions(ctx *pulumi.Context, args *GetSessionsArgs, opts ...pulumi.InvokeOption) (*GetSessionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSessionsResult
	err := ctx.Invoke("oci:Bastion/getSessions:getSessions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSessions.
type GetSessionsArgs struct {
	// The unique identifier (OCID) of the bastion in which to list sessions.
	BastionId string `pulumi:"bastionId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetSessionsFilter `pulumi:"filters"`
	// The unique identifier (OCID) of the session in which to list resources.
	SessionId *string `pulumi:"sessionId"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	SessionLifecycleState *string `pulumi:"sessionLifecycleState"`
}

// A collection of values returned by getSessions.
type GetSessionsResult struct {
	// The unique identifier (OCID) of the bastion that is hosting this session.
	BastionId string `pulumi:"bastionId"`
	// The name of the session.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetSessionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string  `pulumi:"id"`
	SessionId             *string `pulumi:"sessionId"`
	SessionLifecycleState *string `pulumi:"sessionLifecycleState"`
	// The list of sessions.
	Sessions []GetSessionsSession `pulumi:"sessions"`
}

func GetSessionsOutput(ctx *pulumi.Context, args GetSessionsOutputArgs, opts ...pulumi.InvokeOption) GetSessionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSessionsResultOutput, error) {
			args := v.(GetSessionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Bastion/getSessions:getSessions", args, GetSessionsResultOutput{}, options).(GetSessionsResultOutput), nil
		}).(GetSessionsResultOutput)
}

// A collection of arguments for invoking getSessions.
type GetSessionsOutputArgs struct {
	// The unique identifier (OCID) of the bastion in which to list sessions.
	BastionId pulumi.StringInput `pulumi:"bastionId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput       `pulumi:"displayName"`
	Filters     GetSessionsFilterArrayInput `pulumi:"filters"`
	// The unique identifier (OCID) of the session in which to list resources.
	SessionId pulumi.StringPtrInput `pulumi:"sessionId"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	SessionLifecycleState pulumi.StringPtrInput `pulumi:"sessionLifecycleState"`
}

func (GetSessionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionsArgs)(nil)).Elem()
}

// A collection of values returned by getSessions.
type GetSessionsResultOutput struct{ *pulumi.OutputState }

func (GetSessionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionsResult)(nil)).Elem()
}

func (o GetSessionsResultOutput) ToGetSessionsResultOutput() GetSessionsResultOutput {
	return o
}

func (o GetSessionsResultOutput) ToGetSessionsResultOutputWithContext(ctx context.Context) GetSessionsResultOutput {
	return o
}

// The unique identifier (OCID) of the bastion that is hosting this session.
func (o GetSessionsResultOutput) BastionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsResult) string { return v.BastionId }).(pulumi.StringOutput)
}

// The name of the session.
func (o GetSessionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSessionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetSessionsResultOutput) Filters() GetSessionsFilterArrayOutput {
	return o.ApplyT(func(v GetSessionsResult) []GetSessionsFilter { return v.Filters }).(GetSessionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSessionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSessionsResultOutput) SessionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSessionsResult) *string { return v.SessionId }).(pulumi.StringPtrOutput)
}

func (o GetSessionsResultOutput) SessionLifecycleState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSessionsResult) *string { return v.SessionLifecycleState }).(pulumi.StringPtrOutput)
}

// The list of sessions.
func (o GetSessionsResultOutput) Sessions() GetSessionsSessionArrayOutput {
	return o.ApplyT(func(v GetSessionsResult) []GetSessionsSession { return v.Sessions }).(GetSessionsSessionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSessionsResultOutput{})
}
