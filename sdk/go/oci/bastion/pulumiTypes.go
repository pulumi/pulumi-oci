// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bastion

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SessionKeyDetails struct {
	// The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
	PublicKeyContent string `pulumi:"publicKeyContent"`
}

// SessionKeyDetailsInput is an input type that accepts SessionKeyDetailsArgs and SessionKeyDetailsOutput values.
// You can construct a concrete instance of `SessionKeyDetailsInput` via:
//
//	SessionKeyDetailsArgs{...}
type SessionKeyDetailsInput interface {
	pulumi.Input

	ToSessionKeyDetailsOutput() SessionKeyDetailsOutput
	ToSessionKeyDetailsOutputWithContext(context.Context) SessionKeyDetailsOutput
}

type SessionKeyDetailsArgs struct {
	// The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
	PublicKeyContent pulumi.StringInput `pulumi:"publicKeyContent"`
}

func (SessionKeyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionKeyDetails)(nil)).Elem()
}

func (i SessionKeyDetailsArgs) ToSessionKeyDetailsOutput() SessionKeyDetailsOutput {
	return i.ToSessionKeyDetailsOutputWithContext(context.Background())
}

func (i SessionKeyDetailsArgs) ToSessionKeyDetailsOutputWithContext(ctx context.Context) SessionKeyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionKeyDetailsOutput)
}

func (i SessionKeyDetailsArgs) ToSessionKeyDetailsPtrOutput() SessionKeyDetailsPtrOutput {
	return i.ToSessionKeyDetailsPtrOutputWithContext(context.Background())
}

func (i SessionKeyDetailsArgs) ToSessionKeyDetailsPtrOutputWithContext(ctx context.Context) SessionKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionKeyDetailsOutput).ToSessionKeyDetailsPtrOutputWithContext(ctx)
}

// SessionKeyDetailsPtrInput is an input type that accepts SessionKeyDetailsArgs, SessionKeyDetailsPtr and SessionKeyDetailsPtrOutput values.
// You can construct a concrete instance of `SessionKeyDetailsPtrInput` via:
//
//	        SessionKeyDetailsArgs{...}
//
//	or:
//
//	        nil
type SessionKeyDetailsPtrInput interface {
	pulumi.Input

	ToSessionKeyDetailsPtrOutput() SessionKeyDetailsPtrOutput
	ToSessionKeyDetailsPtrOutputWithContext(context.Context) SessionKeyDetailsPtrOutput
}

type sessionKeyDetailsPtrType SessionKeyDetailsArgs

func SessionKeyDetailsPtr(v *SessionKeyDetailsArgs) SessionKeyDetailsPtrInput {
	return (*sessionKeyDetailsPtrType)(v)
}

func (*sessionKeyDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionKeyDetails)(nil)).Elem()
}

func (i *sessionKeyDetailsPtrType) ToSessionKeyDetailsPtrOutput() SessionKeyDetailsPtrOutput {
	return i.ToSessionKeyDetailsPtrOutputWithContext(context.Background())
}

func (i *sessionKeyDetailsPtrType) ToSessionKeyDetailsPtrOutputWithContext(ctx context.Context) SessionKeyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionKeyDetailsPtrOutput)
}

type SessionKeyDetailsOutput struct{ *pulumi.OutputState }

func (SessionKeyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionKeyDetails)(nil)).Elem()
}

func (o SessionKeyDetailsOutput) ToSessionKeyDetailsOutput() SessionKeyDetailsOutput {
	return o
}

func (o SessionKeyDetailsOutput) ToSessionKeyDetailsOutputWithContext(ctx context.Context) SessionKeyDetailsOutput {
	return o
}

func (o SessionKeyDetailsOutput) ToSessionKeyDetailsPtrOutput() SessionKeyDetailsPtrOutput {
	return o.ToSessionKeyDetailsPtrOutputWithContext(context.Background())
}

func (o SessionKeyDetailsOutput) ToSessionKeyDetailsPtrOutputWithContext(ctx context.Context) SessionKeyDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SessionKeyDetails) *SessionKeyDetails {
		return &v
	}).(SessionKeyDetailsPtrOutput)
}

// The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
func (o SessionKeyDetailsOutput) PublicKeyContent() pulumi.StringOutput {
	return o.ApplyT(func(v SessionKeyDetails) string { return v.PublicKeyContent }).(pulumi.StringOutput)
}

type SessionKeyDetailsPtrOutput struct{ *pulumi.OutputState }

func (SessionKeyDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionKeyDetails)(nil)).Elem()
}

func (o SessionKeyDetailsPtrOutput) ToSessionKeyDetailsPtrOutput() SessionKeyDetailsPtrOutput {
	return o
}

func (o SessionKeyDetailsPtrOutput) ToSessionKeyDetailsPtrOutputWithContext(ctx context.Context) SessionKeyDetailsPtrOutput {
	return o
}

func (o SessionKeyDetailsPtrOutput) Elem() SessionKeyDetailsOutput {
	return o.ApplyT(func(v *SessionKeyDetails) SessionKeyDetails {
		if v != nil {
			return *v
		}
		var ret SessionKeyDetails
		return ret
	}).(SessionKeyDetailsOutput)
}

// The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
func (o SessionKeyDetailsPtrOutput) PublicKeyContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SessionKeyDetails) *string {
		if v == nil {
			return nil
		}
		return &v.PublicKeyContent
	}).(pulumi.StringPtrOutput)
}

type SessionTargetResourceDetails struct {
	// The session type.
	SessionType string `pulumi:"sessionType"`
	// The display name of the target Compute instance that the session connects to.
	TargetResourceDisplayName *string `pulumi:"targetResourceDisplayName"`
	// The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to. It's optional depends on the type of session you want to create.
	// * (Required) For MANAGED_SSH session type, we can only use targetResourceId to create session.
	// * (Optional) For PORT_FORWARDING session type, you must either use targetResourceId or target_resource_private_ip_address
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The name of the user on the target resource operating system that the session uses for the connection.
	TargetResourceOperatingSystemUserName *string `pulumi:"targetResourceOperatingSystemUserName"`
	// The port number to connect to on the target resource.
	TargetResourcePort *int `pulumi:"targetResourcePort"`
	// The private IP address of the target resource that the session connects to. For PORT_FORWARDING session type, you must either use targetResourceId or target_resource_private_ip_address
	TargetResourcePrivateIpAddress *string `pulumi:"targetResourcePrivateIpAddress"`
}

// SessionTargetResourceDetailsInput is an input type that accepts SessionTargetResourceDetailsArgs and SessionTargetResourceDetailsOutput values.
// You can construct a concrete instance of `SessionTargetResourceDetailsInput` via:
//
//	SessionTargetResourceDetailsArgs{...}
type SessionTargetResourceDetailsInput interface {
	pulumi.Input

	ToSessionTargetResourceDetailsOutput() SessionTargetResourceDetailsOutput
	ToSessionTargetResourceDetailsOutputWithContext(context.Context) SessionTargetResourceDetailsOutput
}

type SessionTargetResourceDetailsArgs struct {
	// The session type.
	SessionType pulumi.StringInput `pulumi:"sessionType"`
	// The display name of the target Compute instance that the session connects to.
	TargetResourceDisplayName pulumi.StringPtrInput `pulumi:"targetResourceDisplayName"`
	// The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to. It's optional depends on the type of session you want to create.
	// * (Required) For MANAGED_SSH session type, we can only use targetResourceId to create session.
	// * (Optional) For PORT_FORWARDING session type, you must either use targetResourceId or target_resource_private_ip_address
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The name of the user on the target resource operating system that the session uses for the connection.
	TargetResourceOperatingSystemUserName pulumi.StringPtrInput `pulumi:"targetResourceOperatingSystemUserName"`
	// The port number to connect to on the target resource.
	TargetResourcePort pulumi.IntPtrInput `pulumi:"targetResourcePort"`
	// The private IP address of the target resource that the session connects to. For PORT_FORWARDING session type, you must either use targetResourceId or target_resource_private_ip_address
	TargetResourcePrivateIpAddress pulumi.StringPtrInput `pulumi:"targetResourcePrivateIpAddress"`
}

func (SessionTargetResourceDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionTargetResourceDetails)(nil)).Elem()
}

func (i SessionTargetResourceDetailsArgs) ToSessionTargetResourceDetailsOutput() SessionTargetResourceDetailsOutput {
	return i.ToSessionTargetResourceDetailsOutputWithContext(context.Background())
}

func (i SessionTargetResourceDetailsArgs) ToSessionTargetResourceDetailsOutputWithContext(ctx context.Context) SessionTargetResourceDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionTargetResourceDetailsOutput)
}

func (i SessionTargetResourceDetailsArgs) ToSessionTargetResourceDetailsPtrOutput() SessionTargetResourceDetailsPtrOutput {
	return i.ToSessionTargetResourceDetailsPtrOutputWithContext(context.Background())
}

func (i SessionTargetResourceDetailsArgs) ToSessionTargetResourceDetailsPtrOutputWithContext(ctx context.Context) SessionTargetResourceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionTargetResourceDetailsOutput).ToSessionTargetResourceDetailsPtrOutputWithContext(ctx)
}

// SessionTargetResourceDetailsPtrInput is an input type that accepts SessionTargetResourceDetailsArgs, SessionTargetResourceDetailsPtr and SessionTargetResourceDetailsPtrOutput values.
// You can construct a concrete instance of `SessionTargetResourceDetailsPtrInput` via:
//
//	        SessionTargetResourceDetailsArgs{...}
//
//	or:
//
//	        nil
type SessionTargetResourceDetailsPtrInput interface {
	pulumi.Input

	ToSessionTargetResourceDetailsPtrOutput() SessionTargetResourceDetailsPtrOutput
	ToSessionTargetResourceDetailsPtrOutputWithContext(context.Context) SessionTargetResourceDetailsPtrOutput
}

type sessionTargetResourceDetailsPtrType SessionTargetResourceDetailsArgs

func SessionTargetResourceDetailsPtr(v *SessionTargetResourceDetailsArgs) SessionTargetResourceDetailsPtrInput {
	return (*sessionTargetResourceDetailsPtrType)(v)
}

func (*sessionTargetResourceDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionTargetResourceDetails)(nil)).Elem()
}

func (i *sessionTargetResourceDetailsPtrType) ToSessionTargetResourceDetailsPtrOutput() SessionTargetResourceDetailsPtrOutput {
	return i.ToSessionTargetResourceDetailsPtrOutputWithContext(context.Background())
}

func (i *sessionTargetResourceDetailsPtrType) ToSessionTargetResourceDetailsPtrOutputWithContext(ctx context.Context) SessionTargetResourceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionTargetResourceDetailsPtrOutput)
}

type SessionTargetResourceDetailsOutput struct{ *pulumi.OutputState }

func (SessionTargetResourceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionTargetResourceDetails)(nil)).Elem()
}

func (o SessionTargetResourceDetailsOutput) ToSessionTargetResourceDetailsOutput() SessionTargetResourceDetailsOutput {
	return o
}

func (o SessionTargetResourceDetailsOutput) ToSessionTargetResourceDetailsOutputWithContext(ctx context.Context) SessionTargetResourceDetailsOutput {
	return o
}

func (o SessionTargetResourceDetailsOutput) ToSessionTargetResourceDetailsPtrOutput() SessionTargetResourceDetailsPtrOutput {
	return o.ToSessionTargetResourceDetailsPtrOutputWithContext(context.Background())
}

func (o SessionTargetResourceDetailsOutput) ToSessionTargetResourceDetailsPtrOutputWithContext(ctx context.Context) SessionTargetResourceDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SessionTargetResourceDetails) *SessionTargetResourceDetails {
		return &v
	}).(SessionTargetResourceDetailsPtrOutput)
}

// The session type.
func (o SessionTargetResourceDetailsOutput) SessionType() pulumi.StringOutput {
	return o.ApplyT(func(v SessionTargetResourceDetails) string { return v.SessionType }).(pulumi.StringOutput)
}

// The display name of the target Compute instance that the session connects to.
func (o SessionTargetResourceDetailsOutput) TargetResourceDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionTargetResourceDetails) *string { return v.TargetResourceDisplayName }).(pulumi.StringPtrOutput)
}

// The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to. It's optional depends on the type of session you want to create.
// * (Required) For MANAGED_SSH session type, we can only use targetResourceId to create session.
// * (Optional) For PORT_FORWARDING session type, you must either use targetResourceId or target_resource_private_ip_address
func (o SessionTargetResourceDetailsOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionTargetResourceDetails) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The name of the user on the target resource operating system that the session uses for the connection.
func (o SessionTargetResourceDetailsOutput) TargetResourceOperatingSystemUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionTargetResourceDetails) *string { return v.TargetResourceOperatingSystemUserName }).(pulumi.StringPtrOutput)
}

// The port number to connect to on the target resource.
func (o SessionTargetResourceDetailsOutput) TargetResourcePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SessionTargetResourceDetails) *int { return v.TargetResourcePort }).(pulumi.IntPtrOutput)
}

// The private IP address of the target resource that the session connects to. For PORT_FORWARDING session type, you must either use targetResourceId or target_resource_private_ip_address
func (o SessionTargetResourceDetailsOutput) TargetResourcePrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionTargetResourceDetails) *string { return v.TargetResourcePrivateIpAddress }).(pulumi.StringPtrOutput)
}

type SessionTargetResourceDetailsPtrOutput struct{ *pulumi.OutputState }

func (SessionTargetResourceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionTargetResourceDetails)(nil)).Elem()
}

func (o SessionTargetResourceDetailsPtrOutput) ToSessionTargetResourceDetailsPtrOutput() SessionTargetResourceDetailsPtrOutput {
	return o
}

func (o SessionTargetResourceDetailsPtrOutput) ToSessionTargetResourceDetailsPtrOutputWithContext(ctx context.Context) SessionTargetResourceDetailsPtrOutput {
	return o
}

func (o SessionTargetResourceDetailsPtrOutput) Elem() SessionTargetResourceDetailsOutput {
	return o.ApplyT(func(v *SessionTargetResourceDetails) SessionTargetResourceDetails {
		if v != nil {
			return *v
		}
		var ret SessionTargetResourceDetails
		return ret
	}).(SessionTargetResourceDetailsOutput)
}

// The session type.
func (o SessionTargetResourceDetailsPtrOutput) SessionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SessionTargetResourceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.SessionType
	}).(pulumi.StringPtrOutput)
}

// The display name of the target Compute instance that the session connects to.
func (o SessionTargetResourceDetailsPtrOutput) TargetResourceDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SessionTargetResourceDetails) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourceDisplayName
	}).(pulumi.StringPtrOutput)
}

// The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to. It's optional depends on the type of session you want to create.
// * (Required) For MANAGED_SSH session type, we can only use targetResourceId to create session.
// * (Optional) For PORT_FORWARDING session type, you must either use targetResourceId or target_resource_private_ip_address
func (o SessionTargetResourceDetailsPtrOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SessionTargetResourceDetails) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourceId
	}).(pulumi.StringPtrOutput)
}

// The name of the user on the target resource operating system that the session uses for the connection.
func (o SessionTargetResourceDetailsPtrOutput) TargetResourceOperatingSystemUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SessionTargetResourceDetails) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourceOperatingSystemUserName
	}).(pulumi.StringPtrOutput)
}

// The port number to connect to on the target resource.
func (o SessionTargetResourceDetailsPtrOutput) TargetResourcePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SessionTargetResourceDetails) *int {
		if v == nil {
			return nil
		}
		return v.TargetResourcePort
	}).(pulumi.IntPtrOutput)
}

// The private IP address of the target resource that the session connects to. For PORT_FORWARDING session type, you must either use targetResourceId or target_resource_private_ip_address
func (o SessionTargetResourceDetailsPtrOutput) TargetResourcePrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SessionTargetResourceDetails) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourcePrivateIpAddress
	}).(pulumi.StringPtrOutput)
}

type GetBastionsBastion struct {
	// The type of bastion.
	BastionType string `pulumi:"bastionType"`
	// A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
	ClientCidrBlockAllowLists []string `pulumi:"clientCidrBlockAllowLists"`
	// The unique identifier (OCID) of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The unique identifier (OCID) of the bastion, which can't be changed after creation.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The maximum amount of time that any session on the bastion can remain active.
	MaxSessionTtlInSeconds int `pulumi:"maxSessionTtlInSeconds"`
	// The maximum number of active sessions allowed on the bastion.
	MaxSessionsAllowed int `pulumi:"maxSessionsAllowed"`
	// A filter to return only resources that match the entire name given.
	Name string `pulumi:"name"`
	// The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
	PhoneBookEntry string `pulumi:"phoneBookEntry"`
	// The private IP address of the created private endpoint.
	PrivateEndpointIpAddress string `pulumi:"privateEndpointIpAddress"`
	// The current state of the bastion.
	State string `pulumi:"state"`
	// A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
	StaticJumpHostIpAddresses []string `pulumi:"staticJumpHostIpAddresses"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The unique identifier (OCID) of the subnet that the bastion connects to.
	TargetSubnetId string `pulumi:"targetSubnetId"`
	// The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
	TargetVcnId string `pulumi:"targetVcnId"`
	// The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetBastionsBastionInput is an input type that accepts GetBastionsBastionArgs and GetBastionsBastionOutput values.
// You can construct a concrete instance of `GetBastionsBastionInput` via:
//
//	GetBastionsBastionArgs{...}
type GetBastionsBastionInput interface {
	pulumi.Input

	ToGetBastionsBastionOutput() GetBastionsBastionOutput
	ToGetBastionsBastionOutputWithContext(context.Context) GetBastionsBastionOutput
}

type GetBastionsBastionArgs struct {
	// The type of bastion.
	BastionType pulumi.StringInput `pulumi:"bastionType"`
	// A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
	ClientCidrBlockAllowLists pulumi.StringArrayInput `pulumi:"clientCidrBlockAllowLists"`
	// The unique identifier (OCID) of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The unique identifier (OCID) of the bastion, which can't be changed after creation.
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The maximum amount of time that any session on the bastion can remain active.
	MaxSessionTtlInSeconds pulumi.IntInput `pulumi:"maxSessionTtlInSeconds"`
	// The maximum number of active sessions allowed on the bastion.
	MaxSessionsAllowed pulumi.IntInput `pulumi:"maxSessionsAllowed"`
	// A filter to return only resources that match the entire name given.
	Name pulumi.StringInput `pulumi:"name"`
	// The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
	PhoneBookEntry pulumi.StringInput `pulumi:"phoneBookEntry"`
	// The private IP address of the created private endpoint.
	PrivateEndpointIpAddress pulumi.StringInput `pulumi:"privateEndpointIpAddress"`
	// The current state of the bastion.
	State pulumi.StringInput `pulumi:"state"`
	// A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
	StaticJumpHostIpAddresses pulumi.StringArrayInput `pulumi:"staticJumpHostIpAddresses"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The unique identifier (OCID) of the subnet that the bastion connects to.
	TargetSubnetId pulumi.StringInput `pulumi:"targetSubnetId"`
	// The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
	TargetVcnId pulumi.StringInput `pulumi:"targetVcnId"`
	// The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetBastionsBastionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBastionsBastion)(nil)).Elem()
}

func (i GetBastionsBastionArgs) ToGetBastionsBastionOutput() GetBastionsBastionOutput {
	return i.ToGetBastionsBastionOutputWithContext(context.Background())
}

func (i GetBastionsBastionArgs) ToGetBastionsBastionOutputWithContext(ctx context.Context) GetBastionsBastionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBastionsBastionOutput)
}

// GetBastionsBastionArrayInput is an input type that accepts GetBastionsBastionArray and GetBastionsBastionArrayOutput values.
// You can construct a concrete instance of `GetBastionsBastionArrayInput` via:
//
//	GetBastionsBastionArray{ GetBastionsBastionArgs{...} }
type GetBastionsBastionArrayInput interface {
	pulumi.Input

	ToGetBastionsBastionArrayOutput() GetBastionsBastionArrayOutput
	ToGetBastionsBastionArrayOutputWithContext(context.Context) GetBastionsBastionArrayOutput
}

type GetBastionsBastionArray []GetBastionsBastionInput

func (GetBastionsBastionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBastionsBastion)(nil)).Elem()
}

func (i GetBastionsBastionArray) ToGetBastionsBastionArrayOutput() GetBastionsBastionArrayOutput {
	return i.ToGetBastionsBastionArrayOutputWithContext(context.Background())
}

func (i GetBastionsBastionArray) ToGetBastionsBastionArrayOutputWithContext(ctx context.Context) GetBastionsBastionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBastionsBastionArrayOutput)
}

type GetBastionsBastionOutput struct{ *pulumi.OutputState }

func (GetBastionsBastionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBastionsBastion)(nil)).Elem()
}

func (o GetBastionsBastionOutput) ToGetBastionsBastionOutput() GetBastionsBastionOutput {
	return o
}

func (o GetBastionsBastionOutput) ToGetBastionsBastionOutputWithContext(ctx context.Context) GetBastionsBastionOutput {
	return o
}

// The type of bastion.
func (o GetBastionsBastionOutput) BastionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.BastionType }).(pulumi.StringOutput)
}

// A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
func (o GetBastionsBastionOutput) ClientCidrBlockAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBastionsBastion) []string { return v.ClientCidrBlockAllowLists }).(pulumi.StringArrayOutput)
}

// The unique identifier (OCID) of the compartment in which to list resources.
func (o GetBastionsBastionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetBastionsBastionOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetBastionsBastion) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetBastionsBastionOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetBastionsBastion) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The unique identifier (OCID) of the bastion, which can't be changed after creation.
func (o GetBastionsBastionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail.
func (o GetBastionsBastionOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The maximum amount of time that any session on the bastion can remain active.
func (o GetBastionsBastionOutput) MaxSessionTtlInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetBastionsBastion) int { return v.MaxSessionTtlInSeconds }).(pulumi.IntOutput)
}

// The maximum number of active sessions allowed on the bastion.
func (o GetBastionsBastionOutput) MaxSessionsAllowed() pulumi.IntOutput {
	return o.ApplyT(func(v GetBastionsBastion) int { return v.MaxSessionsAllowed }).(pulumi.IntOutput)
}

// A filter to return only resources that match the entire name given.
func (o GetBastionsBastionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.Name }).(pulumi.StringOutput)
}

// The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
func (o GetBastionsBastionOutput) PhoneBookEntry() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.PhoneBookEntry }).(pulumi.StringOutput)
}

// The private IP address of the created private endpoint.
func (o GetBastionsBastionOutput) PrivateEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.PrivateEndpointIpAddress }).(pulumi.StringOutput)
}

// The current state of the bastion.
func (o GetBastionsBastionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.State }).(pulumi.StringOutput)
}

// A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
func (o GetBastionsBastionOutput) StaticJumpHostIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBastionsBastion) []string { return v.StaticJumpHostIpAddresses }).(pulumi.StringArrayOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetBastionsBastionOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetBastionsBastion) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The unique identifier (OCID) of the subnet that the bastion connects to.
func (o GetBastionsBastionOutput) TargetSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.TargetSubnetId }).(pulumi.StringOutput)
}

// The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
func (o GetBastionsBastionOutput) TargetVcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.TargetVcnId }).(pulumi.StringOutput)
}

// The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
func (o GetBastionsBastionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
func (o GetBastionsBastionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsBastion) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetBastionsBastionArrayOutput struct{ *pulumi.OutputState }

func (GetBastionsBastionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBastionsBastion)(nil)).Elem()
}

func (o GetBastionsBastionArrayOutput) ToGetBastionsBastionArrayOutput() GetBastionsBastionArrayOutput {
	return o
}

func (o GetBastionsBastionArrayOutput) ToGetBastionsBastionArrayOutputWithContext(ctx context.Context) GetBastionsBastionArrayOutput {
	return o
}

func (o GetBastionsBastionArrayOutput) Index(i pulumi.IntInput) GetBastionsBastionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBastionsBastion {
		return vs[0].([]GetBastionsBastion)[vs[1].(int)]
	}).(GetBastionsBastionOutput)
}

type GetBastionsFilter struct {
	// A filter to return only resources that match the entire name given.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetBastionsFilterInput is an input type that accepts GetBastionsFilterArgs and GetBastionsFilterOutput values.
// You can construct a concrete instance of `GetBastionsFilterInput` via:
//
//	GetBastionsFilterArgs{...}
type GetBastionsFilterInput interface {
	pulumi.Input

	ToGetBastionsFilterOutput() GetBastionsFilterOutput
	ToGetBastionsFilterOutputWithContext(context.Context) GetBastionsFilterOutput
}

type GetBastionsFilterArgs struct {
	// A filter to return only resources that match the entire name given.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBastionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBastionsFilter)(nil)).Elem()
}

func (i GetBastionsFilterArgs) ToGetBastionsFilterOutput() GetBastionsFilterOutput {
	return i.ToGetBastionsFilterOutputWithContext(context.Background())
}

func (i GetBastionsFilterArgs) ToGetBastionsFilterOutputWithContext(ctx context.Context) GetBastionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBastionsFilterOutput)
}

// GetBastionsFilterArrayInput is an input type that accepts GetBastionsFilterArray and GetBastionsFilterArrayOutput values.
// You can construct a concrete instance of `GetBastionsFilterArrayInput` via:
//
//	GetBastionsFilterArray{ GetBastionsFilterArgs{...} }
type GetBastionsFilterArrayInput interface {
	pulumi.Input

	ToGetBastionsFilterArrayOutput() GetBastionsFilterArrayOutput
	ToGetBastionsFilterArrayOutputWithContext(context.Context) GetBastionsFilterArrayOutput
}

type GetBastionsFilterArray []GetBastionsFilterInput

func (GetBastionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBastionsFilter)(nil)).Elem()
}

func (i GetBastionsFilterArray) ToGetBastionsFilterArrayOutput() GetBastionsFilterArrayOutput {
	return i.ToGetBastionsFilterArrayOutputWithContext(context.Background())
}

func (i GetBastionsFilterArray) ToGetBastionsFilterArrayOutputWithContext(ctx context.Context) GetBastionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBastionsFilterArrayOutput)
}

type GetBastionsFilterOutput struct{ *pulumi.OutputState }

func (GetBastionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBastionsFilter)(nil)).Elem()
}

func (o GetBastionsFilterOutput) ToGetBastionsFilterOutput() GetBastionsFilterOutput {
	return o
}

func (o GetBastionsFilterOutput) ToGetBastionsFilterOutputWithContext(ctx context.Context) GetBastionsFilterOutput {
	return o
}

// A filter to return only resources that match the entire name given.
func (o GetBastionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBastionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetBastionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetBastionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetBastionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBastionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBastionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetBastionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBastionsFilter)(nil)).Elem()
}

func (o GetBastionsFilterArrayOutput) ToGetBastionsFilterArrayOutput() GetBastionsFilterArrayOutput {
	return o
}

func (o GetBastionsFilterArrayOutput) ToGetBastionsFilterArrayOutputWithContext(ctx context.Context) GetBastionsFilterArrayOutput {
	return o
}

func (o GetBastionsFilterArrayOutput) Index(i pulumi.IntInput) GetBastionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBastionsFilter {
		return vs[0].([]GetBastionsFilter)[vs[1].(int)]
	}).(GetBastionsFilterOutput)
}

type GetSessionKeyDetail struct {
	// The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
	PublicKeyContent string `pulumi:"publicKeyContent"`
}

// GetSessionKeyDetailInput is an input type that accepts GetSessionKeyDetailArgs and GetSessionKeyDetailOutput values.
// You can construct a concrete instance of `GetSessionKeyDetailInput` via:
//
//	GetSessionKeyDetailArgs{...}
type GetSessionKeyDetailInput interface {
	pulumi.Input

	ToGetSessionKeyDetailOutput() GetSessionKeyDetailOutput
	ToGetSessionKeyDetailOutputWithContext(context.Context) GetSessionKeyDetailOutput
}

type GetSessionKeyDetailArgs struct {
	// The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
	PublicKeyContent pulumi.StringInput `pulumi:"publicKeyContent"`
}

func (GetSessionKeyDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionKeyDetail)(nil)).Elem()
}

func (i GetSessionKeyDetailArgs) ToGetSessionKeyDetailOutput() GetSessionKeyDetailOutput {
	return i.ToGetSessionKeyDetailOutputWithContext(context.Background())
}

func (i GetSessionKeyDetailArgs) ToGetSessionKeyDetailOutputWithContext(ctx context.Context) GetSessionKeyDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionKeyDetailOutput)
}

// GetSessionKeyDetailArrayInput is an input type that accepts GetSessionKeyDetailArray and GetSessionKeyDetailArrayOutput values.
// You can construct a concrete instance of `GetSessionKeyDetailArrayInput` via:
//
//	GetSessionKeyDetailArray{ GetSessionKeyDetailArgs{...} }
type GetSessionKeyDetailArrayInput interface {
	pulumi.Input

	ToGetSessionKeyDetailArrayOutput() GetSessionKeyDetailArrayOutput
	ToGetSessionKeyDetailArrayOutputWithContext(context.Context) GetSessionKeyDetailArrayOutput
}

type GetSessionKeyDetailArray []GetSessionKeyDetailInput

func (GetSessionKeyDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionKeyDetail)(nil)).Elem()
}

func (i GetSessionKeyDetailArray) ToGetSessionKeyDetailArrayOutput() GetSessionKeyDetailArrayOutput {
	return i.ToGetSessionKeyDetailArrayOutputWithContext(context.Background())
}

func (i GetSessionKeyDetailArray) ToGetSessionKeyDetailArrayOutputWithContext(ctx context.Context) GetSessionKeyDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionKeyDetailArrayOutput)
}

type GetSessionKeyDetailOutput struct{ *pulumi.OutputState }

func (GetSessionKeyDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionKeyDetail)(nil)).Elem()
}

func (o GetSessionKeyDetailOutput) ToGetSessionKeyDetailOutput() GetSessionKeyDetailOutput {
	return o
}

func (o GetSessionKeyDetailOutput) ToGetSessionKeyDetailOutputWithContext(ctx context.Context) GetSessionKeyDetailOutput {
	return o
}

// The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
func (o GetSessionKeyDetailOutput) PublicKeyContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionKeyDetail) string { return v.PublicKeyContent }).(pulumi.StringOutput)
}

type GetSessionKeyDetailArrayOutput struct{ *pulumi.OutputState }

func (GetSessionKeyDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionKeyDetail)(nil)).Elem()
}

func (o GetSessionKeyDetailArrayOutput) ToGetSessionKeyDetailArrayOutput() GetSessionKeyDetailArrayOutput {
	return o
}

func (o GetSessionKeyDetailArrayOutput) ToGetSessionKeyDetailArrayOutputWithContext(ctx context.Context) GetSessionKeyDetailArrayOutput {
	return o
}

func (o GetSessionKeyDetailArrayOutput) Index(i pulumi.IntInput) GetSessionKeyDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSessionKeyDetail {
		return vs[0].([]GetSessionKeyDetail)[vs[1].(int)]
	}).(GetSessionKeyDetailOutput)
}

type GetSessionTargetResourceDetail struct {
	// The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
	SessionType string `pulumi:"sessionType"`
	// The display name of the target Compute instance that the session connects to.
	TargetResourceDisplayName string `pulumi:"targetResourceDisplayName"`
	// The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
	TargetResourceId string `pulumi:"targetResourceId"`
	// The name of the user on the target resource operating system that the session uses for the connection.
	TargetResourceOperatingSystemUserName string `pulumi:"targetResourceOperatingSystemUserName"`
	// The port number to connect to on the target resource.
	TargetResourcePort int `pulumi:"targetResourcePort"`
	// The private IP address of the target resource that the session connects to.
	TargetResourcePrivateIpAddress string `pulumi:"targetResourcePrivateIpAddress"`
}

// GetSessionTargetResourceDetailInput is an input type that accepts GetSessionTargetResourceDetailArgs and GetSessionTargetResourceDetailOutput values.
// You can construct a concrete instance of `GetSessionTargetResourceDetailInput` via:
//
//	GetSessionTargetResourceDetailArgs{...}
type GetSessionTargetResourceDetailInput interface {
	pulumi.Input

	ToGetSessionTargetResourceDetailOutput() GetSessionTargetResourceDetailOutput
	ToGetSessionTargetResourceDetailOutputWithContext(context.Context) GetSessionTargetResourceDetailOutput
}

type GetSessionTargetResourceDetailArgs struct {
	// The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
	SessionType pulumi.StringInput `pulumi:"sessionType"`
	// The display name of the target Compute instance that the session connects to.
	TargetResourceDisplayName pulumi.StringInput `pulumi:"targetResourceDisplayName"`
	// The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
	TargetResourceId pulumi.StringInput `pulumi:"targetResourceId"`
	// The name of the user on the target resource operating system that the session uses for the connection.
	TargetResourceOperatingSystemUserName pulumi.StringInput `pulumi:"targetResourceOperatingSystemUserName"`
	// The port number to connect to on the target resource.
	TargetResourcePort pulumi.IntInput `pulumi:"targetResourcePort"`
	// The private IP address of the target resource that the session connects to.
	TargetResourcePrivateIpAddress pulumi.StringInput `pulumi:"targetResourcePrivateIpAddress"`
}

func (GetSessionTargetResourceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionTargetResourceDetail)(nil)).Elem()
}

func (i GetSessionTargetResourceDetailArgs) ToGetSessionTargetResourceDetailOutput() GetSessionTargetResourceDetailOutput {
	return i.ToGetSessionTargetResourceDetailOutputWithContext(context.Background())
}

func (i GetSessionTargetResourceDetailArgs) ToGetSessionTargetResourceDetailOutputWithContext(ctx context.Context) GetSessionTargetResourceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionTargetResourceDetailOutput)
}

// GetSessionTargetResourceDetailArrayInput is an input type that accepts GetSessionTargetResourceDetailArray and GetSessionTargetResourceDetailArrayOutput values.
// You can construct a concrete instance of `GetSessionTargetResourceDetailArrayInput` via:
//
//	GetSessionTargetResourceDetailArray{ GetSessionTargetResourceDetailArgs{...} }
type GetSessionTargetResourceDetailArrayInput interface {
	pulumi.Input

	ToGetSessionTargetResourceDetailArrayOutput() GetSessionTargetResourceDetailArrayOutput
	ToGetSessionTargetResourceDetailArrayOutputWithContext(context.Context) GetSessionTargetResourceDetailArrayOutput
}

type GetSessionTargetResourceDetailArray []GetSessionTargetResourceDetailInput

func (GetSessionTargetResourceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionTargetResourceDetail)(nil)).Elem()
}

func (i GetSessionTargetResourceDetailArray) ToGetSessionTargetResourceDetailArrayOutput() GetSessionTargetResourceDetailArrayOutput {
	return i.ToGetSessionTargetResourceDetailArrayOutputWithContext(context.Background())
}

func (i GetSessionTargetResourceDetailArray) ToGetSessionTargetResourceDetailArrayOutputWithContext(ctx context.Context) GetSessionTargetResourceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionTargetResourceDetailArrayOutput)
}

type GetSessionTargetResourceDetailOutput struct{ *pulumi.OutputState }

func (GetSessionTargetResourceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionTargetResourceDetail)(nil)).Elem()
}

func (o GetSessionTargetResourceDetailOutput) ToGetSessionTargetResourceDetailOutput() GetSessionTargetResourceDetailOutput {
	return o
}

func (o GetSessionTargetResourceDetailOutput) ToGetSessionTargetResourceDetailOutputWithContext(ctx context.Context) GetSessionTargetResourceDetailOutput {
	return o
}

// The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
func (o GetSessionTargetResourceDetailOutput) SessionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionTargetResourceDetail) string { return v.SessionType }).(pulumi.StringOutput)
}

// The display name of the target Compute instance that the session connects to.
func (o GetSessionTargetResourceDetailOutput) TargetResourceDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionTargetResourceDetail) string { return v.TargetResourceDisplayName }).(pulumi.StringOutput)
}

// The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
func (o GetSessionTargetResourceDetailOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionTargetResourceDetail) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// The name of the user on the target resource operating system that the session uses for the connection.
func (o GetSessionTargetResourceDetailOutput) TargetResourceOperatingSystemUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionTargetResourceDetail) string { return v.TargetResourceOperatingSystemUserName }).(pulumi.StringOutput)
}

// The port number to connect to on the target resource.
func (o GetSessionTargetResourceDetailOutput) TargetResourcePort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSessionTargetResourceDetail) int { return v.TargetResourcePort }).(pulumi.IntOutput)
}

// The private IP address of the target resource that the session connects to.
func (o GetSessionTargetResourceDetailOutput) TargetResourcePrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionTargetResourceDetail) string { return v.TargetResourcePrivateIpAddress }).(pulumi.StringOutput)
}

type GetSessionTargetResourceDetailArrayOutput struct{ *pulumi.OutputState }

func (GetSessionTargetResourceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionTargetResourceDetail)(nil)).Elem()
}

func (o GetSessionTargetResourceDetailArrayOutput) ToGetSessionTargetResourceDetailArrayOutput() GetSessionTargetResourceDetailArrayOutput {
	return o
}

func (o GetSessionTargetResourceDetailArrayOutput) ToGetSessionTargetResourceDetailArrayOutputWithContext(ctx context.Context) GetSessionTargetResourceDetailArrayOutput {
	return o
}

func (o GetSessionTargetResourceDetailArrayOutput) Index(i pulumi.IntInput) GetSessionTargetResourceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSessionTargetResourceDetail {
		return vs[0].([]GetSessionTargetResourceDetail)[vs[1].(int)]
	}).(GetSessionTargetResourceDetailOutput)
}

type GetSessionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSessionsFilterInput is an input type that accepts GetSessionsFilterArgs and GetSessionsFilterOutput values.
// You can construct a concrete instance of `GetSessionsFilterInput` via:
//
//	GetSessionsFilterArgs{...}
type GetSessionsFilterInput interface {
	pulumi.Input

	ToGetSessionsFilterOutput() GetSessionsFilterOutput
	ToGetSessionsFilterOutputWithContext(context.Context) GetSessionsFilterOutput
}

type GetSessionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSessionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionsFilter)(nil)).Elem()
}

func (i GetSessionsFilterArgs) ToGetSessionsFilterOutput() GetSessionsFilterOutput {
	return i.ToGetSessionsFilterOutputWithContext(context.Background())
}

func (i GetSessionsFilterArgs) ToGetSessionsFilterOutputWithContext(ctx context.Context) GetSessionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionsFilterOutput)
}

// GetSessionsFilterArrayInput is an input type that accepts GetSessionsFilterArray and GetSessionsFilterArrayOutput values.
// You can construct a concrete instance of `GetSessionsFilterArrayInput` via:
//
//	GetSessionsFilterArray{ GetSessionsFilterArgs{...} }
type GetSessionsFilterArrayInput interface {
	pulumi.Input

	ToGetSessionsFilterArrayOutput() GetSessionsFilterArrayOutput
	ToGetSessionsFilterArrayOutputWithContext(context.Context) GetSessionsFilterArrayOutput
}

type GetSessionsFilterArray []GetSessionsFilterInput

func (GetSessionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionsFilter)(nil)).Elem()
}

func (i GetSessionsFilterArray) ToGetSessionsFilterArrayOutput() GetSessionsFilterArrayOutput {
	return i.ToGetSessionsFilterArrayOutputWithContext(context.Background())
}

func (i GetSessionsFilterArray) ToGetSessionsFilterArrayOutputWithContext(ctx context.Context) GetSessionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionsFilterArrayOutput)
}

type GetSessionsFilterOutput struct{ *pulumi.OutputState }

func (GetSessionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionsFilter)(nil)).Elem()
}

func (o GetSessionsFilterOutput) ToGetSessionsFilterOutput() GetSessionsFilterOutput {
	return o
}

func (o GetSessionsFilterOutput) ToGetSessionsFilterOutputWithContext(ctx context.Context) GetSessionsFilterOutput {
	return o
}

func (o GetSessionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSessionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSessionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSessionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSessionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSessionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSessionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionsFilter)(nil)).Elem()
}

func (o GetSessionsFilterArrayOutput) ToGetSessionsFilterArrayOutput() GetSessionsFilterArrayOutput {
	return o
}

func (o GetSessionsFilterArrayOutput) ToGetSessionsFilterArrayOutputWithContext(ctx context.Context) GetSessionsFilterArrayOutput {
	return o
}

func (o GetSessionsFilterArrayOutput) Index(i pulumi.IntInput) GetSessionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSessionsFilter {
		return vs[0].([]GetSessionsFilter)[vs[1].(int)]
	}).(GetSessionsFilterOutput)
}

type GetSessionsSession struct {
	// The unique identifier (OCID) of the bastion in which to list sessions.
	BastionId string `pulumi:"bastionId"`
	// The name of the bastion that is hosting this session.
	BastionName string `pulumi:"bastionName"`
	// The public key of the bastion host. You can use this to verify that you're connecting to the correct bastion.
	BastionPublicHostKeyInfo string `pulumi:"bastionPublicHostKeyInfo"`
	// The username that the session uses to connect to the target resource.
	BastionUserName string `pulumi:"bastionUserName"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// The unique identifier (OCID) of the session, which can't be changed after creation.
	Id string `pulumi:"id"`
	// Public key details for a bastion session.
	KeyDetails []GetSessionsSessionKeyDetail `pulumi:"keyDetails"`
	// The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
	KeyType string `pulumi:"keyType"`
	// A message describing the current session state in more detail.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The amount of time the session can remain active.
	SessionTtlInSeconds int `pulumi:"sessionTtlInSeconds"`
	// The connection message for the session.
	SshMetadata map[string]interface{} `pulumi:"sshMetadata"`
	// The current state of the session.
	State string `pulumi:"state"`
	// Details about a bastion session's target resource.
	TargetResourceDetails []GetSessionsSessionTargetResourceDetail `pulumi:"targetResourceDetails"`
	// The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetSessionsSessionInput is an input type that accepts GetSessionsSessionArgs and GetSessionsSessionOutput values.
// You can construct a concrete instance of `GetSessionsSessionInput` via:
//
//	GetSessionsSessionArgs{...}
type GetSessionsSessionInput interface {
	pulumi.Input

	ToGetSessionsSessionOutput() GetSessionsSessionOutput
	ToGetSessionsSessionOutputWithContext(context.Context) GetSessionsSessionOutput
}

type GetSessionsSessionArgs struct {
	// The unique identifier (OCID) of the bastion in which to list sessions.
	BastionId pulumi.StringInput `pulumi:"bastionId"`
	// The name of the bastion that is hosting this session.
	BastionName pulumi.StringInput `pulumi:"bastionName"`
	// The public key of the bastion host. You can use this to verify that you're connecting to the correct bastion.
	BastionPublicHostKeyInfo pulumi.StringInput `pulumi:"bastionPublicHostKeyInfo"`
	// The username that the session uses to connect to the target resource.
	BastionUserName pulumi.StringInput `pulumi:"bastionUserName"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The unique identifier (OCID) of the session, which can't be changed after creation.
	Id pulumi.StringInput `pulumi:"id"`
	// Public key details for a bastion session.
	KeyDetails GetSessionsSessionKeyDetailArrayInput `pulumi:"keyDetails"`
	// The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
	KeyType pulumi.StringInput `pulumi:"keyType"`
	// A message describing the current session state in more detail.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The amount of time the session can remain active.
	SessionTtlInSeconds pulumi.IntInput `pulumi:"sessionTtlInSeconds"`
	// The connection message for the session.
	SshMetadata pulumi.MapInput `pulumi:"sshMetadata"`
	// The current state of the session.
	State pulumi.StringInput `pulumi:"state"`
	// Details about a bastion session's target resource.
	TargetResourceDetails GetSessionsSessionTargetResourceDetailArrayInput `pulumi:"targetResourceDetails"`
	// The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetSessionsSessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionsSession)(nil)).Elem()
}

func (i GetSessionsSessionArgs) ToGetSessionsSessionOutput() GetSessionsSessionOutput {
	return i.ToGetSessionsSessionOutputWithContext(context.Background())
}

func (i GetSessionsSessionArgs) ToGetSessionsSessionOutputWithContext(ctx context.Context) GetSessionsSessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionsSessionOutput)
}

// GetSessionsSessionArrayInput is an input type that accepts GetSessionsSessionArray and GetSessionsSessionArrayOutput values.
// You can construct a concrete instance of `GetSessionsSessionArrayInput` via:
//
//	GetSessionsSessionArray{ GetSessionsSessionArgs{...} }
type GetSessionsSessionArrayInput interface {
	pulumi.Input

	ToGetSessionsSessionArrayOutput() GetSessionsSessionArrayOutput
	ToGetSessionsSessionArrayOutputWithContext(context.Context) GetSessionsSessionArrayOutput
}

type GetSessionsSessionArray []GetSessionsSessionInput

func (GetSessionsSessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionsSession)(nil)).Elem()
}

func (i GetSessionsSessionArray) ToGetSessionsSessionArrayOutput() GetSessionsSessionArrayOutput {
	return i.ToGetSessionsSessionArrayOutputWithContext(context.Background())
}

func (i GetSessionsSessionArray) ToGetSessionsSessionArrayOutputWithContext(ctx context.Context) GetSessionsSessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionsSessionArrayOutput)
}

type GetSessionsSessionOutput struct{ *pulumi.OutputState }

func (GetSessionsSessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionsSession)(nil)).Elem()
}

func (o GetSessionsSessionOutput) ToGetSessionsSessionOutput() GetSessionsSessionOutput {
	return o
}

func (o GetSessionsSessionOutput) ToGetSessionsSessionOutputWithContext(ctx context.Context) GetSessionsSessionOutput {
	return o
}

// The unique identifier (OCID) of the bastion in which to list sessions.
func (o GetSessionsSessionOutput) BastionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSession) string { return v.BastionId }).(pulumi.StringOutput)
}

// The name of the bastion that is hosting this session.
func (o GetSessionsSessionOutput) BastionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSession) string { return v.BastionName }).(pulumi.StringOutput)
}

// The public key of the bastion host. You can use this to verify that you're connecting to the correct bastion.
func (o GetSessionsSessionOutput) BastionPublicHostKeyInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSession) string { return v.BastionPublicHostKeyInfo }).(pulumi.StringOutput)
}

// The username that the session uses to connect to the target resource.
func (o GetSessionsSessionOutput) BastionUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSession) string { return v.BastionUserName }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetSessionsSessionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSession) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The unique identifier (OCID) of the session, which can't be changed after creation.
func (o GetSessionsSessionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSession) string { return v.Id }).(pulumi.StringOutput)
}

// Public key details for a bastion session.
func (o GetSessionsSessionOutput) KeyDetails() GetSessionsSessionKeyDetailArrayOutput {
	return o.ApplyT(func(v GetSessionsSession) []GetSessionsSessionKeyDetail { return v.KeyDetails }).(GetSessionsSessionKeyDetailArrayOutput)
}

// The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
func (o GetSessionsSessionOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSession) string { return v.KeyType }).(pulumi.StringOutput)
}

// A message describing the current session state in more detail.
func (o GetSessionsSessionOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSession) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The amount of time the session can remain active.
func (o GetSessionsSessionOutput) SessionTtlInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetSessionsSession) int { return v.SessionTtlInSeconds }).(pulumi.IntOutput)
}

// The connection message for the session.
func (o GetSessionsSessionOutput) SshMetadata() pulumi.MapOutput {
	return o.ApplyT(func(v GetSessionsSession) map[string]interface{} { return v.SshMetadata }).(pulumi.MapOutput)
}

// The current state of the session.
func (o GetSessionsSessionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSession) string { return v.State }).(pulumi.StringOutput)
}

// Details about a bastion session's target resource.
func (o GetSessionsSessionOutput) TargetResourceDetails() GetSessionsSessionTargetResourceDetailArrayOutput {
	return o.ApplyT(func(v GetSessionsSession) []GetSessionsSessionTargetResourceDetail { return v.TargetResourceDetails }).(GetSessionsSessionTargetResourceDetailArrayOutput)
}

// The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
func (o GetSessionsSessionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSession) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
func (o GetSessionsSessionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSession) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetSessionsSessionArrayOutput struct{ *pulumi.OutputState }

func (GetSessionsSessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionsSession)(nil)).Elem()
}

func (o GetSessionsSessionArrayOutput) ToGetSessionsSessionArrayOutput() GetSessionsSessionArrayOutput {
	return o
}

func (o GetSessionsSessionArrayOutput) ToGetSessionsSessionArrayOutputWithContext(ctx context.Context) GetSessionsSessionArrayOutput {
	return o
}

func (o GetSessionsSessionArrayOutput) Index(i pulumi.IntInput) GetSessionsSessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSessionsSession {
		return vs[0].([]GetSessionsSession)[vs[1].(int)]
	}).(GetSessionsSessionOutput)
}

type GetSessionsSessionKeyDetail struct {
	// The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
	PublicKeyContent string `pulumi:"publicKeyContent"`
}

// GetSessionsSessionKeyDetailInput is an input type that accepts GetSessionsSessionKeyDetailArgs and GetSessionsSessionKeyDetailOutput values.
// You can construct a concrete instance of `GetSessionsSessionKeyDetailInput` via:
//
//	GetSessionsSessionKeyDetailArgs{...}
type GetSessionsSessionKeyDetailInput interface {
	pulumi.Input

	ToGetSessionsSessionKeyDetailOutput() GetSessionsSessionKeyDetailOutput
	ToGetSessionsSessionKeyDetailOutputWithContext(context.Context) GetSessionsSessionKeyDetailOutput
}

type GetSessionsSessionKeyDetailArgs struct {
	// The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
	PublicKeyContent pulumi.StringInput `pulumi:"publicKeyContent"`
}

func (GetSessionsSessionKeyDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionsSessionKeyDetail)(nil)).Elem()
}

func (i GetSessionsSessionKeyDetailArgs) ToGetSessionsSessionKeyDetailOutput() GetSessionsSessionKeyDetailOutput {
	return i.ToGetSessionsSessionKeyDetailOutputWithContext(context.Background())
}

func (i GetSessionsSessionKeyDetailArgs) ToGetSessionsSessionKeyDetailOutputWithContext(ctx context.Context) GetSessionsSessionKeyDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionsSessionKeyDetailOutput)
}

// GetSessionsSessionKeyDetailArrayInput is an input type that accepts GetSessionsSessionKeyDetailArray and GetSessionsSessionKeyDetailArrayOutput values.
// You can construct a concrete instance of `GetSessionsSessionKeyDetailArrayInput` via:
//
//	GetSessionsSessionKeyDetailArray{ GetSessionsSessionKeyDetailArgs{...} }
type GetSessionsSessionKeyDetailArrayInput interface {
	pulumi.Input

	ToGetSessionsSessionKeyDetailArrayOutput() GetSessionsSessionKeyDetailArrayOutput
	ToGetSessionsSessionKeyDetailArrayOutputWithContext(context.Context) GetSessionsSessionKeyDetailArrayOutput
}

type GetSessionsSessionKeyDetailArray []GetSessionsSessionKeyDetailInput

func (GetSessionsSessionKeyDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionsSessionKeyDetail)(nil)).Elem()
}

func (i GetSessionsSessionKeyDetailArray) ToGetSessionsSessionKeyDetailArrayOutput() GetSessionsSessionKeyDetailArrayOutput {
	return i.ToGetSessionsSessionKeyDetailArrayOutputWithContext(context.Background())
}

func (i GetSessionsSessionKeyDetailArray) ToGetSessionsSessionKeyDetailArrayOutputWithContext(ctx context.Context) GetSessionsSessionKeyDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionsSessionKeyDetailArrayOutput)
}

type GetSessionsSessionKeyDetailOutput struct{ *pulumi.OutputState }

func (GetSessionsSessionKeyDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionsSessionKeyDetail)(nil)).Elem()
}

func (o GetSessionsSessionKeyDetailOutput) ToGetSessionsSessionKeyDetailOutput() GetSessionsSessionKeyDetailOutput {
	return o
}

func (o GetSessionsSessionKeyDetailOutput) ToGetSessionsSessionKeyDetailOutputWithContext(ctx context.Context) GetSessionsSessionKeyDetailOutput {
	return o
}

// The public key in OpenSSH format of the SSH key pair for the session. When you connect to the session, you must provide the private key of the same SSH key pair.
func (o GetSessionsSessionKeyDetailOutput) PublicKeyContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSessionKeyDetail) string { return v.PublicKeyContent }).(pulumi.StringOutput)
}

type GetSessionsSessionKeyDetailArrayOutput struct{ *pulumi.OutputState }

func (GetSessionsSessionKeyDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionsSessionKeyDetail)(nil)).Elem()
}

func (o GetSessionsSessionKeyDetailArrayOutput) ToGetSessionsSessionKeyDetailArrayOutput() GetSessionsSessionKeyDetailArrayOutput {
	return o
}

func (o GetSessionsSessionKeyDetailArrayOutput) ToGetSessionsSessionKeyDetailArrayOutputWithContext(ctx context.Context) GetSessionsSessionKeyDetailArrayOutput {
	return o
}

func (o GetSessionsSessionKeyDetailArrayOutput) Index(i pulumi.IntInput) GetSessionsSessionKeyDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSessionsSessionKeyDetail {
		return vs[0].([]GetSessionsSessionKeyDetail)[vs[1].(int)]
	}).(GetSessionsSessionKeyDetailOutput)
}

type GetSessionsSessionTargetResourceDetail struct {
	// The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
	SessionType string `pulumi:"sessionType"`
	// The display name of the target Compute instance that the session connects to.
	TargetResourceDisplayName string `pulumi:"targetResourceDisplayName"`
	// The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
	TargetResourceId string `pulumi:"targetResourceId"`
	// The name of the user on the target resource operating system that the session uses for the connection.
	TargetResourceOperatingSystemUserName string `pulumi:"targetResourceOperatingSystemUserName"`
	// The port number to connect to on the target resource.
	TargetResourcePort int `pulumi:"targetResourcePort"`
	// The private IP address of the target resource that the session connects to.
	TargetResourcePrivateIpAddress string `pulumi:"targetResourcePrivateIpAddress"`
}

// GetSessionsSessionTargetResourceDetailInput is an input type that accepts GetSessionsSessionTargetResourceDetailArgs and GetSessionsSessionTargetResourceDetailOutput values.
// You can construct a concrete instance of `GetSessionsSessionTargetResourceDetailInput` via:
//
//	GetSessionsSessionTargetResourceDetailArgs{...}
type GetSessionsSessionTargetResourceDetailInput interface {
	pulumi.Input

	ToGetSessionsSessionTargetResourceDetailOutput() GetSessionsSessionTargetResourceDetailOutput
	ToGetSessionsSessionTargetResourceDetailOutputWithContext(context.Context) GetSessionsSessionTargetResourceDetailOutput
}

type GetSessionsSessionTargetResourceDetailArgs struct {
	// The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
	SessionType pulumi.StringInput `pulumi:"sessionType"`
	// The display name of the target Compute instance that the session connects to.
	TargetResourceDisplayName pulumi.StringInput `pulumi:"targetResourceDisplayName"`
	// The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
	TargetResourceId pulumi.StringInput `pulumi:"targetResourceId"`
	// The name of the user on the target resource operating system that the session uses for the connection.
	TargetResourceOperatingSystemUserName pulumi.StringInput `pulumi:"targetResourceOperatingSystemUserName"`
	// The port number to connect to on the target resource.
	TargetResourcePort pulumi.IntInput `pulumi:"targetResourcePort"`
	// The private IP address of the target resource that the session connects to.
	TargetResourcePrivateIpAddress pulumi.StringInput `pulumi:"targetResourcePrivateIpAddress"`
}

func (GetSessionsSessionTargetResourceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionsSessionTargetResourceDetail)(nil)).Elem()
}

func (i GetSessionsSessionTargetResourceDetailArgs) ToGetSessionsSessionTargetResourceDetailOutput() GetSessionsSessionTargetResourceDetailOutput {
	return i.ToGetSessionsSessionTargetResourceDetailOutputWithContext(context.Background())
}

func (i GetSessionsSessionTargetResourceDetailArgs) ToGetSessionsSessionTargetResourceDetailOutputWithContext(ctx context.Context) GetSessionsSessionTargetResourceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionsSessionTargetResourceDetailOutput)
}

// GetSessionsSessionTargetResourceDetailArrayInput is an input type that accepts GetSessionsSessionTargetResourceDetailArray and GetSessionsSessionTargetResourceDetailArrayOutput values.
// You can construct a concrete instance of `GetSessionsSessionTargetResourceDetailArrayInput` via:
//
//	GetSessionsSessionTargetResourceDetailArray{ GetSessionsSessionTargetResourceDetailArgs{...} }
type GetSessionsSessionTargetResourceDetailArrayInput interface {
	pulumi.Input

	ToGetSessionsSessionTargetResourceDetailArrayOutput() GetSessionsSessionTargetResourceDetailArrayOutput
	ToGetSessionsSessionTargetResourceDetailArrayOutputWithContext(context.Context) GetSessionsSessionTargetResourceDetailArrayOutput
}

type GetSessionsSessionTargetResourceDetailArray []GetSessionsSessionTargetResourceDetailInput

func (GetSessionsSessionTargetResourceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionsSessionTargetResourceDetail)(nil)).Elem()
}

func (i GetSessionsSessionTargetResourceDetailArray) ToGetSessionsSessionTargetResourceDetailArrayOutput() GetSessionsSessionTargetResourceDetailArrayOutput {
	return i.ToGetSessionsSessionTargetResourceDetailArrayOutputWithContext(context.Background())
}

func (i GetSessionsSessionTargetResourceDetailArray) ToGetSessionsSessionTargetResourceDetailArrayOutputWithContext(ctx context.Context) GetSessionsSessionTargetResourceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSessionsSessionTargetResourceDetailArrayOutput)
}

type GetSessionsSessionTargetResourceDetailOutput struct{ *pulumi.OutputState }

func (GetSessionsSessionTargetResourceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSessionsSessionTargetResourceDetail)(nil)).Elem()
}

func (o GetSessionsSessionTargetResourceDetailOutput) ToGetSessionsSessionTargetResourceDetailOutput() GetSessionsSessionTargetResourceDetailOutput {
	return o
}

func (o GetSessionsSessionTargetResourceDetailOutput) ToGetSessionsSessionTargetResourceDetailOutputWithContext(ctx context.Context) GetSessionsSessionTargetResourceDetailOutput {
	return o
}

// The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
func (o GetSessionsSessionTargetResourceDetailOutput) SessionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSessionTargetResourceDetail) string { return v.SessionType }).(pulumi.StringOutput)
}

// The display name of the target Compute instance that the session connects to.
func (o GetSessionsSessionTargetResourceDetailOutput) TargetResourceDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSessionTargetResourceDetail) string { return v.TargetResourceDisplayName }).(pulumi.StringOutput)
}

// The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
func (o GetSessionsSessionTargetResourceDetailOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSessionTargetResourceDetail) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// The name of the user on the target resource operating system that the session uses for the connection.
func (o GetSessionsSessionTargetResourceDetailOutput) TargetResourceOperatingSystemUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSessionTargetResourceDetail) string { return v.TargetResourceOperatingSystemUserName }).(pulumi.StringOutput)
}

// The port number to connect to on the target resource.
func (o GetSessionsSessionTargetResourceDetailOutput) TargetResourcePort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSessionsSessionTargetResourceDetail) int { return v.TargetResourcePort }).(pulumi.IntOutput)
}

// The private IP address of the target resource that the session connects to.
func (o GetSessionsSessionTargetResourceDetailOutput) TargetResourcePrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetSessionsSessionTargetResourceDetail) string { return v.TargetResourcePrivateIpAddress }).(pulumi.StringOutput)
}

type GetSessionsSessionTargetResourceDetailArrayOutput struct{ *pulumi.OutputState }

func (GetSessionsSessionTargetResourceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSessionsSessionTargetResourceDetail)(nil)).Elem()
}

func (o GetSessionsSessionTargetResourceDetailArrayOutput) ToGetSessionsSessionTargetResourceDetailArrayOutput() GetSessionsSessionTargetResourceDetailArrayOutput {
	return o
}

func (o GetSessionsSessionTargetResourceDetailArrayOutput) ToGetSessionsSessionTargetResourceDetailArrayOutputWithContext(ctx context.Context) GetSessionsSessionTargetResourceDetailArrayOutput {
	return o
}

func (o GetSessionsSessionTargetResourceDetailArrayOutput) Index(i pulumi.IntInput) GetSessionsSessionTargetResourceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSessionsSessionTargetResourceDetail {
		return vs[0].([]GetSessionsSessionTargetResourceDetail)[vs[1].(int)]
	}).(GetSessionsSessionTargetResourceDetailOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SessionKeyDetailsInput)(nil)).Elem(), SessionKeyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionKeyDetailsPtrInput)(nil)).Elem(), SessionKeyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionTargetResourceDetailsInput)(nil)).Elem(), SessionTargetResourceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionTargetResourceDetailsPtrInput)(nil)).Elem(), SessionTargetResourceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBastionsBastionInput)(nil)).Elem(), GetBastionsBastionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBastionsBastionArrayInput)(nil)).Elem(), GetBastionsBastionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBastionsFilterInput)(nil)).Elem(), GetBastionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBastionsFilterArrayInput)(nil)).Elem(), GetBastionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionKeyDetailInput)(nil)).Elem(), GetSessionKeyDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionKeyDetailArrayInput)(nil)).Elem(), GetSessionKeyDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionTargetResourceDetailInput)(nil)).Elem(), GetSessionTargetResourceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionTargetResourceDetailArrayInput)(nil)).Elem(), GetSessionTargetResourceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionsFilterInput)(nil)).Elem(), GetSessionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionsFilterArrayInput)(nil)).Elem(), GetSessionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionsSessionInput)(nil)).Elem(), GetSessionsSessionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionsSessionArrayInput)(nil)).Elem(), GetSessionsSessionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionsSessionKeyDetailInput)(nil)).Elem(), GetSessionsSessionKeyDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionsSessionKeyDetailArrayInput)(nil)).Elem(), GetSessionsSessionKeyDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionsSessionTargetResourceDetailInput)(nil)).Elem(), GetSessionsSessionTargetResourceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSessionsSessionTargetResourceDetailArrayInput)(nil)).Elem(), GetSessionsSessionTargetResourceDetailArray{})
	pulumi.RegisterOutputType(SessionKeyDetailsOutput{})
	pulumi.RegisterOutputType(SessionKeyDetailsPtrOutput{})
	pulumi.RegisterOutputType(SessionTargetResourceDetailsOutput{})
	pulumi.RegisterOutputType(SessionTargetResourceDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetBastionsBastionOutput{})
	pulumi.RegisterOutputType(GetBastionsBastionArrayOutput{})
	pulumi.RegisterOutputType(GetBastionsFilterOutput{})
	pulumi.RegisterOutputType(GetBastionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSessionKeyDetailOutput{})
	pulumi.RegisterOutputType(GetSessionKeyDetailArrayOutput{})
	pulumi.RegisterOutputType(GetSessionTargetResourceDetailOutput{})
	pulumi.RegisterOutputType(GetSessionTargetResourceDetailArrayOutput{})
	pulumi.RegisterOutputType(GetSessionsFilterOutput{})
	pulumi.RegisterOutputType(GetSessionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSessionsSessionOutput{})
	pulumi.RegisterOutputType(GetSessionsSessionArrayOutput{})
	pulumi.RegisterOutputType(GetSessionsSessionKeyDetailOutput{})
	pulumi.RegisterOutputType(GetSessionsSessionKeyDetailArrayOutput{})
	pulumi.RegisterOutputType(GetSessionsSessionTargetResourceDetailOutput{})
	pulumi.RegisterOutputType(GetSessionsSessionTargetResourceDetailArrayOutput{})
}
