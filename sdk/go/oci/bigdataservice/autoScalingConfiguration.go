// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Auto Scaling Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Add an autoscale configuration to the cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/BigDataService"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := BigDataService.NewAutoScalingConfiguration(ctx, "testAutoScalingConfiguration", &BigDataService.AutoScalingConfigurationArgs{
//				BdsInstanceId:        pulumi.Any(oci_bds_bds_instance.Test_bds_instance.Id),
//				ClusterAdminPassword: pulumi.Any(_var.Auto_scaling_configuration_cluster_admin_password),
//				IsEnabled:            pulumi.Any(_var.Auto_scaling_configuration_is_enabled),
//				NodeType:             pulumi.Any(_var.Auto_scaling_configuration_node_type),
//				DisplayName:          pulumi.Any(_var.Auto_scaling_configuration_display_name),
//				PolicyDetails: &bigdataservice.AutoScalingConfigurationPolicyDetailsArgs{
//					PolicyType: pulumi.Any(_var.Auto_scaling_configuration_policy_details_policy_type),
//					ScaleDownConfig: &bigdataservice.AutoScalingConfigurationPolicyDetailsScaleDownConfigArgs{
//						MemoryStepSize: pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_down_config_memory_step_size),
//						Metric: &bigdataservice.AutoScalingConfigurationPolicyDetailsScaleDownConfigMetricArgs{
//							MetricType: pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_down_config_metric_metric_type),
//							Threshold: &bigdataservice.AutoScalingConfigurationPolicyDetailsScaleDownConfigMetricThresholdArgs{
//								DurationInMinutes: pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_down_config_metric_threshold_duration_in_minutes),
//								Operator:          pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_down_config_metric_threshold_operator),
//								Value:             pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_down_config_metric_threshold_value),
//							},
//						},
//						MinMemoryPerNode: pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_down_config_min_memory_per_node),
//						MinOcpusPerNode:  pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_down_config_min_ocpus_per_node),
//						OcpuStepSize:     pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_down_config_ocpu_step_size),
//					},
//					ScaleUpConfig: &bigdataservice.AutoScalingConfigurationPolicyDetailsScaleUpConfigArgs{
//						MaxMemoryPerNode: pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_up_config_max_memory_per_node),
//						MaxOcpusPerNode:  pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_up_config_max_ocpus_per_node),
//						MemoryStepSize:   pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_up_config_memory_step_size),
//						Metric: &bigdataservice.AutoScalingConfigurationPolicyDetailsScaleUpConfigMetricArgs{
//							MetricType: pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_up_config_metric_metric_type),
//							Threshold: &bigdataservice.AutoScalingConfigurationPolicyDetailsScaleUpConfigMetricThresholdArgs{
//								DurationInMinutes: pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_up_config_metric_threshold_duration_in_minutes),
//								Operator:          pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_up_config_metric_threshold_operator),
//								Value:             pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_up_config_metric_threshold_value),
//							},
//						},
//						OcpuStepSize: pulumi.Any(_var.Auto_scaling_configuration_policy_details_scale_up_config_ocpu_step_size),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AutoScalingConfiguration can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:BigDataService/autoScalingConfiguration:AutoScalingConfiguration test_auto_scaling_configuration "bdsInstances/{bdsInstanceId}/autoScalingConfiguration/{autoScalingConfigurationId}"
//
// ```
type AutoScalingConfiguration struct {
	pulumi.CustomResourceState

	// The OCID of the cluster.
	BdsInstanceId pulumi.StringOutput `pulumi:"bdsInstanceId"`
	// (Updatable) Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringOutput `pulumi:"clusterAdminPassword"`
	// (Updatable) A user-friendly name. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Whether the autoscale configuration is enabled.
	IsEnabled pulumi.BoolOutput `pulumi:"isEnabled"`
	// A node type that is managed by an autoscale configuration. The only supported types are WORKER and COMPUTE_ONLY_WORKER.
	NodeType pulumi.StringOutput `pulumi:"nodeType"`
	// (Updatable) This model for autoscaling policy is deprecated and not supported for ODH clusters. Use the `AutoScalePolicyDetails` model to manage autoscale policy details for ODH clusters.
	Policy AutoScalingConfigurationPolicyOutput `pulumi:"policy"`
	// (Updatable) Policy definition for the autoscale configuration.
	//
	// An autoscaling policy is part of an autoscaling configuration. For more information, see [Autoscaling](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-autoscale)
	//
	// You can create following type of autoscaling policies:
	// * **MetricBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered when a performance metric exceeds a threshold
	// * **MetricBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered when a performance metric exceeds a threshold
	// * **ScheduleBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered at the specific times that you schedule.
	// * **ScheduleBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered at the specific times that you schedule.
	//
	// An autoscaling configuration can have one of above supported policies.
	PolicyDetails AutoScalingConfigurationPolicyDetailsOutput `pulumi:"policyDetails"`
	// The state of the autoscale configuration.
	State pulumi.StringOutput `pulumi:"state"`
	// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the autoscale configuration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewAutoScalingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewAutoScalingConfiguration(ctx *pulumi.Context,
	name string, args *AutoScalingConfigurationArgs, opts ...pulumi.ResourceOption) (*AutoScalingConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BdsInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'BdsInstanceId'")
	}
	if args.ClusterAdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'ClusterAdminPassword'")
	}
	if args.IsEnabled == nil {
		return nil, errors.New("invalid value for required argument 'IsEnabled'")
	}
	if args.NodeType == nil {
		return nil, errors.New("invalid value for required argument 'NodeType'")
	}
	if args.ClusterAdminPassword != nil {
		args.ClusterAdminPassword = pulumi.ToSecret(args.ClusterAdminPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clusterAdminPassword",
	})
	opts = append(opts, secrets)
	var resource AutoScalingConfiguration
	err := ctx.RegisterResource("oci:BigDataService/autoScalingConfiguration:AutoScalingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoScalingConfiguration gets an existing AutoScalingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoScalingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoScalingConfigurationState, opts ...pulumi.ResourceOption) (*AutoScalingConfiguration, error) {
	var resource AutoScalingConfiguration
	err := ctx.ReadResource("oci:BigDataService/autoScalingConfiguration:AutoScalingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoScalingConfiguration resources.
type autoScalingConfigurationState struct {
	// The OCID of the cluster.
	BdsInstanceId *string `pulumi:"bdsInstanceId"`
	// (Updatable) Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword *string `pulumi:"clusterAdminPassword"`
	// (Updatable) A user-friendly name. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Whether the autoscale configuration is enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// A node type that is managed by an autoscale configuration. The only supported types are WORKER and COMPUTE_ONLY_WORKER.
	NodeType *string `pulumi:"nodeType"`
	// (Updatable) This model for autoscaling policy is deprecated and not supported for ODH clusters. Use the `AutoScalePolicyDetails` model to manage autoscale policy details for ODH clusters.
	Policy *AutoScalingConfigurationPolicy `pulumi:"policy"`
	// (Updatable) Policy definition for the autoscale configuration.
	//
	// An autoscaling policy is part of an autoscaling configuration. For more information, see [Autoscaling](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-autoscale)
	//
	// You can create following type of autoscaling policies:
	// * **MetricBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered when a performance metric exceeds a threshold
	// * **MetricBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered when a performance metric exceeds a threshold
	// * **ScheduleBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered at the specific times that you schedule.
	// * **ScheduleBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered at the specific times that you schedule.
	//
	// An autoscaling configuration can have one of above supported policies.
	PolicyDetails *AutoScalingConfigurationPolicyDetails `pulumi:"policyDetails"`
	// The state of the autoscale configuration.
	State *string `pulumi:"state"`
	// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the autoscale configuration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type AutoScalingConfigurationState struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringPtrInput
	// (Updatable) Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringPtrInput
	// (Updatable) A user-friendly name. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Whether the autoscale configuration is enabled.
	IsEnabled pulumi.BoolPtrInput
	// A node type that is managed by an autoscale configuration. The only supported types are WORKER and COMPUTE_ONLY_WORKER.
	NodeType pulumi.StringPtrInput
	// (Updatable) This model for autoscaling policy is deprecated and not supported for ODH clusters. Use the `AutoScalePolicyDetails` model to manage autoscale policy details for ODH clusters.
	Policy AutoScalingConfigurationPolicyPtrInput
	// (Updatable) Policy definition for the autoscale configuration.
	//
	// An autoscaling policy is part of an autoscaling configuration. For more information, see [Autoscaling](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-autoscale)
	//
	// You can create following type of autoscaling policies:
	// * **MetricBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered when a performance metric exceeds a threshold
	// * **MetricBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered when a performance metric exceeds a threshold
	// * **ScheduleBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered at the specific times that you schedule.
	// * **ScheduleBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered at the specific times that you schedule.
	//
	// An autoscaling configuration can have one of above supported policies.
	PolicyDetails AutoScalingConfigurationPolicyDetailsPtrInput
	// The state of the autoscale configuration.
	State pulumi.StringPtrInput
	// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the autoscale configuration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (AutoScalingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoScalingConfigurationState)(nil)).Elem()
}

type autoScalingConfigurationArgs struct {
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// (Updatable) Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword string `pulumi:"clusterAdminPassword"`
	// (Updatable) A user-friendly name. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Whether the autoscale configuration is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// A node type that is managed by an autoscale configuration. The only supported types are WORKER and COMPUTE_ONLY_WORKER.
	NodeType string `pulumi:"nodeType"`
	// (Updatable) This model for autoscaling policy is deprecated and not supported for ODH clusters. Use the `AutoScalePolicyDetails` model to manage autoscale policy details for ODH clusters.
	Policy *AutoScalingConfigurationPolicy `pulumi:"policy"`
	// (Updatable) Policy definition for the autoscale configuration.
	//
	// An autoscaling policy is part of an autoscaling configuration. For more information, see [Autoscaling](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-autoscale)
	//
	// You can create following type of autoscaling policies:
	// * **MetricBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered when a performance metric exceeds a threshold
	// * **MetricBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered when a performance metric exceeds a threshold
	// * **ScheduleBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered at the specific times that you schedule.
	// * **ScheduleBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered at the specific times that you schedule.
	//
	// An autoscaling configuration can have one of above supported policies.
	PolicyDetails *AutoScalingConfigurationPolicyDetails `pulumi:"policyDetails"`
}

// The set of arguments for constructing a AutoScalingConfiguration resource.
type AutoScalingConfigurationArgs struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput
	// (Updatable) Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringInput
	// (Updatable) A user-friendly name. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Whether the autoscale configuration is enabled.
	IsEnabled pulumi.BoolInput
	// A node type that is managed by an autoscale configuration. The only supported types are WORKER and COMPUTE_ONLY_WORKER.
	NodeType pulumi.StringInput
	// (Updatable) This model for autoscaling policy is deprecated and not supported for ODH clusters. Use the `AutoScalePolicyDetails` model to manage autoscale policy details for ODH clusters.
	Policy AutoScalingConfigurationPolicyPtrInput
	// (Updatable) Policy definition for the autoscale configuration.
	//
	// An autoscaling policy is part of an autoscaling configuration. For more information, see [Autoscaling](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-autoscale)
	//
	// You can create following type of autoscaling policies:
	// * **MetricBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered when a performance metric exceeds a threshold
	// * **MetricBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered when a performance metric exceeds a threshold
	// * **ScheduleBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered at the specific times that you schedule.
	// * **ScheduleBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered at the specific times that you schedule.
	//
	// An autoscaling configuration can have one of above supported policies.
	PolicyDetails AutoScalingConfigurationPolicyDetailsPtrInput
}

func (AutoScalingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoScalingConfigurationArgs)(nil)).Elem()
}

type AutoScalingConfigurationInput interface {
	pulumi.Input

	ToAutoScalingConfigurationOutput() AutoScalingConfigurationOutput
	ToAutoScalingConfigurationOutputWithContext(ctx context.Context) AutoScalingConfigurationOutput
}

func (*AutoScalingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScalingConfiguration)(nil)).Elem()
}

func (i *AutoScalingConfiguration) ToAutoScalingConfigurationOutput() AutoScalingConfigurationOutput {
	return i.ToAutoScalingConfigurationOutputWithContext(context.Background())
}

func (i *AutoScalingConfiguration) ToAutoScalingConfigurationOutputWithContext(ctx context.Context) AutoScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalingConfigurationOutput)
}

// AutoScalingConfigurationArrayInput is an input type that accepts AutoScalingConfigurationArray and AutoScalingConfigurationArrayOutput values.
// You can construct a concrete instance of `AutoScalingConfigurationArrayInput` via:
//
//	AutoScalingConfigurationArray{ AutoScalingConfigurationArgs{...} }
type AutoScalingConfigurationArrayInput interface {
	pulumi.Input

	ToAutoScalingConfigurationArrayOutput() AutoScalingConfigurationArrayOutput
	ToAutoScalingConfigurationArrayOutputWithContext(context.Context) AutoScalingConfigurationArrayOutput
}

type AutoScalingConfigurationArray []AutoScalingConfigurationInput

func (AutoScalingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoScalingConfiguration)(nil)).Elem()
}

func (i AutoScalingConfigurationArray) ToAutoScalingConfigurationArrayOutput() AutoScalingConfigurationArrayOutput {
	return i.ToAutoScalingConfigurationArrayOutputWithContext(context.Background())
}

func (i AutoScalingConfigurationArray) ToAutoScalingConfigurationArrayOutputWithContext(ctx context.Context) AutoScalingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalingConfigurationArrayOutput)
}

// AutoScalingConfigurationMapInput is an input type that accepts AutoScalingConfigurationMap and AutoScalingConfigurationMapOutput values.
// You can construct a concrete instance of `AutoScalingConfigurationMapInput` via:
//
//	AutoScalingConfigurationMap{ "key": AutoScalingConfigurationArgs{...} }
type AutoScalingConfigurationMapInput interface {
	pulumi.Input

	ToAutoScalingConfigurationMapOutput() AutoScalingConfigurationMapOutput
	ToAutoScalingConfigurationMapOutputWithContext(context.Context) AutoScalingConfigurationMapOutput
}

type AutoScalingConfigurationMap map[string]AutoScalingConfigurationInput

func (AutoScalingConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoScalingConfiguration)(nil)).Elem()
}

func (i AutoScalingConfigurationMap) ToAutoScalingConfigurationMapOutput() AutoScalingConfigurationMapOutput {
	return i.ToAutoScalingConfigurationMapOutputWithContext(context.Background())
}

func (i AutoScalingConfigurationMap) ToAutoScalingConfigurationMapOutputWithContext(ctx context.Context) AutoScalingConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalingConfigurationMapOutput)
}

type AutoScalingConfigurationOutput struct{ *pulumi.OutputState }

func (AutoScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScalingConfiguration)(nil)).Elem()
}

func (o AutoScalingConfigurationOutput) ToAutoScalingConfigurationOutput() AutoScalingConfigurationOutput {
	return o
}

func (o AutoScalingConfigurationOutput) ToAutoScalingConfigurationOutputWithContext(ctx context.Context) AutoScalingConfigurationOutput {
	return o
}

// The OCID of the cluster.
func (o AutoScalingConfigurationOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringOutput { return v.BdsInstanceId }).(pulumi.StringOutput)
}

// (Updatable) Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
func (o AutoScalingConfigurationOutput) ClusterAdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringOutput { return v.ClusterAdminPassword }).(pulumi.StringOutput)
}

// (Updatable) A user-friendly name. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
func (o AutoScalingConfigurationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Whether the autoscale configuration is enabled.
func (o AutoScalingConfigurationOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.BoolOutput { return v.IsEnabled }).(pulumi.BoolOutput)
}

// A node type that is managed by an autoscale configuration. The only supported types are WORKER and COMPUTE_ONLY_WORKER.
func (o AutoScalingConfigurationOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringOutput { return v.NodeType }).(pulumi.StringOutput)
}

// (Updatable) This model for autoscaling policy is deprecated and not supported for ODH clusters. Use the `AutoScalePolicyDetails` model to manage autoscale policy details for ODH clusters.
func (o AutoScalingConfigurationOutput) Policy() AutoScalingConfigurationPolicyOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) AutoScalingConfigurationPolicyOutput { return v.Policy }).(AutoScalingConfigurationPolicyOutput)
}

// (Updatable) Policy definition for the autoscale configuration.
//
// An autoscaling policy is part of an autoscaling configuration. For more information, see [Autoscaling](https://docs.cloud.oracle.com/iaas/Content/bigdata/create-cluster.htm#cluster-autoscale)
//
// You can create following type of autoscaling policies:
// * **MetricBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered when a performance metric exceeds a threshold
// * **MetricBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered when a performance metric exceeds a threshold
// * **ScheduleBasedVerticalScalingPolicy:** Vertical autoscaling action is triggered at the specific times that you schedule.
// * **ScheduleBasedHorizontalScalingPolicy:** Horizontal autoscaling action is triggered at the specific times that you schedule.
//
// An autoscaling configuration can have one of above supported policies.
func (o AutoScalingConfigurationOutput) PolicyDetails() AutoScalingConfigurationPolicyDetailsOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) AutoScalingConfigurationPolicyDetailsOutput { return v.PolicyDetails }).(AutoScalingConfigurationPolicyDetailsOutput)
}

// The state of the autoscale configuration.
func (o AutoScalingConfigurationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
func (o AutoScalingConfigurationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the autoscale configuration was updated, shown as an RFC 3339 formatted datetime string.
func (o AutoScalingConfigurationOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfiguration) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type AutoScalingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AutoScalingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoScalingConfiguration)(nil)).Elem()
}

func (o AutoScalingConfigurationArrayOutput) ToAutoScalingConfigurationArrayOutput() AutoScalingConfigurationArrayOutput {
	return o
}

func (o AutoScalingConfigurationArrayOutput) ToAutoScalingConfigurationArrayOutputWithContext(ctx context.Context) AutoScalingConfigurationArrayOutput {
	return o
}

func (o AutoScalingConfigurationArrayOutput) Index(i pulumi.IntInput) AutoScalingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutoScalingConfiguration {
		return vs[0].([]*AutoScalingConfiguration)[vs[1].(int)]
	}).(AutoScalingConfigurationOutput)
}

type AutoScalingConfigurationMapOutput struct{ *pulumi.OutputState }

func (AutoScalingConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoScalingConfiguration)(nil)).Elem()
}

func (o AutoScalingConfigurationMapOutput) ToAutoScalingConfigurationMapOutput() AutoScalingConfigurationMapOutput {
	return o
}

func (o AutoScalingConfigurationMapOutput) ToAutoScalingConfigurationMapOutputWithContext(ctx context.Context) AutoScalingConfigurationMapOutput {
	return o
}

func (o AutoScalingConfigurationMapOutput) MapIndex(k pulumi.StringInput) AutoScalingConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutoScalingConfiguration {
		return vs[0].(map[string]*AutoScalingConfiguration)[vs[1].(string)]
	}).(AutoScalingConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoScalingConfigurationInput)(nil)).Elem(), &AutoScalingConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoScalingConfigurationArrayInput)(nil)).Elem(), AutoScalingConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoScalingConfigurationMapInput)(nil)).Elem(), AutoScalingConfigurationMap{})
	pulumi.RegisterOutputType(AutoScalingConfigurationOutput{})
	pulumi.RegisterOutputType(AutoScalingConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AutoScalingConfigurationMapOutput{})
}
