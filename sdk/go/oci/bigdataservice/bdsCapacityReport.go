// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Bds Capacity Report resource in Oracle Cloud Infrastructure Big Data Service service. Customer would require BDS_READ permission for the target compartment.
//
// # Create a detailed capacity report for BDS service
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.NewBdsCapacityReport(ctx, "test_bds_capacity_report", &bigdataservice.BdsCapacityReportArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				ShapeAvailabilities: bigdataservice.BdsCapacityReportShapeAvailabilityArray{
//					&bigdataservice.BdsCapacityReportShapeAvailabilityArgs{
//						Shape: pulumi.Any(bdsCapacityReportShapeAvailabilitiesShape),
//						ShapeConfig: &bigdataservice.BdsCapacityReportShapeAvailabilityShapeConfigArgs{
//							MemoryInGbs: pulumi.Any(bdsCapacityReportShapeAvailabilitiesShapeConfigMemoryInGbs),
//							Nvmes:       pulumi.Any(bdsCapacityReportShapeAvailabilitiesShapeConfigNvmes),
//							Ocpus:       pulumi.Any(bdsCapacityReportShapeAvailabilitiesShapeConfigOcpus),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// BdsCapacityReports can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:BigDataService/bdsCapacityReport:BdsCapacityReport test_bds_capacity_report "id"
// ```
type BdsCapacityReport struct {
	pulumi.CustomResourceState

	// The OCID for the compartment. This should always be the root compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Information about the shapes in the capacity report.
	ShapeAvailabilities BdsCapacityReportShapeAvailabilityArrayOutput `pulumi:"shapeAvailabilities"`
	// The time the report was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewBdsCapacityReport registers a new resource with the given unique name, arguments, and options.
func NewBdsCapacityReport(ctx *pulumi.Context,
	name string, args *BdsCapacityReportArgs, opts ...pulumi.ResourceOption) (*BdsCapacityReport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ShapeAvailabilities == nil {
		return nil, errors.New("invalid value for required argument 'ShapeAvailabilities'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BdsCapacityReport
	err := ctx.RegisterResource("oci:BigDataService/bdsCapacityReport:BdsCapacityReport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBdsCapacityReport gets an existing BdsCapacityReport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBdsCapacityReport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BdsCapacityReportState, opts ...pulumi.ResourceOption) (*BdsCapacityReport, error) {
	var resource BdsCapacityReport
	err := ctx.ReadResource("oci:BigDataService/bdsCapacityReport:BdsCapacityReport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BdsCapacityReport resources.
type bdsCapacityReportState struct {
	// The OCID for the compartment. This should always be the root compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// Information about the shapes in the capacity report.
	ShapeAvailabilities []BdsCapacityReportShapeAvailability `pulumi:"shapeAvailabilities"`
	// The time the report was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
}

type BdsCapacityReportState struct {
	// The OCID for the compartment. This should always be the root compartment.
	CompartmentId pulumi.StringPtrInput
	// Information about the shapes in the capacity report.
	ShapeAvailabilities BdsCapacityReportShapeAvailabilityArrayInput
	// The time the report was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
}

func (BdsCapacityReportState) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsCapacityReportState)(nil)).Elem()
}

type bdsCapacityReportArgs struct {
	// The OCID for the compartment. This should always be the root compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Information about the shapes in the capacity report.
	ShapeAvailabilities []BdsCapacityReportShapeAvailability `pulumi:"shapeAvailabilities"`
}

// The set of arguments for constructing a BdsCapacityReport resource.
type BdsCapacityReportArgs struct {
	// The OCID for the compartment. This should always be the root compartment.
	CompartmentId pulumi.StringInput
	// Information about the shapes in the capacity report.
	ShapeAvailabilities BdsCapacityReportShapeAvailabilityArrayInput
}

func (BdsCapacityReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsCapacityReportArgs)(nil)).Elem()
}

type BdsCapacityReportInput interface {
	pulumi.Input

	ToBdsCapacityReportOutput() BdsCapacityReportOutput
	ToBdsCapacityReportOutputWithContext(ctx context.Context) BdsCapacityReportOutput
}

func (*BdsCapacityReport) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsCapacityReport)(nil)).Elem()
}

func (i *BdsCapacityReport) ToBdsCapacityReportOutput() BdsCapacityReportOutput {
	return i.ToBdsCapacityReportOutputWithContext(context.Background())
}

func (i *BdsCapacityReport) ToBdsCapacityReportOutputWithContext(ctx context.Context) BdsCapacityReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsCapacityReportOutput)
}

// BdsCapacityReportArrayInput is an input type that accepts BdsCapacityReportArray and BdsCapacityReportArrayOutput values.
// You can construct a concrete instance of `BdsCapacityReportArrayInput` via:
//
//	BdsCapacityReportArray{ BdsCapacityReportArgs{...} }
type BdsCapacityReportArrayInput interface {
	pulumi.Input

	ToBdsCapacityReportArrayOutput() BdsCapacityReportArrayOutput
	ToBdsCapacityReportArrayOutputWithContext(context.Context) BdsCapacityReportArrayOutput
}

type BdsCapacityReportArray []BdsCapacityReportInput

func (BdsCapacityReportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsCapacityReport)(nil)).Elem()
}

func (i BdsCapacityReportArray) ToBdsCapacityReportArrayOutput() BdsCapacityReportArrayOutput {
	return i.ToBdsCapacityReportArrayOutputWithContext(context.Background())
}

func (i BdsCapacityReportArray) ToBdsCapacityReportArrayOutputWithContext(ctx context.Context) BdsCapacityReportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsCapacityReportArrayOutput)
}

// BdsCapacityReportMapInput is an input type that accepts BdsCapacityReportMap and BdsCapacityReportMapOutput values.
// You can construct a concrete instance of `BdsCapacityReportMapInput` via:
//
//	BdsCapacityReportMap{ "key": BdsCapacityReportArgs{...} }
type BdsCapacityReportMapInput interface {
	pulumi.Input

	ToBdsCapacityReportMapOutput() BdsCapacityReportMapOutput
	ToBdsCapacityReportMapOutputWithContext(context.Context) BdsCapacityReportMapOutput
}

type BdsCapacityReportMap map[string]BdsCapacityReportInput

func (BdsCapacityReportMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsCapacityReport)(nil)).Elem()
}

func (i BdsCapacityReportMap) ToBdsCapacityReportMapOutput() BdsCapacityReportMapOutput {
	return i.ToBdsCapacityReportMapOutputWithContext(context.Background())
}

func (i BdsCapacityReportMap) ToBdsCapacityReportMapOutputWithContext(ctx context.Context) BdsCapacityReportMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsCapacityReportMapOutput)
}

type BdsCapacityReportOutput struct{ *pulumi.OutputState }

func (BdsCapacityReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsCapacityReport)(nil)).Elem()
}

func (o BdsCapacityReportOutput) ToBdsCapacityReportOutput() BdsCapacityReportOutput {
	return o
}

func (o BdsCapacityReportOutput) ToBdsCapacityReportOutputWithContext(ctx context.Context) BdsCapacityReportOutput {
	return o
}

// The OCID for the compartment. This should always be the root compartment.
func (o BdsCapacityReportOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsCapacityReport) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Information about the shapes in the capacity report.
func (o BdsCapacityReportOutput) ShapeAvailabilities() BdsCapacityReportShapeAvailabilityArrayOutput {
	return o.ApplyT(func(v *BdsCapacityReport) BdsCapacityReportShapeAvailabilityArrayOutput { return v.ShapeAvailabilities }).(BdsCapacityReportShapeAvailabilityArrayOutput)
}

// The time the report was created, shown as an RFC 3339 formatted datetime string.
func (o BdsCapacityReportOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsCapacityReport) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type BdsCapacityReportArrayOutput struct{ *pulumi.OutputState }

func (BdsCapacityReportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsCapacityReport)(nil)).Elem()
}

func (o BdsCapacityReportArrayOutput) ToBdsCapacityReportArrayOutput() BdsCapacityReportArrayOutput {
	return o
}

func (o BdsCapacityReportArrayOutput) ToBdsCapacityReportArrayOutputWithContext(ctx context.Context) BdsCapacityReportArrayOutput {
	return o
}

func (o BdsCapacityReportArrayOutput) Index(i pulumi.IntInput) BdsCapacityReportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BdsCapacityReport {
		return vs[0].([]*BdsCapacityReport)[vs[1].(int)]
	}).(BdsCapacityReportOutput)
}

type BdsCapacityReportMapOutput struct{ *pulumi.OutputState }

func (BdsCapacityReportMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsCapacityReport)(nil)).Elem()
}

func (o BdsCapacityReportMapOutput) ToBdsCapacityReportMapOutput() BdsCapacityReportMapOutput {
	return o
}

func (o BdsCapacityReportMapOutput) ToBdsCapacityReportMapOutputWithContext(ctx context.Context) BdsCapacityReportMapOutput {
	return o
}

func (o BdsCapacityReportMapOutput) MapIndex(k pulumi.StringInput) BdsCapacityReportOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BdsCapacityReport {
		return vs[0].(map[string]*BdsCapacityReport)[vs[1].(string)]
	}).(BdsCapacityReportOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BdsCapacityReportInput)(nil)).Elem(), &BdsCapacityReport{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsCapacityReportArrayInput)(nil)).Elem(), BdsCapacityReportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsCapacityReportMapInput)(nil)).Elem(), BdsCapacityReportMap{})
	pulumi.RegisterOutputType(BdsCapacityReportOutput{})
	pulumi.RegisterOutputType(BdsCapacityReportArrayOutput{})
	pulumi.RegisterOutputType(BdsCapacityReportMapOutput{})
}
