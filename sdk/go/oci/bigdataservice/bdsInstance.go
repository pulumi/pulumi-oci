// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Bds Instance resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Creates a Big Data Service cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/BigDataService"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := BigDataService.NewBdsInstance(ctx, "testBdsInstance", &BigDataService.BdsInstanceArgs{
// 			ClusterAdminPassword: pulumi.Any(_var.Bds_instance_cluster_admin_password),
// 			ClusterPublicKey:     pulumi.Any(_var.Bds_instance_cluster_public_key),
// 			ClusterVersion:       pulumi.Any(_var.Bds_instance_cluster_version),
// 			CompartmentId:        pulumi.Any(_var.Compartment_id),
// 			DisplayName:          pulumi.Any(_var.Bds_instance_display_name),
// 			IsHighAvailability:   pulumi.Any(_var.Bds_instance_is_high_availability),
// 			IsSecure:             pulumi.Any(_var.Bds_instance_is_secure),
// 			MasterNode: &bigdataservice.BdsInstanceMasterNodeArgs{
// 				Shape:                pulumi.Any(_var.Bds_instance_nodes_shape),
// 				SubnetId:             pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 				BlockVolumeSizeInGbs: pulumi.Any(_var.Bds_instance_nodes_block_volume_size_in_gbs),
// 				NumberOfNodes:        pulumi.Any(_var.Bds_instance_number_of_nodes),
// 			},
// 			UtilNode: &bigdataservice.BdsInstanceUtilNodeArgs{
// 				Shape:                pulumi.Any(_var.Bds_instance_nodes_shape),
// 				SubnetId:             pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 				BlockVolumeSizeInGbs: pulumi.Any(_var.Bds_instance_nodes_block_volume_size_in_gbs),
// 				NumberOfNodes:        pulumi.Any(_var.Bds_instance_number_of_nodes),
// 			},
// 			WorkerNode: &bigdataservice.BdsInstanceWorkerNodeArgs{
// 				Shape:                pulumi.Any(_var.Bds_instance_nodes_shape),
// 				SubnetId:             pulumi.Any(oci_core_subnet.Test_subnet.Id),
// 				BlockVolumeSizeInGbs: pulumi.Any(_var.Bds_instance_nodes_block_volume_size_in_gbs),
// 				NumberOfNodes:        pulumi.Any(_var.Bds_instance_number_of_nodes),
// 			},
// 			DefinedTags:  pulumi.Any(_var.Bds_instance_defined_tags),
// 			FreeformTags: pulumi.Any(_var.Bds_instance_freeform_tags),
// 			NetworkConfig: &bigdataservice.BdsInstanceNetworkConfigArgs{
// 				CidrBlock:            pulumi.Any(_var.Bds_instance_network_config_cidr_block),
// 				IsNatGatewayRequired: pulumi.Any(_var.Bds_instance_network_config_is_nat_gateway_required),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// BdsInstances can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:BigDataService/bdsInstance:BdsInstance test_bds_instance "id"
// ```
type BdsInstance struct {
	pulumi.CustomResourceState

	// The information about added Cloud SQL capability
	CloudSqlDetails BdsInstanceCloudSqlDetailArrayOutput `pulumi:"cloudSqlDetails"`
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringOutput `pulumi:"clusterAdminPassword"`
	// Specific info about a Hadoop cluster
	ClusterDetails BdsInstanceClusterDetailArrayOutput `pulumi:"clusterDetails"`
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey pulumi.StringOutput `pulumi:"clusterPublicKey"`
	// Version of the Hadoop distribution.
	ClusterVersion pulumi.StringOutput `pulumi:"clusterVersion"`
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The user who created the cluster.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Name of the Big Data Service cluster.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Boolean flag specifying whether or not Cloud SQL should be configured.
	IsCloudSqlConfigured pulumi.BoolOutput `pulumi:"isCloudSqlConfigured"`
	// Boolean flag specifying whether or not the cluster is highly available (HA).
	IsHighAvailability pulumi.BoolOutput `pulumi:"isHighAvailability"`
	// Boolean flag specifying whether or not the cluster should be set up as secure.
	IsSecure   pulumi.BoolOutput           `pulumi:"isSecure"`
	MasterNode BdsInstanceMasterNodeOutput `pulumi:"masterNode"`
	// Additional configuration of the user's network.
	NetworkConfig BdsInstanceNetworkConfigOutput `pulumi:"networkConfig"`
	// The list of nodes in the Big Data Service cluster.
	Nodes BdsInstanceNodeArrayOutput `pulumi:"nodes"`
	// The number of nodes that form the cluster.
	NumberOfNodes pulumi.IntOutput `pulumi:"numberOfNodes"`
	// The state of the cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput         `pulumi:"timeUpdated"`
	UtilNode    BdsInstanceUtilNodeOutput   `pulumi:"utilNode"`
	WorkerNode  BdsInstanceWorkerNodeOutput `pulumi:"workerNode"`
}

// NewBdsInstance registers a new resource with the given unique name, arguments, and options.
func NewBdsInstance(ctx *pulumi.Context,
	name string, args *BdsInstanceArgs, opts ...pulumi.ResourceOption) (*BdsInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterAdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'ClusterAdminPassword'")
	}
	if args.ClusterPublicKey == nil {
		return nil, errors.New("invalid value for required argument 'ClusterPublicKey'")
	}
	if args.ClusterVersion == nil {
		return nil, errors.New("invalid value for required argument 'ClusterVersion'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.IsHighAvailability == nil {
		return nil, errors.New("invalid value for required argument 'IsHighAvailability'")
	}
	if args.IsSecure == nil {
		return nil, errors.New("invalid value for required argument 'IsSecure'")
	}
	if args.MasterNode == nil {
		return nil, errors.New("invalid value for required argument 'MasterNode'")
	}
	if args.UtilNode == nil {
		return nil, errors.New("invalid value for required argument 'UtilNode'")
	}
	if args.WorkerNode == nil {
		return nil, errors.New("invalid value for required argument 'WorkerNode'")
	}
	var resource BdsInstance
	err := ctx.RegisterResource("oci:BigDataService/bdsInstance:BdsInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBdsInstance gets an existing BdsInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBdsInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BdsInstanceState, opts ...pulumi.ResourceOption) (*BdsInstance, error) {
	var resource BdsInstance
	err := ctx.ReadResource("oci:BigDataService/bdsInstance:BdsInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BdsInstance resources.
type bdsInstanceState struct {
	// The information about added Cloud SQL capability
	CloudSqlDetails []BdsInstanceCloudSqlDetail `pulumi:"cloudSqlDetails"`
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword *string `pulumi:"clusterAdminPassword"`
	// Specific info about a Hadoop cluster
	ClusterDetails []BdsInstanceClusterDetail `pulumi:"clusterDetails"`
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey *string `pulumi:"clusterPublicKey"`
	// Version of the Hadoop distribution.
	ClusterVersion *string `pulumi:"clusterVersion"`
	// (Updatable) The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The user who created the cluster.
	CreatedBy *string `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Name of the Big Data Service cluster.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Boolean flag specifying whether or not Cloud SQL should be configured.
	IsCloudSqlConfigured *bool `pulumi:"isCloudSqlConfigured"`
	// Boolean flag specifying whether or not the cluster is highly available (HA).
	IsHighAvailability *bool `pulumi:"isHighAvailability"`
	// Boolean flag specifying whether or not the cluster should be set up as secure.
	IsSecure   *bool                  `pulumi:"isSecure"`
	MasterNode *BdsInstanceMasterNode `pulumi:"masterNode"`
	// Additional configuration of the user's network.
	NetworkConfig *BdsInstanceNetworkConfig `pulumi:"networkConfig"`
	// The list of nodes in the Big Data Service cluster.
	Nodes []BdsInstanceNode `pulumi:"nodes"`
	// The number of nodes that form the cluster.
	NumberOfNodes *int `pulumi:"numberOfNodes"`
	// The state of the cluster.
	State *string `pulumi:"state"`
	// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated *string                `pulumi:"timeUpdated"`
	UtilNode    *BdsInstanceUtilNode   `pulumi:"utilNode"`
	WorkerNode  *BdsInstanceWorkerNode `pulumi:"workerNode"`
}

type BdsInstanceState struct {
	// The information about added Cloud SQL capability
	CloudSqlDetails BdsInstanceCloudSqlDetailArrayInput
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringPtrInput
	// Specific info about a Hadoop cluster
	ClusterDetails BdsInstanceClusterDetailArrayInput
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey pulumi.StringPtrInput
	// Version of the Hadoop distribution.
	ClusterVersion pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The user who created the cluster.
	CreatedBy pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.MapInput
	// (Updatable) Name of the Big Data Service cluster.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Boolean flag specifying whether or not Cloud SQL should be configured.
	IsCloudSqlConfigured pulumi.BoolPtrInput
	// Boolean flag specifying whether or not the cluster is highly available (HA).
	IsHighAvailability pulumi.BoolPtrInput
	// Boolean flag specifying whether or not the cluster should be set up as secure.
	IsSecure   pulumi.BoolPtrInput
	MasterNode BdsInstanceMasterNodePtrInput
	// Additional configuration of the user's network.
	NetworkConfig BdsInstanceNetworkConfigPtrInput
	// The list of nodes in the Big Data Service cluster.
	Nodes BdsInstanceNodeArrayInput
	// The number of nodes that form the cluster.
	NumberOfNodes pulumi.IntPtrInput
	// The state of the cluster.
	State pulumi.StringPtrInput
	// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	UtilNode    BdsInstanceUtilNodePtrInput
	WorkerNode  BdsInstanceWorkerNodePtrInput
}

func (BdsInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceState)(nil)).Elem()
}

type bdsInstanceArgs struct {
	// The information about added Cloud SQL capability
	CloudSqlDetails []BdsInstanceCloudSqlDetail `pulumi:"cloudSqlDetails"`
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword string `pulumi:"clusterAdminPassword"`
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey string `pulumi:"clusterPublicKey"`
	// Version of the Hadoop distribution.
	ClusterVersion string `pulumi:"clusterVersion"`
	// (Updatable) The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Name of the Big Data Service cluster.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Boolean flag specifying whether or not Cloud SQL should be configured.
	IsCloudSqlConfigured *bool `pulumi:"isCloudSqlConfigured"`
	// Boolean flag specifying whether or not the cluster is highly available (HA).
	IsHighAvailability bool `pulumi:"isHighAvailability"`
	// Boolean flag specifying whether or not the cluster should be set up as secure.
	IsSecure   bool                  `pulumi:"isSecure"`
	MasterNode BdsInstanceMasterNode `pulumi:"masterNode"`
	// Additional configuration of the user's network.
	NetworkConfig *BdsInstanceNetworkConfig `pulumi:"networkConfig"`
	UtilNode      BdsInstanceUtilNode       `pulumi:"utilNode"`
	WorkerNode    BdsInstanceWorkerNode     `pulumi:"workerNode"`
}

// The set of arguments for constructing a BdsInstance resource.
type BdsInstanceArgs struct {
	// The information about added Cloud SQL capability
	CloudSqlDetails BdsInstanceCloudSqlDetailArrayInput
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringInput
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey pulumi.StringInput
	// Version of the Hadoop distribution.
	ClusterVersion pulumi.StringInput
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.MapInput
	// (Updatable) Name of the Big Data Service cluster.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// Boolean flag specifying whether or not Cloud SQL should be configured.
	IsCloudSqlConfigured pulumi.BoolPtrInput
	// Boolean flag specifying whether or not the cluster is highly available (HA).
	IsHighAvailability pulumi.BoolInput
	// Boolean flag specifying whether or not the cluster should be set up as secure.
	IsSecure   pulumi.BoolInput
	MasterNode BdsInstanceMasterNodeInput
	// Additional configuration of the user's network.
	NetworkConfig BdsInstanceNetworkConfigPtrInput
	UtilNode      BdsInstanceUtilNodeInput
	WorkerNode    BdsInstanceWorkerNodeInput
}

func (BdsInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceArgs)(nil)).Elem()
}

type BdsInstanceInput interface {
	pulumi.Input

	ToBdsInstanceOutput() BdsInstanceOutput
	ToBdsInstanceOutputWithContext(ctx context.Context) BdsInstanceOutput
}

func (*BdsInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstance)(nil)).Elem()
}

func (i *BdsInstance) ToBdsInstanceOutput() BdsInstanceOutput {
	return i.ToBdsInstanceOutputWithContext(context.Background())
}

func (i *BdsInstance) ToBdsInstanceOutputWithContext(ctx context.Context) BdsInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceOutput)
}

// BdsInstanceArrayInput is an input type that accepts BdsInstanceArray and BdsInstanceArrayOutput values.
// You can construct a concrete instance of `BdsInstanceArrayInput` via:
//
//          BdsInstanceArray{ BdsInstanceArgs{...} }
type BdsInstanceArrayInput interface {
	pulumi.Input

	ToBdsInstanceArrayOutput() BdsInstanceArrayOutput
	ToBdsInstanceArrayOutputWithContext(context.Context) BdsInstanceArrayOutput
}

type BdsInstanceArray []BdsInstanceInput

func (BdsInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstance)(nil)).Elem()
}

func (i BdsInstanceArray) ToBdsInstanceArrayOutput() BdsInstanceArrayOutput {
	return i.ToBdsInstanceArrayOutputWithContext(context.Background())
}

func (i BdsInstanceArray) ToBdsInstanceArrayOutputWithContext(ctx context.Context) BdsInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceArrayOutput)
}

// BdsInstanceMapInput is an input type that accepts BdsInstanceMap and BdsInstanceMapOutput values.
// You can construct a concrete instance of `BdsInstanceMapInput` via:
//
//          BdsInstanceMap{ "key": BdsInstanceArgs{...} }
type BdsInstanceMapInput interface {
	pulumi.Input

	ToBdsInstanceMapOutput() BdsInstanceMapOutput
	ToBdsInstanceMapOutputWithContext(context.Context) BdsInstanceMapOutput
}

type BdsInstanceMap map[string]BdsInstanceInput

func (BdsInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstance)(nil)).Elem()
}

func (i BdsInstanceMap) ToBdsInstanceMapOutput() BdsInstanceMapOutput {
	return i.ToBdsInstanceMapOutputWithContext(context.Background())
}

func (i BdsInstanceMap) ToBdsInstanceMapOutputWithContext(ctx context.Context) BdsInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceMapOutput)
}

type BdsInstanceOutput struct{ *pulumi.OutputState }

func (BdsInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstance)(nil)).Elem()
}

func (o BdsInstanceOutput) ToBdsInstanceOutput() BdsInstanceOutput {
	return o
}

func (o BdsInstanceOutput) ToBdsInstanceOutputWithContext(ctx context.Context) BdsInstanceOutput {
	return o
}

type BdsInstanceArrayOutput struct{ *pulumi.OutputState }

func (BdsInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstance)(nil)).Elem()
}

func (o BdsInstanceArrayOutput) ToBdsInstanceArrayOutput() BdsInstanceArrayOutput {
	return o
}

func (o BdsInstanceArrayOutput) ToBdsInstanceArrayOutputWithContext(ctx context.Context) BdsInstanceArrayOutput {
	return o
}

func (o BdsInstanceArrayOutput) Index(i pulumi.IntInput) BdsInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BdsInstance {
		return vs[0].([]*BdsInstance)[vs[1].(int)]
	}).(BdsInstanceOutput)
}

type BdsInstanceMapOutput struct{ *pulumi.OutputState }

func (BdsInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstance)(nil)).Elem()
}

func (o BdsInstanceMapOutput) ToBdsInstanceMapOutput() BdsInstanceMapOutput {
	return o
}

func (o BdsInstanceMapOutput) ToBdsInstanceMapOutputWithContext(ctx context.Context) BdsInstanceMapOutput {
	return o
}

func (o BdsInstanceMapOutput) MapIndex(k pulumi.StringInput) BdsInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BdsInstance {
		return vs[0].(map[string]*BdsInstance)[vs[1].(string)]
	}).(BdsInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceInput)(nil)).Elem(), &BdsInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceArrayInput)(nil)).Elem(), BdsInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceMapInput)(nil)).Elem(), BdsInstanceMap{})
	pulumi.RegisterOutputType(BdsInstanceOutput{})
	pulumi.RegisterOutputType(BdsInstanceArrayOutput{})
	pulumi.RegisterOutputType(BdsInstanceMapOutput{})
}
