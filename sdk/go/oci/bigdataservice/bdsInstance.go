// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Bds Instance resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Creates a new BDS instance.
//
// ## Import
//
// BdsInstances can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:BigDataService/bdsInstance:BdsInstance test_bds_instance "id"
// ```
type BdsInstance struct {
	pulumi.CustomResourceState

	// Cluster version details including bds and odh version information.
	BdsClusterVersionSummary BdsInstanceBdsClusterVersionSummaryOutput `pulumi:"bdsClusterVersionSummary"`
	// (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
	BootstrapScriptUrl pulumi.StringOutput `pulumi:"bootstrapScriptUrl"`
	// The information about added Cloud SQL capability
	CloudSqlDetails BdsInstanceCloudSqlDetailArrayOutput `pulumi:"cloudSqlDetails"`
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringOutput `pulumi:"clusterAdminPassword"`
	// Specific info about a Hadoop cluster
	ClusterDetails BdsInstanceClusterDetailArrayOutput `pulumi:"clusterDetails"`
	// Profile of the Big Data Service cluster.
	ClusterProfile pulumi.StringOutput `pulumi:"clusterProfile"`
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey pulumi.StringOutput `pulumi:"clusterPublicKey"`
	// Version of the Hadoop distribution
	ClusterVersion pulumi.StringOutput `pulumi:"clusterVersion"`
	// (Updatable) The OCID of the compartment
	CompartmentId         pulumi.StringOutput                       `pulumi:"compartmentId"`
	ComputeOnlyWorkerNode BdsInstanceComputeOnlyWorkerNodePtrOutput `pulumi:"computeOnlyWorkerNode"`
	// The user who created the cluster.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Name of the BDS instance
	DisplayName pulumi.StringOutput          `pulumi:"displayName"`
	EdgeNode    BdsInstanceEdgeNodePtrOutput `pulumi:"edgeNode"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Tag to ignore changing the shape of existing worker, master, utility, compute_only_worker, edge, kafkaBroker nodes, in a list format, when new nodes are added with a different shape.
	IgnoreExistingNodesShapes pulumi.StringArrayOutput `pulumi:"ignoreExistingNodesShapes"`
	// (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
	IsCloudSqlConfigured pulumi.BoolOutput    `pulumi:"isCloudSqlConfigured"`
	IsForceRemoveEnabled pulumi.BoolPtrOutput `pulumi:"isForceRemoveEnabled"`
	// (Updatable) When setting state as `INACTIVE` for stopping a cluster, setting this flag to true forcefully stops the bds instance.
	IsForceStopJobs pulumi.BoolPtrOutput `pulumi:"isForceStopJobs"`
	// Boolean flag specifying whether or not the cluster is HA
	IsHighAvailability pulumi.BoolOutput `pulumi:"isHighAvailability"`
	// Boolean flag specifying whether or not Kafka should be configured.
	IsKafkaConfigured pulumi.BoolPtrOutput `pulumi:"isKafkaConfigured"`
	// Boolean flag specifying whether or not the cluster should be setup as secure.
	IsSecure pulumi.BoolOutput `pulumi:"isSecure"`
	// The kafka broker node in the BDS instance
	KafkaBrokerNode BdsInstanceKafkaBrokerNodePtrOutput `pulumi:"kafkaBrokerNode"`
	// The user-defined kerberos realm name.
	KerberosRealmName pulumi.StringOutput `pulumi:"kerberosRealmName"`
	// (Updatable) The OCID of the Key Management master encryption key.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// The master node in the BDS instance
	MasterNode BdsInstanceMasterNodeOutput `pulumi:"masterNode"`
	// (Updatable) Additional configuration of the user's network.
	NetworkConfig BdsInstanceNetworkConfigOutput `pulumi:"networkConfig"`
	// The list of nodes in the Big Data Service cluster.
	Nodes BdsInstanceNodeArrayOutput `pulumi:"nodes"`
	// Number of nodes that forming the cluster
	NumberOfNodes pulumi.IntOutput `pulumi:"numberOfNodes"`
	// Number of nodes that require a maintenance reboot
	NumberOfNodesRequiringMaintenanceReboot pulumi.IntOutput `pulumi:"numberOfNodesRequiringMaintenanceReboot"`
	// (Updatable) The version of the patch to be upated.
	OsPatchVersion pulumi.StringPtrOutput `pulumi:"osPatchVersion"`
	// (Updatable) An optional property when used triggers Remove Node from an Active Cluster. Takes the node ocid as input
	RemoveNode               pulumi.StringPtrOutput                        `pulumi:"removeNode"`
	StartClusterShapeConfigs BdsInstanceStartClusterShapeConfigArrayOutput `pulumi:"startClusterShapeConfigs"`
	// (Updatable) The target state for the Bds Instance. Could be set to `ACTIVE` or `INACTIVE` to start/stop the bds instance.
	State pulumi.StringOutput `pulumi:"state"`
	// The time the BDS instance was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the BDS instance was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// The utility node in the BDS instance
	UtilNode   BdsInstanceUtilNodeOutput   `pulumi:"utilNode"`
	WorkerNode BdsInstanceWorkerNodeOutput `pulumi:"workerNode"`
}

// NewBdsInstance registers a new resource with the given unique name, arguments, and options.
func NewBdsInstance(ctx *pulumi.Context,
	name string, args *BdsInstanceArgs, opts ...pulumi.ResourceOption) (*BdsInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterAdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'ClusterAdminPassword'")
	}
	if args.ClusterPublicKey == nil {
		return nil, errors.New("invalid value for required argument 'ClusterPublicKey'")
	}
	if args.ClusterVersion == nil {
		return nil, errors.New("invalid value for required argument 'ClusterVersion'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.IsHighAvailability == nil {
		return nil, errors.New("invalid value for required argument 'IsHighAvailability'")
	}
	if args.IsSecure == nil {
		return nil, errors.New("invalid value for required argument 'IsSecure'")
	}
	if args.MasterNode == nil {
		return nil, errors.New("invalid value for required argument 'MasterNode'")
	}
	if args.UtilNode == nil {
		return nil, errors.New("invalid value for required argument 'UtilNode'")
	}
	if args.WorkerNode == nil {
		return nil, errors.New("invalid value for required argument 'WorkerNode'")
	}
	if args.ClusterAdminPassword != nil {
		args.ClusterAdminPassword = pulumi.ToSecret(args.ClusterAdminPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clusterAdminPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BdsInstance
	err := ctx.RegisterResource("oci:BigDataService/bdsInstance:BdsInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBdsInstance gets an existing BdsInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBdsInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BdsInstanceState, opts ...pulumi.ResourceOption) (*BdsInstance, error) {
	var resource BdsInstance
	err := ctx.ReadResource("oci:BigDataService/bdsInstance:BdsInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BdsInstance resources.
type bdsInstanceState struct {
	// Cluster version details including bds and odh version information.
	BdsClusterVersionSummary *BdsInstanceBdsClusterVersionSummary `pulumi:"bdsClusterVersionSummary"`
	// (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
	BootstrapScriptUrl *string `pulumi:"bootstrapScriptUrl"`
	// The information about added Cloud SQL capability
	CloudSqlDetails []BdsInstanceCloudSqlDetail `pulumi:"cloudSqlDetails"`
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword *string `pulumi:"clusterAdminPassword"`
	// Specific info about a Hadoop cluster
	ClusterDetails []BdsInstanceClusterDetail `pulumi:"clusterDetails"`
	// Profile of the Big Data Service cluster.
	ClusterProfile *string `pulumi:"clusterProfile"`
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey *string `pulumi:"clusterPublicKey"`
	// Version of the Hadoop distribution
	ClusterVersion *string `pulumi:"clusterVersion"`
	// (Updatable) The OCID of the compartment
	CompartmentId         *string                           `pulumi:"compartmentId"`
	ComputeOnlyWorkerNode *BdsInstanceComputeOnlyWorkerNode `pulumi:"computeOnlyWorkerNode"`
	// The user who created the cluster.
	CreatedBy *string `pulumi:"createdBy"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Name of the BDS instance
	DisplayName *string              `pulumi:"displayName"`
	EdgeNode    *BdsInstanceEdgeNode `pulumi:"edgeNode"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Tag to ignore changing the shape of existing worker, master, utility, compute_only_worker, edge, kafkaBroker nodes, in a list format, when new nodes are added with a different shape.
	IgnoreExistingNodesShapes []string `pulumi:"ignoreExistingNodesShapes"`
	// (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
	IsCloudSqlConfigured *bool `pulumi:"isCloudSqlConfigured"`
	IsForceRemoveEnabled *bool `pulumi:"isForceRemoveEnabled"`
	// (Updatable) When setting state as `INACTIVE` for stopping a cluster, setting this flag to true forcefully stops the bds instance.
	IsForceStopJobs *bool `pulumi:"isForceStopJobs"`
	// Boolean flag specifying whether or not the cluster is HA
	IsHighAvailability *bool `pulumi:"isHighAvailability"`
	// Boolean flag specifying whether or not Kafka should be configured.
	IsKafkaConfigured *bool `pulumi:"isKafkaConfigured"`
	// Boolean flag specifying whether or not the cluster should be setup as secure.
	IsSecure *bool `pulumi:"isSecure"`
	// The kafka broker node in the BDS instance
	KafkaBrokerNode *BdsInstanceKafkaBrokerNode `pulumi:"kafkaBrokerNode"`
	// The user-defined kerberos realm name.
	KerberosRealmName *string `pulumi:"kerberosRealmName"`
	// (Updatable) The OCID of the Key Management master encryption key.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The master node in the BDS instance
	MasterNode *BdsInstanceMasterNode `pulumi:"masterNode"`
	// (Updatable) Additional configuration of the user's network.
	NetworkConfig *BdsInstanceNetworkConfig `pulumi:"networkConfig"`
	// The list of nodes in the Big Data Service cluster.
	Nodes []BdsInstanceNode `pulumi:"nodes"`
	// Number of nodes that forming the cluster
	NumberOfNodes *int `pulumi:"numberOfNodes"`
	// Number of nodes that require a maintenance reboot
	NumberOfNodesRequiringMaintenanceReboot *int `pulumi:"numberOfNodesRequiringMaintenanceReboot"`
	// (Updatable) The version of the patch to be upated.
	OsPatchVersion *string `pulumi:"osPatchVersion"`
	// (Updatable) An optional property when used triggers Remove Node from an Active Cluster. Takes the node ocid as input
	RemoveNode               *string                              `pulumi:"removeNode"`
	StartClusterShapeConfigs []BdsInstanceStartClusterShapeConfig `pulumi:"startClusterShapeConfigs"`
	// (Updatable) The target state for the Bds Instance. Could be set to `ACTIVE` or `INACTIVE` to start/stop the bds instance.
	State *string `pulumi:"state"`
	// The time the BDS instance was created. An RFC3339 formatted datetime string
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the BDS instance was updated. An RFC3339 formatted datetime string
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The utility node in the BDS instance
	UtilNode   *BdsInstanceUtilNode   `pulumi:"utilNode"`
	WorkerNode *BdsInstanceWorkerNode `pulumi:"workerNode"`
}

type BdsInstanceState struct {
	// Cluster version details including bds and odh version information.
	BdsClusterVersionSummary BdsInstanceBdsClusterVersionSummaryPtrInput
	// (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
	BootstrapScriptUrl pulumi.StringPtrInput
	// The information about added Cloud SQL capability
	CloudSqlDetails BdsInstanceCloudSqlDetailArrayInput
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringPtrInput
	// Specific info about a Hadoop cluster
	ClusterDetails BdsInstanceClusterDetailArrayInput
	// Profile of the Big Data Service cluster.
	ClusterProfile pulumi.StringPtrInput
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey pulumi.StringPtrInput
	// Version of the Hadoop distribution
	ClusterVersion pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment
	CompartmentId         pulumi.StringPtrInput
	ComputeOnlyWorkerNode BdsInstanceComputeOnlyWorkerNodePtrInput
	// The user who created the cluster.
	CreatedBy pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Name of the BDS instance
	DisplayName pulumi.StringPtrInput
	EdgeNode    BdsInstanceEdgeNodePtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Tag to ignore changing the shape of existing worker, master, utility, compute_only_worker, edge, kafkaBroker nodes, in a list format, when new nodes are added with a different shape.
	IgnoreExistingNodesShapes pulumi.StringArrayInput
	// (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
	IsCloudSqlConfigured pulumi.BoolPtrInput
	IsForceRemoveEnabled pulumi.BoolPtrInput
	// (Updatable) When setting state as `INACTIVE` for stopping a cluster, setting this flag to true forcefully stops the bds instance.
	IsForceStopJobs pulumi.BoolPtrInput
	// Boolean flag specifying whether or not the cluster is HA
	IsHighAvailability pulumi.BoolPtrInput
	// Boolean flag specifying whether or not Kafka should be configured.
	IsKafkaConfigured pulumi.BoolPtrInput
	// Boolean flag specifying whether or not the cluster should be setup as secure.
	IsSecure pulumi.BoolPtrInput
	// The kafka broker node in the BDS instance
	KafkaBrokerNode BdsInstanceKafkaBrokerNodePtrInput
	// The user-defined kerberos realm name.
	KerberosRealmName pulumi.StringPtrInput
	// (Updatable) The OCID of the Key Management master encryption key.
	KmsKeyId pulumi.StringPtrInput
	// The master node in the BDS instance
	MasterNode BdsInstanceMasterNodePtrInput
	// (Updatable) Additional configuration of the user's network.
	NetworkConfig BdsInstanceNetworkConfigPtrInput
	// The list of nodes in the Big Data Service cluster.
	Nodes BdsInstanceNodeArrayInput
	// Number of nodes that forming the cluster
	NumberOfNodes pulumi.IntPtrInput
	// Number of nodes that require a maintenance reboot
	NumberOfNodesRequiringMaintenanceReboot pulumi.IntPtrInput
	// (Updatable) The version of the patch to be upated.
	OsPatchVersion pulumi.StringPtrInput
	// (Updatable) An optional property when used triggers Remove Node from an Active Cluster. Takes the node ocid as input
	RemoveNode               pulumi.StringPtrInput
	StartClusterShapeConfigs BdsInstanceStartClusterShapeConfigArrayInput
	// (Updatable) The target state for the Bds Instance. Could be set to `ACTIVE` or `INACTIVE` to start/stop the bds instance.
	State pulumi.StringPtrInput
	// The time the BDS instance was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringPtrInput
	// The time the BDS instance was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringPtrInput
	// The utility node in the BDS instance
	UtilNode   BdsInstanceUtilNodePtrInput
	WorkerNode BdsInstanceWorkerNodePtrInput
}

func (BdsInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceState)(nil)).Elem()
}

type bdsInstanceArgs struct {
	// Cluster version details including bds and odh version information.
	BdsClusterVersionSummary *BdsInstanceBdsClusterVersionSummary `pulumi:"bdsClusterVersionSummary"`
	// (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
	BootstrapScriptUrl *string `pulumi:"bootstrapScriptUrl"`
	// The information about added Cloud SQL capability
	CloudSqlDetails []BdsInstanceCloudSqlDetail `pulumi:"cloudSqlDetails"`
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword string `pulumi:"clusterAdminPassword"`
	// Profile of the Big Data Service cluster.
	ClusterProfile *string `pulumi:"clusterProfile"`
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey string `pulumi:"clusterPublicKey"`
	// Version of the Hadoop distribution
	ClusterVersion string `pulumi:"clusterVersion"`
	// (Updatable) The OCID of the compartment
	CompartmentId         string                            `pulumi:"compartmentId"`
	ComputeOnlyWorkerNode *BdsInstanceComputeOnlyWorkerNode `pulumi:"computeOnlyWorkerNode"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Name of the BDS instance
	DisplayName string               `pulumi:"displayName"`
	EdgeNode    *BdsInstanceEdgeNode `pulumi:"edgeNode"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Tag to ignore changing the shape of existing worker, master, utility, compute_only_worker, edge, kafkaBroker nodes, in a list format, when new nodes are added with a different shape.
	IgnoreExistingNodesShapes []string `pulumi:"ignoreExistingNodesShapes"`
	// (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
	IsCloudSqlConfigured *bool `pulumi:"isCloudSqlConfigured"`
	IsForceRemoveEnabled *bool `pulumi:"isForceRemoveEnabled"`
	// (Updatable) When setting state as `INACTIVE` for stopping a cluster, setting this flag to true forcefully stops the bds instance.
	IsForceStopJobs *bool `pulumi:"isForceStopJobs"`
	// Boolean flag specifying whether or not the cluster is HA
	IsHighAvailability bool `pulumi:"isHighAvailability"`
	// Boolean flag specifying whether or not Kafka should be configured.
	IsKafkaConfigured *bool `pulumi:"isKafkaConfigured"`
	// Boolean flag specifying whether or not the cluster should be setup as secure.
	IsSecure bool `pulumi:"isSecure"`
	// The kafka broker node in the BDS instance
	KafkaBrokerNode *BdsInstanceKafkaBrokerNode `pulumi:"kafkaBrokerNode"`
	// The user-defined kerberos realm name.
	KerberosRealmName *string `pulumi:"kerberosRealmName"`
	// (Updatable) The OCID of the Key Management master encryption key.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The master node in the BDS instance
	MasterNode BdsInstanceMasterNode `pulumi:"masterNode"`
	// (Updatable) Additional configuration of the user's network.
	NetworkConfig *BdsInstanceNetworkConfig `pulumi:"networkConfig"`
	// (Updatable) The version of the patch to be upated.
	OsPatchVersion *string `pulumi:"osPatchVersion"`
	// (Updatable) An optional property when used triggers Remove Node from an Active Cluster. Takes the node ocid as input
	RemoveNode               *string                              `pulumi:"removeNode"`
	StartClusterShapeConfigs []BdsInstanceStartClusterShapeConfig `pulumi:"startClusterShapeConfigs"`
	// (Updatable) The target state for the Bds Instance. Could be set to `ACTIVE` or `INACTIVE` to start/stop the bds instance.
	State *string `pulumi:"state"`
	// The utility node in the BDS instance
	UtilNode   BdsInstanceUtilNode   `pulumi:"utilNode"`
	WorkerNode BdsInstanceWorkerNode `pulumi:"workerNode"`
}

// The set of arguments for constructing a BdsInstance resource.
type BdsInstanceArgs struct {
	// Cluster version details including bds and odh version information.
	BdsClusterVersionSummary BdsInstanceBdsClusterVersionSummaryPtrInput
	// (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
	BootstrapScriptUrl pulumi.StringPtrInput
	// The information about added Cloud SQL capability
	CloudSqlDetails BdsInstanceCloudSqlDetailArrayInput
	// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
	ClusterAdminPassword pulumi.StringInput
	// Profile of the Big Data Service cluster.
	ClusterProfile pulumi.StringPtrInput
	// The SSH public key used to authenticate the cluster connection.
	ClusterPublicKey pulumi.StringInput
	// Version of the Hadoop distribution
	ClusterVersion pulumi.StringInput
	// (Updatable) The OCID of the compartment
	CompartmentId         pulumi.StringInput
	ComputeOnlyWorkerNode BdsInstanceComputeOnlyWorkerNodePtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Name of the BDS instance
	DisplayName pulumi.StringInput
	EdgeNode    BdsInstanceEdgeNodePtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Tag to ignore changing the shape of existing worker, master, utility, compute_only_worker, edge, kafkaBroker nodes, in a list format, when new nodes are added with a different shape.
	IgnoreExistingNodesShapes pulumi.StringArrayInput
	// (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
	IsCloudSqlConfigured pulumi.BoolPtrInput
	IsForceRemoveEnabled pulumi.BoolPtrInput
	// (Updatable) When setting state as `INACTIVE` for stopping a cluster, setting this flag to true forcefully stops the bds instance.
	IsForceStopJobs pulumi.BoolPtrInput
	// Boolean flag specifying whether or not the cluster is HA
	IsHighAvailability pulumi.BoolInput
	// Boolean flag specifying whether or not Kafka should be configured.
	IsKafkaConfigured pulumi.BoolPtrInput
	// Boolean flag specifying whether or not the cluster should be setup as secure.
	IsSecure pulumi.BoolInput
	// The kafka broker node in the BDS instance
	KafkaBrokerNode BdsInstanceKafkaBrokerNodePtrInput
	// The user-defined kerberos realm name.
	KerberosRealmName pulumi.StringPtrInput
	// (Updatable) The OCID of the Key Management master encryption key.
	KmsKeyId pulumi.StringPtrInput
	// The master node in the BDS instance
	MasterNode BdsInstanceMasterNodeInput
	// (Updatable) Additional configuration of the user's network.
	NetworkConfig BdsInstanceNetworkConfigPtrInput
	// (Updatable) The version of the patch to be upated.
	OsPatchVersion pulumi.StringPtrInput
	// (Updatable) An optional property when used triggers Remove Node from an Active Cluster. Takes the node ocid as input
	RemoveNode               pulumi.StringPtrInput
	StartClusterShapeConfigs BdsInstanceStartClusterShapeConfigArrayInput
	// (Updatable) The target state for the Bds Instance. Could be set to `ACTIVE` or `INACTIVE` to start/stop the bds instance.
	State pulumi.StringPtrInput
	// The utility node in the BDS instance
	UtilNode   BdsInstanceUtilNodeInput
	WorkerNode BdsInstanceWorkerNodeInput
}

func (BdsInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceArgs)(nil)).Elem()
}

type BdsInstanceInput interface {
	pulumi.Input

	ToBdsInstanceOutput() BdsInstanceOutput
	ToBdsInstanceOutputWithContext(ctx context.Context) BdsInstanceOutput
}

func (*BdsInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstance)(nil)).Elem()
}

func (i *BdsInstance) ToBdsInstanceOutput() BdsInstanceOutput {
	return i.ToBdsInstanceOutputWithContext(context.Background())
}

func (i *BdsInstance) ToBdsInstanceOutputWithContext(ctx context.Context) BdsInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceOutput)
}

// BdsInstanceArrayInput is an input type that accepts BdsInstanceArray and BdsInstanceArrayOutput values.
// You can construct a concrete instance of `BdsInstanceArrayInput` via:
//
//	BdsInstanceArray{ BdsInstanceArgs{...} }
type BdsInstanceArrayInput interface {
	pulumi.Input

	ToBdsInstanceArrayOutput() BdsInstanceArrayOutput
	ToBdsInstanceArrayOutputWithContext(context.Context) BdsInstanceArrayOutput
}

type BdsInstanceArray []BdsInstanceInput

func (BdsInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstance)(nil)).Elem()
}

func (i BdsInstanceArray) ToBdsInstanceArrayOutput() BdsInstanceArrayOutput {
	return i.ToBdsInstanceArrayOutputWithContext(context.Background())
}

func (i BdsInstanceArray) ToBdsInstanceArrayOutputWithContext(ctx context.Context) BdsInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceArrayOutput)
}

// BdsInstanceMapInput is an input type that accepts BdsInstanceMap and BdsInstanceMapOutput values.
// You can construct a concrete instance of `BdsInstanceMapInput` via:
//
//	BdsInstanceMap{ "key": BdsInstanceArgs{...} }
type BdsInstanceMapInput interface {
	pulumi.Input

	ToBdsInstanceMapOutput() BdsInstanceMapOutput
	ToBdsInstanceMapOutputWithContext(context.Context) BdsInstanceMapOutput
}

type BdsInstanceMap map[string]BdsInstanceInput

func (BdsInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstance)(nil)).Elem()
}

func (i BdsInstanceMap) ToBdsInstanceMapOutput() BdsInstanceMapOutput {
	return i.ToBdsInstanceMapOutputWithContext(context.Background())
}

func (i BdsInstanceMap) ToBdsInstanceMapOutputWithContext(ctx context.Context) BdsInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceMapOutput)
}

type BdsInstanceOutput struct{ *pulumi.OutputState }

func (BdsInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstance)(nil)).Elem()
}

func (o BdsInstanceOutput) ToBdsInstanceOutput() BdsInstanceOutput {
	return o
}

func (o BdsInstanceOutput) ToBdsInstanceOutputWithContext(ctx context.Context) BdsInstanceOutput {
	return o
}

// Cluster version details including bds and odh version information.
func (o BdsInstanceOutput) BdsClusterVersionSummary() BdsInstanceBdsClusterVersionSummaryOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceBdsClusterVersionSummaryOutput { return v.BdsClusterVersionSummary }).(BdsInstanceBdsClusterVersionSummaryOutput)
}

// (Updatable) Pre-authenticated URL of the script in Object Store that is downloaded and executed.
func (o BdsInstanceOutput) BootstrapScriptUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.BootstrapScriptUrl }).(pulumi.StringOutput)
}

// The information about added Cloud SQL capability
func (o BdsInstanceOutput) CloudSqlDetails() BdsInstanceCloudSqlDetailArrayOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceCloudSqlDetailArrayOutput { return v.CloudSqlDetails }).(BdsInstanceCloudSqlDetailArrayOutput)
}

// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
func (o BdsInstanceOutput) ClusterAdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.ClusterAdminPassword }).(pulumi.StringOutput)
}

// Specific info about a Hadoop cluster
func (o BdsInstanceOutput) ClusterDetails() BdsInstanceClusterDetailArrayOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceClusterDetailArrayOutput { return v.ClusterDetails }).(BdsInstanceClusterDetailArrayOutput)
}

// Profile of the Big Data Service cluster.
func (o BdsInstanceOutput) ClusterProfile() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.ClusterProfile }).(pulumi.StringOutput)
}

// The SSH public key used to authenticate the cluster connection.
func (o BdsInstanceOutput) ClusterPublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.ClusterPublicKey }).(pulumi.StringOutput)
}

// Version of the Hadoop distribution
func (o BdsInstanceOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.ClusterVersion }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the compartment
func (o BdsInstanceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o BdsInstanceOutput) ComputeOnlyWorkerNode() BdsInstanceComputeOnlyWorkerNodePtrOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceComputeOnlyWorkerNodePtrOutput { return v.ComputeOnlyWorkerNode }).(BdsInstanceComputeOnlyWorkerNodePtrOutput)
}

// The user who created the cluster.
func (o BdsInstanceOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o BdsInstanceOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Name of the BDS instance
func (o BdsInstanceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o BdsInstanceOutput) EdgeNode() BdsInstanceEdgeNodePtrOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceEdgeNodePtrOutput { return v.EdgeNode }).(BdsInstanceEdgeNodePtrOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o BdsInstanceOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Tag to ignore changing the shape of existing worker, master, utility, compute_only_worker, edge, kafkaBroker nodes, in a list format, when new nodes are added with a different shape.
func (o BdsInstanceOutput) IgnoreExistingNodesShapes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringArrayOutput { return v.IgnoreExistingNodesShapes }).(pulumi.StringArrayOutput)
}

// (Updatable) Boolean flag specifying whether we configure Cloud SQL or not
func (o BdsInstanceOutput) IsCloudSqlConfigured() pulumi.BoolOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.BoolOutput { return v.IsCloudSqlConfigured }).(pulumi.BoolOutput)
}

func (o BdsInstanceOutput) IsForceRemoveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.BoolPtrOutput { return v.IsForceRemoveEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) When setting state as `INACTIVE` for stopping a cluster, setting this flag to true forcefully stops the bds instance.
func (o BdsInstanceOutput) IsForceStopJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.BoolPtrOutput { return v.IsForceStopJobs }).(pulumi.BoolPtrOutput)
}

// Boolean flag specifying whether or not the cluster is HA
func (o BdsInstanceOutput) IsHighAvailability() pulumi.BoolOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.BoolOutput { return v.IsHighAvailability }).(pulumi.BoolOutput)
}

// Boolean flag specifying whether or not Kafka should be configured.
func (o BdsInstanceOutput) IsKafkaConfigured() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.BoolPtrOutput { return v.IsKafkaConfigured }).(pulumi.BoolPtrOutput)
}

// Boolean flag specifying whether or not the cluster should be setup as secure.
func (o BdsInstanceOutput) IsSecure() pulumi.BoolOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.BoolOutput { return v.IsSecure }).(pulumi.BoolOutput)
}

// The kafka broker node in the BDS instance
func (o BdsInstanceOutput) KafkaBrokerNode() BdsInstanceKafkaBrokerNodePtrOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceKafkaBrokerNodePtrOutput { return v.KafkaBrokerNode }).(BdsInstanceKafkaBrokerNodePtrOutput)
}

// The user-defined kerberos realm name.
func (o BdsInstanceOutput) KerberosRealmName() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.KerberosRealmName }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the Key Management master encryption key.
func (o BdsInstanceOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The master node in the BDS instance
func (o BdsInstanceOutput) MasterNode() BdsInstanceMasterNodeOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceMasterNodeOutput { return v.MasterNode }).(BdsInstanceMasterNodeOutput)
}

// (Updatable) Additional configuration of the user's network.
func (o BdsInstanceOutput) NetworkConfig() BdsInstanceNetworkConfigOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceNetworkConfigOutput { return v.NetworkConfig }).(BdsInstanceNetworkConfigOutput)
}

// The list of nodes in the Big Data Service cluster.
func (o BdsInstanceOutput) Nodes() BdsInstanceNodeArrayOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceNodeArrayOutput { return v.Nodes }).(BdsInstanceNodeArrayOutput)
}

// Number of nodes that forming the cluster
func (o BdsInstanceOutput) NumberOfNodes() pulumi.IntOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.IntOutput { return v.NumberOfNodes }).(pulumi.IntOutput)
}

// Number of nodes that require a maintenance reboot
func (o BdsInstanceOutput) NumberOfNodesRequiringMaintenanceReboot() pulumi.IntOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.IntOutput { return v.NumberOfNodesRequiringMaintenanceReboot }).(pulumi.IntOutput)
}

// (Updatable) The version of the patch to be upated.
func (o BdsInstanceOutput) OsPatchVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringPtrOutput { return v.OsPatchVersion }).(pulumi.StringPtrOutput)
}

// (Updatable) An optional property when used triggers Remove Node from an Active Cluster. Takes the node ocid as input
func (o BdsInstanceOutput) RemoveNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringPtrOutput { return v.RemoveNode }).(pulumi.StringPtrOutput)
}

func (o BdsInstanceOutput) StartClusterShapeConfigs() BdsInstanceStartClusterShapeConfigArrayOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceStartClusterShapeConfigArrayOutput { return v.StartClusterShapeConfigs }).(BdsInstanceStartClusterShapeConfigArrayOutput)
}

// (Updatable) The target state for the Bds Instance. Could be set to `ACTIVE` or `INACTIVE` to start/stop the bds instance.
func (o BdsInstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The time the BDS instance was created. An RFC3339 formatted datetime string
func (o BdsInstanceOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the BDS instance was updated. An RFC3339 formatted datetime string
func (o BdsInstanceOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstance) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The utility node in the BDS instance
func (o BdsInstanceOutput) UtilNode() BdsInstanceUtilNodeOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceUtilNodeOutput { return v.UtilNode }).(BdsInstanceUtilNodeOutput)
}

func (o BdsInstanceOutput) WorkerNode() BdsInstanceWorkerNodeOutput {
	return o.ApplyT(func(v *BdsInstance) BdsInstanceWorkerNodeOutput { return v.WorkerNode }).(BdsInstanceWorkerNodeOutput)
}

type BdsInstanceArrayOutput struct{ *pulumi.OutputState }

func (BdsInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstance)(nil)).Elem()
}

func (o BdsInstanceArrayOutput) ToBdsInstanceArrayOutput() BdsInstanceArrayOutput {
	return o
}

func (o BdsInstanceArrayOutput) ToBdsInstanceArrayOutputWithContext(ctx context.Context) BdsInstanceArrayOutput {
	return o
}

func (o BdsInstanceArrayOutput) Index(i pulumi.IntInput) BdsInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BdsInstance {
		return vs[0].([]*BdsInstance)[vs[1].(int)]
	}).(BdsInstanceOutput)
}

type BdsInstanceMapOutput struct{ *pulumi.OutputState }

func (BdsInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstance)(nil)).Elem()
}

func (o BdsInstanceMapOutput) ToBdsInstanceMapOutput() BdsInstanceMapOutput {
	return o
}

func (o BdsInstanceMapOutput) ToBdsInstanceMapOutputWithContext(ctx context.Context) BdsInstanceMapOutput {
	return o
}

func (o BdsInstanceMapOutput) MapIndex(k pulumi.StringInput) BdsInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BdsInstance {
		return vs[0].(map[string]*BdsInstance)[vs[1].(string)]
	}).(BdsInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceInput)(nil)).Elem(), &BdsInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceArrayInput)(nil)).Elem(), BdsInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceMapInput)(nil)).Elem(), BdsInstanceMap{})
	pulumi.RegisterOutputType(BdsInstanceOutput{})
	pulumi.RegisterOutputType(BdsInstanceArrayOutput{})
	pulumi.RegisterOutputType(BdsInstanceMapOutput{})
}
