// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Bds Instance Api Key resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Create an API key on behalf of the specified user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/BigDataService"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := BigDataService.NewBdsInstanceApiKey(ctx, "testBdsInstanceApiKey", &BigDataService.BdsInstanceApiKeyArgs{
//				BdsInstanceId: pulumi.Any(oci_bds_bds_instance.Test_bds_instance.Id),
//				KeyAlias:      pulumi.Any(_var.Bds_instance_api_key_key_alias),
//				Passphrase:    pulumi.Any(_var.Bds_instance_api_key_passphrase),
//				UserId:        pulumi.Any(oci_identity_user.Test_user.Id),
//				DefaultRegion: pulumi.Any(_var.Bds_instance_api_key_default_region),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// BdsInstanceApiKeys can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:BigDataService/bdsInstanceApiKey:BdsInstanceApiKey test_bds_instance_api_key "bdsInstances/{bdsInstanceId}/apiKeys/{apiKeyId}"
//
// ```
type BdsInstanceApiKey struct {
	pulumi.CustomResourceState

	// The OCID of the cluster.
	BdsInstanceId pulumi.StringOutput `pulumi:"bdsInstanceId"`
	// The name of the region to establish the Object Storage endpoint. See https://docs.oracle.com/en-us/iaas/api/#/en/identity/20160918/Region/ for additional information.
	DefaultRegion pulumi.StringOutput `pulumi:"defaultRegion"`
	// The fingerprint that corresponds to the public API key requested.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// User friendly identifier used to uniquely differentiate between different API keys associated with this Big Data Service cluster. Only ASCII alphanumeric characters with no spaces allowed.
	KeyAlias pulumi.StringOutput `pulumi:"keyAlias"`
	// Base64 passphrase used to secure the private key which will be created on user behalf.
	Passphrase pulumi.StringOutput `pulumi:"passphrase"`
	// The full path and file name of the private key used for authentication. This location will be automatically selected on the BDS local file system.
	Pemfilepath pulumi.StringOutput `pulumi:"pemfilepath"`
	// The current status of the API key.
	State pulumi.StringOutput `pulumi:"state"`
	// The OCID of your tenancy.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The time the API key was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The OCID of the user for whom this new generated API key pair will be created.
	UserId pulumi.StringOutput `pulumi:"userId"`
}

// NewBdsInstanceApiKey registers a new resource with the given unique name, arguments, and options.
func NewBdsInstanceApiKey(ctx *pulumi.Context,
	name string, args *BdsInstanceApiKeyArgs, opts ...pulumi.ResourceOption) (*BdsInstanceApiKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BdsInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'BdsInstanceId'")
	}
	if args.KeyAlias == nil {
		return nil, errors.New("invalid value for required argument 'KeyAlias'")
	}
	if args.Passphrase == nil {
		return nil, errors.New("invalid value for required argument 'Passphrase'")
	}
	if args.UserId == nil {
		return nil, errors.New("invalid value for required argument 'UserId'")
	}
	if args.Passphrase != nil {
		args.Passphrase = pulumi.ToSecret(args.Passphrase).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"passphrase",
	})
	opts = append(opts, secrets)
	var resource BdsInstanceApiKey
	err := ctx.RegisterResource("oci:BigDataService/bdsInstanceApiKey:BdsInstanceApiKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBdsInstanceApiKey gets an existing BdsInstanceApiKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBdsInstanceApiKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BdsInstanceApiKeyState, opts ...pulumi.ResourceOption) (*BdsInstanceApiKey, error) {
	var resource BdsInstanceApiKey
	err := ctx.ReadResource("oci:BigDataService/bdsInstanceApiKey:BdsInstanceApiKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BdsInstanceApiKey resources.
type bdsInstanceApiKeyState struct {
	// The OCID of the cluster.
	BdsInstanceId *string `pulumi:"bdsInstanceId"`
	// The name of the region to establish the Object Storage endpoint. See https://docs.oracle.com/en-us/iaas/api/#/en/identity/20160918/Region/ for additional information.
	DefaultRegion *string `pulumi:"defaultRegion"`
	// The fingerprint that corresponds to the public API key requested.
	Fingerprint *string `pulumi:"fingerprint"`
	// User friendly identifier used to uniquely differentiate between different API keys associated with this Big Data Service cluster. Only ASCII alphanumeric characters with no spaces allowed.
	KeyAlias *string `pulumi:"keyAlias"`
	// Base64 passphrase used to secure the private key which will be created on user behalf.
	Passphrase *string `pulumi:"passphrase"`
	// The full path and file name of the private key used for authentication. This location will be automatically selected on the BDS local file system.
	Pemfilepath *string `pulumi:"pemfilepath"`
	// The current status of the API key.
	State *string `pulumi:"state"`
	// The OCID of your tenancy.
	TenantId *string `pulumi:"tenantId"`
	// The time the API key was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The OCID of the user for whom this new generated API key pair will be created.
	UserId *string `pulumi:"userId"`
}

type BdsInstanceApiKeyState struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringPtrInput
	// The name of the region to establish the Object Storage endpoint. See https://docs.oracle.com/en-us/iaas/api/#/en/identity/20160918/Region/ for additional information.
	DefaultRegion pulumi.StringPtrInput
	// The fingerprint that corresponds to the public API key requested.
	Fingerprint pulumi.StringPtrInput
	// User friendly identifier used to uniquely differentiate between different API keys associated with this Big Data Service cluster. Only ASCII alphanumeric characters with no spaces allowed.
	KeyAlias pulumi.StringPtrInput
	// Base64 passphrase used to secure the private key which will be created on user behalf.
	Passphrase pulumi.StringPtrInput
	// The full path and file name of the private key used for authentication. This location will be automatically selected on the BDS local file system.
	Pemfilepath pulumi.StringPtrInput
	// The current status of the API key.
	State pulumi.StringPtrInput
	// The OCID of your tenancy.
	TenantId pulumi.StringPtrInput
	// The time the API key was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The OCID of the user for whom this new generated API key pair will be created.
	UserId pulumi.StringPtrInput
}

func (BdsInstanceApiKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceApiKeyState)(nil)).Elem()
}

type bdsInstanceApiKeyArgs struct {
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// The name of the region to establish the Object Storage endpoint. See https://docs.oracle.com/en-us/iaas/api/#/en/identity/20160918/Region/ for additional information.
	DefaultRegion *string `pulumi:"defaultRegion"`
	// User friendly identifier used to uniquely differentiate between different API keys associated with this Big Data Service cluster. Only ASCII alphanumeric characters with no spaces allowed.
	KeyAlias string `pulumi:"keyAlias"`
	// Base64 passphrase used to secure the private key which will be created on user behalf.
	Passphrase string `pulumi:"passphrase"`
	// The OCID of the user for whom this new generated API key pair will be created.
	UserId string `pulumi:"userId"`
}

// The set of arguments for constructing a BdsInstanceApiKey resource.
type BdsInstanceApiKeyArgs struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput
	// The name of the region to establish the Object Storage endpoint. See https://docs.oracle.com/en-us/iaas/api/#/en/identity/20160918/Region/ for additional information.
	DefaultRegion pulumi.StringPtrInput
	// User friendly identifier used to uniquely differentiate between different API keys associated with this Big Data Service cluster. Only ASCII alphanumeric characters with no spaces allowed.
	KeyAlias pulumi.StringInput
	// Base64 passphrase used to secure the private key which will be created on user behalf.
	Passphrase pulumi.StringInput
	// The OCID of the user for whom this new generated API key pair will be created.
	UserId pulumi.StringInput
}

func (BdsInstanceApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceApiKeyArgs)(nil)).Elem()
}

type BdsInstanceApiKeyInput interface {
	pulumi.Input

	ToBdsInstanceApiKeyOutput() BdsInstanceApiKeyOutput
	ToBdsInstanceApiKeyOutputWithContext(ctx context.Context) BdsInstanceApiKeyOutput
}

func (*BdsInstanceApiKey) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceApiKey)(nil)).Elem()
}

func (i *BdsInstanceApiKey) ToBdsInstanceApiKeyOutput() BdsInstanceApiKeyOutput {
	return i.ToBdsInstanceApiKeyOutputWithContext(context.Background())
}

func (i *BdsInstanceApiKey) ToBdsInstanceApiKeyOutputWithContext(ctx context.Context) BdsInstanceApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceApiKeyOutput)
}

// BdsInstanceApiKeyArrayInput is an input type that accepts BdsInstanceApiKeyArray and BdsInstanceApiKeyArrayOutput values.
// You can construct a concrete instance of `BdsInstanceApiKeyArrayInput` via:
//
//	BdsInstanceApiKeyArray{ BdsInstanceApiKeyArgs{...} }
type BdsInstanceApiKeyArrayInput interface {
	pulumi.Input

	ToBdsInstanceApiKeyArrayOutput() BdsInstanceApiKeyArrayOutput
	ToBdsInstanceApiKeyArrayOutputWithContext(context.Context) BdsInstanceApiKeyArrayOutput
}

type BdsInstanceApiKeyArray []BdsInstanceApiKeyInput

func (BdsInstanceApiKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceApiKey)(nil)).Elem()
}

func (i BdsInstanceApiKeyArray) ToBdsInstanceApiKeyArrayOutput() BdsInstanceApiKeyArrayOutput {
	return i.ToBdsInstanceApiKeyArrayOutputWithContext(context.Background())
}

func (i BdsInstanceApiKeyArray) ToBdsInstanceApiKeyArrayOutputWithContext(ctx context.Context) BdsInstanceApiKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceApiKeyArrayOutput)
}

// BdsInstanceApiKeyMapInput is an input type that accepts BdsInstanceApiKeyMap and BdsInstanceApiKeyMapOutput values.
// You can construct a concrete instance of `BdsInstanceApiKeyMapInput` via:
//
//	BdsInstanceApiKeyMap{ "key": BdsInstanceApiKeyArgs{...} }
type BdsInstanceApiKeyMapInput interface {
	pulumi.Input

	ToBdsInstanceApiKeyMapOutput() BdsInstanceApiKeyMapOutput
	ToBdsInstanceApiKeyMapOutputWithContext(context.Context) BdsInstanceApiKeyMapOutput
}

type BdsInstanceApiKeyMap map[string]BdsInstanceApiKeyInput

func (BdsInstanceApiKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceApiKey)(nil)).Elem()
}

func (i BdsInstanceApiKeyMap) ToBdsInstanceApiKeyMapOutput() BdsInstanceApiKeyMapOutput {
	return i.ToBdsInstanceApiKeyMapOutputWithContext(context.Background())
}

func (i BdsInstanceApiKeyMap) ToBdsInstanceApiKeyMapOutputWithContext(ctx context.Context) BdsInstanceApiKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceApiKeyMapOutput)
}

type BdsInstanceApiKeyOutput struct{ *pulumi.OutputState }

func (BdsInstanceApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceApiKey)(nil)).Elem()
}

func (o BdsInstanceApiKeyOutput) ToBdsInstanceApiKeyOutput() BdsInstanceApiKeyOutput {
	return o
}

func (o BdsInstanceApiKeyOutput) ToBdsInstanceApiKeyOutputWithContext(ctx context.Context) BdsInstanceApiKeyOutput {
	return o
}

// The OCID of the cluster.
func (o BdsInstanceApiKeyOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceApiKey) pulumi.StringOutput { return v.BdsInstanceId }).(pulumi.StringOutput)
}

// The name of the region to establish the Object Storage endpoint. See https://docs.oracle.com/en-us/iaas/api/#/en/identity/20160918/Region/ for additional information.
func (o BdsInstanceApiKeyOutput) DefaultRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceApiKey) pulumi.StringOutput { return v.DefaultRegion }).(pulumi.StringOutput)
}

// The fingerprint that corresponds to the public API key requested.
func (o BdsInstanceApiKeyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceApiKey) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// User friendly identifier used to uniquely differentiate between different API keys associated with this Big Data Service cluster. Only ASCII alphanumeric characters with no spaces allowed.
func (o BdsInstanceApiKeyOutput) KeyAlias() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceApiKey) pulumi.StringOutput { return v.KeyAlias }).(pulumi.StringOutput)
}

// Base64 passphrase used to secure the private key which will be created on user behalf.
func (o BdsInstanceApiKeyOutput) Passphrase() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceApiKey) pulumi.StringOutput { return v.Passphrase }).(pulumi.StringOutput)
}

// The full path and file name of the private key used for authentication. This location will be automatically selected on the BDS local file system.
func (o BdsInstanceApiKeyOutput) Pemfilepath() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceApiKey) pulumi.StringOutput { return v.Pemfilepath }).(pulumi.StringOutput)
}

// The current status of the API key.
func (o BdsInstanceApiKeyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceApiKey) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The OCID of your tenancy.
func (o BdsInstanceApiKeyOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceApiKey) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The time the API key was created, shown as an RFC 3339 formatted datetime string.
func (o BdsInstanceApiKeyOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceApiKey) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The OCID of the user for whom this new generated API key pair will be created.
func (o BdsInstanceApiKeyOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceApiKey) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

type BdsInstanceApiKeyArrayOutput struct{ *pulumi.OutputState }

func (BdsInstanceApiKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceApiKey)(nil)).Elem()
}

func (o BdsInstanceApiKeyArrayOutput) ToBdsInstanceApiKeyArrayOutput() BdsInstanceApiKeyArrayOutput {
	return o
}

func (o BdsInstanceApiKeyArrayOutput) ToBdsInstanceApiKeyArrayOutputWithContext(ctx context.Context) BdsInstanceApiKeyArrayOutput {
	return o
}

func (o BdsInstanceApiKeyArrayOutput) Index(i pulumi.IntInput) BdsInstanceApiKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BdsInstanceApiKey {
		return vs[0].([]*BdsInstanceApiKey)[vs[1].(int)]
	}).(BdsInstanceApiKeyOutput)
}

type BdsInstanceApiKeyMapOutput struct{ *pulumi.OutputState }

func (BdsInstanceApiKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceApiKey)(nil)).Elem()
}

func (o BdsInstanceApiKeyMapOutput) ToBdsInstanceApiKeyMapOutput() BdsInstanceApiKeyMapOutput {
	return o
}

func (o BdsInstanceApiKeyMapOutput) ToBdsInstanceApiKeyMapOutputWithContext(ctx context.Context) BdsInstanceApiKeyMapOutput {
	return o
}

func (o BdsInstanceApiKeyMapOutput) MapIndex(k pulumi.StringInput) BdsInstanceApiKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BdsInstanceApiKey {
		return vs[0].(map[string]*BdsInstanceApiKey)[vs[1].(string)]
	}).(BdsInstanceApiKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceApiKeyInput)(nil)).Elem(), &BdsInstanceApiKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceApiKeyArrayInput)(nil)).Elem(), BdsInstanceApiKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceApiKeyMapInput)(nil)).Elem(), BdsInstanceApiKeyMap{})
	pulumi.RegisterOutputType(BdsInstanceApiKeyOutput{})
	pulumi.RegisterOutputType(BdsInstanceApiKeyArrayOutput{})
	pulumi.RegisterOutputType(BdsInstanceApiKeyMapOutput{})
}
