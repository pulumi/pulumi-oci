// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Bds Instance Identity Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
//
// # Create an identity configuration for the cluster
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.NewBdsInstanceIdentityConfiguration(ctx, "test_bds_instance_identity_configuration", &bigdataservice.BdsInstanceIdentityConfigurationArgs{
//				BdsInstanceId:             pulumi.Any(testBdsInstance.Id),
//				ClusterAdminPassword:      pulumi.Any(bdsInstanceIdentityConfigurationClusterAdminPassword),
//				ConfidentialApplicationId: pulumi.Any(testApplication.Id),
//				DisplayName:               pulumi.Any(bdsInstanceIdentityConfigurationDisplayName),
//				IdentityDomainId:          pulumi.Any(testDomain.Id),
//				IamUserSyncConfigurationDetails: &bigdataservice.BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailsArgs{
//					IsPosixAttributesAdditionRequired: pulumi.Any(bdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailsIsPosixAttributesAdditionRequired),
//				},
//				UpstConfigurationDetails: &bigdataservice.BdsInstanceIdentityConfigurationUpstConfigurationDetailsArgs{
//					MasterEncryptionKeyId: pulumi.Any(testKey.Id),
//					VaultId:               pulumi.Any(testVault.Id),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// BdsInstanceIdentityConfigurations can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:BigDataService/bdsInstanceIdentityConfiguration:BdsInstanceIdentityConfiguration test_bds_instance_identity_configuration "bdsInstances/{bdsInstanceId}/identityConfigurations/{identityConfigurationId}"
// ```
type BdsInstanceIdentityConfiguration struct {
	pulumi.CustomResourceState

	// (Updatable) An optional property when set to "true" triggers Activate Iam User Sync Configuration and when set to "false" triggers Deactivate Iam User Sync Configuration.
	ActivateIamUserSyncConfigurationTrigger pulumi.StringPtrOutput `pulumi:"activateIamUserSyncConfigurationTrigger"`
	// (Updatable) An optional property when set to "true" triggers Activate Upst Configuration and when set to "false" triggers Deactivate Upst Configuration.
	ActivateUpstConfigurationTrigger pulumi.StringPtrOutput `pulumi:"activateUpstConfigurationTrigger"`
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringOutput `pulumi:"bdsInstanceId"`
	// (Updatable) Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword pulumi.StringOutput `pulumi:"clusterAdminPassword"`
	// Identity domain confidential application ID for the identity config, required for creating identity configuration
	ConfidentialApplicationId pulumi.StringOutput `pulumi:"confidentialApplicationId"`
	// Display name of the identity configuration, required for creating identity configuration.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Details for activating/updating an IAM user sync configuration
	IamUserSyncConfigurationDetails BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailsOutput `pulumi:"iamUserSyncConfigurationDetails"`
	// Information about the IAM user sync configuration.
	IamUserSyncConfigurations BdsInstanceIdentityConfigurationIamUserSyncConfigurationArrayOutput `pulumi:"iamUserSyncConfigurations"`
	// Identity domain OCID to use for identity config, required for creating identity configuration
	IdentityDomainId pulumi.StringOutput `pulumi:"identityDomainId"`
	// (Updatable) An optional property when set to "true" triggers Refresh Confidential Application.
	RefreshConfidentialApplicationTrigger pulumi.StringPtrOutput `pulumi:"refreshConfidentialApplicationTrigger"`
	// (Updatable) An optional property when set to "true"  triggers Refresh Upst Token Exchange Keytab.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RefreshUpstTokenExchangeKeytabTrigger pulumi.StringPtrOutput `pulumi:"refreshUpstTokenExchangeKeytabTrigger"`
	// Lifecycle state of the UPST config
	State pulumi.StringOutput `pulumi:"state"`
	// Time when this UPST config was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Time when this UPST config was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) Details for activating/updating UPST config on the cluster
	UpstConfigurationDetails BdsInstanceIdentityConfigurationUpstConfigurationDetailsOutput `pulumi:"upstConfigurationDetails"`
	// Information about the UPST configuration.
	UpstConfigurations BdsInstanceIdentityConfigurationUpstConfigurationArrayOutput `pulumi:"upstConfigurations"`
}

// NewBdsInstanceIdentityConfiguration registers a new resource with the given unique name, arguments, and options.
func NewBdsInstanceIdentityConfiguration(ctx *pulumi.Context,
	name string, args *BdsInstanceIdentityConfigurationArgs, opts ...pulumi.ResourceOption) (*BdsInstanceIdentityConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BdsInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'BdsInstanceId'")
	}
	if args.ClusterAdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'ClusterAdminPassword'")
	}
	if args.ConfidentialApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ConfidentialApplicationId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.IdentityDomainId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityDomainId'")
	}
	if args.ClusterAdminPassword != nil {
		args.ClusterAdminPassword = pulumi.ToSecret(args.ClusterAdminPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clusterAdminPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BdsInstanceIdentityConfiguration
	err := ctx.RegisterResource("oci:BigDataService/bdsInstanceIdentityConfiguration:BdsInstanceIdentityConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBdsInstanceIdentityConfiguration gets an existing BdsInstanceIdentityConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBdsInstanceIdentityConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BdsInstanceIdentityConfigurationState, opts ...pulumi.ResourceOption) (*BdsInstanceIdentityConfiguration, error) {
	var resource BdsInstanceIdentityConfiguration
	err := ctx.ReadResource("oci:BigDataService/bdsInstanceIdentityConfiguration:BdsInstanceIdentityConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BdsInstanceIdentityConfiguration resources.
type bdsInstanceIdentityConfigurationState struct {
	// (Updatable) An optional property when set to "true" triggers Activate Iam User Sync Configuration and when set to "false" triggers Deactivate Iam User Sync Configuration.
	ActivateIamUserSyncConfigurationTrigger *string `pulumi:"activateIamUserSyncConfigurationTrigger"`
	// (Updatable) An optional property when set to "true" triggers Activate Upst Configuration and when set to "false" triggers Deactivate Upst Configuration.
	ActivateUpstConfigurationTrigger *string `pulumi:"activateUpstConfigurationTrigger"`
	// The OCID of the cluster.
	BdsInstanceId *string `pulumi:"bdsInstanceId"`
	// (Updatable) Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword *string `pulumi:"clusterAdminPassword"`
	// Identity domain confidential application ID for the identity config, required for creating identity configuration
	ConfidentialApplicationId *string `pulumi:"confidentialApplicationId"`
	// Display name of the identity configuration, required for creating identity configuration.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Details for activating/updating an IAM user sync configuration
	IamUserSyncConfigurationDetails *BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetails `pulumi:"iamUserSyncConfigurationDetails"`
	// Information about the IAM user sync configuration.
	IamUserSyncConfigurations []BdsInstanceIdentityConfigurationIamUserSyncConfiguration `pulumi:"iamUserSyncConfigurations"`
	// Identity domain OCID to use for identity config, required for creating identity configuration
	IdentityDomainId *string `pulumi:"identityDomainId"`
	// (Updatable) An optional property when set to "true" triggers Refresh Confidential Application.
	RefreshConfidentialApplicationTrigger *string `pulumi:"refreshConfidentialApplicationTrigger"`
	// (Updatable) An optional property when set to "true"  triggers Refresh Upst Token Exchange Keytab.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RefreshUpstTokenExchangeKeytabTrigger *string `pulumi:"refreshUpstTokenExchangeKeytabTrigger"`
	// Lifecycle state of the UPST config
	State *string `pulumi:"state"`
	// Time when this UPST config was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// Time when this UPST config was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) Details for activating/updating UPST config on the cluster
	UpstConfigurationDetails *BdsInstanceIdentityConfigurationUpstConfigurationDetails `pulumi:"upstConfigurationDetails"`
	// Information about the UPST configuration.
	UpstConfigurations []BdsInstanceIdentityConfigurationUpstConfiguration `pulumi:"upstConfigurations"`
}

type BdsInstanceIdentityConfigurationState struct {
	// (Updatable) An optional property when set to "true" triggers Activate Iam User Sync Configuration and when set to "false" triggers Deactivate Iam User Sync Configuration.
	ActivateIamUserSyncConfigurationTrigger pulumi.StringPtrInput
	// (Updatable) An optional property when set to "true" triggers Activate Upst Configuration and when set to "false" triggers Deactivate Upst Configuration.
	ActivateUpstConfigurationTrigger pulumi.StringPtrInput
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringPtrInput
	// (Updatable) Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword pulumi.StringPtrInput
	// Identity domain confidential application ID for the identity config, required for creating identity configuration
	ConfidentialApplicationId pulumi.StringPtrInput
	// Display name of the identity configuration, required for creating identity configuration.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Details for activating/updating an IAM user sync configuration
	IamUserSyncConfigurationDetails BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailsPtrInput
	// Information about the IAM user sync configuration.
	IamUserSyncConfigurations BdsInstanceIdentityConfigurationIamUserSyncConfigurationArrayInput
	// Identity domain OCID to use for identity config, required for creating identity configuration
	IdentityDomainId pulumi.StringPtrInput
	// (Updatable) An optional property when set to "true" triggers Refresh Confidential Application.
	RefreshConfidentialApplicationTrigger pulumi.StringPtrInput
	// (Updatable) An optional property when set to "true"  triggers Refresh Upst Token Exchange Keytab.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RefreshUpstTokenExchangeKeytabTrigger pulumi.StringPtrInput
	// Lifecycle state of the UPST config
	State pulumi.StringPtrInput
	// Time when this UPST config was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// Time when this UPST config was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) Details for activating/updating UPST config on the cluster
	UpstConfigurationDetails BdsInstanceIdentityConfigurationUpstConfigurationDetailsPtrInput
	// Information about the UPST configuration.
	UpstConfigurations BdsInstanceIdentityConfigurationUpstConfigurationArrayInput
}

func (BdsInstanceIdentityConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceIdentityConfigurationState)(nil)).Elem()
}

type bdsInstanceIdentityConfigurationArgs struct {
	// (Updatable) An optional property when set to "true" triggers Activate Iam User Sync Configuration and when set to "false" triggers Deactivate Iam User Sync Configuration.
	ActivateIamUserSyncConfigurationTrigger *string `pulumi:"activateIamUserSyncConfigurationTrigger"`
	// (Updatable) An optional property when set to "true" triggers Activate Upst Configuration and when set to "false" triggers Deactivate Upst Configuration.
	ActivateUpstConfigurationTrigger *string `pulumi:"activateUpstConfigurationTrigger"`
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// (Updatable) Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword string `pulumi:"clusterAdminPassword"`
	// Identity domain confidential application ID for the identity config, required for creating identity configuration
	ConfidentialApplicationId string `pulumi:"confidentialApplicationId"`
	// Display name of the identity configuration, required for creating identity configuration.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Details for activating/updating an IAM user sync configuration
	IamUserSyncConfigurationDetails *BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetails `pulumi:"iamUserSyncConfigurationDetails"`
	// Identity domain OCID to use for identity config, required for creating identity configuration
	IdentityDomainId string `pulumi:"identityDomainId"`
	// (Updatable) An optional property when set to "true" triggers Refresh Confidential Application.
	RefreshConfidentialApplicationTrigger *string `pulumi:"refreshConfidentialApplicationTrigger"`
	// (Updatable) An optional property when set to "true"  triggers Refresh Upst Token Exchange Keytab.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RefreshUpstTokenExchangeKeytabTrigger *string `pulumi:"refreshUpstTokenExchangeKeytabTrigger"`
	// (Updatable) Details for activating/updating UPST config on the cluster
	UpstConfigurationDetails *BdsInstanceIdentityConfigurationUpstConfigurationDetails `pulumi:"upstConfigurationDetails"`
}

// The set of arguments for constructing a BdsInstanceIdentityConfiguration resource.
type BdsInstanceIdentityConfigurationArgs struct {
	// (Updatable) An optional property when set to "true" triggers Activate Iam User Sync Configuration and when set to "false" triggers Deactivate Iam User Sync Configuration.
	ActivateIamUserSyncConfigurationTrigger pulumi.StringPtrInput
	// (Updatable) An optional property when set to "true" triggers Activate Upst Configuration and when set to "false" triggers Deactivate Upst Configuration.
	ActivateUpstConfigurationTrigger pulumi.StringPtrInput
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput
	// (Updatable) Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword pulumi.StringInput
	// Identity domain confidential application ID for the identity config, required for creating identity configuration
	ConfidentialApplicationId pulumi.StringInput
	// Display name of the identity configuration, required for creating identity configuration.
	DisplayName pulumi.StringInput
	// (Updatable) Details for activating/updating an IAM user sync configuration
	IamUserSyncConfigurationDetails BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailsPtrInput
	// Identity domain OCID to use for identity config, required for creating identity configuration
	IdentityDomainId pulumi.StringInput
	// (Updatable) An optional property when set to "true" triggers Refresh Confidential Application.
	RefreshConfidentialApplicationTrigger pulumi.StringPtrInput
	// (Updatable) An optional property when set to "true"  triggers Refresh Upst Token Exchange Keytab.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RefreshUpstTokenExchangeKeytabTrigger pulumi.StringPtrInput
	// (Updatable) Details for activating/updating UPST config on the cluster
	UpstConfigurationDetails BdsInstanceIdentityConfigurationUpstConfigurationDetailsPtrInput
}

func (BdsInstanceIdentityConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceIdentityConfigurationArgs)(nil)).Elem()
}

type BdsInstanceIdentityConfigurationInput interface {
	pulumi.Input

	ToBdsInstanceIdentityConfigurationOutput() BdsInstanceIdentityConfigurationOutput
	ToBdsInstanceIdentityConfigurationOutputWithContext(ctx context.Context) BdsInstanceIdentityConfigurationOutput
}

func (*BdsInstanceIdentityConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceIdentityConfiguration)(nil)).Elem()
}

func (i *BdsInstanceIdentityConfiguration) ToBdsInstanceIdentityConfigurationOutput() BdsInstanceIdentityConfigurationOutput {
	return i.ToBdsInstanceIdentityConfigurationOutputWithContext(context.Background())
}

func (i *BdsInstanceIdentityConfiguration) ToBdsInstanceIdentityConfigurationOutputWithContext(ctx context.Context) BdsInstanceIdentityConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceIdentityConfigurationOutput)
}

// BdsInstanceIdentityConfigurationArrayInput is an input type that accepts BdsInstanceIdentityConfigurationArray and BdsInstanceIdentityConfigurationArrayOutput values.
// You can construct a concrete instance of `BdsInstanceIdentityConfigurationArrayInput` via:
//
//	BdsInstanceIdentityConfigurationArray{ BdsInstanceIdentityConfigurationArgs{...} }
type BdsInstanceIdentityConfigurationArrayInput interface {
	pulumi.Input

	ToBdsInstanceIdentityConfigurationArrayOutput() BdsInstanceIdentityConfigurationArrayOutput
	ToBdsInstanceIdentityConfigurationArrayOutputWithContext(context.Context) BdsInstanceIdentityConfigurationArrayOutput
}

type BdsInstanceIdentityConfigurationArray []BdsInstanceIdentityConfigurationInput

func (BdsInstanceIdentityConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceIdentityConfiguration)(nil)).Elem()
}

func (i BdsInstanceIdentityConfigurationArray) ToBdsInstanceIdentityConfigurationArrayOutput() BdsInstanceIdentityConfigurationArrayOutput {
	return i.ToBdsInstanceIdentityConfigurationArrayOutputWithContext(context.Background())
}

func (i BdsInstanceIdentityConfigurationArray) ToBdsInstanceIdentityConfigurationArrayOutputWithContext(ctx context.Context) BdsInstanceIdentityConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceIdentityConfigurationArrayOutput)
}

// BdsInstanceIdentityConfigurationMapInput is an input type that accepts BdsInstanceIdentityConfigurationMap and BdsInstanceIdentityConfigurationMapOutput values.
// You can construct a concrete instance of `BdsInstanceIdentityConfigurationMapInput` via:
//
//	BdsInstanceIdentityConfigurationMap{ "key": BdsInstanceIdentityConfigurationArgs{...} }
type BdsInstanceIdentityConfigurationMapInput interface {
	pulumi.Input

	ToBdsInstanceIdentityConfigurationMapOutput() BdsInstanceIdentityConfigurationMapOutput
	ToBdsInstanceIdentityConfigurationMapOutputWithContext(context.Context) BdsInstanceIdentityConfigurationMapOutput
}

type BdsInstanceIdentityConfigurationMap map[string]BdsInstanceIdentityConfigurationInput

func (BdsInstanceIdentityConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceIdentityConfiguration)(nil)).Elem()
}

func (i BdsInstanceIdentityConfigurationMap) ToBdsInstanceIdentityConfigurationMapOutput() BdsInstanceIdentityConfigurationMapOutput {
	return i.ToBdsInstanceIdentityConfigurationMapOutputWithContext(context.Background())
}

func (i BdsInstanceIdentityConfigurationMap) ToBdsInstanceIdentityConfigurationMapOutputWithContext(ctx context.Context) BdsInstanceIdentityConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceIdentityConfigurationMapOutput)
}

type BdsInstanceIdentityConfigurationOutput struct{ *pulumi.OutputState }

func (BdsInstanceIdentityConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceIdentityConfiguration)(nil)).Elem()
}

func (o BdsInstanceIdentityConfigurationOutput) ToBdsInstanceIdentityConfigurationOutput() BdsInstanceIdentityConfigurationOutput {
	return o
}

func (o BdsInstanceIdentityConfigurationOutput) ToBdsInstanceIdentityConfigurationOutputWithContext(ctx context.Context) BdsInstanceIdentityConfigurationOutput {
	return o
}

// (Updatable) An optional property when set to "true" triggers Activate Iam User Sync Configuration and when set to "false" triggers Deactivate Iam User Sync Configuration.
func (o BdsInstanceIdentityConfigurationOutput) ActivateIamUserSyncConfigurationTrigger() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringPtrOutput {
		return v.ActivateIamUserSyncConfigurationTrigger
	}).(pulumi.StringPtrOutput)
}

// (Updatable) An optional property when set to "true" triggers Activate Upst Configuration and when set to "false" triggers Deactivate Upst Configuration.
func (o BdsInstanceIdentityConfigurationOutput) ActivateUpstConfigurationTrigger() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringPtrOutput {
		return v.ActivateUpstConfigurationTrigger
	}).(pulumi.StringPtrOutput)
}

// The OCID of the cluster.
func (o BdsInstanceIdentityConfigurationOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringOutput { return v.BdsInstanceId }).(pulumi.StringOutput)
}

// (Updatable) Base-64 encoded password for the cluster admin user.
func (o BdsInstanceIdentityConfigurationOutput) ClusterAdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringOutput { return v.ClusterAdminPassword }).(pulumi.StringOutput)
}

// Identity domain confidential application ID for the identity config, required for creating identity configuration
func (o BdsInstanceIdentityConfigurationOutput) ConfidentialApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringOutput { return v.ConfidentialApplicationId }).(pulumi.StringOutput)
}

// Display name of the identity configuration, required for creating identity configuration.
func (o BdsInstanceIdentityConfigurationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Details for activating/updating an IAM user sync configuration
func (o BdsInstanceIdentityConfigurationOutput) IamUserSyncConfigurationDetails() BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailsOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailsOutput {
		return v.IamUserSyncConfigurationDetails
	}).(BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailsOutput)
}

// Information about the IAM user sync configuration.
func (o BdsInstanceIdentityConfigurationOutput) IamUserSyncConfigurations() BdsInstanceIdentityConfigurationIamUserSyncConfigurationArrayOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) BdsInstanceIdentityConfigurationIamUserSyncConfigurationArrayOutput {
		return v.IamUserSyncConfigurations
	}).(BdsInstanceIdentityConfigurationIamUserSyncConfigurationArrayOutput)
}

// Identity domain OCID to use for identity config, required for creating identity configuration
func (o BdsInstanceIdentityConfigurationOutput) IdentityDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringOutput { return v.IdentityDomainId }).(pulumi.StringOutput)
}

// (Updatable) An optional property when set to "true" triggers Refresh Confidential Application.
func (o BdsInstanceIdentityConfigurationOutput) RefreshConfidentialApplicationTrigger() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringPtrOutput {
		return v.RefreshConfidentialApplicationTrigger
	}).(pulumi.StringPtrOutput)
}

// (Updatable) An optional property when set to "true"  triggers Refresh Upst Token Exchange Keytab.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o BdsInstanceIdentityConfigurationOutput) RefreshUpstTokenExchangeKeytabTrigger() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringPtrOutput {
		return v.RefreshUpstTokenExchangeKeytabTrigger
	}).(pulumi.StringPtrOutput)
}

// Lifecycle state of the UPST config
func (o BdsInstanceIdentityConfigurationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Time when this UPST config was created, shown as an RFC 3339 formatted datetime string.
func (o BdsInstanceIdentityConfigurationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time when this UPST config was updated, shown as an RFC 3339 formatted datetime string.
func (o BdsInstanceIdentityConfigurationOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) Details for activating/updating UPST config on the cluster
func (o BdsInstanceIdentityConfigurationOutput) UpstConfigurationDetails() BdsInstanceIdentityConfigurationUpstConfigurationDetailsOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) BdsInstanceIdentityConfigurationUpstConfigurationDetailsOutput {
		return v.UpstConfigurationDetails
	}).(BdsInstanceIdentityConfigurationUpstConfigurationDetailsOutput)
}

// Information about the UPST configuration.
func (o BdsInstanceIdentityConfigurationOutput) UpstConfigurations() BdsInstanceIdentityConfigurationUpstConfigurationArrayOutput {
	return o.ApplyT(func(v *BdsInstanceIdentityConfiguration) BdsInstanceIdentityConfigurationUpstConfigurationArrayOutput {
		return v.UpstConfigurations
	}).(BdsInstanceIdentityConfigurationUpstConfigurationArrayOutput)
}

type BdsInstanceIdentityConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BdsInstanceIdentityConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceIdentityConfiguration)(nil)).Elem()
}

func (o BdsInstanceIdentityConfigurationArrayOutput) ToBdsInstanceIdentityConfigurationArrayOutput() BdsInstanceIdentityConfigurationArrayOutput {
	return o
}

func (o BdsInstanceIdentityConfigurationArrayOutput) ToBdsInstanceIdentityConfigurationArrayOutputWithContext(ctx context.Context) BdsInstanceIdentityConfigurationArrayOutput {
	return o
}

func (o BdsInstanceIdentityConfigurationArrayOutput) Index(i pulumi.IntInput) BdsInstanceIdentityConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BdsInstanceIdentityConfiguration {
		return vs[0].([]*BdsInstanceIdentityConfiguration)[vs[1].(int)]
	}).(BdsInstanceIdentityConfigurationOutput)
}

type BdsInstanceIdentityConfigurationMapOutput struct{ *pulumi.OutputState }

func (BdsInstanceIdentityConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceIdentityConfiguration)(nil)).Elem()
}

func (o BdsInstanceIdentityConfigurationMapOutput) ToBdsInstanceIdentityConfigurationMapOutput() BdsInstanceIdentityConfigurationMapOutput {
	return o
}

func (o BdsInstanceIdentityConfigurationMapOutput) ToBdsInstanceIdentityConfigurationMapOutputWithContext(ctx context.Context) BdsInstanceIdentityConfigurationMapOutput {
	return o
}

func (o BdsInstanceIdentityConfigurationMapOutput) MapIndex(k pulumi.StringInput) BdsInstanceIdentityConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BdsInstanceIdentityConfiguration {
		return vs[0].(map[string]*BdsInstanceIdentityConfiguration)[vs[1].(string)]
	}).(BdsInstanceIdentityConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceIdentityConfigurationInput)(nil)).Elem(), &BdsInstanceIdentityConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceIdentityConfigurationArrayInput)(nil)).Elem(), BdsInstanceIdentityConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceIdentityConfigurationMapInput)(nil)).Elem(), BdsInstanceIdentityConfigurationMap{})
	pulumi.RegisterOutputType(BdsInstanceIdentityConfigurationOutput{})
	pulumi.RegisterOutputType(BdsInstanceIdentityConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BdsInstanceIdentityConfigurationMapOutput{})
}
