// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Bds Instance Node Backup resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Add a node volume backup to the cluster for an indicated node type or node.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.NewBdsInstanceNodeBackup(ctx, "test_bds_instance_node_backup", &bigdataservice.BdsInstanceNodeBackupArgs{
//				BdsInstanceId: pulumi.Any(testBdsInstance.Id),
//				LevelTypeDetails: &bigdataservice.BdsInstanceNodeBackupLevelTypeDetailsArgs{
//					LevelType:    pulumi.Any(bdsInstanceNodeBackupLevelTypeDetailsLevelType),
//					NodeHostName: pulumi.Any(bdsInstanceNodeBackupLevelTypeDetailsNodeHostName),
//					NodeType:     pulumi.Any(bdsInstanceNodeBackupLevelTypeDetailsNodeType),
//				},
//				BackupType: pulumi.Any(bdsInstanceNodeBackupBackupType),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// BdsInstanceNodeBackupConfigurations can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:BigDataService/bdsInstanceNodeBackup:BdsInstanceNodeBackup test_bds_instance_node_backup "bdsInstances/{bdsInstanceId}/nodeBackup/{nodeBackupId}"
// ```
type BdsInstanceNodeBackup struct {
	pulumi.CustomResourceState

	BackupConfigId pulumi.StringPtrOutput `pulumi:"backupConfigId"`
	// Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
	BackupType pulumi.StringOutput `pulumi:"backupType"`
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringOutput `pulumi:"bdsInstanceId"`
	DisplayName   pulumi.StringOutput `pulumi:"displayName"`
	// Details of the type of level used to trigger the creation of a new node backup.
	LevelTypeDetails BdsInstanceNodeBackupLevelTypeDetailsOutput `pulumi:"levelTypeDetails"`
	NodeInstanceId   pulumi.StringOutput                         `pulumi:"nodeInstanceId"`
	// The state of the NodeBackup.
	State pulumi.StringOutput `pulumi:"state"`
	// The time the NodeBackup was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewBdsInstanceNodeBackup registers a new resource with the given unique name, arguments, and options.
func NewBdsInstanceNodeBackup(ctx *pulumi.Context,
	name string, args *BdsInstanceNodeBackupArgs, opts ...pulumi.ResourceOption) (*BdsInstanceNodeBackup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupType == nil {
		return nil, errors.New("invalid value for required argument 'BackupType'")
	}
	if args.BdsInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'BdsInstanceId'")
	}
	if args.LevelTypeDetails == nil {
		return nil, errors.New("invalid value for required argument 'LevelTypeDetails'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BdsInstanceNodeBackup
	err := ctx.RegisterResource("oci:BigDataService/bdsInstanceNodeBackup:BdsInstanceNodeBackup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBdsInstanceNodeBackup gets an existing BdsInstanceNodeBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBdsInstanceNodeBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BdsInstanceNodeBackupState, opts ...pulumi.ResourceOption) (*BdsInstanceNodeBackup, error) {
	var resource BdsInstanceNodeBackup
	err := ctx.ReadResource("oci:BigDataService/bdsInstanceNodeBackup:BdsInstanceNodeBackup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BdsInstanceNodeBackup resources.
type bdsInstanceNodeBackupState struct {
	BackupConfigId *string `pulumi:"backupConfigId"`
	// Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
	BackupType *string `pulumi:"backupType"`
	// The OCID of the cluster.
	BdsInstanceId *string `pulumi:"bdsInstanceId"`
	DisplayName   *string `pulumi:"displayName"`
	// Details of the type of level used to trigger the creation of a new node backup.
	LevelTypeDetails *BdsInstanceNodeBackupLevelTypeDetails `pulumi:"levelTypeDetails"`
	NodeInstanceId   *string                                `pulumi:"nodeInstanceId"`
	// The state of the NodeBackup.
	State *string `pulumi:"state"`
	// The time the NodeBackup was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type BdsInstanceNodeBackupState struct {
	BackupConfigId pulumi.StringPtrInput
	// Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
	BackupType pulumi.StringPtrInput
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringPtrInput
	DisplayName   pulumi.StringPtrInput
	// Details of the type of level used to trigger the creation of a new node backup.
	LevelTypeDetails BdsInstanceNodeBackupLevelTypeDetailsPtrInput
	NodeInstanceId   pulumi.StringPtrInput
	// The state of the NodeBackup.
	State pulumi.StringPtrInput
	// The time the NodeBackup was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	TimeUpdated pulumi.StringPtrInput
}

func (BdsInstanceNodeBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceNodeBackupState)(nil)).Elem()
}

type bdsInstanceNodeBackupArgs struct {
	BackupConfigId *string `pulumi:"backupConfigId"`
	// Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
	BackupType string `pulumi:"backupType"`
	// The OCID of the cluster.
	BdsInstanceId string  `pulumi:"bdsInstanceId"`
	DisplayName   *string `pulumi:"displayName"`
	// Details of the type of level used to trigger the creation of a new node backup.
	LevelTypeDetails BdsInstanceNodeBackupLevelTypeDetails `pulumi:"levelTypeDetails"`
	NodeInstanceId   *string                               `pulumi:"nodeInstanceId"`
}

// The set of arguments for constructing a BdsInstanceNodeBackup resource.
type BdsInstanceNodeBackupArgs struct {
	BackupConfigId pulumi.StringPtrInput
	// Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
	BackupType pulumi.StringInput
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput
	DisplayName   pulumi.StringPtrInput
	// Details of the type of level used to trigger the creation of a new node backup.
	LevelTypeDetails BdsInstanceNodeBackupLevelTypeDetailsInput
	NodeInstanceId   pulumi.StringPtrInput
}

func (BdsInstanceNodeBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceNodeBackupArgs)(nil)).Elem()
}

type BdsInstanceNodeBackupInput interface {
	pulumi.Input

	ToBdsInstanceNodeBackupOutput() BdsInstanceNodeBackupOutput
	ToBdsInstanceNodeBackupOutputWithContext(ctx context.Context) BdsInstanceNodeBackupOutput
}

func (*BdsInstanceNodeBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceNodeBackup)(nil)).Elem()
}

func (i *BdsInstanceNodeBackup) ToBdsInstanceNodeBackupOutput() BdsInstanceNodeBackupOutput {
	return i.ToBdsInstanceNodeBackupOutputWithContext(context.Background())
}

func (i *BdsInstanceNodeBackup) ToBdsInstanceNodeBackupOutputWithContext(ctx context.Context) BdsInstanceNodeBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceNodeBackupOutput)
}

// BdsInstanceNodeBackupArrayInput is an input type that accepts BdsInstanceNodeBackupArray and BdsInstanceNodeBackupArrayOutput values.
// You can construct a concrete instance of `BdsInstanceNodeBackupArrayInput` via:
//
//	BdsInstanceNodeBackupArray{ BdsInstanceNodeBackupArgs{...} }
type BdsInstanceNodeBackupArrayInput interface {
	pulumi.Input

	ToBdsInstanceNodeBackupArrayOutput() BdsInstanceNodeBackupArrayOutput
	ToBdsInstanceNodeBackupArrayOutputWithContext(context.Context) BdsInstanceNodeBackupArrayOutput
}

type BdsInstanceNodeBackupArray []BdsInstanceNodeBackupInput

func (BdsInstanceNodeBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceNodeBackup)(nil)).Elem()
}

func (i BdsInstanceNodeBackupArray) ToBdsInstanceNodeBackupArrayOutput() BdsInstanceNodeBackupArrayOutput {
	return i.ToBdsInstanceNodeBackupArrayOutputWithContext(context.Background())
}

func (i BdsInstanceNodeBackupArray) ToBdsInstanceNodeBackupArrayOutputWithContext(ctx context.Context) BdsInstanceNodeBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceNodeBackupArrayOutput)
}

// BdsInstanceNodeBackupMapInput is an input type that accepts BdsInstanceNodeBackupMap and BdsInstanceNodeBackupMapOutput values.
// You can construct a concrete instance of `BdsInstanceNodeBackupMapInput` via:
//
//	BdsInstanceNodeBackupMap{ "key": BdsInstanceNodeBackupArgs{...} }
type BdsInstanceNodeBackupMapInput interface {
	pulumi.Input

	ToBdsInstanceNodeBackupMapOutput() BdsInstanceNodeBackupMapOutput
	ToBdsInstanceNodeBackupMapOutputWithContext(context.Context) BdsInstanceNodeBackupMapOutput
}

type BdsInstanceNodeBackupMap map[string]BdsInstanceNodeBackupInput

func (BdsInstanceNodeBackupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceNodeBackup)(nil)).Elem()
}

func (i BdsInstanceNodeBackupMap) ToBdsInstanceNodeBackupMapOutput() BdsInstanceNodeBackupMapOutput {
	return i.ToBdsInstanceNodeBackupMapOutputWithContext(context.Background())
}

func (i BdsInstanceNodeBackupMap) ToBdsInstanceNodeBackupMapOutputWithContext(ctx context.Context) BdsInstanceNodeBackupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceNodeBackupMapOutput)
}

type BdsInstanceNodeBackupOutput struct{ *pulumi.OutputState }

func (BdsInstanceNodeBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceNodeBackup)(nil)).Elem()
}

func (o BdsInstanceNodeBackupOutput) ToBdsInstanceNodeBackupOutput() BdsInstanceNodeBackupOutput {
	return o
}

func (o BdsInstanceNodeBackupOutput) ToBdsInstanceNodeBackupOutputWithContext(ctx context.Context) BdsInstanceNodeBackupOutput {
	return o
}

func (o BdsInstanceNodeBackupOutput) BackupConfigId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackup) pulumi.StringPtrOutput { return v.BackupConfigId }).(pulumi.StringPtrOutput)
}

// Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
func (o BdsInstanceNodeBackupOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackup) pulumi.StringOutput { return v.BackupType }).(pulumi.StringOutput)
}

// The OCID of the cluster.
func (o BdsInstanceNodeBackupOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackup) pulumi.StringOutput { return v.BdsInstanceId }).(pulumi.StringOutput)
}

func (o BdsInstanceNodeBackupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackup) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Details of the type of level used to trigger the creation of a new node backup.
func (o BdsInstanceNodeBackupOutput) LevelTypeDetails() BdsInstanceNodeBackupLevelTypeDetailsOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackup) BdsInstanceNodeBackupLevelTypeDetailsOutput { return v.LevelTypeDetails }).(BdsInstanceNodeBackupLevelTypeDetailsOutput)
}

func (o BdsInstanceNodeBackupOutput) NodeInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackup) pulumi.StringOutput { return v.NodeInstanceId }).(pulumi.StringOutput)
}

// The state of the NodeBackup.
func (o BdsInstanceNodeBackupOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackup) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The time the NodeBackup was created, shown as an RFC 3339 formatted datetime string.
func (o BdsInstanceNodeBackupOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackup) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

func (o BdsInstanceNodeBackupOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackup) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type BdsInstanceNodeBackupArrayOutput struct{ *pulumi.OutputState }

func (BdsInstanceNodeBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceNodeBackup)(nil)).Elem()
}

func (o BdsInstanceNodeBackupArrayOutput) ToBdsInstanceNodeBackupArrayOutput() BdsInstanceNodeBackupArrayOutput {
	return o
}

func (o BdsInstanceNodeBackupArrayOutput) ToBdsInstanceNodeBackupArrayOutputWithContext(ctx context.Context) BdsInstanceNodeBackupArrayOutput {
	return o
}

func (o BdsInstanceNodeBackupArrayOutput) Index(i pulumi.IntInput) BdsInstanceNodeBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BdsInstanceNodeBackup {
		return vs[0].([]*BdsInstanceNodeBackup)[vs[1].(int)]
	}).(BdsInstanceNodeBackupOutput)
}

type BdsInstanceNodeBackupMapOutput struct{ *pulumi.OutputState }

func (BdsInstanceNodeBackupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceNodeBackup)(nil)).Elem()
}

func (o BdsInstanceNodeBackupMapOutput) ToBdsInstanceNodeBackupMapOutput() BdsInstanceNodeBackupMapOutput {
	return o
}

func (o BdsInstanceNodeBackupMapOutput) ToBdsInstanceNodeBackupMapOutputWithContext(ctx context.Context) BdsInstanceNodeBackupMapOutput {
	return o
}

func (o BdsInstanceNodeBackupMapOutput) MapIndex(k pulumi.StringInput) BdsInstanceNodeBackupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BdsInstanceNodeBackup {
		return vs[0].(map[string]*BdsInstanceNodeBackup)[vs[1].(string)]
	}).(BdsInstanceNodeBackupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceNodeBackupInput)(nil)).Elem(), &BdsInstanceNodeBackup{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceNodeBackupArrayInput)(nil)).Elem(), BdsInstanceNodeBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceNodeBackupMapInput)(nil)).Elem(), BdsInstanceNodeBackupMap{})
	pulumi.RegisterOutputType(BdsInstanceNodeBackupOutput{})
	pulumi.RegisterOutputType(BdsInstanceNodeBackupArrayOutput{})
	pulumi.RegisterOutputType(BdsInstanceNodeBackupMapOutput{})
}
