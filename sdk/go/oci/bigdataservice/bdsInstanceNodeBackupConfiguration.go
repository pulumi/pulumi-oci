// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Bds Instance Node Backup Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Add a node volume backup configuration to the cluster for an indicated node type or node.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.NewBdsInstanceNodeBackupConfiguration(ctx, "test_bds_instance_node_backup_configuration", &bigdataservice.BdsInstanceNodeBackupConfigurationArgs{
//				BdsInstanceId: pulumi.Any(testBdsInstance.Id),
//				LevelTypeDetails: &bigdataservice.BdsInstanceNodeBackupConfigurationLevelTypeDetailsArgs{
//					LevelType:    pulumi.Any(bdsInstanceNodeBackupConfigurationLevelTypeDetailsLevelType),
//					NodeHostName: pulumi.Any(bdsInstanceNodeBackupConfigurationLevelTypeDetailsNodeHostName),
//					NodeType:     pulumi.Any(bdsInstanceNodeBackupConfigurationLevelTypeDetailsNodeType),
//				},
//				Schedule:                pulumi.Any(bdsInstanceNodeBackupConfigurationSchedule),
//				BackupType:              pulumi.Any(bdsInstanceNodeBackupConfigurationBackupType),
//				DisplayName:             pulumi.Any(bdsInstanceNodeBackupConfigurationDisplayName),
//				NumberOfBackupsToRetain: pulumi.Any(bdsInstanceNodeBackupConfigurationNumberOfBackupsToRetain),
//				Timezone:                pulumi.Any(bdsInstanceNodeBackupConfigurationTimezone),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// BdsInstanceNodeBackupConfigurations can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:BigDataService/bdsInstanceNodeBackupConfiguration:BdsInstanceNodeBackupConfiguration test_bds_instance_node_backup_configuration "bdsInstances/{bdsInstanceId}/nodeBackupConfigurations/{nodeBackupConfigurationId}"
// ```
type BdsInstanceNodeBackupConfiguration struct {
	pulumi.CustomResourceState

	// (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
	BackupType pulumi.StringOutput `pulumi:"backupType"`
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringOutput `pulumi:"bdsInstanceId"`
	// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails BdsInstanceNodeBackupConfigurationLevelTypeDetailsOutput `pulumi:"levelTypeDetails"`
	// (Updatable) Number of backup copies to retain.
	NumberOfBackupsToRetain pulumi.IntOutput `pulumi:"numberOfBackupsToRetain"`
	// (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
	Schedule pulumi.StringOutput `pulumi:"schedule"`
	// The state of the NodeBackupConfiguration.
	State pulumi.StringOutput `pulumi:"state"`
	// The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) The time zone of the execution schedule, in IANA time zone database name format
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Timezone pulumi.StringOutput `pulumi:"timezone"`
}

// NewBdsInstanceNodeBackupConfiguration registers a new resource with the given unique name, arguments, and options.
func NewBdsInstanceNodeBackupConfiguration(ctx *pulumi.Context,
	name string, args *BdsInstanceNodeBackupConfigurationArgs, opts ...pulumi.ResourceOption) (*BdsInstanceNodeBackupConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BdsInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'BdsInstanceId'")
	}
	if args.LevelTypeDetails == nil {
		return nil, errors.New("invalid value for required argument 'LevelTypeDetails'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BdsInstanceNodeBackupConfiguration
	err := ctx.RegisterResource("oci:BigDataService/bdsInstanceNodeBackupConfiguration:BdsInstanceNodeBackupConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBdsInstanceNodeBackupConfiguration gets an existing BdsInstanceNodeBackupConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBdsInstanceNodeBackupConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BdsInstanceNodeBackupConfigurationState, opts ...pulumi.ResourceOption) (*BdsInstanceNodeBackupConfiguration, error) {
	var resource BdsInstanceNodeBackupConfiguration
	err := ctx.ReadResource("oci:BigDataService/bdsInstanceNodeBackupConfiguration:BdsInstanceNodeBackupConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BdsInstanceNodeBackupConfiguration resources.
type bdsInstanceNodeBackupConfigurationState struct {
	// (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
	BackupType *string `pulumi:"backupType"`
	// The OCID of the cluster.
	BdsInstanceId *string `pulumi:"bdsInstanceId"`
	// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails *BdsInstanceNodeBackupConfigurationLevelTypeDetails `pulumi:"levelTypeDetails"`
	// (Updatable) Number of backup copies to retain.
	NumberOfBackupsToRetain *int `pulumi:"numberOfBackupsToRetain"`
	// (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
	Schedule *string `pulumi:"schedule"`
	// The state of the NodeBackupConfiguration.
	State *string `pulumi:"state"`
	// The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) The time zone of the execution schedule, in IANA time zone database name format
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Timezone *string `pulumi:"timezone"`
}

type BdsInstanceNodeBackupConfigurationState struct {
	// (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
	BackupType pulumi.StringPtrInput
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringPtrInput
	// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails BdsInstanceNodeBackupConfigurationLevelTypeDetailsPtrInput
	// (Updatable) Number of backup copies to retain.
	NumberOfBackupsToRetain pulumi.IntPtrInput
	// (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
	Schedule pulumi.StringPtrInput
	// The state of the NodeBackupConfiguration.
	State pulumi.StringPtrInput
	// The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) The time zone of the execution schedule, in IANA time zone database name format
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Timezone pulumi.StringPtrInput
}

func (BdsInstanceNodeBackupConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceNodeBackupConfigurationState)(nil)).Elem()
}

type bdsInstanceNodeBackupConfigurationArgs struct {
	// (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
	BackupType *string `pulumi:"backupType"`
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails BdsInstanceNodeBackupConfigurationLevelTypeDetails `pulumi:"levelTypeDetails"`
	// (Updatable) Number of backup copies to retain.
	NumberOfBackupsToRetain *int `pulumi:"numberOfBackupsToRetain"`
	// (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
	Schedule string `pulumi:"schedule"`
	// (Updatable) The time zone of the execution schedule, in IANA time zone database name format
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Timezone *string `pulumi:"timezone"`
}

// The set of arguments for constructing a BdsInstanceNodeBackupConfiguration resource.
type BdsInstanceNodeBackupConfigurationArgs struct {
	// (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
	BackupType pulumi.StringPtrInput
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput
	// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails BdsInstanceNodeBackupConfigurationLevelTypeDetailsInput
	// (Updatable) Number of backup copies to retain.
	NumberOfBackupsToRetain pulumi.IntPtrInput
	// (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
	Schedule pulumi.StringInput
	// (Updatable) The time zone of the execution schedule, in IANA time zone database name format
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Timezone pulumi.StringPtrInput
}

func (BdsInstanceNodeBackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceNodeBackupConfigurationArgs)(nil)).Elem()
}

type BdsInstanceNodeBackupConfigurationInput interface {
	pulumi.Input

	ToBdsInstanceNodeBackupConfigurationOutput() BdsInstanceNodeBackupConfigurationOutput
	ToBdsInstanceNodeBackupConfigurationOutputWithContext(ctx context.Context) BdsInstanceNodeBackupConfigurationOutput
}

func (*BdsInstanceNodeBackupConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceNodeBackupConfiguration)(nil)).Elem()
}

func (i *BdsInstanceNodeBackupConfiguration) ToBdsInstanceNodeBackupConfigurationOutput() BdsInstanceNodeBackupConfigurationOutput {
	return i.ToBdsInstanceNodeBackupConfigurationOutputWithContext(context.Background())
}

func (i *BdsInstanceNodeBackupConfiguration) ToBdsInstanceNodeBackupConfigurationOutputWithContext(ctx context.Context) BdsInstanceNodeBackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceNodeBackupConfigurationOutput)
}

// BdsInstanceNodeBackupConfigurationArrayInput is an input type that accepts BdsInstanceNodeBackupConfigurationArray and BdsInstanceNodeBackupConfigurationArrayOutput values.
// You can construct a concrete instance of `BdsInstanceNodeBackupConfigurationArrayInput` via:
//
//	BdsInstanceNodeBackupConfigurationArray{ BdsInstanceNodeBackupConfigurationArgs{...} }
type BdsInstanceNodeBackupConfigurationArrayInput interface {
	pulumi.Input

	ToBdsInstanceNodeBackupConfigurationArrayOutput() BdsInstanceNodeBackupConfigurationArrayOutput
	ToBdsInstanceNodeBackupConfigurationArrayOutputWithContext(context.Context) BdsInstanceNodeBackupConfigurationArrayOutput
}

type BdsInstanceNodeBackupConfigurationArray []BdsInstanceNodeBackupConfigurationInput

func (BdsInstanceNodeBackupConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceNodeBackupConfiguration)(nil)).Elem()
}

func (i BdsInstanceNodeBackupConfigurationArray) ToBdsInstanceNodeBackupConfigurationArrayOutput() BdsInstanceNodeBackupConfigurationArrayOutput {
	return i.ToBdsInstanceNodeBackupConfigurationArrayOutputWithContext(context.Background())
}

func (i BdsInstanceNodeBackupConfigurationArray) ToBdsInstanceNodeBackupConfigurationArrayOutputWithContext(ctx context.Context) BdsInstanceNodeBackupConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceNodeBackupConfigurationArrayOutput)
}

// BdsInstanceNodeBackupConfigurationMapInput is an input type that accepts BdsInstanceNodeBackupConfigurationMap and BdsInstanceNodeBackupConfigurationMapOutput values.
// You can construct a concrete instance of `BdsInstanceNodeBackupConfigurationMapInput` via:
//
//	BdsInstanceNodeBackupConfigurationMap{ "key": BdsInstanceNodeBackupConfigurationArgs{...} }
type BdsInstanceNodeBackupConfigurationMapInput interface {
	pulumi.Input

	ToBdsInstanceNodeBackupConfigurationMapOutput() BdsInstanceNodeBackupConfigurationMapOutput
	ToBdsInstanceNodeBackupConfigurationMapOutputWithContext(context.Context) BdsInstanceNodeBackupConfigurationMapOutput
}

type BdsInstanceNodeBackupConfigurationMap map[string]BdsInstanceNodeBackupConfigurationInput

func (BdsInstanceNodeBackupConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceNodeBackupConfiguration)(nil)).Elem()
}

func (i BdsInstanceNodeBackupConfigurationMap) ToBdsInstanceNodeBackupConfigurationMapOutput() BdsInstanceNodeBackupConfigurationMapOutput {
	return i.ToBdsInstanceNodeBackupConfigurationMapOutputWithContext(context.Background())
}

func (i BdsInstanceNodeBackupConfigurationMap) ToBdsInstanceNodeBackupConfigurationMapOutputWithContext(ctx context.Context) BdsInstanceNodeBackupConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceNodeBackupConfigurationMapOutput)
}

type BdsInstanceNodeBackupConfigurationOutput struct{ *pulumi.OutputState }

func (BdsInstanceNodeBackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceNodeBackupConfiguration)(nil)).Elem()
}

func (o BdsInstanceNodeBackupConfigurationOutput) ToBdsInstanceNodeBackupConfigurationOutput() BdsInstanceNodeBackupConfigurationOutput {
	return o
}

func (o BdsInstanceNodeBackupConfigurationOutput) ToBdsInstanceNodeBackupConfigurationOutputWithContext(ctx context.Context) BdsInstanceNodeBackupConfigurationOutput {
	return o
}

// (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
func (o BdsInstanceNodeBackupConfigurationOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackupConfiguration) pulumi.StringOutput { return v.BackupType }).(pulumi.StringOutput)
}

// The OCID of the cluster.
func (o BdsInstanceNodeBackupConfigurationOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackupConfiguration) pulumi.StringOutput { return v.BdsInstanceId }).(pulumi.StringOutput)
}

// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
func (o BdsInstanceNodeBackupConfigurationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackupConfiguration) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
func (o BdsInstanceNodeBackupConfigurationOutput) LevelTypeDetails() BdsInstanceNodeBackupConfigurationLevelTypeDetailsOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackupConfiguration) BdsInstanceNodeBackupConfigurationLevelTypeDetailsOutput {
		return v.LevelTypeDetails
	}).(BdsInstanceNodeBackupConfigurationLevelTypeDetailsOutput)
}

// (Updatable) Number of backup copies to retain.
func (o BdsInstanceNodeBackupConfigurationOutput) NumberOfBackupsToRetain() pulumi.IntOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackupConfiguration) pulumi.IntOutput { return v.NumberOfBackupsToRetain }).(pulumi.IntOutput)
}

// (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
func (o BdsInstanceNodeBackupConfigurationOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackupConfiguration) pulumi.StringOutput { return v.Schedule }).(pulumi.StringOutput)
}

// The state of the NodeBackupConfiguration.
func (o BdsInstanceNodeBackupConfigurationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackupConfiguration) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
func (o BdsInstanceNodeBackupConfigurationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackupConfiguration) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
func (o BdsInstanceNodeBackupConfigurationOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackupConfiguration) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) The time zone of the execution schedule, in IANA time zone database name format
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o BdsInstanceNodeBackupConfigurationOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeBackupConfiguration) pulumi.StringOutput { return v.Timezone }).(pulumi.StringOutput)
}

type BdsInstanceNodeBackupConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BdsInstanceNodeBackupConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceNodeBackupConfiguration)(nil)).Elem()
}

func (o BdsInstanceNodeBackupConfigurationArrayOutput) ToBdsInstanceNodeBackupConfigurationArrayOutput() BdsInstanceNodeBackupConfigurationArrayOutput {
	return o
}

func (o BdsInstanceNodeBackupConfigurationArrayOutput) ToBdsInstanceNodeBackupConfigurationArrayOutputWithContext(ctx context.Context) BdsInstanceNodeBackupConfigurationArrayOutput {
	return o
}

func (o BdsInstanceNodeBackupConfigurationArrayOutput) Index(i pulumi.IntInput) BdsInstanceNodeBackupConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BdsInstanceNodeBackupConfiguration {
		return vs[0].([]*BdsInstanceNodeBackupConfiguration)[vs[1].(int)]
	}).(BdsInstanceNodeBackupConfigurationOutput)
}

type BdsInstanceNodeBackupConfigurationMapOutput struct{ *pulumi.OutputState }

func (BdsInstanceNodeBackupConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceNodeBackupConfiguration)(nil)).Elem()
}

func (o BdsInstanceNodeBackupConfigurationMapOutput) ToBdsInstanceNodeBackupConfigurationMapOutput() BdsInstanceNodeBackupConfigurationMapOutput {
	return o
}

func (o BdsInstanceNodeBackupConfigurationMapOutput) ToBdsInstanceNodeBackupConfigurationMapOutputWithContext(ctx context.Context) BdsInstanceNodeBackupConfigurationMapOutput {
	return o
}

func (o BdsInstanceNodeBackupConfigurationMapOutput) MapIndex(k pulumi.StringInput) BdsInstanceNodeBackupConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BdsInstanceNodeBackupConfiguration {
		return vs[0].(map[string]*BdsInstanceNodeBackupConfiguration)[vs[1].(string)]
	}).(BdsInstanceNodeBackupConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceNodeBackupConfigurationInput)(nil)).Elem(), &BdsInstanceNodeBackupConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceNodeBackupConfigurationArrayInput)(nil)).Elem(), BdsInstanceNodeBackupConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceNodeBackupConfigurationMapInput)(nil)).Elem(), BdsInstanceNodeBackupConfigurationMap{})
	pulumi.RegisterOutputType(BdsInstanceNodeBackupConfigurationOutput{})
	pulumi.RegisterOutputType(BdsInstanceNodeBackupConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BdsInstanceNodeBackupConfigurationMapOutput{})
}
