// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Bds Instance Node Replace Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Add a nodeReplaceConfigurations to the cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.NewBdsInstanceNodeReplaceConfiguration(ctx, "test_bds_instance_node_replace_configuration", &bigdataservice.BdsInstanceNodeReplaceConfigurationArgs{
//				BdsInstanceId:        pulumi.Any(testBdsInstance.Id),
//				ClusterAdminPassword: pulumi.Any(bdsInstanceNodeReplaceConfigurationClusterAdminPassword),
//				DurationInMinutes:    pulumi.Any(bdsInstanceNodeReplaceConfigurationDurationInMinutes),
//				LevelTypeDetails: &bigdataservice.BdsInstanceNodeReplaceConfigurationLevelTypeDetailsArgs{
//					LevelType:    pulumi.Any(bdsInstanceNodeReplaceConfigurationLevelTypeDetailsLevelType),
//					NodeHostName: pulumi.Any(bdsInstanceNodeReplaceConfigurationLevelTypeDetailsNodeHostName),
//					NodeType:     pulumi.Any(bdsInstanceNodeReplaceConfigurationLevelTypeDetailsNodeType),
//				},
//				MetricType:  pulumi.Any(bdsInstanceNodeReplaceConfigurationMetricType),
//				DisplayName: pulumi.Any(bdsInstanceNodeReplaceConfigurationDisplayName),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// BdsInstanceNodeReplaceConfigurations can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:BigDataService/bdsInstanceNodeReplaceConfiguration:BdsInstanceNodeReplaceConfiguration test_bds_instance_node_replace_configuration "bdsInstances/{bdsInstanceId}/nodeReplaceConfigurations/{nodeReplaceConfigurationId}"
// ```
type BdsInstanceNodeReplaceConfiguration struct {
	pulumi.CustomResourceState

	// The OCID of the cluster.
	BdsInstanceId pulumi.StringOutput `pulumi:"bdsInstanceId"`
	// Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword pulumi.StringOutput `pulumi:"clusterAdminPassword"`
	// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
	DurationInMinutes pulumi.IntOutput `pulumi:"durationInMinutes"`
	// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails BdsInstanceNodeReplaceConfigurationLevelTypeDetailsOutput `pulumi:"levelTypeDetails"`
	// (Updatable) Type of compute instance health metric to use for node replacement
	MetricType pulumi.StringOutput `pulumi:"metricType"`
	// The state of the NodeReplaceConfiguration.
	State pulumi.StringOutput `pulumi:"state"`
	// The time the NodeReplaceConfiguration was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the NodeReplaceConfiguration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewBdsInstanceNodeReplaceConfiguration registers a new resource with the given unique name, arguments, and options.
func NewBdsInstanceNodeReplaceConfiguration(ctx *pulumi.Context,
	name string, args *BdsInstanceNodeReplaceConfigurationArgs, opts ...pulumi.ResourceOption) (*BdsInstanceNodeReplaceConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BdsInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'BdsInstanceId'")
	}
	if args.ClusterAdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'ClusterAdminPassword'")
	}
	if args.DurationInMinutes == nil {
		return nil, errors.New("invalid value for required argument 'DurationInMinutes'")
	}
	if args.LevelTypeDetails == nil {
		return nil, errors.New("invalid value for required argument 'LevelTypeDetails'")
	}
	if args.MetricType == nil {
		return nil, errors.New("invalid value for required argument 'MetricType'")
	}
	if args.ClusterAdminPassword != nil {
		args.ClusterAdminPassword = pulumi.ToSecret(args.ClusterAdminPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clusterAdminPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BdsInstanceNodeReplaceConfiguration
	err := ctx.RegisterResource("oci:BigDataService/bdsInstanceNodeReplaceConfiguration:BdsInstanceNodeReplaceConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBdsInstanceNodeReplaceConfiguration gets an existing BdsInstanceNodeReplaceConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBdsInstanceNodeReplaceConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BdsInstanceNodeReplaceConfigurationState, opts ...pulumi.ResourceOption) (*BdsInstanceNodeReplaceConfiguration, error) {
	var resource BdsInstanceNodeReplaceConfiguration
	err := ctx.ReadResource("oci:BigDataService/bdsInstanceNodeReplaceConfiguration:BdsInstanceNodeReplaceConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BdsInstanceNodeReplaceConfiguration resources.
type bdsInstanceNodeReplaceConfigurationState struct {
	// The OCID of the cluster.
	BdsInstanceId *string `pulumi:"bdsInstanceId"`
	// Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword *string `pulumi:"clusterAdminPassword"`
	// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
	DurationInMinutes *int `pulumi:"durationInMinutes"`
	// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails *BdsInstanceNodeReplaceConfigurationLevelTypeDetails `pulumi:"levelTypeDetails"`
	// (Updatable) Type of compute instance health metric to use for node replacement
	MetricType *string `pulumi:"metricType"`
	// The state of the NodeReplaceConfiguration.
	State *string `pulumi:"state"`
	// The time the NodeReplaceConfiguration was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the NodeReplaceConfiguration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type BdsInstanceNodeReplaceConfigurationState struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringPtrInput
	// Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword pulumi.StringPtrInput
	// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
	DurationInMinutes pulumi.IntPtrInput
	// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails BdsInstanceNodeReplaceConfigurationLevelTypeDetailsPtrInput
	// (Updatable) Type of compute instance health metric to use for node replacement
	MetricType pulumi.StringPtrInput
	// The state of the NodeReplaceConfiguration.
	State pulumi.StringPtrInput
	// The time the NodeReplaceConfiguration was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the NodeReplaceConfiguration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (BdsInstanceNodeReplaceConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceNodeReplaceConfigurationState)(nil)).Elem()
}

type bdsInstanceNodeReplaceConfigurationArgs struct {
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword string `pulumi:"clusterAdminPassword"`
	// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
	DurationInMinutes int `pulumi:"durationInMinutes"`
	// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails BdsInstanceNodeReplaceConfigurationLevelTypeDetails `pulumi:"levelTypeDetails"`
	// (Updatable) Type of compute instance health metric to use for node replacement
	MetricType string `pulumi:"metricType"`
}

// The set of arguments for constructing a BdsInstanceNodeReplaceConfiguration resource.
type BdsInstanceNodeReplaceConfigurationArgs struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput
	// Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword pulumi.StringInput
	// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
	DurationInMinutes pulumi.IntInput
	// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails BdsInstanceNodeReplaceConfigurationLevelTypeDetailsInput
	// (Updatable) Type of compute instance health metric to use for node replacement
	MetricType pulumi.StringInput
}

func (BdsInstanceNodeReplaceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceNodeReplaceConfigurationArgs)(nil)).Elem()
}

type BdsInstanceNodeReplaceConfigurationInput interface {
	pulumi.Input

	ToBdsInstanceNodeReplaceConfigurationOutput() BdsInstanceNodeReplaceConfigurationOutput
	ToBdsInstanceNodeReplaceConfigurationOutputWithContext(ctx context.Context) BdsInstanceNodeReplaceConfigurationOutput
}

func (*BdsInstanceNodeReplaceConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceNodeReplaceConfiguration)(nil)).Elem()
}

func (i *BdsInstanceNodeReplaceConfiguration) ToBdsInstanceNodeReplaceConfigurationOutput() BdsInstanceNodeReplaceConfigurationOutput {
	return i.ToBdsInstanceNodeReplaceConfigurationOutputWithContext(context.Background())
}

func (i *BdsInstanceNodeReplaceConfiguration) ToBdsInstanceNodeReplaceConfigurationOutputWithContext(ctx context.Context) BdsInstanceNodeReplaceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceNodeReplaceConfigurationOutput)
}

// BdsInstanceNodeReplaceConfigurationArrayInput is an input type that accepts BdsInstanceNodeReplaceConfigurationArray and BdsInstanceNodeReplaceConfigurationArrayOutput values.
// You can construct a concrete instance of `BdsInstanceNodeReplaceConfigurationArrayInput` via:
//
//	BdsInstanceNodeReplaceConfigurationArray{ BdsInstanceNodeReplaceConfigurationArgs{...} }
type BdsInstanceNodeReplaceConfigurationArrayInput interface {
	pulumi.Input

	ToBdsInstanceNodeReplaceConfigurationArrayOutput() BdsInstanceNodeReplaceConfigurationArrayOutput
	ToBdsInstanceNodeReplaceConfigurationArrayOutputWithContext(context.Context) BdsInstanceNodeReplaceConfigurationArrayOutput
}

type BdsInstanceNodeReplaceConfigurationArray []BdsInstanceNodeReplaceConfigurationInput

func (BdsInstanceNodeReplaceConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceNodeReplaceConfiguration)(nil)).Elem()
}

func (i BdsInstanceNodeReplaceConfigurationArray) ToBdsInstanceNodeReplaceConfigurationArrayOutput() BdsInstanceNodeReplaceConfigurationArrayOutput {
	return i.ToBdsInstanceNodeReplaceConfigurationArrayOutputWithContext(context.Background())
}

func (i BdsInstanceNodeReplaceConfigurationArray) ToBdsInstanceNodeReplaceConfigurationArrayOutputWithContext(ctx context.Context) BdsInstanceNodeReplaceConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceNodeReplaceConfigurationArrayOutput)
}

// BdsInstanceNodeReplaceConfigurationMapInput is an input type that accepts BdsInstanceNodeReplaceConfigurationMap and BdsInstanceNodeReplaceConfigurationMapOutput values.
// You can construct a concrete instance of `BdsInstanceNodeReplaceConfigurationMapInput` via:
//
//	BdsInstanceNodeReplaceConfigurationMap{ "key": BdsInstanceNodeReplaceConfigurationArgs{...} }
type BdsInstanceNodeReplaceConfigurationMapInput interface {
	pulumi.Input

	ToBdsInstanceNodeReplaceConfigurationMapOutput() BdsInstanceNodeReplaceConfigurationMapOutput
	ToBdsInstanceNodeReplaceConfigurationMapOutputWithContext(context.Context) BdsInstanceNodeReplaceConfigurationMapOutput
}

type BdsInstanceNodeReplaceConfigurationMap map[string]BdsInstanceNodeReplaceConfigurationInput

func (BdsInstanceNodeReplaceConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceNodeReplaceConfiguration)(nil)).Elem()
}

func (i BdsInstanceNodeReplaceConfigurationMap) ToBdsInstanceNodeReplaceConfigurationMapOutput() BdsInstanceNodeReplaceConfigurationMapOutput {
	return i.ToBdsInstanceNodeReplaceConfigurationMapOutputWithContext(context.Background())
}

func (i BdsInstanceNodeReplaceConfigurationMap) ToBdsInstanceNodeReplaceConfigurationMapOutputWithContext(ctx context.Context) BdsInstanceNodeReplaceConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceNodeReplaceConfigurationMapOutput)
}

type BdsInstanceNodeReplaceConfigurationOutput struct{ *pulumi.OutputState }

func (BdsInstanceNodeReplaceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceNodeReplaceConfiguration)(nil)).Elem()
}

func (o BdsInstanceNodeReplaceConfigurationOutput) ToBdsInstanceNodeReplaceConfigurationOutput() BdsInstanceNodeReplaceConfigurationOutput {
	return o
}

func (o BdsInstanceNodeReplaceConfigurationOutput) ToBdsInstanceNodeReplaceConfigurationOutputWithContext(ctx context.Context) BdsInstanceNodeReplaceConfigurationOutput {
	return o
}

// The OCID of the cluster.
func (o BdsInstanceNodeReplaceConfigurationOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeReplaceConfiguration) pulumi.StringOutput { return v.BdsInstanceId }).(pulumi.StringOutput)
}

// Base-64 encoded password for the cluster admin user.
func (o BdsInstanceNodeReplaceConfigurationOutput) ClusterAdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeReplaceConfiguration) pulumi.StringOutput { return v.ClusterAdminPassword }).(pulumi.StringOutput)
}

// (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
func (o BdsInstanceNodeReplaceConfigurationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeReplaceConfiguration) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
func (o BdsInstanceNodeReplaceConfigurationOutput) DurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v *BdsInstanceNodeReplaceConfiguration) pulumi.IntOutput { return v.DurationInMinutes }).(pulumi.IntOutput)
}

// (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
func (o BdsInstanceNodeReplaceConfigurationOutput) LevelTypeDetails() BdsInstanceNodeReplaceConfigurationLevelTypeDetailsOutput {
	return o.ApplyT(func(v *BdsInstanceNodeReplaceConfiguration) BdsInstanceNodeReplaceConfigurationLevelTypeDetailsOutput {
		return v.LevelTypeDetails
	}).(BdsInstanceNodeReplaceConfigurationLevelTypeDetailsOutput)
}

// (Updatable) Type of compute instance health metric to use for node replacement
func (o BdsInstanceNodeReplaceConfigurationOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeReplaceConfiguration) pulumi.StringOutput { return v.MetricType }).(pulumi.StringOutput)
}

// The state of the NodeReplaceConfiguration.
func (o BdsInstanceNodeReplaceConfigurationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeReplaceConfiguration) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The time the NodeReplaceConfiguration was created, shown as an RFC 3339 formatted datetime string.
func (o BdsInstanceNodeReplaceConfigurationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeReplaceConfiguration) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the NodeReplaceConfiguration was updated, shown as an RFC 3339 formatted datetime string.
func (o BdsInstanceNodeReplaceConfigurationOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceNodeReplaceConfiguration) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type BdsInstanceNodeReplaceConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BdsInstanceNodeReplaceConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceNodeReplaceConfiguration)(nil)).Elem()
}

func (o BdsInstanceNodeReplaceConfigurationArrayOutput) ToBdsInstanceNodeReplaceConfigurationArrayOutput() BdsInstanceNodeReplaceConfigurationArrayOutput {
	return o
}

func (o BdsInstanceNodeReplaceConfigurationArrayOutput) ToBdsInstanceNodeReplaceConfigurationArrayOutputWithContext(ctx context.Context) BdsInstanceNodeReplaceConfigurationArrayOutput {
	return o
}

func (o BdsInstanceNodeReplaceConfigurationArrayOutput) Index(i pulumi.IntInput) BdsInstanceNodeReplaceConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BdsInstanceNodeReplaceConfiguration {
		return vs[0].([]*BdsInstanceNodeReplaceConfiguration)[vs[1].(int)]
	}).(BdsInstanceNodeReplaceConfigurationOutput)
}

type BdsInstanceNodeReplaceConfigurationMapOutput struct{ *pulumi.OutputState }

func (BdsInstanceNodeReplaceConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceNodeReplaceConfiguration)(nil)).Elem()
}

func (o BdsInstanceNodeReplaceConfigurationMapOutput) ToBdsInstanceNodeReplaceConfigurationMapOutput() BdsInstanceNodeReplaceConfigurationMapOutput {
	return o
}

func (o BdsInstanceNodeReplaceConfigurationMapOutput) ToBdsInstanceNodeReplaceConfigurationMapOutputWithContext(ctx context.Context) BdsInstanceNodeReplaceConfigurationMapOutput {
	return o
}

func (o BdsInstanceNodeReplaceConfigurationMapOutput) MapIndex(k pulumi.StringInput) BdsInstanceNodeReplaceConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BdsInstanceNodeReplaceConfiguration {
		return vs[0].(map[string]*BdsInstanceNodeReplaceConfiguration)[vs[1].(string)]
	}).(BdsInstanceNodeReplaceConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceNodeReplaceConfigurationInput)(nil)).Elem(), &BdsInstanceNodeReplaceConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceNodeReplaceConfigurationArrayInput)(nil)).Elem(), BdsInstanceNodeReplaceConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceNodeReplaceConfigurationMapInput)(nil)).Elem(), BdsInstanceNodeReplaceConfigurationMap{})
	pulumi.RegisterOutputType(BdsInstanceNodeReplaceConfigurationOutput{})
	pulumi.RegisterOutputType(BdsInstanceNodeReplaceConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BdsInstanceNodeReplaceConfigurationMapOutput{})
}
