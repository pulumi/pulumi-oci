// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Bds Instance OS Patch Action resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Install the specified OS patch to this cluster nodes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.NewBdsInstanceOsPatchAction(ctx, "test_bds_instance_os_patch_action", &bigdataservice.BdsInstanceOsPatchActionArgs{
//				BdsInstanceId:        pulumi.Any(testBdsInstance.Id),
//				ClusterAdminPassword: pulumi.Any(bdsInstanceOsPatchActionClusterAdminPassword),
//				OsPatchVersion:       pulumi.Any(bdsInstanceOsPatchActionOsPatchVersion),
//				PatchingConfigs: bigdataservice.BdsInstanceOsPatchActionPatchingConfigArray{
//					&bigdataservice.BdsInstanceOsPatchActionPatchingConfigArgs{
//						PatchingConfigStrategy:         pulumi.Any(bdsInstanceOsPatchActionPatchingConfigStrategy),
//						BatchSize:                      pulumi.Any(bdsInstanceOsPatchActionBatchSize),
//						WaitTimeBetweenBatchInSeconds:  pulumi.Any(bdsInstanceOsPatchActionWaitTimeBetweenBatchInSeconds),
//						ToleranceThresholdPerBatch:     pulumi.Any(bdsInstanceOsPatchActionToleranceThresholdPerBatch),
//						WaitTimeBetweenDomainInSeconds: pulumi.Any(bdsInstanceOsPatchActionWaitTimeBetweenDomainInSeconds),
//						ToleranceThresholdPerDomain:    pulumi.Any(bdsInstanceOsPatchActionToleranceThresholdPerDomain),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type BdsInstanceOsPatchAction struct {
	pulumi.CustomResourceState

	// The OCID of the cluster.
	BdsInstanceId pulumi.StringOutput `pulumi:"bdsInstanceId"`
	// Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword pulumi.StringOutput `pulumi:"clusterAdminPassword"`
	// The version of the OS patch to be installed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	OsPatchVersion pulumi.StringOutput `pulumi:"osPatchVersion"`
	// Detailed configurations for defining the behavior when installing ODH patches. If not provided, nodes will be patched with down time.
	PatchingConfigs BdsInstanceOsPatchActionPatchingConfigArrayOutput `pulumi:"patchingConfigs"`
}

// NewBdsInstanceOsPatchAction registers a new resource with the given unique name, arguments, and options.
func NewBdsInstanceOsPatchAction(ctx *pulumi.Context,
	name string, args *BdsInstanceOsPatchActionArgs, opts ...pulumi.ResourceOption) (*BdsInstanceOsPatchAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BdsInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'BdsInstanceId'")
	}
	if args.ClusterAdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'ClusterAdminPassword'")
	}
	if args.OsPatchVersion == nil {
		return nil, errors.New("invalid value for required argument 'OsPatchVersion'")
	}
	if args.ClusterAdminPassword != nil {
		args.ClusterAdminPassword = pulumi.ToSecret(args.ClusterAdminPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clusterAdminPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BdsInstanceOsPatchAction
	err := ctx.RegisterResource("oci:BigDataService/bdsInstanceOsPatchAction:BdsInstanceOsPatchAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBdsInstanceOsPatchAction gets an existing BdsInstanceOsPatchAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBdsInstanceOsPatchAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BdsInstanceOsPatchActionState, opts ...pulumi.ResourceOption) (*BdsInstanceOsPatchAction, error) {
	var resource BdsInstanceOsPatchAction
	err := ctx.ReadResource("oci:BigDataService/bdsInstanceOsPatchAction:BdsInstanceOsPatchAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BdsInstanceOsPatchAction resources.
type bdsInstanceOsPatchActionState struct {
	// The OCID of the cluster.
	BdsInstanceId *string `pulumi:"bdsInstanceId"`
	// Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword *string `pulumi:"clusterAdminPassword"`
	// The version of the OS patch to be installed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	OsPatchVersion *string `pulumi:"osPatchVersion"`
	// Detailed configurations for defining the behavior when installing ODH patches. If not provided, nodes will be patched with down time.
	PatchingConfigs []BdsInstanceOsPatchActionPatchingConfig `pulumi:"patchingConfigs"`
}

type BdsInstanceOsPatchActionState struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringPtrInput
	// Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword pulumi.StringPtrInput
	// The version of the OS patch to be installed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	OsPatchVersion pulumi.StringPtrInput
	// Detailed configurations for defining the behavior when installing ODH patches. If not provided, nodes will be patched with down time.
	PatchingConfigs BdsInstanceOsPatchActionPatchingConfigArrayInput
}

func (BdsInstanceOsPatchActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceOsPatchActionState)(nil)).Elem()
}

type bdsInstanceOsPatchActionArgs struct {
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword string `pulumi:"clusterAdminPassword"`
	// The version of the OS patch to be installed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	OsPatchVersion string `pulumi:"osPatchVersion"`
	// Detailed configurations for defining the behavior when installing ODH patches. If not provided, nodes will be patched with down time.
	PatchingConfigs []BdsInstanceOsPatchActionPatchingConfig `pulumi:"patchingConfigs"`
}

// The set of arguments for constructing a BdsInstanceOsPatchAction resource.
type BdsInstanceOsPatchActionArgs struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput
	// Base-64 encoded password for the cluster admin user.
	ClusterAdminPassword pulumi.StringInput
	// The version of the OS patch to be installed.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	OsPatchVersion pulumi.StringInput
	// Detailed configurations for defining the behavior when installing ODH patches. If not provided, nodes will be patched with down time.
	PatchingConfigs BdsInstanceOsPatchActionPatchingConfigArrayInput
}

func (BdsInstanceOsPatchActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceOsPatchActionArgs)(nil)).Elem()
}

type BdsInstanceOsPatchActionInput interface {
	pulumi.Input

	ToBdsInstanceOsPatchActionOutput() BdsInstanceOsPatchActionOutput
	ToBdsInstanceOsPatchActionOutputWithContext(ctx context.Context) BdsInstanceOsPatchActionOutput
}

func (*BdsInstanceOsPatchAction) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceOsPatchAction)(nil)).Elem()
}

func (i *BdsInstanceOsPatchAction) ToBdsInstanceOsPatchActionOutput() BdsInstanceOsPatchActionOutput {
	return i.ToBdsInstanceOsPatchActionOutputWithContext(context.Background())
}

func (i *BdsInstanceOsPatchAction) ToBdsInstanceOsPatchActionOutputWithContext(ctx context.Context) BdsInstanceOsPatchActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceOsPatchActionOutput)
}

// BdsInstanceOsPatchActionArrayInput is an input type that accepts BdsInstanceOsPatchActionArray and BdsInstanceOsPatchActionArrayOutput values.
// You can construct a concrete instance of `BdsInstanceOsPatchActionArrayInput` via:
//
//	BdsInstanceOsPatchActionArray{ BdsInstanceOsPatchActionArgs{...} }
type BdsInstanceOsPatchActionArrayInput interface {
	pulumi.Input

	ToBdsInstanceOsPatchActionArrayOutput() BdsInstanceOsPatchActionArrayOutput
	ToBdsInstanceOsPatchActionArrayOutputWithContext(context.Context) BdsInstanceOsPatchActionArrayOutput
}

type BdsInstanceOsPatchActionArray []BdsInstanceOsPatchActionInput

func (BdsInstanceOsPatchActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceOsPatchAction)(nil)).Elem()
}

func (i BdsInstanceOsPatchActionArray) ToBdsInstanceOsPatchActionArrayOutput() BdsInstanceOsPatchActionArrayOutput {
	return i.ToBdsInstanceOsPatchActionArrayOutputWithContext(context.Background())
}

func (i BdsInstanceOsPatchActionArray) ToBdsInstanceOsPatchActionArrayOutputWithContext(ctx context.Context) BdsInstanceOsPatchActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceOsPatchActionArrayOutput)
}

// BdsInstanceOsPatchActionMapInput is an input type that accepts BdsInstanceOsPatchActionMap and BdsInstanceOsPatchActionMapOutput values.
// You can construct a concrete instance of `BdsInstanceOsPatchActionMapInput` via:
//
//	BdsInstanceOsPatchActionMap{ "key": BdsInstanceOsPatchActionArgs{...} }
type BdsInstanceOsPatchActionMapInput interface {
	pulumi.Input

	ToBdsInstanceOsPatchActionMapOutput() BdsInstanceOsPatchActionMapOutput
	ToBdsInstanceOsPatchActionMapOutputWithContext(context.Context) BdsInstanceOsPatchActionMapOutput
}

type BdsInstanceOsPatchActionMap map[string]BdsInstanceOsPatchActionInput

func (BdsInstanceOsPatchActionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceOsPatchAction)(nil)).Elem()
}

func (i BdsInstanceOsPatchActionMap) ToBdsInstanceOsPatchActionMapOutput() BdsInstanceOsPatchActionMapOutput {
	return i.ToBdsInstanceOsPatchActionMapOutputWithContext(context.Background())
}

func (i BdsInstanceOsPatchActionMap) ToBdsInstanceOsPatchActionMapOutputWithContext(ctx context.Context) BdsInstanceOsPatchActionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceOsPatchActionMapOutput)
}

type BdsInstanceOsPatchActionOutput struct{ *pulumi.OutputState }

func (BdsInstanceOsPatchActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceOsPatchAction)(nil)).Elem()
}

func (o BdsInstanceOsPatchActionOutput) ToBdsInstanceOsPatchActionOutput() BdsInstanceOsPatchActionOutput {
	return o
}

func (o BdsInstanceOsPatchActionOutput) ToBdsInstanceOsPatchActionOutputWithContext(ctx context.Context) BdsInstanceOsPatchActionOutput {
	return o
}

// The OCID of the cluster.
func (o BdsInstanceOsPatchActionOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceOsPatchAction) pulumi.StringOutput { return v.BdsInstanceId }).(pulumi.StringOutput)
}

// Base-64 encoded password for the cluster admin user.
func (o BdsInstanceOsPatchActionOutput) ClusterAdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceOsPatchAction) pulumi.StringOutput { return v.ClusterAdminPassword }).(pulumi.StringOutput)
}

// The version of the OS patch to be installed.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o BdsInstanceOsPatchActionOutput) OsPatchVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceOsPatchAction) pulumi.StringOutput { return v.OsPatchVersion }).(pulumi.StringOutput)
}

// Detailed configurations for defining the behavior when installing ODH patches. If not provided, nodes will be patched with down time.
func (o BdsInstanceOsPatchActionOutput) PatchingConfigs() BdsInstanceOsPatchActionPatchingConfigArrayOutput {
	return o.ApplyT(func(v *BdsInstanceOsPatchAction) BdsInstanceOsPatchActionPatchingConfigArrayOutput {
		return v.PatchingConfigs
	}).(BdsInstanceOsPatchActionPatchingConfigArrayOutput)
}

type BdsInstanceOsPatchActionArrayOutput struct{ *pulumi.OutputState }

func (BdsInstanceOsPatchActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceOsPatchAction)(nil)).Elem()
}

func (o BdsInstanceOsPatchActionArrayOutput) ToBdsInstanceOsPatchActionArrayOutput() BdsInstanceOsPatchActionArrayOutput {
	return o
}

func (o BdsInstanceOsPatchActionArrayOutput) ToBdsInstanceOsPatchActionArrayOutputWithContext(ctx context.Context) BdsInstanceOsPatchActionArrayOutput {
	return o
}

func (o BdsInstanceOsPatchActionArrayOutput) Index(i pulumi.IntInput) BdsInstanceOsPatchActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BdsInstanceOsPatchAction {
		return vs[0].([]*BdsInstanceOsPatchAction)[vs[1].(int)]
	}).(BdsInstanceOsPatchActionOutput)
}

type BdsInstanceOsPatchActionMapOutput struct{ *pulumi.OutputState }

func (BdsInstanceOsPatchActionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceOsPatchAction)(nil)).Elem()
}

func (o BdsInstanceOsPatchActionMapOutput) ToBdsInstanceOsPatchActionMapOutput() BdsInstanceOsPatchActionMapOutput {
	return o
}

func (o BdsInstanceOsPatchActionMapOutput) ToBdsInstanceOsPatchActionMapOutputWithContext(ctx context.Context) BdsInstanceOsPatchActionMapOutput {
	return o
}

func (o BdsInstanceOsPatchActionMapOutput) MapIndex(k pulumi.StringInput) BdsInstanceOsPatchActionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BdsInstanceOsPatchAction {
		return vs[0].(map[string]*BdsInstanceOsPatchAction)[vs[1].(string)]
	}).(BdsInstanceOsPatchActionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceOsPatchActionInput)(nil)).Elem(), &BdsInstanceOsPatchAction{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceOsPatchActionArrayInput)(nil)).Elem(), BdsInstanceOsPatchActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceOsPatchActionMapInput)(nil)).Elem(), BdsInstanceOsPatchActionMap{})
	pulumi.RegisterOutputType(BdsInstanceOsPatchActionOutput{})
	pulumi.RegisterOutputType(BdsInstanceOsPatchActionArrayOutput{})
	pulumi.RegisterOutputType(BdsInstanceOsPatchActionMapOutput{})
}
