// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource installs the specified software update to the nodes of the Oracle Cloud Infrastructure Big Data Service cluster.
//
// Install Software Update of the specified SoftwareUpdateId to this BDS cluster's nodes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.NewBdsInstanceSoftwareUpdateAction(ctx, "test_bds_instance_software_update_action", &bigdataservice.BdsInstanceSoftwareUpdateActionArgs{
//				BdsInstanceId:     pulumi.Any(testBdsInstance.Id),
//				SoftwareUpdateKey: bdsInstanceSoftwareUpdateActionSoftwareUpdateKey,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type BdsInstanceSoftwareUpdateAction struct {
	pulumi.CustomResourceState

	// The OCID of the cluster.
	BdsInstanceId      pulumi.StringOutput      `pulumi:"bdsInstanceId"`
	SoftwareUpdateKeys pulumi.StringArrayOutput `pulumi:"softwareUpdateKeys"`
}

// NewBdsInstanceSoftwareUpdateAction registers a new resource with the given unique name, arguments, and options.
func NewBdsInstanceSoftwareUpdateAction(ctx *pulumi.Context,
	name string, args *BdsInstanceSoftwareUpdateActionArgs, opts ...pulumi.ResourceOption) (*BdsInstanceSoftwareUpdateAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BdsInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'BdsInstanceId'")
	}
	if args.SoftwareUpdateKeys == nil {
		return nil, errors.New("invalid value for required argument 'SoftwareUpdateKeys'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BdsInstanceSoftwareUpdateAction
	err := ctx.RegisterResource("oci:BigDataService/bdsInstanceSoftwareUpdateAction:BdsInstanceSoftwareUpdateAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBdsInstanceSoftwareUpdateAction gets an existing BdsInstanceSoftwareUpdateAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBdsInstanceSoftwareUpdateAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BdsInstanceSoftwareUpdateActionState, opts ...pulumi.ResourceOption) (*BdsInstanceSoftwareUpdateAction, error) {
	var resource BdsInstanceSoftwareUpdateAction
	err := ctx.ReadResource("oci:BigDataService/bdsInstanceSoftwareUpdateAction:BdsInstanceSoftwareUpdateAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BdsInstanceSoftwareUpdateAction resources.
type bdsInstanceSoftwareUpdateActionState struct {
	// The OCID of the cluster.
	BdsInstanceId      *string  `pulumi:"bdsInstanceId"`
	SoftwareUpdateKeys []string `pulumi:"softwareUpdateKeys"`
}

type BdsInstanceSoftwareUpdateActionState struct {
	// The OCID of the cluster.
	BdsInstanceId      pulumi.StringPtrInput
	SoftwareUpdateKeys pulumi.StringArrayInput
}

func (BdsInstanceSoftwareUpdateActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceSoftwareUpdateActionState)(nil)).Elem()
}

type bdsInstanceSoftwareUpdateActionArgs struct {
	// The OCID of the cluster.
	BdsInstanceId      string   `pulumi:"bdsInstanceId"`
	SoftwareUpdateKeys []string `pulumi:"softwareUpdateKeys"`
}

// The set of arguments for constructing a BdsInstanceSoftwareUpdateAction resource.
type BdsInstanceSoftwareUpdateActionArgs struct {
	// The OCID of the cluster.
	BdsInstanceId      pulumi.StringInput
	SoftwareUpdateKeys pulumi.StringArrayInput
}

func (BdsInstanceSoftwareUpdateActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bdsInstanceSoftwareUpdateActionArgs)(nil)).Elem()
}

type BdsInstanceSoftwareUpdateActionInput interface {
	pulumi.Input

	ToBdsInstanceSoftwareUpdateActionOutput() BdsInstanceSoftwareUpdateActionOutput
	ToBdsInstanceSoftwareUpdateActionOutputWithContext(ctx context.Context) BdsInstanceSoftwareUpdateActionOutput
}

func (*BdsInstanceSoftwareUpdateAction) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceSoftwareUpdateAction)(nil)).Elem()
}

func (i *BdsInstanceSoftwareUpdateAction) ToBdsInstanceSoftwareUpdateActionOutput() BdsInstanceSoftwareUpdateActionOutput {
	return i.ToBdsInstanceSoftwareUpdateActionOutputWithContext(context.Background())
}

func (i *BdsInstanceSoftwareUpdateAction) ToBdsInstanceSoftwareUpdateActionOutputWithContext(ctx context.Context) BdsInstanceSoftwareUpdateActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceSoftwareUpdateActionOutput)
}

// BdsInstanceSoftwareUpdateActionArrayInput is an input type that accepts BdsInstanceSoftwareUpdateActionArray and BdsInstanceSoftwareUpdateActionArrayOutput values.
// You can construct a concrete instance of `BdsInstanceSoftwareUpdateActionArrayInput` via:
//
//	BdsInstanceSoftwareUpdateActionArray{ BdsInstanceSoftwareUpdateActionArgs{...} }
type BdsInstanceSoftwareUpdateActionArrayInput interface {
	pulumi.Input

	ToBdsInstanceSoftwareUpdateActionArrayOutput() BdsInstanceSoftwareUpdateActionArrayOutput
	ToBdsInstanceSoftwareUpdateActionArrayOutputWithContext(context.Context) BdsInstanceSoftwareUpdateActionArrayOutput
}

type BdsInstanceSoftwareUpdateActionArray []BdsInstanceSoftwareUpdateActionInput

func (BdsInstanceSoftwareUpdateActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceSoftwareUpdateAction)(nil)).Elem()
}

func (i BdsInstanceSoftwareUpdateActionArray) ToBdsInstanceSoftwareUpdateActionArrayOutput() BdsInstanceSoftwareUpdateActionArrayOutput {
	return i.ToBdsInstanceSoftwareUpdateActionArrayOutputWithContext(context.Background())
}

func (i BdsInstanceSoftwareUpdateActionArray) ToBdsInstanceSoftwareUpdateActionArrayOutputWithContext(ctx context.Context) BdsInstanceSoftwareUpdateActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceSoftwareUpdateActionArrayOutput)
}

// BdsInstanceSoftwareUpdateActionMapInput is an input type that accepts BdsInstanceSoftwareUpdateActionMap and BdsInstanceSoftwareUpdateActionMapOutput values.
// You can construct a concrete instance of `BdsInstanceSoftwareUpdateActionMapInput` via:
//
//	BdsInstanceSoftwareUpdateActionMap{ "key": BdsInstanceSoftwareUpdateActionArgs{...} }
type BdsInstanceSoftwareUpdateActionMapInput interface {
	pulumi.Input

	ToBdsInstanceSoftwareUpdateActionMapOutput() BdsInstanceSoftwareUpdateActionMapOutput
	ToBdsInstanceSoftwareUpdateActionMapOutputWithContext(context.Context) BdsInstanceSoftwareUpdateActionMapOutput
}

type BdsInstanceSoftwareUpdateActionMap map[string]BdsInstanceSoftwareUpdateActionInput

func (BdsInstanceSoftwareUpdateActionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceSoftwareUpdateAction)(nil)).Elem()
}

func (i BdsInstanceSoftwareUpdateActionMap) ToBdsInstanceSoftwareUpdateActionMapOutput() BdsInstanceSoftwareUpdateActionMapOutput {
	return i.ToBdsInstanceSoftwareUpdateActionMapOutputWithContext(context.Background())
}

func (i BdsInstanceSoftwareUpdateActionMap) ToBdsInstanceSoftwareUpdateActionMapOutputWithContext(ctx context.Context) BdsInstanceSoftwareUpdateActionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BdsInstanceSoftwareUpdateActionMapOutput)
}

type BdsInstanceSoftwareUpdateActionOutput struct{ *pulumi.OutputState }

func (BdsInstanceSoftwareUpdateActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BdsInstanceSoftwareUpdateAction)(nil)).Elem()
}

func (o BdsInstanceSoftwareUpdateActionOutput) ToBdsInstanceSoftwareUpdateActionOutput() BdsInstanceSoftwareUpdateActionOutput {
	return o
}

func (o BdsInstanceSoftwareUpdateActionOutput) ToBdsInstanceSoftwareUpdateActionOutputWithContext(ctx context.Context) BdsInstanceSoftwareUpdateActionOutput {
	return o
}

// The OCID of the cluster.
func (o BdsInstanceSoftwareUpdateActionOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BdsInstanceSoftwareUpdateAction) pulumi.StringOutput { return v.BdsInstanceId }).(pulumi.StringOutput)
}

func (o BdsInstanceSoftwareUpdateActionOutput) SoftwareUpdateKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BdsInstanceSoftwareUpdateAction) pulumi.StringArrayOutput { return v.SoftwareUpdateKeys }).(pulumi.StringArrayOutput)
}

type BdsInstanceSoftwareUpdateActionArrayOutput struct{ *pulumi.OutputState }

func (BdsInstanceSoftwareUpdateActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BdsInstanceSoftwareUpdateAction)(nil)).Elem()
}

func (o BdsInstanceSoftwareUpdateActionArrayOutput) ToBdsInstanceSoftwareUpdateActionArrayOutput() BdsInstanceSoftwareUpdateActionArrayOutput {
	return o
}

func (o BdsInstanceSoftwareUpdateActionArrayOutput) ToBdsInstanceSoftwareUpdateActionArrayOutputWithContext(ctx context.Context) BdsInstanceSoftwareUpdateActionArrayOutput {
	return o
}

func (o BdsInstanceSoftwareUpdateActionArrayOutput) Index(i pulumi.IntInput) BdsInstanceSoftwareUpdateActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BdsInstanceSoftwareUpdateAction {
		return vs[0].([]*BdsInstanceSoftwareUpdateAction)[vs[1].(int)]
	}).(BdsInstanceSoftwareUpdateActionOutput)
}

type BdsInstanceSoftwareUpdateActionMapOutput struct{ *pulumi.OutputState }

func (BdsInstanceSoftwareUpdateActionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BdsInstanceSoftwareUpdateAction)(nil)).Elem()
}

func (o BdsInstanceSoftwareUpdateActionMapOutput) ToBdsInstanceSoftwareUpdateActionMapOutput() BdsInstanceSoftwareUpdateActionMapOutput {
	return o
}

func (o BdsInstanceSoftwareUpdateActionMapOutput) ToBdsInstanceSoftwareUpdateActionMapOutputWithContext(ctx context.Context) BdsInstanceSoftwareUpdateActionMapOutput {
	return o
}

func (o BdsInstanceSoftwareUpdateActionMapOutput) MapIndex(k pulumi.StringInput) BdsInstanceSoftwareUpdateActionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BdsInstanceSoftwareUpdateAction {
		return vs[0].(map[string]*BdsInstanceSoftwareUpdateAction)[vs[1].(string)]
	}).(BdsInstanceSoftwareUpdateActionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceSoftwareUpdateActionInput)(nil)).Elem(), &BdsInstanceSoftwareUpdateAction{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceSoftwareUpdateActionArrayInput)(nil)).Elem(), BdsInstanceSoftwareUpdateActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BdsInstanceSoftwareUpdateActionMapInput)(nil)).Elem(), BdsInstanceSoftwareUpdateActionMap{})
	pulumi.RegisterOutputType(BdsInstanceSoftwareUpdateActionOutput{})
	pulumi.RegisterOutputType(BdsInstanceSoftwareUpdateActionArrayOutput{})
	pulumi.RegisterOutputType(BdsInstanceSoftwareUpdateActionMapOutput{})
}
