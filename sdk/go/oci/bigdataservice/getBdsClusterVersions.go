// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Bds Cluster Versions in Oracle Cloud Infrastructure Big Data Service service.
//
// Returns a list of cluster versions with associated odh and bds versions.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.GetBdsClusterVersions(ctx, &bigdataservice.GetBdsClusterVersionsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBdsClusterVersions(ctx *pulumi.Context, args *GetBdsClusterVersionsArgs, opts ...pulumi.InvokeOption) (*GetBdsClusterVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBdsClusterVersionsResult
	err := ctx.Invoke("oci:BigDataService/getBdsClusterVersions:getBdsClusterVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBdsClusterVersions.
type GetBdsClusterVersionsArgs struct {
	Filters []GetBdsClusterVersionsFilter `pulumi:"filters"`
}

// A collection of values returned by getBdsClusterVersions.
type GetBdsClusterVersionsResult struct {
	// The list of bds_cluster_versions.
	BdsClusterVersions []GetBdsClusterVersionsBdsClusterVersion `pulumi:"bdsClusterVersions"`
	Filters            []GetBdsClusterVersionsFilter            `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetBdsClusterVersionsOutput(ctx *pulumi.Context, args GetBdsClusterVersionsOutputArgs, opts ...pulumi.InvokeOption) GetBdsClusterVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetBdsClusterVersionsResultOutput, error) {
			args := v.(GetBdsClusterVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:BigDataService/getBdsClusterVersions:getBdsClusterVersions", args, GetBdsClusterVersionsResultOutput{}, options).(GetBdsClusterVersionsResultOutput), nil
		}).(GetBdsClusterVersionsResultOutput)
}

// A collection of arguments for invoking getBdsClusterVersions.
type GetBdsClusterVersionsOutputArgs struct {
	Filters GetBdsClusterVersionsFilterArrayInput `pulumi:"filters"`
}

func (GetBdsClusterVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBdsClusterVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getBdsClusterVersions.
type GetBdsClusterVersionsResultOutput struct{ *pulumi.OutputState }

func (GetBdsClusterVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBdsClusterVersionsResult)(nil)).Elem()
}

func (o GetBdsClusterVersionsResultOutput) ToGetBdsClusterVersionsResultOutput() GetBdsClusterVersionsResultOutput {
	return o
}

func (o GetBdsClusterVersionsResultOutput) ToGetBdsClusterVersionsResultOutputWithContext(ctx context.Context) GetBdsClusterVersionsResultOutput {
	return o
}

// The list of bds_cluster_versions.
func (o GetBdsClusterVersionsResultOutput) BdsClusterVersions() GetBdsClusterVersionsBdsClusterVersionArrayOutput {
	return o.ApplyT(func(v GetBdsClusterVersionsResult) []GetBdsClusterVersionsBdsClusterVersion {
		return v.BdsClusterVersions
	}).(GetBdsClusterVersionsBdsClusterVersionArrayOutput)
}

func (o GetBdsClusterVersionsResultOutput) Filters() GetBdsClusterVersionsFilterArrayOutput {
	return o.ApplyT(func(v GetBdsClusterVersionsResult) []GetBdsClusterVersionsFilter { return v.Filters }).(GetBdsClusterVersionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBdsClusterVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsClusterVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBdsClusterVersionsResultOutput{})
}
