// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Bds Instance resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Returns information about the Big Data Service cluster identified by the given ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/BigDataService"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := BigDataService.GetBdsInstance(ctx, &bigdataservice.GetBdsInstanceArgs{
//				BdsInstanceId: testBdsInstanceOciBdsBdsInstance.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBdsInstance(ctx *pulumi.Context, args *LookupBdsInstanceArgs, opts ...pulumi.InvokeOption) (*LookupBdsInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBdsInstanceResult
	err := ctx.Invoke("oci:BigDataService/getBdsInstance:getBdsInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBdsInstance.
type LookupBdsInstanceArgs struct {
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
}

// A collection of values returned by getBdsInstance.
type LookupBdsInstanceResult struct {
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// pre-authenticated URL of the bootstrap script in Object Store that can be downloaded and executed.
	BootstrapScriptUrl string `pulumi:"bootstrapScriptUrl"`
	// The information about added Cloud SQL capability
	CloudSqlDetails      []GetBdsInstanceCloudSqlDetail `pulumi:"cloudSqlDetails"`
	ClusterAdminPassword string                         `pulumi:"clusterAdminPassword"`
	// Specific info about a Hadoop cluster
	ClusterDetails []GetBdsInstanceClusterDetail `pulumi:"clusterDetails"`
	// Profile of the Big Data Service cluster.
	ClusterProfile   string `pulumi:"clusterProfile"`
	ClusterPublicKey string `pulumi:"clusterPublicKey"`
	// Version of the Hadoop distribution.
	ClusterVersion string `pulumi:"clusterVersion"`
	// The OCID of the compartment.
	CompartmentId          string                                `pulumi:"compartmentId"`
	ComputeOnlyWorkerNodes []GetBdsInstanceComputeOnlyWorkerNode `pulumi:"computeOnlyWorkerNodes"`
	// The user who created the cluster.
	CreatedBy string `pulumi:"createdBy"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The name of the node.
	DisplayName string                   `pulumi:"displayName"`
	EdgeNodes   []GetBdsInstanceEdgeNode `pulumi:"edgeNodes"`
	// Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the Big Data Service resource.
	Id                        string   `pulumi:"id"`
	IgnoreExistingNodesShapes []string `pulumi:"ignoreExistingNodesShapes"`
	// Boolean flag specifying whether or not Cloud SQL should be configured.
	IsCloudSqlConfigured bool `pulumi:"isCloudSqlConfigured"`
	IsForceStopJobs      bool `pulumi:"isForceStopJobs"`
	// Boolean flag specifying whether or not the cluster is highly available (HA)
	IsHighAvailability bool `pulumi:"isHighAvailability"`
	// Boolean flag specifying whether or not Kafka should be configured.
	IsKafkaConfigured bool `pulumi:"isKafkaConfigured"`
	// Boolean flag specifying whether or not the cluster should be set up as secure.
	IsSecure          bool                            `pulumi:"isSecure"`
	KafkaBrokerNodes  []GetBdsInstanceKafkaBrokerNode `pulumi:"kafkaBrokerNodes"`
	KerberosRealmName string                          `pulumi:"kerberosRealmName"`
	// The OCID of the Key Management master encryption key.
	KmsKeyId    string                     `pulumi:"kmsKeyId"`
	MasterNodes []GetBdsInstanceMasterNode `pulumi:"masterNodes"`
	// Additional configuration of the user's network.
	NetworkConfigs []GetBdsInstanceNetworkConfig `pulumi:"networkConfigs"`
	// The list of nodes in the cluster.
	Nodes []GetBdsInstanceNode `pulumi:"nodes"`
	// The number of nodes that form the cluster.
	NumberOfNodes int `pulumi:"numberOfNodes"`
	// Number of nodes that require a maintenance reboot
	NumberOfNodesRequiringMaintenanceReboot int    `pulumi:"numberOfNodesRequiringMaintenanceReboot"`
	OsPatchVersion                          string `pulumi:"osPatchVersion"`
	// The state of the cluster.
	State string `pulumi:"state"`
	// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated string                     `pulumi:"timeUpdated"`
	UtilNodes   []GetBdsInstanceUtilNode   `pulumi:"utilNodes"`
	WorkerNodes []GetBdsInstanceWorkerNode `pulumi:"workerNodes"`
}

func LookupBdsInstanceOutput(ctx *pulumi.Context, args LookupBdsInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupBdsInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBdsInstanceResultOutput, error) {
			args := v.(LookupBdsInstanceArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupBdsInstanceResult
			secret, err := ctx.InvokePackageRaw("oci:BigDataService/getBdsInstance:getBdsInstance", args, &rv, "", opts...)
			if err != nil {
				return LookupBdsInstanceResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupBdsInstanceResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupBdsInstanceResultOutput), nil
			}
			return output, nil
		}).(LookupBdsInstanceResultOutput)
}

// A collection of arguments for invoking getBdsInstance.
type LookupBdsInstanceOutputArgs struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput `pulumi:"bdsInstanceId"`
}

func (LookupBdsInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBdsInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getBdsInstance.
type LookupBdsInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupBdsInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBdsInstanceResult)(nil)).Elem()
}

func (o LookupBdsInstanceResultOutput) ToLookupBdsInstanceResultOutput() LookupBdsInstanceResultOutput {
	return o
}

func (o LookupBdsInstanceResultOutput) ToLookupBdsInstanceResultOutputWithContext(ctx context.Context) LookupBdsInstanceResultOutput {
	return o
}

func (o LookupBdsInstanceResultOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.BdsInstanceId }).(pulumi.StringOutput)
}

// pre-authenticated URL of the bootstrap script in Object Store that can be downloaded and executed.
func (o LookupBdsInstanceResultOutput) BootstrapScriptUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.BootstrapScriptUrl }).(pulumi.StringOutput)
}

// The information about added Cloud SQL capability
func (o LookupBdsInstanceResultOutput) CloudSqlDetails() GetBdsInstanceCloudSqlDetailArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) []GetBdsInstanceCloudSqlDetail { return v.CloudSqlDetails }).(GetBdsInstanceCloudSqlDetailArrayOutput)
}

func (o LookupBdsInstanceResultOutput) ClusterAdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.ClusterAdminPassword }).(pulumi.StringOutput)
}

// Specific info about a Hadoop cluster
func (o LookupBdsInstanceResultOutput) ClusterDetails() GetBdsInstanceClusterDetailArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) []GetBdsInstanceClusterDetail { return v.ClusterDetails }).(GetBdsInstanceClusterDetailArrayOutput)
}

// Profile of the Big Data Service cluster.
func (o LookupBdsInstanceResultOutput) ClusterProfile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.ClusterProfile }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceResultOutput) ClusterPublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.ClusterPublicKey }).(pulumi.StringOutput)
}

// Version of the Hadoop distribution.
func (o LookupBdsInstanceResultOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.ClusterVersion }).(pulumi.StringOutput)
}

// The OCID of the compartment.
func (o LookupBdsInstanceResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceResultOutput) ComputeOnlyWorkerNodes() GetBdsInstanceComputeOnlyWorkerNodeArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) []GetBdsInstanceComputeOnlyWorkerNode { return v.ComputeOnlyWorkerNodes }).(GetBdsInstanceComputeOnlyWorkerNodeArrayOutput)
}

// The user who created the cluster.
func (o LookupBdsInstanceResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
func (o LookupBdsInstanceResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The name of the node.
func (o LookupBdsInstanceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceResultOutput) EdgeNodes() GetBdsInstanceEdgeNodeArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) []GetBdsInstanceEdgeNode { return v.EdgeNodes }).(GetBdsInstanceEdgeNodeArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
func (o LookupBdsInstanceResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the Big Data Service resource.
func (o LookupBdsInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceResultOutput) IgnoreExistingNodesShapes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) []string { return v.IgnoreExistingNodesShapes }).(pulumi.StringArrayOutput)
}

// Boolean flag specifying whether or not Cloud SQL should be configured.
func (o LookupBdsInstanceResultOutput) IsCloudSqlConfigured() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) bool { return v.IsCloudSqlConfigured }).(pulumi.BoolOutput)
}

func (o LookupBdsInstanceResultOutput) IsForceStopJobs() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) bool { return v.IsForceStopJobs }).(pulumi.BoolOutput)
}

// Boolean flag specifying whether or not the cluster is highly available (HA)
func (o LookupBdsInstanceResultOutput) IsHighAvailability() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) bool { return v.IsHighAvailability }).(pulumi.BoolOutput)
}

// Boolean flag specifying whether or not Kafka should be configured.
func (o LookupBdsInstanceResultOutput) IsKafkaConfigured() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) bool { return v.IsKafkaConfigured }).(pulumi.BoolOutput)
}

// Boolean flag specifying whether or not the cluster should be set up as secure.
func (o LookupBdsInstanceResultOutput) IsSecure() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) bool { return v.IsSecure }).(pulumi.BoolOutput)
}

func (o LookupBdsInstanceResultOutput) KafkaBrokerNodes() GetBdsInstanceKafkaBrokerNodeArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) []GetBdsInstanceKafkaBrokerNode { return v.KafkaBrokerNodes }).(GetBdsInstanceKafkaBrokerNodeArrayOutput)
}

func (o LookupBdsInstanceResultOutput) KerberosRealmName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.KerberosRealmName }).(pulumi.StringOutput)
}

// The OCID of the Key Management master encryption key.
func (o LookupBdsInstanceResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceResultOutput) MasterNodes() GetBdsInstanceMasterNodeArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) []GetBdsInstanceMasterNode { return v.MasterNodes }).(GetBdsInstanceMasterNodeArrayOutput)
}

// Additional configuration of the user's network.
func (o LookupBdsInstanceResultOutput) NetworkConfigs() GetBdsInstanceNetworkConfigArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) []GetBdsInstanceNetworkConfig { return v.NetworkConfigs }).(GetBdsInstanceNetworkConfigArrayOutput)
}

// The list of nodes in the cluster.
func (o LookupBdsInstanceResultOutput) Nodes() GetBdsInstanceNodeArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) []GetBdsInstanceNode { return v.Nodes }).(GetBdsInstanceNodeArrayOutput)
}

// The number of nodes that form the cluster.
func (o LookupBdsInstanceResultOutput) NumberOfNodes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) int { return v.NumberOfNodes }).(pulumi.IntOutput)
}

// Number of nodes that require a maintenance reboot
func (o LookupBdsInstanceResultOutput) NumberOfNodesRequiringMaintenanceReboot() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) int { return v.NumberOfNodesRequiringMaintenanceReboot }).(pulumi.IntOutput)
}

func (o LookupBdsInstanceResultOutput) OsPatchVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.OsPatchVersion }).(pulumi.StringOutput)
}

// The state of the cluster.
func (o LookupBdsInstanceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.State }).(pulumi.StringOutput)
}

// The time the cluster was created, shown as an RFC 3339 formatted datetime string.
func (o LookupBdsInstanceResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
func (o LookupBdsInstanceResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceResultOutput) UtilNodes() GetBdsInstanceUtilNodeArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) []GetBdsInstanceUtilNode { return v.UtilNodes }).(GetBdsInstanceUtilNodeArrayOutput)
}

func (o LookupBdsInstanceResultOutput) WorkerNodes() GetBdsInstanceWorkerNodeArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceResult) []GetBdsInstanceWorkerNode { return v.WorkerNodes }).(GetBdsInstanceWorkerNodeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBdsInstanceResultOutput{})
}
