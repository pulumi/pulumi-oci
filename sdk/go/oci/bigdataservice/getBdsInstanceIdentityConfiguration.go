// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Bds Instance Identity Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
//
// # Get details of one identity config on the cluster
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.GetBdsInstanceIdentityConfiguration(ctx, &bigdataservice.GetBdsInstanceIdentityConfigurationArgs{
//				BdsInstanceId:           testBdsInstance.Id,
//				IdentityConfigurationId: testConfiguration.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBdsInstanceIdentityConfiguration(ctx *pulumi.Context, args *LookupBdsInstanceIdentityConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupBdsInstanceIdentityConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBdsInstanceIdentityConfigurationResult
	err := ctx.Invoke("oci:BigDataService/getBdsInstanceIdentityConfiguration:getBdsInstanceIdentityConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBdsInstanceIdentityConfiguration.
type LookupBdsInstanceIdentityConfigurationArgs struct {
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// The OCID of the identity configuration
	IdentityConfigurationId string `pulumi:"identityConfigurationId"`
}

// A collection of values returned by getBdsInstanceIdentityConfiguration.
type LookupBdsInstanceIdentityConfigurationResult struct {
	ActivateIamUserSyncConfigurationTrigger string `pulumi:"activateIamUserSyncConfigurationTrigger"`
	ActivateUpstConfigurationTrigger        string `pulumi:"activateUpstConfigurationTrigger"`
	BdsInstanceId                           string `pulumi:"bdsInstanceId"`
	ClusterAdminPassword                    string `pulumi:"clusterAdminPassword"`
	// identity domain confidential application ID for the identity config
	ConfidentialApplicationId string `pulumi:"confidentialApplicationId"`
	// the display name of the identity configuration
	DisplayName                     string                                                              `pulumi:"displayName"`
	IamUserSyncConfigurationDetails []GetBdsInstanceIdentityConfigurationIamUserSyncConfigurationDetail `pulumi:"iamUserSyncConfigurationDetails"`
	// Information about the IAM user sync configuration.
	IamUserSyncConfigurations []GetBdsInstanceIdentityConfigurationIamUserSyncConfiguration `pulumi:"iamUserSyncConfigurations"`
	// The id of the identity config
	Id                      string `pulumi:"id"`
	IdentityConfigurationId string `pulumi:"identityConfigurationId"`
	// Identity domain to use for identity config
	IdentityDomainId                      string `pulumi:"identityDomainId"`
	RefreshConfidentialApplicationTrigger string `pulumi:"refreshConfidentialApplicationTrigger"`
	RefreshUpstTokenExchangeKeytabTrigger string `pulumi:"refreshUpstTokenExchangeKeytabTrigger"`
	// Lifecycle state of the UPST config
	State string `pulumi:"state"`
	// Time when this UPST config was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Time when this UPST config was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated              string                                                       `pulumi:"timeUpdated"`
	UpstConfigurationDetails []GetBdsInstanceIdentityConfigurationUpstConfigurationDetail `pulumi:"upstConfigurationDetails"`
	// Information about the UPST configuration.
	UpstConfigurations []GetBdsInstanceIdentityConfigurationUpstConfiguration `pulumi:"upstConfigurations"`
}

func LookupBdsInstanceIdentityConfigurationOutput(ctx *pulumi.Context, args LookupBdsInstanceIdentityConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupBdsInstanceIdentityConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBdsInstanceIdentityConfigurationResultOutput, error) {
			args := v.(LookupBdsInstanceIdentityConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:BigDataService/getBdsInstanceIdentityConfiguration:getBdsInstanceIdentityConfiguration", args, LookupBdsInstanceIdentityConfigurationResultOutput{}, options).(LookupBdsInstanceIdentityConfigurationResultOutput), nil
		}).(LookupBdsInstanceIdentityConfigurationResultOutput)
}

// A collection of arguments for invoking getBdsInstanceIdentityConfiguration.
type LookupBdsInstanceIdentityConfigurationOutputArgs struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput `pulumi:"bdsInstanceId"`
	// The OCID of the identity configuration
	IdentityConfigurationId pulumi.StringInput `pulumi:"identityConfigurationId"`
}

func (LookupBdsInstanceIdentityConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBdsInstanceIdentityConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getBdsInstanceIdentityConfiguration.
type LookupBdsInstanceIdentityConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupBdsInstanceIdentityConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBdsInstanceIdentityConfigurationResult)(nil)).Elem()
}

func (o LookupBdsInstanceIdentityConfigurationResultOutput) ToLookupBdsInstanceIdentityConfigurationResultOutput() LookupBdsInstanceIdentityConfigurationResultOutput {
	return o
}

func (o LookupBdsInstanceIdentityConfigurationResultOutput) ToLookupBdsInstanceIdentityConfigurationResultOutputWithContext(ctx context.Context) LookupBdsInstanceIdentityConfigurationResultOutput {
	return o
}

func (o LookupBdsInstanceIdentityConfigurationResultOutput) ActivateIamUserSyncConfigurationTrigger() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string {
		return v.ActivateIamUserSyncConfigurationTrigger
	}).(pulumi.StringOutput)
}

func (o LookupBdsInstanceIdentityConfigurationResultOutput) ActivateUpstConfigurationTrigger() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string { return v.ActivateUpstConfigurationTrigger }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceIdentityConfigurationResultOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string { return v.BdsInstanceId }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceIdentityConfigurationResultOutput) ClusterAdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string { return v.ClusterAdminPassword }).(pulumi.StringOutput)
}

// identity domain confidential application ID for the identity config
func (o LookupBdsInstanceIdentityConfigurationResultOutput) ConfidentialApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string { return v.ConfidentialApplicationId }).(pulumi.StringOutput)
}

// the display name of the identity configuration
func (o LookupBdsInstanceIdentityConfigurationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceIdentityConfigurationResultOutput) IamUserSyncConfigurationDetails() GetBdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) []GetBdsInstanceIdentityConfigurationIamUserSyncConfigurationDetail {
		return v.IamUserSyncConfigurationDetails
	}).(GetBdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailArrayOutput)
}

// Information about the IAM user sync configuration.
func (o LookupBdsInstanceIdentityConfigurationResultOutput) IamUserSyncConfigurations() GetBdsInstanceIdentityConfigurationIamUserSyncConfigurationArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) []GetBdsInstanceIdentityConfigurationIamUserSyncConfiguration {
		return v.IamUserSyncConfigurations
	}).(GetBdsInstanceIdentityConfigurationIamUserSyncConfigurationArrayOutput)
}

// The id of the identity config
func (o LookupBdsInstanceIdentityConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceIdentityConfigurationResultOutput) IdentityConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string { return v.IdentityConfigurationId }).(pulumi.StringOutput)
}

// Identity domain to use for identity config
func (o LookupBdsInstanceIdentityConfigurationResultOutput) IdentityDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string { return v.IdentityDomainId }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceIdentityConfigurationResultOutput) RefreshConfidentialApplicationTrigger() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string {
		return v.RefreshConfidentialApplicationTrigger
	}).(pulumi.StringOutput)
}

func (o LookupBdsInstanceIdentityConfigurationResultOutput) RefreshUpstTokenExchangeKeytabTrigger() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string {
		return v.RefreshUpstTokenExchangeKeytabTrigger
	}).(pulumi.StringOutput)
}

// Lifecycle state of the UPST config
func (o LookupBdsInstanceIdentityConfigurationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string { return v.State }).(pulumi.StringOutput)
}

// Time when this UPST config was created, shown as an RFC 3339 formatted datetime string.
func (o LookupBdsInstanceIdentityConfigurationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time when this UPST config was updated, shown as an RFC 3339 formatted datetime string.
func (o LookupBdsInstanceIdentityConfigurationResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceIdentityConfigurationResultOutput) UpstConfigurationDetails() GetBdsInstanceIdentityConfigurationUpstConfigurationDetailArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) []GetBdsInstanceIdentityConfigurationUpstConfigurationDetail {
		return v.UpstConfigurationDetails
	}).(GetBdsInstanceIdentityConfigurationUpstConfigurationDetailArrayOutput)
}

// Information about the UPST configuration.
func (o LookupBdsInstanceIdentityConfigurationResultOutput) UpstConfigurations() GetBdsInstanceIdentityConfigurationUpstConfigurationArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceIdentityConfigurationResult) []GetBdsInstanceIdentityConfigurationUpstConfiguration {
		return v.UpstConfigurations
	}).(GetBdsInstanceIdentityConfigurationUpstConfigurationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBdsInstanceIdentityConfigurationResultOutput{})
}
