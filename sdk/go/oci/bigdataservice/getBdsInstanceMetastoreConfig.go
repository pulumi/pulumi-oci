// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Bds Instance Metastore Config resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Returns the BDS Metastore configuration information for the given ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/BigDataService"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := BigDataService.GetBdsInstanceMetastoreConfig(ctx, &bigdataservice.GetBdsInstanceMetastoreConfigArgs{
//				BdsInstanceId:     oci_bds_bds_instance.Test_bds_instance.Id,
//				MetastoreConfigId: oci_apm_config_config.Test_config.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBdsInstanceMetastoreConfig(ctx *pulumi.Context, args *LookupBdsInstanceMetastoreConfigArgs, opts ...pulumi.InvokeOption) (*LookupBdsInstanceMetastoreConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBdsInstanceMetastoreConfigResult
	err := ctx.Invoke("oci:BigDataService/getBdsInstanceMetastoreConfig:getBdsInstanceMetastoreConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBdsInstanceMetastoreConfig.
type LookupBdsInstanceMetastoreConfigArgs struct {
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// The metastore configuration ID
	MetastoreConfigId string `pulumi:"metastoreConfigId"`
}

// A collection of values returned by getBdsInstanceMetastoreConfig.
type LookupBdsInstanceMetastoreConfigResult struct {
	ActivateTrigger int `pulumi:"activateTrigger"`
	// The ID of BDS API Key used for metastore configuration. Set only if metastore's type is EXTERNAL.
	BdsApiKeyId          string `pulumi:"bdsApiKeyId"`
	BdsApiKeyPassphrase  string `pulumi:"bdsApiKeyPassphrase"`
	BdsInstanceId        string `pulumi:"bdsInstanceId"`
	ClusterAdminPassword string `pulumi:"clusterAdminPassword"`
	// The display name of metastore configuration
	DisplayName string `pulumi:"displayName"`
	// The ID of the metastore configuration
	Id                string `pulumi:"id"`
	MetastoreConfigId string `pulumi:"metastoreConfigId"`
	// The OCID of the Data Catalog metastore. Set only if metastore's type is EXTERNAL.
	MetastoreId string `pulumi:"metastoreId"`
	// The type of the metastore in the metastore configuration.
	MetastoreType string `pulumi:"metastoreType"`
	// the lifecycle state of the metastore configuration.
	State string `pulumi:"state"`
	// The time when the configuration was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when the configuration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupBdsInstanceMetastoreConfigOutput(ctx *pulumi.Context, args LookupBdsInstanceMetastoreConfigOutputArgs, opts ...pulumi.InvokeOption) LookupBdsInstanceMetastoreConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBdsInstanceMetastoreConfigResult, error) {
			args := v.(LookupBdsInstanceMetastoreConfigArgs)
			r, err := LookupBdsInstanceMetastoreConfig(ctx, &args, opts...)
			var s LookupBdsInstanceMetastoreConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBdsInstanceMetastoreConfigResultOutput)
}

// A collection of arguments for invoking getBdsInstanceMetastoreConfig.
type LookupBdsInstanceMetastoreConfigOutputArgs struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput `pulumi:"bdsInstanceId"`
	// The metastore configuration ID
	MetastoreConfigId pulumi.StringInput `pulumi:"metastoreConfigId"`
}

func (LookupBdsInstanceMetastoreConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBdsInstanceMetastoreConfigArgs)(nil)).Elem()
}

// A collection of values returned by getBdsInstanceMetastoreConfig.
type LookupBdsInstanceMetastoreConfigResultOutput struct{ *pulumi.OutputState }

func (LookupBdsInstanceMetastoreConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBdsInstanceMetastoreConfigResult)(nil)).Elem()
}

func (o LookupBdsInstanceMetastoreConfigResultOutput) ToLookupBdsInstanceMetastoreConfigResultOutput() LookupBdsInstanceMetastoreConfigResultOutput {
	return o
}

func (o LookupBdsInstanceMetastoreConfigResultOutput) ToLookupBdsInstanceMetastoreConfigResultOutputWithContext(ctx context.Context) LookupBdsInstanceMetastoreConfigResultOutput {
	return o
}

func (o LookupBdsInstanceMetastoreConfigResultOutput) ActivateTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) int { return v.ActivateTrigger }).(pulumi.IntOutput)
}

// The ID of BDS API Key used for metastore configuration. Set only if metastore's type is EXTERNAL.
func (o LookupBdsInstanceMetastoreConfigResultOutput) BdsApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.BdsApiKeyId }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceMetastoreConfigResultOutput) BdsApiKeyPassphrase() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.BdsApiKeyPassphrase }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceMetastoreConfigResultOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.BdsInstanceId }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceMetastoreConfigResultOutput) ClusterAdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.ClusterAdminPassword }).(pulumi.StringOutput)
}

// The display name of metastore configuration
func (o LookupBdsInstanceMetastoreConfigResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The ID of the metastore configuration
func (o LookupBdsInstanceMetastoreConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceMetastoreConfigResultOutput) MetastoreConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.MetastoreConfigId }).(pulumi.StringOutput)
}

// The OCID of the Data Catalog metastore. Set only if metastore's type is EXTERNAL.
func (o LookupBdsInstanceMetastoreConfigResultOutput) MetastoreId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.MetastoreId }).(pulumi.StringOutput)
}

// The type of the metastore in the metastore configuration.
func (o LookupBdsInstanceMetastoreConfigResultOutput) MetastoreType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.MetastoreType }).(pulumi.StringOutput)
}

// the lifecycle state of the metastore configuration.
func (o LookupBdsInstanceMetastoreConfigResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.State }).(pulumi.StringOutput)
}

// The time when the configuration was created, shown as an RFC 3339 formatted datetime string.
func (o LookupBdsInstanceMetastoreConfigResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the configuration was updated, shown as an RFC 3339 formatted datetime string.
func (o LookupBdsInstanceMetastoreConfigResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceMetastoreConfigResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBdsInstanceMetastoreConfigResultOutput{})
}
