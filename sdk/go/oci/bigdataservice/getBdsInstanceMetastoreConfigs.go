// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Bds Instance Metastore Configs in Oracle Cloud Infrastructure Big Data Service service.
//
// Returns a list of metastore configurations ssociated with this Big Data Service cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/BigDataService"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := BigDataService.GetBdsInstanceMetastoreConfigs(ctx, &bigdataservice.GetBdsInstanceMetastoreConfigsArgs{
//				BdsInstanceId: oci_bds_bds_instance.Test_bds_instance.Id,
//				BdsApiKeyId:   pulumi.StringRef(oci_identity_api_key.Test_api_key.Id),
//				DisplayName:   pulumi.StringRef(_var.Bds_instance_metastore_config_display_name),
//				MetastoreId:   pulumi.StringRef(oci_datacatalog_metastore.Test_metastore.Id),
//				MetastoreType: pulumi.StringRef(_var.Bds_instance_metastore_config_metastore_type),
//				State:         pulumi.StringRef(_var.Bds_instance_metastore_config_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBdsInstanceMetastoreConfigs(ctx *pulumi.Context, args *GetBdsInstanceMetastoreConfigsArgs, opts ...pulumi.InvokeOption) (*GetBdsInstanceMetastoreConfigsResult, error) {
	var rv GetBdsInstanceMetastoreConfigsResult
	err := ctx.Invoke("oci:BigDataService/getBdsInstanceMetastoreConfigs:getBdsInstanceMetastoreConfigs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBdsInstanceMetastoreConfigs.
type GetBdsInstanceMetastoreConfigsArgs struct {
	// The ID of the API key that is associated with the external metastore in the metastore configuration
	BdsApiKeyId *string `pulumi:"bdsApiKeyId"`
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                                `pulumi:"displayName"`
	Filters     []GetBdsInstanceMetastoreConfigsFilter `pulumi:"filters"`
	// The OCID of the Data Catalog metastore in the metastore configuration
	MetastoreId *string `pulumi:"metastoreId"`
	// The type of the metastore in the metastore configuration
	MetastoreType *string `pulumi:"metastoreType"`
	// The lifecycle state of the metastore in the metastore configuration
	State *string `pulumi:"state"`
}

// A collection of values returned by getBdsInstanceMetastoreConfigs.
type GetBdsInstanceMetastoreConfigsResult struct {
	// The ID of BDS API Key used for metastore configuration. Set only if metastore's type is EXTERNAL.
	BdsApiKeyId   *string `pulumi:"bdsApiKeyId"`
	BdsInstanceId string  `pulumi:"bdsInstanceId"`
	// The list of bds_metastore_configurations.
	BdsMetastoreConfigurations []GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration `pulumi:"bdsMetastoreConfigurations"`
	// The display name of metastore configuration
	DisplayName *string                                `pulumi:"displayName"`
	Filters     []GetBdsInstanceMetastoreConfigsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the Data Catalog metastore. Set only if metastore's type is EXTERNAL.
	MetastoreId *string `pulumi:"metastoreId"`
	// The type of the metastore in the metastore configuration.
	MetastoreType *string `pulumi:"metastoreType"`
	// the lifecycle state of the metastore configuration.
	State *string `pulumi:"state"`
}

func GetBdsInstanceMetastoreConfigsOutput(ctx *pulumi.Context, args GetBdsInstanceMetastoreConfigsOutputArgs, opts ...pulumi.InvokeOption) GetBdsInstanceMetastoreConfigsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBdsInstanceMetastoreConfigsResult, error) {
			args := v.(GetBdsInstanceMetastoreConfigsArgs)
			r, err := GetBdsInstanceMetastoreConfigs(ctx, &args, opts...)
			var s GetBdsInstanceMetastoreConfigsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBdsInstanceMetastoreConfigsResultOutput)
}

// A collection of arguments for invoking getBdsInstanceMetastoreConfigs.
type GetBdsInstanceMetastoreConfigsOutputArgs struct {
	// The ID of the API key that is associated with the external metastore in the metastore configuration
	BdsApiKeyId pulumi.StringPtrInput `pulumi:"bdsApiKeyId"`
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput `pulumi:"bdsInstanceId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                          `pulumi:"displayName"`
	Filters     GetBdsInstanceMetastoreConfigsFilterArrayInput `pulumi:"filters"`
	// The OCID of the Data Catalog metastore in the metastore configuration
	MetastoreId pulumi.StringPtrInput `pulumi:"metastoreId"`
	// The type of the metastore in the metastore configuration
	MetastoreType pulumi.StringPtrInput `pulumi:"metastoreType"`
	// The lifecycle state of the metastore in the metastore configuration
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetBdsInstanceMetastoreConfigsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBdsInstanceMetastoreConfigsArgs)(nil)).Elem()
}

// A collection of values returned by getBdsInstanceMetastoreConfigs.
type GetBdsInstanceMetastoreConfigsResultOutput struct{ *pulumi.OutputState }

func (GetBdsInstanceMetastoreConfigsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBdsInstanceMetastoreConfigsResult)(nil)).Elem()
}

func (o GetBdsInstanceMetastoreConfigsResultOutput) ToGetBdsInstanceMetastoreConfigsResultOutput() GetBdsInstanceMetastoreConfigsResultOutput {
	return o
}

func (o GetBdsInstanceMetastoreConfigsResultOutput) ToGetBdsInstanceMetastoreConfigsResultOutputWithContext(ctx context.Context) GetBdsInstanceMetastoreConfigsResultOutput {
	return o
}

// The ID of BDS API Key used for metastore configuration. Set only if metastore's type is EXTERNAL.
func (o GetBdsInstanceMetastoreConfigsResultOutput) BdsApiKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBdsInstanceMetastoreConfigsResult) *string { return v.BdsApiKeyId }).(pulumi.StringPtrOutput)
}

func (o GetBdsInstanceMetastoreConfigsResultOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstanceMetastoreConfigsResult) string { return v.BdsInstanceId }).(pulumi.StringOutput)
}

// The list of bds_metastore_configurations.
func (o GetBdsInstanceMetastoreConfigsResultOutput) BdsMetastoreConfigurations() GetBdsInstanceMetastoreConfigsBdsMetastoreConfigurationArrayOutput {
	return o.ApplyT(func(v GetBdsInstanceMetastoreConfigsResult) []GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration {
		return v.BdsMetastoreConfigurations
	}).(GetBdsInstanceMetastoreConfigsBdsMetastoreConfigurationArrayOutput)
}

// The display name of metastore configuration
func (o GetBdsInstanceMetastoreConfigsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBdsInstanceMetastoreConfigsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetBdsInstanceMetastoreConfigsResultOutput) Filters() GetBdsInstanceMetastoreConfigsFilterArrayOutput {
	return o.ApplyT(func(v GetBdsInstanceMetastoreConfigsResult) []GetBdsInstanceMetastoreConfigsFilter { return v.Filters }).(GetBdsInstanceMetastoreConfigsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBdsInstanceMetastoreConfigsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstanceMetastoreConfigsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the Data Catalog metastore. Set only if metastore's type is EXTERNAL.
func (o GetBdsInstanceMetastoreConfigsResultOutput) MetastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBdsInstanceMetastoreConfigsResult) *string { return v.MetastoreId }).(pulumi.StringPtrOutput)
}

// The type of the metastore in the metastore configuration.
func (o GetBdsInstanceMetastoreConfigsResultOutput) MetastoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBdsInstanceMetastoreConfigsResult) *string { return v.MetastoreType }).(pulumi.StringPtrOutput)
}

// the lifecycle state of the metastore configuration.
func (o GetBdsInstanceMetastoreConfigsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBdsInstanceMetastoreConfigsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBdsInstanceMetastoreConfigsResultOutput{})
}
