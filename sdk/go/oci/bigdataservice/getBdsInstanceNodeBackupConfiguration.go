// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Bds Instance Node Backup Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Returns details of the NodeBackupConfiguration identified by the given ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.GetBdsInstanceNodeBackupConfiguration(ctx, &bigdataservice.GetBdsInstanceNodeBackupConfigurationArgs{
//				BdsInstanceId:             testBdsInstance.Id,
//				NodeBackupConfigurationId: testConfiguration.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBdsInstanceNodeBackupConfiguration(ctx *pulumi.Context, args *LookupBdsInstanceNodeBackupConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupBdsInstanceNodeBackupConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBdsInstanceNodeBackupConfigurationResult
	err := ctx.Invoke("oci:BigDataService/getBdsInstanceNodeBackupConfiguration:getBdsInstanceNodeBackupConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBdsInstanceNodeBackupConfiguration.
type LookupBdsInstanceNodeBackupConfigurationArgs struct {
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// Unique Oracle-assigned identifier of the NodeBackupConfiguration.
	NodeBackupConfigurationId string `pulumi:"nodeBackupConfigurationId"`
}

// A collection of values returned by getBdsInstanceNodeBackupConfiguration.
type LookupBdsInstanceNodeBackupConfigurationResult struct {
	// Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
	BackupType string `pulumi:"backupType"`
	// The OCID of the bdsInstance which is the parent resource id.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// The unique identifier for the NodeBackupConfiguration.
	Id string `pulumi:"id"`
	// Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails          []GetBdsInstanceNodeBackupConfigurationLevelTypeDetail `pulumi:"levelTypeDetails"`
	NodeBackupConfigurationId string                                                 `pulumi:"nodeBackupConfigurationId"`
	// Number of backup copies to retain.
	NumberOfBackupsToRetain int `pulumi:"numberOfBackupsToRetain"`
	// Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
	Schedule string `pulumi:"schedule"`
	// The state of the NodeBackupConfiguration.
	State string `pulumi:"state"`
	// The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The time zone of the execution schedule, in IANA time zone database name format
	Timezone string `pulumi:"timezone"`
}

func LookupBdsInstanceNodeBackupConfigurationOutput(ctx *pulumi.Context, args LookupBdsInstanceNodeBackupConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupBdsInstanceNodeBackupConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBdsInstanceNodeBackupConfigurationResultOutput, error) {
			args := v.(LookupBdsInstanceNodeBackupConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:BigDataService/getBdsInstanceNodeBackupConfiguration:getBdsInstanceNodeBackupConfiguration", args, LookupBdsInstanceNodeBackupConfigurationResultOutput{}, options).(LookupBdsInstanceNodeBackupConfigurationResultOutput), nil
		}).(LookupBdsInstanceNodeBackupConfigurationResultOutput)
}

// A collection of arguments for invoking getBdsInstanceNodeBackupConfiguration.
type LookupBdsInstanceNodeBackupConfigurationOutputArgs struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput `pulumi:"bdsInstanceId"`
	// Unique Oracle-assigned identifier of the NodeBackupConfiguration.
	NodeBackupConfigurationId pulumi.StringInput `pulumi:"nodeBackupConfigurationId"`
}

func (LookupBdsInstanceNodeBackupConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBdsInstanceNodeBackupConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getBdsInstanceNodeBackupConfiguration.
type LookupBdsInstanceNodeBackupConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupBdsInstanceNodeBackupConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBdsInstanceNodeBackupConfigurationResult)(nil)).Elem()
}

func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) ToLookupBdsInstanceNodeBackupConfigurationResultOutput() LookupBdsInstanceNodeBackupConfigurationResultOutput {
	return o
}

func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) ToLookupBdsInstanceNodeBackupConfigurationResultOutputWithContext(ctx context.Context) LookupBdsInstanceNodeBackupConfigurationResultOutput {
	return o
}

// Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) string { return v.BackupType }).(pulumi.StringOutput)
}

// The OCID of the bdsInstance which is the parent resource id.
func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) string { return v.BdsInstanceId }).(pulumi.StringOutput)
}

// A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The unique identifier for the NodeBackupConfiguration.
func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) LevelTypeDetails() GetBdsInstanceNodeBackupConfigurationLevelTypeDetailArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) []GetBdsInstanceNodeBackupConfigurationLevelTypeDetail {
		return v.LevelTypeDetails
	}).(GetBdsInstanceNodeBackupConfigurationLevelTypeDetailArrayOutput)
}

func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) NodeBackupConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) string { return v.NodeBackupConfigurationId }).(pulumi.StringOutput)
}

// Number of backup copies to retain.
func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) NumberOfBackupsToRetain() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) int { return v.NumberOfBackupsToRetain }).(pulumi.IntOutput)
}

// Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) string { return v.Schedule }).(pulumi.StringOutput)
}

// The state of the NodeBackupConfiguration.
func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) string { return v.State }).(pulumi.StringOutput)
}

// The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The time zone of the execution schedule, in IANA time zone database name format
func (o LookupBdsInstanceNodeBackupConfigurationResultOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeBackupConfigurationResult) string { return v.Timezone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBdsInstanceNodeBackupConfigurationResultOutput{})
}
