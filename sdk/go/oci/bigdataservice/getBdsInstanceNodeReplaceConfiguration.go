// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Bds Instance Node Replace Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
//
// Returns details of the nodeReplaceConfiguration identified by the given ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.GetBdsInstanceNodeReplaceConfiguration(ctx, &bigdataservice.GetBdsInstanceNodeReplaceConfigurationArgs{
//				BdsInstanceId:              testBdsInstance.Id,
//				NodeReplaceConfigurationId: testConfiguration.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBdsInstanceNodeReplaceConfiguration(ctx *pulumi.Context, args *LookupBdsInstanceNodeReplaceConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupBdsInstanceNodeReplaceConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBdsInstanceNodeReplaceConfigurationResult
	err := ctx.Invoke("oci:BigDataService/getBdsInstanceNodeReplaceConfiguration:getBdsInstanceNodeReplaceConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBdsInstanceNodeReplaceConfiguration.
type LookupBdsInstanceNodeReplaceConfigurationArgs struct {
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// Unique Oracle-assigned identifier of the  NodeReplaceConfiguration.
	NodeReplaceConfigurationId string `pulumi:"nodeReplaceConfigurationId"`
}

// A collection of values returned by getBdsInstanceNodeReplaceConfiguration.
type LookupBdsInstanceNodeReplaceConfigurationResult struct {
	// The OCID of the bdsInstance which is the parent resource id.
	BdsInstanceId        string `pulumi:"bdsInstanceId"`
	ClusterAdminPassword string `pulumi:"clusterAdminPassword"`
	// A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// This value is the minimum period of time to wait for metric emission before triggering node replacement. The value is in minutes.
	DurationInMinutes int `pulumi:"durationInMinutes"`
	// The unique identifier for the NodeReplaceConfiguration.
	Id string `pulumi:"id"`
	// Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
	LevelTypeDetails []GetBdsInstanceNodeReplaceConfigurationLevelTypeDetail `pulumi:"levelTypeDetails"`
	// Type of compute instance health metric to use for node replacement
	MetricType                 string `pulumi:"metricType"`
	NodeReplaceConfigurationId string `pulumi:"nodeReplaceConfigurationId"`
	// The state of the NodeReplaceConfiguration.
	State string `pulumi:"state"`
	// The time the NodeReplaceConfiguration was created, shown as an RFC 3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the NodeReplaceConfiguration was updated, shown as an RFC 3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupBdsInstanceNodeReplaceConfigurationOutput(ctx *pulumi.Context, args LookupBdsInstanceNodeReplaceConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupBdsInstanceNodeReplaceConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBdsInstanceNodeReplaceConfigurationResultOutput, error) {
			args := v.(LookupBdsInstanceNodeReplaceConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:BigDataService/getBdsInstanceNodeReplaceConfiguration:getBdsInstanceNodeReplaceConfiguration", args, LookupBdsInstanceNodeReplaceConfigurationResultOutput{}, options).(LookupBdsInstanceNodeReplaceConfigurationResultOutput), nil
		}).(LookupBdsInstanceNodeReplaceConfigurationResultOutput)
}

// A collection of arguments for invoking getBdsInstanceNodeReplaceConfiguration.
type LookupBdsInstanceNodeReplaceConfigurationOutputArgs struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput `pulumi:"bdsInstanceId"`
	// Unique Oracle-assigned identifier of the  NodeReplaceConfiguration.
	NodeReplaceConfigurationId pulumi.StringInput `pulumi:"nodeReplaceConfigurationId"`
}

func (LookupBdsInstanceNodeReplaceConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBdsInstanceNodeReplaceConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getBdsInstanceNodeReplaceConfiguration.
type LookupBdsInstanceNodeReplaceConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupBdsInstanceNodeReplaceConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBdsInstanceNodeReplaceConfigurationResult)(nil)).Elem()
}

func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) ToLookupBdsInstanceNodeReplaceConfigurationResultOutput() LookupBdsInstanceNodeReplaceConfigurationResultOutput {
	return o
}

func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) ToLookupBdsInstanceNodeReplaceConfigurationResultOutputWithContext(ctx context.Context) LookupBdsInstanceNodeReplaceConfigurationResultOutput {
	return o
}

// The OCID of the bdsInstance which is the parent resource id.
func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeReplaceConfigurationResult) string { return v.BdsInstanceId }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) ClusterAdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeReplaceConfigurationResult) string { return v.ClusterAdminPassword }).(pulumi.StringOutput)
}

// A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeReplaceConfigurationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// This value is the minimum period of time to wait for metric emission before triggering node replacement. The value is in minutes.
func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) DurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeReplaceConfigurationResult) int { return v.DurationInMinutes }).(pulumi.IntOutput)
}

// The unique identifier for the NodeReplaceConfiguration.
func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeReplaceConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) LevelTypeDetails() GetBdsInstanceNodeReplaceConfigurationLevelTypeDetailArrayOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeReplaceConfigurationResult) []GetBdsInstanceNodeReplaceConfigurationLevelTypeDetail {
		return v.LevelTypeDetails
	}).(GetBdsInstanceNodeReplaceConfigurationLevelTypeDetailArrayOutput)
}

// Type of compute instance health metric to use for node replacement
func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeReplaceConfigurationResult) string { return v.MetricType }).(pulumi.StringOutput)
}

func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) NodeReplaceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeReplaceConfigurationResult) string { return v.NodeReplaceConfigurationId }).(pulumi.StringOutput)
}

// The state of the NodeReplaceConfiguration.
func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeReplaceConfigurationResult) string { return v.State }).(pulumi.StringOutput)
}

// The time the NodeReplaceConfiguration was created, shown as an RFC 3339 formatted datetime string.
func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeReplaceConfigurationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the NodeReplaceConfiguration was updated, shown as an RFC 3339 formatted datetime string.
func (o LookupBdsInstanceNodeReplaceConfigurationResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBdsInstanceNodeReplaceConfigurationResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBdsInstanceNodeReplaceConfigurationResultOutput{})
}
