// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Bds Instance Software Update resource in Oracle Cloud Infrastructure Big Data Service service.
//
// # Get the details of the software update of the given SoftwareUpdateId
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/bigdataservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bigdataservice.GetBdsInstanceSoftwareUpdate(ctx, &bigdataservice.GetBdsInstanceSoftwareUpdateArgs{
//				BdsInstanceId:     testBdsInstance.Id,
//				SoftwareUpdateKey: bdsInstanceSoftwareUpdateSoftwareUpdateKey,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBdsInstanceSoftwareUpdate(ctx *pulumi.Context, args *GetBdsInstanceSoftwareUpdateArgs, opts ...pulumi.InvokeOption) (*GetBdsInstanceSoftwareUpdateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBdsInstanceSoftwareUpdateResult
	err := ctx.Invoke("oci:BigDataService/getBdsInstanceSoftwareUpdate:getBdsInstanceSoftwareUpdate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBdsInstanceSoftwareUpdate.
type GetBdsInstanceSoftwareUpdateArgs struct {
	// The OCID of the cluster.
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// The unique identifier of the software update.
	SoftwareUpdateKey string `pulumi:"softwareUpdateKey"`
}

// A collection of values returned by getBdsInstanceSoftwareUpdate.
type GetBdsInstanceSoftwareUpdateResult struct {
	BdsInstanceId string `pulumi:"bdsInstanceId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of a given software update
	SoftwareUpdateKey string `pulumi:"softwareUpdateKey"`
	// type of current software update.
	// * Big Data Service's micro service. BDS version will be changed after upgrade.
	SoftwareUpdateType string `pulumi:"softwareUpdateType"`
	// The version of the software update.
	SoftwareUpdateVersion string `pulumi:"softwareUpdateVersion"`
	// The lifecycle state of the software update.
	State string `pulumi:"state"`
	// The due date for the software update. Big Data Service will be updated automatically after this date.
	TimeDue string `pulumi:"timeDue"`
	// The time when the software update was released.
	TimeReleased string `pulumi:"timeReleased"`
}

func GetBdsInstanceSoftwareUpdateOutput(ctx *pulumi.Context, args GetBdsInstanceSoftwareUpdateOutputArgs, opts ...pulumi.InvokeOption) GetBdsInstanceSoftwareUpdateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetBdsInstanceSoftwareUpdateResultOutput, error) {
			args := v.(GetBdsInstanceSoftwareUpdateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:BigDataService/getBdsInstanceSoftwareUpdate:getBdsInstanceSoftwareUpdate", args, GetBdsInstanceSoftwareUpdateResultOutput{}, options).(GetBdsInstanceSoftwareUpdateResultOutput), nil
		}).(GetBdsInstanceSoftwareUpdateResultOutput)
}

// A collection of arguments for invoking getBdsInstanceSoftwareUpdate.
type GetBdsInstanceSoftwareUpdateOutputArgs struct {
	// The OCID of the cluster.
	BdsInstanceId pulumi.StringInput `pulumi:"bdsInstanceId"`
	// The unique identifier of the software update.
	SoftwareUpdateKey pulumi.StringInput `pulumi:"softwareUpdateKey"`
}

func (GetBdsInstanceSoftwareUpdateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBdsInstanceSoftwareUpdateArgs)(nil)).Elem()
}

// A collection of values returned by getBdsInstanceSoftwareUpdate.
type GetBdsInstanceSoftwareUpdateResultOutput struct{ *pulumi.OutputState }

func (GetBdsInstanceSoftwareUpdateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBdsInstanceSoftwareUpdateResult)(nil)).Elem()
}

func (o GetBdsInstanceSoftwareUpdateResultOutput) ToGetBdsInstanceSoftwareUpdateResultOutput() GetBdsInstanceSoftwareUpdateResultOutput {
	return o
}

func (o GetBdsInstanceSoftwareUpdateResultOutput) ToGetBdsInstanceSoftwareUpdateResultOutputWithContext(ctx context.Context) GetBdsInstanceSoftwareUpdateResultOutput {
	return o
}

func (o GetBdsInstanceSoftwareUpdateResultOutput) BdsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstanceSoftwareUpdateResult) string { return v.BdsInstanceId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBdsInstanceSoftwareUpdateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstanceSoftwareUpdateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of a given software update
func (o GetBdsInstanceSoftwareUpdateResultOutput) SoftwareUpdateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstanceSoftwareUpdateResult) string { return v.SoftwareUpdateKey }).(pulumi.StringOutput)
}

// type of current software update.
// * Big Data Service's micro service. BDS version will be changed after upgrade.
func (o GetBdsInstanceSoftwareUpdateResultOutput) SoftwareUpdateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstanceSoftwareUpdateResult) string { return v.SoftwareUpdateType }).(pulumi.StringOutput)
}

// The version of the software update.
func (o GetBdsInstanceSoftwareUpdateResultOutput) SoftwareUpdateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstanceSoftwareUpdateResult) string { return v.SoftwareUpdateVersion }).(pulumi.StringOutput)
}

// The lifecycle state of the software update.
func (o GetBdsInstanceSoftwareUpdateResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstanceSoftwareUpdateResult) string { return v.State }).(pulumi.StringOutput)
}

// The due date for the software update. Big Data Service will be updated automatically after this date.
func (o GetBdsInstanceSoftwareUpdateResultOutput) TimeDue() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstanceSoftwareUpdateResult) string { return v.TimeDue }).(pulumi.StringOutput)
}

// The time when the software update was released.
func (o GetBdsInstanceSoftwareUpdateResultOutput) TimeReleased() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstanceSoftwareUpdateResult) string { return v.TimeReleased }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBdsInstanceSoftwareUpdateResultOutput{})
}
