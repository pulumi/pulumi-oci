// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigdataservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Bds Instances in Oracle Cloud Infrastructure Big Data Service service.
//
// Returns a list of all Big Data Service clusters in a compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/BigDataService"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := BigDataService.GetBdsInstances(ctx, &bigdataservice.GetBdsInstancesArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(bdsInstanceDisplayName),
//				State:         pulumi.StringRef(bdsInstanceState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBdsInstances(ctx *pulumi.Context, args *GetBdsInstancesArgs, opts ...pulumi.InvokeOption) (*GetBdsInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBdsInstancesResult
	err := ctx.Invoke("oci:BigDataService/getBdsInstances:getBdsInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBdsInstances.
type GetBdsInstancesArgs struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetBdsInstancesFilter `pulumi:"filters"`
	// The state of the cluster.
	State *string `pulumi:"state"`
}

// A collection of values returned by getBdsInstances.
type GetBdsInstancesResult struct {
	// The list of bds_instances.
	BdsInstances []GetBdsInstancesBdsInstance `pulumi:"bdsInstances"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The name of the node.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetBdsInstancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The state of the cluster.
	State *string `pulumi:"state"`
}

func GetBdsInstancesOutput(ctx *pulumi.Context, args GetBdsInstancesOutputArgs, opts ...pulumi.InvokeOption) GetBdsInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBdsInstancesResult, error) {
			args := v.(GetBdsInstancesArgs)
			r, err := GetBdsInstances(ctx, &args, opts...)
			var s GetBdsInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBdsInstancesResultOutput)
}

// A collection of arguments for invoking getBdsInstances.
type GetBdsInstancesOutputArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput           `pulumi:"displayName"`
	Filters     GetBdsInstancesFilterArrayInput `pulumi:"filters"`
	// The state of the cluster.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetBdsInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBdsInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getBdsInstances.
type GetBdsInstancesResultOutput struct{ *pulumi.OutputState }

func (GetBdsInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBdsInstancesResult)(nil)).Elem()
}

func (o GetBdsInstancesResultOutput) ToGetBdsInstancesResultOutput() GetBdsInstancesResultOutput {
	return o
}

func (o GetBdsInstancesResultOutput) ToGetBdsInstancesResultOutputWithContext(ctx context.Context) GetBdsInstancesResultOutput {
	return o
}

// The list of bds_instances.
func (o GetBdsInstancesResultOutput) BdsInstances() GetBdsInstancesBdsInstanceArrayOutput {
	return o.ApplyT(func(v GetBdsInstancesResult) []GetBdsInstancesBdsInstance { return v.BdsInstances }).(GetBdsInstancesBdsInstanceArrayOutput)
}

// The OCID of the compartment.
func (o GetBdsInstancesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstancesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The name of the node.
func (o GetBdsInstancesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBdsInstancesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetBdsInstancesResultOutput) Filters() GetBdsInstancesFilterArrayOutput {
	return o.ApplyT(func(v GetBdsInstancesResult) []GetBdsInstancesFilter { return v.Filters }).(GetBdsInstancesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBdsInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBdsInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The state of the cluster.
func (o GetBdsInstancesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBdsInstancesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBdsInstancesResultOutput{})
}
