// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package blockchain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Blockchain Platform resource in Oracle Cloud Infrastructure Blockchain service.
//
// # Gets information about a Blockchain Platform identified by the specific id
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Blockchain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Blockchain.GetBlockchainPlatform(ctx, &blockchain.GetBlockchainPlatformArgs{
//				BlockchainPlatformId: testBlockchainPlatformOciBlockchainBlockchainPlatform.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBlockchainPlatform(ctx *pulumi.Context, args *LookupBlockchainPlatformArgs, opts ...pulumi.InvokeOption) (*LookupBlockchainPlatformResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBlockchainPlatformResult
	err := ctx.Invoke("oci:Blockchain/getBlockchainPlatform:getBlockchainPlatform", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBlockchainPlatform.
type LookupBlockchainPlatformArgs struct {
	// Unique service identifier.
	BlockchainPlatformId string `pulumi:"blockchainPlatformId"`
}

// A collection of values returned by getBlockchainPlatform.
type LookupBlockchainPlatformResult struct {
	BlockchainPlatformId string `pulumi:"blockchainPlatformId"`
	CaCertArchiveText    string `pulumi:"caCertArchiveText"`
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// Blockchain Platform component details.
	ComponentDetails []GetBlockchainPlatformComponentDetail `pulumi:"componentDetails"`
	// Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
	ComputeShape string `pulumi:"computeShape"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Platform Instance Description
	Description string `pulumi:"description"`
	// Platform Instance Display name, can be renamed
	DisplayName     string `pulumi:"displayName"`
	FederatedUserId string `pulumi:"federatedUserId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// List of OcpuUtilization for all hosts
	HostOcpuUtilizationInfos []GetBlockchainPlatformHostOcpuUtilizationInfo `pulumi:"hostOcpuUtilizationInfos"`
	// unique identifier that is immutable on creation
	Id              string `pulumi:"id"`
	IdcsAccessToken string `pulumi:"idcsAccessToken"`
	// Bring your own license
	IsByol bool `pulumi:"isByol"`
	// True for multi-AD blockchain plaforms, false for single-AD
	IsMultiAd bool `pulumi:"isMultiAd"`
	// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
	LoadBalancerShape string `pulumi:"loadBalancerShape"`
	// Role of platform - FOUNDER or PARTICIPANT
	PlatformRole string `pulumi:"platformRole"`
	// Type of Platform shape - DEFAULT or CUSTOM
	PlatformShapeType string `pulumi:"platformShapeType"`
	// Platform Version
	PlatformVersion string `pulumi:"platformVersion"`
	// Number of replicas of service components like Rest Proxy, CA and Console
	Replicas []GetBlockchainPlatformReplica `pulumi:"replicas"`
	// Service endpoint URL, valid post-provisioning
	ServiceEndpoint string `pulumi:"serviceEndpoint"`
	// The version of the Platform Instance.
	ServiceVersion string `pulumi:"serviceVersion"`
	// The current state of the Platform Instance.
	State string `pulumi:"state"`
	// Storage size in TBs
	StorageSizeInTbs float64 `pulumi:"storageSizeInTbs"`
	// Storage used in TBs
	StorageUsedInTbs float64 `pulumi:"storageUsedInTbs"`
	// The time the the Platform Instance was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the Platform Instance was updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
	// Number of total OCPUs allocated to the platform cluster
	TotalOcpuCapacity int `pulumi:"totalOcpuCapacity"`
}

func LookupBlockchainPlatformOutput(ctx *pulumi.Context, args LookupBlockchainPlatformOutputArgs, opts ...pulumi.InvokeOption) LookupBlockchainPlatformResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBlockchainPlatformResultOutput, error) {
			args := v.(LookupBlockchainPlatformArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Blockchain/getBlockchainPlatform:getBlockchainPlatform", args, LookupBlockchainPlatformResultOutput{}, options).(LookupBlockchainPlatformResultOutput), nil
		}).(LookupBlockchainPlatformResultOutput)
}

// A collection of arguments for invoking getBlockchainPlatform.
type LookupBlockchainPlatformOutputArgs struct {
	// Unique service identifier.
	BlockchainPlatformId pulumi.StringInput `pulumi:"blockchainPlatformId"`
}

func (LookupBlockchainPlatformOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlockchainPlatformArgs)(nil)).Elem()
}

// A collection of values returned by getBlockchainPlatform.
type LookupBlockchainPlatformResultOutput struct{ *pulumi.OutputState }

func (LookupBlockchainPlatformResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlockchainPlatformResult)(nil)).Elem()
}

func (o LookupBlockchainPlatformResultOutput) ToLookupBlockchainPlatformResultOutput() LookupBlockchainPlatformResultOutput {
	return o
}

func (o LookupBlockchainPlatformResultOutput) ToLookupBlockchainPlatformResultOutputWithContext(ctx context.Context) LookupBlockchainPlatformResultOutput {
	return o
}

func (o LookupBlockchainPlatformResultOutput) BlockchainPlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.BlockchainPlatformId }).(pulumi.StringOutput)
}

func (o LookupBlockchainPlatformResultOutput) CaCertArchiveText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.CaCertArchiveText }).(pulumi.StringOutput)
}

// Compartment Identifier
func (o LookupBlockchainPlatformResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Blockchain Platform component details.
func (o LookupBlockchainPlatformResultOutput) ComponentDetails() GetBlockchainPlatformComponentDetailArrayOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) []GetBlockchainPlatformComponentDetail {
		return v.ComponentDetails
	}).(GetBlockchainPlatformComponentDetailArrayOutput)
}

// Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
func (o LookupBlockchainPlatformResultOutput) ComputeShape() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.ComputeShape }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupBlockchainPlatformResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Platform Instance Description
func (o LookupBlockchainPlatformResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.Description }).(pulumi.StringOutput)
}

// Platform Instance Display name, can be renamed
func (o LookupBlockchainPlatformResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupBlockchainPlatformResultOutput) FederatedUserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.FederatedUserId }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupBlockchainPlatformResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// List of OcpuUtilization for all hosts
func (o LookupBlockchainPlatformResultOutput) HostOcpuUtilizationInfos() GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) []GetBlockchainPlatformHostOcpuUtilizationInfo {
		return v.HostOcpuUtilizationInfos
	}).(GetBlockchainPlatformHostOcpuUtilizationInfoArrayOutput)
}

// unique identifier that is immutable on creation
func (o LookupBlockchainPlatformResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBlockchainPlatformResultOutput) IdcsAccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.IdcsAccessToken }).(pulumi.StringOutput)
}

// Bring your own license
func (o LookupBlockchainPlatformResultOutput) IsByol() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) bool { return v.IsByol }).(pulumi.BoolOutput)
}

// True for multi-AD blockchain plaforms, false for single-AD
func (o LookupBlockchainPlatformResultOutput) IsMultiAd() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) bool { return v.IsMultiAd }).(pulumi.BoolOutput)
}

// An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupBlockchainPlatformResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
func (o LookupBlockchainPlatformResultOutput) LoadBalancerShape() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.LoadBalancerShape }).(pulumi.StringOutput)
}

// Role of platform - FOUNDER or PARTICIPANT
func (o LookupBlockchainPlatformResultOutput) PlatformRole() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.PlatformRole }).(pulumi.StringOutput)
}

// Type of Platform shape - DEFAULT or CUSTOM
func (o LookupBlockchainPlatformResultOutput) PlatformShapeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.PlatformShapeType }).(pulumi.StringOutput)
}

// Platform Version
func (o LookupBlockchainPlatformResultOutput) PlatformVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.PlatformVersion }).(pulumi.StringOutput)
}

// Number of replicas of service components like Rest Proxy, CA and Console
func (o LookupBlockchainPlatformResultOutput) Replicas() GetBlockchainPlatformReplicaArrayOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) []GetBlockchainPlatformReplica { return v.Replicas }).(GetBlockchainPlatformReplicaArrayOutput)
}

// Service endpoint URL, valid post-provisioning
func (o LookupBlockchainPlatformResultOutput) ServiceEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.ServiceEndpoint }).(pulumi.StringOutput)
}

// The version of the Platform Instance.
func (o LookupBlockchainPlatformResultOutput) ServiceVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.ServiceVersion }).(pulumi.StringOutput)
}

// The current state of the Platform Instance.
func (o LookupBlockchainPlatformResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.State }).(pulumi.StringOutput)
}

// Storage size in TBs
func (o LookupBlockchainPlatformResultOutput) StorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) float64 { return v.StorageSizeInTbs }).(pulumi.Float64Output)
}

// Storage used in TBs
func (o LookupBlockchainPlatformResultOutput) StorageUsedInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) float64 { return v.StorageUsedInTbs }).(pulumi.Float64Output)
}

// The time the the Platform Instance was created. An RFC3339 formatted datetime string
func (o LookupBlockchainPlatformResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the Platform Instance was updated. An RFC3339 formatted datetime string
func (o LookupBlockchainPlatformResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Number of total OCPUs allocated to the platform cluster
func (o LookupBlockchainPlatformResultOutput) TotalOcpuCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBlockchainPlatformResult) int { return v.TotalOcpuCapacity }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBlockchainPlatformResultOutput{})
}
