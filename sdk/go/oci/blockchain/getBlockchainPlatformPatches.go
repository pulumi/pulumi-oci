// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package blockchain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Blockchain Platform Patches in Oracle Cloud Infrastructure Blockchain service.
//
// # List Blockchain Platform Patches
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Blockchain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Blockchain.GetBlockchainPlatformPatches(ctx, &blockchain.GetBlockchainPlatformPatchesArgs{
//				BlockchainPlatformId: testBlockchainPlatform.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBlockchainPlatformPatches(ctx *pulumi.Context, args *GetBlockchainPlatformPatchesArgs, opts ...pulumi.InvokeOption) (*GetBlockchainPlatformPatchesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBlockchainPlatformPatchesResult
	err := ctx.Invoke("oci:Blockchain/getBlockchainPlatformPatches:getBlockchainPlatformPatches", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBlockchainPlatformPatches.
type GetBlockchainPlatformPatchesArgs struct {
	// Unique service identifier.
	BlockchainPlatformId string                               `pulumi:"blockchainPlatformId"`
	Filters              []GetBlockchainPlatformPatchesFilter `pulumi:"filters"`
}

// A collection of values returned by getBlockchainPlatformPatches.
type GetBlockchainPlatformPatchesResult struct {
	BlockchainPlatformId string `pulumi:"blockchainPlatformId"`
	// The list of blockchain_platform_patch_collection.
	BlockchainPlatformPatchCollections []GetBlockchainPlatformPatchesBlockchainPlatformPatchCollection `pulumi:"blockchainPlatformPatchCollections"`
	Filters                            []GetBlockchainPlatformPatchesFilter                            `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetBlockchainPlatformPatchesOutput(ctx *pulumi.Context, args GetBlockchainPlatformPatchesOutputArgs, opts ...pulumi.InvokeOption) GetBlockchainPlatformPatchesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetBlockchainPlatformPatchesResultOutput, error) {
			args := v.(GetBlockchainPlatformPatchesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Blockchain/getBlockchainPlatformPatches:getBlockchainPlatformPatches", args, GetBlockchainPlatformPatchesResultOutput{}, options).(GetBlockchainPlatformPatchesResultOutput), nil
		}).(GetBlockchainPlatformPatchesResultOutput)
}

// A collection of arguments for invoking getBlockchainPlatformPatches.
type GetBlockchainPlatformPatchesOutputArgs struct {
	// Unique service identifier.
	BlockchainPlatformId pulumi.StringInput                           `pulumi:"blockchainPlatformId"`
	Filters              GetBlockchainPlatformPatchesFilterArrayInput `pulumi:"filters"`
}

func (GetBlockchainPlatformPatchesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformPatchesArgs)(nil)).Elem()
}

// A collection of values returned by getBlockchainPlatformPatches.
type GetBlockchainPlatformPatchesResultOutput struct{ *pulumi.OutputState }

func (GetBlockchainPlatformPatchesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockchainPlatformPatchesResult)(nil)).Elem()
}

func (o GetBlockchainPlatformPatchesResultOutput) ToGetBlockchainPlatformPatchesResultOutput() GetBlockchainPlatformPatchesResultOutput {
	return o
}

func (o GetBlockchainPlatformPatchesResultOutput) ToGetBlockchainPlatformPatchesResultOutputWithContext(ctx context.Context) GetBlockchainPlatformPatchesResultOutput {
	return o
}

func (o GetBlockchainPlatformPatchesResultOutput) BlockchainPlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformPatchesResult) string { return v.BlockchainPlatformId }).(pulumi.StringOutput)
}

// The list of blockchain_platform_patch_collection.
func (o GetBlockchainPlatformPatchesResultOutput) BlockchainPlatformPatchCollections() GetBlockchainPlatformPatchesBlockchainPlatformPatchCollectionArrayOutput {
	return o.ApplyT(func(v GetBlockchainPlatformPatchesResult) []GetBlockchainPlatformPatchesBlockchainPlatformPatchCollection {
		return v.BlockchainPlatformPatchCollections
	}).(GetBlockchainPlatformPatchesBlockchainPlatformPatchCollectionArrayOutput)
}

func (o GetBlockchainPlatformPatchesResultOutput) Filters() GetBlockchainPlatformPatchesFilterArrayOutput {
	return o.ApplyT(func(v GetBlockchainPlatformPatchesResult) []GetBlockchainPlatformPatchesFilter { return v.Filters }).(GetBlockchainPlatformPatchesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBlockchainPlatformPatchesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockchainPlatformPatchesResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBlockchainPlatformPatchesResultOutput{})
}
