// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package blockchain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Osn resource in Oracle Cloud Infrastructure Blockchain service.
//
// # Gets information about an OSN identified by the specific id
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Blockchain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Blockchain.GetOsn(ctx, &blockchain.GetOsnArgs{
//				BlockchainPlatformId: oci_blockchain_blockchain_platform.Test_blockchain_platform.Id,
//				OsnId:                oci_blockchain_osn.Test_osn.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupOsn(ctx *pulumi.Context, args *LookupOsnArgs, opts ...pulumi.InvokeOption) (*LookupOsnResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOsnResult
	err := ctx.Invoke("oci:Blockchain/getOsn:getOsn", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOsn.
type LookupOsnArgs struct {
	// Unique service identifier.
	BlockchainPlatformId string `pulumi:"blockchainPlatformId"`
	// OSN identifier.
	OsnId string `pulumi:"osnId"`
}

// A collection of values returned by getOsn.
type LookupOsnResult struct {
	// Availability Domain of OSN
	Ad                   string `pulumi:"ad"`
	BlockchainPlatformId string `pulumi:"blockchainPlatformId"`
	Id                   string `pulumi:"id"`
	// OCPU allocation parameter
	OcpuAllocationParams []GetOsnOcpuAllocationParam `pulumi:"ocpuAllocationParams"`
	OsnId                string                      `pulumi:"osnId"`
	// OSN identifier
	OsnKey string `pulumi:"osnKey"`
	// The current state of the OSN.
	State string `pulumi:"state"`
}

func LookupOsnOutput(ctx *pulumi.Context, args LookupOsnOutputArgs, opts ...pulumi.InvokeOption) LookupOsnResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOsnResult, error) {
			args := v.(LookupOsnArgs)
			r, err := LookupOsn(ctx, &args, opts...)
			var s LookupOsnResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOsnResultOutput)
}

// A collection of arguments for invoking getOsn.
type LookupOsnOutputArgs struct {
	// Unique service identifier.
	BlockchainPlatformId pulumi.StringInput `pulumi:"blockchainPlatformId"`
	// OSN identifier.
	OsnId pulumi.StringInput `pulumi:"osnId"`
}

func (LookupOsnOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOsnArgs)(nil)).Elem()
}

// A collection of values returned by getOsn.
type LookupOsnResultOutput struct{ *pulumi.OutputState }

func (LookupOsnResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOsnResult)(nil)).Elem()
}

func (o LookupOsnResultOutput) ToLookupOsnResultOutput() LookupOsnResultOutput {
	return o
}

func (o LookupOsnResultOutput) ToLookupOsnResultOutputWithContext(ctx context.Context) LookupOsnResultOutput {
	return o
}

// Availability Domain of OSN
func (o LookupOsnResultOutput) Ad() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOsnResult) string { return v.Ad }).(pulumi.StringOutput)
}

func (o LookupOsnResultOutput) BlockchainPlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOsnResult) string { return v.BlockchainPlatformId }).(pulumi.StringOutput)
}

func (o LookupOsnResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOsnResult) string { return v.Id }).(pulumi.StringOutput)
}

// OCPU allocation parameter
func (o LookupOsnResultOutput) OcpuAllocationParams() GetOsnOcpuAllocationParamArrayOutput {
	return o.ApplyT(func(v LookupOsnResult) []GetOsnOcpuAllocationParam { return v.OcpuAllocationParams }).(GetOsnOcpuAllocationParamArrayOutput)
}

func (o LookupOsnResultOutput) OsnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOsnResult) string { return v.OsnId }).(pulumi.StringOutput)
}

// OSN identifier
func (o LookupOsnResultOutput) OsnKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOsnResult) string { return v.OsnKey }).(pulumi.StringOutput)
}

// The current state of the OSN.
func (o LookupOsnResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOsnResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOsnResultOutput{})
}
