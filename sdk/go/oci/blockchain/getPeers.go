// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package blockchain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Peers in Oracle Cloud Infrastructure Blockchain service.
//
// # List Blockchain Platform Peers
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Blockchain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Blockchain.GetPeers(ctx, &blockchain.GetPeersArgs{
//				BlockchainPlatformId: oci_blockchain_blockchain_platform.Test_blockchain_platform.Id,
//				DisplayName:          pulumi.StringRef(_var.Peer_display_name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetPeers(ctx *pulumi.Context, args *GetPeersArgs, opts ...pulumi.InvokeOption) (*GetPeersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPeersResult
	err := ctx.Invoke("oci:Blockchain/getPeers:getPeers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeers.
type GetPeersArgs struct {
	// Unique service identifier.
	BlockchainPlatformId string `pulumi:"blockchainPlatformId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Example: `My new resource`
	DisplayName *string          `pulumi:"displayName"`
	Filters     []GetPeersFilter `pulumi:"filters"`
}

// A collection of values returned by getPeers.
type GetPeersResult struct {
	BlockchainPlatformId string           `pulumi:"blockchainPlatformId"`
	DisplayName          *string          `pulumi:"displayName"`
	Filters              []GetPeersFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of peer_collection.
	PeerCollections []GetPeersPeerCollection `pulumi:"peerCollections"`
}

func GetPeersOutput(ctx *pulumi.Context, args GetPeersOutputArgs, opts ...pulumi.InvokeOption) GetPeersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPeersResult, error) {
			args := v.(GetPeersArgs)
			r, err := GetPeers(ctx, &args, opts...)
			var s GetPeersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPeersResultOutput)
}

// A collection of arguments for invoking getPeers.
type GetPeersOutputArgs struct {
	// Unique service identifier.
	BlockchainPlatformId pulumi.StringInput `pulumi:"blockchainPlatformId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Example: `My new resource`
	DisplayName pulumi.StringPtrInput    `pulumi:"displayName"`
	Filters     GetPeersFilterArrayInput `pulumi:"filters"`
}

func (GetPeersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeersArgs)(nil)).Elem()
}

// A collection of values returned by getPeers.
type GetPeersResultOutput struct{ *pulumi.OutputState }

func (GetPeersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeersResult)(nil)).Elem()
}

func (o GetPeersResultOutput) ToGetPeersResultOutput() GetPeersResultOutput {
	return o
}

func (o GetPeersResultOutput) ToGetPeersResultOutputWithContext(ctx context.Context) GetPeersResultOutput {
	return o
}

func (o GetPeersResultOutput) BlockchainPlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeersResult) string { return v.BlockchainPlatformId }).(pulumi.StringOutput)
}

func (o GetPeersResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeersResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetPeersResultOutput) Filters() GetPeersFilterArrayOutput {
	return o.ApplyT(func(v GetPeersResult) []GetPeersFilter { return v.Filters }).(GetPeersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPeersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeersResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of peer_collection.
func (o GetPeersResultOutput) PeerCollections() GetPeersPeerCollectionArrayOutput {
	return o.ApplyT(func(v GetPeersResult) []GetPeersPeerCollection { return v.PeerCollections }).(GetPeersPeerCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPeersResultOutput{})
}
