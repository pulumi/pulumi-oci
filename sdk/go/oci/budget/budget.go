// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package budget

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Budget resource in Oracle Cloud Infrastructure Budget service.
//
// Creates a new budget.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/budget"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := budget.NewBudget(ctx, "test_budget", &budget.BudgetArgs{
//				Amount:                            pulumi.Any(budgetAmount),
//				CompartmentId:                     pulumi.Any(tenancyOcid),
//				ResetPeriod:                       pulumi.Any(budgetResetPeriod),
//				BudgetProcessingPeriodStartOffset: pulumi.Any(budgetBudgetProcessingPeriodStartOffset),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				Description: pulumi.Any(budgetDescription),
//				DisplayName: pulumi.Any(budgetDisplayName),
//				EndDate:     pulumi.Any(budgetEndDate),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				ProcessingPeriodType: pulumi.Any(budgetProcessingPeriodType),
//				StartDate:            pulumi.Any(budgetStartDate),
//				TargetCompartmentId:  pulumi.Any(testCompartment.Id),
//				TargetType:           pulumi.Any(budgetTargetType),
//				Targets:              pulumi.Any(budgetTargets),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Budgets can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Budget/budget:Budget test_budget "id"
// ```
type Budget struct {
	pulumi.CustomResourceState

	// The actual spend in currency for the current budget cycle.
	ActualSpend pulumi.Float64Output `pulumi:"actualSpend"`
	// The total number of alert rules in the budget.
	AlertRuleCount pulumi.IntOutput `pulumi:"alertRuleCount"`
	// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
	Amount pulumi.IntOutput `pulumi:"amount"`
	// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
	BudgetProcessingPeriodStartOffset pulumi.IntOutput `pulumi:"budgetProcessingPeriodStartOffset"`
	// The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) The description of the budget.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The displayName of the budget. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
	EndDate pulumi.StringOutput `pulumi:"endDate"`
	// The forecasted spend in currency by the end of the current budget cycle.
	ForecastedSpend pulumi.Float64Output `pulumi:"forecastedSpend"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
	ProcessingPeriodType pulumi.StringOutput `pulumi:"processingPeriodType"`
	// (Updatable) The reset period for the budget. Valid value is MONTHLY.
	ResetPeriod pulumi.StringOutput `pulumi:"resetPeriod"`
	// (Updatable) The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
	StartDate pulumi.StringOutput `pulumi:"startDate"`
	// The current state of the budget.
	State pulumi.StringOutput `pulumi:"state"`
	// This is DEPRECATED. Set the target compartment ID in targets instead.
	//
	// Deprecated: The 'target_compartment_id' field has been deprecated. Please use 'targets' instead.
	TargetCompartmentId pulumi.StringOutput `pulumi:"targetCompartmentId"`
	// The type of target on which the budget is applied.
	TargetType pulumi.StringOutput `pulumi:"targetType"`
	// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Targets pulumi.StringArrayOutput `pulumi:"targets"`
	// The time that the budget was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time that the budget spend was last computed.
	TimeSpendComputed pulumi.StringOutput `pulumi:"timeSpendComputed"`
	// The time that the budget was updated.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// The version of the budget. Starts from 1 and increments by 1.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewBudget registers a new resource with the given unique name, arguments, and options.
func NewBudget(ctx *pulumi.Context,
	name string, args *BudgetArgs, opts ...pulumi.ResourceOption) (*Budget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Amount == nil {
		return nil, errors.New("invalid value for required argument 'Amount'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ResetPeriod == nil {
		return nil, errors.New("invalid value for required argument 'ResetPeriod'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Budget
	err := ctx.RegisterResource("oci:Budget/budget:Budget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBudget gets an existing Budget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBudget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BudgetState, opts ...pulumi.ResourceOption) (*Budget, error) {
	var resource Budget
	err := ctx.ReadResource("oci:Budget/budget:Budget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Budget resources.
type budgetState struct {
	// The actual spend in currency for the current budget cycle.
	ActualSpend *float64 `pulumi:"actualSpend"`
	// The total number of alert rules in the budget.
	AlertRuleCount *int `pulumi:"alertRuleCount"`
	// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
	Amount *int `pulumi:"amount"`
	// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
	BudgetProcessingPeriodStartOffset *int `pulumi:"budgetProcessingPeriodStartOffset"`
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The description of the budget.
	Description *string `pulumi:"description"`
	// (Updatable) The displayName of the budget. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
	EndDate *string `pulumi:"endDate"`
	// The forecasted spend in currency by the end of the current budget cycle.
	ForecastedSpend *float64 `pulumi:"forecastedSpend"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
	ProcessingPeriodType *string `pulumi:"processingPeriodType"`
	// (Updatable) The reset period for the budget. Valid value is MONTHLY.
	ResetPeriod *string `pulumi:"resetPeriod"`
	// (Updatable) The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
	StartDate *string `pulumi:"startDate"`
	// The current state of the budget.
	State *string `pulumi:"state"`
	// This is DEPRECATED. Set the target compartment ID in targets instead.
	//
	// Deprecated: The 'target_compartment_id' field has been deprecated. Please use 'targets' instead.
	TargetCompartmentId *string `pulumi:"targetCompartmentId"`
	// The type of target on which the budget is applied.
	TargetType *string `pulumi:"targetType"`
	// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Targets []string `pulumi:"targets"`
	// The time that the budget was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time that the budget spend was last computed.
	TimeSpendComputed *string `pulumi:"timeSpendComputed"`
	// The time that the budget was updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The version of the budget. Starts from 1 and increments by 1.
	Version *int `pulumi:"version"`
}

type BudgetState struct {
	// The actual spend in currency for the current budget cycle.
	ActualSpend pulumi.Float64PtrInput
	// The total number of alert rules in the budget.
	AlertRuleCount pulumi.IntPtrInput
	// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
	Amount pulumi.IntPtrInput
	// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
	BudgetProcessingPeriodStartOffset pulumi.IntPtrInput
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) The description of the budget.
	Description pulumi.StringPtrInput
	// (Updatable) The displayName of the budget. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
	EndDate pulumi.StringPtrInput
	// The forecasted spend in currency by the end of the current budget cycle.
	ForecastedSpend pulumi.Float64PtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
	ProcessingPeriodType pulumi.StringPtrInput
	// (Updatable) The reset period for the budget. Valid value is MONTHLY.
	ResetPeriod pulumi.StringPtrInput
	// (Updatable) The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
	StartDate pulumi.StringPtrInput
	// The current state of the budget.
	State pulumi.StringPtrInput
	// This is DEPRECATED. Set the target compartment ID in targets instead.
	//
	// Deprecated: The 'target_compartment_id' field has been deprecated. Please use 'targets' instead.
	TargetCompartmentId pulumi.StringPtrInput
	// The type of target on which the budget is applied.
	TargetType pulumi.StringPtrInput
	// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Targets pulumi.StringArrayInput
	// The time that the budget was created.
	TimeCreated pulumi.StringPtrInput
	// The time that the budget spend was last computed.
	TimeSpendComputed pulumi.StringPtrInput
	// The time that the budget was updated.
	TimeUpdated pulumi.StringPtrInput
	// The version of the budget. Starts from 1 and increments by 1.
	Version pulumi.IntPtrInput
}

func (BudgetState) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetState)(nil)).Elem()
}

type budgetArgs struct {
	// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
	Amount int `pulumi:"amount"`
	// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
	BudgetProcessingPeriodStartOffset *int `pulumi:"budgetProcessingPeriodStartOffset"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The description of the budget.
	Description *string `pulumi:"description"`
	// (Updatable) The displayName of the budget. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
	EndDate *string `pulumi:"endDate"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
	ProcessingPeriodType *string `pulumi:"processingPeriodType"`
	// (Updatable) The reset period for the budget. Valid value is MONTHLY.
	ResetPeriod string `pulumi:"resetPeriod"`
	// (Updatable) The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
	StartDate *string `pulumi:"startDate"`
	// This is DEPRECATED. Set the target compartment ID in targets instead.
	//
	// Deprecated: The 'target_compartment_id' field has been deprecated. Please use 'targets' instead.
	TargetCompartmentId *string `pulumi:"targetCompartmentId"`
	// The type of target on which the budget is applied.
	TargetType *string `pulumi:"targetType"`
	// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Targets []string `pulumi:"targets"`
}

// The set of arguments for constructing a Budget resource.
type BudgetArgs struct {
	// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
	Amount pulumi.IntInput
	// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
	BudgetProcessingPeriodStartOffset pulumi.IntPtrInput
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) The description of the budget.
	Description pulumi.StringPtrInput
	// (Updatable) The displayName of the budget. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
	EndDate pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
	ProcessingPeriodType pulumi.StringPtrInput
	// (Updatable) The reset period for the budget. Valid value is MONTHLY.
	ResetPeriod pulumi.StringInput
	// (Updatable) The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
	StartDate pulumi.StringPtrInput
	// This is DEPRECATED. Set the target compartment ID in targets instead.
	//
	// Deprecated: The 'target_compartment_id' field has been deprecated. Please use 'targets' instead.
	TargetCompartmentId pulumi.StringPtrInput
	// The type of target on which the budget is applied.
	TargetType pulumi.StringPtrInput
	// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Targets pulumi.StringArrayInput
}

func (BudgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetArgs)(nil)).Elem()
}

type BudgetInput interface {
	pulumi.Input

	ToBudgetOutput() BudgetOutput
	ToBudgetOutputWithContext(ctx context.Context) BudgetOutput
}

func (*Budget) ElementType() reflect.Type {
	return reflect.TypeOf((**Budget)(nil)).Elem()
}

func (i *Budget) ToBudgetOutput() BudgetOutput {
	return i.ToBudgetOutputWithContext(context.Background())
}

func (i *Budget) ToBudgetOutputWithContext(ctx context.Context) BudgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetOutput)
}

// BudgetArrayInput is an input type that accepts BudgetArray and BudgetArrayOutput values.
// You can construct a concrete instance of `BudgetArrayInput` via:
//
//	BudgetArray{ BudgetArgs{...} }
type BudgetArrayInput interface {
	pulumi.Input

	ToBudgetArrayOutput() BudgetArrayOutput
	ToBudgetArrayOutputWithContext(context.Context) BudgetArrayOutput
}

type BudgetArray []BudgetInput

func (BudgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Budget)(nil)).Elem()
}

func (i BudgetArray) ToBudgetArrayOutput() BudgetArrayOutput {
	return i.ToBudgetArrayOutputWithContext(context.Background())
}

func (i BudgetArray) ToBudgetArrayOutputWithContext(ctx context.Context) BudgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetArrayOutput)
}

// BudgetMapInput is an input type that accepts BudgetMap and BudgetMapOutput values.
// You can construct a concrete instance of `BudgetMapInput` via:
//
//	BudgetMap{ "key": BudgetArgs{...} }
type BudgetMapInput interface {
	pulumi.Input

	ToBudgetMapOutput() BudgetMapOutput
	ToBudgetMapOutputWithContext(context.Context) BudgetMapOutput
}

type BudgetMap map[string]BudgetInput

func (BudgetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Budget)(nil)).Elem()
}

func (i BudgetMap) ToBudgetMapOutput() BudgetMapOutput {
	return i.ToBudgetMapOutputWithContext(context.Background())
}

func (i BudgetMap) ToBudgetMapOutputWithContext(ctx context.Context) BudgetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetMapOutput)
}

type BudgetOutput struct{ *pulumi.OutputState }

func (BudgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Budget)(nil)).Elem()
}

func (o BudgetOutput) ToBudgetOutput() BudgetOutput {
	return o
}

func (o BudgetOutput) ToBudgetOutputWithContext(ctx context.Context) BudgetOutput {
	return o
}

// The actual spend in currency for the current budget cycle.
func (o BudgetOutput) ActualSpend() pulumi.Float64Output {
	return o.ApplyT(func(v *Budget) pulumi.Float64Output { return v.ActualSpend }).(pulumi.Float64Output)
}

// The total number of alert rules in the budget.
func (o BudgetOutput) AlertRuleCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Budget) pulumi.IntOutput { return v.AlertRuleCount }).(pulumi.IntOutput)
}

// (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
func (o BudgetOutput) Amount() pulumi.IntOutput {
	return o.ApplyT(func(v *Budget) pulumi.IntOutput { return v.Amount }).(pulumi.IntOutput)
}

// (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
func (o BudgetOutput) BudgetProcessingPeriodStartOffset() pulumi.IntOutput {
	return o.ApplyT(func(v *Budget) pulumi.IntOutput { return v.BudgetProcessingPeriodStartOffset }).(pulumi.IntOutput)
}

// The OCID of the compartment.
func (o BudgetOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o BudgetOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) The description of the budget.
func (o BudgetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The displayName of the budget. Avoid entering confidential information.
func (o BudgetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
func (o BudgetOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.EndDate }).(pulumi.StringOutput)
}

// The forecasted spend in currency by the end of the current budget cycle.
func (o BudgetOutput) ForecastedSpend() pulumi.Float64Output {
	return o.ApplyT(func(v *Budget) pulumi.Float64Output { return v.ForecastedSpend }).(pulumi.Float64Output)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o BudgetOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
func (o BudgetOutput) ProcessingPeriodType() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.ProcessingPeriodType }).(pulumi.StringOutput)
}

// (Updatable) The reset period for the budget. Valid value is MONTHLY.
func (o BudgetOutput) ResetPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.ResetPeriod }).(pulumi.StringOutput)
}

// (Updatable) The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
func (o BudgetOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.StartDate }).(pulumi.StringOutput)
}

// The current state of the budget.
func (o BudgetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// This is DEPRECATED. Set the target compartment ID in targets instead.
//
// Deprecated: The 'target_compartment_id' field has been deprecated. Please use 'targets' instead.
func (o BudgetOutput) TargetCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.TargetCompartmentId }).(pulumi.StringOutput)
}

// The type of target on which the budget is applied.
func (o BudgetOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.TargetType }).(pulumi.StringOutput)
}

// The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o BudgetOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringArrayOutput { return v.Targets }).(pulumi.StringArrayOutput)
}

// The time that the budget was created.
func (o BudgetOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time that the budget spend was last computed.
func (o BudgetOutput) TimeSpendComputed() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.TimeSpendComputed }).(pulumi.StringOutput)
}

// The time that the budget was updated.
func (o BudgetOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Budget) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The version of the budget. Starts from 1 and increments by 1.
func (o BudgetOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *Budget) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type BudgetArrayOutput struct{ *pulumi.OutputState }

func (BudgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Budget)(nil)).Elem()
}

func (o BudgetArrayOutput) ToBudgetArrayOutput() BudgetArrayOutput {
	return o
}

func (o BudgetArrayOutput) ToBudgetArrayOutputWithContext(ctx context.Context) BudgetArrayOutput {
	return o
}

func (o BudgetArrayOutput) Index(i pulumi.IntInput) BudgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Budget {
		return vs[0].([]*Budget)[vs[1].(int)]
	}).(BudgetOutput)
}

type BudgetMapOutput struct{ *pulumi.OutputState }

func (BudgetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Budget)(nil)).Elem()
}

func (o BudgetMapOutput) ToBudgetMapOutput() BudgetMapOutput {
	return o
}

func (o BudgetMapOutput) ToBudgetMapOutputWithContext(ctx context.Context) BudgetMapOutput {
	return o
}

func (o BudgetMapOutput) MapIndex(k pulumi.StringInput) BudgetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Budget {
		return vs[0].(map[string]*Budget)[vs[1].(string)]
	}).(BudgetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetInput)(nil)).Elem(), &Budget{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetArrayInput)(nil)).Elem(), BudgetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BudgetMapInput)(nil)).Elem(), BudgetMap{})
	pulumi.RegisterOutputType(BudgetOutput{})
	pulumi.RegisterOutputType(BudgetArrayOutput{})
	pulumi.RegisterOutputType(BudgetMapOutput{})
}
