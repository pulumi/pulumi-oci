// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package budget

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Budgets in Oracle Cloud Infrastructure Budget service.
//
// Gets a list of budgets in a compartment.
//
// By default, ListBudgets returns budgets of the 'COMPARTMENT' target type, and the budget records with only one target compartment OCID.
//
// To list all budgets, set the targetType query parameter to ALL (for example: 'targetType=ALL').
//
// Clients should ignore new targetTypes, or upgrade to the latest version of the client SDK to handle new targetTypes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/budget"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := budget.GetBudgets(ctx, &budget.GetBudgetsArgs{
//				CompartmentId: tenancyOcid,
//				DisplayName:   pulumi.StringRef(budgetDisplayName),
//				State:         pulumi.StringRef(budgetState),
//				TargetType:    pulumi.StringRef(budgetTargetType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBudgets(ctx *pulumi.Context, args *GetBudgetsArgs, opts ...pulumi.InvokeOption) (*GetBudgetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBudgetsResult
	err := ctx.Invoke("oci:Budget/getBudgets:getBudgets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBudgets.
type GetBudgetsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. This does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetBudgetsFilter `pulumi:"filters"`
	// The current state of the resource to filter by.
	State *string `pulumi:"state"`
	// The type of target to filter by:
	// * ALL - List all budgets
	// * COMPARTMENT - List all budgets with targetType == "COMPARTMENT"
	// * TAG - List all budgets with targetType == "TAG"
	TargetType *string `pulumi:"targetType"`
}

// A collection of values returned by getBudgets.
type GetBudgetsResult struct {
	// The list of budgets.
	Budgets []GetBudgetsBudget `pulumi:"budgets"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The display name of the budget. Avoid entering confidential information.
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetBudgetsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the budget.
	State *string `pulumi:"state"`
	// The type of target on which the budget is applied.
	TargetType *string `pulumi:"targetType"`
}

func GetBudgetsOutput(ctx *pulumi.Context, args GetBudgetsOutputArgs, opts ...pulumi.InvokeOption) GetBudgetsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetBudgetsResultOutput, error) {
			args := v.(GetBudgetsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Budget/getBudgets:getBudgets", args, GetBudgetsResultOutput{}, options).(GetBudgetsResultOutput), nil
		}).(GetBudgetsResultOutput)
}

// A collection of arguments for invoking getBudgets.
type GetBudgetsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A user-friendly name. This does not have to be unique, and it's changeable.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput      `pulumi:"displayName"`
	Filters     GetBudgetsFilterArrayInput `pulumi:"filters"`
	// The current state of the resource to filter by.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The type of target to filter by:
	// * ALL - List all budgets
	// * COMPARTMENT - List all budgets with targetType == "COMPARTMENT"
	// * TAG - List all budgets with targetType == "TAG"
	TargetType pulumi.StringPtrInput `pulumi:"targetType"`
}

func (GetBudgetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetsArgs)(nil)).Elem()
}

// A collection of values returned by getBudgets.
type GetBudgetsResultOutput struct{ *pulumi.OutputState }

func (GetBudgetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBudgetsResult)(nil)).Elem()
}

func (o GetBudgetsResultOutput) ToGetBudgetsResultOutput() GetBudgetsResultOutput {
	return o
}

func (o GetBudgetsResultOutput) ToGetBudgetsResultOutputWithContext(ctx context.Context) GetBudgetsResultOutput {
	return o
}

// The list of budgets.
func (o GetBudgetsResultOutput) Budgets() GetBudgetsBudgetArrayOutput {
	return o.ApplyT(func(v GetBudgetsResult) []GetBudgetsBudget { return v.Budgets }).(GetBudgetsBudgetArrayOutput)
}

// The OCID of the compartment.
func (o GetBudgetsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The display name of the budget. Avoid entering confidential information.
func (o GetBudgetsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBudgetsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetBudgetsResultOutput) Filters() GetBudgetsFilterArrayOutput {
	return o.ApplyT(func(v GetBudgetsResult) []GetBudgetsFilter { return v.Filters }).(GetBudgetsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBudgetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBudgetsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the budget.
func (o GetBudgetsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBudgetsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The type of target on which the budget is applied.
func (o GetBudgetsResultOutput) TargetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBudgetsResult) *string { return v.TargetType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBudgetsResultOutput{})
}
