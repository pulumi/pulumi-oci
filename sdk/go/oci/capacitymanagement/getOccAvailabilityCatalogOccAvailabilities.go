// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package capacitymanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Occ Availability Catalog Occ Availabilities in Oracle Cloud Infrastructure Capacity Management service.
//
// Lists availabilities for a particular availability catalog.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CapacityManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CapacityManagement.GetOccAvailabilityCatalogOccAvailabilities(ctx, &capacitymanagement.GetOccAvailabilityCatalogOccAvailabilitiesArgs{
//				OccAvailabilityCatalogId:     testOccAvailabilityCatalog.Id,
//				DateExpectedCapacityHandover: pulumi.StringRef(occAvailabilityCatalogOccAvailabilityDateExpectedCapacityHandover),
//				ResourceName:                 pulumi.StringRef(testResource.Name),
//				ResourceType:                 pulumi.StringRef(occAvailabilityCatalogOccAvailabilityResourceType),
//				WorkloadType:                 pulumi.StringRef(occAvailabilityCatalogOccAvailabilityWorkloadType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetOccAvailabilityCatalogOccAvailabilities(ctx *pulumi.Context, args *GetOccAvailabilityCatalogOccAvailabilitiesArgs, opts ...pulumi.InvokeOption) (*GetOccAvailabilityCatalogOccAvailabilitiesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOccAvailabilityCatalogOccAvailabilitiesResult
	err := ctx.Invoke("oci:CapacityManagement/getOccAvailabilityCatalogOccAvailabilities:getOccAvailabilityCatalogOccAvailabilities", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOccAvailabilityCatalogOccAvailabilities.
type GetOccAvailabilityCatalogOccAvailabilitiesArgs struct {
	// The capacity handover date of the capacity constraint to filter the list of capacity constraints.
	DateExpectedCapacityHandover *string                                            `pulumi:"dateExpectedCapacityHandover"`
	Filters                      []GetOccAvailabilityCatalogOccAvailabilitiesFilter `pulumi:"filters"`
	// The OCID of the availability catalog.
	OccAvailabilityCatalogId string `pulumi:"occAvailabilityCatalogId"`
	// The name of the resource to filter the list of capacity constraints.
	ResourceName *string `pulumi:"resourceName"`
	// Resource type using which the capacity constraints of an availability catalog can be filtered.
	ResourceType *string `pulumi:"resourceType"`
	// Workload type using the resources in an availability catalog can be filtered.
	WorkloadType *string `pulumi:"workloadType"`
}

// A collection of values returned by getOccAvailabilityCatalogOccAvailabilities.
type GetOccAvailabilityCatalogOccAvailabilitiesResult struct {
	// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
	DateExpectedCapacityHandover *string                                            `pulumi:"dateExpectedCapacityHandover"`
	Filters                      []GetOccAvailabilityCatalogOccAvailabilitiesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                       string `pulumi:"id"`
	OccAvailabilityCatalogId string `pulumi:"occAvailabilityCatalogId"`
	// The list of occ_availability_collection.
	OccAvailabilityCollections []GetOccAvailabilityCatalogOccAvailabilitiesOccAvailabilityCollection `pulumi:"occAvailabilityCollections"`
	// The name of the resource that the customer can request.
	ResourceName *string `pulumi:"resourceName"`
	// The different types of resources against which customers can place capacity requests.
	ResourceType *string `pulumi:"resourceType"`
	// The type of workload (Generic/ROW).
	WorkloadType *string `pulumi:"workloadType"`
}

func GetOccAvailabilityCatalogOccAvailabilitiesOutput(ctx *pulumi.Context, args GetOccAvailabilityCatalogOccAvailabilitiesOutputArgs, opts ...pulumi.InvokeOption) GetOccAvailabilityCatalogOccAvailabilitiesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOccAvailabilityCatalogOccAvailabilitiesResult, error) {
			args := v.(GetOccAvailabilityCatalogOccAvailabilitiesArgs)
			r, err := GetOccAvailabilityCatalogOccAvailabilities(ctx, &args, opts...)
			var s GetOccAvailabilityCatalogOccAvailabilitiesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOccAvailabilityCatalogOccAvailabilitiesResultOutput)
}

// A collection of arguments for invoking getOccAvailabilityCatalogOccAvailabilities.
type GetOccAvailabilityCatalogOccAvailabilitiesOutputArgs struct {
	// The capacity handover date of the capacity constraint to filter the list of capacity constraints.
	DateExpectedCapacityHandover pulumi.StringPtrInput                                      `pulumi:"dateExpectedCapacityHandover"`
	Filters                      GetOccAvailabilityCatalogOccAvailabilitiesFilterArrayInput `pulumi:"filters"`
	// The OCID of the availability catalog.
	OccAvailabilityCatalogId pulumi.StringInput `pulumi:"occAvailabilityCatalogId"`
	// The name of the resource to filter the list of capacity constraints.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// Resource type using which the capacity constraints of an availability catalog can be filtered.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// Workload type using the resources in an availability catalog can be filtered.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (GetOccAvailabilityCatalogOccAvailabilitiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccAvailabilityCatalogOccAvailabilitiesArgs)(nil)).Elem()
}

// A collection of values returned by getOccAvailabilityCatalogOccAvailabilities.
type GetOccAvailabilityCatalogOccAvailabilitiesResultOutput struct{ *pulumi.OutputState }

func (GetOccAvailabilityCatalogOccAvailabilitiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccAvailabilityCatalogOccAvailabilitiesResult)(nil)).Elem()
}

func (o GetOccAvailabilityCatalogOccAvailabilitiesResultOutput) ToGetOccAvailabilityCatalogOccAvailabilitiesResultOutput() GetOccAvailabilityCatalogOccAvailabilitiesResultOutput {
	return o
}

func (o GetOccAvailabilityCatalogOccAvailabilitiesResultOutput) ToGetOccAvailabilityCatalogOccAvailabilitiesResultOutputWithContext(ctx context.Context) GetOccAvailabilityCatalogOccAvailabilitiesResultOutput {
	return o
}

// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
func (o GetOccAvailabilityCatalogOccAvailabilitiesResultOutput) DateExpectedCapacityHandover() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogOccAvailabilitiesResult) *string {
		return v.DateExpectedCapacityHandover
	}).(pulumi.StringPtrOutput)
}

func (o GetOccAvailabilityCatalogOccAvailabilitiesResultOutput) Filters() GetOccAvailabilityCatalogOccAvailabilitiesFilterArrayOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogOccAvailabilitiesResult) []GetOccAvailabilityCatalogOccAvailabilitiesFilter {
		return v.Filters
	}).(GetOccAvailabilityCatalogOccAvailabilitiesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOccAvailabilityCatalogOccAvailabilitiesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogOccAvailabilitiesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetOccAvailabilityCatalogOccAvailabilitiesResultOutput) OccAvailabilityCatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogOccAvailabilitiesResult) string { return v.OccAvailabilityCatalogId }).(pulumi.StringOutput)
}

// The list of occ_availability_collection.
func (o GetOccAvailabilityCatalogOccAvailabilitiesResultOutput) OccAvailabilityCollections() GetOccAvailabilityCatalogOccAvailabilitiesOccAvailabilityCollectionArrayOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogOccAvailabilitiesResult) []GetOccAvailabilityCatalogOccAvailabilitiesOccAvailabilityCollection {
		return v.OccAvailabilityCollections
	}).(GetOccAvailabilityCatalogOccAvailabilitiesOccAvailabilityCollectionArrayOutput)
}

// The name of the resource that the customer can request.
func (o GetOccAvailabilityCatalogOccAvailabilitiesResultOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogOccAvailabilitiesResult) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// The different types of resources against which customers can place capacity requests.
func (o GetOccAvailabilityCatalogOccAvailabilitiesResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogOccAvailabilitiesResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The type of workload (Generic/ROW).
func (o GetOccAvailabilityCatalogOccAvailabilitiesResultOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogOccAvailabilitiesResult) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOccAvailabilityCatalogOccAvailabilitiesResultOutput{})
}
