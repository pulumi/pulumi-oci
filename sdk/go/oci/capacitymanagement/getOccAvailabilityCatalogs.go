// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package capacitymanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Occ Availability Catalogs in Oracle Cloud Infrastructure Capacity Management service.
//
// Lists all availability catalogs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/CapacityManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CapacityManagement.GetOccAvailabilityCatalogs(ctx, &capacitymanagement.GetOccAvailabilityCatalogsArgs{
//				CompartmentId: compartmentId,
//				CatalogState:  pulumi.StringRef(occAvailabilityCatalogCatalogState),
//				DisplayName:   pulumi.StringRef(occAvailabilityCatalogDisplayName),
//				Id:            pulumi.StringRef(occAvailabilityCatalogId),
//				Namespace:     pulumi.StringRef(occAvailabilityCatalogNamespace),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOccAvailabilityCatalogs(ctx *pulumi.Context, args *GetOccAvailabilityCatalogsArgs, opts ...pulumi.InvokeOption) (*GetOccAvailabilityCatalogsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOccAvailabilityCatalogsResult
	err := ctx.Invoke("oci:CapacityManagement/getOccAvailabilityCatalogs:getOccAvailabilityCatalogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOccAvailabilityCatalogs.
type GetOccAvailabilityCatalogsArgs struct {
	// Filter the list of availability catalogs based on the catalog state.
	CatalogState *string `pulumi:"catalogState"`
	// The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire display name. The match is not case sensitive.
	DisplayName *string                            `pulumi:"displayName"`
	Filters     []GetOccAvailabilityCatalogsFilter `pulumi:"filters"`
	// The OCID of the availability catalog to filter the list of availability catalogs.
	Id *string `pulumi:"id"`
	// The namespace by which we would filter the list.
	Namespace *string `pulumi:"namespace"`
}

// A collection of values returned by getOccAvailabilityCatalogs.
type GetOccAvailabilityCatalogsResult struct {
	// The different states associated with the availability catalog.
	CatalogState *string `pulumi:"catalogState"`
	// The OCID of the tenancy where the availability catalog resides.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name for the availability catalog.
	DisplayName *string                            `pulumi:"displayName"`
	Filters     []GetOccAvailabilityCatalogsFilter `pulumi:"filters"`
	// The OCID of the availability catalog.
	Id *string `pulumi:"id"`
	// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
	Namespace *string `pulumi:"namespace"`
	// The list of occ_availability_catalog_collection.
	OccAvailabilityCatalogCollections []GetOccAvailabilityCatalogsOccAvailabilityCatalogCollection `pulumi:"occAvailabilityCatalogCollections"`
}

func GetOccAvailabilityCatalogsOutput(ctx *pulumi.Context, args GetOccAvailabilityCatalogsOutputArgs, opts ...pulumi.InvokeOption) GetOccAvailabilityCatalogsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetOccAvailabilityCatalogsResultOutput, error) {
			args := v.(GetOccAvailabilityCatalogsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:CapacityManagement/getOccAvailabilityCatalogs:getOccAvailabilityCatalogs", args, GetOccAvailabilityCatalogsResultOutput{}, options).(GetOccAvailabilityCatalogsResultOutput), nil
		}).(GetOccAvailabilityCatalogsResultOutput)
}

// A collection of arguments for invoking getOccAvailabilityCatalogs.
type GetOccAvailabilityCatalogsOutputArgs struct {
	// Filter the list of availability catalogs based on the catalog state.
	CatalogState pulumi.StringPtrInput `pulumi:"catalogState"`
	// The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only the resources that match the entire display name. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput                      `pulumi:"displayName"`
	Filters     GetOccAvailabilityCatalogsFilterArrayInput `pulumi:"filters"`
	// The OCID of the availability catalog to filter the list of availability catalogs.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The namespace by which we would filter the list.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (GetOccAvailabilityCatalogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccAvailabilityCatalogsArgs)(nil)).Elem()
}

// A collection of values returned by getOccAvailabilityCatalogs.
type GetOccAvailabilityCatalogsResultOutput struct{ *pulumi.OutputState }

func (GetOccAvailabilityCatalogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccAvailabilityCatalogsResult)(nil)).Elem()
}

func (o GetOccAvailabilityCatalogsResultOutput) ToGetOccAvailabilityCatalogsResultOutput() GetOccAvailabilityCatalogsResultOutput {
	return o
}

func (o GetOccAvailabilityCatalogsResultOutput) ToGetOccAvailabilityCatalogsResultOutputWithContext(ctx context.Context) GetOccAvailabilityCatalogsResultOutput {
	return o
}

// The different states associated with the availability catalog.
func (o GetOccAvailabilityCatalogsResultOutput) CatalogState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogsResult) *string { return v.CatalogState }).(pulumi.StringPtrOutput)
}

// The OCID of the tenancy where the availability catalog resides.
func (o GetOccAvailabilityCatalogsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name for the availability catalog.
func (o GetOccAvailabilityCatalogsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetOccAvailabilityCatalogsResultOutput) Filters() GetOccAvailabilityCatalogsFilterArrayOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogsResult) []GetOccAvailabilityCatalogsFilter { return v.Filters }).(GetOccAvailabilityCatalogsFilterArrayOutput)
}

// The OCID of the availability catalog.
func (o GetOccAvailabilityCatalogsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
func (o GetOccAvailabilityCatalogsResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogsResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The list of occ_availability_catalog_collection.
func (o GetOccAvailabilityCatalogsResultOutput) OccAvailabilityCatalogCollections() GetOccAvailabilityCatalogsOccAvailabilityCatalogCollectionArrayOutput {
	return o.ApplyT(func(v GetOccAvailabilityCatalogsResult) []GetOccAvailabilityCatalogsOccAvailabilityCatalogCollection {
		return v.OccAvailabilityCatalogCollections
	}).(GetOccAvailabilityCatalogsOccAvailabilityCatalogCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOccAvailabilityCatalogsResultOutput{})
}
