// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package capacitymanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Occ Availability Catalog resource in Oracle Cloud Infrastructure Capacity Management service.
//
// # Create availability catalog
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/CapacityManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CapacityManagement.NewOccAvailabilityCatalog(ctx, "test_occ_availability_catalog", &CapacityManagement.OccAvailabilityCatalogArgs{
//				Base64encodedCatalogDetails: pulumi.Any(occAvailabilityCatalogBase64encodedCatalogDetails),
//				CompartmentId:               pulumi.Any(compartmentId),
//				DisplayName:                 pulumi.Any(occAvailabilityCatalogDisplayName),
//				Namespace:                   pulumi.Any(occAvailabilityCatalogNamespace),
//				OccCustomerGroupId:          pulumi.Any(testOccCustomerGroup.Id),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				Description: pulumi.Any(occAvailabilityCatalogDescription),
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				MetadataDetails: &capacitymanagement.OccAvailabilityCatalogMetadataDetailsArgs{
//					FormatVersion: pulumi.Any(occAvailabilityCatalogMetadataDetailsFormatVersion),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OccAvailabilityCatalogs can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:CapacityManagement/occAvailabilityCatalog:OccAvailabilityCatalog test_occ_availability_catalog "id"
// ```
type OccAvailabilityCatalog struct {
	pulumi.CustomResourceState

	// The base 64 encoded string corresponding to the catalog file contents.
	Base64encodedCatalogDetails pulumi.StringOutput `pulumi:"base64encodedCatalogDetails"`
	// The different states associated with the availability catalog.
	CatalogState pulumi.StringOutput `pulumi:"catalogState"`
	// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Additional information about the availability catalog.
	Description pulumi.StringOutput `pulumi:"description"`
	// Details about capacity available for different resources in catalog.
	Details OccAvailabilityCatalogDetailArrayOutput `pulumi:"details"`
	// (Updatable) The display name of the availability catalog.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
	MetadataDetails OccAvailabilityCatalogMetadataDetailsOutput `pulumi:"metadataDetails"`
	// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// The OCID of the customer group.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	OccCustomerGroupId pulumi.StringOutput `pulumi:"occCustomerGroupId"`
	// The current lifecycle state of the resource.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The time when the availability catalog was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time when the availability catalog was last updated.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewOccAvailabilityCatalog registers a new resource with the given unique name, arguments, and options.
func NewOccAvailabilityCatalog(ctx *pulumi.Context,
	name string, args *OccAvailabilityCatalogArgs, opts ...pulumi.ResourceOption) (*OccAvailabilityCatalog, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Base64encodedCatalogDetails == nil {
		return nil, errors.New("invalid value for required argument 'Base64encodedCatalogDetails'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	if args.OccCustomerGroupId == nil {
		return nil, errors.New("invalid value for required argument 'OccCustomerGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OccAvailabilityCatalog
	err := ctx.RegisterResource("oci:CapacityManagement/occAvailabilityCatalog:OccAvailabilityCatalog", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOccAvailabilityCatalog gets an existing OccAvailabilityCatalog resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOccAvailabilityCatalog(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OccAvailabilityCatalogState, opts ...pulumi.ResourceOption) (*OccAvailabilityCatalog, error) {
	var resource OccAvailabilityCatalog
	err := ctx.ReadResource("oci:CapacityManagement/occAvailabilityCatalog:OccAvailabilityCatalog", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OccAvailabilityCatalog resources.
type occAvailabilityCatalogState struct {
	// The base 64 encoded string corresponding to the catalog file contents.
	Base64encodedCatalogDetails *string `pulumi:"base64encodedCatalogDetails"`
	// The different states associated with the availability catalog.
	CatalogState *string `pulumi:"catalogState"`
	// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Additional information about the availability catalog.
	Description *string `pulumi:"description"`
	// Details about capacity available for different resources in catalog.
	Details []OccAvailabilityCatalogDetail `pulumi:"details"`
	// (Updatable) The display name of the availability catalog.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
	MetadataDetails *OccAvailabilityCatalogMetadataDetails `pulumi:"metadataDetails"`
	// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
	Namespace *string `pulumi:"namespace"`
	// The OCID of the customer group.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	OccCustomerGroupId *string `pulumi:"occCustomerGroupId"`
	// The current lifecycle state of the resource.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when the availability catalog was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when the availability catalog was last updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type OccAvailabilityCatalogState struct {
	// The base 64 encoded string corresponding to the catalog file contents.
	Base64encodedCatalogDetails pulumi.StringPtrInput
	// The different states associated with the availability catalog.
	CatalogState pulumi.StringPtrInput
	// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Additional information about the availability catalog.
	Description pulumi.StringPtrInput
	// Details about capacity available for different resources in catalog.
	Details OccAvailabilityCatalogDetailArrayInput
	// (Updatable) The display name of the availability catalog.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
	LifecycleDetails pulumi.StringPtrInput
	// Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
	MetadataDetails OccAvailabilityCatalogMetadataDetailsPtrInput
	// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
	Namespace pulumi.StringPtrInput
	// The OCID of the customer group.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	OccCustomerGroupId pulumi.StringPtrInput
	// The current lifecycle state of the resource.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The time when the availability catalog was created.
	TimeCreated pulumi.StringPtrInput
	// The time when the availability catalog was last updated.
	TimeUpdated pulumi.StringPtrInput
}

func (OccAvailabilityCatalogState) ElementType() reflect.Type {
	return reflect.TypeOf((*occAvailabilityCatalogState)(nil)).Elem()
}

type occAvailabilityCatalogArgs struct {
	// The base 64 encoded string corresponding to the catalog file contents.
	Base64encodedCatalogDetails string `pulumi:"base64encodedCatalogDetails"`
	// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Additional information about the availability catalog.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the availability catalog.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
	MetadataDetails *OccAvailabilityCatalogMetadataDetails `pulumi:"metadataDetails"`
	// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
	Namespace string `pulumi:"namespace"`
	// The OCID of the customer group.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	OccCustomerGroupId string `pulumi:"occCustomerGroupId"`
}

// The set of arguments for constructing a OccAvailabilityCatalog resource.
type OccAvailabilityCatalogArgs struct {
	// The base 64 encoded string corresponding to the catalog file contents.
	Base64encodedCatalogDetails pulumi.StringInput
	// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Additional information about the availability catalog.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the availability catalog.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
	MetadataDetails OccAvailabilityCatalogMetadataDetailsPtrInput
	// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
	Namespace pulumi.StringInput
	// The OCID of the customer group.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	OccCustomerGroupId pulumi.StringInput
}

func (OccAvailabilityCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*occAvailabilityCatalogArgs)(nil)).Elem()
}

type OccAvailabilityCatalogInput interface {
	pulumi.Input

	ToOccAvailabilityCatalogOutput() OccAvailabilityCatalogOutput
	ToOccAvailabilityCatalogOutputWithContext(ctx context.Context) OccAvailabilityCatalogOutput
}

func (*OccAvailabilityCatalog) ElementType() reflect.Type {
	return reflect.TypeOf((**OccAvailabilityCatalog)(nil)).Elem()
}

func (i *OccAvailabilityCatalog) ToOccAvailabilityCatalogOutput() OccAvailabilityCatalogOutput {
	return i.ToOccAvailabilityCatalogOutputWithContext(context.Background())
}

func (i *OccAvailabilityCatalog) ToOccAvailabilityCatalogOutputWithContext(ctx context.Context) OccAvailabilityCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccAvailabilityCatalogOutput)
}

// OccAvailabilityCatalogArrayInput is an input type that accepts OccAvailabilityCatalogArray and OccAvailabilityCatalogArrayOutput values.
// You can construct a concrete instance of `OccAvailabilityCatalogArrayInput` via:
//
//	OccAvailabilityCatalogArray{ OccAvailabilityCatalogArgs{...} }
type OccAvailabilityCatalogArrayInput interface {
	pulumi.Input

	ToOccAvailabilityCatalogArrayOutput() OccAvailabilityCatalogArrayOutput
	ToOccAvailabilityCatalogArrayOutputWithContext(context.Context) OccAvailabilityCatalogArrayOutput
}

type OccAvailabilityCatalogArray []OccAvailabilityCatalogInput

func (OccAvailabilityCatalogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OccAvailabilityCatalog)(nil)).Elem()
}

func (i OccAvailabilityCatalogArray) ToOccAvailabilityCatalogArrayOutput() OccAvailabilityCatalogArrayOutput {
	return i.ToOccAvailabilityCatalogArrayOutputWithContext(context.Background())
}

func (i OccAvailabilityCatalogArray) ToOccAvailabilityCatalogArrayOutputWithContext(ctx context.Context) OccAvailabilityCatalogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccAvailabilityCatalogArrayOutput)
}

// OccAvailabilityCatalogMapInput is an input type that accepts OccAvailabilityCatalogMap and OccAvailabilityCatalogMapOutput values.
// You can construct a concrete instance of `OccAvailabilityCatalogMapInput` via:
//
//	OccAvailabilityCatalogMap{ "key": OccAvailabilityCatalogArgs{...} }
type OccAvailabilityCatalogMapInput interface {
	pulumi.Input

	ToOccAvailabilityCatalogMapOutput() OccAvailabilityCatalogMapOutput
	ToOccAvailabilityCatalogMapOutputWithContext(context.Context) OccAvailabilityCatalogMapOutput
}

type OccAvailabilityCatalogMap map[string]OccAvailabilityCatalogInput

func (OccAvailabilityCatalogMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OccAvailabilityCatalog)(nil)).Elem()
}

func (i OccAvailabilityCatalogMap) ToOccAvailabilityCatalogMapOutput() OccAvailabilityCatalogMapOutput {
	return i.ToOccAvailabilityCatalogMapOutputWithContext(context.Background())
}

func (i OccAvailabilityCatalogMap) ToOccAvailabilityCatalogMapOutputWithContext(ctx context.Context) OccAvailabilityCatalogMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccAvailabilityCatalogMapOutput)
}

type OccAvailabilityCatalogOutput struct{ *pulumi.OutputState }

func (OccAvailabilityCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OccAvailabilityCatalog)(nil)).Elem()
}

func (o OccAvailabilityCatalogOutput) ToOccAvailabilityCatalogOutput() OccAvailabilityCatalogOutput {
	return o
}

func (o OccAvailabilityCatalogOutput) ToOccAvailabilityCatalogOutputWithContext(ctx context.Context) OccAvailabilityCatalogOutput {
	return o
}

// The base 64 encoded string corresponding to the catalog file contents.
func (o OccAvailabilityCatalogOutput) Base64encodedCatalogDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringOutput { return v.Base64encodedCatalogDetails }).(pulumi.StringOutput)
}

// The different states associated with the availability catalog.
func (o OccAvailabilityCatalogOutput) CatalogState() pulumi.StringOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringOutput { return v.CatalogState }).(pulumi.StringOutput)
}

// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
func (o OccAvailabilityCatalogOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o OccAvailabilityCatalogOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Additional information about the availability catalog.
func (o OccAvailabilityCatalogOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Details about capacity available for different resources in catalog.
func (o OccAvailabilityCatalogOutput) Details() OccAvailabilityCatalogDetailArrayOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) OccAvailabilityCatalogDetailArrayOutput { return v.Details }).(OccAvailabilityCatalogDetailArrayOutput)
}

// (Updatable) The display name of the availability catalog.
func (o OccAvailabilityCatalogOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o OccAvailabilityCatalogOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
func (o OccAvailabilityCatalogOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
func (o OccAvailabilityCatalogOutput) MetadataDetails() OccAvailabilityCatalogMetadataDetailsOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) OccAvailabilityCatalogMetadataDetailsOutput { return v.MetadataDetails }).(OccAvailabilityCatalogMetadataDetailsOutput)
}

// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
func (o OccAvailabilityCatalogOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// The OCID of the customer group.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o OccAvailabilityCatalogOutput) OccCustomerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringOutput { return v.OccCustomerGroupId }).(pulumi.StringOutput)
}

// The current lifecycle state of the resource.
func (o OccAvailabilityCatalogOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o OccAvailabilityCatalogOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time when the availability catalog was created.
func (o OccAvailabilityCatalogOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the availability catalog was last updated.
func (o OccAvailabilityCatalogOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *OccAvailabilityCatalog) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type OccAvailabilityCatalogArrayOutput struct{ *pulumi.OutputState }

func (OccAvailabilityCatalogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OccAvailabilityCatalog)(nil)).Elem()
}

func (o OccAvailabilityCatalogArrayOutput) ToOccAvailabilityCatalogArrayOutput() OccAvailabilityCatalogArrayOutput {
	return o
}

func (o OccAvailabilityCatalogArrayOutput) ToOccAvailabilityCatalogArrayOutputWithContext(ctx context.Context) OccAvailabilityCatalogArrayOutput {
	return o
}

func (o OccAvailabilityCatalogArrayOutput) Index(i pulumi.IntInput) OccAvailabilityCatalogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OccAvailabilityCatalog {
		return vs[0].([]*OccAvailabilityCatalog)[vs[1].(int)]
	}).(OccAvailabilityCatalogOutput)
}

type OccAvailabilityCatalogMapOutput struct{ *pulumi.OutputState }

func (OccAvailabilityCatalogMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OccAvailabilityCatalog)(nil)).Elem()
}

func (o OccAvailabilityCatalogMapOutput) ToOccAvailabilityCatalogMapOutput() OccAvailabilityCatalogMapOutput {
	return o
}

func (o OccAvailabilityCatalogMapOutput) ToOccAvailabilityCatalogMapOutputWithContext(ctx context.Context) OccAvailabilityCatalogMapOutput {
	return o
}

func (o OccAvailabilityCatalogMapOutput) MapIndex(k pulumi.StringInput) OccAvailabilityCatalogOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OccAvailabilityCatalog {
		return vs[0].(map[string]*OccAvailabilityCatalog)[vs[1].(string)]
	}).(OccAvailabilityCatalogOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OccAvailabilityCatalogInput)(nil)).Elem(), &OccAvailabilityCatalog{})
	pulumi.RegisterInputType(reflect.TypeOf((*OccAvailabilityCatalogArrayInput)(nil)).Elem(), OccAvailabilityCatalogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OccAvailabilityCatalogMapInput)(nil)).Elem(), OccAvailabilityCatalogMap{})
	pulumi.RegisterOutputType(OccAvailabilityCatalogOutput{})
	pulumi.RegisterOutputType(OccAvailabilityCatalogArrayOutput{})
	pulumi.RegisterOutputType(OccAvailabilityCatalogMapOutput{})
}
