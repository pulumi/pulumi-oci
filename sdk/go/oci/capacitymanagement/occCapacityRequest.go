// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package capacitymanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Occ Capacity Request resource in Oracle Cloud Infrastructure Capacity Management service.
//
// Create Capacity Request.
//
//	Updates the OccCapacityRequest by evaluating a sequence of instructions.
//
// ## Import
//
// OccCapacityRequests can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:CapacityManagement/occCapacityRequest:OccCapacityRequest test_occ_capacity_request "id"
// ```
type OccCapacityRequest struct {
	pulumi.CustomResourceState

	// The availability domain (AD) for which the capacity request is made. If this is specified then the capacity will be validated and fulfilled within the scope of this AD.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
	DateExpectedCapacityHandover pulumi.StringOutput `pulumi:"dateExpectedCapacityHandover"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// Meaningful text about the capacity request.
	Description pulumi.StringOutput `pulumi:"description"`
	// A list of different resources requested by the user.
	Details OccCapacityRequestDetailArrayOutput `pulumi:"details"`
	// (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// The OCID of the availability catalog against which capacity request is made.
	OccAvailabilityCatalogId pulumi.StringOutput `pulumi:"occAvailabilityCatalogId"`
	// The OCID of the customer group to which this customer belongs to.
	OccCustomerGroupId pulumi.StringOutput `pulumi:"occCustomerGroupId"`
	// (Updatable)
	PatchOperations OccCapacityRequestPatchOperationArrayOutput `pulumi:"patchOperations"`
	// The name of the region for which the capacity request is made.
	Region pulumi.StringOutput `pulumi:"region"`
	// (Updatable) The subset of request states available for creating the capacity request.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RequestState pulumi.StringOutput `pulumi:"requestState"`
	// The current lifecycle state of the resource.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The time when the capacity request was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time when the capacity request was updated.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewOccCapacityRequest registers a new resource with the given unique name, arguments, and options.
func NewOccCapacityRequest(ctx *pulumi.Context,
	name string, args *OccCapacityRequestArgs, opts ...pulumi.ResourceOption) (*OccCapacityRequest, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityDomain == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityDomain'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DateExpectedCapacityHandover == nil {
		return nil, errors.New("invalid value for required argument 'DateExpectedCapacityHandover'")
	}
	if args.Details == nil {
		return nil, errors.New("invalid value for required argument 'Details'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	if args.OccAvailabilityCatalogId == nil {
		return nil, errors.New("invalid value for required argument 'OccAvailabilityCatalogId'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OccCapacityRequest
	err := ctx.RegisterResource("oci:CapacityManagement/occCapacityRequest:OccCapacityRequest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOccCapacityRequest gets an existing OccCapacityRequest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOccCapacityRequest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OccCapacityRequestState, opts ...pulumi.ResourceOption) (*OccCapacityRequest, error) {
	var resource OccCapacityRequest
	err := ctx.ReadResource("oci:CapacityManagement/occCapacityRequest:OccCapacityRequest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OccCapacityRequest resources.
type occCapacityRequestState struct {
	// The availability domain (AD) for which the capacity request is made. If this is specified then the capacity will be validated and fulfilled within the scope of this AD.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
	CompartmentId *string `pulumi:"compartmentId"`
	// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
	DateExpectedCapacityHandover *string `pulumi:"dateExpectedCapacityHandover"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Meaningful text about the capacity request.
	Description *string `pulumi:"description"`
	// A list of different resources requested by the user.
	Details []OccCapacityRequestDetail `pulumi:"details"`
	// (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
	Namespace *string `pulumi:"namespace"`
	// The OCID of the availability catalog against which capacity request is made.
	OccAvailabilityCatalogId *string `pulumi:"occAvailabilityCatalogId"`
	// The OCID of the customer group to which this customer belongs to.
	OccCustomerGroupId *string `pulumi:"occCustomerGroupId"`
	// (Updatable)
	PatchOperations []OccCapacityRequestPatchOperation `pulumi:"patchOperations"`
	// The name of the region for which the capacity request is made.
	Region *string `pulumi:"region"`
	// (Updatable) The subset of request states available for creating the capacity request.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RequestState *string `pulumi:"requestState"`
	// The current lifecycle state of the resource.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when the capacity request was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when the capacity request was updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type OccCapacityRequestState struct {
	// The availability domain (AD) for which the capacity request is made. If this is specified then the capacity will be validated and fulfilled within the scope of this AD.
	AvailabilityDomain pulumi.StringPtrInput
	// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
	CompartmentId pulumi.StringPtrInput
	// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
	DateExpectedCapacityHandover pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// Meaningful text about the capacity request.
	Description pulumi.StringPtrInput
	// A list of different resources requested by the user.
	Details OccCapacityRequestDetailArrayInput
	// (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
	LifecycleDetails pulumi.StringPtrInput
	// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
	Namespace pulumi.StringPtrInput
	// The OCID of the availability catalog against which capacity request is made.
	OccAvailabilityCatalogId pulumi.StringPtrInput
	// The OCID of the customer group to which this customer belongs to.
	OccCustomerGroupId pulumi.StringPtrInput
	// (Updatable)
	PatchOperations OccCapacityRequestPatchOperationArrayInput
	// The name of the region for which the capacity request is made.
	Region pulumi.StringPtrInput
	// (Updatable) The subset of request states available for creating the capacity request.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RequestState pulumi.StringPtrInput
	// The current lifecycle state of the resource.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The time when the capacity request was created.
	TimeCreated pulumi.StringPtrInput
	// The time when the capacity request was updated.
	TimeUpdated pulumi.StringPtrInput
}

func (OccCapacityRequestState) ElementType() reflect.Type {
	return reflect.TypeOf((*occCapacityRequestState)(nil)).Elem()
}

type occCapacityRequestArgs struct {
	// The availability domain (AD) for which the capacity request is made. If this is specified then the capacity will be validated and fulfilled within the scope of this AD.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
	CompartmentId string `pulumi:"compartmentId"`
	// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
	DateExpectedCapacityHandover string `pulumi:"dateExpectedCapacityHandover"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Meaningful text about the capacity request.
	Description *string `pulumi:"description"`
	// A list of different resources requested by the user.
	Details []OccCapacityRequestDetail `pulumi:"details"`
	// (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
	Namespace string `pulumi:"namespace"`
	// The OCID of the availability catalog against which capacity request is made.
	OccAvailabilityCatalogId string `pulumi:"occAvailabilityCatalogId"`
	// (Updatable)
	PatchOperations []OccCapacityRequestPatchOperation `pulumi:"patchOperations"`
	// The name of the region for which the capacity request is made.
	Region string `pulumi:"region"`
	// (Updatable) The subset of request states available for creating the capacity request.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RequestState *string `pulumi:"requestState"`
}

// The set of arguments for constructing a OccCapacityRequest resource.
type OccCapacityRequestArgs struct {
	// The availability domain (AD) for which the capacity request is made. If this is specified then the capacity will be validated and fulfilled within the scope of this AD.
	AvailabilityDomain pulumi.StringInput
	// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
	CompartmentId pulumi.StringInput
	// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
	DateExpectedCapacityHandover pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// Meaningful text about the capacity request.
	Description pulumi.StringPtrInput
	// A list of different resources requested by the user.
	Details OccCapacityRequestDetailArrayInput
	// (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
	LifecycleDetails pulumi.StringPtrInput
	// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
	Namespace pulumi.StringInput
	// The OCID of the availability catalog against which capacity request is made.
	OccAvailabilityCatalogId pulumi.StringInput
	// (Updatable)
	PatchOperations OccCapacityRequestPatchOperationArrayInput
	// The name of the region for which the capacity request is made.
	Region pulumi.StringInput
	// (Updatable) The subset of request states available for creating the capacity request.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RequestState pulumi.StringPtrInput
}

func (OccCapacityRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*occCapacityRequestArgs)(nil)).Elem()
}

type OccCapacityRequestInput interface {
	pulumi.Input

	ToOccCapacityRequestOutput() OccCapacityRequestOutput
	ToOccCapacityRequestOutputWithContext(ctx context.Context) OccCapacityRequestOutput
}

func (*OccCapacityRequest) ElementType() reflect.Type {
	return reflect.TypeOf((**OccCapacityRequest)(nil)).Elem()
}

func (i *OccCapacityRequest) ToOccCapacityRequestOutput() OccCapacityRequestOutput {
	return i.ToOccCapacityRequestOutputWithContext(context.Background())
}

func (i *OccCapacityRequest) ToOccCapacityRequestOutputWithContext(ctx context.Context) OccCapacityRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccCapacityRequestOutput)
}

// OccCapacityRequestArrayInput is an input type that accepts OccCapacityRequestArray and OccCapacityRequestArrayOutput values.
// You can construct a concrete instance of `OccCapacityRequestArrayInput` via:
//
//	OccCapacityRequestArray{ OccCapacityRequestArgs{...} }
type OccCapacityRequestArrayInput interface {
	pulumi.Input

	ToOccCapacityRequestArrayOutput() OccCapacityRequestArrayOutput
	ToOccCapacityRequestArrayOutputWithContext(context.Context) OccCapacityRequestArrayOutput
}

type OccCapacityRequestArray []OccCapacityRequestInput

func (OccCapacityRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OccCapacityRequest)(nil)).Elem()
}

func (i OccCapacityRequestArray) ToOccCapacityRequestArrayOutput() OccCapacityRequestArrayOutput {
	return i.ToOccCapacityRequestArrayOutputWithContext(context.Background())
}

func (i OccCapacityRequestArray) ToOccCapacityRequestArrayOutputWithContext(ctx context.Context) OccCapacityRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccCapacityRequestArrayOutput)
}

// OccCapacityRequestMapInput is an input type that accepts OccCapacityRequestMap and OccCapacityRequestMapOutput values.
// You can construct a concrete instance of `OccCapacityRequestMapInput` via:
//
//	OccCapacityRequestMap{ "key": OccCapacityRequestArgs{...} }
type OccCapacityRequestMapInput interface {
	pulumi.Input

	ToOccCapacityRequestMapOutput() OccCapacityRequestMapOutput
	ToOccCapacityRequestMapOutputWithContext(context.Context) OccCapacityRequestMapOutput
}

type OccCapacityRequestMap map[string]OccCapacityRequestInput

func (OccCapacityRequestMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OccCapacityRequest)(nil)).Elem()
}

func (i OccCapacityRequestMap) ToOccCapacityRequestMapOutput() OccCapacityRequestMapOutput {
	return i.ToOccCapacityRequestMapOutputWithContext(context.Background())
}

func (i OccCapacityRequestMap) ToOccCapacityRequestMapOutputWithContext(ctx context.Context) OccCapacityRequestMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccCapacityRequestMapOutput)
}

type OccCapacityRequestOutput struct{ *pulumi.OutputState }

func (OccCapacityRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OccCapacityRequest)(nil)).Elem()
}

func (o OccCapacityRequestOutput) ToOccCapacityRequestOutput() OccCapacityRequestOutput {
	return o
}

func (o OccCapacityRequestOutput) ToOccCapacityRequestOutputWithContext(ctx context.Context) OccCapacityRequestOutput {
	return o
}

// The availability domain (AD) for which the capacity request is made. If this is specified then the capacity will be validated and fulfilled within the scope of this AD.
func (o OccCapacityRequestOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
func (o OccCapacityRequestOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
func (o OccCapacityRequestOutput) DateExpectedCapacityHandover() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.DateExpectedCapacityHandover }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o OccCapacityRequestOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Meaningful text about the capacity request.
func (o OccCapacityRequestOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// A list of different resources requested by the user.
func (o OccCapacityRequestOutput) Details() OccCapacityRequestDetailArrayOutput {
	return o.ApplyT(func(v *OccCapacityRequest) OccCapacityRequestDetailArrayOutput { return v.Details }).(OccCapacityRequestDetailArrayOutput)
}

// (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o OccCapacityRequestOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o OccCapacityRequestOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
func (o OccCapacityRequestOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
func (o OccCapacityRequestOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// The OCID of the availability catalog against which capacity request is made.
func (o OccCapacityRequestOutput) OccAvailabilityCatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.OccAvailabilityCatalogId }).(pulumi.StringOutput)
}

// The OCID of the customer group to which this customer belongs to.
func (o OccCapacityRequestOutput) OccCustomerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.OccCustomerGroupId }).(pulumi.StringOutput)
}

// (Updatable)
func (o OccCapacityRequestOutput) PatchOperations() OccCapacityRequestPatchOperationArrayOutput {
	return o.ApplyT(func(v *OccCapacityRequest) OccCapacityRequestPatchOperationArrayOutput { return v.PatchOperations }).(OccCapacityRequestPatchOperationArrayOutput)
}

// The name of the region for which the capacity request is made.
func (o OccCapacityRequestOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// (Updatable) The subset of request states available for creating the capacity request.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o OccCapacityRequestOutput) RequestState() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.RequestState }).(pulumi.StringOutput)
}

// The current lifecycle state of the resource.
func (o OccCapacityRequestOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o OccCapacityRequestOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time when the capacity request was created.
func (o OccCapacityRequestOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the capacity request was updated.
func (o OccCapacityRequestOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *OccCapacityRequest) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type OccCapacityRequestArrayOutput struct{ *pulumi.OutputState }

func (OccCapacityRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OccCapacityRequest)(nil)).Elem()
}

func (o OccCapacityRequestArrayOutput) ToOccCapacityRequestArrayOutput() OccCapacityRequestArrayOutput {
	return o
}

func (o OccCapacityRequestArrayOutput) ToOccCapacityRequestArrayOutputWithContext(ctx context.Context) OccCapacityRequestArrayOutput {
	return o
}

func (o OccCapacityRequestArrayOutput) Index(i pulumi.IntInput) OccCapacityRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OccCapacityRequest {
		return vs[0].([]*OccCapacityRequest)[vs[1].(int)]
	}).(OccCapacityRequestOutput)
}

type OccCapacityRequestMapOutput struct{ *pulumi.OutputState }

func (OccCapacityRequestMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OccCapacityRequest)(nil)).Elem()
}

func (o OccCapacityRequestMapOutput) ToOccCapacityRequestMapOutput() OccCapacityRequestMapOutput {
	return o
}

func (o OccCapacityRequestMapOutput) ToOccCapacityRequestMapOutputWithContext(ctx context.Context) OccCapacityRequestMapOutput {
	return o
}

func (o OccCapacityRequestMapOutput) MapIndex(k pulumi.StringInput) OccCapacityRequestOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OccCapacityRequest {
		return vs[0].(map[string]*OccCapacityRequest)[vs[1].(string)]
	}).(OccCapacityRequestOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OccCapacityRequestInput)(nil)).Elem(), &OccCapacityRequest{})
	pulumi.RegisterInputType(reflect.TypeOf((*OccCapacityRequestArrayInput)(nil)).Elem(), OccCapacityRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OccCapacityRequestMapInput)(nil)).Elem(), OccCapacityRequestMap{})
	pulumi.RegisterOutputType(OccCapacityRequestOutput{})
	pulumi.RegisterOutputType(OccCapacityRequestArrayOutput{})
	pulumi.RegisterOutputType(OccCapacityRequestMapOutput{})
}
