// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package certificatesmanagement

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Certificate resource in Oracle Cloud Infrastructure Certificates Management service.
//
// Creates a new certificate according to the details of the request.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/CertificatesManagement"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := CertificatesManagement.NewCertificate(ctx, "testCertificate", &CertificatesManagement.CertificateArgs{
// 			CertificateConfig: &certificatesmanagement.CertificateCertificateConfigArgs{
// 				ConfigType:                   pulumi.Any(_var.Certificate_certificate_config_config_type),
// 				CertChainPem:                 _var.Certificate_certificate_config_cert_chain_pem,
// 				CertificatePem:               _var.Certificate_certificate_config_certificate_pem,
// 				CertificateProfileType:       pulumi.Any(_var.Certificate_certificate_config_certificate_profile_type),
// 				CsrPem:                       pulumi.Any(_var.Certificate_certificate_config_csr_pem),
// 				IssuerCertificateAuthorityId: pulumi.Any(oci_certificates_management_certificate_authority.Test_certificate_authority.Id),
// 				KeyAlgorithm:                 pulumi.Any(_var.Certificate_certificate_config_key_algorithm),
// 				PrivateKeyPem:                _var.Certificate_certificate_config_private_key_pem,
// 				PrivateKeyPemPassphrase:      _var.Certificate_certificate_config_private_key_pem_passphrase,
// 				SignatureAlgorithm:           pulumi.Any(_var.Certificate_certificate_config_signature_algorithm),
// 				Subject: &certificatesmanagement.CertificateCertificateConfigSubjectArgs{
// 					CommonName:                 pulumi.Any(_var.Certificate_certificate_config_subject_common_name),
// 					Country:                    pulumi.Any(_var.Certificate_certificate_config_subject_country),
// 					DistinguishedNameQualifier: pulumi.Any(_var.Certificate_certificate_config_subject_distinguished_name_qualifier),
// 					DomainComponent:            pulumi.Any(_var.Certificate_certificate_config_subject_domain_component),
// 					GenerationQualifier:        pulumi.Any(_var.Certificate_certificate_config_subject_generation_qualifier),
// 					GivenName:                  pulumi.Any(_var.Certificate_certificate_config_subject_given_name),
// 					Initials:                   pulumi.Any(_var.Certificate_certificate_config_subject_initials),
// 					LocalityName:               pulumi.Any(_var.Certificate_certificate_config_subject_locality_name),
// 					Organization:               pulumi.Any(_var.Certificate_certificate_config_subject_organization),
// 					OrganizationalUnit:         pulumi.Any(_var.Certificate_certificate_config_subject_organizational_unit),
// 					Pseudonym:                  pulumi.Any(_var.Certificate_certificate_config_subject_pseudonym),
// 					SerialNumber:               pulumi.Any(_var.Certificate_certificate_config_subject_serial_number),
// 					StateOrProvinceName:        pulumi.Any(_var.Certificate_certificate_config_subject_state_or_province_name),
// 					Street:                     pulumi.Any(_var.Certificate_certificate_config_subject_street),
// 					Surname:                    pulumi.Any(_var.Certificate_certificate_config_subject_surname),
// 					Title:                      pulumi.Any(_var.Certificate_certificate_config_subject_title),
// 					UserId:                     pulumi.Any(oci_identity_user.Test_user.Id),
// 				},
// 				SubjectAlternativeNames: certificatesmanagement.CertificateCertificateConfigSubjectAlternativeNameArray{
// 					&certificatesmanagement.CertificateCertificateConfigSubjectAlternativeNameArgs{
// 						Type:  pulumi.Any(_var.Certificate_certificate_config_subject_alternative_names_type),
// 						Value: pulumi.Any(_var.Certificate_certificate_config_subject_alternative_names_value),
// 					},
// 				},
// 				Validity: &certificatesmanagement.CertificateCertificateConfigValidityArgs{
// 					TimeOfValidityNotAfter:  pulumi.Any(_var.Certificate_certificate_config_validity_time_of_validity_not_after),
// 					TimeOfValidityNotBefore: pulumi.Any(_var.Certificate_certificate_config_validity_time_of_validity_not_before),
// 				},
// 				VersionName: pulumi.Any(_var.Certificate_certificate_config_version_name),
// 			},
// 			CompartmentId: pulumi.Any(_var.Compartment_id),
// 			CertificateRules: certificatesmanagement.CertificateCertificateRuleArray{
// 				&certificatesmanagement.CertificateCertificateRuleArgs{
// 					AdvanceRenewalPeriod: pulumi.Any(_var.Certificate_certificate_rules_advance_renewal_period),
// 					RenewalInterval:      pulumi.Any(_var.Certificate_certificate_rules_renewal_interval),
// 					RuleType:             pulumi.Any(_var.Certificate_certificate_rules_rule_type),
// 				},
// 			},
// 			DefinedTags: pulumi.AnyMap{
// 				"Operations.CostCenter": pulumi.Any("42"),
// 			},
// 			Description: pulumi.Any(_var.Certificate_description),
// 			FreeformTags: pulumi.AnyMap{
// 				"Department": pulumi.Any("Finance"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Certificates can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:CertificatesManagement/certificate:Certificate test_certificate "id"
// ```
type Certificate struct {
	pulumi.CustomResourceState

	// (Updatable) The details of the contents of the certificate and certificate metadata.
	CertificateConfig CertificateCertificateConfigOutput `pulumi:"certificateConfig"`
	// The name of the profile used to create the certificate, which depends on the type of certificate you need.
	CertificateProfileType pulumi.StringOutput `pulumi:"certificateProfileType"`
	// The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails CertificateCertificateRevocationListDetailArrayOutput `pulumi:"certificateRevocationListDetails"`
	// (Updatable) An optional list of rules that control how the certificate is used and managed.
	CertificateRules CertificateCertificateRuleArrayOutput `pulumi:"certificateRules"`
	// (Updatable) The OCID of the compartment where you want to create the certificate.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The origin of the certificate.
	ConfigType pulumi.StringOutput `pulumi:"configType"`
	// The details of the certificate version. This object does not contain the certificate contents.
	CurrentVersions CertificateCurrentVersionArrayOutput `pulumi:"currentVersions"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A brief description of the certificate. Avoid entering confidential information.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The OCID of the private CA.
	IssuerCertificateAuthorityId pulumi.StringOutput `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm to use to create key pairs.
	KeyAlgorithm pulumi.StringOutput `pulumi:"keyAlgorithm"`
	// Additional information about the current lifecycle state of the certificate.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	Name pulumi.StringOutput `pulumi:"name"`
	// The algorithm to use to sign the public key certificate.
	SignatureAlgorithm pulumi.StringOutput `pulumi:"signatureAlgorithm"`
	// The current lifecycle state of the certificate.
	State pulumi.StringOutput `pulumi:"state"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects CertificateSubjectArrayOutput `pulumi:"subjects"`
	// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringOutput `pulumi:"timeOfDeletion"`
}

// NewCertificate registers a new resource with the given unique name, arguments, and options.
func NewCertificate(ctx *pulumi.Context,
	name string, args *CertificateArgs, opts ...pulumi.ResourceOption) (*Certificate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CertificateConfig == nil {
		return nil, errors.New("invalid value for required argument 'CertificateConfig'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	var resource Certificate
	err := ctx.RegisterResource("oci:CertificatesManagement/certificate:Certificate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCertificate gets an existing Certificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCertificate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CertificateState, opts ...pulumi.ResourceOption) (*Certificate, error) {
	var resource Certificate
	err := ctx.ReadResource("oci:CertificatesManagement/certificate:Certificate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Certificate resources.
type certificateState struct {
	// (Updatable) The details of the contents of the certificate and certificate metadata.
	CertificateConfig *CertificateCertificateConfig `pulumi:"certificateConfig"`
	// The name of the profile used to create the certificate, which depends on the type of certificate you need.
	CertificateProfileType *string `pulumi:"certificateProfileType"`
	// The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails []CertificateCertificateRevocationListDetail `pulumi:"certificateRevocationListDetails"`
	// (Updatable) An optional list of rules that control how the certificate is used and managed.
	CertificateRules []CertificateCertificateRule `pulumi:"certificateRules"`
	// (Updatable) The OCID of the compartment where you want to create the certificate.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The origin of the certificate.
	ConfigType *string `pulumi:"configType"`
	// The details of the certificate version. This object does not contain the certificate contents.
	CurrentVersions []CertificateCurrentVersion `pulumi:"currentVersions"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A brief description of the certificate. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the private CA.
	IssuerCertificateAuthorityId *string `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm to use to create key pairs.
	KeyAlgorithm *string `pulumi:"keyAlgorithm"`
	// Additional information about the current lifecycle state of the certificate.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	Name *string `pulumi:"name"`
	// The algorithm to use to sign the public key certificate.
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// The current lifecycle state of the certificate.
	State *string `pulumi:"state"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects []CertificateSubject `pulumi:"subjects"`
	// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion *string `pulumi:"timeOfDeletion"`
}

type CertificateState struct {
	// (Updatable) The details of the contents of the certificate and certificate metadata.
	CertificateConfig CertificateCertificateConfigPtrInput
	// The name of the profile used to create the certificate, which depends on the type of certificate you need.
	CertificateProfileType pulumi.StringPtrInput
	// The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails CertificateCertificateRevocationListDetailArrayInput
	// (Updatable) An optional list of rules that control how the certificate is used and managed.
	CertificateRules CertificateCertificateRuleArrayInput
	// (Updatable) The OCID of the compartment where you want to create the certificate.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The origin of the certificate.
	ConfigType pulumi.StringPtrInput
	// The details of the certificate version. This object does not contain the certificate contents.
	CurrentVersions CertificateCurrentVersionArrayInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A brief description of the certificate. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The OCID of the private CA.
	IssuerCertificateAuthorityId pulumi.StringPtrInput
	// The algorithm to use to create key pairs.
	KeyAlgorithm pulumi.StringPtrInput
	// Additional information about the current lifecycle state of the certificate.
	LifecycleDetails pulumi.StringPtrInput
	// A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	Name pulumi.StringPtrInput
	// The algorithm to use to sign the public key certificate.
	SignatureAlgorithm pulumi.StringPtrInput
	// The current lifecycle state of the certificate.
	State pulumi.StringPtrInput
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects CertificateSubjectArrayInput
	// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringPtrInput
}

func (CertificateState) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateState)(nil)).Elem()
}

type certificateArgs struct {
	// (Updatable) The details of the contents of the certificate and certificate metadata.
	CertificateConfig CertificateCertificateConfig `pulumi:"certificateConfig"`
	// (Updatable) An optional list of rules that control how the certificate is used and managed.
	CertificateRules []CertificateCertificateRule `pulumi:"certificateRules"`
	// (Updatable) The OCID of the compartment where you want to create the certificate.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A brief description of the certificate. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Certificate resource.
type CertificateArgs struct {
	// (Updatable) The details of the contents of the certificate and certificate metadata.
	CertificateConfig CertificateCertificateConfigInput
	// (Updatable) An optional list of rules that control how the certificate is used and managed.
	CertificateRules CertificateCertificateRuleArrayInput
	// (Updatable) The OCID of the compartment where you want to create the certificate.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A brief description of the certificate. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	Name pulumi.StringPtrInput
}

func (CertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateArgs)(nil)).Elem()
}

type CertificateInput interface {
	pulumi.Input

	ToCertificateOutput() CertificateOutput
	ToCertificateOutputWithContext(ctx context.Context) CertificateOutput
}

func (*Certificate) ElementType() reflect.Type {
	return reflect.TypeOf((**Certificate)(nil)).Elem()
}

func (i *Certificate) ToCertificateOutput() CertificateOutput {
	return i.ToCertificateOutputWithContext(context.Background())
}

func (i *Certificate) ToCertificateOutputWithContext(ctx context.Context) CertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOutput)
}

// CertificateArrayInput is an input type that accepts CertificateArray and CertificateArrayOutput values.
// You can construct a concrete instance of `CertificateArrayInput` via:
//
//          CertificateArray{ CertificateArgs{...} }
type CertificateArrayInput interface {
	pulumi.Input

	ToCertificateArrayOutput() CertificateArrayOutput
	ToCertificateArrayOutputWithContext(context.Context) CertificateArrayOutput
}

type CertificateArray []CertificateInput

func (CertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Certificate)(nil)).Elem()
}

func (i CertificateArray) ToCertificateArrayOutput() CertificateArrayOutput {
	return i.ToCertificateArrayOutputWithContext(context.Background())
}

func (i CertificateArray) ToCertificateArrayOutputWithContext(ctx context.Context) CertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateArrayOutput)
}

// CertificateMapInput is an input type that accepts CertificateMap and CertificateMapOutput values.
// You can construct a concrete instance of `CertificateMapInput` via:
//
//          CertificateMap{ "key": CertificateArgs{...} }
type CertificateMapInput interface {
	pulumi.Input

	ToCertificateMapOutput() CertificateMapOutput
	ToCertificateMapOutputWithContext(context.Context) CertificateMapOutput
}

type CertificateMap map[string]CertificateInput

func (CertificateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Certificate)(nil)).Elem()
}

func (i CertificateMap) ToCertificateMapOutput() CertificateMapOutput {
	return i.ToCertificateMapOutputWithContext(context.Background())
}

func (i CertificateMap) ToCertificateMapOutputWithContext(ctx context.Context) CertificateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateMapOutput)
}

type CertificateOutput struct{ *pulumi.OutputState }

func (CertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Certificate)(nil)).Elem()
}

func (o CertificateOutput) ToCertificateOutput() CertificateOutput {
	return o
}

func (o CertificateOutput) ToCertificateOutputWithContext(ctx context.Context) CertificateOutput {
	return o
}

type CertificateArrayOutput struct{ *pulumi.OutputState }

func (CertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Certificate)(nil)).Elem()
}

func (o CertificateArrayOutput) ToCertificateArrayOutput() CertificateArrayOutput {
	return o
}

func (o CertificateArrayOutput) ToCertificateArrayOutputWithContext(ctx context.Context) CertificateArrayOutput {
	return o
}

func (o CertificateArrayOutput) Index(i pulumi.IntInput) CertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Certificate {
		return vs[0].([]*Certificate)[vs[1].(int)]
	}).(CertificateOutput)
}

type CertificateMapOutput struct{ *pulumi.OutputState }

func (CertificateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Certificate)(nil)).Elem()
}

func (o CertificateMapOutput) ToCertificateMapOutput() CertificateMapOutput {
	return o
}

func (o CertificateMapOutput) ToCertificateMapOutputWithContext(ctx context.Context) CertificateMapOutput {
	return o
}

func (o CertificateMapOutput) MapIndex(k pulumi.StringInput) CertificateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Certificate {
		return vs[0].(map[string]*Certificate)[vs[1].(string)]
	}).(CertificateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateInput)(nil)).Elem(), &Certificate{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateArrayInput)(nil)).Elem(), CertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateMapInput)(nil)).Elem(), CertificateMap{})
	pulumi.RegisterOutputType(CertificateOutput{})
	pulumi.RegisterOutputType(CertificateArrayOutput{})
	pulumi.RegisterOutputType(CertificateMapOutput{})
}
