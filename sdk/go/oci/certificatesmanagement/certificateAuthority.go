// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package certificatesmanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Certificate Authority resource in Oracle Cloud Infrastructure Certificates Management service.
//
// Creates a new certificate authority (CA) according to the details of the request.
//
// ## Import
//
// CertificateAuthorities can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:CertificatesManagement/certificateAuthority:CertificateAuthority test_certificate_authority "id"
// ```
type CertificateAuthority struct {
	pulumi.CustomResourceState

	// (Updatable) The configuration details for creating a certificate authority (CA).
	CertificateAuthorityConfig CertificateAuthorityCertificateAuthorityConfigOutput `pulumi:"certificateAuthorityConfig"`
	// (Updatable) A list of rules that control how the CA is used and managed.
	CertificateAuthorityRules CertificateAuthorityCertificateAuthorityRuleArrayOutput `pulumi:"certificateAuthorityRules"`
	// (Updatable) The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails CertificateAuthorityCertificateRevocationListDetailsPtrOutput `pulumi:"certificateRevocationListDetails"`
	// (Updatable) The compartment in which you want to create the CA.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The origin of the CA.
	ConfigType pulumi.StringOutput `pulumi:"configType"`
	// The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
	CurrentVersions CertificateAuthorityCurrentVersionArrayOutput `pulumi:"currentVersions"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A brief description of the CA.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
	IssuerCertificateAuthorityId pulumi.StringOutput `pulumi:"issuerCertificateAuthorityId"`
	// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// Additional information about the current CA lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name pulumi.StringOutput `pulumi:"name"`
	// The algorithm used to sign public key certificates that the CA issues.
	SigningAlgorithm pulumi.StringOutput `pulumi:"signingAlgorithm"`
	// The current lifecycle state of the certificate authority.
	State pulumi.StringOutput `pulumi:"state"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects CertificateAuthoritySubjectArrayOutput `pulumi:"subjects"`
	// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringOutput `pulumi:"timeOfDeletion"`
}

// NewCertificateAuthority registers a new resource with the given unique name, arguments, and options.
func NewCertificateAuthority(ctx *pulumi.Context,
	name string, args *CertificateAuthorityArgs, opts ...pulumi.ResourceOption) (*CertificateAuthority, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CertificateAuthorityConfig == nil {
		return nil, errors.New("invalid value for required argument 'CertificateAuthorityConfig'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.KmsKeyId == nil {
		return nil, errors.New("invalid value for required argument 'KmsKeyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CertificateAuthority
	err := ctx.RegisterResource("oci:CertificatesManagement/certificateAuthority:CertificateAuthority", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCertificateAuthority gets an existing CertificateAuthority resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCertificateAuthority(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CertificateAuthorityState, opts ...pulumi.ResourceOption) (*CertificateAuthority, error) {
	var resource CertificateAuthority
	err := ctx.ReadResource("oci:CertificatesManagement/certificateAuthority:CertificateAuthority", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CertificateAuthority resources.
type certificateAuthorityState struct {
	// (Updatable) The configuration details for creating a certificate authority (CA).
	CertificateAuthorityConfig *CertificateAuthorityCertificateAuthorityConfig `pulumi:"certificateAuthorityConfig"`
	// (Updatable) A list of rules that control how the CA is used and managed.
	CertificateAuthorityRules []CertificateAuthorityCertificateAuthorityRule `pulumi:"certificateAuthorityRules"`
	// (Updatable) The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails *CertificateAuthorityCertificateRevocationListDetails `pulumi:"certificateRevocationListDetails"`
	// (Updatable) The compartment in which you want to create the CA.
	CompartmentId *string `pulumi:"compartmentId"`
	// The origin of the CA.
	ConfigType *string `pulumi:"configType"`
	// The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
	CurrentVersions []CertificateAuthorityCurrentVersion `pulumi:"currentVersions"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A brief description of the CA.
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
	IssuerCertificateAuthorityId *string `pulumi:"issuerCertificateAuthorityId"`
	// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Additional information about the current CA lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name *string `pulumi:"name"`
	// The algorithm used to sign public key certificates that the CA issues.
	SigningAlgorithm *string `pulumi:"signingAlgorithm"`
	// The current lifecycle state of the certificate authority.
	State *string `pulumi:"state"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects []CertificateAuthoritySubject `pulumi:"subjects"`
	// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion *string `pulumi:"timeOfDeletion"`
}

type CertificateAuthorityState struct {
	// (Updatable) The configuration details for creating a certificate authority (CA).
	CertificateAuthorityConfig CertificateAuthorityCertificateAuthorityConfigPtrInput
	// (Updatable) A list of rules that control how the CA is used and managed.
	CertificateAuthorityRules CertificateAuthorityCertificateAuthorityRuleArrayInput
	// (Updatable) The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails CertificateAuthorityCertificateRevocationListDetailsPtrInput
	// (Updatable) The compartment in which you want to create the CA.
	CompartmentId pulumi.StringPtrInput
	// The origin of the CA.
	ConfigType pulumi.StringPtrInput
	// The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
	CurrentVersions CertificateAuthorityCurrentVersionArrayInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A brief description of the CA.
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
	IssuerCertificateAuthorityId pulumi.StringPtrInput
	// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
	KmsKeyId pulumi.StringPtrInput
	// Additional information about the current CA lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name pulumi.StringPtrInput
	// The algorithm used to sign public key certificates that the CA issues.
	SigningAlgorithm pulumi.StringPtrInput
	// The current lifecycle state of the certificate authority.
	State pulumi.StringPtrInput
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects CertificateAuthoritySubjectArrayInput
	// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringPtrInput
}

func (CertificateAuthorityState) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateAuthorityState)(nil)).Elem()
}

type certificateAuthorityArgs struct {
	// (Updatable) The configuration details for creating a certificate authority (CA).
	CertificateAuthorityConfig CertificateAuthorityCertificateAuthorityConfig `pulumi:"certificateAuthorityConfig"`
	// (Updatable) A list of rules that control how the CA is used and managed.
	CertificateAuthorityRules []CertificateAuthorityCertificateAuthorityRule `pulumi:"certificateAuthorityRules"`
	// (Updatable) The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails *CertificateAuthorityCertificateRevocationListDetails `pulumi:"certificateRevocationListDetails"`
	// (Updatable) The compartment in which you want to create the CA.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A brief description of the CA.
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a CertificateAuthority resource.
type CertificateAuthorityArgs struct {
	// (Updatable) The configuration details for creating a certificate authority (CA).
	CertificateAuthorityConfig CertificateAuthorityCertificateAuthorityConfigInput
	// (Updatable) A list of rules that control how the CA is used and managed.
	CertificateAuthorityRules CertificateAuthorityCertificateAuthorityRuleArrayInput
	// (Updatable) The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails CertificateAuthorityCertificateRevocationListDetailsPtrInput
	// (Updatable) The compartment in which you want to create the CA.
	CompartmentId pulumi.StringInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A brief description of the CA.
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
	KmsKeyId pulumi.StringInput
	// A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name pulumi.StringPtrInput
}

func (CertificateAuthorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateAuthorityArgs)(nil)).Elem()
}

type CertificateAuthorityInput interface {
	pulumi.Input

	ToCertificateAuthorityOutput() CertificateAuthorityOutput
	ToCertificateAuthorityOutputWithContext(ctx context.Context) CertificateAuthorityOutput
}

func (*CertificateAuthority) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthority)(nil)).Elem()
}

func (i *CertificateAuthority) ToCertificateAuthorityOutput() CertificateAuthorityOutput {
	return i.ToCertificateAuthorityOutputWithContext(context.Background())
}

func (i *CertificateAuthority) ToCertificateAuthorityOutputWithContext(ctx context.Context) CertificateAuthorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityOutput)
}

// CertificateAuthorityArrayInput is an input type that accepts CertificateAuthorityArray and CertificateAuthorityArrayOutput values.
// You can construct a concrete instance of `CertificateAuthorityArrayInput` via:
//
//	CertificateAuthorityArray{ CertificateAuthorityArgs{...} }
type CertificateAuthorityArrayInput interface {
	pulumi.Input

	ToCertificateAuthorityArrayOutput() CertificateAuthorityArrayOutput
	ToCertificateAuthorityArrayOutputWithContext(context.Context) CertificateAuthorityArrayOutput
}

type CertificateAuthorityArray []CertificateAuthorityInput

func (CertificateAuthorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CertificateAuthority)(nil)).Elem()
}

func (i CertificateAuthorityArray) ToCertificateAuthorityArrayOutput() CertificateAuthorityArrayOutput {
	return i.ToCertificateAuthorityArrayOutputWithContext(context.Background())
}

func (i CertificateAuthorityArray) ToCertificateAuthorityArrayOutputWithContext(ctx context.Context) CertificateAuthorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityArrayOutput)
}

// CertificateAuthorityMapInput is an input type that accepts CertificateAuthorityMap and CertificateAuthorityMapOutput values.
// You can construct a concrete instance of `CertificateAuthorityMapInput` via:
//
//	CertificateAuthorityMap{ "key": CertificateAuthorityArgs{...} }
type CertificateAuthorityMapInput interface {
	pulumi.Input

	ToCertificateAuthorityMapOutput() CertificateAuthorityMapOutput
	ToCertificateAuthorityMapOutputWithContext(context.Context) CertificateAuthorityMapOutput
}

type CertificateAuthorityMap map[string]CertificateAuthorityInput

func (CertificateAuthorityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CertificateAuthority)(nil)).Elem()
}

func (i CertificateAuthorityMap) ToCertificateAuthorityMapOutput() CertificateAuthorityMapOutput {
	return i.ToCertificateAuthorityMapOutputWithContext(context.Background())
}

func (i CertificateAuthorityMap) ToCertificateAuthorityMapOutputWithContext(ctx context.Context) CertificateAuthorityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityMapOutput)
}

type CertificateAuthorityOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthority)(nil)).Elem()
}

func (o CertificateAuthorityOutput) ToCertificateAuthorityOutput() CertificateAuthorityOutput {
	return o
}

func (o CertificateAuthorityOutput) ToCertificateAuthorityOutputWithContext(ctx context.Context) CertificateAuthorityOutput {
	return o
}

// (Updatable) The configuration details for creating a certificate authority (CA).
func (o CertificateAuthorityOutput) CertificateAuthorityConfig() CertificateAuthorityCertificateAuthorityConfigOutput {
	return o.ApplyT(func(v *CertificateAuthority) CertificateAuthorityCertificateAuthorityConfigOutput {
		return v.CertificateAuthorityConfig
	}).(CertificateAuthorityCertificateAuthorityConfigOutput)
}

// (Updatable) A list of rules that control how the CA is used and managed.
func (o CertificateAuthorityOutput) CertificateAuthorityRules() CertificateAuthorityCertificateAuthorityRuleArrayOutput {
	return o.ApplyT(func(v *CertificateAuthority) CertificateAuthorityCertificateAuthorityRuleArrayOutput {
		return v.CertificateAuthorityRules
	}).(CertificateAuthorityCertificateAuthorityRuleArrayOutput)
}

// (Updatable) The details of the certificate revocation list (CRL).
func (o CertificateAuthorityOutput) CertificateRevocationListDetails() CertificateAuthorityCertificateRevocationListDetailsPtrOutput {
	return o.ApplyT(func(v *CertificateAuthority) CertificateAuthorityCertificateRevocationListDetailsPtrOutput {
		return v.CertificateRevocationListDetails
	}).(CertificateAuthorityCertificateRevocationListDetailsPtrOutput)
}

// (Updatable) The compartment in which you want to create the CA.
func (o CertificateAuthorityOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The origin of the CA.
func (o CertificateAuthorityOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.StringOutput { return v.ConfigType }).(pulumi.StringOutput)
}

// The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
func (o CertificateAuthorityOutput) CurrentVersions() CertificateAuthorityCurrentVersionArrayOutput {
	return o.ApplyT(func(v *CertificateAuthority) CertificateAuthorityCurrentVersionArrayOutput { return v.CurrentVersions }).(CertificateAuthorityCurrentVersionArrayOutput)
}

// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o CertificateAuthorityOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A brief description of the CA.
func (o CertificateAuthorityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o CertificateAuthorityOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
func (o CertificateAuthorityOutput) IssuerCertificateAuthorityId() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.StringOutput { return v.IssuerCertificateAuthorityId }).(pulumi.StringOutput)
}

// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
func (o CertificateAuthorityOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// Additional information about the current CA lifecycle state.
func (o CertificateAuthorityOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o CertificateAuthorityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The algorithm used to sign public key certificates that the CA issues.
func (o CertificateAuthorityOutput) SigningAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.StringOutput { return v.SigningAlgorithm }).(pulumi.StringOutput)
}

// The current lifecycle state of the certificate authority.
func (o CertificateAuthorityOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
func (o CertificateAuthorityOutput) Subjects() CertificateAuthoritySubjectArrayOutput {
	return o.ApplyT(func(v *CertificateAuthority) CertificateAuthoritySubjectArrayOutput { return v.Subjects }).(CertificateAuthoritySubjectArrayOutput)
}

// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateAuthorityOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateAuthorityOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateAuthority) pulumi.StringOutput { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

type CertificateAuthorityArrayOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CertificateAuthority)(nil)).Elem()
}

func (o CertificateAuthorityArrayOutput) ToCertificateAuthorityArrayOutput() CertificateAuthorityArrayOutput {
	return o
}

func (o CertificateAuthorityArrayOutput) ToCertificateAuthorityArrayOutputWithContext(ctx context.Context) CertificateAuthorityArrayOutput {
	return o
}

func (o CertificateAuthorityArrayOutput) Index(i pulumi.IntInput) CertificateAuthorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CertificateAuthority {
		return vs[0].([]*CertificateAuthority)[vs[1].(int)]
	}).(CertificateAuthorityOutput)
}

type CertificateAuthorityMapOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CertificateAuthority)(nil)).Elem()
}

func (o CertificateAuthorityMapOutput) ToCertificateAuthorityMapOutput() CertificateAuthorityMapOutput {
	return o
}

func (o CertificateAuthorityMapOutput) ToCertificateAuthorityMapOutputWithContext(ctx context.Context) CertificateAuthorityMapOutput {
	return o
}

func (o CertificateAuthorityMapOutput) MapIndex(k pulumi.StringInput) CertificateAuthorityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CertificateAuthority {
		return vs[0].(map[string]*CertificateAuthority)[vs[1].(string)]
	}).(CertificateAuthorityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityInput)(nil)).Elem(), &CertificateAuthority{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityArrayInput)(nil)).Elem(), CertificateAuthorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityMapInput)(nil)).Elem(), CertificateAuthorityMap{})
	pulumi.RegisterOutputType(CertificateAuthorityOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityArrayOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityMapOutput{})
}
