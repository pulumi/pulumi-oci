// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package certificatesmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Ca Bundles in Oracle Cloud Infrastructure Certificates Management service.
//
// Lists all CA bundles that match the query parameters.
// Optionally, you can use the parameter `FilterByCaBundleIdQueryParam` to limit the result set to a single item that matches the specified CA bundle.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CertificatesManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CertificatesManagement.GetCaBundles(ctx, &certificatesmanagement.GetCaBundlesArgs{
//				CaBundleId:    pulumi.StringRef(oci_certificates_management_ca_bundle.Test_ca_bundle.Id),
//				CompartmentId: pulumi.StringRef(_var.Compartment_id),
//				Name:          pulumi.StringRef(_var.Ca_bundle_name),
//				State:         pulumi.StringRef(_var.Ca_bundle_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCaBundles(ctx *pulumi.Context, args *GetCaBundlesArgs, opts ...pulumi.InvokeOption) (*GetCaBundlesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCaBundlesResult
	err := ctx.Invoke("oci:CertificatesManagement/getCaBundles:getCaBundles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCaBundles.
type GetCaBundlesArgs struct {
	// The OCID of the CA bundle.
	CaBundleId *string `pulumi:"caBundleId"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId *string              `pulumi:"compartmentId"`
	Filters       []GetCaBundlesFilter `pulumi:"filters"`
	// A filter that returns only resources that match the specified name.
	Name *string `pulumi:"name"`
	// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getCaBundles.
type GetCaBundlesResult struct {
	// The list of ca_bundle_collection.
	CaBundleCollections []GetCaBundlesCaBundleCollection `pulumi:"caBundleCollections"`
	CaBundleId          *string                          `pulumi:"caBundleId"`
	// The OCID of the compartment for the CA bundle.
	CompartmentId *string              `pulumi:"compartmentId"`
	Filters       []GetCaBundlesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// A user-friendly name for the CA bundle. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	Name *string `pulumi:"name"`
	// The current lifecycle state of the CA bundle.
	State *string `pulumi:"state"`
}

func GetCaBundlesOutput(ctx *pulumi.Context, args GetCaBundlesOutputArgs, opts ...pulumi.InvokeOption) GetCaBundlesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCaBundlesResult, error) {
			args := v.(GetCaBundlesArgs)
			r, err := GetCaBundles(ctx, &args, opts...)
			var s GetCaBundlesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCaBundlesResultOutput)
}

// A collection of arguments for invoking getCaBundles.
type GetCaBundlesOutputArgs struct {
	// The OCID of the CA bundle.
	CaBundleId pulumi.StringPtrInput `pulumi:"caBundleId"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId pulumi.StringPtrInput        `pulumi:"compartmentId"`
	Filters       GetCaBundlesFilterArrayInput `pulumi:"filters"`
	// A filter that returns only resources that match the specified name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetCaBundlesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaBundlesArgs)(nil)).Elem()
}

// A collection of values returned by getCaBundles.
type GetCaBundlesResultOutput struct{ *pulumi.OutputState }

func (GetCaBundlesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaBundlesResult)(nil)).Elem()
}

func (o GetCaBundlesResultOutput) ToGetCaBundlesResultOutput() GetCaBundlesResultOutput {
	return o
}

func (o GetCaBundlesResultOutput) ToGetCaBundlesResultOutputWithContext(ctx context.Context) GetCaBundlesResultOutput {
	return o
}

// The list of ca_bundle_collection.
func (o GetCaBundlesResultOutput) CaBundleCollections() GetCaBundlesCaBundleCollectionArrayOutput {
	return o.ApplyT(func(v GetCaBundlesResult) []GetCaBundlesCaBundleCollection { return v.CaBundleCollections }).(GetCaBundlesCaBundleCollectionArrayOutput)
}

func (o GetCaBundlesResultOutput) CaBundleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCaBundlesResult) *string { return v.CaBundleId }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment for the CA bundle.
func (o GetCaBundlesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCaBundlesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetCaBundlesResultOutput) Filters() GetCaBundlesFilterArrayOutput {
	return o.ApplyT(func(v GetCaBundlesResult) []GetCaBundlesFilter { return v.Filters }).(GetCaBundlesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCaBundlesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCaBundlesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A user-friendly name for the CA bundle. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
func (o GetCaBundlesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCaBundlesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The current lifecycle state of the CA bundle.
func (o GetCaBundlesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCaBundlesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCaBundlesResultOutput{})
}
