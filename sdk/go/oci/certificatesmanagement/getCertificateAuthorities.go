// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package certificatesmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Certificate Authorities in Oracle Cloud Infrastructure Certificates Management service.
//
// Lists all certificate authorities (CAs) in the specified compartment.
// Optionally, you can use the parameter `FilterByCertificateAuthorityIdQueryParam` to limit the results to a single item that matches the specified CA.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/CertificatesManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CertificatesManagement.GetCertificateAuthorities(ctx, &certificatesmanagement.GetCertificateAuthoritiesArgs{
//				CertificateAuthorityId:       pulumi.StringRef(testCertificateAuthority.Id),
//				CompartmentId:                pulumi.StringRef(compartmentId),
//				IssuerCertificateAuthorityId: pulumi.StringRef(testCertificateAuthority.Id),
//				Name:                         pulumi.StringRef(certificateAuthorityName),
//				State:                        pulumi.StringRef(certificateAuthorityState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCertificateAuthorities(ctx *pulumi.Context, args *GetCertificateAuthoritiesArgs, opts ...pulumi.InvokeOption) (*GetCertificateAuthoritiesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCertificateAuthoritiesResult
	err := ctx.Invoke("oci:CertificatesManagement/getCertificateAuthorities:getCertificateAuthorities", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificateAuthorities.
type GetCertificateAuthoritiesArgs struct {
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	CertificateAuthorityId *string `pulumi:"certificateAuthorityId"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId *string                           `pulumi:"compartmentId"`
	Filters       []GetCertificateAuthoritiesFilter `pulumi:"filters"`
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	IssuerCertificateAuthorityId *string `pulumi:"issuerCertificateAuthorityId"`
	// A filter that returns only resources that match the specified name.
	Name *string `pulumi:"name"`
	// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getCertificateAuthorities.
type GetCertificateAuthoritiesResult struct {
	// The list of certificate_authority_collection.
	CertificateAuthorityCollections []GetCertificateAuthoritiesCertificateAuthorityCollection `pulumi:"certificateAuthorityCollections"`
	// The OCID of the CA.
	CertificateAuthorityId *string `pulumi:"certificateAuthorityId"`
	// The OCID of the compartment under which the CA is created.
	CompartmentId *string                           `pulumi:"compartmentId"`
	Filters       []GetCertificateAuthoritiesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
	IssuerCertificateAuthorityId *string `pulumi:"issuerCertificateAuthorityId"`
	// A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
	Name *string `pulumi:"name"`
	// The current lifecycle state of the certificate authority.
	State *string `pulumi:"state"`
}

func GetCertificateAuthoritiesOutput(ctx *pulumi.Context, args GetCertificateAuthoritiesOutputArgs, opts ...pulumi.InvokeOption) GetCertificateAuthoritiesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCertificateAuthoritiesResultOutput, error) {
			args := v.(GetCertificateAuthoritiesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetCertificateAuthoritiesResult
			secret, err := ctx.InvokePackageRaw("oci:CertificatesManagement/getCertificateAuthorities:getCertificateAuthorities", args, &rv, "", opts...)
			if err != nil {
				return GetCertificateAuthoritiesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetCertificateAuthoritiesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetCertificateAuthoritiesResultOutput), nil
			}
			return output, nil
		}).(GetCertificateAuthoritiesResultOutput)
}

// A collection of arguments for invoking getCertificateAuthorities.
type GetCertificateAuthoritiesOutputArgs struct {
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	CertificateAuthorityId pulumi.StringPtrInput `pulumi:"certificateAuthorityId"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId pulumi.StringPtrInput                     `pulumi:"compartmentId"`
	Filters       GetCertificateAuthoritiesFilterArrayInput `pulumi:"filters"`
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	IssuerCertificateAuthorityId pulumi.StringPtrInput `pulumi:"issuerCertificateAuthorityId"`
	// A filter that returns only resources that match the specified name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetCertificateAuthoritiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesArgs)(nil)).Elem()
}

// A collection of values returned by getCertificateAuthorities.
type GetCertificateAuthoritiesResultOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesResult)(nil)).Elem()
}

func (o GetCertificateAuthoritiesResultOutput) ToGetCertificateAuthoritiesResultOutput() GetCertificateAuthoritiesResultOutput {
	return o
}

func (o GetCertificateAuthoritiesResultOutput) ToGetCertificateAuthoritiesResultOutputWithContext(ctx context.Context) GetCertificateAuthoritiesResultOutput {
	return o
}

// The list of certificate_authority_collection.
func (o GetCertificateAuthoritiesResultOutput) CertificateAuthorityCollections() GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesResult) []GetCertificateAuthoritiesCertificateAuthorityCollection {
		return v.CertificateAuthorityCollections
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput)
}

// The OCID of the CA.
func (o GetCertificateAuthoritiesResultOutput) CertificateAuthorityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesResult) *string { return v.CertificateAuthorityId }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment under which the CA is created.
func (o GetCertificateAuthoritiesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetCertificateAuthoritiesResultOutput) Filters() GetCertificateAuthoritiesFilterArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesResult) []GetCertificateAuthoritiesFilter { return v.Filters }).(GetCertificateAuthoritiesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCertificateAuthoritiesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
func (o GetCertificateAuthoritiesResultOutput) IssuerCertificateAuthorityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesResult) *string { return v.IssuerCertificateAuthorityId }).(pulumi.StringPtrOutput)
}

// A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
func (o GetCertificateAuthoritiesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The current lifecycle state of the certificate authority.
func (o GetCertificateAuthoritiesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCertificateAuthoritiesResultOutput{})
}
