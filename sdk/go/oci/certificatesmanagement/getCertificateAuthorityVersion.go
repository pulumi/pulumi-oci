// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package certificatesmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Certificate Authority Version resource in Oracle Cloud Infrastructure Certificates Management service.
//
// Lists all versions for the specified certificate authority (CA).
// Optionally, you can use the parameter `FilterByVersionNumberQueryParam` to limit the results to a single item that matches the specified version number.
func GetCertificateAuthorityVersion(ctx *pulumi.Context, args *GetCertificateAuthorityVersionArgs, opts ...pulumi.InvokeOption) (*GetCertificateAuthorityVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCertificateAuthorityVersionResult
	err := ctx.Invoke("oci:CertificatesManagement/getCertificateAuthorityVersion:getCertificateAuthorityVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificateAuthorityVersion.
type GetCertificateAuthorityVersionArgs struct {
	// The OCID of the certificate authority (CA).
	CertificateAuthorityId            string `pulumi:"certificateAuthorityId"`
	CertificateAuthorityVersionNumber string `pulumi:"certificateAuthorityVersionNumber"`
}

// A collection of values returned by getCertificateAuthorityVersion.
type GetCertificateAuthorityVersionResult struct {
	// The OCID of the CA.
	CertificateAuthorityId            string `pulumi:"certificateAuthorityId"`
	CertificateAuthorityVersionNumber string `pulumi:"certificateAuthorityVersionNumber"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The version number of the issuing CA.
	IssuerCaVersionNumber *string `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses []GetCertificateAuthorityVersionRevocationStatus `pulumi:"revocationStatuses"`
	// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
	SerialNumber *string `pulumi:"serialNumber"`
	// A list of rotation states for this CA version.
	Stages                  []string                                               `pulumi:"stages"`
	SubjectAlternativeNames []GetCertificateAuthorityVersionSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	// A optional property indicating when the CA version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion *string `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificateAuthorityVersionValidity `pulumi:"validities"`
	// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
	VersionName *string `pulumi:"versionName"`
	// The version number of the CA.
	VersionNumber *string `pulumi:"versionNumber"`
}

func GetCertificateAuthorityVersionOutput(ctx *pulumi.Context, args GetCertificateAuthorityVersionOutputArgs, opts ...pulumi.InvokeOption) GetCertificateAuthorityVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCertificateAuthorityVersionResult, error) {
			args := v.(GetCertificateAuthorityVersionArgs)
			r, err := GetCertificateAuthorityVersion(ctx, &args, opts...)
			var s GetCertificateAuthorityVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCertificateAuthorityVersionResultOutput)
}

// A collection of arguments for invoking getCertificateAuthorityVersion.
type GetCertificateAuthorityVersionOutputArgs struct {
	// The OCID of the certificate authority (CA).
	CertificateAuthorityId            pulumi.StringInput `pulumi:"certificateAuthorityId"`
	CertificateAuthorityVersionNumber pulumi.StringInput `pulumi:"certificateAuthorityVersionNumber"`
}

func (GetCertificateAuthorityVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionArgs)(nil)).Elem()
}

// A collection of values returned by getCertificateAuthorityVersion.
type GetCertificateAuthorityVersionResultOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionResult)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionResultOutput) ToGetCertificateAuthorityVersionResultOutput() GetCertificateAuthorityVersionResultOutput {
	return o
}

func (o GetCertificateAuthorityVersionResultOutput) ToGetCertificateAuthorityVersionResultOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionResultOutput {
	return o
}

// The OCID of the CA.
func (o GetCertificateAuthorityVersionResultOutput) CertificateAuthorityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) string { return v.CertificateAuthorityId }).(pulumi.StringOutput)
}

func (o GetCertificateAuthorityVersionResultOutput) CertificateAuthorityVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) string { return v.CertificateAuthorityVersionNumber }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCertificateAuthorityVersionResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The version number of the issuing CA.
func (o GetCertificateAuthorityVersionResultOutput) IssuerCaVersionNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) *string { return v.IssuerCaVersionNumber }).(pulumi.StringPtrOutput)
}

// The current revocation status of the entity.
func (o GetCertificateAuthorityVersionResultOutput) RevocationStatuses() GetCertificateAuthorityVersionRevocationStatusArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) []GetCertificateAuthorityVersionRevocationStatus {
		return v.RevocationStatuses
	}).(GetCertificateAuthorityVersionRevocationStatusArrayOutput)
}

// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
func (o GetCertificateAuthorityVersionResultOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// A list of rotation states for this CA version.
func (o GetCertificateAuthorityVersionResultOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) []string { return v.Stages }).(pulumi.StringArrayOutput)
}

func (o GetCertificateAuthorityVersionResultOutput) SubjectAlternativeNames() GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) []GetCertificateAuthorityVersionSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput)
}

// A optional property indicating when the CA version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityVersionResultOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityVersionResultOutput) TimeOfDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) *string { return v.TimeOfDeletion }).(pulumi.StringPtrOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificateAuthorityVersionResultOutput) Validities() GetCertificateAuthorityVersionValidityArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) []GetCertificateAuthorityVersionValidity {
		return v.Validities
	}).(GetCertificateAuthorityVersionValidityArrayOutput)
}

// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
func (o GetCertificateAuthorityVersionResultOutput) VersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) *string { return v.VersionName }).(pulumi.StringPtrOutput)
}

// The version number of the CA.
func (o GetCertificateAuthorityVersionResultOutput) VersionNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionResult) *string { return v.VersionNumber }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionResultOutput{})
}
