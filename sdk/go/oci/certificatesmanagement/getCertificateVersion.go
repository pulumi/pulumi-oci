// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package certificatesmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Certificate Version resource in Oracle Cloud Infrastructure Certificates Management service.
//
// Gets details about the specified version of a certificate.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CertificatesManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CertificatesManagement.GetCertificateVersion(ctx, &certificatesmanagement.GetCertificateVersionArgs{
//				CertificateId:            testCertificate.Id,
//				CertificateVersionNumber: certificateVersionCertificateVersionNumber,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCertificateVersion(ctx *pulumi.Context, args *GetCertificateVersionArgs, opts ...pulumi.InvokeOption) (*GetCertificateVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCertificateVersionResult
	err := ctx.Invoke("oci:CertificatesManagement/getCertificateVersion:getCertificateVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificateVersion.
type GetCertificateVersionArgs struct {
	// The OCID of the certificate.
	CertificateId string `pulumi:"certificateId"`
	// The version number of the certificate.
	CertificateVersionNumber string `pulumi:"certificateVersionNumber"`
}

// A collection of values returned by getCertificateVersion.
type GetCertificateVersionResult struct {
	// The OCID of the certificate.
	CertificateId            string `pulumi:"certificateId"`
	CertificateVersionNumber string `pulumi:"certificateVersionNumber"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The version number of the issuing certificate authority (CA).
	IssuerCaVersionNumber string `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses []GetCertificateVersionRevocationStatus `pulumi:"revocationStatuses"`
	// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
	SerialNumber string `pulumi:"serialNumber"`
	// A list of stages of this entity.
	Stages []string `pulumi:"stages"`
	// A list of subject alternative names.
	SubjectAlternativeNames []GetCertificateVersionSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	// A optional property indicating when the certificate version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificateVersionValidity `pulumi:"validities"`
	// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
	VersionName string `pulumi:"versionName"`
	// The version number of the certificate.
	VersionNumber string `pulumi:"versionNumber"`
}

func GetCertificateVersionOutput(ctx *pulumi.Context, args GetCertificateVersionOutputArgs, opts ...pulumi.InvokeOption) GetCertificateVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCertificateVersionResult, error) {
			args := v.(GetCertificateVersionArgs)
			r, err := GetCertificateVersion(ctx, &args, opts...)
			var s GetCertificateVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCertificateVersionResultOutput)
}

// A collection of arguments for invoking getCertificateVersion.
type GetCertificateVersionOutputArgs struct {
	// The OCID of the certificate.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// The version number of the certificate.
	CertificateVersionNumber pulumi.StringInput `pulumi:"certificateVersionNumber"`
}

func (GetCertificateVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionArgs)(nil)).Elem()
}

// A collection of values returned by getCertificateVersion.
type GetCertificateVersionResultOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionResult)(nil)).Elem()
}

func (o GetCertificateVersionResultOutput) ToGetCertificateVersionResultOutput() GetCertificateVersionResultOutput {
	return o
}

func (o GetCertificateVersionResultOutput) ToGetCertificateVersionResultOutputWithContext(ctx context.Context) GetCertificateVersionResultOutput {
	return o
}

// The OCID of the certificate.
func (o GetCertificateVersionResultOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) string { return v.CertificateId }).(pulumi.StringOutput)
}

func (o GetCertificateVersionResultOutput) CertificateVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) string { return v.CertificateVersionNumber }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCertificateVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The version number of the issuing certificate authority (CA).
func (o GetCertificateVersionResultOutput) IssuerCaVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) string { return v.IssuerCaVersionNumber }).(pulumi.StringOutput)
}

// The current revocation status of the entity.
func (o GetCertificateVersionResultOutput) RevocationStatuses() GetCertificateVersionRevocationStatusArrayOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) []GetCertificateVersionRevocationStatus {
		return v.RevocationStatuses
	}).(GetCertificateVersionRevocationStatusArrayOutput)
}

// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
func (o GetCertificateVersionResultOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// A list of stages of this entity.
func (o GetCertificateVersionResultOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) []string { return v.Stages }).(pulumi.StringArrayOutput)
}

// A list of subject alternative names.
func (o GetCertificateVersionResultOutput) SubjectAlternativeNames() GetCertificateVersionSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) []GetCertificateVersionSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetCertificateVersionSubjectAlternativeNameArrayOutput)
}

// A optional property indicating when the certificate version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateVersionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateVersionResultOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificateVersionResultOutput) Validities() GetCertificateVersionValidityArrayOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) []GetCertificateVersionValidity { return v.Validities }).(GetCertificateVersionValidityArrayOutput)
}

// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
func (o GetCertificateVersionResultOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) string { return v.VersionName }).(pulumi.StringOutput)
}

// The version number of the certificate.
func (o GetCertificateVersionResultOutput) VersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionResult) string { return v.VersionNumber }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCertificateVersionResultOutput{})
}
