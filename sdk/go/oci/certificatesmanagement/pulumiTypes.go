// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package certificatesmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type CertificateAuthorityCertificateAuthorityConfig struct {
	// (Updatable) The origin of the CA.
	ConfigType string `pulumi:"configType"`
	// The OCID of the private CA.
	IssuerCertificateAuthorityId *string `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to sign public key certificates that the CA issues.
	SigningAlgorithm *string `pulumi:"signingAlgorithm"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subject CertificateAuthorityCertificateAuthorityConfigSubject `pulumi:"subject"`
	// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validity *CertificateAuthorityCertificateAuthorityConfigValidity `pulumi:"validity"`
	// (Updatable) The name of the CA version. When the value is not null, a name is unique across versions of a given CA.
	VersionName *string `pulumi:"versionName"`
}

// CertificateAuthorityCertificateAuthorityConfigInput is an input type that accepts CertificateAuthorityCertificateAuthorityConfigArgs and CertificateAuthorityCertificateAuthorityConfigOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateAuthorityConfigInput` via:
//
//	CertificateAuthorityCertificateAuthorityConfigArgs{...}
type CertificateAuthorityCertificateAuthorityConfigInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateAuthorityConfigOutput() CertificateAuthorityCertificateAuthorityConfigOutput
	ToCertificateAuthorityCertificateAuthorityConfigOutputWithContext(context.Context) CertificateAuthorityCertificateAuthorityConfigOutput
}

type CertificateAuthorityCertificateAuthorityConfigArgs struct {
	// (Updatable) The origin of the CA.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// The OCID of the private CA.
	IssuerCertificateAuthorityId pulumi.StringPtrInput `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to sign public key certificates that the CA issues.
	SigningAlgorithm pulumi.StringPtrInput `pulumi:"signingAlgorithm"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subject CertificateAuthorityCertificateAuthorityConfigSubjectInput `pulumi:"subject"`
	// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validity CertificateAuthorityCertificateAuthorityConfigValidityPtrInput `pulumi:"validity"`
	// (Updatable) The name of the CA version. When the value is not null, a name is unique across versions of a given CA.
	VersionName pulumi.StringPtrInput `pulumi:"versionName"`
}

func (CertificateAuthorityCertificateAuthorityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfig)(nil)).Elem()
}

func (i CertificateAuthorityCertificateAuthorityConfigArgs) ToCertificateAuthorityCertificateAuthorityConfigOutput() CertificateAuthorityCertificateAuthorityConfigOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateAuthorityConfigArgs) ToCertificateAuthorityCertificateAuthorityConfigOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigOutput)
}

func (i CertificateAuthorityCertificateAuthorityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateAuthorityConfig] {
	return pulumix.Output[CertificateAuthorityCertificateAuthorityConfig]{
		OutputState: i.ToCertificateAuthorityCertificateAuthorityConfigOutputWithContext(ctx).OutputState,
	}
}

func (i CertificateAuthorityCertificateAuthorityConfigArgs) ToCertificateAuthorityCertificateAuthorityConfigPtrOutput() CertificateAuthorityCertificateAuthorityConfigPtrOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigPtrOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateAuthorityConfigArgs) ToCertificateAuthorityCertificateAuthorityConfigPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigOutput).ToCertificateAuthorityCertificateAuthorityConfigPtrOutputWithContext(ctx)
}

// CertificateAuthorityCertificateAuthorityConfigPtrInput is an input type that accepts CertificateAuthorityCertificateAuthorityConfigArgs, CertificateAuthorityCertificateAuthorityConfigPtr and CertificateAuthorityCertificateAuthorityConfigPtrOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateAuthorityConfigPtrInput` via:
//
//	        CertificateAuthorityCertificateAuthorityConfigArgs{...}
//
//	or:
//
//	        nil
type CertificateAuthorityCertificateAuthorityConfigPtrInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateAuthorityConfigPtrOutput() CertificateAuthorityCertificateAuthorityConfigPtrOutput
	ToCertificateAuthorityCertificateAuthorityConfigPtrOutputWithContext(context.Context) CertificateAuthorityCertificateAuthorityConfigPtrOutput
}

type certificateAuthorityCertificateAuthorityConfigPtrType CertificateAuthorityCertificateAuthorityConfigArgs

func CertificateAuthorityCertificateAuthorityConfigPtr(v *CertificateAuthorityCertificateAuthorityConfigArgs) CertificateAuthorityCertificateAuthorityConfigPtrInput {
	return (*certificateAuthorityCertificateAuthorityConfigPtrType)(v)
}

func (*certificateAuthorityCertificateAuthorityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateAuthorityConfig)(nil)).Elem()
}

func (i *certificateAuthorityCertificateAuthorityConfigPtrType) ToCertificateAuthorityCertificateAuthorityConfigPtrOutput() CertificateAuthorityCertificateAuthorityConfigPtrOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigPtrOutputWithContext(context.Background())
}

func (i *certificateAuthorityCertificateAuthorityConfigPtrType) ToCertificateAuthorityCertificateAuthorityConfigPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigPtrOutput)
}

func (i *certificateAuthorityCertificateAuthorityConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*CertificateAuthorityCertificateAuthorityConfig] {
	return pulumix.Output[*CertificateAuthorityCertificateAuthorityConfig]{
		OutputState: i.ToCertificateAuthorityCertificateAuthorityConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type CertificateAuthorityCertificateAuthorityConfigOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateAuthorityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfig)(nil)).Elem()
}

func (o CertificateAuthorityCertificateAuthorityConfigOutput) ToCertificateAuthorityCertificateAuthorityConfigOutput() CertificateAuthorityCertificateAuthorityConfigOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigOutput) ToCertificateAuthorityCertificateAuthorityConfigOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigOutput) ToCertificateAuthorityCertificateAuthorityConfigPtrOutput() CertificateAuthorityCertificateAuthorityConfigPtrOutput {
	return o.ToCertificateAuthorityCertificateAuthorityConfigPtrOutputWithContext(context.Background())
}

func (o CertificateAuthorityCertificateAuthorityConfigOutput) ToCertificateAuthorityCertificateAuthorityConfigPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateAuthorityCertificateAuthorityConfig) *CertificateAuthorityCertificateAuthorityConfig {
		return &v
	}).(CertificateAuthorityCertificateAuthorityConfigPtrOutput)
}

func (o CertificateAuthorityCertificateAuthorityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateAuthorityConfig] {
	return pulumix.Output[CertificateAuthorityCertificateAuthorityConfig]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The origin of the CA.
func (o CertificateAuthorityCertificateAuthorityConfigOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfig) string { return v.ConfigType }).(pulumi.StringOutput)
}

// The OCID of the private CA.
func (o CertificateAuthorityCertificateAuthorityConfigOutput) IssuerCertificateAuthorityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfig) *string { return v.IssuerCertificateAuthorityId }).(pulumi.StringPtrOutput)
}

// The algorithm used to sign public key certificates that the CA issues.
func (o CertificateAuthorityCertificateAuthorityConfigOutput) SigningAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfig) *string { return v.SigningAlgorithm }).(pulumi.StringPtrOutput)
}

// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
func (o CertificateAuthorityCertificateAuthorityConfigOutput) Subject() CertificateAuthorityCertificateAuthorityConfigSubjectOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfig) CertificateAuthorityCertificateAuthorityConfigSubject {
		return v.Subject
	}).(CertificateAuthorityCertificateAuthorityConfigSubjectOutput)
}

// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o CertificateAuthorityCertificateAuthorityConfigOutput) Validity() CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfig) *CertificateAuthorityCertificateAuthorityConfigValidity {
		return v.Validity
	}).(CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput)
}

// (Updatable) The name of the CA version. When the value is not null, a name is unique across versions of a given CA.
func (o CertificateAuthorityCertificateAuthorityConfigOutput) VersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfig) *string { return v.VersionName }).(pulumi.StringPtrOutput)
}

type CertificateAuthorityCertificateAuthorityConfigPtrOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateAuthorityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateAuthorityConfig)(nil)).Elem()
}

func (o CertificateAuthorityCertificateAuthorityConfigPtrOutput) ToCertificateAuthorityCertificateAuthorityConfigPtrOutput() CertificateAuthorityCertificateAuthorityConfigPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigPtrOutput) ToCertificateAuthorityCertificateAuthorityConfigPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CertificateAuthorityCertificateAuthorityConfig] {
	return pulumix.Output[*CertificateAuthorityCertificateAuthorityConfig]{
		OutputState: o.OutputState,
	}
}

func (o CertificateAuthorityCertificateAuthorityConfigPtrOutput) Elem() CertificateAuthorityCertificateAuthorityConfigOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfig) CertificateAuthorityCertificateAuthorityConfig {
		if v != nil {
			return *v
		}
		var ret CertificateAuthorityCertificateAuthorityConfig
		return ret
	}).(CertificateAuthorityCertificateAuthorityConfigOutput)
}

// (Updatable) The origin of the CA.
func (o CertificateAuthorityCertificateAuthorityConfigPtrOutput) ConfigType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ConfigType
	}).(pulumi.StringPtrOutput)
}

// The OCID of the private CA.
func (o CertificateAuthorityCertificateAuthorityConfigPtrOutput) IssuerCertificateAuthorityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfig) *string {
		if v == nil {
			return nil
		}
		return v.IssuerCertificateAuthorityId
	}).(pulumi.StringPtrOutput)
}

// The algorithm used to sign public key certificates that the CA issues.
func (o CertificateAuthorityCertificateAuthorityConfigPtrOutput) SigningAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfig) *string {
		if v == nil {
			return nil
		}
		return v.SigningAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
func (o CertificateAuthorityCertificateAuthorityConfigPtrOutput) Subject() CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfig) *CertificateAuthorityCertificateAuthorityConfigSubject {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput)
}

// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o CertificateAuthorityCertificateAuthorityConfigPtrOutput) Validity() CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfig) *CertificateAuthorityCertificateAuthorityConfigValidity {
		if v == nil {
			return nil
		}
		return v.Validity
	}).(CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput)
}

// (Updatable) The name of the CA version. When the value is not null, a name is unique across versions of a given CA.
func (o CertificateAuthorityCertificateAuthorityConfigPtrOutput) VersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfig) *string {
		if v == nil {
			return nil
		}
		return v.VersionName
	}).(pulumi.StringPtrOutput)
}

type CertificateAuthorityCertificateAuthorityConfigSubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName string `pulumi:"commonName"`
	// Country name (RDN C).
	Country *string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier *string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent *string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier *string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName *string `pulumi:"givenName"`
	// Personal initials.
	Initials *string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName *string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization *string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym *string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber *string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName *string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street *string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname *string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title *string `pulumi:"title"`
	// User ID (RDN UID).
	UserId *string `pulumi:"userId"`
}

// CertificateAuthorityCertificateAuthorityConfigSubjectInput is an input type that accepts CertificateAuthorityCertificateAuthorityConfigSubjectArgs and CertificateAuthorityCertificateAuthorityConfigSubjectOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateAuthorityConfigSubjectInput` via:
//
//	CertificateAuthorityCertificateAuthorityConfigSubjectArgs{...}
type CertificateAuthorityCertificateAuthorityConfigSubjectInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateAuthorityConfigSubjectOutput() CertificateAuthorityCertificateAuthorityConfigSubjectOutput
	ToCertificateAuthorityCertificateAuthorityConfigSubjectOutputWithContext(context.Context) CertificateAuthorityCertificateAuthorityConfigSubjectOutput
}

type CertificateAuthorityCertificateAuthorityConfigSubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringPtrInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringPtrInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringPtrInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringPtrInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringPtrInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringPtrInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringPtrInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringPtrInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringPtrInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringPtrInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringPtrInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringPtrInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (CertificateAuthorityCertificateAuthorityConfigSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (i CertificateAuthorityCertificateAuthorityConfigSubjectArgs) ToCertificateAuthorityCertificateAuthorityConfigSubjectOutput() CertificateAuthorityCertificateAuthorityConfigSubjectOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigSubjectOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateAuthorityConfigSubjectArgs) ToCertificateAuthorityCertificateAuthorityConfigSubjectOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigSubjectOutput)
}

func (i CertificateAuthorityCertificateAuthorityConfigSubjectArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateAuthorityConfigSubject] {
	return pulumix.Output[CertificateAuthorityCertificateAuthorityConfigSubject]{
		OutputState: i.ToCertificateAuthorityCertificateAuthorityConfigSubjectOutputWithContext(ctx).OutputState,
	}
}

func (i CertificateAuthorityCertificateAuthorityConfigSubjectArgs) ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput() CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateAuthorityConfigSubjectArgs) ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigSubjectOutput).ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutputWithContext(ctx)
}

// CertificateAuthorityCertificateAuthorityConfigSubjectPtrInput is an input type that accepts CertificateAuthorityCertificateAuthorityConfigSubjectArgs, CertificateAuthorityCertificateAuthorityConfigSubjectPtr and CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateAuthorityConfigSubjectPtrInput` via:
//
//	        CertificateAuthorityCertificateAuthorityConfigSubjectArgs{...}
//
//	or:
//
//	        nil
type CertificateAuthorityCertificateAuthorityConfigSubjectPtrInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput() CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput
	ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutputWithContext(context.Context) CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput
}

type certificateAuthorityCertificateAuthorityConfigSubjectPtrType CertificateAuthorityCertificateAuthorityConfigSubjectArgs

func CertificateAuthorityCertificateAuthorityConfigSubjectPtr(v *CertificateAuthorityCertificateAuthorityConfigSubjectArgs) CertificateAuthorityCertificateAuthorityConfigSubjectPtrInput {
	return (*certificateAuthorityCertificateAuthorityConfigSubjectPtrType)(v)
}

func (*certificateAuthorityCertificateAuthorityConfigSubjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (i *certificateAuthorityCertificateAuthorityConfigSubjectPtrType) ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput() CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutputWithContext(context.Background())
}

func (i *certificateAuthorityCertificateAuthorityConfigSubjectPtrType) ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput)
}

func (i *certificateAuthorityCertificateAuthorityConfigSubjectPtrType) ToOutput(ctx context.Context) pulumix.Output[*CertificateAuthorityCertificateAuthorityConfigSubject] {
	return pulumix.Output[*CertificateAuthorityCertificateAuthorityConfigSubject]{
		OutputState: i.ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutputWithContext(ctx).OutputState,
	}
}

type CertificateAuthorityCertificateAuthorityConfigSubjectOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateAuthorityConfigSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) ToCertificateAuthorityCertificateAuthorityConfigSubjectOutput() CertificateAuthorityCertificateAuthorityConfigSubjectOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) ToCertificateAuthorityCertificateAuthorityConfigSubjectOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigSubjectOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput() CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput {
	return o.ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutputWithContext(context.Background())
}

func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateAuthorityCertificateAuthorityConfigSubject) *CertificateAuthorityCertificateAuthorityConfigSubject {
		return &v
	}).(CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput)
}

func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateAuthorityConfigSubject] {
	return pulumix.Output[CertificateAuthorityCertificateAuthorityConfigSubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) string { return v.CommonName }).(pulumi.StringOutput)
}

// Country name (RDN C).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) DistinguishedNameQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		return v.DistinguishedNameQualifier
	}).(pulumi.StringPtrOutput)
}

// Domain component (RDN DC).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) DomainComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.DomainComponent }).(pulumi.StringPtrOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) GenerationQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.GenerationQualifier }).(pulumi.StringPtrOutput)
}

// Personal given name (RDN G or GN).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) GivenName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.GivenName }).(pulumi.StringPtrOutput)
}

// Personal initials.
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) Initials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.Initials }).(pulumi.StringPtrOutput)
}

// Locality (RDN L).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) LocalityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.LocalityName }).(pulumi.StringPtrOutput)
}

// Organization (RDN O).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// Organizational unit (RDN OU).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// Subject pseudonym.
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) Pseudonym() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.Pseudonym }).(pulumi.StringPtrOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// State or province name (RDN ST or S).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) StateOrProvinceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.StateOrProvinceName }).(pulumi.StringPtrOutput)
}

// Street address (RDN STREET).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) Street() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.Street }).(pulumi.StringPtrOutput)
}

// Personal surname (RDN SN).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) Surname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.Surname }).(pulumi.StringPtrOutput)
}

// Title (RDN T or TITLE).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// User ID (RDN UID).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigSubject) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput() CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) ToCertificateAuthorityCertificateAuthorityConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CertificateAuthorityCertificateAuthorityConfigSubject] {
	return pulumix.Output[*CertificateAuthorityCertificateAuthorityConfigSubject]{
		OutputState: o.OutputState,
	}
}

func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) Elem() CertificateAuthorityCertificateAuthorityConfigSubjectOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) CertificateAuthorityCertificateAuthorityConfigSubject {
		if v != nil {
			return *v
		}
		var ret CertificateAuthorityCertificateAuthorityConfigSubject
		return ret
	}).(CertificateAuthorityCertificateAuthorityConfigSubjectOutput)
}

// Common name or fully-qualified domain name (RDN CN).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return &v.CommonName
	}).(pulumi.StringPtrOutput)
}

// Country name (RDN C).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) DistinguishedNameQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.DistinguishedNameQualifier
	}).(pulumi.StringPtrOutput)
}

// Domain component (RDN DC).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) DomainComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.DomainComponent
	}).(pulumi.StringPtrOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) GenerationQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.GenerationQualifier
	}).(pulumi.StringPtrOutput)
}

// Personal given name (RDN G or GN).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) GivenName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.GivenName
	}).(pulumi.StringPtrOutput)
}

// Personal initials.
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) Initials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Initials
	}).(pulumi.StringPtrOutput)
}

// Locality (RDN L).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) LocalityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.LocalityName
	}).(pulumi.StringPtrOutput)
}

// Organization (RDN O).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

// Organizational unit (RDN OU).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnit
	}).(pulumi.StringPtrOutput)
}

// Subject pseudonym.
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) Pseudonym() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Pseudonym
	}).(pulumi.StringPtrOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// State or province name (RDN ST or S).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) StateOrProvinceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvinceName
	}).(pulumi.StringPtrOutput)
}

// Street address (RDN STREET).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) Street() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Street
	}).(pulumi.StringPtrOutput)
}

// Personal surname (RDN SN).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) Surname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Surname
	}).(pulumi.StringPtrOutput)
}

// Title (RDN T or TITLE).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// User ID (RDN UID).
func (o CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.StringPtrOutput)
}

type CertificateAuthorityCertificateAuthorityConfigValidity struct {
	// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore *string `pulumi:"timeOfValidityNotBefore"`
}

// CertificateAuthorityCertificateAuthorityConfigValidityInput is an input type that accepts CertificateAuthorityCertificateAuthorityConfigValidityArgs and CertificateAuthorityCertificateAuthorityConfigValidityOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateAuthorityConfigValidityInput` via:
//
//	CertificateAuthorityCertificateAuthorityConfigValidityArgs{...}
type CertificateAuthorityCertificateAuthorityConfigValidityInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateAuthorityConfigValidityOutput() CertificateAuthorityCertificateAuthorityConfigValidityOutput
	ToCertificateAuthorityCertificateAuthorityConfigValidityOutputWithContext(context.Context) CertificateAuthorityCertificateAuthorityConfigValidityOutput
}

type CertificateAuthorityCertificateAuthorityConfigValidityArgs struct {
	// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringPtrInput `pulumi:"timeOfValidityNotBefore"`
}

func (CertificateAuthorityCertificateAuthorityConfigValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (i CertificateAuthorityCertificateAuthorityConfigValidityArgs) ToCertificateAuthorityCertificateAuthorityConfigValidityOutput() CertificateAuthorityCertificateAuthorityConfigValidityOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigValidityOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateAuthorityConfigValidityArgs) ToCertificateAuthorityCertificateAuthorityConfigValidityOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigValidityOutput)
}

func (i CertificateAuthorityCertificateAuthorityConfigValidityArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateAuthorityConfigValidity] {
	return pulumix.Output[CertificateAuthorityCertificateAuthorityConfigValidity]{
		OutputState: i.ToCertificateAuthorityCertificateAuthorityConfigValidityOutputWithContext(ctx).OutputState,
	}
}

func (i CertificateAuthorityCertificateAuthorityConfigValidityArgs) ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutput() CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateAuthorityConfigValidityArgs) ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigValidityOutput).ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutputWithContext(ctx)
}

// CertificateAuthorityCertificateAuthorityConfigValidityPtrInput is an input type that accepts CertificateAuthorityCertificateAuthorityConfigValidityArgs, CertificateAuthorityCertificateAuthorityConfigValidityPtr and CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateAuthorityConfigValidityPtrInput` via:
//
//	        CertificateAuthorityCertificateAuthorityConfigValidityArgs{...}
//
//	or:
//
//	        nil
type CertificateAuthorityCertificateAuthorityConfigValidityPtrInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutput() CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput
	ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutputWithContext(context.Context) CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput
}

type certificateAuthorityCertificateAuthorityConfigValidityPtrType CertificateAuthorityCertificateAuthorityConfigValidityArgs

func CertificateAuthorityCertificateAuthorityConfigValidityPtr(v *CertificateAuthorityCertificateAuthorityConfigValidityArgs) CertificateAuthorityCertificateAuthorityConfigValidityPtrInput {
	return (*certificateAuthorityCertificateAuthorityConfigValidityPtrType)(v)
}

func (*certificateAuthorityCertificateAuthorityConfigValidityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (i *certificateAuthorityCertificateAuthorityConfigValidityPtrType) ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutput() CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutputWithContext(context.Background())
}

func (i *certificateAuthorityCertificateAuthorityConfigValidityPtrType) ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput)
}

func (i *certificateAuthorityCertificateAuthorityConfigValidityPtrType) ToOutput(ctx context.Context) pulumix.Output[*CertificateAuthorityCertificateAuthorityConfigValidity] {
	return pulumix.Output[*CertificateAuthorityCertificateAuthorityConfigValidity]{
		OutputState: i.ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutputWithContext(ctx).OutputState,
	}
}

type CertificateAuthorityCertificateAuthorityConfigValidityOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateAuthorityConfigValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (o CertificateAuthorityCertificateAuthorityConfigValidityOutput) ToCertificateAuthorityCertificateAuthorityConfigValidityOutput() CertificateAuthorityCertificateAuthorityConfigValidityOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigValidityOutput) ToCertificateAuthorityCertificateAuthorityConfigValidityOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigValidityOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigValidityOutput) ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutput() CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput {
	return o.ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutputWithContext(context.Background())
}

func (o CertificateAuthorityCertificateAuthorityConfigValidityOutput) ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateAuthorityCertificateAuthorityConfigValidity) *CertificateAuthorityCertificateAuthorityConfigValidity {
		return &v
	}).(CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput)
}

func (o CertificateAuthorityCertificateAuthorityConfigValidityOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateAuthorityConfigValidity] {
	return pulumix.Output[CertificateAuthorityCertificateAuthorityConfigValidity]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateAuthorityCertificateAuthorityConfigValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigValidity) string { return v.TimeOfValidityNotAfter }).(pulumi.StringOutput)
}

// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateAuthorityCertificateAuthorityConfigValidityOutput) TimeOfValidityNotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigValidity) *string {
		return v.TimeOfValidityNotBefore
	}).(pulumi.StringPtrOutput)
}

type CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (o CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput) ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutput() CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput) ToCertificateAuthorityCertificateAuthorityConfigValidityPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CertificateAuthorityCertificateAuthorityConfigValidity] {
	return pulumix.Output[*CertificateAuthorityCertificateAuthorityConfigValidity]{
		OutputState: o.OutputState,
	}
}

func (o CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput) Elem() CertificateAuthorityCertificateAuthorityConfigValidityOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigValidity) CertificateAuthorityCertificateAuthorityConfigValidity {
		if v != nil {
			return *v
		}
		var ret CertificateAuthorityCertificateAuthorityConfigValidity
		return ret
	}).(CertificateAuthorityCertificateAuthorityConfigValidityOutput)
}

// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput) TimeOfValidityNotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigValidity) *string {
		if v == nil {
			return nil
		}
		return &v.TimeOfValidityNotAfter
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput) TimeOfValidityNotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfigValidity) *string {
		if v == nil {
			return nil
		}
		return v.TimeOfValidityNotBefore
	}).(pulumi.StringPtrOutput)
}

type CertificateAuthorityCertificateAuthorityRule struct {
	// (Updatable) A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	CertificateAuthorityMaxValidityDuration *string `pulumi:"certificateAuthorityMaxValidityDuration"`
	// (Updatable) A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	LeafCertificateMaxValidityDuration *string `pulumi:"leafCertificateMaxValidityDuration"`
	// (Updatable) The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
	RuleType string `pulumi:"ruleType"`
}

// CertificateAuthorityCertificateAuthorityRuleInput is an input type that accepts CertificateAuthorityCertificateAuthorityRuleArgs and CertificateAuthorityCertificateAuthorityRuleOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateAuthorityRuleInput` via:
//
//	CertificateAuthorityCertificateAuthorityRuleArgs{...}
type CertificateAuthorityCertificateAuthorityRuleInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateAuthorityRuleOutput() CertificateAuthorityCertificateAuthorityRuleOutput
	ToCertificateAuthorityCertificateAuthorityRuleOutputWithContext(context.Context) CertificateAuthorityCertificateAuthorityRuleOutput
}

type CertificateAuthorityCertificateAuthorityRuleArgs struct {
	// (Updatable) A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	CertificateAuthorityMaxValidityDuration pulumi.StringPtrInput `pulumi:"certificateAuthorityMaxValidityDuration"`
	// (Updatable) A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	LeafCertificateMaxValidityDuration pulumi.StringPtrInput `pulumi:"leafCertificateMaxValidityDuration"`
	// (Updatable) The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (CertificateAuthorityCertificateAuthorityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityRule)(nil)).Elem()
}

func (i CertificateAuthorityCertificateAuthorityRuleArgs) ToCertificateAuthorityCertificateAuthorityRuleOutput() CertificateAuthorityCertificateAuthorityRuleOutput {
	return i.ToCertificateAuthorityCertificateAuthorityRuleOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateAuthorityRuleArgs) ToCertificateAuthorityCertificateAuthorityRuleOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityRuleOutput)
}

func (i CertificateAuthorityCertificateAuthorityRuleArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateAuthorityRule] {
	return pulumix.Output[CertificateAuthorityCertificateAuthorityRule]{
		OutputState: i.ToCertificateAuthorityCertificateAuthorityRuleOutputWithContext(ctx).OutputState,
	}
}

// CertificateAuthorityCertificateAuthorityRuleArrayInput is an input type that accepts CertificateAuthorityCertificateAuthorityRuleArray and CertificateAuthorityCertificateAuthorityRuleArrayOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateAuthorityRuleArrayInput` via:
//
//	CertificateAuthorityCertificateAuthorityRuleArray{ CertificateAuthorityCertificateAuthorityRuleArgs{...} }
type CertificateAuthorityCertificateAuthorityRuleArrayInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateAuthorityRuleArrayOutput() CertificateAuthorityCertificateAuthorityRuleArrayOutput
	ToCertificateAuthorityCertificateAuthorityRuleArrayOutputWithContext(context.Context) CertificateAuthorityCertificateAuthorityRuleArrayOutput
}

type CertificateAuthorityCertificateAuthorityRuleArray []CertificateAuthorityCertificateAuthorityRuleInput

func (CertificateAuthorityCertificateAuthorityRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateAuthorityCertificateAuthorityRule)(nil)).Elem()
}

func (i CertificateAuthorityCertificateAuthorityRuleArray) ToCertificateAuthorityCertificateAuthorityRuleArrayOutput() CertificateAuthorityCertificateAuthorityRuleArrayOutput {
	return i.ToCertificateAuthorityCertificateAuthorityRuleArrayOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateAuthorityRuleArray) ToCertificateAuthorityCertificateAuthorityRuleArrayOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityRuleArrayOutput)
}

func (i CertificateAuthorityCertificateAuthorityRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateAuthorityCertificateAuthorityRule] {
	return pulumix.Output[[]CertificateAuthorityCertificateAuthorityRule]{
		OutputState: i.ToCertificateAuthorityCertificateAuthorityRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateAuthorityCertificateAuthorityRuleOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateAuthorityRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityRule)(nil)).Elem()
}

func (o CertificateAuthorityCertificateAuthorityRuleOutput) ToCertificateAuthorityCertificateAuthorityRuleOutput() CertificateAuthorityCertificateAuthorityRuleOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityRuleOutput) ToCertificateAuthorityCertificateAuthorityRuleOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityRuleOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityRuleOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateAuthorityRule] {
	return pulumix.Output[CertificateAuthorityCertificateAuthorityRule]{
		OutputState: o.OutputState,
	}
}

// (Updatable) A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o CertificateAuthorityCertificateAuthorityRuleOutput) CertificateAuthorityMaxValidityDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityRule) *string {
		return v.CertificateAuthorityMaxValidityDuration
	}).(pulumi.StringPtrOutput)
}

// (Updatable) A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o CertificateAuthorityCertificateAuthorityRuleOutput) LeafCertificateMaxValidityDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityRule) *string {
		return v.LeafCertificateMaxValidityDuration
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
func (o CertificateAuthorityCertificateAuthorityRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type CertificateAuthorityCertificateAuthorityRuleArrayOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateAuthorityRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateAuthorityCertificateAuthorityRule)(nil)).Elem()
}

func (o CertificateAuthorityCertificateAuthorityRuleArrayOutput) ToCertificateAuthorityCertificateAuthorityRuleArrayOutput() CertificateAuthorityCertificateAuthorityRuleArrayOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityRuleArrayOutput) ToCertificateAuthorityCertificateAuthorityRuleArrayOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityRuleArrayOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateAuthorityCertificateAuthorityRule] {
	return pulumix.Output[[]CertificateAuthorityCertificateAuthorityRule]{
		OutputState: o.OutputState,
	}
}

func (o CertificateAuthorityCertificateAuthorityRuleArrayOutput) Index(i pulumi.IntInput) CertificateAuthorityCertificateAuthorityRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateAuthorityCertificateAuthorityRule {
		return vs[0].([]CertificateAuthorityCertificateAuthorityRule)[vs[1].(int)]
	}).(CertificateAuthorityCertificateAuthorityRuleOutput)
}

type CertificateAuthorityCertificateRevocationListDetails struct {
	// (Updatable) Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls []string `pulumi:"customFormattedUrls"`
	// (Updatable) The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfig CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig `pulumi:"objectStorageConfig"`
}

// CertificateAuthorityCertificateRevocationListDetailsInput is an input type that accepts CertificateAuthorityCertificateRevocationListDetailsArgs and CertificateAuthorityCertificateRevocationListDetailsOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateRevocationListDetailsInput` via:
//
//	CertificateAuthorityCertificateRevocationListDetailsArgs{...}
type CertificateAuthorityCertificateRevocationListDetailsInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateRevocationListDetailsOutput() CertificateAuthorityCertificateRevocationListDetailsOutput
	ToCertificateAuthorityCertificateRevocationListDetailsOutputWithContext(context.Context) CertificateAuthorityCertificateRevocationListDetailsOutput
}

type CertificateAuthorityCertificateRevocationListDetailsArgs struct {
	// (Updatable) Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls pulumi.StringArrayInput `pulumi:"customFormattedUrls"`
	// (Updatable) The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfig CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigInput `pulumi:"objectStorageConfig"`
}

func (CertificateAuthorityCertificateRevocationListDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateRevocationListDetails)(nil)).Elem()
}

func (i CertificateAuthorityCertificateRevocationListDetailsArgs) ToCertificateAuthorityCertificateRevocationListDetailsOutput() CertificateAuthorityCertificateRevocationListDetailsOutput {
	return i.ToCertificateAuthorityCertificateRevocationListDetailsOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateRevocationListDetailsArgs) ToCertificateAuthorityCertificateRevocationListDetailsOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateRevocationListDetailsOutput)
}

func (i CertificateAuthorityCertificateRevocationListDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateRevocationListDetails] {
	return pulumix.Output[CertificateAuthorityCertificateRevocationListDetails]{
		OutputState: i.ToCertificateAuthorityCertificateRevocationListDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i CertificateAuthorityCertificateRevocationListDetailsArgs) ToCertificateAuthorityCertificateRevocationListDetailsPtrOutput() CertificateAuthorityCertificateRevocationListDetailsPtrOutput {
	return i.ToCertificateAuthorityCertificateRevocationListDetailsPtrOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateRevocationListDetailsArgs) ToCertificateAuthorityCertificateRevocationListDetailsPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateRevocationListDetailsOutput).ToCertificateAuthorityCertificateRevocationListDetailsPtrOutputWithContext(ctx)
}

// CertificateAuthorityCertificateRevocationListDetailsPtrInput is an input type that accepts CertificateAuthorityCertificateRevocationListDetailsArgs, CertificateAuthorityCertificateRevocationListDetailsPtr and CertificateAuthorityCertificateRevocationListDetailsPtrOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateRevocationListDetailsPtrInput` via:
//
//	        CertificateAuthorityCertificateRevocationListDetailsArgs{...}
//
//	or:
//
//	        nil
type CertificateAuthorityCertificateRevocationListDetailsPtrInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateRevocationListDetailsPtrOutput() CertificateAuthorityCertificateRevocationListDetailsPtrOutput
	ToCertificateAuthorityCertificateRevocationListDetailsPtrOutputWithContext(context.Context) CertificateAuthorityCertificateRevocationListDetailsPtrOutput
}

type certificateAuthorityCertificateRevocationListDetailsPtrType CertificateAuthorityCertificateRevocationListDetailsArgs

func CertificateAuthorityCertificateRevocationListDetailsPtr(v *CertificateAuthorityCertificateRevocationListDetailsArgs) CertificateAuthorityCertificateRevocationListDetailsPtrInput {
	return (*certificateAuthorityCertificateRevocationListDetailsPtrType)(v)
}

func (*certificateAuthorityCertificateRevocationListDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateRevocationListDetails)(nil)).Elem()
}

func (i *certificateAuthorityCertificateRevocationListDetailsPtrType) ToCertificateAuthorityCertificateRevocationListDetailsPtrOutput() CertificateAuthorityCertificateRevocationListDetailsPtrOutput {
	return i.ToCertificateAuthorityCertificateRevocationListDetailsPtrOutputWithContext(context.Background())
}

func (i *certificateAuthorityCertificateRevocationListDetailsPtrType) ToCertificateAuthorityCertificateRevocationListDetailsPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateRevocationListDetailsPtrOutput)
}

func (i *certificateAuthorityCertificateRevocationListDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*CertificateAuthorityCertificateRevocationListDetails] {
	return pulumix.Output[*CertificateAuthorityCertificateRevocationListDetails]{
		OutputState: i.ToCertificateAuthorityCertificateRevocationListDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

type CertificateAuthorityCertificateRevocationListDetailsOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateRevocationListDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateRevocationListDetails)(nil)).Elem()
}

func (o CertificateAuthorityCertificateRevocationListDetailsOutput) ToCertificateAuthorityCertificateRevocationListDetailsOutput() CertificateAuthorityCertificateRevocationListDetailsOutput {
	return o
}

func (o CertificateAuthorityCertificateRevocationListDetailsOutput) ToCertificateAuthorityCertificateRevocationListDetailsOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsOutput {
	return o
}

func (o CertificateAuthorityCertificateRevocationListDetailsOutput) ToCertificateAuthorityCertificateRevocationListDetailsPtrOutput() CertificateAuthorityCertificateRevocationListDetailsPtrOutput {
	return o.ToCertificateAuthorityCertificateRevocationListDetailsPtrOutputWithContext(context.Background())
}

func (o CertificateAuthorityCertificateRevocationListDetailsOutput) ToCertificateAuthorityCertificateRevocationListDetailsPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateAuthorityCertificateRevocationListDetails) *CertificateAuthorityCertificateRevocationListDetails {
		return &v
	}).(CertificateAuthorityCertificateRevocationListDetailsPtrOutput)
}

func (o CertificateAuthorityCertificateRevocationListDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateRevocationListDetails] {
	return pulumix.Output[CertificateAuthorityCertificateRevocationListDetails]{
		OutputState: o.OutputState,
	}
}

// (Updatable) Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o CertificateAuthorityCertificateRevocationListDetailsOutput) CustomFormattedUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateRevocationListDetails) []string { return v.CustomFormattedUrls }).(pulumi.StringArrayOutput)
}

// (Updatable) The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
func (o CertificateAuthorityCertificateRevocationListDetailsOutput) ObjectStorageConfig() CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateRevocationListDetails) CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig {
		return v.ObjectStorageConfig
	}).(CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput)
}

type CertificateAuthorityCertificateRevocationListDetailsPtrOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateRevocationListDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateRevocationListDetails)(nil)).Elem()
}

func (o CertificateAuthorityCertificateRevocationListDetailsPtrOutput) ToCertificateAuthorityCertificateRevocationListDetailsPtrOutput() CertificateAuthorityCertificateRevocationListDetailsPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateRevocationListDetailsPtrOutput) ToCertificateAuthorityCertificateRevocationListDetailsPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateRevocationListDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CertificateAuthorityCertificateRevocationListDetails] {
	return pulumix.Output[*CertificateAuthorityCertificateRevocationListDetails]{
		OutputState: o.OutputState,
	}
}

func (o CertificateAuthorityCertificateRevocationListDetailsPtrOutput) Elem() CertificateAuthorityCertificateRevocationListDetailsOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateRevocationListDetails) CertificateAuthorityCertificateRevocationListDetails {
		if v != nil {
			return *v
		}
		var ret CertificateAuthorityCertificateRevocationListDetails
		return ret
	}).(CertificateAuthorityCertificateRevocationListDetailsOutput)
}

// (Updatable) Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o CertificateAuthorityCertificateRevocationListDetailsPtrOutput) CustomFormattedUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateRevocationListDetails) []string {
		if v == nil {
			return nil
		}
		return v.CustomFormattedUrls
	}).(pulumi.StringArrayOutput)
}

// (Updatable) The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
func (o CertificateAuthorityCertificateRevocationListDetailsPtrOutput) ObjectStorageConfig() CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateRevocationListDetails) *CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig {
		if v == nil {
			return nil
		}
		return &v.ObjectStorageConfig
	}).(CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput)
}

type CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig struct {
	// (Updatable) The name of the bucket where the CRL is stored.
	ObjectStorageBucketName string `pulumi:"objectStorageBucketName"`
	// (Updatable) The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace *string `pulumi:"objectStorageNamespace"`
	// (Updatable) The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat string `pulumi:"objectStorageObjectNameFormat"`
}

// CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigInput is an input type that accepts CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs and CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigInput` via:
//
//	CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs{...}
type CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput() CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput
	ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutputWithContext(context.Context) CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput
}

type CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs struct {
	// (Updatable) The name of the bucket where the CRL is stored.
	ObjectStorageBucketName pulumi.StringInput `pulumi:"objectStorageBucketName"`
	// (Updatable) The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace pulumi.StringPtrInput `pulumi:"objectStorageNamespace"`
	// (Updatable) The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat pulumi.StringInput `pulumi:"objectStorageObjectNameFormat"`
}

func (CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig)(nil)).Elem()
}

func (i CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput() CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput {
	return i.ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput)
}

func (i CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig] {
	return pulumix.Output[CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig]{
		OutputState: i.ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutputWithContext(ctx).OutputState,
	}
}

func (i CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput() CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput {
	return i.ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput).ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutputWithContext(ctx)
}

// CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrInput is an input type that accepts CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs, CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtr and CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrInput` via:
//
//	        CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs{...}
//
//	or:
//
//	        nil
type CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput() CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput
	ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutputWithContext(context.Context) CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput
}

type certificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrType CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs

func CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtr(v *CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs) CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrInput {
	return (*certificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrType)(v)
}

func (*certificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig)(nil)).Elem()
}

func (i *certificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrType) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput() CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput {
	return i.ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutputWithContext(context.Background())
}

func (i *certificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrType) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput)
}

func (i *certificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig] {
	return pulumix.Output[*CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig]{
		OutputState: i.ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig)(nil)).Elem()
}

func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput() CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput {
	return o
}

func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput {
	return o
}

func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput() CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput {
	return o.ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutputWithContext(context.Background())
}

func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig) *CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig {
		return &v
	}).(CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput)
}

func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig] {
	return pulumix.Output[CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The name of the bucket where the CRL is stored.
func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput) ObjectStorageBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig) string {
		return v.ObjectStorageBucketName
	}).(pulumi.StringOutput)
}

// (Updatable) The tenancy of the bucket where the CRL is stored.
func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput) ObjectStorageNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig) *string {
		return v.ObjectStorageNamespace
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput) ObjectStorageObjectNameFormat() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig) string {
		return v.ObjectStorageObjectNameFormat
	}).(pulumi.StringOutput)
}

type CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig)(nil)).Elem()
}

func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput() CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput) ToCertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig] {
	return pulumix.Output[*CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput) Elem() CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig) CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig {
		if v != nil {
			return *v
		}
		var ret CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig
		return ret
	}).(CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput)
}

// (Updatable) The name of the bucket where the CRL is stored.
func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput) ObjectStorageBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectStorageBucketName
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The tenancy of the bucket where the CRL is stored.
func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput) ObjectStorageNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig) *string {
		if v == nil {
			return nil
		}
		return v.ObjectStorageNamespace
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput) ObjectStorageObjectNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectStorageObjectNameFormat
	}).(pulumi.StringPtrOutput)
}

type CertificateAuthorityCurrentVersion struct {
	// The OCID of the CA.
	CertificateAuthorityId *string `pulumi:"certificateAuthorityId"`
	// The version number of the issuing CA.
	IssuerCaVersionNumber *string `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses []CertificateAuthorityCurrentVersionRevocationStatus `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber *string `pulumi:"serialNumber"`
	// A list of rotation states for this CA version.
	Stages []string `pulumi:"stages"`
	// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion *string `pulumi:"timeOfDeletion"`
	// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []CertificateAuthorityCurrentVersionValidity `pulumi:"validities"`
	// (Updatable) The name of the CA version. When the value is not null, a name is unique across versions of a given CA.
	VersionName *string `pulumi:"versionName"`
	// The version number of the CA.
	VersionNumber *string `pulumi:"versionNumber"`
}

// CertificateAuthorityCurrentVersionInput is an input type that accepts CertificateAuthorityCurrentVersionArgs and CertificateAuthorityCurrentVersionOutput values.
// You can construct a concrete instance of `CertificateAuthorityCurrentVersionInput` via:
//
//	CertificateAuthorityCurrentVersionArgs{...}
type CertificateAuthorityCurrentVersionInput interface {
	pulumi.Input

	ToCertificateAuthorityCurrentVersionOutput() CertificateAuthorityCurrentVersionOutput
	ToCertificateAuthorityCurrentVersionOutputWithContext(context.Context) CertificateAuthorityCurrentVersionOutput
}

type CertificateAuthorityCurrentVersionArgs struct {
	// The OCID of the CA.
	CertificateAuthorityId pulumi.StringPtrInput `pulumi:"certificateAuthorityId"`
	// The version number of the issuing CA.
	IssuerCaVersionNumber pulumi.StringPtrInput `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses CertificateAuthorityCurrentVersionRevocationStatusArrayInput `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// A list of rotation states for this CA version.
	Stages pulumi.StringArrayInput `pulumi:"stages"`
	// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringPtrInput `pulumi:"timeOfDeletion"`
	// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities CertificateAuthorityCurrentVersionValidityArrayInput `pulumi:"validities"`
	// (Updatable) The name of the CA version. When the value is not null, a name is unique across versions of a given CA.
	VersionName pulumi.StringPtrInput `pulumi:"versionName"`
	// The version number of the CA.
	VersionNumber pulumi.StringPtrInput `pulumi:"versionNumber"`
}

func (CertificateAuthorityCurrentVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCurrentVersion)(nil)).Elem()
}

func (i CertificateAuthorityCurrentVersionArgs) ToCertificateAuthorityCurrentVersionOutput() CertificateAuthorityCurrentVersionOutput {
	return i.ToCertificateAuthorityCurrentVersionOutputWithContext(context.Background())
}

func (i CertificateAuthorityCurrentVersionArgs) ToCertificateAuthorityCurrentVersionOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCurrentVersionOutput)
}

func (i CertificateAuthorityCurrentVersionArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCurrentVersion] {
	return pulumix.Output[CertificateAuthorityCurrentVersion]{
		OutputState: i.ToCertificateAuthorityCurrentVersionOutputWithContext(ctx).OutputState,
	}
}

// CertificateAuthorityCurrentVersionArrayInput is an input type that accepts CertificateAuthorityCurrentVersionArray and CertificateAuthorityCurrentVersionArrayOutput values.
// You can construct a concrete instance of `CertificateAuthorityCurrentVersionArrayInput` via:
//
//	CertificateAuthorityCurrentVersionArray{ CertificateAuthorityCurrentVersionArgs{...} }
type CertificateAuthorityCurrentVersionArrayInput interface {
	pulumi.Input

	ToCertificateAuthorityCurrentVersionArrayOutput() CertificateAuthorityCurrentVersionArrayOutput
	ToCertificateAuthorityCurrentVersionArrayOutputWithContext(context.Context) CertificateAuthorityCurrentVersionArrayOutput
}

type CertificateAuthorityCurrentVersionArray []CertificateAuthorityCurrentVersionInput

func (CertificateAuthorityCurrentVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateAuthorityCurrentVersion)(nil)).Elem()
}

func (i CertificateAuthorityCurrentVersionArray) ToCertificateAuthorityCurrentVersionArrayOutput() CertificateAuthorityCurrentVersionArrayOutput {
	return i.ToCertificateAuthorityCurrentVersionArrayOutputWithContext(context.Background())
}

func (i CertificateAuthorityCurrentVersionArray) ToCertificateAuthorityCurrentVersionArrayOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCurrentVersionArrayOutput)
}

func (i CertificateAuthorityCurrentVersionArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateAuthorityCurrentVersion] {
	return pulumix.Output[[]CertificateAuthorityCurrentVersion]{
		OutputState: i.ToCertificateAuthorityCurrentVersionArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateAuthorityCurrentVersionOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCurrentVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCurrentVersion)(nil)).Elem()
}

func (o CertificateAuthorityCurrentVersionOutput) ToCertificateAuthorityCurrentVersionOutput() CertificateAuthorityCurrentVersionOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionOutput) ToCertificateAuthorityCurrentVersionOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCurrentVersion] {
	return pulumix.Output[CertificateAuthorityCurrentVersion]{
		OutputState: o.OutputState,
	}
}

// The OCID of the CA.
func (o CertificateAuthorityCurrentVersionOutput) CertificateAuthorityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersion) *string { return v.CertificateAuthorityId }).(pulumi.StringPtrOutput)
}

// The version number of the issuing CA.
func (o CertificateAuthorityCurrentVersionOutput) IssuerCaVersionNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersion) *string { return v.IssuerCaVersionNumber }).(pulumi.StringPtrOutput)
}

// The current revocation status of the entity.
func (o CertificateAuthorityCurrentVersionOutput) RevocationStatuses() CertificateAuthorityCurrentVersionRevocationStatusArrayOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersion) []CertificateAuthorityCurrentVersionRevocationStatus {
		return v.RevocationStatuses
	}).(CertificateAuthorityCurrentVersionRevocationStatusArrayOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o CertificateAuthorityCurrentVersionOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersion) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// A list of rotation states for this CA version.
func (o CertificateAuthorityCurrentVersionOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersion) []string { return v.Stages }).(pulumi.StringArrayOutput)
}

// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateAuthorityCurrentVersionOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersion) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateAuthorityCurrentVersionOutput) TimeOfDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersion) *string { return v.TimeOfDeletion }).(pulumi.StringPtrOutput)
}

// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o CertificateAuthorityCurrentVersionOutput) Validities() CertificateAuthorityCurrentVersionValidityArrayOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersion) []CertificateAuthorityCurrentVersionValidity {
		return v.Validities
	}).(CertificateAuthorityCurrentVersionValidityArrayOutput)
}

// (Updatable) The name of the CA version. When the value is not null, a name is unique across versions of a given CA.
func (o CertificateAuthorityCurrentVersionOutput) VersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersion) *string { return v.VersionName }).(pulumi.StringPtrOutput)
}

// The version number of the CA.
func (o CertificateAuthorityCurrentVersionOutput) VersionNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersion) *string { return v.VersionNumber }).(pulumi.StringPtrOutput)
}

type CertificateAuthorityCurrentVersionArrayOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCurrentVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateAuthorityCurrentVersion)(nil)).Elem()
}

func (o CertificateAuthorityCurrentVersionArrayOutput) ToCertificateAuthorityCurrentVersionArrayOutput() CertificateAuthorityCurrentVersionArrayOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionArrayOutput) ToCertificateAuthorityCurrentVersionArrayOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionArrayOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateAuthorityCurrentVersion] {
	return pulumix.Output[[]CertificateAuthorityCurrentVersion]{
		OutputState: o.OutputState,
	}
}

func (o CertificateAuthorityCurrentVersionArrayOutput) Index(i pulumi.IntInput) CertificateAuthorityCurrentVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateAuthorityCurrentVersion {
		return vs[0].([]CertificateAuthorityCurrentVersion)[vs[1].(int)]
	}).(CertificateAuthorityCurrentVersionOutput)
}

type CertificateAuthorityCurrentVersionRevocationStatus struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason *string `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation *string `pulumi:"timeOfRevocation"`
}

// CertificateAuthorityCurrentVersionRevocationStatusInput is an input type that accepts CertificateAuthorityCurrentVersionRevocationStatusArgs and CertificateAuthorityCurrentVersionRevocationStatusOutput values.
// You can construct a concrete instance of `CertificateAuthorityCurrentVersionRevocationStatusInput` via:
//
//	CertificateAuthorityCurrentVersionRevocationStatusArgs{...}
type CertificateAuthorityCurrentVersionRevocationStatusInput interface {
	pulumi.Input

	ToCertificateAuthorityCurrentVersionRevocationStatusOutput() CertificateAuthorityCurrentVersionRevocationStatusOutput
	ToCertificateAuthorityCurrentVersionRevocationStatusOutputWithContext(context.Context) CertificateAuthorityCurrentVersionRevocationStatusOutput
}

type CertificateAuthorityCurrentVersionRevocationStatusArgs struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason pulumi.StringPtrInput `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation pulumi.StringPtrInput `pulumi:"timeOfRevocation"`
}

func (CertificateAuthorityCurrentVersionRevocationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i CertificateAuthorityCurrentVersionRevocationStatusArgs) ToCertificateAuthorityCurrentVersionRevocationStatusOutput() CertificateAuthorityCurrentVersionRevocationStatusOutput {
	return i.ToCertificateAuthorityCurrentVersionRevocationStatusOutputWithContext(context.Background())
}

func (i CertificateAuthorityCurrentVersionRevocationStatusArgs) ToCertificateAuthorityCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionRevocationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCurrentVersionRevocationStatusOutput)
}

func (i CertificateAuthorityCurrentVersionRevocationStatusArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCurrentVersionRevocationStatus] {
	return pulumix.Output[CertificateAuthorityCurrentVersionRevocationStatus]{
		OutputState: i.ToCertificateAuthorityCurrentVersionRevocationStatusOutputWithContext(ctx).OutputState,
	}
}

// CertificateAuthorityCurrentVersionRevocationStatusArrayInput is an input type that accepts CertificateAuthorityCurrentVersionRevocationStatusArray and CertificateAuthorityCurrentVersionRevocationStatusArrayOutput values.
// You can construct a concrete instance of `CertificateAuthorityCurrentVersionRevocationStatusArrayInput` via:
//
//	CertificateAuthorityCurrentVersionRevocationStatusArray{ CertificateAuthorityCurrentVersionRevocationStatusArgs{...} }
type CertificateAuthorityCurrentVersionRevocationStatusArrayInput interface {
	pulumi.Input

	ToCertificateAuthorityCurrentVersionRevocationStatusArrayOutput() CertificateAuthorityCurrentVersionRevocationStatusArrayOutput
	ToCertificateAuthorityCurrentVersionRevocationStatusArrayOutputWithContext(context.Context) CertificateAuthorityCurrentVersionRevocationStatusArrayOutput
}

type CertificateAuthorityCurrentVersionRevocationStatusArray []CertificateAuthorityCurrentVersionRevocationStatusInput

func (CertificateAuthorityCurrentVersionRevocationStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateAuthorityCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i CertificateAuthorityCurrentVersionRevocationStatusArray) ToCertificateAuthorityCurrentVersionRevocationStatusArrayOutput() CertificateAuthorityCurrentVersionRevocationStatusArrayOutput {
	return i.ToCertificateAuthorityCurrentVersionRevocationStatusArrayOutputWithContext(context.Background())
}

func (i CertificateAuthorityCurrentVersionRevocationStatusArray) ToCertificateAuthorityCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionRevocationStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCurrentVersionRevocationStatusArrayOutput)
}

func (i CertificateAuthorityCurrentVersionRevocationStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateAuthorityCurrentVersionRevocationStatus] {
	return pulumix.Output[[]CertificateAuthorityCurrentVersionRevocationStatus]{
		OutputState: i.ToCertificateAuthorityCurrentVersionRevocationStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateAuthorityCurrentVersionRevocationStatusOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCurrentVersionRevocationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o CertificateAuthorityCurrentVersionRevocationStatusOutput) ToCertificateAuthorityCurrentVersionRevocationStatusOutput() CertificateAuthorityCurrentVersionRevocationStatusOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionRevocationStatusOutput) ToCertificateAuthorityCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionRevocationStatusOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionRevocationStatusOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCurrentVersionRevocationStatus] {
	return pulumix.Output[CertificateAuthorityCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

// The reason the certificate or certificate authority (CA) was revoked.
func (o CertificateAuthorityCurrentVersionRevocationStatusOutput) RevocationReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersionRevocationStatus) *string { return v.RevocationReason }).(pulumi.StringPtrOutput)
}

// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateAuthorityCurrentVersionRevocationStatusOutput) TimeOfRevocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersionRevocationStatus) *string { return v.TimeOfRevocation }).(pulumi.StringPtrOutput)
}

type CertificateAuthorityCurrentVersionRevocationStatusArrayOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCurrentVersionRevocationStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateAuthorityCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o CertificateAuthorityCurrentVersionRevocationStatusArrayOutput) ToCertificateAuthorityCurrentVersionRevocationStatusArrayOutput() CertificateAuthorityCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionRevocationStatusArrayOutput) ToCertificateAuthorityCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionRevocationStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateAuthorityCurrentVersionRevocationStatus] {
	return pulumix.Output[[]CertificateAuthorityCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

func (o CertificateAuthorityCurrentVersionRevocationStatusArrayOutput) Index(i pulumi.IntInput) CertificateAuthorityCurrentVersionRevocationStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateAuthorityCurrentVersionRevocationStatus {
		return vs[0].([]CertificateAuthorityCurrentVersionRevocationStatus)[vs[1].(int)]
	}).(CertificateAuthorityCurrentVersionRevocationStatusOutput)
}

type CertificateAuthorityCurrentVersionValidity struct {
	// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter *string `pulumi:"timeOfValidityNotAfter"`
	// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore *string `pulumi:"timeOfValidityNotBefore"`
}

// CertificateAuthorityCurrentVersionValidityInput is an input type that accepts CertificateAuthorityCurrentVersionValidityArgs and CertificateAuthorityCurrentVersionValidityOutput values.
// You can construct a concrete instance of `CertificateAuthorityCurrentVersionValidityInput` via:
//
//	CertificateAuthorityCurrentVersionValidityArgs{...}
type CertificateAuthorityCurrentVersionValidityInput interface {
	pulumi.Input

	ToCertificateAuthorityCurrentVersionValidityOutput() CertificateAuthorityCurrentVersionValidityOutput
	ToCertificateAuthorityCurrentVersionValidityOutputWithContext(context.Context) CertificateAuthorityCurrentVersionValidityOutput
}

type CertificateAuthorityCurrentVersionValidityArgs struct {
	// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringPtrInput `pulumi:"timeOfValidityNotAfter"`
	// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringPtrInput `pulumi:"timeOfValidityNotBefore"`
}

func (CertificateAuthorityCurrentVersionValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCurrentVersionValidity)(nil)).Elem()
}

func (i CertificateAuthorityCurrentVersionValidityArgs) ToCertificateAuthorityCurrentVersionValidityOutput() CertificateAuthorityCurrentVersionValidityOutput {
	return i.ToCertificateAuthorityCurrentVersionValidityOutputWithContext(context.Background())
}

func (i CertificateAuthorityCurrentVersionValidityArgs) ToCertificateAuthorityCurrentVersionValidityOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCurrentVersionValidityOutput)
}

func (i CertificateAuthorityCurrentVersionValidityArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCurrentVersionValidity] {
	return pulumix.Output[CertificateAuthorityCurrentVersionValidity]{
		OutputState: i.ToCertificateAuthorityCurrentVersionValidityOutputWithContext(ctx).OutputState,
	}
}

// CertificateAuthorityCurrentVersionValidityArrayInput is an input type that accepts CertificateAuthorityCurrentVersionValidityArray and CertificateAuthorityCurrentVersionValidityArrayOutput values.
// You can construct a concrete instance of `CertificateAuthorityCurrentVersionValidityArrayInput` via:
//
//	CertificateAuthorityCurrentVersionValidityArray{ CertificateAuthorityCurrentVersionValidityArgs{...} }
type CertificateAuthorityCurrentVersionValidityArrayInput interface {
	pulumi.Input

	ToCertificateAuthorityCurrentVersionValidityArrayOutput() CertificateAuthorityCurrentVersionValidityArrayOutput
	ToCertificateAuthorityCurrentVersionValidityArrayOutputWithContext(context.Context) CertificateAuthorityCurrentVersionValidityArrayOutput
}

type CertificateAuthorityCurrentVersionValidityArray []CertificateAuthorityCurrentVersionValidityInput

func (CertificateAuthorityCurrentVersionValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateAuthorityCurrentVersionValidity)(nil)).Elem()
}

func (i CertificateAuthorityCurrentVersionValidityArray) ToCertificateAuthorityCurrentVersionValidityArrayOutput() CertificateAuthorityCurrentVersionValidityArrayOutput {
	return i.ToCertificateAuthorityCurrentVersionValidityArrayOutputWithContext(context.Background())
}

func (i CertificateAuthorityCurrentVersionValidityArray) ToCertificateAuthorityCurrentVersionValidityArrayOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCurrentVersionValidityArrayOutput)
}

func (i CertificateAuthorityCurrentVersionValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateAuthorityCurrentVersionValidity] {
	return pulumix.Output[[]CertificateAuthorityCurrentVersionValidity]{
		OutputState: i.ToCertificateAuthorityCurrentVersionValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateAuthorityCurrentVersionValidityOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCurrentVersionValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCurrentVersionValidity)(nil)).Elem()
}

func (o CertificateAuthorityCurrentVersionValidityOutput) ToCertificateAuthorityCurrentVersionValidityOutput() CertificateAuthorityCurrentVersionValidityOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionValidityOutput) ToCertificateAuthorityCurrentVersionValidityOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionValidityOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionValidityOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthorityCurrentVersionValidity] {
	return pulumix.Output[CertificateAuthorityCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateAuthorityCurrentVersionValidityOutput) TimeOfValidityNotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersionValidity) *string { return v.TimeOfValidityNotAfter }).(pulumi.StringPtrOutput)
}

// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateAuthorityCurrentVersionValidityOutput) TimeOfValidityNotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCurrentVersionValidity) *string { return v.TimeOfValidityNotBefore }).(pulumi.StringPtrOutput)
}

type CertificateAuthorityCurrentVersionValidityArrayOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCurrentVersionValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateAuthorityCurrentVersionValidity)(nil)).Elem()
}

func (o CertificateAuthorityCurrentVersionValidityArrayOutput) ToCertificateAuthorityCurrentVersionValidityArrayOutput() CertificateAuthorityCurrentVersionValidityArrayOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionValidityArrayOutput) ToCertificateAuthorityCurrentVersionValidityArrayOutputWithContext(ctx context.Context) CertificateAuthorityCurrentVersionValidityArrayOutput {
	return o
}

func (o CertificateAuthorityCurrentVersionValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateAuthorityCurrentVersionValidity] {
	return pulumix.Output[[]CertificateAuthorityCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

func (o CertificateAuthorityCurrentVersionValidityArrayOutput) Index(i pulumi.IntInput) CertificateAuthorityCurrentVersionValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateAuthorityCurrentVersionValidity {
		return vs[0].([]CertificateAuthorityCurrentVersionValidity)[vs[1].(int)]
	}).(CertificateAuthorityCurrentVersionValidityOutput)
}

type CertificateAuthoritySubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName *string `pulumi:"commonName"`
	// Country name (RDN C).
	Country *string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier *string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent *string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier *string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName *string `pulumi:"givenName"`
	// Personal initials.
	Initials *string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName *string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization *string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym *string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber *string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName *string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street *string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname *string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title *string `pulumi:"title"`
	// User ID (RDN UID).
	UserId *string `pulumi:"userId"`
}

// CertificateAuthoritySubjectInput is an input type that accepts CertificateAuthoritySubjectArgs and CertificateAuthoritySubjectOutput values.
// You can construct a concrete instance of `CertificateAuthoritySubjectInput` via:
//
//	CertificateAuthoritySubjectArgs{...}
type CertificateAuthoritySubjectInput interface {
	pulumi.Input

	ToCertificateAuthoritySubjectOutput() CertificateAuthoritySubjectOutput
	ToCertificateAuthoritySubjectOutputWithContext(context.Context) CertificateAuthoritySubjectOutput
}

type CertificateAuthoritySubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringPtrInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringPtrInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringPtrInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringPtrInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringPtrInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringPtrInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringPtrInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringPtrInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringPtrInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringPtrInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringPtrInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringPtrInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringPtrInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (CertificateAuthoritySubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthoritySubject)(nil)).Elem()
}

func (i CertificateAuthoritySubjectArgs) ToCertificateAuthoritySubjectOutput() CertificateAuthoritySubjectOutput {
	return i.ToCertificateAuthoritySubjectOutputWithContext(context.Background())
}

func (i CertificateAuthoritySubjectArgs) ToCertificateAuthoritySubjectOutputWithContext(ctx context.Context) CertificateAuthoritySubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthoritySubjectOutput)
}

func (i CertificateAuthoritySubjectArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthoritySubject] {
	return pulumix.Output[CertificateAuthoritySubject]{
		OutputState: i.ToCertificateAuthoritySubjectOutputWithContext(ctx).OutputState,
	}
}

// CertificateAuthoritySubjectArrayInput is an input type that accepts CertificateAuthoritySubjectArray and CertificateAuthoritySubjectArrayOutput values.
// You can construct a concrete instance of `CertificateAuthoritySubjectArrayInput` via:
//
//	CertificateAuthoritySubjectArray{ CertificateAuthoritySubjectArgs{...} }
type CertificateAuthoritySubjectArrayInput interface {
	pulumi.Input

	ToCertificateAuthoritySubjectArrayOutput() CertificateAuthoritySubjectArrayOutput
	ToCertificateAuthoritySubjectArrayOutputWithContext(context.Context) CertificateAuthoritySubjectArrayOutput
}

type CertificateAuthoritySubjectArray []CertificateAuthoritySubjectInput

func (CertificateAuthoritySubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateAuthoritySubject)(nil)).Elem()
}

func (i CertificateAuthoritySubjectArray) ToCertificateAuthoritySubjectArrayOutput() CertificateAuthoritySubjectArrayOutput {
	return i.ToCertificateAuthoritySubjectArrayOutputWithContext(context.Background())
}

func (i CertificateAuthoritySubjectArray) ToCertificateAuthoritySubjectArrayOutputWithContext(ctx context.Context) CertificateAuthoritySubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthoritySubjectArrayOutput)
}

func (i CertificateAuthoritySubjectArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateAuthoritySubject] {
	return pulumix.Output[[]CertificateAuthoritySubject]{
		OutputState: i.ToCertificateAuthoritySubjectArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateAuthoritySubjectOutput struct{ *pulumi.OutputState }

func (CertificateAuthoritySubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthoritySubject)(nil)).Elem()
}

func (o CertificateAuthoritySubjectOutput) ToCertificateAuthoritySubjectOutput() CertificateAuthoritySubjectOutput {
	return o
}

func (o CertificateAuthoritySubjectOutput) ToCertificateAuthoritySubjectOutputWithContext(ctx context.Context) CertificateAuthoritySubjectOutput {
	return o
}

func (o CertificateAuthoritySubjectOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateAuthoritySubject] {
	return pulumix.Output[CertificateAuthoritySubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o CertificateAuthoritySubjectOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

// Country name (RDN C).
func (o CertificateAuthoritySubjectOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o CertificateAuthoritySubjectOutput) DistinguishedNameQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.DistinguishedNameQualifier }).(pulumi.StringPtrOutput)
}

// Domain component (RDN DC).
func (o CertificateAuthoritySubjectOutput) DomainComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.DomainComponent }).(pulumi.StringPtrOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o CertificateAuthoritySubjectOutput) GenerationQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.GenerationQualifier }).(pulumi.StringPtrOutput)
}

// Personal given name (RDN G or GN).
func (o CertificateAuthoritySubjectOutput) GivenName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.GivenName }).(pulumi.StringPtrOutput)
}

// Personal initials.
func (o CertificateAuthoritySubjectOutput) Initials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.Initials }).(pulumi.StringPtrOutput)
}

// Locality (RDN L).
func (o CertificateAuthoritySubjectOutput) LocalityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.LocalityName }).(pulumi.StringPtrOutput)
}

// Organization (RDN O).
func (o CertificateAuthoritySubjectOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// Organizational unit (RDN OU).
func (o CertificateAuthoritySubjectOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// Subject pseudonym.
func (o CertificateAuthoritySubjectOutput) Pseudonym() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.Pseudonym }).(pulumi.StringPtrOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o CertificateAuthoritySubjectOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// State or province name (RDN ST or S).
func (o CertificateAuthoritySubjectOutput) StateOrProvinceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.StateOrProvinceName }).(pulumi.StringPtrOutput)
}

// Street address (RDN STREET).
func (o CertificateAuthoritySubjectOutput) Street() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.Street }).(pulumi.StringPtrOutput)
}

// Personal surname (RDN SN).
func (o CertificateAuthoritySubjectOutput) Surname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.Surname }).(pulumi.StringPtrOutput)
}

// Title (RDN T or TITLE).
func (o CertificateAuthoritySubjectOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// User ID (RDN UID).
func (o CertificateAuthoritySubjectOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthoritySubject) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type CertificateAuthoritySubjectArrayOutput struct{ *pulumi.OutputState }

func (CertificateAuthoritySubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateAuthoritySubject)(nil)).Elem()
}

func (o CertificateAuthoritySubjectArrayOutput) ToCertificateAuthoritySubjectArrayOutput() CertificateAuthoritySubjectArrayOutput {
	return o
}

func (o CertificateAuthoritySubjectArrayOutput) ToCertificateAuthoritySubjectArrayOutputWithContext(ctx context.Context) CertificateAuthoritySubjectArrayOutput {
	return o
}

func (o CertificateAuthoritySubjectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateAuthoritySubject] {
	return pulumix.Output[[]CertificateAuthoritySubject]{
		OutputState: o.OutputState,
	}
}

func (o CertificateAuthoritySubjectArrayOutput) Index(i pulumi.IntInput) CertificateAuthoritySubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateAuthoritySubject {
		return vs[0].([]CertificateAuthoritySubject)[vs[1].(int)]
	}).(CertificateAuthoritySubjectOutput)
}

type CertificateCertificateConfig struct {
	// The name of the profile used to create the certificate, which depends on the type of certificate you need.
	CertificateProfileType *string `pulumi:"certificateProfileType"`
	// (Updatable) The origin of the certificate.
	ConfigType string `pulumi:"configType"`
	// (Updatable) The certificate signing request (in PEM format).
	CsrPem *string `pulumi:"csrPem"`
	// The OCID of the private CA.
	IssuerCertificateAuthorityId *string `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm to use to create key pairs.
	KeyAlgorithm *string `pulumi:"keyAlgorithm"`
	// The algorithm to use to sign the public key certificate.
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subject *CertificateCertificateConfigSubject `pulumi:"subject"`
	// A list of subject alternative names.
	SubjectAlternativeNames []CertificateCertificateConfigSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validity *CertificateCertificateConfigValidity `pulumi:"validity"`
	// (Updatable) A name for the certificate. When the value is not null, a name is unique across versions of a given certificate.
	VersionName *string `pulumi:"versionName"`
}

// CertificateCertificateConfigInput is an input type that accepts CertificateCertificateConfigArgs and CertificateCertificateConfigOutput values.
// You can construct a concrete instance of `CertificateCertificateConfigInput` via:
//
//	CertificateCertificateConfigArgs{...}
type CertificateCertificateConfigInput interface {
	pulumi.Input

	ToCertificateCertificateConfigOutput() CertificateCertificateConfigOutput
	ToCertificateCertificateConfigOutputWithContext(context.Context) CertificateCertificateConfigOutput
}

type CertificateCertificateConfigArgs struct {
	// The name of the profile used to create the certificate, which depends on the type of certificate you need.
	CertificateProfileType pulumi.StringPtrInput `pulumi:"certificateProfileType"`
	// (Updatable) The origin of the certificate.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// (Updatable) The certificate signing request (in PEM format).
	CsrPem pulumi.StringPtrInput `pulumi:"csrPem"`
	// The OCID of the private CA.
	IssuerCertificateAuthorityId pulumi.StringPtrInput `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm to use to create key pairs.
	KeyAlgorithm pulumi.StringPtrInput `pulumi:"keyAlgorithm"`
	// The algorithm to use to sign the public key certificate.
	SignatureAlgorithm pulumi.StringPtrInput `pulumi:"signatureAlgorithm"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subject CertificateCertificateConfigSubjectPtrInput `pulumi:"subject"`
	// A list of subject alternative names.
	SubjectAlternativeNames CertificateCertificateConfigSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validity CertificateCertificateConfigValidityPtrInput `pulumi:"validity"`
	// (Updatable) A name for the certificate. When the value is not null, a name is unique across versions of a given certificate.
	VersionName pulumi.StringPtrInput `pulumi:"versionName"`
}

func (CertificateCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateConfig)(nil)).Elem()
}

func (i CertificateCertificateConfigArgs) ToCertificateCertificateConfigOutput() CertificateCertificateConfigOutput {
	return i.ToCertificateCertificateConfigOutputWithContext(context.Background())
}

func (i CertificateCertificateConfigArgs) ToCertificateCertificateConfigOutputWithContext(ctx context.Context) CertificateCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateConfigOutput)
}

func (i CertificateCertificateConfigArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateConfig] {
	return pulumix.Output[CertificateCertificateConfig]{
		OutputState: i.ToCertificateCertificateConfigOutputWithContext(ctx).OutputState,
	}
}

func (i CertificateCertificateConfigArgs) ToCertificateCertificateConfigPtrOutput() CertificateCertificateConfigPtrOutput {
	return i.ToCertificateCertificateConfigPtrOutputWithContext(context.Background())
}

func (i CertificateCertificateConfigArgs) ToCertificateCertificateConfigPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateConfigOutput).ToCertificateCertificateConfigPtrOutputWithContext(ctx)
}

// CertificateCertificateConfigPtrInput is an input type that accepts CertificateCertificateConfigArgs, CertificateCertificateConfigPtr and CertificateCertificateConfigPtrOutput values.
// You can construct a concrete instance of `CertificateCertificateConfigPtrInput` via:
//
//	        CertificateCertificateConfigArgs{...}
//
//	or:
//
//	        nil
type CertificateCertificateConfigPtrInput interface {
	pulumi.Input

	ToCertificateCertificateConfigPtrOutput() CertificateCertificateConfigPtrOutput
	ToCertificateCertificateConfigPtrOutputWithContext(context.Context) CertificateCertificateConfigPtrOutput
}

type certificateCertificateConfigPtrType CertificateCertificateConfigArgs

func CertificateCertificateConfigPtr(v *CertificateCertificateConfigArgs) CertificateCertificateConfigPtrInput {
	return (*certificateCertificateConfigPtrType)(v)
}

func (*certificateCertificateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificateConfig)(nil)).Elem()
}

func (i *certificateCertificateConfigPtrType) ToCertificateCertificateConfigPtrOutput() CertificateCertificateConfigPtrOutput {
	return i.ToCertificateCertificateConfigPtrOutputWithContext(context.Background())
}

func (i *certificateCertificateConfigPtrType) ToCertificateCertificateConfigPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateConfigPtrOutput)
}

func (i *certificateCertificateConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*CertificateCertificateConfig] {
	return pulumix.Output[*CertificateCertificateConfig]{
		OutputState: i.ToCertificateCertificateConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type CertificateCertificateConfigOutput struct{ *pulumi.OutputState }

func (CertificateCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateConfig)(nil)).Elem()
}

func (o CertificateCertificateConfigOutput) ToCertificateCertificateConfigOutput() CertificateCertificateConfigOutput {
	return o
}

func (o CertificateCertificateConfigOutput) ToCertificateCertificateConfigOutputWithContext(ctx context.Context) CertificateCertificateConfigOutput {
	return o
}

func (o CertificateCertificateConfigOutput) ToCertificateCertificateConfigPtrOutput() CertificateCertificateConfigPtrOutput {
	return o.ToCertificateCertificateConfigPtrOutputWithContext(context.Background())
}

func (o CertificateCertificateConfigOutput) ToCertificateCertificateConfigPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateCertificateConfig) *CertificateCertificateConfig {
		return &v
	}).(CertificateCertificateConfigPtrOutput)
}

func (o CertificateCertificateConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateConfig] {
	return pulumix.Output[CertificateCertificateConfig]{
		OutputState: o.OutputState,
	}
}

// The name of the profile used to create the certificate, which depends on the type of certificate you need.
func (o CertificateCertificateConfigOutput) CertificateProfileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfig) *string { return v.CertificateProfileType }).(pulumi.StringPtrOutput)
}

// (Updatable) The origin of the certificate.
func (o CertificateCertificateConfigOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateCertificateConfig) string { return v.ConfigType }).(pulumi.StringOutput)
}

// (Updatable) The certificate signing request (in PEM format).
func (o CertificateCertificateConfigOutput) CsrPem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfig) *string { return v.CsrPem }).(pulumi.StringPtrOutput)
}

// The OCID of the private CA.
func (o CertificateCertificateConfigOutput) IssuerCertificateAuthorityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfig) *string { return v.IssuerCertificateAuthorityId }).(pulumi.StringPtrOutput)
}

// The algorithm to use to create key pairs.
func (o CertificateCertificateConfigOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfig) *string { return v.KeyAlgorithm }).(pulumi.StringPtrOutput)
}

// The algorithm to use to sign the public key certificate.
func (o CertificateCertificateConfigOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfig) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
func (o CertificateCertificateConfigOutput) Subject() CertificateCertificateConfigSubjectPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfig) *CertificateCertificateConfigSubject { return v.Subject }).(CertificateCertificateConfigSubjectPtrOutput)
}

// A list of subject alternative names.
func (o CertificateCertificateConfigOutput) SubjectAlternativeNames() CertificateCertificateConfigSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v CertificateCertificateConfig) []CertificateCertificateConfigSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(CertificateCertificateConfigSubjectAlternativeNameArrayOutput)
}

// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o CertificateCertificateConfigOutput) Validity() CertificateCertificateConfigValidityPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfig) *CertificateCertificateConfigValidity { return v.Validity }).(CertificateCertificateConfigValidityPtrOutput)
}

// (Updatable) A name for the certificate. When the value is not null, a name is unique across versions of a given certificate.
func (o CertificateCertificateConfigOutput) VersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfig) *string { return v.VersionName }).(pulumi.StringPtrOutput)
}

type CertificateCertificateConfigPtrOutput struct{ *pulumi.OutputState }

func (CertificateCertificateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificateConfig)(nil)).Elem()
}

func (o CertificateCertificateConfigPtrOutput) ToCertificateCertificateConfigPtrOutput() CertificateCertificateConfigPtrOutput {
	return o
}

func (o CertificateCertificateConfigPtrOutput) ToCertificateCertificateConfigPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigPtrOutput {
	return o
}

func (o CertificateCertificateConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CertificateCertificateConfig] {
	return pulumix.Output[*CertificateCertificateConfig]{
		OutputState: o.OutputState,
	}
}

func (o CertificateCertificateConfigPtrOutput) Elem() CertificateCertificateConfigOutput {
	return o.ApplyT(func(v *CertificateCertificateConfig) CertificateCertificateConfig {
		if v != nil {
			return *v
		}
		var ret CertificateCertificateConfig
		return ret
	}).(CertificateCertificateConfigOutput)
}

// The name of the profile used to create the certificate, which depends on the type of certificate you need.
func (o CertificateCertificateConfigPtrOutput) CertificateProfileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.CertificateProfileType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The origin of the certificate.
func (o CertificateCertificateConfigPtrOutput) ConfigType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ConfigType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The certificate signing request (in PEM format).
func (o CertificateCertificateConfigPtrOutput) CsrPem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.CsrPem
	}).(pulumi.StringPtrOutput)
}

// The OCID of the private CA.
func (o CertificateCertificateConfigPtrOutput) IssuerCertificateAuthorityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.IssuerCertificateAuthorityId
	}).(pulumi.StringPtrOutput)
}

// The algorithm to use to create key pairs.
func (o CertificateCertificateConfigPtrOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The algorithm to use to sign the public key certificate.
func (o CertificateCertificateConfigPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
func (o CertificateCertificateConfigPtrOutput) Subject() CertificateCertificateConfigSubjectPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfig) *CertificateCertificateConfigSubject {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(CertificateCertificateConfigSubjectPtrOutput)
}

// A list of subject alternative names.
func (o CertificateCertificateConfigPtrOutput) SubjectAlternativeNames() CertificateCertificateConfigSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v *CertificateCertificateConfig) []CertificateCertificateConfigSubjectAlternativeName {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(CertificateCertificateConfigSubjectAlternativeNameArrayOutput)
}

// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o CertificateCertificateConfigPtrOutput) Validity() CertificateCertificateConfigValidityPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfig) *CertificateCertificateConfigValidity {
		if v == nil {
			return nil
		}
		return v.Validity
	}).(CertificateCertificateConfigValidityPtrOutput)
}

// (Updatable) A name for the certificate. When the value is not null, a name is unique across versions of a given certificate.
func (o CertificateCertificateConfigPtrOutput) VersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfig) *string {
		if v == nil {
			return nil
		}
		return v.VersionName
	}).(pulumi.StringPtrOutput)
}

type CertificateCertificateConfigSubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName string `pulumi:"commonName"`
	// Country name (RDN C).
	Country *string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier *string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent *string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier *string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName *string `pulumi:"givenName"`
	// Personal initials.
	Initials *string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName *string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization *string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym *string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber *string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName *string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street *string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname *string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title *string `pulumi:"title"`
	// User ID (RDN UID).
	UserId *string `pulumi:"userId"`
}

// CertificateCertificateConfigSubjectInput is an input type that accepts CertificateCertificateConfigSubjectArgs and CertificateCertificateConfigSubjectOutput values.
// You can construct a concrete instance of `CertificateCertificateConfigSubjectInput` via:
//
//	CertificateCertificateConfigSubjectArgs{...}
type CertificateCertificateConfigSubjectInput interface {
	pulumi.Input

	ToCertificateCertificateConfigSubjectOutput() CertificateCertificateConfigSubjectOutput
	ToCertificateCertificateConfigSubjectOutputWithContext(context.Context) CertificateCertificateConfigSubjectOutput
}

type CertificateCertificateConfigSubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringPtrInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringPtrInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringPtrInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringPtrInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringPtrInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringPtrInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringPtrInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringPtrInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringPtrInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringPtrInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringPtrInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringPtrInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (CertificateCertificateConfigSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateConfigSubject)(nil)).Elem()
}

func (i CertificateCertificateConfigSubjectArgs) ToCertificateCertificateConfigSubjectOutput() CertificateCertificateConfigSubjectOutput {
	return i.ToCertificateCertificateConfigSubjectOutputWithContext(context.Background())
}

func (i CertificateCertificateConfigSubjectArgs) ToCertificateCertificateConfigSubjectOutputWithContext(ctx context.Context) CertificateCertificateConfigSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateConfigSubjectOutput)
}

func (i CertificateCertificateConfigSubjectArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateConfigSubject] {
	return pulumix.Output[CertificateCertificateConfigSubject]{
		OutputState: i.ToCertificateCertificateConfigSubjectOutputWithContext(ctx).OutputState,
	}
}

func (i CertificateCertificateConfigSubjectArgs) ToCertificateCertificateConfigSubjectPtrOutput() CertificateCertificateConfigSubjectPtrOutput {
	return i.ToCertificateCertificateConfigSubjectPtrOutputWithContext(context.Background())
}

func (i CertificateCertificateConfigSubjectArgs) ToCertificateCertificateConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateConfigSubjectOutput).ToCertificateCertificateConfigSubjectPtrOutputWithContext(ctx)
}

// CertificateCertificateConfigSubjectPtrInput is an input type that accepts CertificateCertificateConfigSubjectArgs, CertificateCertificateConfigSubjectPtr and CertificateCertificateConfigSubjectPtrOutput values.
// You can construct a concrete instance of `CertificateCertificateConfigSubjectPtrInput` via:
//
//	        CertificateCertificateConfigSubjectArgs{...}
//
//	or:
//
//	        nil
type CertificateCertificateConfigSubjectPtrInput interface {
	pulumi.Input

	ToCertificateCertificateConfigSubjectPtrOutput() CertificateCertificateConfigSubjectPtrOutput
	ToCertificateCertificateConfigSubjectPtrOutputWithContext(context.Context) CertificateCertificateConfigSubjectPtrOutput
}

type certificateCertificateConfigSubjectPtrType CertificateCertificateConfigSubjectArgs

func CertificateCertificateConfigSubjectPtr(v *CertificateCertificateConfigSubjectArgs) CertificateCertificateConfigSubjectPtrInput {
	return (*certificateCertificateConfigSubjectPtrType)(v)
}

func (*certificateCertificateConfigSubjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificateConfigSubject)(nil)).Elem()
}

func (i *certificateCertificateConfigSubjectPtrType) ToCertificateCertificateConfigSubjectPtrOutput() CertificateCertificateConfigSubjectPtrOutput {
	return i.ToCertificateCertificateConfigSubjectPtrOutputWithContext(context.Background())
}

func (i *certificateCertificateConfigSubjectPtrType) ToCertificateCertificateConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigSubjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateConfigSubjectPtrOutput)
}

func (i *certificateCertificateConfigSubjectPtrType) ToOutput(ctx context.Context) pulumix.Output[*CertificateCertificateConfigSubject] {
	return pulumix.Output[*CertificateCertificateConfigSubject]{
		OutputState: i.ToCertificateCertificateConfigSubjectPtrOutputWithContext(ctx).OutputState,
	}
}

type CertificateCertificateConfigSubjectOutput struct{ *pulumi.OutputState }

func (CertificateCertificateConfigSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateConfigSubject)(nil)).Elem()
}

func (o CertificateCertificateConfigSubjectOutput) ToCertificateCertificateConfigSubjectOutput() CertificateCertificateConfigSubjectOutput {
	return o
}

func (o CertificateCertificateConfigSubjectOutput) ToCertificateCertificateConfigSubjectOutputWithContext(ctx context.Context) CertificateCertificateConfigSubjectOutput {
	return o
}

func (o CertificateCertificateConfigSubjectOutput) ToCertificateCertificateConfigSubjectPtrOutput() CertificateCertificateConfigSubjectPtrOutput {
	return o.ToCertificateCertificateConfigSubjectPtrOutputWithContext(context.Background())
}

func (o CertificateCertificateConfigSubjectOutput) ToCertificateCertificateConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigSubjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateCertificateConfigSubject) *CertificateCertificateConfigSubject {
		return &v
	}).(CertificateCertificateConfigSubjectPtrOutput)
}

func (o CertificateCertificateConfigSubjectOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateConfigSubject] {
	return pulumix.Output[CertificateCertificateConfigSubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o CertificateCertificateConfigSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) string { return v.CommonName }).(pulumi.StringOutput)
}

// Country name (RDN C).
func (o CertificateCertificateConfigSubjectOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o CertificateCertificateConfigSubjectOutput) DistinguishedNameQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.DistinguishedNameQualifier }).(pulumi.StringPtrOutput)
}

// Domain component (RDN DC).
func (o CertificateCertificateConfigSubjectOutput) DomainComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.DomainComponent }).(pulumi.StringPtrOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o CertificateCertificateConfigSubjectOutput) GenerationQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.GenerationQualifier }).(pulumi.StringPtrOutput)
}

// Personal given name (RDN G or GN).
func (o CertificateCertificateConfigSubjectOutput) GivenName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.GivenName }).(pulumi.StringPtrOutput)
}

// Personal initials.
func (o CertificateCertificateConfigSubjectOutput) Initials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.Initials }).(pulumi.StringPtrOutput)
}

// Locality (RDN L).
func (o CertificateCertificateConfigSubjectOutput) LocalityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.LocalityName }).(pulumi.StringPtrOutput)
}

// Organization (RDN O).
func (o CertificateCertificateConfigSubjectOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// Organizational unit (RDN OU).
func (o CertificateCertificateConfigSubjectOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// Subject pseudonym.
func (o CertificateCertificateConfigSubjectOutput) Pseudonym() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.Pseudonym }).(pulumi.StringPtrOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o CertificateCertificateConfigSubjectOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// State or province name (RDN ST or S).
func (o CertificateCertificateConfigSubjectOutput) StateOrProvinceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.StateOrProvinceName }).(pulumi.StringPtrOutput)
}

// Street address (RDN STREET).
func (o CertificateCertificateConfigSubjectOutput) Street() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.Street }).(pulumi.StringPtrOutput)
}

// Personal surname (RDN SN).
func (o CertificateCertificateConfigSubjectOutput) Surname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.Surname }).(pulumi.StringPtrOutput)
}

// Title (RDN T or TITLE).
func (o CertificateCertificateConfigSubjectOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// User ID (RDN UID).
func (o CertificateCertificateConfigSubjectOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubject) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type CertificateCertificateConfigSubjectPtrOutput struct{ *pulumi.OutputState }

func (CertificateCertificateConfigSubjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificateConfigSubject)(nil)).Elem()
}

func (o CertificateCertificateConfigSubjectPtrOutput) ToCertificateCertificateConfigSubjectPtrOutput() CertificateCertificateConfigSubjectPtrOutput {
	return o
}

func (o CertificateCertificateConfigSubjectPtrOutput) ToCertificateCertificateConfigSubjectPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigSubjectPtrOutput {
	return o
}

func (o CertificateCertificateConfigSubjectPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CertificateCertificateConfigSubject] {
	return pulumix.Output[*CertificateCertificateConfigSubject]{
		OutputState: o.OutputState,
	}
}

func (o CertificateCertificateConfigSubjectPtrOutput) Elem() CertificateCertificateConfigSubjectOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) CertificateCertificateConfigSubject {
		if v != nil {
			return *v
		}
		var ret CertificateCertificateConfigSubject
		return ret
	}).(CertificateCertificateConfigSubjectOutput)
}

// Common name or fully-qualified domain name (RDN CN).
func (o CertificateCertificateConfigSubjectPtrOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return &v.CommonName
	}).(pulumi.StringPtrOutput)
}

// Country name (RDN C).
func (o CertificateCertificateConfigSubjectPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o CertificateCertificateConfigSubjectPtrOutput) DistinguishedNameQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.DistinguishedNameQualifier
	}).(pulumi.StringPtrOutput)
}

// Domain component (RDN DC).
func (o CertificateCertificateConfigSubjectPtrOutput) DomainComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.DomainComponent
	}).(pulumi.StringPtrOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o CertificateCertificateConfigSubjectPtrOutput) GenerationQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.GenerationQualifier
	}).(pulumi.StringPtrOutput)
}

// Personal given name (RDN G or GN).
func (o CertificateCertificateConfigSubjectPtrOutput) GivenName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.GivenName
	}).(pulumi.StringPtrOutput)
}

// Personal initials.
func (o CertificateCertificateConfigSubjectPtrOutput) Initials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Initials
	}).(pulumi.StringPtrOutput)
}

// Locality (RDN L).
func (o CertificateCertificateConfigSubjectPtrOutput) LocalityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.LocalityName
	}).(pulumi.StringPtrOutput)
}

// Organization (RDN O).
func (o CertificateCertificateConfigSubjectPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

// Organizational unit (RDN OU).
func (o CertificateCertificateConfigSubjectPtrOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnit
	}).(pulumi.StringPtrOutput)
}

// Subject pseudonym.
func (o CertificateCertificateConfigSubjectPtrOutput) Pseudonym() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Pseudonym
	}).(pulumi.StringPtrOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o CertificateCertificateConfigSubjectPtrOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.StringPtrOutput)
}

// State or province name (RDN ST or S).
func (o CertificateCertificateConfigSubjectPtrOutput) StateOrProvinceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvinceName
	}).(pulumi.StringPtrOutput)
}

// Street address (RDN STREET).
func (o CertificateCertificateConfigSubjectPtrOutput) Street() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Street
	}).(pulumi.StringPtrOutput)
}

// Personal surname (RDN SN).
func (o CertificateCertificateConfigSubjectPtrOutput) Surname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Surname
	}).(pulumi.StringPtrOutput)
}

// Title (RDN T or TITLE).
func (o CertificateCertificateConfigSubjectPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// User ID (RDN UID).
func (o CertificateCertificateConfigSubjectPtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigSubject) *string {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.StringPtrOutput)
}

type CertificateCertificateConfigSubjectAlternativeName struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type string `pulumi:"type"`
	// The subject alternative name.
	Value string `pulumi:"value"`
}

// CertificateCertificateConfigSubjectAlternativeNameInput is an input type that accepts CertificateCertificateConfigSubjectAlternativeNameArgs and CertificateCertificateConfigSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `CertificateCertificateConfigSubjectAlternativeNameInput` via:
//
//	CertificateCertificateConfigSubjectAlternativeNameArgs{...}
type CertificateCertificateConfigSubjectAlternativeNameInput interface {
	pulumi.Input

	ToCertificateCertificateConfigSubjectAlternativeNameOutput() CertificateCertificateConfigSubjectAlternativeNameOutput
	ToCertificateCertificateConfigSubjectAlternativeNameOutputWithContext(context.Context) CertificateCertificateConfigSubjectAlternativeNameOutput
}

type CertificateCertificateConfigSubjectAlternativeNameArgs struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type pulumi.StringInput `pulumi:"type"`
	// The subject alternative name.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CertificateCertificateConfigSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (i CertificateCertificateConfigSubjectAlternativeNameArgs) ToCertificateCertificateConfigSubjectAlternativeNameOutput() CertificateCertificateConfigSubjectAlternativeNameOutput {
	return i.ToCertificateCertificateConfigSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i CertificateCertificateConfigSubjectAlternativeNameArgs) ToCertificateCertificateConfigSubjectAlternativeNameOutputWithContext(ctx context.Context) CertificateCertificateConfigSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateConfigSubjectAlternativeNameOutput)
}

func (i CertificateCertificateConfigSubjectAlternativeNameArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[CertificateCertificateConfigSubjectAlternativeName]{
		OutputState: i.ToCertificateCertificateConfigSubjectAlternativeNameOutputWithContext(ctx).OutputState,
	}
}

// CertificateCertificateConfigSubjectAlternativeNameArrayInput is an input type that accepts CertificateCertificateConfigSubjectAlternativeNameArray and CertificateCertificateConfigSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateConfigSubjectAlternativeNameArrayInput` via:
//
//	CertificateCertificateConfigSubjectAlternativeNameArray{ CertificateCertificateConfigSubjectAlternativeNameArgs{...} }
type CertificateCertificateConfigSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToCertificateCertificateConfigSubjectAlternativeNameArrayOutput() CertificateCertificateConfigSubjectAlternativeNameArrayOutput
	ToCertificateCertificateConfigSubjectAlternativeNameArrayOutputWithContext(context.Context) CertificateCertificateConfigSubjectAlternativeNameArrayOutput
}

type CertificateCertificateConfigSubjectAlternativeNameArray []CertificateCertificateConfigSubjectAlternativeNameInput

func (CertificateCertificateConfigSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (i CertificateCertificateConfigSubjectAlternativeNameArray) ToCertificateCertificateConfigSubjectAlternativeNameArrayOutput() CertificateCertificateConfigSubjectAlternativeNameArrayOutput {
	return i.ToCertificateCertificateConfigSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateConfigSubjectAlternativeNameArray) ToCertificateCertificateConfigSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) CertificateCertificateConfigSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateConfigSubjectAlternativeNameArrayOutput)
}

func (i CertificateCertificateConfigSubjectAlternativeNameArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[[]CertificateCertificateConfigSubjectAlternativeName]{
		OutputState: i.ToCertificateCertificateConfigSubjectAlternativeNameArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateCertificateConfigSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (CertificateCertificateConfigSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (o CertificateCertificateConfigSubjectAlternativeNameOutput) ToCertificateCertificateConfigSubjectAlternativeNameOutput() CertificateCertificateConfigSubjectAlternativeNameOutput {
	return o
}

func (o CertificateCertificateConfigSubjectAlternativeNameOutput) ToCertificateCertificateConfigSubjectAlternativeNameOutputWithContext(ctx context.Context) CertificateCertificateConfigSubjectAlternativeNameOutput {
	return o
}

func (o CertificateCertificateConfigSubjectAlternativeNameOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[CertificateCertificateConfigSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
func (o CertificateCertificateConfigSubjectAlternativeNameOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubjectAlternativeName) string { return v.Type }).(pulumi.StringOutput)
}

// The subject alternative name.
func (o CertificateCertificateConfigSubjectAlternativeNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateCertificateConfigSubjectAlternativeName) string { return v.Value }).(pulumi.StringOutput)
}

type CertificateCertificateConfigSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateConfigSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (o CertificateCertificateConfigSubjectAlternativeNameArrayOutput) ToCertificateCertificateConfigSubjectAlternativeNameArrayOutput() CertificateCertificateConfigSubjectAlternativeNameArrayOutput {
	return o
}

func (o CertificateCertificateConfigSubjectAlternativeNameArrayOutput) ToCertificateCertificateConfigSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) CertificateCertificateConfigSubjectAlternativeNameArrayOutput {
	return o
}

func (o CertificateCertificateConfigSubjectAlternativeNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[[]CertificateCertificateConfigSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

func (o CertificateCertificateConfigSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) CertificateCertificateConfigSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateConfigSubjectAlternativeName {
		return vs[0].([]CertificateCertificateConfigSubjectAlternativeName)[vs[1].(int)]
	}).(CertificateCertificateConfigSubjectAlternativeNameOutput)
}

type CertificateCertificateConfigValidity struct {
	// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore *string `pulumi:"timeOfValidityNotBefore"`
}

// CertificateCertificateConfigValidityInput is an input type that accepts CertificateCertificateConfigValidityArgs and CertificateCertificateConfigValidityOutput values.
// You can construct a concrete instance of `CertificateCertificateConfigValidityInput` via:
//
//	CertificateCertificateConfigValidityArgs{...}
type CertificateCertificateConfigValidityInput interface {
	pulumi.Input

	ToCertificateCertificateConfigValidityOutput() CertificateCertificateConfigValidityOutput
	ToCertificateCertificateConfigValidityOutputWithContext(context.Context) CertificateCertificateConfigValidityOutput
}

type CertificateCertificateConfigValidityArgs struct {
	// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringPtrInput `pulumi:"timeOfValidityNotBefore"`
}

func (CertificateCertificateConfigValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateConfigValidity)(nil)).Elem()
}

func (i CertificateCertificateConfigValidityArgs) ToCertificateCertificateConfigValidityOutput() CertificateCertificateConfigValidityOutput {
	return i.ToCertificateCertificateConfigValidityOutputWithContext(context.Background())
}

func (i CertificateCertificateConfigValidityArgs) ToCertificateCertificateConfigValidityOutputWithContext(ctx context.Context) CertificateCertificateConfigValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateConfigValidityOutput)
}

func (i CertificateCertificateConfigValidityArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateConfigValidity] {
	return pulumix.Output[CertificateCertificateConfigValidity]{
		OutputState: i.ToCertificateCertificateConfigValidityOutputWithContext(ctx).OutputState,
	}
}

func (i CertificateCertificateConfigValidityArgs) ToCertificateCertificateConfigValidityPtrOutput() CertificateCertificateConfigValidityPtrOutput {
	return i.ToCertificateCertificateConfigValidityPtrOutputWithContext(context.Background())
}

func (i CertificateCertificateConfigValidityArgs) ToCertificateCertificateConfigValidityPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigValidityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateConfigValidityOutput).ToCertificateCertificateConfigValidityPtrOutputWithContext(ctx)
}

// CertificateCertificateConfigValidityPtrInput is an input type that accepts CertificateCertificateConfigValidityArgs, CertificateCertificateConfigValidityPtr and CertificateCertificateConfigValidityPtrOutput values.
// You can construct a concrete instance of `CertificateCertificateConfigValidityPtrInput` via:
//
//	        CertificateCertificateConfigValidityArgs{...}
//
//	or:
//
//	        nil
type CertificateCertificateConfigValidityPtrInput interface {
	pulumi.Input

	ToCertificateCertificateConfigValidityPtrOutput() CertificateCertificateConfigValidityPtrOutput
	ToCertificateCertificateConfigValidityPtrOutputWithContext(context.Context) CertificateCertificateConfigValidityPtrOutput
}

type certificateCertificateConfigValidityPtrType CertificateCertificateConfigValidityArgs

func CertificateCertificateConfigValidityPtr(v *CertificateCertificateConfigValidityArgs) CertificateCertificateConfigValidityPtrInput {
	return (*certificateCertificateConfigValidityPtrType)(v)
}

func (*certificateCertificateConfigValidityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificateConfigValidity)(nil)).Elem()
}

func (i *certificateCertificateConfigValidityPtrType) ToCertificateCertificateConfigValidityPtrOutput() CertificateCertificateConfigValidityPtrOutput {
	return i.ToCertificateCertificateConfigValidityPtrOutputWithContext(context.Background())
}

func (i *certificateCertificateConfigValidityPtrType) ToCertificateCertificateConfigValidityPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigValidityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateConfigValidityPtrOutput)
}

func (i *certificateCertificateConfigValidityPtrType) ToOutput(ctx context.Context) pulumix.Output[*CertificateCertificateConfigValidity] {
	return pulumix.Output[*CertificateCertificateConfigValidity]{
		OutputState: i.ToCertificateCertificateConfigValidityPtrOutputWithContext(ctx).OutputState,
	}
}

type CertificateCertificateConfigValidityOutput struct{ *pulumi.OutputState }

func (CertificateCertificateConfigValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateConfigValidity)(nil)).Elem()
}

func (o CertificateCertificateConfigValidityOutput) ToCertificateCertificateConfigValidityOutput() CertificateCertificateConfigValidityOutput {
	return o
}

func (o CertificateCertificateConfigValidityOutput) ToCertificateCertificateConfigValidityOutputWithContext(ctx context.Context) CertificateCertificateConfigValidityOutput {
	return o
}

func (o CertificateCertificateConfigValidityOutput) ToCertificateCertificateConfigValidityPtrOutput() CertificateCertificateConfigValidityPtrOutput {
	return o.ToCertificateCertificateConfigValidityPtrOutputWithContext(context.Background())
}

func (o CertificateCertificateConfigValidityOutput) ToCertificateCertificateConfigValidityPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigValidityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateCertificateConfigValidity) *CertificateCertificateConfigValidity {
		return &v
	}).(CertificateCertificateConfigValidityPtrOutput)
}

func (o CertificateCertificateConfigValidityOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateConfigValidity] {
	return pulumix.Output[CertificateCertificateConfigValidity]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateCertificateConfigValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateCertificateConfigValidity) string { return v.TimeOfValidityNotAfter }).(pulumi.StringOutput)
}

// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateCertificateConfigValidityOutput) TimeOfValidityNotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateConfigValidity) *string { return v.TimeOfValidityNotBefore }).(pulumi.StringPtrOutput)
}

type CertificateCertificateConfigValidityPtrOutput struct{ *pulumi.OutputState }

func (CertificateCertificateConfigValidityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificateConfigValidity)(nil)).Elem()
}

func (o CertificateCertificateConfigValidityPtrOutput) ToCertificateCertificateConfigValidityPtrOutput() CertificateCertificateConfigValidityPtrOutput {
	return o
}

func (o CertificateCertificateConfigValidityPtrOutput) ToCertificateCertificateConfigValidityPtrOutputWithContext(ctx context.Context) CertificateCertificateConfigValidityPtrOutput {
	return o
}

func (o CertificateCertificateConfigValidityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CertificateCertificateConfigValidity] {
	return pulumix.Output[*CertificateCertificateConfigValidity]{
		OutputState: o.OutputState,
	}
}

func (o CertificateCertificateConfigValidityPtrOutput) Elem() CertificateCertificateConfigValidityOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigValidity) CertificateCertificateConfigValidity {
		if v != nil {
			return *v
		}
		var ret CertificateCertificateConfigValidity
		return ret
	}).(CertificateCertificateConfigValidityOutput)
}

// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateCertificateConfigValidityPtrOutput) TimeOfValidityNotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigValidity) *string {
		if v == nil {
			return nil
		}
		return &v.TimeOfValidityNotAfter
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateCertificateConfigValidityPtrOutput) TimeOfValidityNotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateCertificateConfigValidity) *string {
		if v == nil {
			return nil
		}
		return v.TimeOfValidityNotBefore
	}).(pulumi.StringPtrOutput)
}

type CertificateCertificateRevocationListDetail struct {
	// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls []string `pulumi:"customFormattedUrls"`
	// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfigs []CertificateCertificateRevocationListDetailObjectStorageConfig `pulumi:"objectStorageConfigs"`
}

// CertificateCertificateRevocationListDetailInput is an input type that accepts CertificateCertificateRevocationListDetailArgs and CertificateCertificateRevocationListDetailOutput values.
// You can construct a concrete instance of `CertificateCertificateRevocationListDetailInput` via:
//
//	CertificateCertificateRevocationListDetailArgs{...}
type CertificateCertificateRevocationListDetailInput interface {
	pulumi.Input

	ToCertificateCertificateRevocationListDetailOutput() CertificateCertificateRevocationListDetailOutput
	ToCertificateCertificateRevocationListDetailOutputWithContext(context.Context) CertificateCertificateRevocationListDetailOutput
}

type CertificateCertificateRevocationListDetailArgs struct {
	// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls pulumi.StringArrayInput `pulumi:"customFormattedUrls"`
	// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfigs CertificateCertificateRevocationListDetailObjectStorageConfigArrayInput `pulumi:"objectStorageConfigs"`
}

func (CertificateCertificateRevocationListDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateRevocationListDetail)(nil)).Elem()
}

func (i CertificateCertificateRevocationListDetailArgs) ToCertificateCertificateRevocationListDetailOutput() CertificateCertificateRevocationListDetailOutput {
	return i.ToCertificateCertificateRevocationListDetailOutputWithContext(context.Background())
}

func (i CertificateCertificateRevocationListDetailArgs) ToCertificateCertificateRevocationListDetailOutputWithContext(ctx context.Context) CertificateCertificateRevocationListDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateRevocationListDetailOutput)
}

func (i CertificateCertificateRevocationListDetailArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateRevocationListDetail] {
	return pulumix.Output[CertificateCertificateRevocationListDetail]{
		OutputState: i.ToCertificateCertificateRevocationListDetailOutputWithContext(ctx).OutputState,
	}
}

// CertificateCertificateRevocationListDetailArrayInput is an input type that accepts CertificateCertificateRevocationListDetailArray and CertificateCertificateRevocationListDetailArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateRevocationListDetailArrayInput` via:
//
//	CertificateCertificateRevocationListDetailArray{ CertificateCertificateRevocationListDetailArgs{...} }
type CertificateCertificateRevocationListDetailArrayInput interface {
	pulumi.Input

	ToCertificateCertificateRevocationListDetailArrayOutput() CertificateCertificateRevocationListDetailArrayOutput
	ToCertificateCertificateRevocationListDetailArrayOutputWithContext(context.Context) CertificateCertificateRevocationListDetailArrayOutput
}

type CertificateCertificateRevocationListDetailArray []CertificateCertificateRevocationListDetailInput

func (CertificateCertificateRevocationListDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateRevocationListDetail)(nil)).Elem()
}

func (i CertificateCertificateRevocationListDetailArray) ToCertificateCertificateRevocationListDetailArrayOutput() CertificateCertificateRevocationListDetailArrayOutput {
	return i.ToCertificateCertificateRevocationListDetailArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateRevocationListDetailArray) ToCertificateCertificateRevocationListDetailArrayOutputWithContext(ctx context.Context) CertificateCertificateRevocationListDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateRevocationListDetailArrayOutput)
}

func (i CertificateCertificateRevocationListDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCertificateRevocationListDetail] {
	return pulumix.Output[[]CertificateCertificateRevocationListDetail]{
		OutputState: i.ToCertificateCertificateRevocationListDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateCertificateRevocationListDetailOutput struct{ *pulumi.OutputState }

func (CertificateCertificateRevocationListDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateRevocationListDetail)(nil)).Elem()
}

func (o CertificateCertificateRevocationListDetailOutput) ToCertificateCertificateRevocationListDetailOutput() CertificateCertificateRevocationListDetailOutput {
	return o
}

func (o CertificateCertificateRevocationListDetailOutput) ToCertificateCertificateRevocationListDetailOutputWithContext(ctx context.Context) CertificateCertificateRevocationListDetailOutput {
	return o
}

func (o CertificateCertificateRevocationListDetailOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateRevocationListDetail] {
	return pulumix.Output[CertificateCertificateRevocationListDetail]{
		OutputState: o.OutputState,
	}
}

// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o CertificateCertificateRevocationListDetailOutput) CustomFormattedUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateCertificateRevocationListDetail) []string { return v.CustomFormattedUrls }).(pulumi.StringArrayOutput)
}

// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
func (o CertificateCertificateRevocationListDetailOutput) ObjectStorageConfigs() CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o.ApplyT(func(v CertificateCertificateRevocationListDetail) []CertificateCertificateRevocationListDetailObjectStorageConfig {
		return v.ObjectStorageConfigs
	}).(CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput)
}

type CertificateCertificateRevocationListDetailArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateRevocationListDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateRevocationListDetail)(nil)).Elem()
}

func (o CertificateCertificateRevocationListDetailArrayOutput) ToCertificateCertificateRevocationListDetailArrayOutput() CertificateCertificateRevocationListDetailArrayOutput {
	return o
}

func (o CertificateCertificateRevocationListDetailArrayOutput) ToCertificateCertificateRevocationListDetailArrayOutputWithContext(ctx context.Context) CertificateCertificateRevocationListDetailArrayOutput {
	return o
}

func (o CertificateCertificateRevocationListDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCertificateRevocationListDetail] {
	return pulumix.Output[[]CertificateCertificateRevocationListDetail]{
		OutputState: o.OutputState,
	}
}

func (o CertificateCertificateRevocationListDetailArrayOutput) Index(i pulumi.IntInput) CertificateCertificateRevocationListDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateRevocationListDetail {
		return vs[0].([]CertificateCertificateRevocationListDetail)[vs[1].(int)]
	}).(CertificateCertificateRevocationListDetailOutput)
}

type CertificateCertificateRevocationListDetailObjectStorageConfig struct {
	// The name of the bucket where the CRL is stored.
	ObjectStorageBucketName *string `pulumi:"objectStorageBucketName"`
	// The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace *string `pulumi:"objectStorageNamespace"`
	// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat *string `pulumi:"objectStorageObjectNameFormat"`
}

// CertificateCertificateRevocationListDetailObjectStorageConfigInput is an input type that accepts CertificateCertificateRevocationListDetailObjectStorageConfigArgs and CertificateCertificateRevocationListDetailObjectStorageConfigOutput values.
// You can construct a concrete instance of `CertificateCertificateRevocationListDetailObjectStorageConfigInput` via:
//
//	CertificateCertificateRevocationListDetailObjectStorageConfigArgs{...}
type CertificateCertificateRevocationListDetailObjectStorageConfigInput interface {
	pulumi.Input

	ToCertificateCertificateRevocationListDetailObjectStorageConfigOutput() CertificateCertificateRevocationListDetailObjectStorageConfigOutput
	ToCertificateCertificateRevocationListDetailObjectStorageConfigOutputWithContext(context.Context) CertificateCertificateRevocationListDetailObjectStorageConfigOutput
}

type CertificateCertificateRevocationListDetailObjectStorageConfigArgs struct {
	// The name of the bucket where the CRL is stored.
	ObjectStorageBucketName pulumi.StringPtrInput `pulumi:"objectStorageBucketName"`
	// The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace pulumi.StringPtrInput `pulumi:"objectStorageNamespace"`
	// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat pulumi.StringPtrInput `pulumi:"objectStorageObjectNameFormat"`
}

func (CertificateCertificateRevocationListDetailObjectStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (i CertificateCertificateRevocationListDetailObjectStorageConfigArgs) ToCertificateCertificateRevocationListDetailObjectStorageConfigOutput() CertificateCertificateRevocationListDetailObjectStorageConfigOutput {
	return i.ToCertificateCertificateRevocationListDetailObjectStorageConfigOutputWithContext(context.Background())
}

func (i CertificateCertificateRevocationListDetailObjectStorageConfigArgs) ToCertificateCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx context.Context) CertificateCertificateRevocationListDetailObjectStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateRevocationListDetailObjectStorageConfigOutput)
}

func (i CertificateCertificateRevocationListDetailObjectStorageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[CertificateCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: i.ToCertificateCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx).OutputState,
	}
}

// CertificateCertificateRevocationListDetailObjectStorageConfigArrayInput is an input type that accepts CertificateCertificateRevocationListDetailObjectStorageConfigArray and CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateRevocationListDetailObjectStorageConfigArrayInput` via:
//
//	CertificateCertificateRevocationListDetailObjectStorageConfigArray{ CertificateCertificateRevocationListDetailObjectStorageConfigArgs{...} }
type CertificateCertificateRevocationListDetailObjectStorageConfigArrayInput interface {
	pulumi.Input

	ToCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput() CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput
	ToCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(context.Context) CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput
}

type CertificateCertificateRevocationListDetailObjectStorageConfigArray []CertificateCertificateRevocationListDetailObjectStorageConfigInput

func (CertificateCertificateRevocationListDetailObjectStorageConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (i CertificateCertificateRevocationListDetailObjectStorageConfigArray) ToCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput() CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return i.ToCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateRevocationListDetailObjectStorageConfigArray) ToCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx context.Context) CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput)
}

func (i CertificateCertificateRevocationListDetailObjectStorageConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[[]CertificateCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: i.ToCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateCertificateRevocationListDetailObjectStorageConfigOutput struct{ *pulumi.OutputState }

func (CertificateCertificateRevocationListDetailObjectStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (o CertificateCertificateRevocationListDetailObjectStorageConfigOutput) ToCertificateCertificateRevocationListDetailObjectStorageConfigOutput() CertificateCertificateRevocationListDetailObjectStorageConfigOutput {
	return o
}

func (o CertificateCertificateRevocationListDetailObjectStorageConfigOutput) ToCertificateCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx context.Context) CertificateCertificateRevocationListDetailObjectStorageConfigOutput {
	return o
}

func (o CertificateCertificateRevocationListDetailObjectStorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[CertificateCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

// The name of the bucket where the CRL is stored.
func (o CertificateCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageBucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateRevocationListDetailObjectStorageConfig) *string {
		return v.ObjectStorageBucketName
	}).(pulumi.StringPtrOutput)
}

// The tenancy of the bucket where the CRL is stored.
func (o CertificateCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateRevocationListDetailObjectStorageConfig) *string {
		return v.ObjectStorageNamespace
	}).(pulumi.StringPtrOutput)
}

// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o CertificateCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageObjectNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCertificateRevocationListDetailObjectStorageConfig) *string {
		return v.ObjectStorageObjectNameFormat
	}).(pulumi.StringPtrOutput)
}

type CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (o CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput() CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o
}

func (o CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx context.Context) CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o
}

func (o CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[[]CertificateCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput) Index(i pulumi.IntInput) CertificateCertificateRevocationListDetailObjectStorageConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateRevocationListDetailObjectStorageConfig {
		return vs[0].([]CertificateCertificateRevocationListDetailObjectStorageConfig)[vs[1].(int)]
	}).(CertificateCertificateRevocationListDetailObjectStorageConfigOutput)
}

type CertificateCertificateRule struct {
	// (Updatable) A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	AdvanceRenewalPeriod string `pulumi:"advanceRenewalPeriod"`
	// (Updatable) A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	RenewalInterval string `pulumi:"renewalInterval"`
	// (Updatable) The type of rule.
	RuleType string `pulumi:"ruleType"`
}

// CertificateCertificateRuleInput is an input type that accepts CertificateCertificateRuleArgs and CertificateCertificateRuleOutput values.
// You can construct a concrete instance of `CertificateCertificateRuleInput` via:
//
//	CertificateCertificateRuleArgs{...}
type CertificateCertificateRuleInput interface {
	pulumi.Input

	ToCertificateCertificateRuleOutput() CertificateCertificateRuleOutput
	ToCertificateCertificateRuleOutputWithContext(context.Context) CertificateCertificateRuleOutput
}

type CertificateCertificateRuleArgs struct {
	// (Updatable) A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	AdvanceRenewalPeriod pulumi.StringInput `pulumi:"advanceRenewalPeriod"`
	// (Updatable) A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	RenewalInterval pulumi.StringInput `pulumi:"renewalInterval"`
	// (Updatable) The type of rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (CertificateCertificateRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateRule)(nil)).Elem()
}

func (i CertificateCertificateRuleArgs) ToCertificateCertificateRuleOutput() CertificateCertificateRuleOutput {
	return i.ToCertificateCertificateRuleOutputWithContext(context.Background())
}

func (i CertificateCertificateRuleArgs) ToCertificateCertificateRuleOutputWithContext(ctx context.Context) CertificateCertificateRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateRuleOutput)
}

func (i CertificateCertificateRuleArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateRule] {
	return pulumix.Output[CertificateCertificateRule]{
		OutputState: i.ToCertificateCertificateRuleOutputWithContext(ctx).OutputState,
	}
}

// CertificateCertificateRuleArrayInput is an input type that accepts CertificateCertificateRuleArray and CertificateCertificateRuleArrayOutput values.
// You can construct a concrete instance of `CertificateCertificateRuleArrayInput` via:
//
//	CertificateCertificateRuleArray{ CertificateCertificateRuleArgs{...} }
type CertificateCertificateRuleArrayInput interface {
	pulumi.Input

	ToCertificateCertificateRuleArrayOutput() CertificateCertificateRuleArrayOutput
	ToCertificateCertificateRuleArrayOutputWithContext(context.Context) CertificateCertificateRuleArrayOutput
}

type CertificateCertificateRuleArray []CertificateCertificateRuleInput

func (CertificateCertificateRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateRule)(nil)).Elem()
}

func (i CertificateCertificateRuleArray) ToCertificateCertificateRuleArrayOutput() CertificateCertificateRuleArrayOutput {
	return i.ToCertificateCertificateRuleArrayOutputWithContext(context.Background())
}

func (i CertificateCertificateRuleArray) ToCertificateCertificateRuleArrayOutputWithContext(ctx context.Context) CertificateCertificateRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateRuleArrayOutput)
}

func (i CertificateCertificateRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCertificateRule] {
	return pulumix.Output[[]CertificateCertificateRule]{
		OutputState: i.ToCertificateCertificateRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateCertificateRuleOutput struct{ *pulumi.OutputState }

func (CertificateCertificateRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificateRule)(nil)).Elem()
}

func (o CertificateCertificateRuleOutput) ToCertificateCertificateRuleOutput() CertificateCertificateRuleOutput {
	return o
}

func (o CertificateCertificateRuleOutput) ToCertificateCertificateRuleOutputWithContext(ctx context.Context) CertificateCertificateRuleOutput {
	return o
}

func (o CertificateCertificateRuleOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateCertificateRule] {
	return pulumix.Output[CertificateCertificateRule]{
		OutputState: o.OutputState,
	}
}

// (Updatable) A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o CertificateCertificateRuleOutput) AdvanceRenewalPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateCertificateRule) string { return v.AdvanceRenewalPeriod }).(pulumi.StringOutput)
}

// (Updatable) A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o CertificateCertificateRuleOutput) RenewalInterval() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateCertificateRule) string { return v.RenewalInterval }).(pulumi.StringOutput)
}

// (Updatable) The type of rule.
func (o CertificateCertificateRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateCertificateRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type CertificateCertificateRuleArrayOutput struct{ *pulumi.OutputState }

func (CertificateCertificateRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificateRule)(nil)).Elem()
}

func (o CertificateCertificateRuleArrayOutput) ToCertificateCertificateRuleArrayOutput() CertificateCertificateRuleArrayOutput {
	return o
}

func (o CertificateCertificateRuleArrayOutput) ToCertificateCertificateRuleArrayOutputWithContext(ctx context.Context) CertificateCertificateRuleArrayOutput {
	return o
}

func (o CertificateCertificateRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCertificateRule] {
	return pulumix.Output[[]CertificateCertificateRule]{
		OutputState: o.OutputState,
	}
}

func (o CertificateCertificateRuleArrayOutput) Index(i pulumi.IntInput) CertificateCertificateRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCertificateRule {
		return vs[0].([]CertificateCertificateRule)[vs[1].(int)]
	}).(CertificateCertificateRuleOutput)
}

type CertificateCurrentVersion struct {
	// The OCID of the certificate.
	CertificateId *string `pulumi:"certificateId"`
	// The version number of the issuing certificate authority (CA).
	IssuerCaVersionNumber *string `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses []CertificateCurrentVersionRevocationStatus `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber *string `pulumi:"serialNumber"`
	// A list of rotation states for this certificate version.
	Stages []string `pulumi:"stages"`
	// A list of subject alternative names.
	SubjectAlternativeNames []CertificateCurrentVersionSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion *string `pulumi:"timeOfDeletion"`
	// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []CertificateCurrentVersionValidity `pulumi:"validities"`
	// (Updatable) A name for the certificate. When the value is not null, a name is unique across versions of a given certificate.
	VersionName *string `pulumi:"versionName"`
	// The version number of the certificate.
	VersionNumber *string `pulumi:"versionNumber"`
}

// CertificateCurrentVersionInput is an input type that accepts CertificateCurrentVersionArgs and CertificateCurrentVersionOutput values.
// You can construct a concrete instance of `CertificateCurrentVersionInput` via:
//
//	CertificateCurrentVersionArgs{...}
type CertificateCurrentVersionInput interface {
	pulumi.Input

	ToCertificateCurrentVersionOutput() CertificateCurrentVersionOutput
	ToCertificateCurrentVersionOutputWithContext(context.Context) CertificateCurrentVersionOutput
}

type CertificateCurrentVersionArgs struct {
	// The OCID of the certificate.
	CertificateId pulumi.StringPtrInput `pulumi:"certificateId"`
	// The version number of the issuing certificate authority (CA).
	IssuerCaVersionNumber pulumi.StringPtrInput `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses CertificateCurrentVersionRevocationStatusArrayInput `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// A list of rotation states for this certificate version.
	Stages pulumi.StringArrayInput `pulumi:"stages"`
	// A list of subject alternative names.
	SubjectAlternativeNames CertificateCurrentVersionSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringPtrInput `pulumi:"timeOfDeletion"`
	// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities CertificateCurrentVersionValidityArrayInput `pulumi:"validities"`
	// (Updatable) A name for the certificate. When the value is not null, a name is unique across versions of a given certificate.
	VersionName pulumi.StringPtrInput `pulumi:"versionName"`
	// The version number of the certificate.
	VersionNumber pulumi.StringPtrInput `pulumi:"versionNumber"`
}

func (CertificateCurrentVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCurrentVersion)(nil)).Elem()
}

func (i CertificateCurrentVersionArgs) ToCertificateCurrentVersionOutput() CertificateCurrentVersionOutput {
	return i.ToCertificateCurrentVersionOutputWithContext(context.Background())
}

func (i CertificateCurrentVersionArgs) ToCertificateCurrentVersionOutputWithContext(ctx context.Context) CertificateCurrentVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCurrentVersionOutput)
}

func (i CertificateCurrentVersionArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateCurrentVersion] {
	return pulumix.Output[CertificateCurrentVersion]{
		OutputState: i.ToCertificateCurrentVersionOutputWithContext(ctx).OutputState,
	}
}

// CertificateCurrentVersionArrayInput is an input type that accepts CertificateCurrentVersionArray and CertificateCurrentVersionArrayOutput values.
// You can construct a concrete instance of `CertificateCurrentVersionArrayInput` via:
//
//	CertificateCurrentVersionArray{ CertificateCurrentVersionArgs{...} }
type CertificateCurrentVersionArrayInput interface {
	pulumi.Input

	ToCertificateCurrentVersionArrayOutput() CertificateCurrentVersionArrayOutput
	ToCertificateCurrentVersionArrayOutputWithContext(context.Context) CertificateCurrentVersionArrayOutput
}

type CertificateCurrentVersionArray []CertificateCurrentVersionInput

func (CertificateCurrentVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCurrentVersion)(nil)).Elem()
}

func (i CertificateCurrentVersionArray) ToCertificateCurrentVersionArrayOutput() CertificateCurrentVersionArrayOutput {
	return i.ToCertificateCurrentVersionArrayOutputWithContext(context.Background())
}

func (i CertificateCurrentVersionArray) ToCertificateCurrentVersionArrayOutputWithContext(ctx context.Context) CertificateCurrentVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCurrentVersionArrayOutput)
}

func (i CertificateCurrentVersionArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCurrentVersion] {
	return pulumix.Output[[]CertificateCurrentVersion]{
		OutputState: i.ToCertificateCurrentVersionArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateCurrentVersionOutput struct{ *pulumi.OutputState }

func (CertificateCurrentVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCurrentVersion)(nil)).Elem()
}

func (o CertificateCurrentVersionOutput) ToCertificateCurrentVersionOutput() CertificateCurrentVersionOutput {
	return o
}

func (o CertificateCurrentVersionOutput) ToCertificateCurrentVersionOutputWithContext(ctx context.Context) CertificateCurrentVersionOutput {
	return o
}

func (o CertificateCurrentVersionOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateCurrentVersion] {
	return pulumix.Output[CertificateCurrentVersion]{
		OutputState: o.OutputState,
	}
}

// The OCID of the certificate.
func (o CertificateCurrentVersionOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersion) *string { return v.CertificateId }).(pulumi.StringPtrOutput)
}

// The version number of the issuing certificate authority (CA).
func (o CertificateCurrentVersionOutput) IssuerCaVersionNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersion) *string { return v.IssuerCaVersionNumber }).(pulumi.StringPtrOutput)
}

// The current revocation status of the entity.
func (o CertificateCurrentVersionOutput) RevocationStatuses() CertificateCurrentVersionRevocationStatusArrayOutput {
	return o.ApplyT(func(v CertificateCurrentVersion) []CertificateCurrentVersionRevocationStatus {
		return v.RevocationStatuses
	}).(CertificateCurrentVersionRevocationStatusArrayOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o CertificateCurrentVersionOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersion) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// A list of rotation states for this certificate version.
func (o CertificateCurrentVersionOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificateCurrentVersion) []string { return v.Stages }).(pulumi.StringArrayOutput)
}

// A list of subject alternative names.
func (o CertificateCurrentVersionOutput) SubjectAlternativeNames() CertificateCurrentVersionSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v CertificateCurrentVersion) []CertificateCurrentVersionSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(CertificateCurrentVersionSubjectAlternativeNameArrayOutput)
}

// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateCurrentVersionOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersion) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateCurrentVersionOutput) TimeOfDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersion) *string { return v.TimeOfDeletion }).(pulumi.StringPtrOutput)
}

// (Updatable) An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o CertificateCurrentVersionOutput) Validities() CertificateCurrentVersionValidityArrayOutput {
	return o.ApplyT(func(v CertificateCurrentVersion) []CertificateCurrentVersionValidity { return v.Validities }).(CertificateCurrentVersionValidityArrayOutput)
}

// (Updatable) A name for the certificate. When the value is not null, a name is unique across versions of a given certificate.
func (o CertificateCurrentVersionOutput) VersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersion) *string { return v.VersionName }).(pulumi.StringPtrOutput)
}

// The version number of the certificate.
func (o CertificateCurrentVersionOutput) VersionNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersion) *string { return v.VersionNumber }).(pulumi.StringPtrOutput)
}

type CertificateCurrentVersionArrayOutput struct{ *pulumi.OutputState }

func (CertificateCurrentVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCurrentVersion)(nil)).Elem()
}

func (o CertificateCurrentVersionArrayOutput) ToCertificateCurrentVersionArrayOutput() CertificateCurrentVersionArrayOutput {
	return o
}

func (o CertificateCurrentVersionArrayOutput) ToCertificateCurrentVersionArrayOutputWithContext(ctx context.Context) CertificateCurrentVersionArrayOutput {
	return o
}

func (o CertificateCurrentVersionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCurrentVersion] {
	return pulumix.Output[[]CertificateCurrentVersion]{
		OutputState: o.OutputState,
	}
}

func (o CertificateCurrentVersionArrayOutput) Index(i pulumi.IntInput) CertificateCurrentVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCurrentVersion {
		return vs[0].([]CertificateCurrentVersion)[vs[1].(int)]
	}).(CertificateCurrentVersionOutput)
}

type CertificateCurrentVersionRevocationStatus struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason *string `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation *string `pulumi:"timeOfRevocation"`
}

// CertificateCurrentVersionRevocationStatusInput is an input type that accepts CertificateCurrentVersionRevocationStatusArgs and CertificateCurrentVersionRevocationStatusOutput values.
// You can construct a concrete instance of `CertificateCurrentVersionRevocationStatusInput` via:
//
//	CertificateCurrentVersionRevocationStatusArgs{...}
type CertificateCurrentVersionRevocationStatusInput interface {
	pulumi.Input

	ToCertificateCurrentVersionRevocationStatusOutput() CertificateCurrentVersionRevocationStatusOutput
	ToCertificateCurrentVersionRevocationStatusOutputWithContext(context.Context) CertificateCurrentVersionRevocationStatusOutput
}

type CertificateCurrentVersionRevocationStatusArgs struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason pulumi.StringPtrInput `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation pulumi.StringPtrInput `pulumi:"timeOfRevocation"`
}

func (CertificateCurrentVersionRevocationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i CertificateCurrentVersionRevocationStatusArgs) ToCertificateCurrentVersionRevocationStatusOutput() CertificateCurrentVersionRevocationStatusOutput {
	return i.ToCertificateCurrentVersionRevocationStatusOutputWithContext(context.Background())
}

func (i CertificateCurrentVersionRevocationStatusArgs) ToCertificateCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) CertificateCurrentVersionRevocationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCurrentVersionRevocationStatusOutput)
}

func (i CertificateCurrentVersionRevocationStatusArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateCurrentVersionRevocationStatus] {
	return pulumix.Output[CertificateCurrentVersionRevocationStatus]{
		OutputState: i.ToCertificateCurrentVersionRevocationStatusOutputWithContext(ctx).OutputState,
	}
}

// CertificateCurrentVersionRevocationStatusArrayInput is an input type that accepts CertificateCurrentVersionRevocationStatusArray and CertificateCurrentVersionRevocationStatusArrayOutput values.
// You can construct a concrete instance of `CertificateCurrentVersionRevocationStatusArrayInput` via:
//
//	CertificateCurrentVersionRevocationStatusArray{ CertificateCurrentVersionRevocationStatusArgs{...} }
type CertificateCurrentVersionRevocationStatusArrayInput interface {
	pulumi.Input

	ToCertificateCurrentVersionRevocationStatusArrayOutput() CertificateCurrentVersionRevocationStatusArrayOutput
	ToCertificateCurrentVersionRevocationStatusArrayOutputWithContext(context.Context) CertificateCurrentVersionRevocationStatusArrayOutput
}

type CertificateCurrentVersionRevocationStatusArray []CertificateCurrentVersionRevocationStatusInput

func (CertificateCurrentVersionRevocationStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i CertificateCurrentVersionRevocationStatusArray) ToCertificateCurrentVersionRevocationStatusArrayOutput() CertificateCurrentVersionRevocationStatusArrayOutput {
	return i.ToCertificateCurrentVersionRevocationStatusArrayOutputWithContext(context.Background())
}

func (i CertificateCurrentVersionRevocationStatusArray) ToCertificateCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) CertificateCurrentVersionRevocationStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCurrentVersionRevocationStatusArrayOutput)
}

func (i CertificateCurrentVersionRevocationStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCurrentVersionRevocationStatus] {
	return pulumix.Output[[]CertificateCurrentVersionRevocationStatus]{
		OutputState: i.ToCertificateCurrentVersionRevocationStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateCurrentVersionRevocationStatusOutput struct{ *pulumi.OutputState }

func (CertificateCurrentVersionRevocationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o CertificateCurrentVersionRevocationStatusOutput) ToCertificateCurrentVersionRevocationStatusOutput() CertificateCurrentVersionRevocationStatusOutput {
	return o
}

func (o CertificateCurrentVersionRevocationStatusOutput) ToCertificateCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) CertificateCurrentVersionRevocationStatusOutput {
	return o
}

func (o CertificateCurrentVersionRevocationStatusOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateCurrentVersionRevocationStatus] {
	return pulumix.Output[CertificateCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

// The reason the certificate or certificate authority (CA) was revoked.
func (o CertificateCurrentVersionRevocationStatusOutput) RevocationReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersionRevocationStatus) *string { return v.RevocationReason }).(pulumi.StringPtrOutput)
}

// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateCurrentVersionRevocationStatusOutput) TimeOfRevocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersionRevocationStatus) *string { return v.TimeOfRevocation }).(pulumi.StringPtrOutput)
}

type CertificateCurrentVersionRevocationStatusArrayOutput struct{ *pulumi.OutputState }

func (CertificateCurrentVersionRevocationStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o CertificateCurrentVersionRevocationStatusArrayOutput) ToCertificateCurrentVersionRevocationStatusArrayOutput() CertificateCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o CertificateCurrentVersionRevocationStatusArrayOutput) ToCertificateCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) CertificateCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o CertificateCurrentVersionRevocationStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCurrentVersionRevocationStatus] {
	return pulumix.Output[[]CertificateCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

func (o CertificateCurrentVersionRevocationStatusArrayOutput) Index(i pulumi.IntInput) CertificateCurrentVersionRevocationStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCurrentVersionRevocationStatus {
		return vs[0].([]CertificateCurrentVersionRevocationStatus)[vs[1].(int)]
	}).(CertificateCurrentVersionRevocationStatusOutput)
}

type CertificateCurrentVersionSubjectAlternativeName struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type *string `pulumi:"type"`
	// The subject alternative name.
	Value *string `pulumi:"value"`
}

// CertificateCurrentVersionSubjectAlternativeNameInput is an input type that accepts CertificateCurrentVersionSubjectAlternativeNameArgs and CertificateCurrentVersionSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `CertificateCurrentVersionSubjectAlternativeNameInput` via:
//
//	CertificateCurrentVersionSubjectAlternativeNameArgs{...}
type CertificateCurrentVersionSubjectAlternativeNameInput interface {
	pulumi.Input

	ToCertificateCurrentVersionSubjectAlternativeNameOutput() CertificateCurrentVersionSubjectAlternativeNameOutput
	ToCertificateCurrentVersionSubjectAlternativeNameOutputWithContext(context.Context) CertificateCurrentVersionSubjectAlternativeNameOutput
}

type CertificateCurrentVersionSubjectAlternativeNameArgs struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The subject alternative name.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CertificateCurrentVersionSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (i CertificateCurrentVersionSubjectAlternativeNameArgs) ToCertificateCurrentVersionSubjectAlternativeNameOutput() CertificateCurrentVersionSubjectAlternativeNameOutput {
	return i.ToCertificateCurrentVersionSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i CertificateCurrentVersionSubjectAlternativeNameArgs) ToCertificateCurrentVersionSubjectAlternativeNameOutputWithContext(ctx context.Context) CertificateCurrentVersionSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCurrentVersionSubjectAlternativeNameOutput)
}

func (i CertificateCurrentVersionSubjectAlternativeNameArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[CertificateCurrentVersionSubjectAlternativeName]{
		OutputState: i.ToCertificateCurrentVersionSubjectAlternativeNameOutputWithContext(ctx).OutputState,
	}
}

// CertificateCurrentVersionSubjectAlternativeNameArrayInput is an input type that accepts CertificateCurrentVersionSubjectAlternativeNameArray and CertificateCurrentVersionSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `CertificateCurrentVersionSubjectAlternativeNameArrayInput` via:
//
//	CertificateCurrentVersionSubjectAlternativeNameArray{ CertificateCurrentVersionSubjectAlternativeNameArgs{...} }
type CertificateCurrentVersionSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToCertificateCurrentVersionSubjectAlternativeNameArrayOutput() CertificateCurrentVersionSubjectAlternativeNameArrayOutput
	ToCertificateCurrentVersionSubjectAlternativeNameArrayOutputWithContext(context.Context) CertificateCurrentVersionSubjectAlternativeNameArrayOutput
}

type CertificateCurrentVersionSubjectAlternativeNameArray []CertificateCurrentVersionSubjectAlternativeNameInput

func (CertificateCurrentVersionSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (i CertificateCurrentVersionSubjectAlternativeNameArray) ToCertificateCurrentVersionSubjectAlternativeNameArrayOutput() CertificateCurrentVersionSubjectAlternativeNameArrayOutput {
	return i.ToCertificateCurrentVersionSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i CertificateCurrentVersionSubjectAlternativeNameArray) ToCertificateCurrentVersionSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) CertificateCurrentVersionSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCurrentVersionSubjectAlternativeNameArrayOutput)
}

func (i CertificateCurrentVersionSubjectAlternativeNameArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[[]CertificateCurrentVersionSubjectAlternativeName]{
		OutputState: i.ToCertificateCurrentVersionSubjectAlternativeNameArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateCurrentVersionSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (CertificateCurrentVersionSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (o CertificateCurrentVersionSubjectAlternativeNameOutput) ToCertificateCurrentVersionSubjectAlternativeNameOutput() CertificateCurrentVersionSubjectAlternativeNameOutput {
	return o
}

func (o CertificateCurrentVersionSubjectAlternativeNameOutput) ToCertificateCurrentVersionSubjectAlternativeNameOutputWithContext(ctx context.Context) CertificateCurrentVersionSubjectAlternativeNameOutput {
	return o
}

func (o CertificateCurrentVersionSubjectAlternativeNameOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[CertificateCurrentVersionSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
func (o CertificateCurrentVersionSubjectAlternativeNameOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersionSubjectAlternativeName) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The subject alternative name.
func (o CertificateCurrentVersionSubjectAlternativeNameOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersionSubjectAlternativeName) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CertificateCurrentVersionSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (CertificateCurrentVersionSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (o CertificateCurrentVersionSubjectAlternativeNameArrayOutput) ToCertificateCurrentVersionSubjectAlternativeNameArrayOutput() CertificateCurrentVersionSubjectAlternativeNameArrayOutput {
	return o
}

func (o CertificateCurrentVersionSubjectAlternativeNameArrayOutput) ToCertificateCurrentVersionSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) CertificateCurrentVersionSubjectAlternativeNameArrayOutput {
	return o
}

func (o CertificateCurrentVersionSubjectAlternativeNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[[]CertificateCurrentVersionSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

func (o CertificateCurrentVersionSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) CertificateCurrentVersionSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCurrentVersionSubjectAlternativeName {
		return vs[0].([]CertificateCurrentVersionSubjectAlternativeName)[vs[1].(int)]
	}).(CertificateCurrentVersionSubjectAlternativeNameOutput)
}

type CertificateCurrentVersionValidity struct {
	// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter *string `pulumi:"timeOfValidityNotAfter"`
	// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore *string `pulumi:"timeOfValidityNotBefore"`
}

// CertificateCurrentVersionValidityInput is an input type that accepts CertificateCurrentVersionValidityArgs and CertificateCurrentVersionValidityOutput values.
// You can construct a concrete instance of `CertificateCurrentVersionValidityInput` via:
//
//	CertificateCurrentVersionValidityArgs{...}
type CertificateCurrentVersionValidityInput interface {
	pulumi.Input

	ToCertificateCurrentVersionValidityOutput() CertificateCurrentVersionValidityOutput
	ToCertificateCurrentVersionValidityOutputWithContext(context.Context) CertificateCurrentVersionValidityOutput
}

type CertificateCurrentVersionValidityArgs struct {
	// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringPtrInput `pulumi:"timeOfValidityNotAfter"`
	// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringPtrInput `pulumi:"timeOfValidityNotBefore"`
}

func (CertificateCurrentVersionValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCurrentVersionValidity)(nil)).Elem()
}

func (i CertificateCurrentVersionValidityArgs) ToCertificateCurrentVersionValidityOutput() CertificateCurrentVersionValidityOutput {
	return i.ToCertificateCurrentVersionValidityOutputWithContext(context.Background())
}

func (i CertificateCurrentVersionValidityArgs) ToCertificateCurrentVersionValidityOutputWithContext(ctx context.Context) CertificateCurrentVersionValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCurrentVersionValidityOutput)
}

func (i CertificateCurrentVersionValidityArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateCurrentVersionValidity] {
	return pulumix.Output[CertificateCurrentVersionValidity]{
		OutputState: i.ToCertificateCurrentVersionValidityOutputWithContext(ctx).OutputState,
	}
}

// CertificateCurrentVersionValidityArrayInput is an input type that accepts CertificateCurrentVersionValidityArray and CertificateCurrentVersionValidityArrayOutput values.
// You can construct a concrete instance of `CertificateCurrentVersionValidityArrayInput` via:
//
//	CertificateCurrentVersionValidityArray{ CertificateCurrentVersionValidityArgs{...} }
type CertificateCurrentVersionValidityArrayInput interface {
	pulumi.Input

	ToCertificateCurrentVersionValidityArrayOutput() CertificateCurrentVersionValidityArrayOutput
	ToCertificateCurrentVersionValidityArrayOutputWithContext(context.Context) CertificateCurrentVersionValidityArrayOutput
}

type CertificateCurrentVersionValidityArray []CertificateCurrentVersionValidityInput

func (CertificateCurrentVersionValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCurrentVersionValidity)(nil)).Elem()
}

func (i CertificateCurrentVersionValidityArray) ToCertificateCurrentVersionValidityArrayOutput() CertificateCurrentVersionValidityArrayOutput {
	return i.ToCertificateCurrentVersionValidityArrayOutputWithContext(context.Background())
}

func (i CertificateCurrentVersionValidityArray) ToCertificateCurrentVersionValidityArrayOutputWithContext(ctx context.Context) CertificateCurrentVersionValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCurrentVersionValidityArrayOutput)
}

func (i CertificateCurrentVersionValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCurrentVersionValidity] {
	return pulumix.Output[[]CertificateCurrentVersionValidity]{
		OutputState: i.ToCertificateCurrentVersionValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateCurrentVersionValidityOutput struct{ *pulumi.OutputState }

func (CertificateCurrentVersionValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCurrentVersionValidity)(nil)).Elem()
}

func (o CertificateCurrentVersionValidityOutput) ToCertificateCurrentVersionValidityOutput() CertificateCurrentVersionValidityOutput {
	return o
}

func (o CertificateCurrentVersionValidityOutput) ToCertificateCurrentVersionValidityOutputWithContext(ctx context.Context) CertificateCurrentVersionValidityOutput {
	return o
}

func (o CertificateCurrentVersionValidityOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateCurrentVersionValidity] {
	return pulumix.Output[CertificateCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateCurrentVersionValidityOutput) TimeOfValidityNotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersionValidity) *string { return v.TimeOfValidityNotAfter }).(pulumi.StringPtrOutput)
}

// (Updatable) The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o CertificateCurrentVersionValidityOutput) TimeOfValidityNotBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateCurrentVersionValidity) *string { return v.TimeOfValidityNotBefore }).(pulumi.StringPtrOutput)
}

type CertificateCurrentVersionValidityArrayOutput struct{ *pulumi.OutputState }

func (CertificateCurrentVersionValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCurrentVersionValidity)(nil)).Elem()
}

func (o CertificateCurrentVersionValidityArrayOutput) ToCertificateCurrentVersionValidityArrayOutput() CertificateCurrentVersionValidityArrayOutput {
	return o
}

func (o CertificateCurrentVersionValidityArrayOutput) ToCertificateCurrentVersionValidityArrayOutputWithContext(ctx context.Context) CertificateCurrentVersionValidityArrayOutput {
	return o
}

func (o CertificateCurrentVersionValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateCurrentVersionValidity] {
	return pulumix.Output[[]CertificateCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

func (o CertificateCurrentVersionValidityArrayOutput) Index(i pulumi.IntInput) CertificateCurrentVersionValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateCurrentVersionValidity {
		return vs[0].([]CertificateCurrentVersionValidity)[vs[1].(int)]
	}).(CertificateCurrentVersionValidityOutput)
}

type CertificateSubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName *string `pulumi:"commonName"`
	// Country name (RDN C).
	Country *string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier *string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent *string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier *string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName *string `pulumi:"givenName"`
	// Personal initials.
	Initials *string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName *string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization *string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym *string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber *string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName *string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street *string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname *string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title *string `pulumi:"title"`
	// User ID (RDN UID).
	UserId *string `pulumi:"userId"`
}

// CertificateSubjectInput is an input type that accepts CertificateSubjectArgs and CertificateSubjectOutput values.
// You can construct a concrete instance of `CertificateSubjectInput` via:
//
//	CertificateSubjectArgs{...}
type CertificateSubjectInput interface {
	pulumi.Input

	ToCertificateSubjectOutput() CertificateSubjectOutput
	ToCertificateSubjectOutputWithContext(context.Context) CertificateSubjectOutput
}

type CertificateSubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringPtrInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringPtrInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringPtrInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringPtrInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringPtrInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringPtrInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringPtrInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringPtrInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringPtrInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringPtrInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringPtrInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringPtrInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringPtrInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringPtrInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (CertificateSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSubject)(nil)).Elem()
}

func (i CertificateSubjectArgs) ToCertificateSubjectOutput() CertificateSubjectOutput {
	return i.ToCertificateSubjectOutputWithContext(context.Background())
}

func (i CertificateSubjectArgs) ToCertificateSubjectOutputWithContext(ctx context.Context) CertificateSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSubjectOutput)
}

func (i CertificateSubjectArgs) ToOutput(ctx context.Context) pulumix.Output[CertificateSubject] {
	return pulumix.Output[CertificateSubject]{
		OutputState: i.ToCertificateSubjectOutputWithContext(ctx).OutputState,
	}
}

// CertificateSubjectArrayInput is an input type that accepts CertificateSubjectArray and CertificateSubjectArrayOutput values.
// You can construct a concrete instance of `CertificateSubjectArrayInput` via:
//
//	CertificateSubjectArray{ CertificateSubjectArgs{...} }
type CertificateSubjectArrayInput interface {
	pulumi.Input

	ToCertificateSubjectArrayOutput() CertificateSubjectArrayOutput
	ToCertificateSubjectArrayOutputWithContext(context.Context) CertificateSubjectArrayOutput
}

type CertificateSubjectArray []CertificateSubjectInput

func (CertificateSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateSubject)(nil)).Elem()
}

func (i CertificateSubjectArray) ToCertificateSubjectArrayOutput() CertificateSubjectArrayOutput {
	return i.ToCertificateSubjectArrayOutputWithContext(context.Background())
}

func (i CertificateSubjectArray) ToCertificateSubjectArrayOutputWithContext(ctx context.Context) CertificateSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateSubjectArrayOutput)
}

func (i CertificateSubjectArray) ToOutput(ctx context.Context) pulumix.Output[[]CertificateSubject] {
	return pulumix.Output[[]CertificateSubject]{
		OutputState: i.ToCertificateSubjectArrayOutputWithContext(ctx).OutputState,
	}
}

type CertificateSubjectOutput struct{ *pulumi.OutputState }

func (CertificateSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateSubject)(nil)).Elem()
}

func (o CertificateSubjectOutput) ToCertificateSubjectOutput() CertificateSubjectOutput {
	return o
}

func (o CertificateSubjectOutput) ToCertificateSubjectOutputWithContext(ctx context.Context) CertificateSubjectOutput {
	return o
}

func (o CertificateSubjectOutput) ToOutput(ctx context.Context) pulumix.Output[CertificateSubject] {
	return pulumix.Output[CertificateSubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o CertificateSubjectOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

// Country name (RDN C).
func (o CertificateSubjectOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o CertificateSubjectOutput) DistinguishedNameQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.DistinguishedNameQualifier }).(pulumi.StringPtrOutput)
}

// Domain component (RDN DC).
func (o CertificateSubjectOutput) DomainComponent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.DomainComponent }).(pulumi.StringPtrOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o CertificateSubjectOutput) GenerationQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.GenerationQualifier }).(pulumi.StringPtrOutput)
}

// Personal given name (RDN G or GN).
func (o CertificateSubjectOutput) GivenName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.GivenName }).(pulumi.StringPtrOutput)
}

// Personal initials.
func (o CertificateSubjectOutput) Initials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.Initials }).(pulumi.StringPtrOutput)
}

// Locality (RDN L).
func (o CertificateSubjectOutput) LocalityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.LocalityName }).(pulumi.StringPtrOutput)
}

// Organization (RDN O).
func (o CertificateSubjectOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// Organizational unit (RDN OU).
func (o CertificateSubjectOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// Subject pseudonym.
func (o CertificateSubjectOutput) Pseudonym() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.Pseudonym }).(pulumi.StringPtrOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o CertificateSubjectOutput) SerialNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.SerialNumber }).(pulumi.StringPtrOutput)
}

// State or province name (RDN ST or S).
func (o CertificateSubjectOutput) StateOrProvinceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.StateOrProvinceName }).(pulumi.StringPtrOutput)
}

// Street address (RDN STREET).
func (o CertificateSubjectOutput) Street() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.Street }).(pulumi.StringPtrOutput)
}

// Personal surname (RDN SN).
func (o CertificateSubjectOutput) Surname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.Surname }).(pulumi.StringPtrOutput)
}

// Title (RDN T or TITLE).
func (o CertificateSubjectOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// User ID (RDN UID).
func (o CertificateSubjectOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateSubject) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type CertificateSubjectArrayOutput struct{ *pulumi.OutputState }

func (CertificateSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateSubject)(nil)).Elem()
}

func (o CertificateSubjectArrayOutput) ToCertificateSubjectArrayOutput() CertificateSubjectArrayOutput {
	return o
}

func (o CertificateSubjectArrayOutput) ToCertificateSubjectArrayOutputWithContext(ctx context.Context) CertificateSubjectArrayOutput {
	return o
}

func (o CertificateSubjectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CertificateSubject] {
	return pulumix.Output[[]CertificateSubject]{
		OutputState: o.OutputState,
	}
}

func (o CertificateSubjectArrayOutput) Index(i pulumi.IntInput) CertificateSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateSubject {
		return vs[0].([]CertificateSubject)[vs[1].(int)]
	}).(CertificateSubjectOutput)
}

type GetAssociationsAssociationCollection struct {
	Items []GetAssociationsAssociationCollectionItem `pulumi:"items"`
}

// GetAssociationsAssociationCollectionInput is an input type that accepts GetAssociationsAssociationCollectionArgs and GetAssociationsAssociationCollectionOutput values.
// You can construct a concrete instance of `GetAssociationsAssociationCollectionInput` via:
//
//	GetAssociationsAssociationCollectionArgs{...}
type GetAssociationsAssociationCollectionInput interface {
	pulumi.Input

	ToGetAssociationsAssociationCollectionOutput() GetAssociationsAssociationCollectionOutput
	ToGetAssociationsAssociationCollectionOutputWithContext(context.Context) GetAssociationsAssociationCollectionOutput
}

type GetAssociationsAssociationCollectionArgs struct {
	Items GetAssociationsAssociationCollectionItemArrayInput `pulumi:"items"`
}

func (GetAssociationsAssociationCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssociationsAssociationCollection)(nil)).Elem()
}

func (i GetAssociationsAssociationCollectionArgs) ToGetAssociationsAssociationCollectionOutput() GetAssociationsAssociationCollectionOutput {
	return i.ToGetAssociationsAssociationCollectionOutputWithContext(context.Background())
}

func (i GetAssociationsAssociationCollectionArgs) ToGetAssociationsAssociationCollectionOutputWithContext(ctx context.Context) GetAssociationsAssociationCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssociationsAssociationCollectionOutput)
}

func (i GetAssociationsAssociationCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetAssociationsAssociationCollection] {
	return pulumix.Output[GetAssociationsAssociationCollection]{
		OutputState: i.ToGetAssociationsAssociationCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetAssociationsAssociationCollectionArrayInput is an input type that accepts GetAssociationsAssociationCollectionArray and GetAssociationsAssociationCollectionArrayOutput values.
// You can construct a concrete instance of `GetAssociationsAssociationCollectionArrayInput` via:
//
//	GetAssociationsAssociationCollectionArray{ GetAssociationsAssociationCollectionArgs{...} }
type GetAssociationsAssociationCollectionArrayInput interface {
	pulumi.Input

	ToGetAssociationsAssociationCollectionArrayOutput() GetAssociationsAssociationCollectionArrayOutput
	ToGetAssociationsAssociationCollectionArrayOutputWithContext(context.Context) GetAssociationsAssociationCollectionArrayOutput
}

type GetAssociationsAssociationCollectionArray []GetAssociationsAssociationCollectionInput

func (GetAssociationsAssociationCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssociationsAssociationCollection)(nil)).Elem()
}

func (i GetAssociationsAssociationCollectionArray) ToGetAssociationsAssociationCollectionArrayOutput() GetAssociationsAssociationCollectionArrayOutput {
	return i.ToGetAssociationsAssociationCollectionArrayOutputWithContext(context.Background())
}

func (i GetAssociationsAssociationCollectionArray) ToGetAssociationsAssociationCollectionArrayOutputWithContext(ctx context.Context) GetAssociationsAssociationCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssociationsAssociationCollectionArrayOutput)
}

func (i GetAssociationsAssociationCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAssociationsAssociationCollection] {
	return pulumix.Output[[]GetAssociationsAssociationCollection]{
		OutputState: i.ToGetAssociationsAssociationCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAssociationsAssociationCollectionOutput struct{ *pulumi.OutputState }

func (GetAssociationsAssociationCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssociationsAssociationCollection)(nil)).Elem()
}

func (o GetAssociationsAssociationCollectionOutput) ToGetAssociationsAssociationCollectionOutput() GetAssociationsAssociationCollectionOutput {
	return o
}

func (o GetAssociationsAssociationCollectionOutput) ToGetAssociationsAssociationCollectionOutputWithContext(ctx context.Context) GetAssociationsAssociationCollectionOutput {
	return o
}

func (o GetAssociationsAssociationCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetAssociationsAssociationCollection] {
	return pulumix.Output[GetAssociationsAssociationCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetAssociationsAssociationCollectionOutput) Items() GetAssociationsAssociationCollectionItemArrayOutput {
	return o.ApplyT(func(v GetAssociationsAssociationCollection) []GetAssociationsAssociationCollectionItem {
		return v.Items
	}).(GetAssociationsAssociationCollectionItemArrayOutput)
}

type GetAssociationsAssociationCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetAssociationsAssociationCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssociationsAssociationCollection)(nil)).Elem()
}

func (o GetAssociationsAssociationCollectionArrayOutput) ToGetAssociationsAssociationCollectionArrayOutput() GetAssociationsAssociationCollectionArrayOutput {
	return o
}

func (o GetAssociationsAssociationCollectionArrayOutput) ToGetAssociationsAssociationCollectionArrayOutputWithContext(ctx context.Context) GetAssociationsAssociationCollectionArrayOutput {
	return o
}

func (o GetAssociationsAssociationCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAssociationsAssociationCollection] {
	return pulumix.Output[[]GetAssociationsAssociationCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetAssociationsAssociationCollectionArrayOutput) Index(i pulumi.IntInput) GetAssociationsAssociationCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssociationsAssociationCollection {
		return vs[0].([]GetAssociationsAssociationCollection)[vs[1].(int)]
	}).(GetAssociationsAssociationCollectionOutput)
}

type GetAssociationsAssociationCollectionItem struct {
	// A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
	AssociatedResourceId string `pulumi:"associatedResourceId"`
	// Type of associations to list. If the parameter is set to null, the service lists all types of associations.
	AssociationType string `pulumi:"associationType"`
	// A filter that returns only resources that match the given OCID of a certificate-related resource.
	CertificatesResourceId string `pulumi:"certificatesResourceId"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the association.
	Id string `pulumi:"id"`
	// A filter that returns only resources that match the specified name.
	Name string `pulumi:"name"`
	// The current lifecycle state of the association.
	State string `pulumi:"state"`
	// A property indicating when the association was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
}

// GetAssociationsAssociationCollectionItemInput is an input type that accepts GetAssociationsAssociationCollectionItemArgs and GetAssociationsAssociationCollectionItemOutput values.
// You can construct a concrete instance of `GetAssociationsAssociationCollectionItemInput` via:
//
//	GetAssociationsAssociationCollectionItemArgs{...}
type GetAssociationsAssociationCollectionItemInput interface {
	pulumi.Input

	ToGetAssociationsAssociationCollectionItemOutput() GetAssociationsAssociationCollectionItemOutput
	ToGetAssociationsAssociationCollectionItemOutputWithContext(context.Context) GetAssociationsAssociationCollectionItemOutput
}

type GetAssociationsAssociationCollectionItemArgs struct {
	// A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
	AssociatedResourceId pulumi.StringInput `pulumi:"associatedResourceId"`
	// Type of associations to list. If the parameter is set to null, the service lists all types of associations.
	AssociationType pulumi.StringInput `pulumi:"associationType"`
	// A filter that returns only resources that match the given OCID of a certificate-related resource.
	CertificatesResourceId pulumi.StringInput `pulumi:"certificatesResourceId"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the association.
	Id pulumi.StringInput `pulumi:"id"`
	// A filter that returns only resources that match the specified name.
	Name pulumi.StringInput `pulumi:"name"`
	// The current lifecycle state of the association.
	State pulumi.StringInput `pulumi:"state"`
	// A property indicating when the association was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
}

func (GetAssociationsAssociationCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssociationsAssociationCollectionItem)(nil)).Elem()
}

func (i GetAssociationsAssociationCollectionItemArgs) ToGetAssociationsAssociationCollectionItemOutput() GetAssociationsAssociationCollectionItemOutput {
	return i.ToGetAssociationsAssociationCollectionItemOutputWithContext(context.Background())
}

func (i GetAssociationsAssociationCollectionItemArgs) ToGetAssociationsAssociationCollectionItemOutputWithContext(ctx context.Context) GetAssociationsAssociationCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssociationsAssociationCollectionItemOutput)
}

func (i GetAssociationsAssociationCollectionItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetAssociationsAssociationCollectionItem] {
	return pulumix.Output[GetAssociationsAssociationCollectionItem]{
		OutputState: i.ToGetAssociationsAssociationCollectionItemOutputWithContext(ctx).OutputState,
	}
}

// GetAssociationsAssociationCollectionItemArrayInput is an input type that accepts GetAssociationsAssociationCollectionItemArray and GetAssociationsAssociationCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetAssociationsAssociationCollectionItemArrayInput` via:
//
//	GetAssociationsAssociationCollectionItemArray{ GetAssociationsAssociationCollectionItemArgs{...} }
type GetAssociationsAssociationCollectionItemArrayInput interface {
	pulumi.Input

	ToGetAssociationsAssociationCollectionItemArrayOutput() GetAssociationsAssociationCollectionItemArrayOutput
	ToGetAssociationsAssociationCollectionItemArrayOutputWithContext(context.Context) GetAssociationsAssociationCollectionItemArrayOutput
}

type GetAssociationsAssociationCollectionItemArray []GetAssociationsAssociationCollectionItemInput

func (GetAssociationsAssociationCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssociationsAssociationCollectionItem)(nil)).Elem()
}

func (i GetAssociationsAssociationCollectionItemArray) ToGetAssociationsAssociationCollectionItemArrayOutput() GetAssociationsAssociationCollectionItemArrayOutput {
	return i.ToGetAssociationsAssociationCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetAssociationsAssociationCollectionItemArray) ToGetAssociationsAssociationCollectionItemArrayOutputWithContext(ctx context.Context) GetAssociationsAssociationCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssociationsAssociationCollectionItemArrayOutput)
}

func (i GetAssociationsAssociationCollectionItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAssociationsAssociationCollectionItem] {
	return pulumix.Output[[]GetAssociationsAssociationCollectionItem]{
		OutputState: i.ToGetAssociationsAssociationCollectionItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAssociationsAssociationCollectionItemOutput struct{ *pulumi.OutputState }

func (GetAssociationsAssociationCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssociationsAssociationCollectionItem)(nil)).Elem()
}

func (o GetAssociationsAssociationCollectionItemOutput) ToGetAssociationsAssociationCollectionItemOutput() GetAssociationsAssociationCollectionItemOutput {
	return o
}

func (o GetAssociationsAssociationCollectionItemOutput) ToGetAssociationsAssociationCollectionItemOutputWithContext(ctx context.Context) GetAssociationsAssociationCollectionItemOutput {
	return o
}

func (o GetAssociationsAssociationCollectionItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetAssociationsAssociationCollectionItem] {
	return pulumix.Output[GetAssociationsAssociationCollectionItem]{
		OutputState: o.OutputState,
	}
}

// A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
func (o GetAssociationsAssociationCollectionItemOutput) AssociatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociationCollectionItem) string { return v.AssociatedResourceId }).(pulumi.StringOutput)
}

// Type of associations to list. If the parameter is set to null, the service lists all types of associations.
func (o GetAssociationsAssociationCollectionItemOutput) AssociationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociationCollectionItem) string { return v.AssociationType }).(pulumi.StringOutput)
}

// A filter that returns only resources that match the given OCID of a certificate-related resource.
func (o GetAssociationsAssociationCollectionItemOutput) CertificatesResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociationCollectionItem) string { return v.CertificatesResourceId }).(pulumi.StringOutput)
}

// A filter that returns only resources that match the given compartment OCID.
func (o GetAssociationsAssociationCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociationCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the association.
func (o GetAssociationsAssociationCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociationCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A filter that returns only resources that match the specified name.
func (o GetAssociationsAssociationCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociationCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// The current lifecycle state of the association.
func (o GetAssociationsAssociationCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociationCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// A property indicating when the association was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetAssociationsAssociationCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociationCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

type GetAssociationsAssociationCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetAssociationsAssociationCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssociationsAssociationCollectionItem)(nil)).Elem()
}

func (o GetAssociationsAssociationCollectionItemArrayOutput) ToGetAssociationsAssociationCollectionItemArrayOutput() GetAssociationsAssociationCollectionItemArrayOutput {
	return o
}

func (o GetAssociationsAssociationCollectionItemArrayOutput) ToGetAssociationsAssociationCollectionItemArrayOutputWithContext(ctx context.Context) GetAssociationsAssociationCollectionItemArrayOutput {
	return o
}

func (o GetAssociationsAssociationCollectionItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAssociationsAssociationCollectionItem] {
	return pulumix.Output[[]GetAssociationsAssociationCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetAssociationsAssociationCollectionItemArrayOutput) Index(i pulumi.IntInput) GetAssociationsAssociationCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssociationsAssociationCollectionItem {
		return vs[0].([]GetAssociationsAssociationCollectionItem)[vs[1].(int)]
	}).(GetAssociationsAssociationCollectionItemOutput)
}

type GetAssociationsFilter struct {
	// A filter that returns only resources that match the specified name.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetAssociationsFilterInput is an input type that accepts GetAssociationsFilterArgs and GetAssociationsFilterOutput values.
// You can construct a concrete instance of `GetAssociationsFilterInput` via:
//
//	GetAssociationsFilterArgs{...}
type GetAssociationsFilterInput interface {
	pulumi.Input

	ToGetAssociationsFilterOutput() GetAssociationsFilterOutput
	ToGetAssociationsFilterOutputWithContext(context.Context) GetAssociationsFilterOutput
}

type GetAssociationsFilterArgs struct {
	// A filter that returns only resources that match the specified name.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAssociationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssociationsFilter)(nil)).Elem()
}

func (i GetAssociationsFilterArgs) ToGetAssociationsFilterOutput() GetAssociationsFilterOutput {
	return i.ToGetAssociationsFilterOutputWithContext(context.Background())
}

func (i GetAssociationsFilterArgs) ToGetAssociationsFilterOutputWithContext(ctx context.Context) GetAssociationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssociationsFilterOutput)
}

func (i GetAssociationsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetAssociationsFilter] {
	return pulumix.Output[GetAssociationsFilter]{
		OutputState: i.ToGetAssociationsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetAssociationsFilterArrayInput is an input type that accepts GetAssociationsFilterArray and GetAssociationsFilterArrayOutput values.
// You can construct a concrete instance of `GetAssociationsFilterArrayInput` via:
//
//	GetAssociationsFilterArray{ GetAssociationsFilterArgs{...} }
type GetAssociationsFilterArrayInput interface {
	pulumi.Input

	ToGetAssociationsFilterArrayOutput() GetAssociationsFilterArrayOutput
	ToGetAssociationsFilterArrayOutputWithContext(context.Context) GetAssociationsFilterArrayOutput
}

type GetAssociationsFilterArray []GetAssociationsFilterInput

func (GetAssociationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssociationsFilter)(nil)).Elem()
}

func (i GetAssociationsFilterArray) ToGetAssociationsFilterArrayOutput() GetAssociationsFilterArrayOutput {
	return i.ToGetAssociationsFilterArrayOutputWithContext(context.Background())
}

func (i GetAssociationsFilterArray) ToGetAssociationsFilterArrayOutputWithContext(ctx context.Context) GetAssociationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssociationsFilterArrayOutput)
}

func (i GetAssociationsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAssociationsFilter] {
	return pulumix.Output[[]GetAssociationsFilter]{
		OutputState: i.ToGetAssociationsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAssociationsFilterOutput struct{ *pulumi.OutputState }

func (GetAssociationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssociationsFilter)(nil)).Elem()
}

func (o GetAssociationsFilterOutput) ToGetAssociationsFilterOutput() GetAssociationsFilterOutput {
	return o
}

func (o GetAssociationsFilterOutput) ToGetAssociationsFilterOutputWithContext(ctx context.Context) GetAssociationsFilterOutput {
	return o
}

func (o GetAssociationsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetAssociationsFilter] {
	return pulumix.Output[GetAssociationsFilter]{
		OutputState: o.OutputState,
	}
}

// A filter that returns only resources that match the specified name.
func (o GetAssociationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAssociationsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAssociationsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetAssociationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAssociationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAssociationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAssociationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssociationsFilter)(nil)).Elem()
}

func (o GetAssociationsFilterArrayOutput) ToGetAssociationsFilterArrayOutput() GetAssociationsFilterArrayOutput {
	return o
}

func (o GetAssociationsFilterArrayOutput) ToGetAssociationsFilterArrayOutputWithContext(ctx context.Context) GetAssociationsFilterArrayOutput {
	return o
}

func (o GetAssociationsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAssociationsFilter] {
	return pulumix.Output[[]GetAssociationsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetAssociationsFilterArrayOutput) Index(i pulumi.IntInput) GetAssociationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssociationsFilter {
		return vs[0].([]GetAssociationsFilter)[vs[1].(int)]
	}).(GetAssociationsFilterOutput)
}

type GetCaBundlesCaBundleCollection struct {
	Items []GetCaBundlesCaBundleCollectionItem `pulumi:"items"`
}

// GetCaBundlesCaBundleCollectionInput is an input type that accepts GetCaBundlesCaBundleCollectionArgs and GetCaBundlesCaBundleCollectionOutput values.
// You can construct a concrete instance of `GetCaBundlesCaBundleCollectionInput` via:
//
//	GetCaBundlesCaBundleCollectionArgs{...}
type GetCaBundlesCaBundleCollectionInput interface {
	pulumi.Input

	ToGetCaBundlesCaBundleCollectionOutput() GetCaBundlesCaBundleCollectionOutput
	ToGetCaBundlesCaBundleCollectionOutputWithContext(context.Context) GetCaBundlesCaBundleCollectionOutput
}

type GetCaBundlesCaBundleCollectionArgs struct {
	Items GetCaBundlesCaBundleCollectionItemArrayInput `pulumi:"items"`
}

func (GetCaBundlesCaBundleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaBundlesCaBundleCollection)(nil)).Elem()
}

func (i GetCaBundlesCaBundleCollectionArgs) ToGetCaBundlesCaBundleCollectionOutput() GetCaBundlesCaBundleCollectionOutput {
	return i.ToGetCaBundlesCaBundleCollectionOutputWithContext(context.Background())
}

func (i GetCaBundlesCaBundleCollectionArgs) ToGetCaBundlesCaBundleCollectionOutputWithContext(ctx context.Context) GetCaBundlesCaBundleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaBundlesCaBundleCollectionOutput)
}

func (i GetCaBundlesCaBundleCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetCaBundlesCaBundleCollection] {
	return pulumix.Output[GetCaBundlesCaBundleCollection]{
		OutputState: i.ToGetCaBundlesCaBundleCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetCaBundlesCaBundleCollectionArrayInput is an input type that accepts GetCaBundlesCaBundleCollectionArray and GetCaBundlesCaBundleCollectionArrayOutput values.
// You can construct a concrete instance of `GetCaBundlesCaBundleCollectionArrayInput` via:
//
//	GetCaBundlesCaBundleCollectionArray{ GetCaBundlesCaBundleCollectionArgs{...} }
type GetCaBundlesCaBundleCollectionArrayInput interface {
	pulumi.Input

	ToGetCaBundlesCaBundleCollectionArrayOutput() GetCaBundlesCaBundleCollectionArrayOutput
	ToGetCaBundlesCaBundleCollectionArrayOutputWithContext(context.Context) GetCaBundlesCaBundleCollectionArrayOutput
}

type GetCaBundlesCaBundleCollectionArray []GetCaBundlesCaBundleCollectionInput

func (GetCaBundlesCaBundleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaBundlesCaBundleCollection)(nil)).Elem()
}

func (i GetCaBundlesCaBundleCollectionArray) ToGetCaBundlesCaBundleCollectionArrayOutput() GetCaBundlesCaBundleCollectionArrayOutput {
	return i.ToGetCaBundlesCaBundleCollectionArrayOutputWithContext(context.Background())
}

func (i GetCaBundlesCaBundleCollectionArray) ToGetCaBundlesCaBundleCollectionArrayOutputWithContext(ctx context.Context) GetCaBundlesCaBundleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaBundlesCaBundleCollectionArrayOutput)
}

func (i GetCaBundlesCaBundleCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCaBundlesCaBundleCollection] {
	return pulumix.Output[[]GetCaBundlesCaBundleCollection]{
		OutputState: i.ToGetCaBundlesCaBundleCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCaBundlesCaBundleCollectionOutput struct{ *pulumi.OutputState }

func (GetCaBundlesCaBundleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaBundlesCaBundleCollection)(nil)).Elem()
}

func (o GetCaBundlesCaBundleCollectionOutput) ToGetCaBundlesCaBundleCollectionOutput() GetCaBundlesCaBundleCollectionOutput {
	return o
}

func (o GetCaBundlesCaBundleCollectionOutput) ToGetCaBundlesCaBundleCollectionOutputWithContext(ctx context.Context) GetCaBundlesCaBundleCollectionOutput {
	return o
}

func (o GetCaBundlesCaBundleCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetCaBundlesCaBundleCollection] {
	return pulumix.Output[GetCaBundlesCaBundleCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetCaBundlesCaBundleCollectionOutput) Items() GetCaBundlesCaBundleCollectionItemArrayOutput {
	return o.ApplyT(func(v GetCaBundlesCaBundleCollection) []GetCaBundlesCaBundleCollectionItem { return v.Items }).(GetCaBundlesCaBundleCollectionItemArrayOutput)
}

type GetCaBundlesCaBundleCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetCaBundlesCaBundleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaBundlesCaBundleCollection)(nil)).Elem()
}

func (o GetCaBundlesCaBundleCollectionArrayOutput) ToGetCaBundlesCaBundleCollectionArrayOutput() GetCaBundlesCaBundleCollectionArrayOutput {
	return o
}

func (o GetCaBundlesCaBundleCollectionArrayOutput) ToGetCaBundlesCaBundleCollectionArrayOutputWithContext(ctx context.Context) GetCaBundlesCaBundleCollectionArrayOutput {
	return o
}

func (o GetCaBundlesCaBundleCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCaBundlesCaBundleCollection] {
	return pulumix.Output[[]GetCaBundlesCaBundleCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetCaBundlesCaBundleCollectionArrayOutput) Index(i pulumi.IntInput) GetCaBundlesCaBundleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCaBundlesCaBundleCollection {
		return vs[0].([]GetCaBundlesCaBundleCollection)[vs[1].(int)]
	}).(GetCaBundlesCaBundleCollectionOutput)
}

type GetCaBundlesCaBundleCollectionItem struct {
	CaBundlePem string `pulumi:"caBundlePem"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A brief description of the CA bundle.
	Description string `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the CA bundle.
	Id string `pulumi:"id"`
	// Additional information about the current lifecycle state of the CA bundle.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// A filter that returns only resources that match the specified name.
	Name string `pulumi:"name"`
	// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// A property indicating when the CA bundle was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
}

// GetCaBundlesCaBundleCollectionItemInput is an input type that accepts GetCaBundlesCaBundleCollectionItemArgs and GetCaBundlesCaBundleCollectionItemOutput values.
// You can construct a concrete instance of `GetCaBundlesCaBundleCollectionItemInput` via:
//
//	GetCaBundlesCaBundleCollectionItemArgs{...}
type GetCaBundlesCaBundleCollectionItemInput interface {
	pulumi.Input

	ToGetCaBundlesCaBundleCollectionItemOutput() GetCaBundlesCaBundleCollectionItemOutput
	ToGetCaBundlesCaBundleCollectionItemOutputWithContext(context.Context) GetCaBundlesCaBundleCollectionItemOutput
}

type GetCaBundlesCaBundleCollectionItemArgs struct {
	CaBundlePem pulumi.StringInput `pulumi:"caBundlePem"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A brief description of the CA bundle.
	Description pulumi.StringInput `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the CA bundle.
	Id pulumi.StringInput `pulumi:"id"`
	// Additional information about the current lifecycle state of the CA bundle.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// A filter that returns only resources that match the specified name.
	Name pulumi.StringInput `pulumi:"name"`
	// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// A property indicating when the CA bundle was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
}

func (GetCaBundlesCaBundleCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaBundlesCaBundleCollectionItem)(nil)).Elem()
}

func (i GetCaBundlesCaBundleCollectionItemArgs) ToGetCaBundlesCaBundleCollectionItemOutput() GetCaBundlesCaBundleCollectionItemOutput {
	return i.ToGetCaBundlesCaBundleCollectionItemOutputWithContext(context.Background())
}

func (i GetCaBundlesCaBundleCollectionItemArgs) ToGetCaBundlesCaBundleCollectionItemOutputWithContext(ctx context.Context) GetCaBundlesCaBundleCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaBundlesCaBundleCollectionItemOutput)
}

func (i GetCaBundlesCaBundleCollectionItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetCaBundlesCaBundleCollectionItem] {
	return pulumix.Output[GetCaBundlesCaBundleCollectionItem]{
		OutputState: i.ToGetCaBundlesCaBundleCollectionItemOutputWithContext(ctx).OutputState,
	}
}

// GetCaBundlesCaBundleCollectionItemArrayInput is an input type that accepts GetCaBundlesCaBundleCollectionItemArray and GetCaBundlesCaBundleCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetCaBundlesCaBundleCollectionItemArrayInput` via:
//
//	GetCaBundlesCaBundleCollectionItemArray{ GetCaBundlesCaBundleCollectionItemArgs{...} }
type GetCaBundlesCaBundleCollectionItemArrayInput interface {
	pulumi.Input

	ToGetCaBundlesCaBundleCollectionItemArrayOutput() GetCaBundlesCaBundleCollectionItemArrayOutput
	ToGetCaBundlesCaBundleCollectionItemArrayOutputWithContext(context.Context) GetCaBundlesCaBundleCollectionItemArrayOutput
}

type GetCaBundlesCaBundleCollectionItemArray []GetCaBundlesCaBundleCollectionItemInput

func (GetCaBundlesCaBundleCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaBundlesCaBundleCollectionItem)(nil)).Elem()
}

func (i GetCaBundlesCaBundleCollectionItemArray) ToGetCaBundlesCaBundleCollectionItemArrayOutput() GetCaBundlesCaBundleCollectionItemArrayOutput {
	return i.ToGetCaBundlesCaBundleCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetCaBundlesCaBundleCollectionItemArray) ToGetCaBundlesCaBundleCollectionItemArrayOutputWithContext(ctx context.Context) GetCaBundlesCaBundleCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaBundlesCaBundleCollectionItemArrayOutput)
}

func (i GetCaBundlesCaBundleCollectionItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCaBundlesCaBundleCollectionItem] {
	return pulumix.Output[[]GetCaBundlesCaBundleCollectionItem]{
		OutputState: i.ToGetCaBundlesCaBundleCollectionItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCaBundlesCaBundleCollectionItemOutput struct{ *pulumi.OutputState }

func (GetCaBundlesCaBundleCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaBundlesCaBundleCollectionItem)(nil)).Elem()
}

func (o GetCaBundlesCaBundleCollectionItemOutput) ToGetCaBundlesCaBundleCollectionItemOutput() GetCaBundlesCaBundleCollectionItemOutput {
	return o
}

func (o GetCaBundlesCaBundleCollectionItemOutput) ToGetCaBundlesCaBundleCollectionItemOutputWithContext(ctx context.Context) GetCaBundlesCaBundleCollectionItemOutput {
	return o
}

func (o GetCaBundlesCaBundleCollectionItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetCaBundlesCaBundleCollectionItem] {
	return pulumix.Output[GetCaBundlesCaBundleCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetCaBundlesCaBundleCollectionItemOutput) CaBundlePem() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaBundlesCaBundleCollectionItem) string { return v.CaBundlePem }).(pulumi.StringOutput)
}

// A filter that returns only resources that match the given compartment OCID.
func (o GetCaBundlesCaBundleCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaBundlesCaBundleCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetCaBundlesCaBundleCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetCaBundlesCaBundleCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A brief description of the CA bundle.
func (o GetCaBundlesCaBundleCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaBundlesCaBundleCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetCaBundlesCaBundleCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetCaBundlesCaBundleCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the CA bundle.
func (o GetCaBundlesCaBundleCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaBundlesCaBundleCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state of the CA bundle.
func (o GetCaBundlesCaBundleCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaBundlesCaBundleCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// A filter that returns only resources that match the specified name.
func (o GetCaBundlesCaBundleCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaBundlesCaBundleCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetCaBundlesCaBundleCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaBundlesCaBundleCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// A property indicating when the CA bundle was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCaBundlesCaBundleCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaBundlesCaBundleCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

type GetCaBundlesCaBundleCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetCaBundlesCaBundleCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaBundlesCaBundleCollectionItem)(nil)).Elem()
}

func (o GetCaBundlesCaBundleCollectionItemArrayOutput) ToGetCaBundlesCaBundleCollectionItemArrayOutput() GetCaBundlesCaBundleCollectionItemArrayOutput {
	return o
}

func (o GetCaBundlesCaBundleCollectionItemArrayOutput) ToGetCaBundlesCaBundleCollectionItemArrayOutputWithContext(ctx context.Context) GetCaBundlesCaBundleCollectionItemArrayOutput {
	return o
}

func (o GetCaBundlesCaBundleCollectionItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCaBundlesCaBundleCollectionItem] {
	return pulumix.Output[[]GetCaBundlesCaBundleCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetCaBundlesCaBundleCollectionItemArrayOutput) Index(i pulumi.IntInput) GetCaBundlesCaBundleCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCaBundlesCaBundleCollectionItem {
		return vs[0].([]GetCaBundlesCaBundleCollectionItem)[vs[1].(int)]
	}).(GetCaBundlesCaBundleCollectionItemOutput)
}

type GetCaBundlesFilter struct {
	// A filter that returns only resources that match the specified name.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetCaBundlesFilterInput is an input type that accepts GetCaBundlesFilterArgs and GetCaBundlesFilterOutput values.
// You can construct a concrete instance of `GetCaBundlesFilterInput` via:
//
//	GetCaBundlesFilterArgs{...}
type GetCaBundlesFilterInput interface {
	pulumi.Input

	ToGetCaBundlesFilterOutput() GetCaBundlesFilterOutput
	ToGetCaBundlesFilterOutputWithContext(context.Context) GetCaBundlesFilterOutput
}

type GetCaBundlesFilterArgs struct {
	// A filter that returns only resources that match the specified name.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCaBundlesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaBundlesFilter)(nil)).Elem()
}

func (i GetCaBundlesFilterArgs) ToGetCaBundlesFilterOutput() GetCaBundlesFilterOutput {
	return i.ToGetCaBundlesFilterOutputWithContext(context.Background())
}

func (i GetCaBundlesFilterArgs) ToGetCaBundlesFilterOutputWithContext(ctx context.Context) GetCaBundlesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaBundlesFilterOutput)
}

func (i GetCaBundlesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetCaBundlesFilter] {
	return pulumix.Output[GetCaBundlesFilter]{
		OutputState: i.ToGetCaBundlesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetCaBundlesFilterArrayInput is an input type that accepts GetCaBundlesFilterArray and GetCaBundlesFilterArrayOutput values.
// You can construct a concrete instance of `GetCaBundlesFilterArrayInput` via:
//
//	GetCaBundlesFilterArray{ GetCaBundlesFilterArgs{...} }
type GetCaBundlesFilterArrayInput interface {
	pulumi.Input

	ToGetCaBundlesFilterArrayOutput() GetCaBundlesFilterArrayOutput
	ToGetCaBundlesFilterArrayOutputWithContext(context.Context) GetCaBundlesFilterArrayOutput
}

type GetCaBundlesFilterArray []GetCaBundlesFilterInput

func (GetCaBundlesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaBundlesFilter)(nil)).Elem()
}

func (i GetCaBundlesFilterArray) ToGetCaBundlesFilterArrayOutput() GetCaBundlesFilterArrayOutput {
	return i.ToGetCaBundlesFilterArrayOutputWithContext(context.Background())
}

func (i GetCaBundlesFilterArray) ToGetCaBundlesFilterArrayOutputWithContext(ctx context.Context) GetCaBundlesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaBundlesFilterArrayOutput)
}

func (i GetCaBundlesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCaBundlesFilter] {
	return pulumix.Output[[]GetCaBundlesFilter]{
		OutputState: i.ToGetCaBundlesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCaBundlesFilterOutput struct{ *pulumi.OutputState }

func (GetCaBundlesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaBundlesFilter)(nil)).Elem()
}

func (o GetCaBundlesFilterOutput) ToGetCaBundlesFilterOutput() GetCaBundlesFilterOutput {
	return o
}

func (o GetCaBundlesFilterOutput) ToGetCaBundlesFilterOutputWithContext(ctx context.Context) GetCaBundlesFilterOutput {
	return o
}

func (o GetCaBundlesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetCaBundlesFilter] {
	return pulumix.Output[GetCaBundlesFilter]{
		OutputState: o.OutputState,
	}
}

// A filter that returns only resources that match the specified name.
func (o GetCaBundlesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaBundlesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCaBundlesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCaBundlesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetCaBundlesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCaBundlesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCaBundlesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCaBundlesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaBundlesFilter)(nil)).Elem()
}

func (o GetCaBundlesFilterArrayOutput) ToGetCaBundlesFilterArrayOutput() GetCaBundlesFilterArrayOutput {
	return o
}

func (o GetCaBundlesFilterArrayOutput) ToGetCaBundlesFilterArrayOutputWithContext(ctx context.Context) GetCaBundlesFilterArrayOutput {
	return o
}

func (o GetCaBundlesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCaBundlesFilter] {
	return pulumix.Output[[]GetCaBundlesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetCaBundlesFilterArrayOutput) Index(i pulumi.IntInput) GetCaBundlesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCaBundlesFilter {
		return vs[0].([]GetCaBundlesFilter)[vs[1].(int)]
	}).(GetCaBundlesFilterOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollection struct {
	Items []GetCertificateAuthoritiesCertificateAuthorityCollectionItem `pulumi:"items"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionArgs struct {
	Items GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayInput `pulumi:"items"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollection)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollection] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollection]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionArray and GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionArray []GetCertificateAuthoritiesCertificateAuthorityCollectionInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollection)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollection] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollection]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollection)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollection] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionOutput) Items() GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollection) []GetCertificateAuthoritiesCertificateAuthorityCollectionItem {
		return v.Items
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollection)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollection] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollection {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollection)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItem struct {
	CertificateAuthorityConfigs []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig `pulumi:"certificateAuthorityConfigs"`
	// An optional list of rules that control how the CA is used and managed.
	CertificateAuthorityRules []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule `pulumi:"certificateAuthorityRules"`
	// The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail `pulumi:"certificateRevocationListDetails"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// The origin of the CA.
	ConfigType string `pulumi:"configType"`
	// The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
	CurrentVersions []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion `pulumi:"currentVersions"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A brief description of the CA.
	Description string `pulumi:"description"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the CA.
	Id string `pulumi:"id"`
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	IssuerCertificateAuthorityId string `pulumi:"issuerCertificateAuthorityId"`
	// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// Additional information about the current CA lifecycle state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// A filter that returns only resources that match the specified name.
	Name string `pulumi:"name"`
	// The algorithm used to sign public key certificates that the CA issues.
	SigningAlgorithm string `pulumi:"signingAlgorithm"`
	// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects []GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject `pulumi:"subjects"`
	// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemArgs struct {
	CertificateAuthorityConfigs GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayInput `pulumi:"certificateAuthorityConfigs"`
	// An optional list of rules that control how the CA is used and managed.
	CertificateAuthorityRules GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayInput `pulumi:"certificateAuthorityRules"`
	// The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayInput `pulumi:"certificateRevocationListDetails"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The origin of the CA.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
	CurrentVersions GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayInput `pulumi:"currentVersions"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A brief description of the CA.
	Description pulumi.StringInput `pulumi:"description"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the CA.
	Id pulumi.StringInput `pulumi:"id"`
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	IssuerCertificateAuthorityId pulumi.StringInput `pulumi:"issuerCertificateAuthorityId"`
	// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// Additional information about the current CA lifecycle state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// A filter that returns only resources that match the specified name.
	Name pulumi.StringInput `pulumi:"name"`
	// The algorithm used to sign public key certificates that the CA issues.
	SigningAlgorithm pulumi.StringInput `pulumi:"signingAlgorithm"`
	// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayInput `pulumi:"subjects"`
	// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItem)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItem] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItem]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemArray and GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionItemArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemArray []GetCertificateAuthoritiesCertificateAuthorityCollectionItemInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItem)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItem] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItem]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItem)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItem] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) CertificateAuthorityConfigs() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig {
		return v.CertificateAuthorityConfigs
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput)
}

// An optional list of rules that control how the CA is used and managed.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) CertificateAuthorityRules() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule {
		return v.CertificateAuthorityRules
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput)
}

// The details of the certificate revocation list (CRL).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) CertificateRevocationListDetails() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail {
		return v.CertificateRevocationListDetails
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput)
}

// A filter that returns only resources that match the given compartment OCID.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The origin of the CA.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string { return v.ConfigType }).(pulumi.StringOutput)
}

// The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) CurrentVersions() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion {
		return v.CurrentVersions
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput)
}

// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// A brief description of the CA.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// The OCID of the CA.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) IssuerCertificateAuthorityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string {
		return v.IssuerCertificateAuthorityId
	}).(pulumi.StringOutput)
}

// The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// Additional information about the current CA lifecycle state.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// A filter that returns only resources that match the specified name.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// The algorithm used to sign public key certificates that the CA issues.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) SigningAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string { return v.SigningAlgorithm }).(pulumi.StringOutput)
}

// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) Subjects() GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) []GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject {
		return v.Subjects
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput)
}

// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItem) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItem)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItem] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollectionItem {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollectionItem)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig struct {
	// The origin of the CA.
	ConfigType string `pulumi:"configType"`
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	IssuerCertificateAuthorityId string `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to sign public key certificates that the CA issues.
	SigningAlgorithm string `pulumi:"signingAlgorithm"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject `pulumi:"subjects"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity `pulumi:"validities"`
	// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
	VersionName string `pulumi:"versionName"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArgs struct {
	// The origin of the CA.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	IssuerCertificateAuthorityId pulumi.StringInput `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to sign public key certificates that the CA issues.
	SigningAlgorithm pulumi.StringInput `pulumi:"signingAlgorithm"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayInput `pulumi:"subjects"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayInput `pulumi:"validities"`
	// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
	VersionName pulumi.StringInput `pulumi:"versionName"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArray and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArray []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig]{
		OutputState: o.OutputState,
	}
}

// The origin of the CA.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig) string {
		return v.ConfigType
	}).(pulumi.StringOutput)
}

// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput) IssuerCertificateAuthorityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig) string {
		return v.IssuerCertificateAuthorityId
	}).(pulumi.StringOutput)
}

// The algorithm used to sign public key certificates that the CA issues.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput) SigningAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig) string {
		return v.SigningAlgorithm
	}).(pulumi.StringOutput)
}

// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput) Subjects() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig) []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject {
		return v.Subjects
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput) Validities() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig) []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity {
		return v.Validities
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput)
}

// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig) string {
		return v.VersionName
	}).(pulumi.StringOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfig)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName string `pulumi:"commonName"`
	// Country name (RDN C).
	Country string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName string `pulumi:"givenName"`
	// Personal initials.
	Initials string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title string `pulumi:"title"`
	// User ID (RDN UID).
	UserId string `pulumi:"userId"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArray and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArray []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.CommonName
	}).(pulumi.StringOutput)
}

// Country name (RDN C).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.Country
	}).(pulumi.StringOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) DistinguishedNameQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.DistinguishedNameQualifier
	}).(pulumi.StringOutput)
}

// Domain component (RDN DC).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) DomainComponent() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.DomainComponent
	}).(pulumi.StringOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) GenerationQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.GenerationQualifier
	}).(pulumi.StringOutput)
}

// Personal given name (RDN G or GN).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) GivenName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.GivenName
	}).(pulumi.StringOutput)
}

// Personal initials.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) Initials() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.Initials
	}).(pulumi.StringOutput)
}

// Locality (RDN L).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) LocalityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.LocalityName
	}).(pulumi.StringOutput)
}

// Organization (RDN O).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.Organization
	}).(pulumi.StringOutput)
}

// Organizational unit (RDN OU).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) OrganizationalUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.OrganizationalUnit
	}).(pulumi.StringOutput)
}

// Subject pseudonym.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) Pseudonym() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.Pseudonym
	}).(pulumi.StringOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.SerialNumber
	}).(pulumi.StringOutput)
}

// State or province name (RDN ST or S).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) StateOrProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.StateOrProvinceName
	}).(pulumi.StringOutput)
}

// Street address (RDN STREET).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) Street() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.Street
	}).(pulumi.StringOutput)
}

// Personal surname (RDN SN).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) Surname() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.Surname
	}).(pulumi.StringOutput)
}

// Title (RDN T or TITLE).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.Title
	}).(pulumi.StringOutput)
}

// User ID (RDN UID).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject) string {
		return v.UserId
	}).(pulumi.StringOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubject)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArray and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArray []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity) string {
		return v.TimeOfValidityNotAfter
	}).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity) string {
		return v.TimeOfValidityNotBefore
	}).(pulumi.StringOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidity)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule struct {
	// A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	CertificateAuthorityMaxValidityDuration string `pulumi:"certificateAuthorityMaxValidityDuration"`
	// A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	LeafCertificateMaxValidityDuration string `pulumi:"leafCertificateMaxValidityDuration"`
	// The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
	RuleType string `pulumi:"ruleType"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArgs struct {
	// A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	CertificateAuthorityMaxValidityDuration pulumi.StringInput `pulumi:"certificateAuthorityMaxValidityDuration"`
	// A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	LeafCertificateMaxValidityDuration pulumi.StringInput `pulumi:"leafCertificateMaxValidityDuration"`
	// The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArray and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArray []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule]{
		OutputState: o.OutputState,
	}
}

// A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput) CertificateAuthorityMaxValidityDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule) string {
		return v.CertificateAuthorityMaxValidityDuration
	}).(pulumi.StringOutput)
}

// A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput) LeafCertificateMaxValidityDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule) string {
		return v.LeafCertificateMaxValidityDuration
	}).(pulumi.StringOutput)
}

// The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule) string {
		return v.RuleType
	}).(pulumi.StringOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRule)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail struct {
	// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls []string `pulumi:"customFormattedUrls"`
	// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfigs []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig `pulumi:"objectStorageConfigs"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArgs struct {
	// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls pulumi.StringArrayInput `pulumi:"customFormattedUrls"`
	// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfigs GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayInput `pulumi:"objectStorageConfigs"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArray and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArray []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail]{
		OutputState: o.OutputState,
	}
}

// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput) CustomFormattedUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail) []string {
		return v.CustomFormattedUrls
	}).(pulumi.StringArrayOutput)
}

// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput) ObjectStorageConfigs() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail) []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig {
		return v.ObjectStorageConfigs
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetail)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig struct {
	// The name of the bucket where the CRL is stored.
	ObjectStorageBucketName string `pulumi:"objectStorageBucketName"`
	// The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace string `pulumi:"objectStorageNamespace"`
	// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat string `pulumi:"objectStorageObjectNameFormat"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs struct {
	// The name of the bucket where the CRL is stored.
	ObjectStorageBucketName pulumi.StringInput `pulumi:"objectStorageBucketName"`
	// The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace pulumi.StringInput `pulumi:"objectStorageNamespace"`
	// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat pulumi.StringInput `pulumi:"objectStorageObjectNameFormat"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArray and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArray []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

// The name of the bucket where the CRL is stored.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageBucketName
	}).(pulumi.StringOutput)
}

// The tenancy of the bucket where the CRL is stored.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageNamespace
	}).(pulumi.StringOutput)
}

// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageObjectNameFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageObjectNameFormat
	}).(pulumi.StringOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfig)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion struct {
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	CertificateAuthorityId string `pulumi:"certificateAuthorityId"`
	// The version number of the issuing CA.
	IssuerCaVersionNumber string `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// A list of rotation states for this CA version.
	Stages []string `pulumi:"stages"`
	// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity `pulumi:"validities"`
	// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
	VersionName string `pulumi:"versionName"`
	// The version number of the CA.
	VersionNumber string `pulumi:"versionNumber"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArgs struct {
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	CertificateAuthorityId pulumi.StringInput `pulumi:"certificateAuthorityId"`
	// The version number of the issuing CA.
	IssuerCaVersionNumber pulumi.StringInput `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayInput `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// A list of rotation states for this CA version.
	Stages pulumi.StringArrayInput `pulumi:"stages"`
	// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayInput `pulumi:"validities"`
	// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
	VersionName pulumi.StringInput `pulumi:"versionName"`
	// The version number of the CA.
	VersionNumber pulumi.StringInput `pulumi:"versionNumber"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArray and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArray []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion]{
		OutputState: o.OutputState,
	}
}

// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) CertificateAuthorityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion) string {
		return v.CertificateAuthorityId
	}).(pulumi.StringOutput)
}

// The version number of the issuing CA.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) IssuerCaVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion) string {
		return v.IssuerCaVersionNumber
	}).(pulumi.StringOutput)
}

// The current revocation status of the entity.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) RevocationStatuses() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion) []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus {
		return v.RevocationStatuses
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion) string {
		return v.SerialNumber
	}).(pulumi.StringOutput)
}

// A list of rotation states for this CA version.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion) []string {
		return v.Stages
	}).(pulumi.StringArrayOutput)
}

// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion) string {
		return v.TimeOfDeletion
	}).(pulumi.StringOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) Validities() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion) []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity {
		return v.Validities
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput)
}

// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion) string {
		return v.VersionName
	}).(pulumi.StringOutput)
}

// The version number of the CA.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput) VersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion) string {
		return v.VersionNumber
	}).(pulumi.StringOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersion)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason string `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation string `pulumi:"timeOfRevocation"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArgs struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason pulumi.StringInput `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation pulumi.StringInput `pulumi:"timeOfRevocation"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArray and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArray []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

// The reason the certificate or certificate authority (CA) was revoked.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput) RevocationReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus) string {
		return v.RevocationReason
	}).(pulumi.StringOutput)
}

// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput) TimeOfRevocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus) string {
		return v.TimeOfRevocation
	}).(pulumi.StringOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatus)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArray and GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArray []GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity) string {
		return v.TimeOfValidityNotAfter
	}).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity) string {
		return v.TimeOfValidityNotBefore
	}).(pulumi.StringOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidity)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName string `pulumi:"commonName"`
	// Country name (RDN C).
	Country string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName string `pulumi:"givenName"`
	// Personal initials.
	Initials string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title string `pulumi:"title"`
	// User ID (RDN UID).
	UserId string `pulumi:"userId"`
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArgs and GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArgs{...}
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArgs) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayInput is an input type that accepts GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArray and GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayInput` via:
//
//	GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArray{ GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArgs{...} }
type GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput
	ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutputWithContext(context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArray []GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectInput

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject)(nil)).Elem()
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput {
	return i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArray) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput)
}

func (i GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject]{
		OutputState: i.ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject] {
	return pulumix.Output[GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string { return v.CommonName }).(pulumi.StringOutput)
}

// Country name (RDN C).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string { return v.Country }).(pulumi.StringOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) DistinguishedNameQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string {
		return v.DistinguishedNameQualifier
	}).(pulumi.StringOutput)
}

// Domain component (RDN DC).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) DomainComponent() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string {
		return v.DomainComponent
	}).(pulumi.StringOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) GenerationQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string {
		return v.GenerationQualifier
	}).(pulumi.StringOutput)
}

// Personal given name (RDN G or GN).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) GivenName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string { return v.GivenName }).(pulumi.StringOutput)
}

// Personal initials.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) Initials() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string { return v.Initials }).(pulumi.StringOutput)
}

// Locality (RDN L).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) LocalityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string {
		return v.LocalityName
	}).(pulumi.StringOutput)
}

// Organization (RDN O).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string {
		return v.Organization
	}).(pulumi.StringOutput)
}

// Organizational unit (RDN OU).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) OrganizationalUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string {
		return v.OrganizationalUnit
	}).(pulumi.StringOutput)
}

// Subject pseudonym.
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) Pseudonym() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string { return v.Pseudonym }).(pulumi.StringOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string {
		return v.SerialNumber
	}).(pulumi.StringOutput)
}

// State or province name (RDN ST or S).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) StateOrProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string {
		return v.StateOrProvinceName
	}).(pulumi.StringOutput)
}

// Street address (RDN STREET).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) Street() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string { return v.Street }).(pulumi.StringOutput)
}

// Personal surname (RDN SN).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) Surname() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string { return v.Surname }).(pulumi.StringOutput)
}

// Title (RDN T or TITLE).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string { return v.Title }).(pulumi.StringOutput)
}

// User ID (RDN UID).
func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject) string { return v.UserId }).(pulumi.StringOutput)
}

type GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject)(nil)).Elem()
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput() GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput) ToGetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject] {
	return pulumix.Output[[]GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject {
		return vs[0].([]GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubject)[vs[1].(int)]
	}).(GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput)
}

type GetCertificateAuthoritiesFilter struct {
	// A filter that returns only resources that match the specified name.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetCertificateAuthoritiesFilterInput is an input type that accepts GetCertificateAuthoritiesFilterArgs and GetCertificateAuthoritiesFilterOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesFilterInput` via:
//
//	GetCertificateAuthoritiesFilterArgs{...}
type GetCertificateAuthoritiesFilterInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesFilterOutput() GetCertificateAuthoritiesFilterOutput
	ToGetCertificateAuthoritiesFilterOutputWithContext(context.Context) GetCertificateAuthoritiesFilterOutput
}

type GetCertificateAuthoritiesFilterArgs struct {
	// A filter that returns only resources that match the specified name.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCertificateAuthoritiesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesFilter)(nil)).Elem()
}

func (i GetCertificateAuthoritiesFilterArgs) ToGetCertificateAuthoritiesFilterOutput() GetCertificateAuthoritiesFilterOutput {
	return i.ToGetCertificateAuthoritiesFilterOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesFilterArgs) ToGetCertificateAuthoritiesFilterOutputWithContext(ctx context.Context) GetCertificateAuthoritiesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesFilterOutput)
}

func (i GetCertificateAuthoritiesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesFilter] {
	return pulumix.Output[GetCertificateAuthoritiesFilter]{
		OutputState: i.ToGetCertificateAuthoritiesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritiesFilterArrayInput is an input type that accepts GetCertificateAuthoritiesFilterArray and GetCertificateAuthoritiesFilterArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritiesFilterArrayInput` via:
//
//	GetCertificateAuthoritiesFilterArray{ GetCertificateAuthoritiesFilterArgs{...} }
type GetCertificateAuthoritiesFilterArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritiesFilterArrayOutput() GetCertificateAuthoritiesFilterArrayOutput
	ToGetCertificateAuthoritiesFilterArrayOutputWithContext(context.Context) GetCertificateAuthoritiesFilterArrayOutput
}

type GetCertificateAuthoritiesFilterArray []GetCertificateAuthoritiesFilterInput

func (GetCertificateAuthoritiesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesFilter)(nil)).Elem()
}

func (i GetCertificateAuthoritiesFilterArray) ToGetCertificateAuthoritiesFilterArrayOutput() GetCertificateAuthoritiesFilterArrayOutput {
	return i.ToGetCertificateAuthoritiesFilterArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritiesFilterArray) ToGetCertificateAuthoritiesFilterArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritiesFilterArrayOutput)
}

func (i GetCertificateAuthoritiesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesFilter] {
	return pulumix.Output[[]GetCertificateAuthoritiesFilter]{
		OutputState: i.ToGetCertificateAuthoritiesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritiesFilterOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritiesFilter)(nil)).Elem()
}

func (o GetCertificateAuthoritiesFilterOutput) ToGetCertificateAuthoritiesFilterOutput() GetCertificateAuthoritiesFilterOutput {
	return o
}

func (o GetCertificateAuthoritiesFilterOutput) ToGetCertificateAuthoritiesFilterOutputWithContext(ctx context.Context) GetCertificateAuthoritiesFilterOutput {
	return o
}

func (o GetCertificateAuthoritiesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritiesFilter] {
	return pulumix.Output[GetCertificateAuthoritiesFilter]{
		OutputState: o.OutputState,
	}
}

// A filter that returns only resources that match the specified name.
func (o GetCertificateAuthoritiesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCertificateAuthoritiesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetCertificateAuthoritiesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthoritiesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCertificateAuthoritiesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritiesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritiesFilter)(nil)).Elem()
}

func (o GetCertificateAuthoritiesFilterArrayOutput) ToGetCertificateAuthoritiesFilterArrayOutput() GetCertificateAuthoritiesFilterArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesFilterArrayOutput) ToGetCertificateAuthoritiesFilterArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritiesFilterArrayOutput {
	return o
}

func (o GetCertificateAuthoritiesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritiesFilter] {
	return pulumix.Output[[]GetCertificateAuthoritiesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritiesFilterArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritiesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritiesFilter {
		return vs[0].([]GetCertificateAuthoritiesFilter)[vs[1].(int)]
	}).(GetCertificateAuthoritiesFilterOutput)
}

type GetCertificateAuthorityCertificateAuthorityConfig struct {
	// The origin of the CA.
	ConfigType string `pulumi:"configType"`
	// The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
	IssuerCertificateAuthorityId string `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to sign public key certificates that the CA issues.
	SigningAlgorithm string `pulumi:"signingAlgorithm"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects []GetCertificateAuthorityCertificateAuthorityConfigSubject `pulumi:"subjects"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificateAuthorityCertificateAuthorityConfigValidity `pulumi:"validities"`
	// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
	VersionName string `pulumi:"versionName"`
}

// GetCertificateAuthorityCertificateAuthorityConfigInput is an input type that accepts GetCertificateAuthorityCertificateAuthorityConfigArgs and GetCertificateAuthorityCertificateAuthorityConfigOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateAuthorityConfigInput` via:
//
//	GetCertificateAuthorityCertificateAuthorityConfigArgs{...}
type GetCertificateAuthorityCertificateAuthorityConfigInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateAuthorityConfigOutput() GetCertificateAuthorityCertificateAuthorityConfigOutput
	ToGetCertificateAuthorityCertificateAuthorityConfigOutputWithContext(context.Context) GetCertificateAuthorityCertificateAuthorityConfigOutput
}

type GetCertificateAuthorityCertificateAuthorityConfigArgs struct {
	// The origin of the CA.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
	IssuerCertificateAuthorityId pulumi.StringInput `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to sign public key certificates that the CA issues.
	SigningAlgorithm pulumi.StringInput `pulumi:"signingAlgorithm"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayInput `pulumi:"subjects"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities GetCertificateAuthorityCertificateAuthorityConfigValidityArrayInput `pulumi:"validities"`
	// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
	VersionName pulumi.StringInput `pulumi:"versionName"`
}

func (GetCertificateAuthorityCertificateAuthorityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfig)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateAuthorityConfigArgs) ToGetCertificateAuthorityCertificateAuthorityConfigOutput() GetCertificateAuthorityCertificateAuthorityConfigOutput {
	return i.ToGetCertificateAuthorityCertificateAuthorityConfigOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateAuthorityConfigArgs) ToGetCertificateAuthorityCertificateAuthorityConfigOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateAuthorityConfigOutput)
}

func (i GetCertificateAuthorityCertificateAuthorityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfig] {
	return pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfig]{
		OutputState: i.ToGetCertificateAuthorityCertificateAuthorityConfigOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityCertificateAuthorityConfigArrayInput is an input type that accepts GetCertificateAuthorityCertificateAuthorityConfigArray and GetCertificateAuthorityCertificateAuthorityConfigArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateAuthorityConfigArrayInput` via:
//
//	GetCertificateAuthorityCertificateAuthorityConfigArray{ GetCertificateAuthorityCertificateAuthorityConfigArgs{...} }
type GetCertificateAuthorityCertificateAuthorityConfigArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateAuthorityConfigArrayOutput() GetCertificateAuthorityCertificateAuthorityConfigArrayOutput
	ToGetCertificateAuthorityCertificateAuthorityConfigArrayOutputWithContext(context.Context) GetCertificateAuthorityCertificateAuthorityConfigArrayOutput
}

type GetCertificateAuthorityCertificateAuthorityConfigArray []GetCertificateAuthorityCertificateAuthorityConfigInput

func (GetCertificateAuthorityCertificateAuthorityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateAuthorityConfig)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateAuthorityConfigArray) ToGetCertificateAuthorityCertificateAuthorityConfigArrayOutput() GetCertificateAuthorityCertificateAuthorityConfigArrayOutput {
	return i.ToGetCertificateAuthorityCertificateAuthorityConfigArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateAuthorityConfigArray) ToGetCertificateAuthorityCertificateAuthorityConfigArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateAuthorityConfigArrayOutput)
}

func (i GetCertificateAuthorityCertificateAuthorityConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfig] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfig]{
		OutputState: i.ToGetCertificateAuthorityCertificateAuthorityConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityCertificateAuthorityConfigOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateAuthorityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfig)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateAuthorityConfigOutput) ToGetCertificateAuthorityCertificateAuthorityConfigOutput() GetCertificateAuthorityCertificateAuthorityConfigOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigOutput) ToGetCertificateAuthorityCertificateAuthorityConfigOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfig] {
	return pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfig]{
		OutputState: o.OutputState,
	}
}

// The origin of the CA.
func (o GetCertificateAuthorityCertificateAuthorityConfigOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfig) string { return v.ConfigType }).(pulumi.StringOutput)
}

// The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
func (o GetCertificateAuthorityCertificateAuthorityConfigOutput) IssuerCertificateAuthorityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfig) string {
		return v.IssuerCertificateAuthorityId
	}).(pulumi.StringOutput)
}

// The algorithm used to sign public key certificates that the CA issues.
func (o GetCertificateAuthorityCertificateAuthorityConfigOutput) SigningAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfig) string { return v.SigningAlgorithm }).(pulumi.StringOutput)
}

// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
func (o GetCertificateAuthorityCertificateAuthorityConfigOutput) Subjects() GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfig) []GetCertificateAuthorityCertificateAuthorityConfigSubject {
		return v.Subjects
	}).(GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificateAuthorityCertificateAuthorityConfigOutput) Validities() GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfig) []GetCertificateAuthorityCertificateAuthorityConfigValidity {
		return v.Validities
	}).(GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput)
}

// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
func (o GetCertificateAuthorityCertificateAuthorityConfigOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfig) string { return v.VersionName }).(pulumi.StringOutput)
}

type GetCertificateAuthorityCertificateAuthorityConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateAuthorityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateAuthorityConfig)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateAuthorityConfigArrayOutput) ToGetCertificateAuthorityCertificateAuthorityConfigArrayOutput() GetCertificateAuthorityCertificateAuthorityConfigArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigArrayOutput) ToGetCertificateAuthorityCertificateAuthorityConfigArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfig] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityCertificateAuthorityConfigArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityCertificateAuthorityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityCertificateAuthorityConfig {
		return vs[0].([]GetCertificateAuthorityCertificateAuthorityConfig)[vs[1].(int)]
	}).(GetCertificateAuthorityCertificateAuthorityConfigOutput)
}

type GetCertificateAuthorityCertificateAuthorityConfigSubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName string `pulumi:"commonName"`
	// Country name (RDN C).
	Country string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName string `pulumi:"givenName"`
	// Personal initials.
	Initials string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title string `pulumi:"title"`
	// User ID (RDN UID).
	UserId string `pulumi:"userId"`
}

// GetCertificateAuthorityCertificateAuthorityConfigSubjectInput is an input type that accepts GetCertificateAuthorityCertificateAuthorityConfigSubjectArgs and GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateAuthorityConfigSubjectInput` via:
//
//	GetCertificateAuthorityCertificateAuthorityConfigSubjectArgs{...}
type GetCertificateAuthorityCertificateAuthorityConfigSubjectInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateAuthorityConfigSubjectOutput() GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput
	ToGetCertificateAuthorityCertificateAuthorityConfigSubjectOutputWithContext(context.Context) GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput
}

type GetCertificateAuthorityCertificateAuthorityConfigSubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetCertificateAuthorityCertificateAuthorityConfigSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateAuthorityConfigSubjectArgs) ToGetCertificateAuthorityCertificateAuthorityConfigSubjectOutput() GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput {
	return i.ToGetCertificateAuthorityCertificateAuthorityConfigSubjectOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateAuthorityConfigSubjectArgs) ToGetCertificateAuthorityCertificateAuthorityConfigSubjectOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput)
}

func (i GetCertificateAuthorityCertificateAuthorityConfigSubjectArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfigSubject] {
	return pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfigSubject]{
		OutputState: i.ToGetCertificateAuthorityCertificateAuthorityConfigSubjectOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayInput is an input type that accepts GetCertificateAuthorityCertificateAuthorityConfigSubjectArray and GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayInput` via:
//
//	GetCertificateAuthorityCertificateAuthorityConfigSubjectArray{ GetCertificateAuthorityCertificateAuthorityConfigSubjectArgs{...} }
type GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput() GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput
	ToGetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutputWithContext(context.Context) GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput
}

type GetCertificateAuthorityCertificateAuthorityConfigSubjectArray []GetCertificateAuthorityCertificateAuthorityConfigSubjectInput

func (GetCertificateAuthorityCertificateAuthorityConfigSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateAuthorityConfigSubjectArray) ToGetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput() GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput {
	return i.ToGetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateAuthorityConfigSubjectArray) ToGetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput)
}

func (i GetCertificateAuthorityCertificateAuthorityConfigSubjectArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfigSubject] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfigSubject]{
		OutputState: i.ToGetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) ToGetCertificateAuthorityCertificateAuthorityConfigSubjectOutput() GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) ToGetCertificateAuthorityCertificateAuthorityConfigSubjectOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfigSubject] {
	return pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfigSubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.CommonName }).(pulumi.StringOutput)
}

// Country name (RDN C).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.Country }).(pulumi.StringOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) DistinguishedNameQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string {
		return v.DistinguishedNameQualifier
	}).(pulumi.StringOutput)
}

// Domain component (RDN DC).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) DomainComponent() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.DomainComponent }).(pulumi.StringOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) GenerationQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.GenerationQualifier }).(pulumi.StringOutput)
}

// Personal given name (RDN G or GN).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) GivenName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.GivenName }).(pulumi.StringOutput)
}

// Personal initials.
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) Initials() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.Initials }).(pulumi.StringOutput)
}

// Locality (RDN L).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) LocalityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.LocalityName }).(pulumi.StringOutput)
}

// Organization (RDN O).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.Organization }).(pulumi.StringOutput)
}

// Organizational unit (RDN OU).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) OrganizationalUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.OrganizationalUnit }).(pulumi.StringOutput)
}

// Subject pseudonym.
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) Pseudonym() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.Pseudonym }).(pulumi.StringOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// State or province name (RDN ST or S).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) StateOrProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.StateOrProvinceName }).(pulumi.StringOutput)
}

// Street address (RDN STREET).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) Street() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.Street }).(pulumi.StringOutput)
}

// Personal surname (RDN SN).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) Surname() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.Surname }).(pulumi.StringOutput)
}

// Title (RDN T or TITLE).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.Title }).(pulumi.StringOutput)
}

// User ID (RDN UID).
func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigSubject) string { return v.UserId }).(pulumi.StringOutput)
}

type GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateAuthorityConfigSubject)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput) ToGetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput() GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput) ToGetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfigSubject] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfigSubject]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityCertificateAuthorityConfigSubject {
		return vs[0].([]GetCertificateAuthorityCertificateAuthorityConfigSubject)[vs[1].(int)]
	}).(GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput)
}

type GetCertificateAuthorityCertificateAuthorityConfigValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificateAuthorityCertificateAuthorityConfigValidityInput is an input type that accepts GetCertificateAuthorityCertificateAuthorityConfigValidityArgs and GetCertificateAuthorityCertificateAuthorityConfigValidityOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateAuthorityConfigValidityInput` via:
//
//	GetCertificateAuthorityCertificateAuthorityConfigValidityArgs{...}
type GetCertificateAuthorityCertificateAuthorityConfigValidityInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateAuthorityConfigValidityOutput() GetCertificateAuthorityCertificateAuthorityConfigValidityOutput
	ToGetCertificateAuthorityCertificateAuthorityConfigValidityOutputWithContext(context.Context) GetCertificateAuthorityCertificateAuthorityConfigValidityOutput
}

type GetCertificateAuthorityCertificateAuthorityConfigValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificateAuthorityCertificateAuthorityConfigValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateAuthorityConfigValidityArgs) ToGetCertificateAuthorityCertificateAuthorityConfigValidityOutput() GetCertificateAuthorityCertificateAuthorityConfigValidityOutput {
	return i.ToGetCertificateAuthorityCertificateAuthorityConfigValidityOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateAuthorityConfigValidityArgs) ToGetCertificateAuthorityCertificateAuthorityConfigValidityOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateAuthorityConfigValidityOutput)
}

func (i GetCertificateAuthorityCertificateAuthorityConfigValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfigValidity] {
	return pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfigValidity]{
		OutputState: i.ToGetCertificateAuthorityCertificateAuthorityConfigValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityCertificateAuthorityConfigValidityArrayInput is an input type that accepts GetCertificateAuthorityCertificateAuthorityConfigValidityArray and GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateAuthorityConfigValidityArrayInput` via:
//
//	GetCertificateAuthorityCertificateAuthorityConfigValidityArray{ GetCertificateAuthorityCertificateAuthorityConfigValidityArgs{...} }
type GetCertificateAuthorityCertificateAuthorityConfigValidityArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput() GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput
	ToGetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutputWithContext(context.Context) GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput
}

type GetCertificateAuthorityCertificateAuthorityConfigValidityArray []GetCertificateAuthorityCertificateAuthorityConfigValidityInput

func (GetCertificateAuthorityCertificateAuthorityConfigValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateAuthorityConfigValidityArray) ToGetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput() GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput {
	return i.ToGetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateAuthorityConfigValidityArray) ToGetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput)
}

func (i GetCertificateAuthorityCertificateAuthorityConfigValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfigValidity] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfigValidity]{
		OutputState: i.ToGetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityCertificateAuthorityConfigValidityOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateAuthorityConfigValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateAuthorityConfigValidityOutput) ToGetCertificateAuthorityCertificateAuthorityConfigValidityOutput() GetCertificateAuthorityCertificateAuthorityConfigValidityOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigValidityOutput) ToGetCertificateAuthorityCertificateAuthorityConfigValidityOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigValidityOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfigValidity] {
	return pulumix.Output[GetCertificateAuthorityCertificateAuthorityConfigValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityCertificateAuthorityConfigValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigValidity) string {
		return v.TimeOfValidityNotAfter
	}).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityCertificateAuthorityConfigValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityConfigValidity) string {
		return v.TimeOfValidityNotBefore
	}).(pulumi.StringOutput)
}

type GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateAuthorityConfigValidity)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput) ToGetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput() GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput) ToGetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfigValidity] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityConfigValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityCertificateAuthorityConfigValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityCertificateAuthorityConfigValidity {
		return vs[0].([]GetCertificateAuthorityCertificateAuthorityConfigValidity)[vs[1].(int)]
	}).(GetCertificateAuthorityCertificateAuthorityConfigValidityOutput)
}

type GetCertificateAuthorityCertificateAuthorityRule struct {
	// A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	CertificateAuthorityMaxValidityDuration string `pulumi:"certificateAuthorityMaxValidityDuration"`
	// A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	LeafCertificateMaxValidityDuration string `pulumi:"leafCertificateMaxValidityDuration"`
	// The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
	RuleType string `pulumi:"ruleType"`
}

// GetCertificateAuthorityCertificateAuthorityRuleInput is an input type that accepts GetCertificateAuthorityCertificateAuthorityRuleArgs and GetCertificateAuthorityCertificateAuthorityRuleOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateAuthorityRuleInput` via:
//
//	GetCertificateAuthorityCertificateAuthorityRuleArgs{...}
type GetCertificateAuthorityCertificateAuthorityRuleInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateAuthorityRuleOutput() GetCertificateAuthorityCertificateAuthorityRuleOutput
	ToGetCertificateAuthorityCertificateAuthorityRuleOutputWithContext(context.Context) GetCertificateAuthorityCertificateAuthorityRuleOutput
}

type GetCertificateAuthorityCertificateAuthorityRuleArgs struct {
	// A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	CertificateAuthorityMaxValidityDuration pulumi.StringInput `pulumi:"certificateAuthorityMaxValidityDuration"`
	// A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	LeafCertificateMaxValidityDuration pulumi.StringInput `pulumi:"leafCertificateMaxValidityDuration"`
	// The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (GetCertificateAuthorityCertificateAuthorityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityRule)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateAuthorityRuleArgs) ToGetCertificateAuthorityCertificateAuthorityRuleOutput() GetCertificateAuthorityCertificateAuthorityRuleOutput {
	return i.ToGetCertificateAuthorityCertificateAuthorityRuleOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateAuthorityRuleArgs) ToGetCertificateAuthorityCertificateAuthorityRuleOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateAuthorityRuleOutput)
}

func (i GetCertificateAuthorityCertificateAuthorityRuleArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateAuthorityRule] {
	return pulumix.Output[GetCertificateAuthorityCertificateAuthorityRule]{
		OutputState: i.ToGetCertificateAuthorityCertificateAuthorityRuleOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityCertificateAuthorityRuleArrayInput is an input type that accepts GetCertificateAuthorityCertificateAuthorityRuleArray and GetCertificateAuthorityCertificateAuthorityRuleArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateAuthorityRuleArrayInput` via:
//
//	GetCertificateAuthorityCertificateAuthorityRuleArray{ GetCertificateAuthorityCertificateAuthorityRuleArgs{...} }
type GetCertificateAuthorityCertificateAuthorityRuleArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateAuthorityRuleArrayOutput() GetCertificateAuthorityCertificateAuthorityRuleArrayOutput
	ToGetCertificateAuthorityCertificateAuthorityRuleArrayOutputWithContext(context.Context) GetCertificateAuthorityCertificateAuthorityRuleArrayOutput
}

type GetCertificateAuthorityCertificateAuthorityRuleArray []GetCertificateAuthorityCertificateAuthorityRuleInput

func (GetCertificateAuthorityCertificateAuthorityRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateAuthorityRule)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateAuthorityRuleArray) ToGetCertificateAuthorityCertificateAuthorityRuleArrayOutput() GetCertificateAuthorityCertificateAuthorityRuleArrayOutput {
	return i.ToGetCertificateAuthorityCertificateAuthorityRuleArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateAuthorityRuleArray) ToGetCertificateAuthorityCertificateAuthorityRuleArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateAuthorityRuleArrayOutput)
}

func (i GetCertificateAuthorityCertificateAuthorityRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityRule] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityRule]{
		OutputState: i.ToGetCertificateAuthorityCertificateAuthorityRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityCertificateAuthorityRuleOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateAuthorityRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityRule)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateAuthorityRuleOutput) ToGetCertificateAuthorityCertificateAuthorityRuleOutput() GetCertificateAuthorityCertificateAuthorityRuleOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityRuleOutput) ToGetCertificateAuthorityCertificateAuthorityRuleOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityRuleOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityRuleOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateAuthorityRule] {
	return pulumix.Output[GetCertificateAuthorityCertificateAuthorityRule]{
		OutputState: o.OutputState,
	}
}

// A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o GetCertificateAuthorityCertificateAuthorityRuleOutput) CertificateAuthorityMaxValidityDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityRule) string {
		return v.CertificateAuthorityMaxValidityDuration
	}).(pulumi.StringOutput)
}

// A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o GetCertificateAuthorityCertificateAuthorityRuleOutput) LeafCertificateMaxValidityDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityRule) string {
		return v.LeafCertificateMaxValidityDuration
	}).(pulumi.StringOutput)
}

// The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
func (o GetCertificateAuthorityCertificateAuthorityRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateAuthorityRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type GetCertificateAuthorityCertificateAuthorityRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateAuthorityRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateAuthorityRule)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateAuthorityRuleArrayOutput) ToGetCertificateAuthorityCertificateAuthorityRuleArrayOutput() GetCertificateAuthorityCertificateAuthorityRuleArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityRuleArrayOutput) ToGetCertificateAuthorityCertificateAuthorityRuleArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateAuthorityRuleArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateAuthorityRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityRule] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateAuthorityRule]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityCertificateAuthorityRuleArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityCertificateAuthorityRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityCertificateAuthorityRule {
		return vs[0].([]GetCertificateAuthorityCertificateAuthorityRule)[vs[1].(int)]
	}).(GetCertificateAuthorityCertificateAuthorityRuleOutput)
}

type GetCertificateAuthorityCertificateRevocationListDetail struct {
	// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls []string `pulumi:"customFormattedUrls"`
	// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfigs []GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig `pulumi:"objectStorageConfigs"`
}

// GetCertificateAuthorityCertificateRevocationListDetailInput is an input type that accepts GetCertificateAuthorityCertificateRevocationListDetailArgs and GetCertificateAuthorityCertificateRevocationListDetailOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateRevocationListDetailInput` via:
//
//	GetCertificateAuthorityCertificateRevocationListDetailArgs{...}
type GetCertificateAuthorityCertificateRevocationListDetailInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateRevocationListDetailOutput() GetCertificateAuthorityCertificateRevocationListDetailOutput
	ToGetCertificateAuthorityCertificateRevocationListDetailOutputWithContext(context.Context) GetCertificateAuthorityCertificateRevocationListDetailOutput
}

type GetCertificateAuthorityCertificateRevocationListDetailArgs struct {
	// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls pulumi.StringArrayInput `pulumi:"customFormattedUrls"`
	// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfigs GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayInput `pulumi:"objectStorageConfigs"`
}

func (GetCertificateAuthorityCertificateRevocationListDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateRevocationListDetail)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateRevocationListDetailArgs) ToGetCertificateAuthorityCertificateRevocationListDetailOutput() GetCertificateAuthorityCertificateRevocationListDetailOutput {
	return i.ToGetCertificateAuthorityCertificateRevocationListDetailOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateRevocationListDetailArgs) ToGetCertificateAuthorityCertificateRevocationListDetailOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateRevocationListDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateRevocationListDetailOutput)
}

func (i GetCertificateAuthorityCertificateRevocationListDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateRevocationListDetail] {
	return pulumix.Output[GetCertificateAuthorityCertificateRevocationListDetail]{
		OutputState: i.ToGetCertificateAuthorityCertificateRevocationListDetailOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityCertificateRevocationListDetailArrayInput is an input type that accepts GetCertificateAuthorityCertificateRevocationListDetailArray and GetCertificateAuthorityCertificateRevocationListDetailArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateRevocationListDetailArrayInput` via:
//
//	GetCertificateAuthorityCertificateRevocationListDetailArray{ GetCertificateAuthorityCertificateRevocationListDetailArgs{...} }
type GetCertificateAuthorityCertificateRevocationListDetailArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateRevocationListDetailArrayOutput() GetCertificateAuthorityCertificateRevocationListDetailArrayOutput
	ToGetCertificateAuthorityCertificateRevocationListDetailArrayOutputWithContext(context.Context) GetCertificateAuthorityCertificateRevocationListDetailArrayOutput
}

type GetCertificateAuthorityCertificateRevocationListDetailArray []GetCertificateAuthorityCertificateRevocationListDetailInput

func (GetCertificateAuthorityCertificateRevocationListDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateRevocationListDetail)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateRevocationListDetailArray) ToGetCertificateAuthorityCertificateRevocationListDetailArrayOutput() GetCertificateAuthorityCertificateRevocationListDetailArrayOutput {
	return i.ToGetCertificateAuthorityCertificateRevocationListDetailArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateRevocationListDetailArray) ToGetCertificateAuthorityCertificateRevocationListDetailArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateRevocationListDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateRevocationListDetailArrayOutput)
}

func (i GetCertificateAuthorityCertificateRevocationListDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateRevocationListDetail] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateRevocationListDetail]{
		OutputState: i.ToGetCertificateAuthorityCertificateRevocationListDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityCertificateRevocationListDetailOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateRevocationListDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateRevocationListDetail)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateRevocationListDetailOutput) ToGetCertificateAuthorityCertificateRevocationListDetailOutput() GetCertificateAuthorityCertificateRevocationListDetailOutput {
	return o
}

func (o GetCertificateAuthorityCertificateRevocationListDetailOutput) ToGetCertificateAuthorityCertificateRevocationListDetailOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateRevocationListDetailOutput {
	return o
}

func (o GetCertificateAuthorityCertificateRevocationListDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateRevocationListDetail] {
	return pulumix.Output[GetCertificateAuthorityCertificateRevocationListDetail]{
		OutputState: o.OutputState,
	}
}

// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o GetCertificateAuthorityCertificateRevocationListDetailOutput) CustomFormattedUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateRevocationListDetail) []string { return v.CustomFormattedUrls }).(pulumi.StringArrayOutput)
}

// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
func (o GetCertificateAuthorityCertificateRevocationListDetailOutput) ObjectStorageConfigs() GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateRevocationListDetail) []GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig {
		return v.ObjectStorageConfigs
	}).(GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput)
}

type GetCertificateAuthorityCertificateRevocationListDetailArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateRevocationListDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateRevocationListDetail)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateRevocationListDetailArrayOutput) ToGetCertificateAuthorityCertificateRevocationListDetailArrayOutput() GetCertificateAuthorityCertificateRevocationListDetailArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateRevocationListDetailArrayOutput) ToGetCertificateAuthorityCertificateRevocationListDetailArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateRevocationListDetailArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateRevocationListDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateRevocationListDetail] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateRevocationListDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityCertificateRevocationListDetailArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityCertificateRevocationListDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityCertificateRevocationListDetail {
		return vs[0].([]GetCertificateAuthorityCertificateRevocationListDetail)[vs[1].(int)]
	}).(GetCertificateAuthorityCertificateRevocationListDetailOutput)
}

type GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig struct {
	// The name of the bucket where the CRL is stored.
	ObjectStorageBucketName string `pulumi:"objectStorageBucketName"`
	// The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace string `pulumi:"objectStorageNamespace"`
	// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat string `pulumi:"objectStorageObjectNameFormat"`
}

// GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigInput is an input type that accepts GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArgs and GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigInput` via:
//
//	GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArgs{...}
type GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput
	ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutputWithContext(context.Context) GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput
}

type GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArgs struct {
	// The name of the bucket where the CRL is stored.
	ObjectStorageBucketName pulumi.StringInput `pulumi:"objectStorageBucketName"`
	// The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace pulumi.StringInput `pulumi:"objectStorageNamespace"`
	// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat pulumi.StringInput `pulumi:"objectStorageObjectNameFormat"`
}

func (GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArgs) ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput {
	return i.ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArgs) ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput)
}

func (i GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: i.ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayInput is an input type that accepts GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArray and GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayInput` via:
//
//	GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArray{ GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArgs{...} }
type GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput
	ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(context.Context) GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput
}

type GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArray []GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigInput

func (GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (i GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArray) ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return i.ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArray) ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput)
}

func (i GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: i.ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput) ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput {
	return o
}

func (o GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput) ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput {
	return o
}

func (o GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

// The name of the bucket where the CRL is stored.
func (o GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageBucketName
	}).(pulumi.StringOutput)
}

// The tenancy of the bucket where the CRL is stored.
func (o GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageNamespace
	}).(pulumi.StringOutput)
}

// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageObjectNameFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageObjectNameFormat
	}).(pulumi.StringOutput)
}

type GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (o GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToGetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o
}

func (o GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[[]GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig {
		return vs[0].([]GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfig)[vs[1].(int)]
	}).(GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput)
}

type GetCertificateAuthorityCurrentVersion struct {
	// The OCID of the certificate authority (CA).
	CertificateAuthorityId string `pulumi:"certificateAuthorityId"`
	// The version number of the issuing CA.
	IssuerCaVersionNumber string `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses []GetCertificateAuthorityCurrentVersionRevocationStatus `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// A list of rotation states for this CA version.
	Stages []string `pulumi:"stages"`
	// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificateAuthorityCurrentVersionValidity `pulumi:"validities"`
	// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
	VersionName string `pulumi:"versionName"`
	// The version number of the CA.
	VersionNumber string `pulumi:"versionNumber"`
}

// GetCertificateAuthorityCurrentVersionInput is an input type that accepts GetCertificateAuthorityCurrentVersionArgs and GetCertificateAuthorityCurrentVersionOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCurrentVersionInput` via:
//
//	GetCertificateAuthorityCurrentVersionArgs{...}
type GetCertificateAuthorityCurrentVersionInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCurrentVersionOutput() GetCertificateAuthorityCurrentVersionOutput
	ToGetCertificateAuthorityCurrentVersionOutputWithContext(context.Context) GetCertificateAuthorityCurrentVersionOutput
}

type GetCertificateAuthorityCurrentVersionArgs struct {
	// The OCID of the certificate authority (CA).
	CertificateAuthorityId pulumi.StringInput `pulumi:"certificateAuthorityId"`
	// The version number of the issuing CA.
	IssuerCaVersionNumber pulumi.StringInput `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses GetCertificateAuthorityCurrentVersionRevocationStatusArrayInput `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// A list of rotation states for this CA version.
	Stages pulumi.StringArrayInput `pulumi:"stages"`
	// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities GetCertificateAuthorityCurrentVersionValidityArrayInput `pulumi:"validities"`
	// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
	VersionName pulumi.StringInput `pulumi:"versionName"`
	// The version number of the CA.
	VersionNumber pulumi.StringInput `pulumi:"versionNumber"`
}

func (GetCertificateAuthorityCurrentVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCurrentVersion)(nil)).Elem()
}

func (i GetCertificateAuthorityCurrentVersionArgs) ToGetCertificateAuthorityCurrentVersionOutput() GetCertificateAuthorityCurrentVersionOutput {
	return i.ToGetCertificateAuthorityCurrentVersionOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCurrentVersionArgs) ToGetCertificateAuthorityCurrentVersionOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCurrentVersionOutput)
}

func (i GetCertificateAuthorityCurrentVersionArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCurrentVersion] {
	return pulumix.Output[GetCertificateAuthorityCurrentVersion]{
		OutputState: i.ToGetCertificateAuthorityCurrentVersionOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityCurrentVersionArrayInput is an input type that accepts GetCertificateAuthorityCurrentVersionArray and GetCertificateAuthorityCurrentVersionArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCurrentVersionArrayInput` via:
//
//	GetCertificateAuthorityCurrentVersionArray{ GetCertificateAuthorityCurrentVersionArgs{...} }
type GetCertificateAuthorityCurrentVersionArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCurrentVersionArrayOutput() GetCertificateAuthorityCurrentVersionArrayOutput
	ToGetCertificateAuthorityCurrentVersionArrayOutputWithContext(context.Context) GetCertificateAuthorityCurrentVersionArrayOutput
}

type GetCertificateAuthorityCurrentVersionArray []GetCertificateAuthorityCurrentVersionInput

func (GetCertificateAuthorityCurrentVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCurrentVersion)(nil)).Elem()
}

func (i GetCertificateAuthorityCurrentVersionArray) ToGetCertificateAuthorityCurrentVersionArrayOutput() GetCertificateAuthorityCurrentVersionArrayOutput {
	return i.ToGetCertificateAuthorityCurrentVersionArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCurrentVersionArray) ToGetCertificateAuthorityCurrentVersionArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCurrentVersionArrayOutput)
}

func (i GetCertificateAuthorityCurrentVersionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCurrentVersion] {
	return pulumix.Output[[]GetCertificateAuthorityCurrentVersion]{
		OutputState: i.ToGetCertificateAuthorityCurrentVersionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityCurrentVersionOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCurrentVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCurrentVersion)(nil)).Elem()
}

func (o GetCertificateAuthorityCurrentVersionOutput) ToGetCertificateAuthorityCurrentVersionOutput() GetCertificateAuthorityCurrentVersionOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionOutput) ToGetCertificateAuthorityCurrentVersionOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCurrentVersion] {
	return pulumix.Output[GetCertificateAuthorityCurrentVersion]{
		OutputState: o.OutputState,
	}
}

// The OCID of the certificate authority (CA).
func (o GetCertificateAuthorityCurrentVersionOutput) CertificateAuthorityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersion) string { return v.CertificateAuthorityId }).(pulumi.StringOutput)
}

// The version number of the issuing CA.
func (o GetCertificateAuthorityCurrentVersionOutput) IssuerCaVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersion) string { return v.IssuerCaVersionNumber }).(pulumi.StringOutput)
}

// The current revocation status of the entity.
func (o GetCertificateAuthorityCurrentVersionOutput) RevocationStatuses() GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersion) []GetCertificateAuthorityCurrentVersionRevocationStatus {
		return v.RevocationStatuses
	}).(GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificateAuthorityCurrentVersionOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersion) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// A list of rotation states for this CA version.
func (o GetCertificateAuthorityCurrentVersionOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersion) []string { return v.Stages }).(pulumi.StringArrayOutput)
}

// A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityCurrentVersionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersion) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityCurrentVersionOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersion) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificateAuthorityCurrentVersionOutput) Validities() GetCertificateAuthorityCurrentVersionValidityArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersion) []GetCertificateAuthorityCurrentVersionValidity {
		return v.Validities
	}).(GetCertificateAuthorityCurrentVersionValidityArrayOutput)
}

// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
func (o GetCertificateAuthorityCurrentVersionOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersion) string { return v.VersionName }).(pulumi.StringOutput)
}

// The version number of the CA.
func (o GetCertificateAuthorityCurrentVersionOutput) VersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersion) string { return v.VersionNumber }).(pulumi.StringOutput)
}

type GetCertificateAuthorityCurrentVersionArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCurrentVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCurrentVersion)(nil)).Elem()
}

func (o GetCertificateAuthorityCurrentVersionArrayOutput) ToGetCertificateAuthorityCurrentVersionArrayOutput() GetCertificateAuthorityCurrentVersionArrayOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionArrayOutput) ToGetCertificateAuthorityCurrentVersionArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionArrayOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCurrentVersion] {
	return pulumix.Output[[]GetCertificateAuthorityCurrentVersion]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityCurrentVersionArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityCurrentVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityCurrentVersion {
		return vs[0].([]GetCertificateAuthorityCurrentVersion)[vs[1].(int)]
	}).(GetCertificateAuthorityCurrentVersionOutput)
}

type GetCertificateAuthorityCurrentVersionRevocationStatus struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason string `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation string `pulumi:"timeOfRevocation"`
}

// GetCertificateAuthorityCurrentVersionRevocationStatusInput is an input type that accepts GetCertificateAuthorityCurrentVersionRevocationStatusArgs and GetCertificateAuthorityCurrentVersionRevocationStatusOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCurrentVersionRevocationStatusInput` via:
//
//	GetCertificateAuthorityCurrentVersionRevocationStatusArgs{...}
type GetCertificateAuthorityCurrentVersionRevocationStatusInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCurrentVersionRevocationStatusOutput() GetCertificateAuthorityCurrentVersionRevocationStatusOutput
	ToGetCertificateAuthorityCurrentVersionRevocationStatusOutputWithContext(context.Context) GetCertificateAuthorityCurrentVersionRevocationStatusOutput
}

type GetCertificateAuthorityCurrentVersionRevocationStatusArgs struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason pulumi.StringInput `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation pulumi.StringInput `pulumi:"timeOfRevocation"`
}

func (GetCertificateAuthorityCurrentVersionRevocationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificateAuthorityCurrentVersionRevocationStatusArgs) ToGetCertificateAuthorityCurrentVersionRevocationStatusOutput() GetCertificateAuthorityCurrentVersionRevocationStatusOutput {
	return i.ToGetCertificateAuthorityCurrentVersionRevocationStatusOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCurrentVersionRevocationStatusArgs) ToGetCertificateAuthorityCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionRevocationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCurrentVersionRevocationStatusOutput)
}

func (i GetCertificateAuthorityCurrentVersionRevocationStatusArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCurrentVersionRevocationStatus] {
	return pulumix.Output[GetCertificateAuthorityCurrentVersionRevocationStatus]{
		OutputState: i.ToGetCertificateAuthorityCurrentVersionRevocationStatusOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityCurrentVersionRevocationStatusArrayInput is an input type that accepts GetCertificateAuthorityCurrentVersionRevocationStatusArray and GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCurrentVersionRevocationStatusArrayInput` via:
//
//	GetCertificateAuthorityCurrentVersionRevocationStatusArray{ GetCertificateAuthorityCurrentVersionRevocationStatusArgs{...} }
type GetCertificateAuthorityCurrentVersionRevocationStatusArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput() GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput
	ToGetCertificateAuthorityCurrentVersionRevocationStatusArrayOutputWithContext(context.Context) GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput
}

type GetCertificateAuthorityCurrentVersionRevocationStatusArray []GetCertificateAuthorityCurrentVersionRevocationStatusInput

func (GetCertificateAuthorityCurrentVersionRevocationStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificateAuthorityCurrentVersionRevocationStatusArray) ToGetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput() GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput {
	return i.ToGetCertificateAuthorityCurrentVersionRevocationStatusArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCurrentVersionRevocationStatusArray) ToGetCertificateAuthorityCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput)
}

func (i GetCertificateAuthorityCurrentVersionRevocationStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCurrentVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificateAuthorityCurrentVersionRevocationStatus]{
		OutputState: i.ToGetCertificateAuthorityCurrentVersionRevocationStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityCurrentVersionRevocationStatusOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCurrentVersionRevocationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificateAuthorityCurrentVersionRevocationStatusOutput) ToGetCertificateAuthorityCurrentVersionRevocationStatusOutput() GetCertificateAuthorityCurrentVersionRevocationStatusOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionRevocationStatusOutput) ToGetCertificateAuthorityCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionRevocationStatusOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionRevocationStatusOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCurrentVersionRevocationStatus] {
	return pulumix.Output[GetCertificateAuthorityCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

// The reason the certificate or certificate authority (CA) was revoked.
func (o GetCertificateAuthorityCurrentVersionRevocationStatusOutput) RevocationReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersionRevocationStatus) string { return v.RevocationReason }).(pulumi.StringOutput)
}

// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityCurrentVersionRevocationStatusOutput) TimeOfRevocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersionRevocationStatus) string { return v.TimeOfRevocation }).(pulumi.StringOutput)
}

type GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput) ToGetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput() GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput) ToGetCertificateAuthorityCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCurrentVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificateAuthorityCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityCurrentVersionRevocationStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityCurrentVersionRevocationStatus {
		return vs[0].([]GetCertificateAuthorityCurrentVersionRevocationStatus)[vs[1].(int)]
	}).(GetCertificateAuthorityCurrentVersionRevocationStatusOutput)
}

type GetCertificateAuthorityCurrentVersionValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificateAuthorityCurrentVersionValidityInput is an input type that accepts GetCertificateAuthorityCurrentVersionValidityArgs and GetCertificateAuthorityCurrentVersionValidityOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCurrentVersionValidityInput` via:
//
//	GetCertificateAuthorityCurrentVersionValidityArgs{...}
type GetCertificateAuthorityCurrentVersionValidityInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCurrentVersionValidityOutput() GetCertificateAuthorityCurrentVersionValidityOutput
	ToGetCertificateAuthorityCurrentVersionValidityOutputWithContext(context.Context) GetCertificateAuthorityCurrentVersionValidityOutput
}

type GetCertificateAuthorityCurrentVersionValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificateAuthorityCurrentVersionValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCurrentVersionValidity)(nil)).Elem()
}

func (i GetCertificateAuthorityCurrentVersionValidityArgs) ToGetCertificateAuthorityCurrentVersionValidityOutput() GetCertificateAuthorityCurrentVersionValidityOutput {
	return i.ToGetCertificateAuthorityCurrentVersionValidityOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCurrentVersionValidityArgs) ToGetCertificateAuthorityCurrentVersionValidityOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCurrentVersionValidityOutput)
}

func (i GetCertificateAuthorityCurrentVersionValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCurrentVersionValidity] {
	return pulumix.Output[GetCertificateAuthorityCurrentVersionValidity]{
		OutputState: i.ToGetCertificateAuthorityCurrentVersionValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityCurrentVersionValidityArrayInput is an input type that accepts GetCertificateAuthorityCurrentVersionValidityArray and GetCertificateAuthorityCurrentVersionValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityCurrentVersionValidityArrayInput` via:
//
//	GetCertificateAuthorityCurrentVersionValidityArray{ GetCertificateAuthorityCurrentVersionValidityArgs{...} }
type GetCertificateAuthorityCurrentVersionValidityArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityCurrentVersionValidityArrayOutput() GetCertificateAuthorityCurrentVersionValidityArrayOutput
	ToGetCertificateAuthorityCurrentVersionValidityArrayOutputWithContext(context.Context) GetCertificateAuthorityCurrentVersionValidityArrayOutput
}

type GetCertificateAuthorityCurrentVersionValidityArray []GetCertificateAuthorityCurrentVersionValidityInput

func (GetCertificateAuthorityCurrentVersionValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCurrentVersionValidity)(nil)).Elem()
}

func (i GetCertificateAuthorityCurrentVersionValidityArray) ToGetCertificateAuthorityCurrentVersionValidityArrayOutput() GetCertificateAuthorityCurrentVersionValidityArrayOutput {
	return i.ToGetCertificateAuthorityCurrentVersionValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityCurrentVersionValidityArray) ToGetCertificateAuthorityCurrentVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityCurrentVersionValidityArrayOutput)
}

func (i GetCertificateAuthorityCurrentVersionValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCurrentVersionValidity] {
	return pulumix.Output[[]GetCertificateAuthorityCurrentVersionValidity]{
		OutputState: i.ToGetCertificateAuthorityCurrentVersionValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityCurrentVersionValidityOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCurrentVersionValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityCurrentVersionValidity)(nil)).Elem()
}

func (o GetCertificateAuthorityCurrentVersionValidityOutput) ToGetCertificateAuthorityCurrentVersionValidityOutput() GetCertificateAuthorityCurrentVersionValidityOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionValidityOutput) ToGetCertificateAuthorityCurrentVersionValidityOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionValidityOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityCurrentVersionValidity] {
	return pulumix.Output[GetCertificateAuthorityCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityCurrentVersionValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersionValidity) string { return v.TimeOfValidityNotAfter }).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityCurrentVersionValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityCurrentVersionValidity) string { return v.TimeOfValidityNotBefore }).(pulumi.StringOutput)
}

type GetCertificateAuthorityCurrentVersionValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityCurrentVersionValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityCurrentVersionValidity)(nil)).Elem()
}

func (o GetCertificateAuthorityCurrentVersionValidityArrayOutput) ToGetCertificateAuthorityCurrentVersionValidityArrayOutput() GetCertificateAuthorityCurrentVersionValidityArrayOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionValidityArrayOutput) ToGetCertificateAuthorityCurrentVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityCurrentVersionValidityArrayOutput {
	return o
}

func (o GetCertificateAuthorityCurrentVersionValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityCurrentVersionValidity] {
	return pulumix.Output[[]GetCertificateAuthorityCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityCurrentVersionValidityArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityCurrentVersionValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityCurrentVersionValidity {
		return vs[0].([]GetCertificateAuthorityCurrentVersionValidity)[vs[1].(int)]
	}).(GetCertificateAuthorityCurrentVersionValidityOutput)
}

type GetCertificateAuthoritySubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName string `pulumi:"commonName"`
	// Country name (RDN C).
	Country string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName string `pulumi:"givenName"`
	// Personal initials.
	Initials string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title string `pulumi:"title"`
	// User ID (RDN UID).
	UserId string `pulumi:"userId"`
}

// GetCertificateAuthoritySubjectInput is an input type that accepts GetCertificateAuthoritySubjectArgs and GetCertificateAuthoritySubjectOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritySubjectInput` via:
//
//	GetCertificateAuthoritySubjectArgs{...}
type GetCertificateAuthoritySubjectInput interface {
	pulumi.Input

	ToGetCertificateAuthoritySubjectOutput() GetCertificateAuthoritySubjectOutput
	ToGetCertificateAuthoritySubjectOutputWithContext(context.Context) GetCertificateAuthoritySubjectOutput
}

type GetCertificateAuthoritySubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetCertificateAuthoritySubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritySubject)(nil)).Elem()
}

func (i GetCertificateAuthoritySubjectArgs) ToGetCertificateAuthoritySubjectOutput() GetCertificateAuthoritySubjectOutput {
	return i.ToGetCertificateAuthoritySubjectOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritySubjectArgs) ToGetCertificateAuthoritySubjectOutputWithContext(ctx context.Context) GetCertificateAuthoritySubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritySubjectOutput)
}

func (i GetCertificateAuthoritySubjectArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritySubject] {
	return pulumix.Output[GetCertificateAuthoritySubject]{
		OutputState: i.ToGetCertificateAuthoritySubjectOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthoritySubjectArrayInput is an input type that accepts GetCertificateAuthoritySubjectArray and GetCertificateAuthoritySubjectArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthoritySubjectArrayInput` via:
//
//	GetCertificateAuthoritySubjectArray{ GetCertificateAuthoritySubjectArgs{...} }
type GetCertificateAuthoritySubjectArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthoritySubjectArrayOutput() GetCertificateAuthoritySubjectArrayOutput
	ToGetCertificateAuthoritySubjectArrayOutputWithContext(context.Context) GetCertificateAuthoritySubjectArrayOutput
}

type GetCertificateAuthoritySubjectArray []GetCertificateAuthoritySubjectInput

func (GetCertificateAuthoritySubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritySubject)(nil)).Elem()
}

func (i GetCertificateAuthoritySubjectArray) ToGetCertificateAuthoritySubjectArrayOutput() GetCertificateAuthoritySubjectArrayOutput {
	return i.ToGetCertificateAuthoritySubjectArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthoritySubjectArray) ToGetCertificateAuthoritySubjectArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritySubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthoritySubjectArrayOutput)
}

func (i GetCertificateAuthoritySubjectArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritySubject] {
	return pulumix.Output[[]GetCertificateAuthoritySubject]{
		OutputState: i.ToGetCertificateAuthoritySubjectArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthoritySubjectOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritySubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthoritySubject)(nil)).Elem()
}

func (o GetCertificateAuthoritySubjectOutput) ToGetCertificateAuthoritySubjectOutput() GetCertificateAuthoritySubjectOutput {
	return o
}

func (o GetCertificateAuthoritySubjectOutput) ToGetCertificateAuthoritySubjectOutputWithContext(ctx context.Context) GetCertificateAuthoritySubjectOutput {
	return o
}

func (o GetCertificateAuthoritySubjectOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthoritySubject] {
	return pulumix.Output[GetCertificateAuthoritySubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o GetCertificateAuthoritySubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.CommonName }).(pulumi.StringOutput)
}

// Country name (RDN C).
func (o GetCertificateAuthoritySubjectOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.Country }).(pulumi.StringOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o GetCertificateAuthoritySubjectOutput) DistinguishedNameQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.DistinguishedNameQualifier }).(pulumi.StringOutput)
}

// Domain component (RDN DC).
func (o GetCertificateAuthoritySubjectOutput) DomainComponent() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.DomainComponent }).(pulumi.StringOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o GetCertificateAuthoritySubjectOutput) GenerationQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.GenerationQualifier }).(pulumi.StringOutput)
}

// Personal given name (RDN G or GN).
func (o GetCertificateAuthoritySubjectOutput) GivenName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.GivenName }).(pulumi.StringOutput)
}

// Personal initials.
func (o GetCertificateAuthoritySubjectOutput) Initials() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.Initials }).(pulumi.StringOutput)
}

// Locality (RDN L).
func (o GetCertificateAuthoritySubjectOutput) LocalityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.LocalityName }).(pulumi.StringOutput)
}

// Organization (RDN O).
func (o GetCertificateAuthoritySubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.Organization }).(pulumi.StringOutput)
}

// Organizational unit (RDN OU).
func (o GetCertificateAuthoritySubjectOutput) OrganizationalUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.OrganizationalUnit }).(pulumi.StringOutput)
}

// Subject pseudonym.
func (o GetCertificateAuthoritySubjectOutput) Pseudonym() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.Pseudonym }).(pulumi.StringOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificateAuthoritySubjectOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// State or province name (RDN ST or S).
func (o GetCertificateAuthoritySubjectOutput) StateOrProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.StateOrProvinceName }).(pulumi.StringOutput)
}

// Street address (RDN STREET).
func (o GetCertificateAuthoritySubjectOutput) Street() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.Street }).(pulumi.StringOutput)
}

// Personal surname (RDN SN).
func (o GetCertificateAuthoritySubjectOutput) Surname() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.Surname }).(pulumi.StringOutput)
}

// Title (RDN T or TITLE).
func (o GetCertificateAuthoritySubjectOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.Title }).(pulumi.StringOutput)
}

// User ID (RDN UID).
func (o GetCertificateAuthoritySubjectOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthoritySubject) string { return v.UserId }).(pulumi.StringOutput)
}

type GetCertificateAuthoritySubjectArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthoritySubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthoritySubject)(nil)).Elem()
}

func (o GetCertificateAuthoritySubjectArrayOutput) ToGetCertificateAuthoritySubjectArrayOutput() GetCertificateAuthoritySubjectArrayOutput {
	return o
}

func (o GetCertificateAuthoritySubjectArrayOutput) ToGetCertificateAuthoritySubjectArrayOutputWithContext(ctx context.Context) GetCertificateAuthoritySubjectArrayOutput {
	return o
}

func (o GetCertificateAuthoritySubjectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthoritySubject] {
	return pulumix.Output[[]GetCertificateAuthoritySubject]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthoritySubjectArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthoritySubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthoritySubject {
		return vs[0].([]GetCertificateAuthoritySubject)[vs[1].(int)]
	}).(GetCertificateAuthoritySubjectOutput)
}

type GetCertificateAuthorityVersionRevocationStatus struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason string `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation string `pulumi:"timeOfRevocation"`
}

// GetCertificateAuthorityVersionRevocationStatusInput is an input type that accepts GetCertificateAuthorityVersionRevocationStatusArgs and GetCertificateAuthorityVersionRevocationStatusOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionRevocationStatusInput` via:
//
//	GetCertificateAuthorityVersionRevocationStatusArgs{...}
type GetCertificateAuthorityVersionRevocationStatusInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionRevocationStatusOutput() GetCertificateAuthorityVersionRevocationStatusOutput
	ToGetCertificateAuthorityVersionRevocationStatusOutputWithContext(context.Context) GetCertificateAuthorityVersionRevocationStatusOutput
}

type GetCertificateAuthorityVersionRevocationStatusArgs struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason pulumi.StringInput `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation pulumi.StringInput `pulumi:"timeOfRevocation"`
}

func (GetCertificateAuthorityVersionRevocationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionRevocationStatusArgs) ToGetCertificateAuthorityVersionRevocationStatusOutput() GetCertificateAuthorityVersionRevocationStatusOutput {
	return i.ToGetCertificateAuthorityVersionRevocationStatusOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionRevocationStatusArgs) ToGetCertificateAuthorityVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionRevocationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionRevocationStatusOutput)
}

func (i GetCertificateAuthorityVersionRevocationStatusArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionRevocationStatus] {
	return pulumix.Output[GetCertificateAuthorityVersionRevocationStatus]{
		OutputState: i.ToGetCertificateAuthorityVersionRevocationStatusOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityVersionRevocationStatusArrayInput is an input type that accepts GetCertificateAuthorityVersionRevocationStatusArray and GetCertificateAuthorityVersionRevocationStatusArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionRevocationStatusArrayInput` via:
//
//	GetCertificateAuthorityVersionRevocationStatusArray{ GetCertificateAuthorityVersionRevocationStatusArgs{...} }
type GetCertificateAuthorityVersionRevocationStatusArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionRevocationStatusArrayOutput() GetCertificateAuthorityVersionRevocationStatusArrayOutput
	ToGetCertificateAuthorityVersionRevocationStatusArrayOutputWithContext(context.Context) GetCertificateAuthorityVersionRevocationStatusArrayOutput
}

type GetCertificateAuthorityVersionRevocationStatusArray []GetCertificateAuthorityVersionRevocationStatusInput

func (GetCertificateAuthorityVersionRevocationStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionRevocationStatusArray) ToGetCertificateAuthorityVersionRevocationStatusArrayOutput() GetCertificateAuthorityVersionRevocationStatusArrayOutput {
	return i.ToGetCertificateAuthorityVersionRevocationStatusArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionRevocationStatusArray) ToGetCertificateAuthorityVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionRevocationStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionRevocationStatusArrayOutput)
}

func (i GetCertificateAuthorityVersionRevocationStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificateAuthorityVersionRevocationStatus]{
		OutputState: i.ToGetCertificateAuthorityVersionRevocationStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityVersionRevocationStatusOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionRevocationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionRevocationStatusOutput) ToGetCertificateAuthorityVersionRevocationStatusOutput() GetCertificateAuthorityVersionRevocationStatusOutput {
	return o
}

func (o GetCertificateAuthorityVersionRevocationStatusOutput) ToGetCertificateAuthorityVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionRevocationStatusOutput {
	return o
}

func (o GetCertificateAuthorityVersionRevocationStatusOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionRevocationStatus] {
	return pulumix.Output[GetCertificateAuthorityVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

// The reason the certificate or certificate authority (CA) was revoked.
func (o GetCertificateAuthorityVersionRevocationStatusOutput) RevocationReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionRevocationStatus) string { return v.RevocationReason }).(pulumi.StringOutput)
}

// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityVersionRevocationStatusOutput) TimeOfRevocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionRevocationStatus) string { return v.TimeOfRevocation }).(pulumi.StringOutput)
}

type GetCertificateAuthorityVersionRevocationStatusArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionRevocationStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionRevocationStatusArrayOutput) ToGetCertificateAuthorityVersionRevocationStatusArrayOutput() GetCertificateAuthorityVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionRevocationStatusArrayOutput) ToGetCertificateAuthorityVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionRevocationStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificateAuthorityVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityVersionRevocationStatusArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityVersionRevocationStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityVersionRevocationStatus {
		return vs[0].([]GetCertificateAuthorityVersionRevocationStatus)[vs[1].(int)]
	}).(GetCertificateAuthorityVersionRevocationStatusOutput)
}

type GetCertificateAuthorityVersionSubjectAlternativeName struct {
	Type  string `pulumi:"type"`
	Value string `pulumi:"value"`
}

// GetCertificateAuthorityVersionSubjectAlternativeNameInput is an input type that accepts GetCertificateAuthorityVersionSubjectAlternativeNameArgs and GetCertificateAuthorityVersionSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionSubjectAlternativeNameInput` via:
//
//	GetCertificateAuthorityVersionSubjectAlternativeNameArgs{...}
type GetCertificateAuthorityVersionSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionSubjectAlternativeNameOutput() GetCertificateAuthorityVersionSubjectAlternativeNameOutput
	ToGetCertificateAuthorityVersionSubjectAlternativeNameOutputWithContext(context.Context) GetCertificateAuthorityVersionSubjectAlternativeNameOutput
}

type GetCertificateAuthorityVersionSubjectAlternativeNameArgs struct {
	Type  pulumi.StringInput `pulumi:"type"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCertificateAuthorityVersionSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionSubjectAlternativeNameArgs) ToGetCertificateAuthorityVersionSubjectAlternativeNameOutput() GetCertificateAuthorityVersionSubjectAlternativeNameOutput {
	return i.ToGetCertificateAuthorityVersionSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionSubjectAlternativeNameArgs) ToGetCertificateAuthorityVersionSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionSubjectAlternativeNameOutput)
}

func (i GetCertificateAuthorityVersionSubjectAlternativeNameArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionSubjectAlternativeName] {
	return pulumix.Output[GetCertificateAuthorityVersionSubjectAlternativeName]{
		OutputState: i.ToGetCertificateAuthorityVersionSubjectAlternativeNameOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityVersionSubjectAlternativeNameArrayInput is an input type that accepts GetCertificateAuthorityVersionSubjectAlternativeNameArray and GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionSubjectAlternativeNameArrayInput` via:
//
//	GetCertificateAuthorityVersionSubjectAlternativeNameArray{ GetCertificateAuthorityVersionSubjectAlternativeNameArgs{...} }
type GetCertificateAuthorityVersionSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput() GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput
	ToGetCertificateAuthorityVersionSubjectAlternativeNameArrayOutputWithContext(context.Context) GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput
}

type GetCertificateAuthorityVersionSubjectAlternativeNameArray []GetCertificateAuthorityVersionSubjectAlternativeNameInput

func (GetCertificateAuthorityVersionSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionSubjectAlternativeNameArray) ToGetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput() GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput {
	return i.ToGetCertificateAuthorityVersionSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionSubjectAlternativeNameArray) ToGetCertificateAuthorityVersionSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput)
}

func (i GetCertificateAuthorityVersionSubjectAlternativeNameArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificateAuthorityVersionSubjectAlternativeName]{
		OutputState: i.ToGetCertificateAuthorityVersionSubjectAlternativeNameArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityVersionSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionSubjectAlternativeNameOutput) ToGetCertificateAuthorityVersionSubjectAlternativeNameOutput() GetCertificateAuthorityVersionSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificateAuthorityVersionSubjectAlternativeNameOutput) ToGetCertificateAuthorityVersionSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificateAuthorityVersionSubjectAlternativeNameOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionSubjectAlternativeName] {
	return pulumix.Output[GetCertificateAuthorityVersionSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityVersionSubjectAlternativeNameOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionSubjectAlternativeName) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetCertificateAuthorityVersionSubjectAlternativeNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionSubjectAlternativeName) string { return v.Value }).(pulumi.StringOutput)
}

type GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput) ToGetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput() GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput) ToGetCertificateAuthorityVersionSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificateAuthorityVersionSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityVersionSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityVersionSubjectAlternativeName {
		return vs[0].([]GetCertificateAuthorityVersionSubjectAlternativeName)[vs[1].(int)]
	}).(GetCertificateAuthorityVersionSubjectAlternativeNameOutput)
}

type GetCertificateAuthorityVersionValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificateAuthorityVersionValidityInput is an input type that accepts GetCertificateAuthorityVersionValidityArgs and GetCertificateAuthorityVersionValidityOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionValidityInput` via:
//
//	GetCertificateAuthorityVersionValidityArgs{...}
type GetCertificateAuthorityVersionValidityInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionValidityOutput() GetCertificateAuthorityVersionValidityOutput
	ToGetCertificateAuthorityVersionValidityOutputWithContext(context.Context) GetCertificateAuthorityVersionValidityOutput
}

type GetCertificateAuthorityVersionValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificateAuthorityVersionValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionValidity)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionValidityArgs) ToGetCertificateAuthorityVersionValidityOutput() GetCertificateAuthorityVersionValidityOutput {
	return i.ToGetCertificateAuthorityVersionValidityOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionValidityArgs) ToGetCertificateAuthorityVersionValidityOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionValidityOutput)
}

func (i GetCertificateAuthorityVersionValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionValidity] {
	return pulumix.Output[GetCertificateAuthorityVersionValidity]{
		OutputState: i.ToGetCertificateAuthorityVersionValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityVersionValidityArrayInput is an input type that accepts GetCertificateAuthorityVersionValidityArray and GetCertificateAuthorityVersionValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionValidityArrayInput` via:
//
//	GetCertificateAuthorityVersionValidityArray{ GetCertificateAuthorityVersionValidityArgs{...} }
type GetCertificateAuthorityVersionValidityArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionValidityArrayOutput() GetCertificateAuthorityVersionValidityArrayOutput
	ToGetCertificateAuthorityVersionValidityArrayOutputWithContext(context.Context) GetCertificateAuthorityVersionValidityArrayOutput
}

type GetCertificateAuthorityVersionValidityArray []GetCertificateAuthorityVersionValidityInput

func (GetCertificateAuthorityVersionValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionValidity)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionValidityArray) ToGetCertificateAuthorityVersionValidityArrayOutput() GetCertificateAuthorityVersionValidityArrayOutput {
	return i.ToGetCertificateAuthorityVersionValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionValidityArray) ToGetCertificateAuthorityVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionValidityArrayOutput)
}

func (i GetCertificateAuthorityVersionValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionValidity] {
	return pulumix.Output[[]GetCertificateAuthorityVersionValidity]{
		OutputState: i.ToGetCertificateAuthorityVersionValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityVersionValidityOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionValidity)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionValidityOutput) ToGetCertificateAuthorityVersionValidityOutput() GetCertificateAuthorityVersionValidityOutput {
	return o
}

func (o GetCertificateAuthorityVersionValidityOutput) ToGetCertificateAuthorityVersionValidityOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionValidityOutput {
	return o
}

func (o GetCertificateAuthorityVersionValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionValidity] {
	return pulumix.Output[GetCertificateAuthorityVersionValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityVersionValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionValidity) string { return v.TimeOfValidityNotAfter }).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityVersionValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionValidity) string { return v.TimeOfValidityNotBefore }).(pulumi.StringOutput)
}

type GetCertificateAuthorityVersionValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionValidity)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionValidityArrayOutput) ToGetCertificateAuthorityVersionValidityArrayOutput() GetCertificateAuthorityVersionValidityArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionValidityArrayOutput) ToGetCertificateAuthorityVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionValidityArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionValidity] {
	return pulumix.Output[[]GetCertificateAuthorityVersionValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityVersionValidityArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityVersionValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityVersionValidity {
		return vs[0].([]GetCertificateAuthorityVersionValidity)[vs[1].(int)]
	}).(GetCertificateAuthorityVersionValidityOutput)
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection struct {
	// A list of certificate authority version summary objects.
	Items []GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem `pulumi:"items"`
}

// GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionInput is an input type that accepts GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArgs and GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionInput` via:
//
//	GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArgs{...}
type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput
	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutputWithContext(context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArgs struct {
	// A list of certificate authority version summary objects.
	Items GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayInput `pulumi:"items"`
}

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArgs) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput {
	return i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArgs) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput)
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection] {
	return pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection]{
		OutputState: i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayInput is an input type that accepts GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArray and GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayInput` via:
//
//	GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArray{ GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArgs{...} }
type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput
	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutputWithContext(context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArray []GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionInput

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArray) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput {
	return i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArray) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput)
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection] {
	return pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection]{
		OutputState: i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection] {
	return pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection]{
		OutputState: o.OutputState,
	}
}

// A list of certificate authority version summary objects.
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput) Items() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection) []GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem {
		return v.Items
	}).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput)
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection] {
	return pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection {
		return vs[0].([]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection)[vs[1].(int)]
	}).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput)
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem struct {
	// The OCID of the certificate authority (CA).
	CertificateAuthorityId string `pulumi:"certificateAuthorityId"`
	// The version number of the issuing CA.
	IssuerCaVersionNumber string `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses []GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus `pulumi:"revocationStatuses"`
	// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
	SerialNumber string `pulumi:"serialNumber"`
	// A list of rotation states for this CA version.
	Stages []string `pulumi:"stages"`
	// A optional property indicating when the CA version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity `pulumi:"validities"`
	// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
	VersionName string `pulumi:"versionName"`
	// A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
	VersionNumber string `pulumi:"versionNumber"`
}

// GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemInput is an input type that accepts GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArgs and GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemInput` via:
//
//	GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArgs{...}
type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput
	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutputWithContext(context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArgs struct {
	// The OCID of the certificate authority (CA).
	CertificateAuthorityId pulumi.StringInput `pulumi:"certificateAuthorityId"`
	// The version number of the issuing CA.
	IssuerCaVersionNumber pulumi.StringInput `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayInput `pulumi:"revocationStatuses"`
	// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// A list of rotation states for this CA version.
	Stages pulumi.StringArrayInput `pulumi:"stages"`
	// A optional property indicating when the CA version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayInput `pulumi:"validities"`
	// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
	VersionName pulumi.StringInput `pulumi:"versionName"`
	// A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
	VersionNumber pulumi.StringInput `pulumi:"versionNumber"`
}

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArgs) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput {
	return i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArgs) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput)
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem] {
	return pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem]{
		OutputState: i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayInput is an input type that accepts GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArray and GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayInput` via:
//
//	GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArray{ GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArgs{...} }
type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput
	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutputWithContext(context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArray []GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemInput

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArray) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput {
	return i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArray) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput)
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem] {
	return pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem]{
		OutputState: i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem] {
	return pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem]{
		OutputState: o.OutputState,
	}
}

// The OCID of the certificate authority (CA).
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) CertificateAuthorityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem) string {
		return v.CertificateAuthorityId
	}).(pulumi.StringOutput)
}

// The version number of the issuing CA.
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) IssuerCaVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem) string {
		return v.IssuerCaVersionNumber
	}).(pulumi.StringOutput)
}

// The current revocation status of the entity.
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) RevocationStatuses() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem) []GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus {
		return v.RevocationStatuses
	}).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput)
}

// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem) string {
		return v.SerialNumber
	}).(pulumi.StringOutput)
}

// A list of rotation states for this CA version.
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem) []string {
		return v.Stages
	}).(pulumi.StringArrayOutput)
}

// A optional property indicating when the CA version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem) string {
		return v.TimeOfDeletion
	}).(pulumi.StringOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) Validities() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem) []GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity {
		return v.Validities
	}).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput)
}

// The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem) string {
		return v.VersionName
	}).(pulumi.StringOutput)
}

// A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput) VersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem) string {
		return v.VersionNumber
	}).(pulumi.StringOutput)
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem] {
	return pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem {
		return vs[0].([]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItem)[vs[1].(int)]
	}).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput)
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason string `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation string `pulumi:"timeOfRevocation"`
}

// GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusInput is an input type that accepts GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArgs and GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusInput` via:
//
//	GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArgs{...}
type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput
	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutputWithContext(context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArgs struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason pulumi.StringInput `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation pulumi.StringInput `pulumi:"timeOfRevocation"`
}

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArgs) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput {
	return i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArgs) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput)
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus] {
	return pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus]{
		OutputState: i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayInput is an input type that accepts GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArray and GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayInput` via:
//
//	GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArray{ GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArgs{...} }
type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput
	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutputWithContext(context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArray []GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusInput

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArray) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput {
	return i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArray) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput)
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus] {
	return pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus]{
		OutputState: i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus] {
	return pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus]{
		OutputState: o.OutputState,
	}
}

// The reason the certificate or certificate authority (CA) was revoked.
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput) RevocationReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus) string {
		return v.RevocationReason
	}).(pulumi.StringOutput)
}

// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput) TimeOfRevocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus) string {
		return v.TimeOfRevocation
	}).(pulumi.StringOutput)
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus] {
	return pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus {
		return vs[0].([]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatus)[vs[1].(int)]
	}).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput)
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityInput is an input type that accepts GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArgs and GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityInput` via:
//
//	GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArgs{...}
type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput
	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutputWithContext(context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArgs) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput {
	return i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArgs) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput)
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity] {
	return pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity]{
		OutputState: i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayInput is an input type that accepts GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArray and GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayInput` via:
//
//	GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArray{ GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArgs{...} }
type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput
	ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutputWithContext(context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArray []GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityInput

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArray) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput {
	return i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArray) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput)
}

func (i GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity] {
	return pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity]{
		OutputState: i.ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity] {
	return pulumix.Output[GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity) string {
		return v.TimeOfValidityNotAfter
	}).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity) string {
		return v.TimeOfValidityNotBefore
	}).(pulumi.StringOutput)
}

type GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput() GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput) ToGetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity] {
	return pulumix.Output[[]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity {
		return vs[0].([]GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidity)[vs[1].(int)]
	}).(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput)
}

type GetCertificateAuthorityVersionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetCertificateAuthorityVersionsFilterInput is an input type that accepts GetCertificateAuthorityVersionsFilterArgs and GetCertificateAuthorityVersionsFilterOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionsFilterInput` via:
//
//	GetCertificateAuthorityVersionsFilterArgs{...}
type GetCertificateAuthorityVersionsFilterInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionsFilterOutput() GetCertificateAuthorityVersionsFilterOutput
	ToGetCertificateAuthorityVersionsFilterOutputWithContext(context.Context) GetCertificateAuthorityVersionsFilterOutput
}

type GetCertificateAuthorityVersionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCertificateAuthorityVersionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionsFilter)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionsFilterArgs) ToGetCertificateAuthorityVersionsFilterOutput() GetCertificateAuthorityVersionsFilterOutput {
	return i.ToGetCertificateAuthorityVersionsFilterOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionsFilterArgs) ToGetCertificateAuthorityVersionsFilterOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionsFilterOutput)
}

func (i GetCertificateAuthorityVersionsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionsFilter] {
	return pulumix.Output[GetCertificateAuthorityVersionsFilter]{
		OutputState: i.ToGetCertificateAuthorityVersionsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateAuthorityVersionsFilterArrayInput is an input type that accepts GetCertificateAuthorityVersionsFilterArray and GetCertificateAuthorityVersionsFilterArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityVersionsFilterArrayInput` via:
//
//	GetCertificateAuthorityVersionsFilterArray{ GetCertificateAuthorityVersionsFilterArgs{...} }
type GetCertificateAuthorityVersionsFilterArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityVersionsFilterArrayOutput() GetCertificateAuthorityVersionsFilterArrayOutput
	ToGetCertificateAuthorityVersionsFilterArrayOutputWithContext(context.Context) GetCertificateAuthorityVersionsFilterArrayOutput
}

type GetCertificateAuthorityVersionsFilterArray []GetCertificateAuthorityVersionsFilterInput

func (GetCertificateAuthorityVersionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionsFilter)(nil)).Elem()
}

func (i GetCertificateAuthorityVersionsFilterArray) ToGetCertificateAuthorityVersionsFilterArrayOutput() GetCertificateAuthorityVersionsFilterArrayOutput {
	return i.ToGetCertificateAuthorityVersionsFilterArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityVersionsFilterArray) ToGetCertificateAuthorityVersionsFilterArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityVersionsFilterArrayOutput)
}

func (i GetCertificateAuthorityVersionsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionsFilter] {
	return pulumix.Output[[]GetCertificateAuthorityVersionsFilter]{
		OutputState: i.ToGetCertificateAuthorityVersionsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateAuthorityVersionsFilterOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityVersionsFilter)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionsFilterOutput) ToGetCertificateAuthorityVersionsFilterOutput() GetCertificateAuthorityVersionsFilterOutput {
	return o
}

func (o GetCertificateAuthorityVersionsFilterOutput) ToGetCertificateAuthorityVersionsFilterOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsFilterOutput {
	return o
}

func (o GetCertificateAuthorityVersionsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateAuthorityVersionsFilter] {
	return pulumix.Output[GetCertificateAuthorityVersionsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityVersionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCertificateAuthorityVersionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetCertificateAuthorityVersionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityVersionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCertificateAuthorityVersionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityVersionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityVersionsFilter)(nil)).Elem()
}

func (o GetCertificateAuthorityVersionsFilterArrayOutput) ToGetCertificateAuthorityVersionsFilterArrayOutput() GetCertificateAuthorityVersionsFilterArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionsFilterArrayOutput) ToGetCertificateAuthorityVersionsFilterArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityVersionsFilterArrayOutput {
	return o
}

func (o GetCertificateAuthorityVersionsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateAuthorityVersionsFilter] {
	return pulumix.Output[[]GetCertificateAuthorityVersionsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateAuthorityVersionsFilterArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityVersionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityVersionsFilter {
		return vs[0].([]GetCertificateAuthorityVersionsFilter)[vs[1].(int)]
	}).(GetCertificateAuthorityVersionsFilterOutput)
}

type GetCertificateCertificateConfig struct {
	// The name of the profile used to create the certificate, which depends on the type of certificate you need.
	CertificateProfileType string `pulumi:"certificateProfileType"`
	// The origin of the certificate.
	ConfigType string `pulumi:"configType"`
	CsrPem     string `pulumi:"csrPem"`
	// The OCID of the certificate authority (CA) that issued the certificate.
	IssuerCertificateAuthorityId string `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to create key pairs.
	KeyAlgorithm string `pulumi:"keyAlgorithm"`
	// The algorithm used to sign the public key certificate.
	SignatureAlgorithm string `pulumi:"signatureAlgorithm"`
	// A list of subject alternative names.
	SubjectAlternativeNames []GetCertificateCertificateConfigSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects []GetCertificateCertificateConfigSubject `pulumi:"subjects"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificateCertificateConfigValidity `pulumi:"validities"`
	// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
	VersionName string `pulumi:"versionName"`
}

// GetCertificateCertificateConfigInput is an input type that accepts GetCertificateCertificateConfigArgs and GetCertificateCertificateConfigOutput values.
// You can construct a concrete instance of `GetCertificateCertificateConfigInput` via:
//
//	GetCertificateCertificateConfigArgs{...}
type GetCertificateCertificateConfigInput interface {
	pulumi.Input

	ToGetCertificateCertificateConfigOutput() GetCertificateCertificateConfigOutput
	ToGetCertificateCertificateConfigOutputWithContext(context.Context) GetCertificateCertificateConfigOutput
}

type GetCertificateCertificateConfigArgs struct {
	// The name of the profile used to create the certificate, which depends on the type of certificate you need.
	CertificateProfileType pulumi.StringInput `pulumi:"certificateProfileType"`
	// The origin of the certificate.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	CsrPem     pulumi.StringInput `pulumi:"csrPem"`
	// The OCID of the certificate authority (CA) that issued the certificate.
	IssuerCertificateAuthorityId pulumi.StringInput `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to create key pairs.
	KeyAlgorithm pulumi.StringInput `pulumi:"keyAlgorithm"`
	// The algorithm used to sign the public key certificate.
	SignatureAlgorithm pulumi.StringInput `pulumi:"signatureAlgorithm"`
	// A list of subject alternative names.
	SubjectAlternativeNames GetCertificateCertificateConfigSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects GetCertificateCertificateConfigSubjectArrayInput `pulumi:"subjects"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities GetCertificateCertificateConfigValidityArrayInput `pulumi:"validities"`
	// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
	VersionName pulumi.StringInput `pulumi:"versionName"`
}

func (GetCertificateCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateConfig)(nil)).Elem()
}

func (i GetCertificateCertificateConfigArgs) ToGetCertificateCertificateConfigOutput() GetCertificateCertificateConfigOutput {
	return i.ToGetCertificateCertificateConfigOutputWithContext(context.Background())
}

func (i GetCertificateCertificateConfigArgs) ToGetCertificateCertificateConfigOutputWithContext(ctx context.Context) GetCertificateCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateConfigOutput)
}

func (i GetCertificateCertificateConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateConfig] {
	return pulumix.Output[GetCertificateCertificateConfig]{
		OutputState: i.ToGetCertificateCertificateConfigOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateCertificateConfigArrayInput is an input type that accepts GetCertificateCertificateConfigArray and GetCertificateCertificateConfigArrayOutput values.
// You can construct a concrete instance of `GetCertificateCertificateConfigArrayInput` via:
//
//	GetCertificateCertificateConfigArray{ GetCertificateCertificateConfigArgs{...} }
type GetCertificateCertificateConfigArrayInput interface {
	pulumi.Input

	ToGetCertificateCertificateConfigArrayOutput() GetCertificateCertificateConfigArrayOutput
	ToGetCertificateCertificateConfigArrayOutputWithContext(context.Context) GetCertificateCertificateConfigArrayOutput
}

type GetCertificateCertificateConfigArray []GetCertificateCertificateConfigInput

func (GetCertificateCertificateConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateConfig)(nil)).Elem()
}

func (i GetCertificateCertificateConfigArray) ToGetCertificateCertificateConfigArrayOutput() GetCertificateCertificateConfigArrayOutput {
	return i.ToGetCertificateCertificateConfigArrayOutputWithContext(context.Background())
}

func (i GetCertificateCertificateConfigArray) ToGetCertificateCertificateConfigArrayOutputWithContext(ctx context.Context) GetCertificateCertificateConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateConfigArrayOutput)
}

func (i GetCertificateCertificateConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateConfig] {
	return pulumix.Output[[]GetCertificateCertificateConfig]{
		OutputState: i.ToGetCertificateCertificateConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateCertificateConfigOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateConfig)(nil)).Elem()
}

func (o GetCertificateCertificateConfigOutput) ToGetCertificateCertificateConfigOutput() GetCertificateCertificateConfigOutput {
	return o
}

func (o GetCertificateCertificateConfigOutput) ToGetCertificateCertificateConfigOutputWithContext(ctx context.Context) GetCertificateCertificateConfigOutput {
	return o
}

func (o GetCertificateCertificateConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateConfig] {
	return pulumix.Output[GetCertificateCertificateConfig]{
		OutputState: o.OutputState,
	}
}

// The name of the profile used to create the certificate, which depends on the type of certificate you need.
func (o GetCertificateCertificateConfigOutput) CertificateProfileType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfig) string { return v.CertificateProfileType }).(pulumi.StringOutput)
}

// The origin of the certificate.
func (o GetCertificateCertificateConfigOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfig) string { return v.ConfigType }).(pulumi.StringOutput)
}

func (o GetCertificateCertificateConfigOutput) CsrPem() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfig) string { return v.CsrPem }).(pulumi.StringOutput)
}

// The OCID of the certificate authority (CA) that issued the certificate.
func (o GetCertificateCertificateConfigOutput) IssuerCertificateAuthorityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfig) string { return v.IssuerCertificateAuthorityId }).(pulumi.StringOutput)
}

// The algorithm used to create key pairs.
func (o GetCertificateCertificateConfigOutput) KeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfig) string { return v.KeyAlgorithm }).(pulumi.StringOutput)
}

// The algorithm used to sign the public key certificate.
func (o GetCertificateCertificateConfigOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfig) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

// A list of subject alternative names.
func (o GetCertificateCertificateConfigOutput) SubjectAlternativeNames() GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfig) []GetCertificateCertificateConfigSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput)
}

// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
func (o GetCertificateCertificateConfigOutput) Subjects() GetCertificateCertificateConfigSubjectArrayOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfig) []GetCertificateCertificateConfigSubject { return v.Subjects }).(GetCertificateCertificateConfigSubjectArrayOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificateCertificateConfigOutput) Validities() GetCertificateCertificateConfigValidityArrayOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfig) []GetCertificateCertificateConfigValidity { return v.Validities }).(GetCertificateCertificateConfigValidityArrayOutput)
}

// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
func (o GetCertificateCertificateConfigOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfig) string { return v.VersionName }).(pulumi.StringOutput)
}

type GetCertificateCertificateConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateConfig)(nil)).Elem()
}

func (o GetCertificateCertificateConfigArrayOutput) ToGetCertificateCertificateConfigArrayOutput() GetCertificateCertificateConfigArrayOutput {
	return o
}

func (o GetCertificateCertificateConfigArrayOutput) ToGetCertificateCertificateConfigArrayOutputWithContext(ctx context.Context) GetCertificateCertificateConfigArrayOutput {
	return o
}

func (o GetCertificateCertificateConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateConfig] {
	return pulumix.Output[[]GetCertificateCertificateConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateCertificateConfigArrayOutput) Index(i pulumi.IntInput) GetCertificateCertificateConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateCertificateConfig {
		return vs[0].([]GetCertificateCertificateConfig)[vs[1].(int)]
	}).(GetCertificateCertificateConfigOutput)
}

type GetCertificateCertificateConfigSubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName string `pulumi:"commonName"`
	// Country name (RDN C).
	Country string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName string `pulumi:"givenName"`
	// Personal initials.
	Initials string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title string `pulumi:"title"`
	// User ID (RDN UID).
	UserId string `pulumi:"userId"`
}

// GetCertificateCertificateConfigSubjectInput is an input type that accepts GetCertificateCertificateConfigSubjectArgs and GetCertificateCertificateConfigSubjectOutput values.
// You can construct a concrete instance of `GetCertificateCertificateConfigSubjectInput` via:
//
//	GetCertificateCertificateConfigSubjectArgs{...}
type GetCertificateCertificateConfigSubjectInput interface {
	pulumi.Input

	ToGetCertificateCertificateConfigSubjectOutput() GetCertificateCertificateConfigSubjectOutput
	ToGetCertificateCertificateConfigSubjectOutputWithContext(context.Context) GetCertificateCertificateConfigSubjectOutput
}

type GetCertificateCertificateConfigSubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetCertificateCertificateConfigSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateConfigSubject)(nil)).Elem()
}

func (i GetCertificateCertificateConfigSubjectArgs) ToGetCertificateCertificateConfigSubjectOutput() GetCertificateCertificateConfigSubjectOutput {
	return i.ToGetCertificateCertificateConfigSubjectOutputWithContext(context.Background())
}

func (i GetCertificateCertificateConfigSubjectArgs) ToGetCertificateCertificateConfigSubjectOutputWithContext(ctx context.Context) GetCertificateCertificateConfigSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateConfigSubjectOutput)
}

func (i GetCertificateCertificateConfigSubjectArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateConfigSubject] {
	return pulumix.Output[GetCertificateCertificateConfigSubject]{
		OutputState: i.ToGetCertificateCertificateConfigSubjectOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateCertificateConfigSubjectArrayInput is an input type that accepts GetCertificateCertificateConfigSubjectArray and GetCertificateCertificateConfigSubjectArrayOutput values.
// You can construct a concrete instance of `GetCertificateCertificateConfigSubjectArrayInput` via:
//
//	GetCertificateCertificateConfigSubjectArray{ GetCertificateCertificateConfigSubjectArgs{...} }
type GetCertificateCertificateConfigSubjectArrayInput interface {
	pulumi.Input

	ToGetCertificateCertificateConfigSubjectArrayOutput() GetCertificateCertificateConfigSubjectArrayOutput
	ToGetCertificateCertificateConfigSubjectArrayOutputWithContext(context.Context) GetCertificateCertificateConfigSubjectArrayOutput
}

type GetCertificateCertificateConfigSubjectArray []GetCertificateCertificateConfigSubjectInput

func (GetCertificateCertificateConfigSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateConfigSubject)(nil)).Elem()
}

func (i GetCertificateCertificateConfigSubjectArray) ToGetCertificateCertificateConfigSubjectArrayOutput() GetCertificateCertificateConfigSubjectArrayOutput {
	return i.ToGetCertificateCertificateConfigSubjectArrayOutputWithContext(context.Background())
}

func (i GetCertificateCertificateConfigSubjectArray) ToGetCertificateCertificateConfigSubjectArrayOutputWithContext(ctx context.Context) GetCertificateCertificateConfigSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateConfigSubjectArrayOutput)
}

func (i GetCertificateCertificateConfigSubjectArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateConfigSubject] {
	return pulumix.Output[[]GetCertificateCertificateConfigSubject]{
		OutputState: i.ToGetCertificateCertificateConfigSubjectArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateCertificateConfigSubjectOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateConfigSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateConfigSubject)(nil)).Elem()
}

func (o GetCertificateCertificateConfigSubjectOutput) ToGetCertificateCertificateConfigSubjectOutput() GetCertificateCertificateConfigSubjectOutput {
	return o
}

func (o GetCertificateCertificateConfigSubjectOutput) ToGetCertificateCertificateConfigSubjectOutputWithContext(ctx context.Context) GetCertificateCertificateConfigSubjectOutput {
	return o
}

func (o GetCertificateCertificateConfigSubjectOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateConfigSubject] {
	return pulumix.Output[GetCertificateCertificateConfigSubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o GetCertificateCertificateConfigSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.CommonName }).(pulumi.StringOutput)
}

// Country name (RDN C).
func (o GetCertificateCertificateConfigSubjectOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.Country }).(pulumi.StringOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o GetCertificateCertificateConfigSubjectOutput) DistinguishedNameQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.DistinguishedNameQualifier }).(pulumi.StringOutput)
}

// Domain component (RDN DC).
func (o GetCertificateCertificateConfigSubjectOutput) DomainComponent() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.DomainComponent }).(pulumi.StringOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o GetCertificateCertificateConfigSubjectOutput) GenerationQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.GenerationQualifier }).(pulumi.StringOutput)
}

// Personal given name (RDN G or GN).
func (o GetCertificateCertificateConfigSubjectOutput) GivenName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.GivenName }).(pulumi.StringOutput)
}

// Personal initials.
func (o GetCertificateCertificateConfigSubjectOutput) Initials() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.Initials }).(pulumi.StringOutput)
}

// Locality (RDN L).
func (o GetCertificateCertificateConfigSubjectOutput) LocalityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.LocalityName }).(pulumi.StringOutput)
}

// Organization (RDN O).
func (o GetCertificateCertificateConfigSubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.Organization }).(pulumi.StringOutput)
}

// Organizational unit (RDN OU).
func (o GetCertificateCertificateConfigSubjectOutput) OrganizationalUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.OrganizationalUnit }).(pulumi.StringOutput)
}

// Subject pseudonym.
func (o GetCertificateCertificateConfigSubjectOutput) Pseudonym() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.Pseudonym }).(pulumi.StringOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificateCertificateConfigSubjectOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// State or province name (RDN ST or S).
func (o GetCertificateCertificateConfigSubjectOutput) StateOrProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.StateOrProvinceName }).(pulumi.StringOutput)
}

// Street address (RDN STREET).
func (o GetCertificateCertificateConfigSubjectOutput) Street() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.Street }).(pulumi.StringOutput)
}

// Personal surname (RDN SN).
func (o GetCertificateCertificateConfigSubjectOutput) Surname() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.Surname }).(pulumi.StringOutput)
}

// Title (RDN T or TITLE).
func (o GetCertificateCertificateConfigSubjectOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.Title }).(pulumi.StringOutput)
}

// User ID (RDN UID).
func (o GetCertificateCertificateConfigSubjectOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubject) string { return v.UserId }).(pulumi.StringOutput)
}

type GetCertificateCertificateConfigSubjectArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateConfigSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateConfigSubject)(nil)).Elem()
}

func (o GetCertificateCertificateConfigSubjectArrayOutput) ToGetCertificateCertificateConfigSubjectArrayOutput() GetCertificateCertificateConfigSubjectArrayOutput {
	return o
}

func (o GetCertificateCertificateConfigSubjectArrayOutput) ToGetCertificateCertificateConfigSubjectArrayOutputWithContext(ctx context.Context) GetCertificateCertificateConfigSubjectArrayOutput {
	return o
}

func (o GetCertificateCertificateConfigSubjectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateConfigSubject] {
	return pulumix.Output[[]GetCertificateCertificateConfigSubject]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateCertificateConfigSubjectArrayOutput) Index(i pulumi.IntInput) GetCertificateCertificateConfigSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateCertificateConfigSubject {
		return vs[0].([]GetCertificateCertificateConfigSubject)[vs[1].(int)]
	}).(GetCertificateCertificateConfigSubjectOutput)
}

type GetCertificateCertificateConfigSubjectAlternativeName struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type string `pulumi:"type"`
	// The subject alternative name.
	Value string `pulumi:"value"`
}

// GetCertificateCertificateConfigSubjectAlternativeNameInput is an input type that accepts GetCertificateCertificateConfigSubjectAlternativeNameArgs and GetCertificateCertificateConfigSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetCertificateCertificateConfigSubjectAlternativeNameInput` via:
//
//	GetCertificateCertificateConfigSubjectAlternativeNameArgs{...}
type GetCertificateCertificateConfigSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetCertificateCertificateConfigSubjectAlternativeNameOutput() GetCertificateCertificateConfigSubjectAlternativeNameOutput
	ToGetCertificateCertificateConfigSubjectAlternativeNameOutputWithContext(context.Context) GetCertificateCertificateConfigSubjectAlternativeNameOutput
}

type GetCertificateCertificateConfigSubjectAlternativeNameArgs struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type pulumi.StringInput `pulumi:"type"`
	// The subject alternative name.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCertificateCertificateConfigSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificateCertificateConfigSubjectAlternativeNameArgs) ToGetCertificateCertificateConfigSubjectAlternativeNameOutput() GetCertificateCertificateConfigSubjectAlternativeNameOutput {
	return i.ToGetCertificateCertificateConfigSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetCertificateCertificateConfigSubjectAlternativeNameArgs) ToGetCertificateCertificateConfigSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificateCertificateConfigSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateConfigSubjectAlternativeNameOutput)
}

func (i GetCertificateCertificateConfigSubjectAlternativeNameArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[GetCertificateCertificateConfigSubjectAlternativeName]{
		OutputState: i.ToGetCertificateCertificateConfigSubjectAlternativeNameOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateCertificateConfigSubjectAlternativeNameArrayInput is an input type that accepts GetCertificateCertificateConfigSubjectAlternativeNameArray and GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetCertificateCertificateConfigSubjectAlternativeNameArrayInput` via:
//
//	GetCertificateCertificateConfigSubjectAlternativeNameArray{ GetCertificateCertificateConfigSubjectAlternativeNameArgs{...} }
type GetCertificateCertificateConfigSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetCertificateCertificateConfigSubjectAlternativeNameArrayOutput() GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput
	ToGetCertificateCertificateConfigSubjectAlternativeNameArrayOutputWithContext(context.Context) GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput
}

type GetCertificateCertificateConfigSubjectAlternativeNameArray []GetCertificateCertificateConfigSubjectAlternativeNameInput

func (GetCertificateCertificateConfigSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificateCertificateConfigSubjectAlternativeNameArray) ToGetCertificateCertificateConfigSubjectAlternativeNameArrayOutput() GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput {
	return i.ToGetCertificateCertificateConfigSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetCertificateCertificateConfigSubjectAlternativeNameArray) ToGetCertificateCertificateConfigSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput)
}

func (i GetCertificateCertificateConfigSubjectAlternativeNameArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificateCertificateConfigSubjectAlternativeName]{
		OutputState: i.ToGetCertificateCertificateConfigSubjectAlternativeNameArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateCertificateConfigSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateConfigSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificateCertificateConfigSubjectAlternativeNameOutput) ToGetCertificateCertificateConfigSubjectAlternativeNameOutput() GetCertificateCertificateConfigSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificateCertificateConfigSubjectAlternativeNameOutput) ToGetCertificateCertificateConfigSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificateCertificateConfigSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificateCertificateConfigSubjectAlternativeNameOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[GetCertificateCertificateConfigSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
func (o GetCertificateCertificateConfigSubjectAlternativeNameOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubjectAlternativeName) string { return v.Type }).(pulumi.StringOutput)
}

// The subject alternative name.
func (o GetCertificateCertificateConfigSubjectAlternativeNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigSubjectAlternativeName) string { return v.Value }).(pulumi.StringOutput)
}

type GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput) ToGetCertificateCertificateConfigSubjectAlternativeNameArrayOutput() GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput) ToGetCertificateCertificateConfigSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificateCertificateConfigSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetCertificateCertificateConfigSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateCertificateConfigSubjectAlternativeName {
		return vs[0].([]GetCertificateCertificateConfigSubjectAlternativeName)[vs[1].(int)]
	}).(GetCertificateCertificateConfigSubjectAlternativeNameOutput)
}

type GetCertificateCertificateConfigValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificateCertificateConfigValidityInput is an input type that accepts GetCertificateCertificateConfigValidityArgs and GetCertificateCertificateConfigValidityOutput values.
// You can construct a concrete instance of `GetCertificateCertificateConfigValidityInput` via:
//
//	GetCertificateCertificateConfigValidityArgs{...}
type GetCertificateCertificateConfigValidityInput interface {
	pulumi.Input

	ToGetCertificateCertificateConfigValidityOutput() GetCertificateCertificateConfigValidityOutput
	ToGetCertificateCertificateConfigValidityOutputWithContext(context.Context) GetCertificateCertificateConfigValidityOutput
}

type GetCertificateCertificateConfigValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificateCertificateConfigValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateConfigValidity)(nil)).Elem()
}

func (i GetCertificateCertificateConfigValidityArgs) ToGetCertificateCertificateConfigValidityOutput() GetCertificateCertificateConfigValidityOutput {
	return i.ToGetCertificateCertificateConfigValidityOutputWithContext(context.Background())
}

func (i GetCertificateCertificateConfigValidityArgs) ToGetCertificateCertificateConfigValidityOutputWithContext(ctx context.Context) GetCertificateCertificateConfigValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateConfigValidityOutput)
}

func (i GetCertificateCertificateConfigValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateConfigValidity] {
	return pulumix.Output[GetCertificateCertificateConfigValidity]{
		OutputState: i.ToGetCertificateCertificateConfigValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateCertificateConfigValidityArrayInput is an input type that accepts GetCertificateCertificateConfigValidityArray and GetCertificateCertificateConfigValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificateCertificateConfigValidityArrayInput` via:
//
//	GetCertificateCertificateConfigValidityArray{ GetCertificateCertificateConfigValidityArgs{...} }
type GetCertificateCertificateConfigValidityArrayInput interface {
	pulumi.Input

	ToGetCertificateCertificateConfigValidityArrayOutput() GetCertificateCertificateConfigValidityArrayOutput
	ToGetCertificateCertificateConfigValidityArrayOutputWithContext(context.Context) GetCertificateCertificateConfigValidityArrayOutput
}

type GetCertificateCertificateConfigValidityArray []GetCertificateCertificateConfigValidityInput

func (GetCertificateCertificateConfigValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateConfigValidity)(nil)).Elem()
}

func (i GetCertificateCertificateConfigValidityArray) ToGetCertificateCertificateConfigValidityArrayOutput() GetCertificateCertificateConfigValidityArrayOutput {
	return i.ToGetCertificateCertificateConfigValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificateCertificateConfigValidityArray) ToGetCertificateCertificateConfigValidityArrayOutputWithContext(ctx context.Context) GetCertificateCertificateConfigValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateConfigValidityArrayOutput)
}

func (i GetCertificateCertificateConfigValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateConfigValidity] {
	return pulumix.Output[[]GetCertificateCertificateConfigValidity]{
		OutputState: i.ToGetCertificateCertificateConfigValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateCertificateConfigValidityOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateConfigValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateConfigValidity)(nil)).Elem()
}

func (o GetCertificateCertificateConfigValidityOutput) ToGetCertificateCertificateConfigValidityOutput() GetCertificateCertificateConfigValidityOutput {
	return o
}

func (o GetCertificateCertificateConfigValidityOutput) ToGetCertificateCertificateConfigValidityOutputWithContext(ctx context.Context) GetCertificateCertificateConfigValidityOutput {
	return o
}

func (o GetCertificateCertificateConfigValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateConfigValidity] {
	return pulumix.Output[GetCertificateCertificateConfigValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateCertificateConfigValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigValidity) string { return v.TimeOfValidityNotAfter }).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateCertificateConfigValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateConfigValidity) string { return v.TimeOfValidityNotBefore }).(pulumi.StringOutput)
}

type GetCertificateCertificateConfigValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateConfigValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateConfigValidity)(nil)).Elem()
}

func (o GetCertificateCertificateConfigValidityArrayOutput) ToGetCertificateCertificateConfigValidityArrayOutput() GetCertificateCertificateConfigValidityArrayOutput {
	return o
}

func (o GetCertificateCertificateConfigValidityArrayOutput) ToGetCertificateCertificateConfigValidityArrayOutputWithContext(ctx context.Context) GetCertificateCertificateConfigValidityArrayOutput {
	return o
}

func (o GetCertificateCertificateConfigValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateConfigValidity] {
	return pulumix.Output[[]GetCertificateCertificateConfigValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateCertificateConfigValidityArrayOutput) Index(i pulumi.IntInput) GetCertificateCertificateConfigValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateCertificateConfigValidity {
		return vs[0].([]GetCertificateCertificateConfigValidity)[vs[1].(int)]
	}).(GetCertificateCertificateConfigValidityOutput)
}

type GetCertificateCertificateRevocationListDetail struct {
	// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls []string `pulumi:"customFormattedUrls"`
	// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfigs []GetCertificateCertificateRevocationListDetailObjectStorageConfig `pulumi:"objectStorageConfigs"`
}

// GetCertificateCertificateRevocationListDetailInput is an input type that accepts GetCertificateCertificateRevocationListDetailArgs and GetCertificateCertificateRevocationListDetailOutput values.
// You can construct a concrete instance of `GetCertificateCertificateRevocationListDetailInput` via:
//
//	GetCertificateCertificateRevocationListDetailArgs{...}
type GetCertificateCertificateRevocationListDetailInput interface {
	pulumi.Input

	ToGetCertificateCertificateRevocationListDetailOutput() GetCertificateCertificateRevocationListDetailOutput
	ToGetCertificateCertificateRevocationListDetailOutputWithContext(context.Context) GetCertificateCertificateRevocationListDetailOutput
}

type GetCertificateCertificateRevocationListDetailArgs struct {
	// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls pulumi.StringArrayInput `pulumi:"customFormattedUrls"`
	// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfigs GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayInput `pulumi:"objectStorageConfigs"`
}

func (GetCertificateCertificateRevocationListDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateRevocationListDetail)(nil)).Elem()
}

func (i GetCertificateCertificateRevocationListDetailArgs) ToGetCertificateCertificateRevocationListDetailOutput() GetCertificateCertificateRevocationListDetailOutput {
	return i.ToGetCertificateCertificateRevocationListDetailOutputWithContext(context.Background())
}

func (i GetCertificateCertificateRevocationListDetailArgs) ToGetCertificateCertificateRevocationListDetailOutputWithContext(ctx context.Context) GetCertificateCertificateRevocationListDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateRevocationListDetailOutput)
}

func (i GetCertificateCertificateRevocationListDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateRevocationListDetail] {
	return pulumix.Output[GetCertificateCertificateRevocationListDetail]{
		OutputState: i.ToGetCertificateCertificateRevocationListDetailOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateCertificateRevocationListDetailArrayInput is an input type that accepts GetCertificateCertificateRevocationListDetailArray and GetCertificateCertificateRevocationListDetailArrayOutput values.
// You can construct a concrete instance of `GetCertificateCertificateRevocationListDetailArrayInput` via:
//
//	GetCertificateCertificateRevocationListDetailArray{ GetCertificateCertificateRevocationListDetailArgs{...} }
type GetCertificateCertificateRevocationListDetailArrayInput interface {
	pulumi.Input

	ToGetCertificateCertificateRevocationListDetailArrayOutput() GetCertificateCertificateRevocationListDetailArrayOutput
	ToGetCertificateCertificateRevocationListDetailArrayOutputWithContext(context.Context) GetCertificateCertificateRevocationListDetailArrayOutput
}

type GetCertificateCertificateRevocationListDetailArray []GetCertificateCertificateRevocationListDetailInput

func (GetCertificateCertificateRevocationListDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateRevocationListDetail)(nil)).Elem()
}

func (i GetCertificateCertificateRevocationListDetailArray) ToGetCertificateCertificateRevocationListDetailArrayOutput() GetCertificateCertificateRevocationListDetailArrayOutput {
	return i.ToGetCertificateCertificateRevocationListDetailArrayOutputWithContext(context.Background())
}

func (i GetCertificateCertificateRevocationListDetailArray) ToGetCertificateCertificateRevocationListDetailArrayOutputWithContext(ctx context.Context) GetCertificateCertificateRevocationListDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateRevocationListDetailArrayOutput)
}

func (i GetCertificateCertificateRevocationListDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateRevocationListDetail] {
	return pulumix.Output[[]GetCertificateCertificateRevocationListDetail]{
		OutputState: i.ToGetCertificateCertificateRevocationListDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateCertificateRevocationListDetailOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateRevocationListDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateRevocationListDetail)(nil)).Elem()
}

func (o GetCertificateCertificateRevocationListDetailOutput) ToGetCertificateCertificateRevocationListDetailOutput() GetCertificateCertificateRevocationListDetailOutput {
	return o
}

func (o GetCertificateCertificateRevocationListDetailOutput) ToGetCertificateCertificateRevocationListDetailOutputWithContext(ctx context.Context) GetCertificateCertificateRevocationListDetailOutput {
	return o
}

func (o GetCertificateCertificateRevocationListDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateRevocationListDetail] {
	return pulumix.Output[GetCertificateCertificateRevocationListDetail]{
		OutputState: o.OutputState,
	}
}

// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o GetCertificateCertificateRevocationListDetailOutput) CustomFormattedUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateCertificateRevocationListDetail) []string { return v.CustomFormattedUrls }).(pulumi.StringArrayOutput)
}

// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
func (o GetCertificateCertificateRevocationListDetailOutput) ObjectStorageConfigs() GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o.ApplyT(func(v GetCertificateCertificateRevocationListDetail) []GetCertificateCertificateRevocationListDetailObjectStorageConfig {
		return v.ObjectStorageConfigs
	}).(GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput)
}

type GetCertificateCertificateRevocationListDetailArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateRevocationListDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateRevocationListDetail)(nil)).Elem()
}

func (o GetCertificateCertificateRevocationListDetailArrayOutput) ToGetCertificateCertificateRevocationListDetailArrayOutput() GetCertificateCertificateRevocationListDetailArrayOutput {
	return o
}

func (o GetCertificateCertificateRevocationListDetailArrayOutput) ToGetCertificateCertificateRevocationListDetailArrayOutputWithContext(ctx context.Context) GetCertificateCertificateRevocationListDetailArrayOutput {
	return o
}

func (o GetCertificateCertificateRevocationListDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateRevocationListDetail] {
	return pulumix.Output[[]GetCertificateCertificateRevocationListDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateCertificateRevocationListDetailArrayOutput) Index(i pulumi.IntInput) GetCertificateCertificateRevocationListDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateCertificateRevocationListDetail {
		return vs[0].([]GetCertificateCertificateRevocationListDetail)[vs[1].(int)]
	}).(GetCertificateCertificateRevocationListDetailOutput)
}

type GetCertificateCertificateRevocationListDetailObjectStorageConfig struct {
	// The name of the bucket where the CRL is stored.
	ObjectStorageBucketName string `pulumi:"objectStorageBucketName"`
	// The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace string `pulumi:"objectStorageNamespace"`
	// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat string `pulumi:"objectStorageObjectNameFormat"`
}

// GetCertificateCertificateRevocationListDetailObjectStorageConfigInput is an input type that accepts GetCertificateCertificateRevocationListDetailObjectStorageConfigArgs and GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput values.
// You can construct a concrete instance of `GetCertificateCertificateRevocationListDetailObjectStorageConfigInput` via:
//
//	GetCertificateCertificateRevocationListDetailObjectStorageConfigArgs{...}
type GetCertificateCertificateRevocationListDetailObjectStorageConfigInput interface {
	pulumi.Input

	ToGetCertificateCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput
	ToGetCertificateCertificateRevocationListDetailObjectStorageConfigOutputWithContext(context.Context) GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput
}

type GetCertificateCertificateRevocationListDetailObjectStorageConfigArgs struct {
	// The name of the bucket where the CRL is stored.
	ObjectStorageBucketName pulumi.StringInput `pulumi:"objectStorageBucketName"`
	// The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace pulumi.StringInput `pulumi:"objectStorageNamespace"`
	// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat pulumi.StringInput `pulumi:"objectStorageObjectNameFormat"`
}

func (GetCertificateCertificateRevocationListDetailObjectStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (i GetCertificateCertificateRevocationListDetailObjectStorageConfigArgs) ToGetCertificateCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput {
	return i.ToGetCertificateCertificateRevocationListDetailObjectStorageConfigOutputWithContext(context.Background())
}

func (i GetCertificateCertificateRevocationListDetailObjectStorageConfigArgs) ToGetCertificateCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx context.Context) GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput)
}

func (i GetCertificateCertificateRevocationListDetailObjectStorageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[GetCertificateCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: i.ToGetCertificateCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayInput is an input type that accepts GetCertificateCertificateRevocationListDetailObjectStorageConfigArray and GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput values.
// You can construct a concrete instance of `GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayInput` via:
//
//	GetCertificateCertificateRevocationListDetailObjectStorageConfigArray{ GetCertificateCertificateRevocationListDetailObjectStorageConfigArgs{...} }
type GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayInput interface {
	pulumi.Input

	ToGetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput
	ToGetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(context.Context) GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput
}

type GetCertificateCertificateRevocationListDetailObjectStorageConfigArray []GetCertificateCertificateRevocationListDetailObjectStorageConfigInput

func (GetCertificateCertificateRevocationListDetailObjectStorageConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (i GetCertificateCertificateRevocationListDetailObjectStorageConfigArray) ToGetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return i.ToGetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(context.Background())
}

func (i GetCertificateCertificateRevocationListDetailObjectStorageConfigArray) ToGetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx context.Context) GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput)
}

func (i GetCertificateCertificateRevocationListDetailObjectStorageConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[[]GetCertificateCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: i.ToGetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (o GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput) ToGetCertificateCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput {
	return o
}

func (o GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput) ToGetCertificateCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx context.Context) GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput {
	return o
}

func (o GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[GetCertificateCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

// The name of the bucket where the CRL is stored.
func (o GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageBucketName
	}).(pulumi.StringOutput)
}

// The tenancy of the bucket where the CRL is stored.
func (o GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageNamespace
	}).(pulumi.StringOutput)
}

// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageObjectNameFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageObjectNameFormat
	}).(pulumi.StringOutput)
}

type GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (o GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToGetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o
}

func (o GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToGetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx context.Context) GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o
}

func (o GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[[]GetCertificateCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput) Index(i pulumi.IntInput) GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateCertificateRevocationListDetailObjectStorageConfig {
		return vs[0].([]GetCertificateCertificateRevocationListDetailObjectStorageConfig)[vs[1].(int)]
	}).(GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput)
}

type GetCertificateCertificateRule struct {
	// A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	AdvanceRenewalPeriod string `pulumi:"advanceRenewalPeriod"`
	// A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	RenewalInterval string `pulumi:"renewalInterval"`
	// The type of rule.
	RuleType string `pulumi:"ruleType"`
}

// GetCertificateCertificateRuleInput is an input type that accepts GetCertificateCertificateRuleArgs and GetCertificateCertificateRuleOutput values.
// You can construct a concrete instance of `GetCertificateCertificateRuleInput` via:
//
//	GetCertificateCertificateRuleArgs{...}
type GetCertificateCertificateRuleInput interface {
	pulumi.Input

	ToGetCertificateCertificateRuleOutput() GetCertificateCertificateRuleOutput
	ToGetCertificateCertificateRuleOutputWithContext(context.Context) GetCertificateCertificateRuleOutput
}

type GetCertificateCertificateRuleArgs struct {
	// A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	AdvanceRenewalPeriod pulumi.StringInput `pulumi:"advanceRenewalPeriod"`
	// A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	RenewalInterval pulumi.StringInput `pulumi:"renewalInterval"`
	// The type of rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (GetCertificateCertificateRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateRule)(nil)).Elem()
}

func (i GetCertificateCertificateRuleArgs) ToGetCertificateCertificateRuleOutput() GetCertificateCertificateRuleOutput {
	return i.ToGetCertificateCertificateRuleOutputWithContext(context.Background())
}

func (i GetCertificateCertificateRuleArgs) ToGetCertificateCertificateRuleOutputWithContext(ctx context.Context) GetCertificateCertificateRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateRuleOutput)
}

func (i GetCertificateCertificateRuleArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateRule] {
	return pulumix.Output[GetCertificateCertificateRule]{
		OutputState: i.ToGetCertificateCertificateRuleOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateCertificateRuleArrayInput is an input type that accepts GetCertificateCertificateRuleArray and GetCertificateCertificateRuleArrayOutput values.
// You can construct a concrete instance of `GetCertificateCertificateRuleArrayInput` via:
//
//	GetCertificateCertificateRuleArray{ GetCertificateCertificateRuleArgs{...} }
type GetCertificateCertificateRuleArrayInput interface {
	pulumi.Input

	ToGetCertificateCertificateRuleArrayOutput() GetCertificateCertificateRuleArrayOutput
	ToGetCertificateCertificateRuleArrayOutputWithContext(context.Context) GetCertificateCertificateRuleArrayOutput
}

type GetCertificateCertificateRuleArray []GetCertificateCertificateRuleInput

func (GetCertificateCertificateRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateRule)(nil)).Elem()
}

func (i GetCertificateCertificateRuleArray) ToGetCertificateCertificateRuleArrayOutput() GetCertificateCertificateRuleArrayOutput {
	return i.ToGetCertificateCertificateRuleArrayOutputWithContext(context.Background())
}

func (i GetCertificateCertificateRuleArray) ToGetCertificateCertificateRuleArrayOutputWithContext(ctx context.Context) GetCertificateCertificateRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCertificateRuleArrayOutput)
}

func (i GetCertificateCertificateRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateRule] {
	return pulumix.Output[[]GetCertificateCertificateRule]{
		OutputState: i.ToGetCertificateCertificateRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateCertificateRuleOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCertificateRule)(nil)).Elem()
}

func (o GetCertificateCertificateRuleOutput) ToGetCertificateCertificateRuleOutput() GetCertificateCertificateRuleOutput {
	return o
}

func (o GetCertificateCertificateRuleOutput) ToGetCertificateCertificateRuleOutputWithContext(ctx context.Context) GetCertificateCertificateRuleOutput {
	return o
}

func (o GetCertificateCertificateRuleOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCertificateRule] {
	return pulumix.Output[GetCertificateCertificateRule]{
		OutputState: o.OutputState,
	}
}

// A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o GetCertificateCertificateRuleOutput) AdvanceRenewalPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateRule) string { return v.AdvanceRenewalPeriod }).(pulumi.StringOutput)
}

// A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o GetCertificateCertificateRuleOutput) RenewalInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateRule) string { return v.RenewalInterval }).(pulumi.StringOutput)
}

// The type of rule.
func (o GetCertificateCertificateRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCertificateRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type GetCertificateCertificateRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateCertificateRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCertificateRule)(nil)).Elem()
}

func (o GetCertificateCertificateRuleArrayOutput) ToGetCertificateCertificateRuleArrayOutput() GetCertificateCertificateRuleArrayOutput {
	return o
}

func (o GetCertificateCertificateRuleArrayOutput) ToGetCertificateCertificateRuleArrayOutputWithContext(ctx context.Context) GetCertificateCertificateRuleArrayOutput {
	return o
}

func (o GetCertificateCertificateRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCertificateRule] {
	return pulumix.Output[[]GetCertificateCertificateRule]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateCertificateRuleArrayOutput) Index(i pulumi.IntInput) GetCertificateCertificateRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateCertificateRule {
		return vs[0].([]GetCertificateCertificateRule)[vs[1].(int)]
	}).(GetCertificateCertificateRuleOutput)
}

type GetCertificateCurrentVersion struct {
	// The OCID of the certificate.
	CertificateId string `pulumi:"certificateId"`
	// The version number of the issuing certificate authority (CA).
	IssuerCaVersionNumber string `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses []GetCertificateCurrentVersionRevocationStatus `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// A list of rotation states for this certificate version.
	Stages []string `pulumi:"stages"`
	// A list of subject alternative names.
	SubjectAlternativeNames []GetCertificateCurrentVersionSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificateCurrentVersionValidity `pulumi:"validities"`
	// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
	VersionName string `pulumi:"versionName"`
	// The version number of the certificate.
	VersionNumber string `pulumi:"versionNumber"`
}

// GetCertificateCurrentVersionInput is an input type that accepts GetCertificateCurrentVersionArgs and GetCertificateCurrentVersionOutput values.
// You can construct a concrete instance of `GetCertificateCurrentVersionInput` via:
//
//	GetCertificateCurrentVersionArgs{...}
type GetCertificateCurrentVersionInput interface {
	pulumi.Input

	ToGetCertificateCurrentVersionOutput() GetCertificateCurrentVersionOutput
	ToGetCertificateCurrentVersionOutputWithContext(context.Context) GetCertificateCurrentVersionOutput
}

type GetCertificateCurrentVersionArgs struct {
	// The OCID of the certificate.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// The version number of the issuing certificate authority (CA).
	IssuerCaVersionNumber pulumi.StringInput `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses GetCertificateCurrentVersionRevocationStatusArrayInput `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// A list of rotation states for this certificate version.
	Stages pulumi.StringArrayInput `pulumi:"stages"`
	// A list of subject alternative names.
	SubjectAlternativeNames GetCertificateCurrentVersionSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities GetCertificateCurrentVersionValidityArrayInput `pulumi:"validities"`
	// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
	VersionName pulumi.StringInput `pulumi:"versionName"`
	// The version number of the certificate.
	VersionNumber pulumi.StringInput `pulumi:"versionNumber"`
}

func (GetCertificateCurrentVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCurrentVersion)(nil)).Elem()
}

func (i GetCertificateCurrentVersionArgs) ToGetCertificateCurrentVersionOutput() GetCertificateCurrentVersionOutput {
	return i.ToGetCertificateCurrentVersionOutputWithContext(context.Background())
}

func (i GetCertificateCurrentVersionArgs) ToGetCertificateCurrentVersionOutputWithContext(ctx context.Context) GetCertificateCurrentVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCurrentVersionOutput)
}

func (i GetCertificateCurrentVersionArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCurrentVersion] {
	return pulumix.Output[GetCertificateCurrentVersion]{
		OutputState: i.ToGetCertificateCurrentVersionOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateCurrentVersionArrayInput is an input type that accepts GetCertificateCurrentVersionArray and GetCertificateCurrentVersionArrayOutput values.
// You can construct a concrete instance of `GetCertificateCurrentVersionArrayInput` via:
//
//	GetCertificateCurrentVersionArray{ GetCertificateCurrentVersionArgs{...} }
type GetCertificateCurrentVersionArrayInput interface {
	pulumi.Input

	ToGetCertificateCurrentVersionArrayOutput() GetCertificateCurrentVersionArrayOutput
	ToGetCertificateCurrentVersionArrayOutputWithContext(context.Context) GetCertificateCurrentVersionArrayOutput
}

type GetCertificateCurrentVersionArray []GetCertificateCurrentVersionInput

func (GetCertificateCurrentVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCurrentVersion)(nil)).Elem()
}

func (i GetCertificateCurrentVersionArray) ToGetCertificateCurrentVersionArrayOutput() GetCertificateCurrentVersionArrayOutput {
	return i.ToGetCertificateCurrentVersionArrayOutputWithContext(context.Background())
}

func (i GetCertificateCurrentVersionArray) ToGetCertificateCurrentVersionArrayOutputWithContext(ctx context.Context) GetCertificateCurrentVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCurrentVersionArrayOutput)
}

func (i GetCertificateCurrentVersionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCurrentVersion] {
	return pulumix.Output[[]GetCertificateCurrentVersion]{
		OutputState: i.ToGetCertificateCurrentVersionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateCurrentVersionOutput struct{ *pulumi.OutputState }

func (GetCertificateCurrentVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCurrentVersion)(nil)).Elem()
}

func (o GetCertificateCurrentVersionOutput) ToGetCertificateCurrentVersionOutput() GetCertificateCurrentVersionOutput {
	return o
}

func (o GetCertificateCurrentVersionOutput) ToGetCertificateCurrentVersionOutputWithContext(ctx context.Context) GetCertificateCurrentVersionOutput {
	return o
}

func (o GetCertificateCurrentVersionOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCurrentVersion] {
	return pulumix.Output[GetCertificateCurrentVersion]{
		OutputState: o.OutputState,
	}
}

// The OCID of the certificate.
func (o GetCertificateCurrentVersionOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersion) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The version number of the issuing certificate authority (CA).
func (o GetCertificateCurrentVersionOutput) IssuerCaVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersion) string { return v.IssuerCaVersionNumber }).(pulumi.StringOutput)
}

// The current revocation status of the entity.
func (o GetCertificateCurrentVersionOutput) RevocationStatuses() GetCertificateCurrentVersionRevocationStatusArrayOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersion) []GetCertificateCurrentVersionRevocationStatus {
		return v.RevocationStatuses
	}).(GetCertificateCurrentVersionRevocationStatusArrayOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificateCurrentVersionOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersion) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// A list of rotation states for this certificate version.
func (o GetCertificateCurrentVersionOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersion) []string { return v.Stages }).(pulumi.StringArrayOutput)
}

// A list of subject alternative names.
func (o GetCertificateCurrentVersionOutput) SubjectAlternativeNames() GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersion) []GetCertificateCurrentVersionSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput)
}

// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateCurrentVersionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersion) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateCurrentVersionOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersion) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificateCurrentVersionOutput) Validities() GetCertificateCurrentVersionValidityArrayOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersion) []GetCertificateCurrentVersionValidity { return v.Validities }).(GetCertificateCurrentVersionValidityArrayOutput)
}

// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
func (o GetCertificateCurrentVersionOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersion) string { return v.VersionName }).(pulumi.StringOutput)
}

// The version number of the certificate.
func (o GetCertificateCurrentVersionOutput) VersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersion) string { return v.VersionNumber }).(pulumi.StringOutput)
}

type GetCertificateCurrentVersionArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateCurrentVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCurrentVersion)(nil)).Elem()
}

func (o GetCertificateCurrentVersionArrayOutput) ToGetCertificateCurrentVersionArrayOutput() GetCertificateCurrentVersionArrayOutput {
	return o
}

func (o GetCertificateCurrentVersionArrayOutput) ToGetCertificateCurrentVersionArrayOutputWithContext(ctx context.Context) GetCertificateCurrentVersionArrayOutput {
	return o
}

func (o GetCertificateCurrentVersionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCurrentVersion] {
	return pulumix.Output[[]GetCertificateCurrentVersion]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateCurrentVersionArrayOutput) Index(i pulumi.IntInput) GetCertificateCurrentVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateCurrentVersion {
		return vs[0].([]GetCertificateCurrentVersion)[vs[1].(int)]
	}).(GetCertificateCurrentVersionOutput)
}

type GetCertificateCurrentVersionRevocationStatus struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason string `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation string `pulumi:"timeOfRevocation"`
}

// GetCertificateCurrentVersionRevocationStatusInput is an input type that accepts GetCertificateCurrentVersionRevocationStatusArgs and GetCertificateCurrentVersionRevocationStatusOutput values.
// You can construct a concrete instance of `GetCertificateCurrentVersionRevocationStatusInput` via:
//
//	GetCertificateCurrentVersionRevocationStatusArgs{...}
type GetCertificateCurrentVersionRevocationStatusInput interface {
	pulumi.Input

	ToGetCertificateCurrentVersionRevocationStatusOutput() GetCertificateCurrentVersionRevocationStatusOutput
	ToGetCertificateCurrentVersionRevocationStatusOutputWithContext(context.Context) GetCertificateCurrentVersionRevocationStatusOutput
}

type GetCertificateCurrentVersionRevocationStatusArgs struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason pulumi.StringInput `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation pulumi.StringInput `pulumi:"timeOfRevocation"`
}

func (GetCertificateCurrentVersionRevocationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificateCurrentVersionRevocationStatusArgs) ToGetCertificateCurrentVersionRevocationStatusOutput() GetCertificateCurrentVersionRevocationStatusOutput {
	return i.ToGetCertificateCurrentVersionRevocationStatusOutputWithContext(context.Background())
}

func (i GetCertificateCurrentVersionRevocationStatusArgs) ToGetCertificateCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificateCurrentVersionRevocationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCurrentVersionRevocationStatusOutput)
}

func (i GetCertificateCurrentVersionRevocationStatusArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCurrentVersionRevocationStatus] {
	return pulumix.Output[GetCertificateCurrentVersionRevocationStatus]{
		OutputState: i.ToGetCertificateCurrentVersionRevocationStatusOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateCurrentVersionRevocationStatusArrayInput is an input type that accepts GetCertificateCurrentVersionRevocationStatusArray and GetCertificateCurrentVersionRevocationStatusArrayOutput values.
// You can construct a concrete instance of `GetCertificateCurrentVersionRevocationStatusArrayInput` via:
//
//	GetCertificateCurrentVersionRevocationStatusArray{ GetCertificateCurrentVersionRevocationStatusArgs{...} }
type GetCertificateCurrentVersionRevocationStatusArrayInput interface {
	pulumi.Input

	ToGetCertificateCurrentVersionRevocationStatusArrayOutput() GetCertificateCurrentVersionRevocationStatusArrayOutput
	ToGetCertificateCurrentVersionRevocationStatusArrayOutputWithContext(context.Context) GetCertificateCurrentVersionRevocationStatusArrayOutput
}

type GetCertificateCurrentVersionRevocationStatusArray []GetCertificateCurrentVersionRevocationStatusInput

func (GetCertificateCurrentVersionRevocationStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificateCurrentVersionRevocationStatusArray) ToGetCertificateCurrentVersionRevocationStatusArrayOutput() GetCertificateCurrentVersionRevocationStatusArrayOutput {
	return i.ToGetCertificateCurrentVersionRevocationStatusArrayOutputWithContext(context.Background())
}

func (i GetCertificateCurrentVersionRevocationStatusArray) ToGetCertificateCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateCurrentVersionRevocationStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCurrentVersionRevocationStatusArrayOutput)
}

func (i GetCertificateCurrentVersionRevocationStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCurrentVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificateCurrentVersionRevocationStatus]{
		OutputState: i.ToGetCertificateCurrentVersionRevocationStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateCurrentVersionRevocationStatusOutput struct{ *pulumi.OutputState }

func (GetCertificateCurrentVersionRevocationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificateCurrentVersionRevocationStatusOutput) ToGetCertificateCurrentVersionRevocationStatusOutput() GetCertificateCurrentVersionRevocationStatusOutput {
	return o
}

func (o GetCertificateCurrentVersionRevocationStatusOutput) ToGetCertificateCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificateCurrentVersionRevocationStatusOutput {
	return o
}

func (o GetCertificateCurrentVersionRevocationStatusOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCurrentVersionRevocationStatus] {
	return pulumix.Output[GetCertificateCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

// The reason the certificate or certificate authority (CA) was revoked.
func (o GetCertificateCurrentVersionRevocationStatusOutput) RevocationReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersionRevocationStatus) string { return v.RevocationReason }).(pulumi.StringOutput)
}

// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateCurrentVersionRevocationStatusOutput) TimeOfRevocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersionRevocationStatus) string { return v.TimeOfRevocation }).(pulumi.StringOutput)
}

type GetCertificateCurrentVersionRevocationStatusArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateCurrentVersionRevocationStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificateCurrentVersionRevocationStatusArrayOutput) ToGetCertificateCurrentVersionRevocationStatusArrayOutput() GetCertificateCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateCurrentVersionRevocationStatusArrayOutput) ToGetCertificateCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateCurrentVersionRevocationStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCurrentVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificateCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateCurrentVersionRevocationStatusArrayOutput) Index(i pulumi.IntInput) GetCertificateCurrentVersionRevocationStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateCurrentVersionRevocationStatus {
		return vs[0].([]GetCertificateCurrentVersionRevocationStatus)[vs[1].(int)]
	}).(GetCertificateCurrentVersionRevocationStatusOutput)
}

type GetCertificateCurrentVersionSubjectAlternativeName struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type string `pulumi:"type"`
	// The subject alternative name.
	Value string `pulumi:"value"`
}

// GetCertificateCurrentVersionSubjectAlternativeNameInput is an input type that accepts GetCertificateCurrentVersionSubjectAlternativeNameArgs and GetCertificateCurrentVersionSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetCertificateCurrentVersionSubjectAlternativeNameInput` via:
//
//	GetCertificateCurrentVersionSubjectAlternativeNameArgs{...}
type GetCertificateCurrentVersionSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetCertificateCurrentVersionSubjectAlternativeNameOutput() GetCertificateCurrentVersionSubjectAlternativeNameOutput
	ToGetCertificateCurrentVersionSubjectAlternativeNameOutputWithContext(context.Context) GetCertificateCurrentVersionSubjectAlternativeNameOutput
}

type GetCertificateCurrentVersionSubjectAlternativeNameArgs struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type pulumi.StringInput `pulumi:"type"`
	// The subject alternative name.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCertificateCurrentVersionSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificateCurrentVersionSubjectAlternativeNameArgs) ToGetCertificateCurrentVersionSubjectAlternativeNameOutput() GetCertificateCurrentVersionSubjectAlternativeNameOutput {
	return i.ToGetCertificateCurrentVersionSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetCertificateCurrentVersionSubjectAlternativeNameArgs) ToGetCertificateCurrentVersionSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificateCurrentVersionSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCurrentVersionSubjectAlternativeNameOutput)
}

func (i GetCertificateCurrentVersionSubjectAlternativeNameArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[GetCertificateCurrentVersionSubjectAlternativeName]{
		OutputState: i.ToGetCertificateCurrentVersionSubjectAlternativeNameOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateCurrentVersionSubjectAlternativeNameArrayInput is an input type that accepts GetCertificateCurrentVersionSubjectAlternativeNameArray and GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetCertificateCurrentVersionSubjectAlternativeNameArrayInput` via:
//
//	GetCertificateCurrentVersionSubjectAlternativeNameArray{ GetCertificateCurrentVersionSubjectAlternativeNameArgs{...} }
type GetCertificateCurrentVersionSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetCertificateCurrentVersionSubjectAlternativeNameArrayOutput() GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput
	ToGetCertificateCurrentVersionSubjectAlternativeNameArrayOutputWithContext(context.Context) GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput
}

type GetCertificateCurrentVersionSubjectAlternativeNameArray []GetCertificateCurrentVersionSubjectAlternativeNameInput

func (GetCertificateCurrentVersionSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificateCurrentVersionSubjectAlternativeNameArray) ToGetCertificateCurrentVersionSubjectAlternativeNameArrayOutput() GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput {
	return i.ToGetCertificateCurrentVersionSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetCertificateCurrentVersionSubjectAlternativeNameArray) ToGetCertificateCurrentVersionSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput)
}

func (i GetCertificateCurrentVersionSubjectAlternativeNameArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificateCurrentVersionSubjectAlternativeName]{
		OutputState: i.ToGetCertificateCurrentVersionSubjectAlternativeNameArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateCurrentVersionSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetCertificateCurrentVersionSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificateCurrentVersionSubjectAlternativeNameOutput) ToGetCertificateCurrentVersionSubjectAlternativeNameOutput() GetCertificateCurrentVersionSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificateCurrentVersionSubjectAlternativeNameOutput) ToGetCertificateCurrentVersionSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificateCurrentVersionSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificateCurrentVersionSubjectAlternativeNameOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[GetCertificateCurrentVersionSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
func (o GetCertificateCurrentVersionSubjectAlternativeNameOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersionSubjectAlternativeName) string { return v.Type }).(pulumi.StringOutput)
}

// The subject alternative name.
func (o GetCertificateCurrentVersionSubjectAlternativeNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersionSubjectAlternativeName) string { return v.Value }).(pulumi.StringOutput)
}

type GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput) ToGetCertificateCurrentVersionSubjectAlternativeNameArrayOutput() GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput) ToGetCertificateCurrentVersionSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificateCurrentVersionSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetCertificateCurrentVersionSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateCurrentVersionSubjectAlternativeName {
		return vs[0].([]GetCertificateCurrentVersionSubjectAlternativeName)[vs[1].(int)]
	}).(GetCertificateCurrentVersionSubjectAlternativeNameOutput)
}

type GetCertificateCurrentVersionValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificateCurrentVersionValidityInput is an input type that accepts GetCertificateCurrentVersionValidityArgs and GetCertificateCurrentVersionValidityOutput values.
// You can construct a concrete instance of `GetCertificateCurrentVersionValidityInput` via:
//
//	GetCertificateCurrentVersionValidityArgs{...}
type GetCertificateCurrentVersionValidityInput interface {
	pulumi.Input

	ToGetCertificateCurrentVersionValidityOutput() GetCertificateCurrentVersionValidityOutput
	ToGetCertificateCurrentVersionValidityOutputWithContext(context.Context) GetCertificateCurrentVersionValidityOutput
}

type GetCertificateCurrentVersionValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificateCurrentVersionValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCurrentVersionValidity)(nil)).Elem()
}

func (i GetCertificateCurrentVersionValidityArgs) ToGetCertificateCurrentVersionValidityOutput() GetCertificateCurrentVersionValidityOutput {
	return i.ToGetCertificateCurrentVersionValidityOutputWithContext(context.Background())
}

func (i GetCertificateCurrentVersionValidityArgs) ToGetCertificateCurrentVersionValidityOutputWithContext(ctx context.Context) GetCertificateCurrentVersionValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCurrentVersionValidityOutput)
}

func (i GetCertificateCurrentVersionValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCurrentVersionValidity] {
	return pulumix.Output[GetCertificateCurrentVersionValidity]{
		OutputState: i.ToGetCertificateCurrentVersionValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateCurrentVersionValidityArrayInput is an input type that accepts GetCertificateCurrentVersionValidityArray and GetCertificateCurrentVersionValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificateCurrentVersionValidityArrayInput` via:
//
//	GetCertificateCurrentVersionValidityArray{ GetCertificateCurrentVersionValidityArgs{...} }
type GetCertificateCurrentVersionValidityArrayInput interface {
	pulumi.Input

	ToGetCertificateCurrentVersionValidityArrayOutput() GetCertificateCurrentVersionValidityArrayOutput
	ToGetCertificateCurrentVersionValidityArrayOutputWithContext(context.Context) GetCertificateCurrentVersionValidityArrayOutput
}

type GetCertificateCurrentVersionValidityArray []GetCertificateCurrentVersionValidityInput

func (GetCertificateCurrentVersionValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCurrentVersionValidity)(nil)).Elem()
}

func (i GetCertificateCurrentVersionValidityArray) ToGetCertificateCurrentVersionValidityArrayOutput() GetCertificateCurrentVersionValidityArrayOutput {
	return i.ToGetCertificateCurrentVersionValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificateCurrentVersionValidityArray) ToGetCertificateCurrentVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificateCurrentVersionValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateCurrentVersionValidityArrayOutput)
}

func (i GetCertificateCurrentVersionValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCurrentVersionValidity] {
	return pulumix.Output[[]GetCertificateCurrentVersionValidity]{
		OutputState: i.ToGetCertificateCurrentVersionValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateCurrentVersionValidityOutput struct{ *pulumi.OutputState }

func (GetCertificateCurrentVersionValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateCurrentVersionValidity)(nil)).Elem()
}

func (o GetCertificateCurrentVersionValidityOutput) ToGetCertificateCurrentVersionValidityOutput() GetCertificateCurrentVersionValidityOutput {
	return o
}

func (o GetCertificateCurrentVersionValidityOutput) ToGetCertificateCurrentVersionValidityOutputWithContext(ctx context.Context) GetCertificateCurrentVersionValidityOutput {
	return o
}

func (o GetCertificateCurrentVersionValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateCurrentVersionValidity] {
	return pulumix.Output[GetCertificateCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateCurrentVersionValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersionValidity) string { return v.TimeOfValidityNotAfter }).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateCurrentVersionValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateCurrentVersionValidity) string { return v.TimeOfValidityNotBefore }).(pulumi.StringOutput)
}

type GetCertificateCurrentVersionValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateCurrentVersionValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateCurrentVersionValidity)(nil)).Elem()
}

func (o GetCertificateCurrentVersionValidityArrayOutput) ToGetCertificateCurrentVersionValidityArrayOutput() GetCertificateCurrentVersionValidityArrayOutput {
	return o
}

func (o GetCertificateCurrentVersionValidityArrayOutput) ToGetCertificateCurrentVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificateCurrentVersionValidityArrayOutput {
	return o
}

func (o GetCertificateCurrentVersionValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateCurrentVersionValidity] {
	return pulumix.Output[[]GetCertificateCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateCurrentVersionValidityArrayOutput) Index(i pulumi.IntInput) GetCertificateCurrentVersionValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateCurrentVersionValidity {
		return vs[0].([]GetCertificateCurrentVersionValidity)[vs[1].(int)]
	}).(GetCertificateCurrentVersionValidityOutput)
}

type GetCertificateSubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName string `pulumi:"commonName"`
	// Country name (RDN C).
	Country string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName string `pulumi:"givenName"`
	// Personal initials.
	Initials string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title string `pulumi:"title"`
	// User ID (RDN UID).
	UserId string `pulumi:"userId"`
}

// GetCertificateSubjectInput is an input type that accepts GetCertificateSubjectArgs and GetCertificateSubjectOutput values.
// You can construct a concrete instance of `GetCertificateSubjectInput` via:
//
//	GetCertificateSubjectArgs{...}
type GetCertificateSubjectInput interface {
	pulumi.Input

	ToGetCertificateSubjectOutput() GetCertificateSubjectOutput
	ToGetCertificateSubjectOutputWithContext(context.Context) GetCertificateSubjectOutput
}

type GetCertificateSubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetCertificateSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateSubject)(nil)).Elem()
}

func (i GetCertificateSubjectArgs) ToGetCertificateSubjectOutput() GetCertificateSubjectOutput {
	return i.ToGetCertificateSubjectOutputWithContext(context.Background())
}

func (i GetCertificateSubjectArgs) ToGetCertificateSubjectOutputWithContext(ctx context.Context) GetCertificateSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateSubjectOutput)
}

func (i GetCertificateSubjectArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateSubject] {
	return pulumix.Output[GetCertificateSubject]{
		OutputState: i.ToGetCertificateSubjectOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateSubjectArrayInput is an input type that accepts GetCertificateSubjectArray and GetCertificateSubjectArrayOutput values.
// You can construct a concrete instance of `GetCertificateSubjectArrayInput` via:
//
//	GetCertificateSubjectArray{ GetCertificateSubjectArgs{...} }
type GetCertificateSubjectArrayInput interface {
	pulumi.Input

	ToGetCertificateSubjectArrayOutput() GetCertificateSubjectArrayOutput
	ToGetCertificateSubjectArrayOutputWithContext(context.Context) GetCertificateSubjectArrayOutput
}

type GetCertificateSubjectArray []GetCertificateSubjectInput

func (GetCertificateSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateSubject)(nil)).Elem()
}

func (i GetCertificateSubjectArray) ToGetCertificateSubjectArrayOutput() GetCertificateSubjectArrayOutput {
	return i.ToGetCertificateSubjectArrayOutputWithContext(context.Background())
}

func (i GetCertificateSubjectArray) ToGetCertificateSubjectArrayOutputWithContext(ctx context.Context) GetCertificateSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateSubjectArrayOutput)
}

func (i GetCertificateSubjectArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateSubject] {
	return pulumix.Output[[]GetCertificateSubject]{
		OutputState: i.ToGetCertificateSubjectArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateSubjectOutput struct{ *pulumi.OutputState }

func (GetCertificateSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateSubject)(nil)).Elem()
}

func (o GetCertificateSubjectOutput) ToGetCertificateSubjectOutput() GetCertificateSubjectOutput {
	return o
}

func (o GetCertificateSubjectOutput) ToGetCertificateSubjectOutputWithContext(ctx context.Context) GetCertificateSubjectOutput {
	return o
}

func (o GetCertificateSubjectOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateSubject] {
	return pulumix.Output[GetCertificateSubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o GetCertificateSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.CommonName }).(pulumi.StringOutput)
}

// Country name (RDN C).
func (o GetCertificateSubjectOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.Country }).(pulumi.StringOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o GetCertificateSubjectOutput) DistinguishedNameQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.DistinguishedNameQualifier }).(pulumi.StringOutput)
}

// Domain component (RDN DC).
func (o GetCertificateSubjectOutput) DomainComponent() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.DomainComponent }).(pulumi.StringOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o GetCertificateSubjectOutput) GenerationQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.GenerationQualifier }).(pulumi.StringOutput)
}

// Personal given name (RDN G or GN).
func (o GetCertificateSubjectOutput) GivenName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.GivenName }).(pulumi.StringOutput)
}

// Personal initials.
func (o GetCertificateSubjectOutput) Initials() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.Initials }).(pulumi.StringOutput)
}

// Locality (RDN L).
func (o GetCertificateSubjectOutput) LocalityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.LocalityName }).(pulumi.StringOutput)
}

// Organization (RDN O).
func (o GetCertificateSubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.Organization }).(pulumi.StringOutput)
}

// Organizational unit (RDN OU).
func (o GetCertificateSubjectOutput) OrganizationalUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.OrganizationalUnit }).(pulumi.StringOutput)
}

// Subject pseudonym.
func (o GetCertificateSubjectOutput) Pseudonym() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.Pseudonym }).(pulumi.StringOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificateSubjectOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// State or province name (RDN ST or S).
func (o GetCertificateSubjectOutput) StateOrProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.StateOrProvinceName }).(pulumi.StringOutput)
}

// Street address (RDN STREET).
func (o GetCertificateSubjectOutput) Street() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.Street }).(pulumi.StringOutput)
}

// Personal surname (RDN SN).
func (o GetCertificateSubjectOutput) Surname() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.Surname }).(pulumi.StringOutput)
}

// Title (RDN T or TITLE).
func (o GetCertificateSubjectOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.Title }).(pulumi.StringOutput)
}

// User ID (RDN UID).
func (o GetCertificateSubjectOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateSubject) string { return v.UserId }).(pulumi.StringOutput)
}

type GetCertificateSubjectArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateSubject)(nil)).Elem()
}

func (o GetCertificateSubjectArrayOutput) ToGetCertificateSubjectArrayOutput() GetCertificateSubjectArrayOutput {
	return o
}

func (o GetCertificateSubjectArrayOutput) ToGetCertificateSubjectArrayOutputWithContext(ctx context.Context) GetCertificateSubjectArrayOutput {
	return o
}

func (o GetCertificateSubjectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateSubject] {
	return pulumix.Output[[]GetCertificateSubject]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateSubjectArrayOutput) Index(i pulumi.IntInput) GetCertificateSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateSubject {
		return vs[0].([]GetCertificateSubject)[vs[1].(int)]
	}).(GetCertificateSubjectOutput)
}

type GetCertificateVersionRevocationStatus struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason string `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation string `pulumi:"timeOfRevocation"`
}

// GetCertificateVersionRevocationStatusInput is an input type that accepts GetCertificateVersionRevocationStatusArgs and GetCertificateVersionRevocationStatusOutput values.
// You can construct a concrete instance of `GetCertificateVersionRevocationStatusInput` via:
//
//	GetCertificateVersionRevocationStatusArgs{...}
type GetCertificateVersionRevocationStatusInput interface {
	pulumi.Input

	ToGetCertificateVersionRevocationStatusOutput() GetCertificateVersionRevocationStatusOutput
	ToGetCertificateVersionRevocationStatusOutputWithContext(context.Context) GetCertificateVersionRevocationStatusOutput
}

type GetCertificateVersionRevocationStatusArgs struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason pulumi.StringInput `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation pulumi.StringInput `pulumi:"timeOfRevocation"`
}

func (GetCertificateVersionRevocationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificateVersionRevocationStatusArgs) ToGetCertificateVersionRevocationStatusOutput() GetCertificateVersionRevocationStatusOutput {
	return i.ToGetCertificateVersionRevocationStatusOutputWithContext(context.Background())
}

func (i GetCertificateVersionRevocationStatusArgs) ToGetCertificateVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificateVersionRevocationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionRevocationStatusOutput)
}

func (i GetCertificateVersionRevocationStatusArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionRevocationStatus] {
	return pulumix.Output[GetCertificateVersionRevocationStatus]{
		OutputState: i.ToGetCertificateVersionRevocationStatusOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateVersionRevocationStatusArrayInput is an input type that accepts GetCertificateVersionRevocationStatusArray and GetCertificateVersionRevocationStatusArrayOutput values.
// You can construct a concrete instance of `GetCertificateVersionRevocationStatusArrayInput` via:
//
//	GetCertificateVersionRevocationStatusArray{ GetCertificateVersionRevocationStatusArgs{...} }
type GetCertificateVersionRevocationStatusArrayInput interface {
	pulumi.Input

	ToGetCertificateVersionRevocationStatusArrayOutput() GetCertificateVersionRevocationStatusArrayOutput
	ToGetCertificateVersionRevocationStatusArrayOutputWithContext(context.Context) GetCertificateVersionRevocationStatusArrayOutput
}

type GetCertificateVersionRevocationStatusArray []GetCertificateVersionRevocationStatusInput

func (GetCertificateVersionRevocationStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificateVersionRevocationStatusArray) ToGetCertificateVersionRevocationStatusArrayOutput() GetCertificateVersionRevocationStatusArrayOutput {
	return i.ToGetCertificateVersionRevocationStatusArrayOutputWithContext(context.Background())
}

func (i GetCertificateVersionRevocationStatusArray) ToGetCertificateVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateVersionRevocationStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionRevocationStatusArrayOutput)
}

func (i GetCertificateVersionRevocationStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificateVersionRevocationStatus]{
		OutputState: i.ToGetCertificateVersionRevocationStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateVersionRevocationStatusOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionRevocationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificateVersionRevocationStatusOutput) ToGetCertificateVersionRevocationStatusOutput() GetCertificateVersionRevocationStatusOutput {
	return o
}

func (o GetCertificateVersionRevocationStatusOutput) ToGetCertificateVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificateVersionRevocationStatusOutput {
	return o
}

func (o GetCertificateVersionRevocationStatusOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionRevocationStatus] {
	return pulumix.Output[GetCertificateVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

// The reason the certificate or certificate authority (CA) was revoked.
func (o GetCertificateVersionRevocationStatusOutput) RevocationReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionRevocationStatus) string { return v.RevocationReason }).(pulumi.StringOutput)
}

// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateVersionRevocationStatusOutput) TimeOfRevocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionRevocationStatus) string { return v.TimeOfRevocation }).(pulumi.StringOutput)
}

type GetCertificateVersionRevocationStatusArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionRevocationStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificateVersionRevocationStatusArrayOutput) ToGetCertificateVersionRevocationStatusArrayOutput() GetCertificateVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateVersionRevocationStatusArrayOutput) ToGetCertificateVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateVersionRevocationStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificateVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateVersionRevocationStatusArrayOutput) Index(i pulumi.IntInput) GetCertificateVersionRevocationStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateVersionRevocationStatus {
		return vs[0].([]GetCertificateVersionRevocationStatus)[vs[1].(int)]
	}).(GetCertificateVersionRevocationStatusOutput)
}

type GetCertificateVersionSubjectAlternativeName struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type string `pulumi:"type"`
	// The subject alternative name.
	Value string `pulumi:"value"`
}

// GetCertificateVersionSubjectAlternativeNameInput is an input type that accepts GetCertificateVersionSubjectAlternativeNameArgs and GetCertificateVersionSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetCertificateVersionSubjectAlternativeNameInput` via:
//
//	GetCertificateVersionSubjectAlternativeNameArgs{...}
type GetCertificateVersionSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetCertificateVersionSubjectAlternativeNameOutput() GetCertificateVersionSubjectAlternativeNameOutput
	ToGetCertificateVersionSubjectAlternativeNameOutputWithContext(context.Context) GetCertificateVersionSubjectAlternativeNameOutput
}

type GetCertificateVersionSubjectAlternativeNameArgs struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type pulumi.StringInput `pulumi:"type"`
	// The subject alternative name.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCertificateVersionSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificateVersionSubjectAlternativeNameArgs) ToGetCertificateVersionSubjectAlternativeNameOutput() GetCertificateVersionSubjectAlternativeNameOutput {
	return i.ToGetCertificateVersionSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetCertificateVersionSubjectAlternativeNameArgs) ToGetCertificateVersionSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificateVersionSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionSubjectAlternativeNameOutput)
}

func (i GetCertificateVersionSubjectAlternativeNameArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionSubjectAlternativeName] {
	return pulumix.Output[GetCertificateVersionSubjectAlternativeName]{
		OutputState: i.ToGetCertificateVersionSubjectAlternativeNameOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateVersionSubjectAlternativeNameArrayInput is an input type that accepts GetCertificateVersionSubjectAlternativeNameArray and GetCertificateVersionSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetCertificateVersionSubjectAlternativeNameArrayInput` via:
//
//	GetCertificateVersionSubjectAlternativeNameArray{ GetCertificateVersionSubjectAlternativeNameArgs{...} }
type GetCertificateVersionSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetCertificateVersionSubjectAlternativeNameArrayOutput() GetCertificateVersionSubjectAlternativeNameArrayOutput
	ToGetCertificateVersionSubjectAlternativeNameArrayOutputWithContext(context.Context) GetCertificateVersionSubjectAlternativeNameArrayOutput
}

type GetCertificateVersionSubjectAlternativeNameArray []GetCertificateVersionSubjectAlternativeNameInput

func (GetCertificateVersionSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificateVersionSubjectAlternativeNameArray) ToGetCertificateVersionSubjectAlternativeNameArrayOutput() GetCertificateVersionSubjectAlternativeNameArrayOutput {
	return i.ToGetCertificateVersionSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetCertificateVersionSubjectAlternativeNameArray) ToGetCertificateVersionSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificateVersionSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionSubjectAlternativeNameArrayOutput)
}

func (i GetCertificateVersionSubjectAlternativeNameArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificateVersionSubjectAlternativeName]{
		OutputState: i.ToGetCertificateVersionSubjectAlternativeNameArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateVersionSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificateVersionSubjectAlternativeNameOutput) ToGetCertificateVersionSubjectAlternativeNameOutput() GetCertificateVersionSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificateVersionSubjectAlternativeNameOutput) ToGetCertificateVersionSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificateVersionSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificateVersionSubjectAlternativeNameOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionSubjectAlternativeName] {
	return pulumix.Output[GetCertificateVersionSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
func (o GetCertificateVersionSubjectAlternativeNameOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionSubjectAlternativeName) string { return v.Type }).(pulumi.StringOutput)
}

// The subject alternative name.
func (o GetCertificateVersionSubjectAlternativeNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionSubjectAlternativeName) string { return v.Value }).(pulumi.StringOutput)
}

type GetCertificateVersionSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificateVersionSubjectAlternativeNameArrayOutput) ToGetCertificateVersionSubjectAlternativeNameArrayOutput() GetCertificateVersionSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificateVersionSubjectAlternativeNameArrayOutput) ToGetCertificateVersionSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificateVersionSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificateVersionSubjectAlternativeNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificateVersionSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateVersionSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetCertificateVersionSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateVersionSubjectAlternativeName {
		return vs[0].([]GetCertificateVersionSubjectAlternativeName)[vs[1].(int)]
	}).(GetCertificateVersionSubjectAlternativeNameOutput)
}

type GetCertificateVersionValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificateVersionValidityInput is an input type that accepts GetCertificateVersionValidityArgs and GetCertificateVersionValidityOutput values.
// You can construct a concrete instance of `GetCertificateVersionValidityInput` via:
//
//	GetCertificateVersionValidityArgs{...}
type GetCertificateVersionValidityInput interface {
	pulumi.Input

	ToGetCertificateVersionValidityOutput() GetCertificateVersionValidityOutput
	ToGetCertificateVersionValidityOutputWithContext(context.Context) GetCertificateVersionValidityOutput
}

type GetCertificateVersionValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificateVersionValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionValidity)(nil)).Elem()
}

func (i GetCertificateVersionValidityArgs) ToGetCertificateVersionValidityOutput() GetCertificateVersionValidityOutput {
	return i.ToGetCertificateVersionValidityOutputWithContext(context.Background())
}

func (i GetCertificateVersionValidityArgs) ToGetCertificateVersionValidityOutputWithContext(ctx context.Context) GetCertificateVersionValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionValidityOutput)
}

func (i GetCertificateVersionValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionValidity] {
	return pulumix.Output[GetCertificateVersionValidity]{
		OutputState: i.ToGetCertificateVersionValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateVersionValidityArrayInput is an input type that accepts GetCertificateVersionValidityArray and GetCertificateVersionValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificateVersionValidityArrayInput` via:
//
//	GetCertificateVersionValidityArray{ GetCertificateVersionValidityArgs{...} }
type GetCertificateVersionValidityArrayInput interface {
	pulumi.Input

	ToGetCertificateVersionValidityArrayOutput() GetCertificateVersionValidityArrayOutput
	ToGetCertificateVersionValidityArrayOutputWithContext(context.Context) GetCertificateVersionValidityArrayOutput
}

type GetCertificateVersionValidityArray []GetCertificateVersionValidityInput

func (GetCertificateVersionValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionValidity)(nil)).Elem()
}

func (i GetCertificateVersionValidityArray) ToGetCertificateVersionValidityArrayOutput() GetCertificateVersionValidityArrayOutput {
	return i.ToGetCertificateVersionValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificateVersionValidityArray) ToGetCertificateVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificateVersionValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionValidityArrayOutput)
}

func (i GetCertificateVersionValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionValidity] {
	return pulumix.Output[[]GetCertificateVersionValidity]{
		OutputState: i.ToGetCertificateVersionValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateVersionValidityOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionValidity)(nil)).Elem()
}

func (o GetCertificateVersionValidityOutput) ToGetCertificateVersionValidityOutput() GetCertificateVersionValidityOutput {
	return o
}

func (o GetCertificateVersionValidityOutput) ToGetCertificateVersionValidityOutputWithContext(ctx context.Context) GetCertificateVersionValidityOutput {
	return o
}

func (o GetCertificateVersionValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionValidity] {
	return pulumix.Output[GetCertificateVersionValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateVersionValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionValidity) string { return v.TimeOfValidityNotAfter }).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateVersionValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionValidity) string { return v.TimeOfValidityNotBefore }).(pulumi.StringOutput)
}

type GetCertificateVersionValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionValidity)(nil)).Elem()
}

func (o GetCertificateVersionValidityArrayOutput) ToGetCertificateVersionValidityArrayOutput() GetCertificateVersionValidityArrayOutput {
	return o
}

func (o GetCertificateVersionValidityArrayOutput) ToGetCertificateVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificateVersionValidityArrayOutput {
	return o
}

func (o GetCertificateVersionValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionValidity] {
	return pulumix.Output[[]GetCertificateVersionValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateVersionValidityArrayOutput) Index(i pulumi.IntInput) GetCertificateVersionValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateVersionValidity {
		return vs[0].([]GetCertificateVersionValidity)[vs[1].(int)]
	}).(GetCertificateVersionValidityOutput)
}

type GetCertificateVersionsCertificateVersionCollection struct {
	// A list of certificate version summary objects.
	Items []GetCertificateVersionsCertificateVersionCollectionItem `pulumi:"items"`
}

// GetCertificateVersionsCertificateVersionCollectionInput is an input type that accepts GetCertificateVersionsCertificateVersionCollectionArgs and GetCertificateVersionsCertificateVersionCollectionOutput values.
// You can construct a concrete instance of `GetCertificateVersionsCertificateVersionCollectionInput` via:
//
//	GetCertificateVersionsCertificateVersionCollectionArgs{...}
type GetCertificateVersionsCertificateVersionCollectionInput interface {
	pulumi.Input

	ToGetCertificateVersionsCertificateVersionCollectionOutput() GetCertificateVersionsCertificateVersionCollectionOutput
	ToGetCertificateVersionsCertificateVersionCollectionOutputWithContext(context.Context) GetCertificateVersionsCertificateVersionCollectionOutput
}

type GetCertificateVersionsCertificateVersionCollectionArgs struct {
	// A list of certificate version summary objects.
	Items GetCertificateVersionsCertificateVersionCollectionItemArrayInput `pulumi:"items"`
}

func (GetCertificateVersionsCertificateVersionCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollection)(nil)).Elem()
}

func (i GetCertificateVersionsCertificateVersionCollectionArgs) ToGetCertificateVersionsCertificateVersionCollectionOutput() GetCertificateVersionsCertificateVersionCollectionOutput {
	return i.ToGetCertificateVersionsCertificateVersionCollectionOutputWithContext(context.Background())
}

func (i GetCertificateVersionsCertificateVersionCollectionArgs) ToGetCertificateVersionsCertificateVersionCollectionOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsCertificateVersionCollectionOutput)
}

func (i GetCertificateVersionsCertificateVersionCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsCertificateVersionCollection] {
	return pulumix.Output[GetCertificateVersionsCertificateVersionCollection]{
		OutputState: i.ToGetCertificateVersionsCertificateVersionCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateVersionsCertificateVersionCollectionArrayInput is an input type that accepts GetCertificateVersionsCertificateVersionCollectionArray and GetCertificateVersionsCertificateVersionCollectionArrayOutput values.
// You can construct a concrete instance of `GetCertificateVersionsCertificateVersionCollectionArrayInput` via:
//
//	GetCertificateVersionsCertificateVersionCollectionArray{ GetCertificateVersionsCertificateVersionCollectionArgs{...} }
type GetCertificateVersionsCertificateVersionCollectionArrayInput interface {
	pulumi.Input

	ToGetCertificateVersionsCertificateVersionCollectionArrayOutput() GetCertificateVersionsCertificateVersionCollectionArrayOutput
	ToGetCertificateVersionsCertificateVersionCollectionArrayOutputWithContext(context.Context) GetCertificateVersionsCertificateVersionCollectionArrayOutput
}

type GetCertificateVersionsCertificateVersionCollectionArray []GetCertificateVersionsCertificateVersionCollectionInput

func (GetCertificateVersionsCertificateVersionCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsCertificateVersionCollection)(nil)).Elem()
}

func (i GetCertificateVersionsCertificateVersionCollectionArray) ToGetCertificateVersionsCertificateVersionCollectionArrayOutput() GetCertificateVersionsCertificateVersionCollectionArrayOutput {
	return i.ToGetCertificateVersionsCertificateVersionCollectionArrayOutputWithContext(context.Background())
}

func (i GetCertificateVersionsCertificateVersionCollectionArray) ToGetCertificateVersionsCertificateVersionCollectionArrayOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsCertificateVersionCollectionArrayOutput)
}

func (i GetCertificateVersionsCertificateVersionCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsCertificateVersionCollection] {
	return pulumix.Output[[]GetCertificateVersionsCertificateVersionCollection]{
		OutputState: i.ToGetCertificateVersionsCertificateVersionCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateVersionsCertificateVersionCollectionOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsCertificateVersionCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollection)(nil)).Elem()
}

func (o GetCertificateVersionsCertificateVersionCollectionOutput) ToGetCertificateVersionsCertificateVersionCollectionOutput() GetCertificateVersionsCertificateVersionCollectionOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionOutput) ToGetCertificateVersionsCertificateVersionCollectionOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsCertificateVersionCollection] {
	return pulumix.Output[GetCertificateVersionsCertificateVersionCollection]{
		OutputState: o.OutputState,
	}
}

// A list of certificate version summary objects.
func (o GetCertificateVersionsCertificateVersionCollectionOutput) Items() GetCertificateVersionsCertificateVersionCollectionItemArrayOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollection) []GetCertificateVersionsCertificateVersionCollectionItem {
		return v.Items
	}).(GetCertificateVersionsCertificateVersionCollectionItemArrayOutput)
}

type GetCertificateVersionsCertificateVersionCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsCertificateVersionCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsCertificateVersionCollection)(nil)).Elem()
}

func (o GetCertificateVersionsCertificateVersionCollectionArrayOutput) ToGetCertificateVersionsCertificateVersionCollectionArrayOutput() GetCertificateVersionsCertificateVersionCollectionArrayOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionArrayOutput) ToGetCertificateVersionsCertificateVersionCollectionArrayOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionArrayOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsCertificateVersionCollection] {
	return pulumix.Output[[]GetCertificateVersionsCertificateVersionCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateVersionsCertificateVersionCollectionArrayOutput) Index(i pulumi.IntInput) GetCertificateVersionsCertificateVersionCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateVersionsCertificateVersionCollection {
		return vs[0].([]GetCertificateVersionsCertificateVersionCollection)[vs[1].(int)]
	}).(GetCertificateVersionsCertificateVersionCollectionOutput)
}

type GetCertificateVersionsCertificateVersionCollectionItem struct {
	// The OCID of the certificate.
	CertificateId string `pulumi:"certificateId"`
	// The version number of the issuing certificate authority (CA).
	IssuerCaVersionNumber string `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses []GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus `pulumi:"revocationStatuses"`
	// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
	SerialNumber string `pulumi:"serialNumber"`
	// A list of rotation states for this certificate version.
	Stages []string `pulumi:"stages"`
	// A list of subject alternative names.
	SubjectAlternativeNames []GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	// A optional property indicating the time when the certificate version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificateVersionsCertificateVersionCollectionItemValidity `pulumi:"validities"`
	// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
	VersionName string `pulumi:"versionName"`
	// A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
	VersionNumber string `pulumi:"versionNumber"`
}

// GetCertificateVersionsCertificateVersionCollectionItemInput is an input type that accepts GetCertificateVersionsCertificateVersionCollectionItemArgs and GetCertificateVersionsCertificateVersionCollectionItemOutput values.
// You can construct a concrete instance of `GetCertificateVersionsCertificateVersionCollectionItemInput` via:
//
//	GetCertificateVersionsCertificateVersionCollectionItemArgs{...}
type GetCertificateVersionsCertificateVersionCollectionItemInput interface {
	pulumi.Input

	ToGetCertificateVersionsCertificateVersionCollectionItemOutput() GetCertificateVersionsCertificateVersionCollectionItemOutput
	ToGetCertificateVersionsCertificateVersionCollectionItemOutputWithContext(context.Context) GetCertificateVersionsCertificateVersionCollectionItemOutput
}

type GetCertificateVersionsCertificateVersionCollectionItemArgs struct {
	// The OCID of the certificate.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// The version number of the issuing certificate authority (CA).
	IssuerCaVersionNumber pulumi.StringInput `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayInput `pulumi:"revocationStatuses"`
	// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// A list of rotation states for this certificate version.
	Stages pulumi.StringArrayInput `pulumi:"stages"`
	// A list of subject alternative names.
	SubjectAlternativeNames GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	// A optional property indicating the time when the certificate version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities GetCertificateVersionsCertificateVersionCollectionItemValidityArrayInput `pulumi:"validities"`
	// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
	VersionName pulumi.StringInput `pulumi:"versionName"`
	// A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
	VersionNumber pulumi.StringInput `pulumi:"versionNumber"`
}

func (GetCertificateVersionsCertificateVersionCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItem)(nil)).Elem()
}

func (i GetCertificateVersionsCertificateVersionCollectionItemArgs) ToGetCertificateVersionsCertificateVersionCollectionItemOutput() GetCertificateVersionsCertificateVersionCollectionItemOutput {
	return i.ToGetCertificateVersionsCertificateVersionCollectionItemOutputWithContext(context.Background())
}

func (i GetCertificateVersionsCertificateVersionCollectionItemArgs) ToGetCertificateVersionsCertificateVersionCollectionItemOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsCertificateVersionCollectionItemOutput)
}

func (i GetCertificateVersionsCertificateVersionCollectionItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItem] {
	return pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItem]{
		OutputState: i.ToGetCertificateVersionsCertificateVersionCollectionItemOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateVersionsCertificateVersionCollectionItemArrayInput is an input type that accepts GetCertificateVersionsCertificateVersionCollectionItemArray and GetCertificateVersionsCertificateVersionCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetCertificateVersionsCertificateVersionCollectionItemArrayInput` via:
//
//	GetCertificateVersionsCertificateVersionCollectionItemArray{ GetCertificateVersionsCertificateVersionCollectionItemArgs{...} }
type GetCertificateVersionsCertificateVersionCollectionItemArrayInput interface {
	pulumi.Input

	ToGetCertificateVersionsCertificateVersionCollectionItemArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemArrayOutput
	ToGetCertificateVersionsCertificateVersionCollectionItemArrayOutputWithContext(context.Context) GetCertificateVersionsCertificateVersionCollectionItemArrayOutput
}

type GetCertificateVersionsCertificateVersionCollectionItemArray []GetCertificateVersionsCertificateVersionCollectionItemInput

func (GetCertificateVersionsCertificateVersionCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsCertificateVersionCollectionItem)(nil)).Elem()
}

func (i GetCertificateVersionsCertificateVersionCollectionItemArray) ToGetCertificateVersionsCertificateVersionCollectionItemArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemArrayOutput {
	return i.ToGetCertificateVersionsCertificateVersionCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetCertificateVersionsCertificateVersionCollectionItemArray) ToGetCertificateVersionsCertificateVersionCollectionItemArrayOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsCertificateVersionCollectionItemArrayOutput)
}

func (i GetCertificateVersionsCertificateVersionCollectionItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItem] {
	return pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItem]{
		OutputState: i.ToGetCertificateVersionsCertificateVersionCollectionItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateVersionsCertificateVersionCollectionItemOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsCertificateVersionCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItem)(nil)).Elem()
}

func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) ToGetCertificateVersionsCertificateVersionCollectionItemOutput() GetCertificateVersionsCertificateVersionCollectionItemOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) ToGetCertificateVersionsCertificateVersionCollectionItemOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItem] {
	return pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItem]{
		OutputState: o.OutputState,
	}
}

// The OCID of the certificate.
func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItem) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The version number of the issuing certificate authority (CA).
func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) IssuerCaVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItem) string { return v.IssuerCaVersionNumber }).(pulumi.StringOutput)
}

// The current revocation status of the entity.
func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) RevocationStatuses() GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItem) []GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus {
		return v.RevocationStatuses
	}).(GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput)
}

// A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItem) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// A list of rotation states for this certificate version.
func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItem) []string { return v.Stages }).(pulumi.StringArrayOutput)
}

// A list of subject alternative names.
func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) SubjectAlternativeNames() GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItem) []GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput)
}

// A optional property indicating the time when the certificate version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItem) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) Validities() GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItem) []GetCertificateVersionsCertificateVersionCollectionItemValidity {
		return v.Validities
	}).(GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput)
}

// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItem) string { return v.VersionName }).(pulumi.StringOutput)
}

// A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
func (o GetCertificateVersionsCertificateVersionCollectionItemOutput) VersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItem) string { return v.VersionNumber }).(pulumi.StringOutput)
}

type GetCertificateVersionsCertificateVersionCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsCertificateVersionCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsCertificateVersionCollectionItem)(nil)).Elem()
}

func (o GetCertificateVersionsCertificateVersionCollectionItemArrayOutput) ToGetCertificateVersionsCertificateVersionCollectionItemArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemArrayOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemArrayOutput) ToGetCertificateVersionsCertificateVersionCollectionItemArrayOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemArrayOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItem] {
	return pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateVersionsCertificateVersionCollectionItemArrayOutput) Index(i pulumi.IntInput) GetCertificateVersionsCertificateVersionCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateVersionsCertificateVersionCollectionItem {
		return vs[0].([]GetCertificateVersionsCertificateVersionCollectionItem)[vs[1].(int)]
	}).(GetCertificateVersionsCertificateVersionCollectionItemOutput)
}

type GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason string `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation string `pulumi:"timeOfRevocation"`
}

// GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusInput is an input type that accepts GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArgs and GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput values.
// You can construct a concrete instance of `GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusInput` via:
//
//	GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArgs{...}
type GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusInput interface {
	pulumi.Input

	ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput() GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput
	ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutputWithContext(context.Context) GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput
}

type GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArgs struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason pulumi.StringInput `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation pulumi.StringInput `pulumi:"timeOfRevocation"`
}

func (GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus)(nil)).Elem()
}

func (i GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArgs) ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput() GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput {
	return i.ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutputWithContext(context.Background())
}

func (i GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArgs) ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput)
}

func (i GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus] {
	return pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus]{
		OutputState: i.ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayInput is an input type that accepts GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArray and GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput values.
// You can construct a concrete instance of `GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayInput` via:
//
//	GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArray{ GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArgs{...} }
type GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayInput interface {
	pulumi.Input

	ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput
	ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutputWithContext(context.Context) GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput
}

type GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArray []GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusInput

func (GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus)(nil)).Elem()
}

func (i GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArray) ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput {
	return i.ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutputWithContext(context.Background())
}

func (i GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArray) ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput)
}

func (i GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus] {
	return pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus]{
		OutputState: i.ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus)(nil)).Elem()
}

func (o GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput) ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput() GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput) ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus] {
	return pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus]{
		OutputState: o.OutputState,
	}
}

// The reason the certificate or certificate authority (CA) was revoked.
func (o GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput) RevocationReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus) string {
		return v.RevocationReason
	}).(pulumi.StringOutput)
}

// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput) TimeOfRevocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus) string {
		return v.TimeOfRevocation
	}).(pulumi.StringOutput)
}

type GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus)(nil)).Elem()
}

func (o GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput) ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput) ToGetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus] {
	return pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput) Index(i pulumi.IntInput) GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus {
		return vs[0].([]GetCertificateVersionsCertificateVersionCollectionItemRevocationStatus)[vs[1].(int)]
	}).(GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput)
}

type GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type string `pulumi:"type"`
	// The subject alternative name.
	Value string `pulumi:"value"`
}

// GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameInput is an input type that accepts GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArgs and GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameInput` via:
//
//	GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArgs{...}
type GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput() GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput
	ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutputWithContext(context.Context) GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput
}

type GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArgs struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type pulumi.StringInput `pulumi:"type"`
	// The subject alternative name.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArgs) ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput() GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput {
	return i.ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArgs) ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput)
}

func (i GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName] {
	return pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName]{
		OutputState: i.ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayInput is an input type that accepts GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArray and GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayInput` via:
//
//	GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArray{ GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArgs{...} }
type GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput
	ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutputWithContext(context.Context) GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput
}

type GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArray []GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameInput

func (GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArray) ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput {
	return i.ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArray) ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput)
}

func (i GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName]{
		OutputState: i.ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput) ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput() GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput) ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName] {
	return pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
func (o GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName) string {
		return v.Type
	}).(pulumi.StringOutput)
}

// The subject alternative name.
func (o GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput) ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput) ToGetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName {
		return vs[0].([]GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeName)[vs[1].(int)]
	}).(GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput)
}

type GetCertificateVersionsCertificateVersionCollectionItemValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificateVersionsCertificateVersionCollectionItemValidityInput is an input type that accepts GetCertificateVersionsCertificateVersionCollectionItemValidityArgs and GetCertificateVersionsCertificateVersionCollectionItemValidityOutput values.
// You can construct a concrete instance of `GetCertificateVersionsCertificateVersionCollectionItemValidityInput` via:
//
//	GetCertificateVersionsCertificateVersionCollectionItemValidityArgs{...}
type GetCertificateVersionsCertificateVersionCollectionItemValidityInput interface {
	pulumi.Input

	ToGetCertificateVersionsCertificateVersionCollectionItemValidityOutput() GetCertificateVersionsCertificateVersionCollectionItemValidityOutput
	ToGetCertificateVersionsCertificateVersionCollectionItemValidityOutputWithContext(context.Context) GetCertificateVersionsCertificateVersionCollectionItemValidityOutput
}

type GetCertificateVersionsCertificateVersionCollectionItemValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificateVersionsCertificateVersionCollectionItemValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemValidity)(nil)).Elem()
}

func (i GetCertificateVersionsCertificateVersionCollectionItemValidityArgs) ToGetCertificateVersionsCertificateVersionCollectionItemValidityOutput() GetCertificateVersionsCertificateVersionCollectionItemValidityOutput {
	return i.ToGetCertificateVersionsCertificateVersionCollectionItemValidityOutputWithContext(context.Background())
}

func (i GetCertificateVersionsCertificateVersionCollectionItemValidityArgs) ToGetCertificateVersionsCertificateVersionCollectionItemValidityOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsCertificateVersionCollectionItemValidityOutput)
}

func (i GetCertificateVersionsCertificateVersionCollectionItemValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemValidity] {
	return pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemValidity]{
		OutputState: i.ToGetCertificateVersionsCertificateVersionCollectionItemValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateVersionsCertificateVersionCollectionItemValidityArrayInput is an input type that accepts GetCertificateVersionsCertificateVersionCollectionItemValidityArray and GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificateVersionsCertificateVersionCollectionItemValidityArrayInput` via:
//
//	GetCertificateVersionsCertificateVersionCollectionItemValidityArray{ GetCertificateVersionsCertificateVersionCollectionItemValidityArgs{...} }
type GetCertificateVersionsCertificateVersionCollectionItemValidityArrayInput interface {
	pulumi.Input

	ToGetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput
	ToGetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutputWithContext(context.Context) GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput
}

type GetCertificateVersionsCertificateVersionCollectionItemValidityArray []GetCertificateVersionsCertificateVersionCollectionItemValidityInput

func (GetCertificateVersionsCertificateVersionCollectionItemValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsCertificateVersionCollectionItemValidity)(nil)).Elem()
}

func (i GetCertificateVersionsCertificateVersionCollectionItemValidityArray) ToGetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput {
	return i.ToGetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificateVersionsCertificateVersionCollectionItemValidityArray) ToGetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput)
}

func (i GetCertificateVersionsCertificateVersionCollectionItemValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemValidity] {
	return pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemValidity]{
		OutputState: i.ToGetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateVersionsCertificateVersionCollectionItemValidityOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsCertificateVersionCollectionItemValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemValidity)(nil)).Elem()
}

func (o GetCertificateVersionsCertificateVersionCollectionItemValidityOutput) ToGetCertificateVersionsCertificateVersionCollectionItemValidityOutput() GetCertificateVersionsCertificateVersionCollectionItemValidityOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemValidityOutput) ToGetCertificateVersionsCertificateVersionCollectionItemValidityOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemValidityOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemValidity] {
	return pulumix.Output[GetCertificateVersionsCertificateVersionCollectionItemValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateVersionsCertificateVersionCollectionItemValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItemValidity) string {
		return v.TimeOfValidityNotAfter
	}).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificateVersionsCertificateVersionCollectionItemValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsCertificateVersionCollectionItemValidity) string {
		return v.TimeOfValidityNotBefore
	}).(pulumi.StringOutput)
}

type GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsCertificateVersionCollectionItemValidity)(nil)).Elem()
}

func (o GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput) ToGetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput() GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput) ToGetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutputWithContext(ctx context.Context) GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput {
	return o
}

func (o GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemValidity] {
	return pulumix.Output[[]GetCertificateVersionsCertificateVersionCollectionItemValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput) Index(i pulumi.IntInput) GetCertificateVersionsCertificateVersionCollectionItemValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateVersionsCertificateVersionCollectionItemValidity {
		return vs[0].([]GetCertificateVersionsCertificateVersionCollectionItemValidity)[vs[1].(int)]
	}).(GetCertificateVersionsCertificateVersionCollectionItemValidityOutput)
}

type GetCertificateVersionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetCertificateVersionsFilterInput is an input type that accepts GetCertificateVersionsFilterArgs and GetCertificateVersionsFilterOutput values.
// You can construct a concrete instance of `GetCertificateVersionsFilterInput` via:
//
//	GetCertificateVersionsFilterArgs{...}
type GetCertificateVersionsFilterInput interface {
	pulumi.Input

	ToGetCertificateVersionsFilterOutput() GetCertificateVersionsFilterOutput
	ToGetCertificateVersionsFilterOutputWithContext(context.Context) GetCertificateVersionsFilterOutput
}

type GetCertificateVersionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCertificateVersionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsFilter)(nil)).Elem()
}

func (i GetCertificateVersionsFilterArgs) ToGetCertificateVersionsFilterOutput() GetCertificateVersionsFilterOutput {
	return i.ToGetCertificateVersionsFilterOutputWithContext(context.Background())
}

func (i GetCertificateVersionsFilterArgs) ToGetCertificateVersionsFilterOutputWithContext(ctx context.Context) GetCertificateVersionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsFilterOutput)
}

func (i GetCertificateVersionsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsFilter] {
	return pulumix.Output[GetCertificateVersionsFilter]{
		OutputState: i.ToGetCertificateVersionsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetCertificateVersionsFilterArrayInput is an input type that accepts GetCertificateVersionsFilterArray and GetCertificateVersionsFilterArrayOutput values.
// You can construct a concrete instance of `GetCertificateVersionsFilterArrayInput` via:
//
//	GetCertificateVersionsFilterArray{ GetCertificateVersionsFilterArgs{...} }
type GetCertificateVersionsFilterArrayInput interface {
	pulumi.Input

	ToGetCertificateVersionsFilterArrayOutput() GetCertificateVersionsFilterArrayOutput
	ToGetCertificateVersionsFilterArrayOutputWithContext(context.Context) GetCertificateVersionsFilterArrayOutput
}

type GetCertificateVersionsFilterArray []GetCertificateVersionsFilterInput

func (GetCertificateVersionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsFilter)(nil)).Elem()
}

func (i GetCertificateVersionsFilterArray) ToGetCertificateVersionsFilterArrayOutput() GetCertificateVersionsFilterArrayOutput {
	return i.ToGetCertificateVersionsFilterArrayOutputWithContext(context.Background())
}

func (i GetCertificateVersionsFilterArray) ToGetCertificateVersionsFilterArrayOutputWithContext(ctx context.Context) GetCertificateVersionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateVersionsFilterArrayOutput)
}

func (i GetCertificateVersionsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsFilter] {
	return pulumix.Output[[]GetCertificateVersionsFilter]{
		OutputState: i.ToGetCertificateVersionsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificateVersionsFilterOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateVersionsFilter)(nil)).Elem()
}

func (o GetCertificateVersionsFilterOutput) ToGetCertificateVersionsFilterOutput() GetCertificateVersionsFilterOutput {
	return o
}

func (o GetCertificateVersionsFilterOutput) ToGetCertificateVersionsFilterOutputWithContext(ctx context.Context) GetCertificateVersionsFilterOutput {
	return o
}

func (o GetCertificateVersionsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificateVersionsFilter] {
	return pulumix.Output[GetCertificateVersionsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateVersionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateVersionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCertificateVersionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCertificateVersionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetCertificateVersionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateVersionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCertificateVersionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateVersionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateVersionsFilter)(nil)).Elem()
}

func (o GetCertificateVersionsFilterArrayOutput) ToGetCertificateVersionsFilterArrayOutput() GetCertificateVersionsFilterArrayOutput {
	return o
}

func (o GetCertificateVersionsFilterArrayOutput) ToGetCertificateVersionsFilterArrayOutputWithContext(ctx context.Context) GetCertificateVersionsFilterArrayOutput {
	return o
}

func (o GetCertificateVersionsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificateVersionsFilter] {
	return pulumix.Output[[]GetCertificateVersionsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificateVersionsFilterArrayOutput) Index(i pulumi.IntInput) GetCertificateVersionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateVersionsFilter {
		return vs[0].([]GetCertificateVersionsFilter)[vs[1].(int)]
	}).(GetCertificateVersionsFilterOutput)
}

type GetCertificatesCertificateCollection struct {
	Items []GetCertificatesCertificateCollectionItem `pulumi:"items"`
}

// GetCertificatesCertificateCollectionInput is an input type that accepts GetCertificatesCertificateCollectionArgs and GetCertificatesCertificateCollectionOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionInput` via:
//
//	GetCertificatesCertificateCollectionArgs{...}
type GetCertificatesCertificateCollectionInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionOutput() GetCertificatesCertificateCollectionOutput
	ToGetCertificatesCertificateCollectionOutputWithContext(context.Context) GetCertificatesCertificateCollectionOutput
}

type GetCertificatesCertificateCollectionArgs struct {
	Items GetCertificatesCertificateCollectionItemArrayInput `pulumi:"items"`
}

func (GetCertificatesCertificateCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollection)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionArgs) ToGetCertificatesCertificateCollectionOutput() GetCertificatesCertificateCollectionOutput {
	return i.ToGetCertificatesCertificateCollectionOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionArgs) ToGetCertificatesCertificateCollectionOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionOutput)
}

func (i GetCertificatesCertificateCollectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollection] {
	return pulumix.Output[GetCertificatesCertificateCollection]{
		OutputState: i.ToGetCertificatesCertificateCollectionOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionArrayInput is an input type that accepts GetCertificatesCertificateCollectionArray and GetCertificatesCertificateCollectionArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionArrayInput` via:
//
//	GetCertificatesCertificateCollectionArray{ GetCertificatesCertificateCollectionArgs{...} }
type GetCertificatesCertificateCollectionArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionArrayOutput() GetCertificatesCertificateCollectionArrayOutput
	ToGetCertificatesCertificateCollectionArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionArrayOutput
}

type GetCertificatesCertificateCollectionArray []GetCertificatesCertificateCollectionInput

func (GetCertificatesCertificateCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollection)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionArray) ToGetCertificatesCertificateCollectionArrayOutput() GetCertificatesCertificateCollectionArrayOutput {
	return i.ToGetCertificatesCertificateCollectionArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionArray) ToGetCertificatesCertificateCollectionArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionArrayOutput)
}

func (i GetCertificatesCertificateCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollection] {
	return pulumix.Output[[]GetCertificatesCertificateCollection]{
		OutputState: i.ToGetCertificatesCertificateCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollection)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionOutput) ToGetCertificatesCertificateCollectionOutput() GetCertificatesCertificateCollectionOutput {
	return o
}

func (o GetCertificatesCertificateCollectionOutput) ToGetCertificatesCertificateCollectionOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionOutput {
	return o
}

func (o GetCertificatesCertificateCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollection] {
	return pulumix.Output[GetCertificatesCertificateCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionOutput) Items() GetCertificatesCertificateCollectionItemArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollection) []GetCertificatesCertificateCollectionItem {
		return v.Items
	}).(GetCertificatesCertificateCollectionItemArrayOutput)
}

type GetCertificatesCertificateCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollection)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionArrayOutput) ToGetCertificatesCertificateCollectionArrayOutput() GetCertificatesCertificateCollectionArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionArrayOutput) ToGetCertificatesCertificateCollectionArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollection] {
	return pulumix.Output[[]GetCertificatesCertificateCollection]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollection {
		return vs[0].([]GetCertificatesCertificateCollection)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionOutput)
}

type GetCertificatesCertificateCollectionItem struct {
	CertificateConfigs []GetCertificatesCertificateCollectionItemCertificateConfig `pulumi:"certificateConfigs"`
	// The name of the profile used to create the certificate, which depends on the type of certificate you need.
	CertificateProfileType string `pulumi:"certificateProfileType"`
	// The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails []GetCertificatesCertificateCollectionItemCertificateRevocationListDetail `pulumi:"certificateRevocationListDetails"`
	// A list of rules that control how the certificate is used and managed.
	CertificateRules []GetCertificatesCertificateCollectionItemCertificateRule `pulumi:"certificateRules"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// The origin of the certificate.
	ConfigType string `pulumi:"configType"`
	// The details of the certificate version. This object does not contain the certificate contents.
	CurrentVersions []GetCertificatesCertificateCollectionItemCurrentVersion `pulumi:"currentVersions"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A brief description of the certificate. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the certificate.
	Id string `pulumi:"id"`
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	IssuerCertificateAuthorityId string `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to create key pairs.
	KeyAlgorithm string `pulumi:"keyAlgorithm"`
	// Additional information about the current lifecycle state of the certificate.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// A filter that returns only resources that match the specified name.
	Name string `pulumi:"name"`
	// The algorithm used to sign the public key certificate.
	SignatureAlgorithm string `pulumi:"signatureAlgorithm"`
	// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects []GetCertificatesCertificateCollectionItemSubject `pulumi:"subjects"`
	// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
}

// GetCertificatesCertificateCollectionItemInput is an input type that accepts GetCertificatesCertificateCollectionItemArgs and GetCertificatesCertificateCollectionItemOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemInput` via:
//
//	GetCertificatesCertificateCollectionItemArgs{...}
type GetCertificatesCertificateCollectionItemInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemOutput() GetCertificatesCertificateCollectionItemOutput
	ToGetCertificatesCertificateCollectionItemOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemOutput
}

type GetCertificatesCertificateCollectionItemArgs struct {
	CertificateConfigs GetCertificatesCertificateCollectionItemCertificateConfigArrayInput `pulumi:"certificateConfigs"`
	// The name of the profile used to create the certificate, which depends on the type of certificate you need.
	CertificateProfileType pulumi.StringInput `pulumi:"certificateProfileType"`
	// The details of the certificate revocation list (CRL).
	CertificateRevocationListDetails GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayInput `pulumi:"certificateRevocationListDetails"`
	// A list of rules that control how the certificate is used and managed.
	CertificateRules GetCertificatesCertificateCollectionItemCertificateRuleArrayInput `pulumi:"certificateRules"`
	// A filter that returns only resources that match the given compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The origin of the certificate.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	// The details of the certificate version. This object does not contain the certificate contents.
	CurrentVersions GetCertificatesCertificateCollectionItemCurrentVersionArrayInput `pulumi:"currentVersions"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A brief description of the certificate. Avoid entering confidential information.
	Description pulumi.StringInput `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The OCID of the certificate.
	Id pulumi.StringInput `pulumi:"id"`
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	IssuerCertificateAuthorityId pulumi.StringInput `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to create key pairs.
	KeyAlgorithm pulumi.StringInput `pulumi:"keyAlgorithm"`
	// Additional information about the current lifecycle state of the certificate.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// A filter that returns only resources that match the specified name.
	Name pulumi.StringInput `pulumi:"name"`
	// The algorithm used to sign the public key certificate.
	SignatureAlgorithm pulumi.StringInput `pulumi:"signatureAlgorithm"`
	// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects GetCertificatesCertificateCollectionItemSubjectArrayInput `pulumi:"subjects"`
	// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
}

func (GetCertificatesCertificateCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItem)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemArgs) ToGetCertificatesCertificateCollectionItemOutput() GetCertificatesCertificateCollectionItemOutput {
	return i.ToGetCertificatesCertificateCollectionItemOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemArgs) ToGetCertificatesCertificateCollectionItemOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemOutput)
}

func (i GetCertificatesCertificateCollectionItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItem] {
	return pulumix.Output[GetCertificatesCertificateCollectionItem]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemArray and GetCertificatesCertificateCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemArray{ GetCertificatesCertificateCollectionItemArgs{...} }
type GetCertificatesCertificateCollectionItemArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemArrayOutput() GetCertificatesCertificateCollectionItemArrayOutput
	ToGetCertificatesCertificateCollectionItemArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemArrayOutput
}

type GetCertificatesCertificateCollectionItemArray []GetCertificatesCertificateCollectionItemInput

func (GetCertificatesCertificateCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItem)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemArray) ToGetCertificatesCertificateCollectionItemArrayOutput() GetCertificatesCertificateCollectionItemArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemArray) ToGetCertificatesCertificateCollectionItemArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItem] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItem]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItem)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemOutput) ToGetCertificatesCertificateCollectionItemOutput() GetCertificatesCertificateCollectionItemOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemOutput) ToGetCertificatesCertificateCollectionItemOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItem] {
	return pulumix.Output[GetCertificatesCertificateCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemOutput) CertificateConfigs() GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) []GetCertificatesCertificateCollectionItemCertificateConfig {
		return v.CertificateConfigs
	}).(GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput)
}

// The name of the profile used to create the certificate, which depends on the type of certificate you need.
func (o GetCertificatesCertificateCollectionItemOutput) CertificateProfileType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.CertificateProfileType }).(pulumi.StringOutput)
}

// The details of the certificate revocation list (CRL).
func (o GetCertificatesCertificateCollectionItemOutput) CertificateRevocationListDetails() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) []GetCertificatesCertificateCollectionItemCertificateRevocationListDetail {
		return v.CertificateRevocationListDetails
	}).(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput)
}

// A list of rules that control how the certificate is used and managed.
func (o GetCertificatesCertificateCollectionItemOutput) CertificateRules() GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) []GetCertificatesCertificateCollectionItemCertificateRule {
		return v.CertificateRules
	}).(GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput)
}

// A filter that returns only resources that match the given compartment OCID.
func (o GetCertificatesCertificateCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The origin of the certificate.
func (o GetCertificatesCertificateCollectionItemOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.ConfigType }).(pulumi.StringOutput)
}

// The details of the certificate version. This object does not contain the certificate contents.
func (o GetCertificatesCertificateCollectionItemOutput) CurrentVersions() GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) []GetCertificatesCertificateCollectionItemCurrentVersion {
		return v.CurrentVersions
	}).(GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetCertificatesCertificateCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A brief description of the certificate. Avoid entering confidential information.
func (o GetCertificatesCertificateCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetCertificatesCertificateCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the certificate.
func (o GetCertificatesCertificateCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
func (o GetCertificatesCertificateCollectionItemOutput) IssuerCertificateAuthorityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.IssuerCertificateAuthorityId }).(pulumi.StringOutput)
}

// The algorithm used to create key pairs.
func (o GetCertificatesCertificateCollectionItemOutput) KeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.KeyAlgorithm }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state of the certificate.
func (o GetCertificatesCertificateCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// A filter that returns only resources that match the specified name.
func (o GetCertificatesCertificateCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// The algorithm used to sign the public key certificate.
func (o GetCertificatesCertificateCollectionItemOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

// A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetCertificatesCertificateCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
func (o GetCertificatesCertificateCollectionItemOutput) Subjects() GetCertificatesCertificateCollectionItemSubjectArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) []GetCertificatesCertificateCollectionItemSubject {
		return v.Subjects
	}).(GetCertificatesCertificateCollectionItemSubjectArrayOutput)
}

// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificatesCertificateCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificatesCertificateCollectionItemOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItem) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItem)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemArrayOutput) ToGetCertificatesCertificateCollectionItemArrayOutput() GetCertificatesCertificateCollectionItemArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemArrayOutput) ToGetCertificatesCertificateCollectionItemArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItem] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItem]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItem {
		return vs[0].([]GetCertificatesCertificateCollectionItem)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemOutput)
}

type GetCertificatesCertificateCollectionItemCertificateConfig struct {
	// The name of the profile used to create the certificate, which depends on the type of certificate you need.
	CertificateProfileType string `pulumi:"certificateProfileType"`
	// The origin of the certificate.
	ConfigType string `pulumi:"configType"`
	CsrPem     string `pulumi:"csrPem"`
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	IssuerCertificateAuthorityId string `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to create key pairs.
	KeyAlgorithm string `pulumi:"keyAlgorithm"`
	// The algorithm used to sign the public key certificate.
	SignatureAlgorithm string `pulumi:"signatureAlgorithm"`
	// A list of subject alternative names.
	SubjectAlternativeNames []GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects []GetCertificatesCertificateCollectionItemCertificateConfigSubject `pulumi:"subjects"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificatesCertificateCollectionItemCertificateConfigValidity `pulumi:"validities"`
	// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
	VersionName string `pulumi:"versionName"`
}

// GetCertificatesCertificateCollectionItemCertificateConfigInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateConfigArgs and GetCertificatesCertificateCollectionItemCertificateConfigOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateConfigInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateConfigArgs{...}
type GetCertificatesCertificateCollectionItemCertificateConfigInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateConfigOutput() GetCertificatesCertificateCollectionItemCertificateConfigOutput
	ToGetCertificatesCertificateCollectionItemCertificateConfigOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateConfigOutput
}

type GetCertificatesCertificateCollectionItemCertificateConfigArgs struct {
	// The name of the profile used to create the certificate, which depends on the type of certificate you need.
	CertificateProfileType pulumi.StringInput `pulumi:"certificateProfileType"`
	// The origin of the certificate.
	ConfigType pulumi.StringInput `pulumi:"configType"`
	CsrPem     pulumi.StringInput `pulumi:"csrPem"`
	// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
	IssuerCertificateAuthorityId pulumi.StringInput `pulumi:"issuerCertificateAuthorityId"`
	// The algorithm used to create key pairs.
	KeyAlgorithm pulumi.StringInput `pulumi:"keyAlgorithm"`
	// The algorithm used to sign the public key certificate.
	SignatureAlgorithm pulumi.StringInput `pulumi:"signatureAlgorithm"`
	// A list of subject alternative names.
	SubjectAlternativeNames GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
	Subjects GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayInput `pulumi:"subjects"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayInput `pulumi:"validities"`
	// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
	VersionName pulumi.StringInput `pulumi:"versionName"`
}

func (GetCertificatesCertificateCollectionItemCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfig)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigArgs) ToGetCertificatesCertificateCollectionItemCertificateConfigOutput() GetCertificatesCertificateCollectionItemCertificateConfigOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateConfigOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigArgs) ToGetCertificatesCertificateCollectionItemCertificateConfigOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateConfigOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfig] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfig]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateConfigOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemCertificateConfigArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateConfigArray and GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateConfigArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateConfigArray{ GetCertificatesCertificateCollectionItemCertificateConfigArgs{...} }
type GetCertificatesCertificateCollectionItemCertificateConfigArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateConfigArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput
	ToGetCertificatesCertificateCollectionItemCertificateConfigArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput
}

type GetCertificatesCertificateCollectionItemCertificateConfigArray []GetCertificatesCertificateCollectionItemCertificateConfigInput

func (GetCertificatesCertificateCollectionItemCertificateConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateConfig)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigArray) ToGetCertificatesCertificateCollectionItemCertificateConfigArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateConfigArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigArray) ToGetCertificatesCertificateCollectionItemCertificateConfigArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfig] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfig]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemCertificateConfigOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfig)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigOutput() GetCertificatesCertificateCollectionItemCertificateConfigOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfig] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfig]{
		OutputState: o.OutputState,
	}
}

// The name of the profile used to create the certificate, which depends on the type of certificate you need.
func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) CertificateProfileType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfig) string {
		return v.CertificateProfileType
	}).(pulumi.StringOutput)
}

// The origin of the certificate.
func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) ConfigType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfig) string { return v.ConfigType }).(pulumi.StringOutput)
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) CsrPem() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfig) string { return v.CsrPem }).(pulumi.StringOutput)
}

// The OCID of the certificate authority (CA). If the parameter is set to null, the service lists all CAs.
func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) IssuerCertificateAuthorityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfig) string {
		return v.IssuerCertificateAuthorityId
	}).(pulumi.StringOutput)
}

// The algorithm used to create key pairs.
func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) KeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfig) string { return v.KeyAlgorithm }).(pulumi.StringOutput)
}

// The algorithm used to sign the public key certificate.
func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfig) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

// A list of subject alternative names.
func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) SubjectAlternativeNames() GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfig) []GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput)
}

// The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) Subjects() GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfig) []GetCertificatesCertificateCollectionItemCertificateConfigSubject {
		return v.Subjects
	}).(GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) Validities() GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfig) []GetCertificatesCertificateCollectionItemCertificateConfigValidity {
		return v.Validities
	}).(GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput)
}

// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
func (o GetCertificatesCertificateCollectionItemCertificateConfigOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfig) string { return v.VersionName }).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateConfig)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfig] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemCertificateConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemCertificateConfig {
		return vs[0].([]GetCertificatesCertificateCollectionItemCertificateConfig)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemCertificateConfigOutput)
}

type GetCertificatesCertificateCollectionItemCertificateConfigSubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName string `pulumi:"commonName"`
	// Country name (RDN C).
	Country string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName string `pulumi:"givenName"`
	// Personal initials.
	Initials string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title string `pulumi:"title"`
	// User ID (RDN UID).
	UserId string `pulumi:"userId"`
}

// GetCertificatesCertificateCollectionItemCertificateConfigSubjectInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateConfigSubjectArgs and GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateConfigSubjectInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateConfigSubjectArgs{...}
type GetCertificatesCertificateCollectionItemCertificateConfigSubjectInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput
	ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput
}

type GetCertificatesCertificateCollectionItemCertificateConfigSubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetCertificatesCertificateCollectionItemCertificateConfigSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigSubject)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectArgs) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectArgs) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigSubject] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigSubject]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateConfigSubjectArray and GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateConfigSubjectArray{ GetCertificatesCertificateCollectionItemCertificateConfigSubjectArgs{...} }
type GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput
	ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput
}

type GetCertificatesCertificateCollectionItemCertificateConfigSubjectArray []GetCertificatesCertificateCollectionItemCertificateConfigSubjectInput

func (GetCertificatesCertificateCollectionItemCertificateConfigSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateConfigSubject)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectArray) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectArray) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigSubject] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigSubject]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigSubject)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigSubject] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigSubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.CommonName }).(pulumi.StringOutput)
}

// Country name (RDN C).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.Country }).(pulumi.StringOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) DistinguishedNameQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string {
		return v.DistinguishedNameQualifier
	}).(pulumi.StringOutput)
}

// Domain component (RDN DC).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) DomainComponent() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string {
		return v.DomainComponent
	}).(pulumi.StringOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) GenerationQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string {
		return v.GenerationQualifier
	}).(pulumi.StringOutput)
}

// Personal given name (RDN G or GN).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) GivenName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.GivenName }).(pulumi.StringOutput)
}

// Personal initials.
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) Initials() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.Initials }).(pulumi.StringOutput)
}

// Locality (RDN L).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) LocalityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.LocalityName }).(pulumi.StringOutput)
}

// Organization (RDN O).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.Organization }).(pulumi.StringOutput)
}

// Organizational unit (RDN OU).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) OrganizationalUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string {
		return v.OrganizationalUnit
	}).(pulumi.StringOutput)
}

// Subject pseudonym.
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) Pseudonym() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.Pseudonym }).(pulumi.StringOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// State or province name (RDN ST or S).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) StateOrProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string {
		return v.StateOrProvinceName
	}).(pulumi.StringOutput)
}

// Street address (RDN STREET).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) Street() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.Street }).(pulumi.StringOutput)
}

// Personal surname (RDN SN).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) Surname() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.Surname }).(pulumi.StringOutput)
}

// Title (RDN T or TITLE).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.Title }).(pulumi.StringOutput)
}

// User ID (RDN UID).
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubject) string { return v.UserId }).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateConfigSubject)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigSubject] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigSubject]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemCertificateConfigSubject {
		return vs[0].([]GetCertificatesCertificateCollectionItemCertificateConfigSubject)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput)
}

type GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type string `pulumi:"type"`
	// The subject alternative name.
	Value string `pulumi:"value"`
}

// GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArgs and GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArgs{...}
type GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput
	ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput
}

type GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArgs struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type pulumi.StringInput `pulumi:"type"`
	// The subject alternative name.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArgs) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArgs) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArray and GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArray{ GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArgs{...} }
type GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput
	ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput
}

type GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArray []GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameInput

func (GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArray) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArray) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName) string {
		return v.Type
	}).(pulumi.StringOutput)
}

// The subject alternative name.
func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName {
		return vs[0].([]GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeName)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput)
}

type GetCertificatesCertificateCollectionItemCertificateConfigValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificatesCertificateCollectionItemCertificateConfigValidityInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateConfigValidityArgs and GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateConfigValidityInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateConfigValidityArgs{...}
type GetCertificatesCertificateCollectionItemCertificateConfigValidityInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateConfigValidityOutput() GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput
	ToGetCertificatesCertificateCollectionItemCertificateConfigValidityOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput
}

type GetCertificatesCertificateCollectionItemCertificateConfigValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificatesCertificateCollectionItemCertificateConfigValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigValidity)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigValidityArgs) ToGetCertificatesCertificateCollectionItemCertificateConfigValidityOutput() GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateConfigValidityOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigValidityArgs) ToGetCertificatesCertificateCollectionItemCertificateConfigValidityOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigValidity] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigValidity]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateConfigValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateConfigValidityArray and GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateConfigValidityArray{ GetCertificatesCertificateCollectionItemCertificateConfigValidityArgs{...} }
type GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput
	ToGetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput
}

type GetCertificatesCertificateCollectionItemCertificateConfigValidityArray []GetCertificatesCertificateCollectionItemCertificateConfigValidityInput

func (GetCertificatesCertificateCollectionItemCertificateConfigValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateConfigValidity)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigValidityArray) ToGetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigValidityArray) ToGetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateConfigValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigValidity] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigValidity]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigValidity)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigValidityOutput() GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigValidityOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigValidity] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateConfigValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigValidity) string {
		return v.TimeOfValidityNotAfter
	}).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateConfigValidity) string {
		return v.TimeOfValidityNotBefore
	}).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateConfigValidity)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput() GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigValidity] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateConfigValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemCertificateConfigValidity {
		return vs[0].([]GetCertificatesCertificateCollectionItemCertificateConfigValidity)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput)
}

type GetCertificatesCertificateCollectionItemCertificateRevocationListDetail struct {
	// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls []string `pulumi:"customFormattedUrls"`
	// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfigs []GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig `pulumi:"objectStorageConfigs"`
}

// GetCertificatesCertificateCollectionItemCertificateRevocationListDetailInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArgs and GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateRevocationListDetailInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArgs{...}
type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput
	ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput
}

type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArgs struct {
	// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	CustomFormattedUrls pulumi.StringArrayInput `pulumi:"customFormattedUrls"`
	// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
	ObjectStorageConfigs GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayInput `pulumi:"objectStorageConfigs"`
}

func (GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRevocationListDetail)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArgs) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArgs) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRevocationListDetail] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRevocationListDetail]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArray and GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArray{ GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArgs{...} }
type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput
	ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput
}

type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArray []GetCertificatesCertificateCollectionItemCertificateRevocationListDetailInput

func (GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetail)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArray) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArray) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetail] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetail]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRevocationListDetail)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRevocationListDetail] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRevocationListDetail]{
		OutputState: o.OutputState,
	}
}

// Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput) CustomFormattedUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateRevocationListDetail) []string {
		return v.CustomFormattedUrls
	}).(pulumi.StringArrayOutput)
}

// The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput) ObjectStorageConfigs() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateRevocationListDetail) []GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig {
		return v.ObjectStorageConfigs
	}).(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput)
}

type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetail)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetail] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemCertificateRevocationListDetail {
		return vs[0].([]GetCertificatesCertificateCollectionItemCertificateRevocationListDetail)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput)
}

type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig struct {
	// The name of the bucket where the CRL is stored.
	ObjectStorageBucketName string `pulumi:"objectStorageBucketName"`
	// The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace string `pulumi:"objectStorageNamespace"`
	// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat string `pulumi:"objectStorageObjectNameFormat"`
}

// GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs and GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs{...}
type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput
	ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput
}

type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs struct {
	// The name of the bucket where the CRL is stored.
	ObjectStorageBucketName pulumi.StringInput `pulumi:"objectStorageBucketName"`
	// The tenancy of the bucket where the CRL is stored.
	ObjectStorageNamespace pulumi.StringInput `pulumi:"objectStorageNamespace"`
	// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
	ObjectStorageObjectNameFormat pulumi.StringInput `pulumi:"objectStorageObjectNameFormat"`
}

func (GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArray and GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArray{ GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs{...} }
type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput
	ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput
}

type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArray []GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigInput

func (GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArray) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArray) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

// The name of the bucket where the CRL is stored.
func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageBucketName
	}).(pulumi.StringOutput)
}

// The tenancy of the bucket where the CRL is stored.
func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageNamespace
	}).(pulumi.StringOutput)
}

// The object name in the bucket where the CRL is stored, expressed using a format where the version number of the issuing CA is inserted as part of the Object Storage object name wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput) ObjectStorageObjectNameFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig) string {
		return v.ObjectStorageObjectNameFormat
	}).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput() GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig {
		return vs[0].([]GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfig)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput)
}

type GetCertificatesCertificateCollectionItemCertificateRule struct {
	// A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	AdvanceRenewalPeriod string `pulumi:"advanceRenewalPeriod"`
	// A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	RenewalInterval string `pulumi:"renewalInterval"`
	// The type of rule.
	RuleType string `pulumi:"ruleType"`
}

// GetCertificatesCertificateCollectionItemCertificateRuleInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateRuleArgs and GetCertificatesCertificateCollectionItemCertificateRuleOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateRuleInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateRuleArgs{...}
type GetCertificatesCertificateCollectionItemCertificateRuleInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateRuleOutput() GetCertificatesCertificateCollectionItemCertificateRuleOutput
	ToGetCertificatesCertificateCollectionItemCertificateRuleOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateRuleOutput
}

type GetCertificatesCertificateCollectionItemCertificateRuleArgs struct {
	// A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	AdvanceRenewalPeriod pulumi.StringInput `pulumi:"advanceRenewalPeriod"`
	// A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
	RenewalInterval pulumi.StringInput `pulumi:"renewalInterval"`
	// The type of rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (GetCertificatesCertificateCollectionItemCertificateRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRule)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateRuleArgs) ToGetCertificatesCertificateCollectionItemCertificateRuleOutput() GetCertificatesCertificateCollectionItemCertificateRuleOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateRuleOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateRuleArgs) ToGetCertificatesCertificateCollectionItemCertificateRuleOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateRuleOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateRuleArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRule] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRule]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateRuleOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemCertificateRuleArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemCertificateRuleArray and GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCertificateRuleArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemCertificateRuleArray{ GetCertificatesCertificateCollectionItemCertificateRuleArgs{...} }
type GetCertificatesCertificateCollectionItemCertificateRuleArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCertificateRuleArrayOutput() GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput
	ToGetCertificatesCertificateCollectionItemCertificateRuleArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput
}

type GetCertificatesCertificateCollectionItemCertificateRuleArray []GetCertificatesCertificateCollectionItemCertificateRuleInput

func (GetCertificatesCertificateCollectionItemCertificateRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateRule)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCertificateRuleArray) ToGetCertificatesCertificateCollectionItemCertificateRuleArrayOutput() GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemCertificateRuleArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCertificateRuleArray) ToGetCertificatesCertificateCollectionItemCertificateRuleArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemCertificateRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRule] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRule]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCertificateRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemCertificateRuleOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRule)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateRuleOutput) ToGetCertificatesCertificateCollectionItemCertificateRuleOutput() GetCertificatesCertificateCollectionItemCertificateRuleOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRuleOutput) ToGetCertificatesCertificateCollectionItemCertificateRuleOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRuleOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRuleOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRule] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCertificateRule]{
		OutputState: o.OutputState,
	}
}

// A property specifying the period of time, in days, before the certificate's targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o GetCertificatesCertificateCollectionItemCertificateRuleOutput) AdvanceRenewalPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateRule) string { return v.AdvanceRenewalPeriod }).(pulumi.StringOutput)
}

// A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
func (o GetCertificatesCertificateCollectionItemCertificateRuleOutput) RenewalInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateRule) string { return v.RenewalInterval }).(pulumi.StringOutput)
}

// The type of rule.
func (o GetCertificatesCertificateCollectionItemCertificateRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCertificateRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCertificateRule)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateRuleArrayOutput() GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput) ToGetCertificatesCertificateCollectionItemCertificateRuleArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRule] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCertificateRule]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemCertificateRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemCertificateRule {
		return vs[0].([]GetCertificatesCertificateCollectionItemCertificateRule)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemCertificateRuleOutput)
}

type GetCertificatesCertificateCollectionItemCurrentVersion struct {
	// The OCID of the certificate. If the parameter is set to null, the service lists all certificates.
	CertificateId string `pulumi:"certificateId"`
	// The version number of the issuing certificate authority (CA).
	IssuerCaVersionNumber string `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses []GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// A list of rotation states for this certificate version.
	Stages []string `pulumi:"stages"`
	// A list of subject alternative names.
	SubjectAlternativeNames []GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName `pulumi:"subjectAlternativeNames"`
	// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion string `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities []GetCertificatesCertificateCollectionItemCurrentVersionValidity `pulumi:"validities"`
	// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
	VersionName string `pulumi:"versionName"`
	// The version number of the certificate.
	VersionNumber string `pulumi:"versionNumber"`
}

// GetCertificatesCertificateCollectionItemCurrentVersionInput is an input type that accepts GetCertificatesCertificateCollectionItemCurrentVersionArgs and GetCertificatesCertificateCollectionItemCurrentVersionOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCurrentVersionInput` via:
//
//	GetCertificatesCertificateCollectionItemCurrentVersionArgs{...}
type GetCertificatesCertificateCollectionItemCurrentVersionInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCurrentVersionOutput() GetCertificatesCertificateCollectionItemCurrentVersionOutput
	ToGetCertificatesCertificateCollectionItemCurrentVersionOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCurrentVersionOutput
}

type GetCertificatesCertificateCollectionItemCurrentVersionArgs struct {
	// The OCID of the certificate. If the parameter is set to null, the service lists all certificates.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// The version number of the issuing certificate authority (CA).
	IssuerCaVersionNumber pulumi.StringInput `pulumi:"issuerCaVersionNumber"`
	// The current revocation status of the entity.
	RevocationStatuses GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayInput `pulumi:"revocationStatuses"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// A list of rotation states for this certificate version.
	Stages pulumi.StringArrayInput `pulumi:"stages"`
	// A list of subject alternative names.
	SubjectAlternativeNames GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayInput `pulumi:"subjectAlternativeNames"`
	// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfDeletion pulumi.StringInput `pulumi:"timeOfDeletion"`
	// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
	Validities GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayInput `pulumi:"validities"`
	// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
	VersionName pulumi.StringInput `pulumi:"versionName"`
	// The version number of the certificate.
	VersionNumber pulumi.StringInput `pulumi:"versionNumber"`
}

func (GetCertificatesCertificateCollectionItemCurrentVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersion)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionArgs) ToGetCertificatesCertificateCollectionItemCurrentVersionOutput() GetCertificatesCertificateCollectionItemCurrentVersionOutput {
	return i.ToGetCertificatesCertificateCollectionItemCurrentVersionOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionArgs) ToGetCertificatesCertificateCollectionItemCurrentVersionOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCurrentVersionOutput)
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersion] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersion]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCurrentVersionOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemCurrentVersionArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemCurrentVersionArray and GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCurrentVersionArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemCurrentVersionArray{ GetCertificatesCertificateCollectionItemCurrentVersionArgs{...} }
type GetCertificatesCertificateCollectionItemCurrentVersionArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCurrentVersionArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput
	ToGetCertificatesCertificateCollectionItemCurrentVersionArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput
}

type GetCertificatesCertificateCollectionItemCurrentVersionArray []GetCertificatesCertificateCollectionItemCurrentVersionInput

func (GetCertificatesCertificateCollectionItemCurrentVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCurrentVersion)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionArray) ToGetCertificatesCertificateCollectionItemCurrentVersionArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemCurrentVersionArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionArray) ToGetCertificatesCertificateCollectionItemCurrentVersionArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersion] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersion]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCurrentVersionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemCurrentVersionOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCurrentVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersion)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionOutput() GetCertificatesCertificateCollectionItemCurrentVersionOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersion] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersion]{
		OutputState: o.OutputState,
	}
}

// The OCID of the certificate. If the parameter is set to null, the service lists all certificates.
func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersion) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The version number of the issuing certificate authority (CA).
func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) IssuerCaVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersion) string { return v.IssuerCaVersionNumber }).(pulumi.StringOutput)
}

// The current revocation status of the entity.
func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) RevocationStatuses() GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersion) []GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus {
		return v.RevocationStatuses
	}).(GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersion) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// A list of rotation states for this certificate version.
func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) Stages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersion) []string { return v.Stages }).(pulumi.StringArrayOutput)
}

// A list of subject alternative names.
func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) SubjectAlternativeNames() GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersion) []GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName {
		return v.SubjectAlternativeNames
	}).(GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput)
}

// A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersion) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) TimeOfDeletion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersion) string { return v.TimeOfDeletion }).(pulumi.StringOutput)
}

// An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) Validities() GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersion) []GetCertificatesCertificateCollectionItemCurrentVersionValidity {
		return v.Validities
	}).(GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput)
}

// The name of the certificate version. When the value is not null, a name is unique across versions of a given certificate.
func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersion) string { return v.VersionName }).(pulumi.StringOutput)
}

// The version number of the certificate.
func (o GetCertificatesCertificateCollectionItemCurrentVersionOutput) VersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersion) string { return v.VersionNumber }).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCurrentVersion)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersion] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersion]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemCurrentVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemCurrentVersion {
		return vs[0].([]GetCertificatesCertificateCollectionItemCurrentVersion)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemCurrentVersionOutput)
}

type GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason string `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation string `pulumi:"timeOfRevocation"`
}

// GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusInput is an input type that accepts GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArgs and GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusInput` via:
//
//	GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArgs{...}
type GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput() GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput
	ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput
}

type GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArgs struct {
	// The reason the certificate or certificate authority (CA) was revoked.
	RevocationReason pulumi.StringInput `pulumi:"revocationReason"`
	// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfRevocation pulumi.StringInput `pulumi:"timeOfRevocation"`
}

func (GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArgs) ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput() GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput {
	return i.ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArgs) ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput)
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArray and GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArray{ GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArgs{...} }
type GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput
	ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput
}

type GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArray []GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusInput

func (GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArray) ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArray) ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput() GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

// The reason the certificate or certificate authority (CA) was revoked.
func (o GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput) RevocationReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus) string {
		return v.RevocationReason
	}).(pulumi.StringOutput)
}

// The time when the entity was revoked, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput) TimeOfRevocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus) string {
		return v.TimeOfRevocation
	}).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus {
		return vs[0].([]GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatus)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput)
}

type GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type string `pulumi:"type"`
	// The subject alternative name.
	Value string `pulumi:"value"`
}

// GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameInput is an input type that accepts GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArgs and GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameInput` via:
//
//	GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArgs{...}
type GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput() GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput
	ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput
}

type GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArgs struct {
	// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
	Type pulumi.StringInput `pulumi:"type"`
	// The subject alternative name.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArgs) ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput() GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput {
	return i.ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArgs) ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput)
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArray and GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArray{ GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArgs{...} }
type GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput
	ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput
}

type GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArray []GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameInput

func (GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArray) ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArray) ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput() GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

// The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
func (o GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName) string {
		return v.Type
	}).(pulumi.StringOutput)
}

// The subject alternative name.
func (o GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName {
		return vs[0].([]GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeName)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput)
}

type GetCertificatesCertificateCollectionItemCurrentVersionValidity struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter string `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore string `pulumi:"timeOfValidityNotBefore"`
}

// GetCertificatesCertificateCollectionItemCurrentVersionValidityInput is an input type that accepts GetCertificatesCertificateCollectionItemCurrentVersionValidityArgs and GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCurrentVersionValidityInput` via:
//
//	GetCertificatesCertificateCollectionItemCurrentVersionValidityArgs{...}
type GetCertificatesCertificateCollectionItemCurrentVersionValidityInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCurrentVersionValidityOutput() GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput
	ToGetCertificatesCertificateCollectionItemCurrentVersionValidityOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput
}

type GetCertificatesCertificateCollectionItemCurrentVersionValidityArgs struct {
	// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotAfter pulumi.StringInput `pulumi:"timeOfValidityNotAfter"`
	// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
	TimeOfValidityNotBefore pulumi.StringInput `pulumi:"timeOfValidityNotBefore"`
}

func (GetCertificatesCertificateCollectionItemCurrentVersionValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionValidity)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionValidityArgs) ToGetCertificatesCertificateCollectionItemCurrentVersionValidityOutput() GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput {
	return i.ToGetCertificatesCertificateCollectionItemCurrentVersionValidityOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionValidityArgs) ToGetCertificatesCertificateCollectionItemCurrentVersionValidityOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput)
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionValidityArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionValidity] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionValidity]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCurrentVersionValidityOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemCurrentVersionValidityArray and GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemCurrentVersionValidityArray{ GetCertificatesCertificateCollectionItemCurrentVersionValidityArgs{...} }
type GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput
	ToGetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput
}

type GetCertificatesCertificateCollectionItemCurrentVersionValidityArray []GetCertificatesCertificateCollectionItemCurrentVersionValidityInput

func (GetCertificatesCertificateCollectionItemCurrentVersionValidityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCurrentVersionValidity)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionValidityArray) ToGetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionValidityArray) ToGetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemCurrentVersionValidityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionValidity] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionValidity]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionValidity)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionValidityOutput() GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionValidityOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionValidity] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

// The date on which the certificate validity period ends, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput) TimeOfValidityNotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersionValidity) string {
		return v.TimeOfValidityNotAfter
	}).(pulumi.StringOutput)
}

// The date on which the certificate validity period begins, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
func (o GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput) TimeOfValidityNotBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemCurrentVersionValidity) string {
		return v.TimeOfValidityNotBefore
	}).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemCurrentVersionValidity)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput() GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput) ToGetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionValidity] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemCurrentVersionValidity]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemCurrentVersionValidity {
		return vs[0].([]GetCertificatesCertificateCollectionItemCurrentVersionValidity)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput)
}

type GetCertificatesCertificateCollectionItemSubject struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName string `pulumi:"commonName"`
	// Country name (RDN C).
	Country string `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier string `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent string `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier string `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName string `pulumi:"givenName"`
	// Personal initials.
	Initials string `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName string `pulumi:"localityName"`
	// Organization (RDN O).
	Organization string `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit string `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym string `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber string `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName string `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street string `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname string `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title string `pulumi:"title"`
	// User ID (RDN UID).
	UserId string `pulumi:"userId"`
}

// GetCertificatesCertificateCollectionItemSubjectInput is an input type that accepts GetCertificatesCertificateCollectionItemSubjectArgs and GetCertificatesCertificateCollectionItemSubjectOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemSubjectInput` via:
//
//	GetCertificatesCertificateCollectionItemSubjectArgs{...}
type GetCertificatesCertificateCollectionItemSubjectInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemSubjectOutput() GetCertificatesCertificateCollectionItemSubjectOutput
	ToGetCertificatesCertificateCollectionItemSubjectOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemSubjectOutput
}

type GetCertificatesCertificateCollectionItemSubjectArgs struct {
	// Common name or fully-qualified domain name (RDN CN).
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Country name (RDN C).
	Country pulumi.StringInput `pulumi:"country"`
	// Distinguished name qualifier(RDN DNQ).
	DistinguishedNameQualifier pulumi.StringInput `pulumi:"distinguishedNameQualifier"`
	// Domain component (RDN DC).
	DomainComponent pulumi.StringInput `pulumi:"domainComponent"`
	// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
	GenerationQualifier pulumi.StringInput `pulumi:"generationQualifier"`
	// Personal given name (RDN G or GN).
	GivenName pulumi.StringInput `pulumi:"givenName"`
	// Personal initials.
	Initials pulumi.StringInput `pulumi:"initials"`
	// Locality (RDN L).
	LocalityName pulumi.StringInput `pulumi:"localityName"`
	// Organization (RDN O).
	Organization pulumi.StringInput `pulumi:"organization"`
	// Organizational unit (RDN OU).
	OrganizationalUnit pulumi.StringInput `pulumi:"organizationalUnit"`
	// Subject pseudonym.
	Pseudonym pulumi.StringInput `pulumi:"pseudonym"`
	// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// State or province name (RDN ST or S).
	StateOrProvinceName pulumi.StringInput `pulumi:"stateOrProvinceName"`
	// Street address (RDN STREET).
	Street pulumi.StringInput `pulumi:"street"`
	// Personal surname (RDN SN).
	Surname pulumi.StringInput `pulumi:"surname"`
	// Title (RDN T or TITLE).
	Title pulumi.StringInput `pulumi:"title"`
	// User ID (RDN UID).
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetCertificatesCertificateCollectionItemSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemSubject)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemSubjectArgs) ToGetCertificatesCertificateCollectionItemSubjectOutput() GetCertificatesCertificateCollectionItemSubjectOutput {
	return i.ToGetCertificatesCertificateCollectionItemSubjectOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemSubjectArgs) ToGetCertificatesCertificateCollectionItemSubjectOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemSubjectOutput)
}

func (i GetCertificatesCertificateCollectionItemSubjectArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemSubject] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemSubject]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemSubjectOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesCertificateCollectionItemSubjectArrayInput is an input type that accepts GetCertificatesCertificateCollectionItemSubjectArray and GetCertificatesCertificateCollectionItemSubjectArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateCollectionItemSubjectArrayInput` via:
//
//	GetCertificatesCertificateCollectionItemSubjectArray{ GetCertificatesCertificateCollectionItemSubjectArgs{...} }
type GetCertificatesCertificateCollectionItemSubjectArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateCollectionItemSubjectArrayOutput() GetCertificatesCertificateCollectionItemSubjectArrayOutput
	ToGetCertificatesCertificateCollectionItemSubjectArrayOutputWithContext(context.Context) GetCertificatesCertificateCollectionItemSubjectArrayOutput
}

type GetCertificatesCertificateCollectionItemSubjectArray []GetCertificatesCertificateCollectionItemSubjectInput

func (GetCertificatesCertificateCollectionItemSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemSubject)(nil)).Elem()
}

func (i GetCertificatesCertificateCollectionItemSubjectArray) ToGetCertificatesCertificateCollectionItemSubjectArrayOutput() GetCertificatesCertificateCollectionItemSubjectArrayOutput {
	return i.ToGetCertificatesCertificateCollectionItemSubjectArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateCollectionItemSubjectArray) ToGetCertificatesCertificateCollectionItemSubjectArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateCollectionItemSubjectArrayOutput)
}

func (i GetCertificatesCertificateCollectionItemSubjectArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemSubject] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemSubject]{
		OutputState: i.ToGetCertificatesCertificateCollectionItemSubjectArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesCertificateCollectionItemSubjectOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateCollectionItemSubject)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemSubjectOutput) ToGetCertificatesCertificateCollectionItemSubjectOutput() GetCertificatesCertificateCollectionItemSubjectOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemSubjectOutput) ToGetCertificatesCertificateCollectionItemSubjectOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemSubjectOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemSubjectOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesCertificateCollectionItemSubject] {
	return pulumix.Output[GetCertificatesCertificateCollectionItemSubject]{
		OutputState: o.OutputState,
	}
}

// Common name or fully-qualified domain name (RDN CN).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.CommonName }).(pulumi.StringOutput)
}

// Country name (RDN C).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.Country }).(pulumi.StringOutput)
}

// Distinguished name qualifier(RDN DNQ).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) DistinguishedNameQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.DistinguishedNameQualifier }).(pulumi.StringOutput)
}

// Domain component (RDN DC).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) DomainComponent() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.DomainComponent }).(pulumi.StringOutput)
}

// Personal generational qualifier (for example, Sr., Jr. 3rd, or IV).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) GenerationQualifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.GenerationQualifier }).(pulumi.StringOutput)
}

// Personal given name (RDN G or GN).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) GivenName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.GivenName }).(pulumi.StringOutput)
}

// Personal initials.
func (o GetCertificatesCertificateCollectionItemSubjectOutput) Initials() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.Initials }).(pulumi.StringOutput)
}

// Locality (RDN L).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) LocalityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.LocalityName }).(pulumi.StringOutput)
}

// Organization (RDN O).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.Organization }).(pulumi.StringOutput)
}

// Organizational unit (RDN OU).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) OrganizationalUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.OrganizationalUnit }).(pulumi.StringOutput)
}

// Subject pseudonym.
func (o GetCertificatesCertificateCollectionItemSubjectOutput) Pseudonym() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.Pseudonym }).(pulumi.StringOutput)
}

// Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// State or province name (RDN ST or S).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) StateOrProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.StateOrProvinceName }).(pulumi.StringOutput)
}

// Street address (RDN STREET).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) Street() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.Street }).(pulumi.StringOutput)
}

// Personal surname (RDN SN).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) Surname() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.Surname }).(pulumi.StringOutput)
}

// Title (RDN T or TITLE).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.Title }).(pulumi.StringOutput)
}

// User ID (RDN UID).
func (o GetCertificatesCertificateCollectionItemSubjectOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateCollectionItemSubject) string { return v.UserId }).(pulumi.StringOutput)
}

type GetCertificatesCertificateCollectionItemSubjectArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateCollectionItemSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateCollectionItemSubject)(nil)).Elem()
}

func (o GetCertificatesCertificateCollectionItemSubjectArrayOutput) ToGetCertificatesCertificateCollectionItemSubjectArrayOutput() GetCertificatesCertificateCollectionItemSubjectArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemSubjectArrayOutput) ToGetCertificatesCertificateCollectionItemSubjectArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateCollectionItemSubjectArrayOutput {
	return o
}

func (o GetCertificatesCertificateCollectionItemSubjectArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesCertificateCollectionItemSubject] {
	return pulumix.Output[[]GetCertificatesCertificateCollectionItemSubject]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesCertificateCollectionItemSubjectArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateCollectionItemSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateCollectionItemSubject {
		return vs[0].([]GetCertificatesCertificateCollectionItemSubject)[vs[1].(int)]
	}).(GetCertificatesCertificateCollectionItemSubjectOutput)
}

type GetCertificatesFilter struct {
	// A filter that returns only resources that match the specified name.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetCertificatesFilterInput is an input type that accepts GetCertificatesFilterArgs and GetCertificatesFilterOutput values.
// You can construct a concrete instance of `GetCertificatesFilterInput` via:
//
//	GetCertificatesFilterArgs{...}
type GetCertificatesFilterInput interface {
	pulumi.Input

	ToGetCertificatesFilterOutput() GetCertificatesFilterOutput
	ToGetCertificatesFilterOutputWithContext(context.Context) GetCertificatesFilterOutput
}

type GetCertificatesFilterArgs struct {
	// A filter that returns only resources that match the specified name.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCertificatesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesFilter)(nil)).Elem()
}

func (i GetCertificatesFilterArgs) ToGetCertificatesFilterOutput() GetCertificatesFilterOutput {
	return i.ToGetCertificatesFilterOutputWithContext(context.Background())
}

func (i GetCertificatesFilterArgs) ToGetCertificatesFilterOutputWithContext(ctx context.Context) GetCertificatesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesFilterOutput)
}

func (i GetCertificatesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesFilter] {
	return pulumix.Output[GetCertificatesFilter]{
		OutputState: i.ToGetCertificatesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetCertificatesFilterArrayInput is an input type that accepts GetCertificatesFilterArray and GetCertificatesFilterArrayOutput values.
// You can construct a concrete instance of `GetCertificatesFilterArrayInput` via:
//
//	GetCertificatesFilterArray{ GetCertificatesFilterArgs{...} }
type GetCertificatesFilterArrayInput interface {
	pulumi.Input

	ToGetCertificatesFilterArrayOutput() GetCertificatesFilterArrayOutput
	ToGetCertificatesFilterArrayOutputWithContext(context.Context) GetCertificatesFilterArrayOutput
}

type GetCertificatesFilterArray []GetCertificatesFilterInput

func (GetCertificatesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesFilter)(nil)).Elem()
}

func (i GetCertificatesFilterArray) ToGetCertificatesFilterArrayOutput() GetCertificatesFilterArrayOutput {
	return i.ToGetCertificatesFilterArrayOutputWithContext(context.Background())
}

func (i GetCertificatesFilterArray) ToGetCertificatesFilterArrayOutputWithContext(ctx context.Context) GetCertificatesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesFilterArrayOutput)
}

func (i GetCertificatesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesFilter] {
	return pulumix.Output[[]GetCertificatesFilter]{
		OutputState: i.ToGetCertificatesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCertificatesFilterOutput struct{ *pulumi.OutputState }

func (GetCertificatesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesFilter)(nil)).Elem()
}

func (o GetCertificatesFilterOutput) ToGetCertificatesFilterOutput() GetCertificatesFilterOutput {
	return o
}

func (o GetCertificatesFilterOutput) ToGetCertificatesFilterOutputWithContext(ctx context.Context) GetCertificatesFilterOutput {
	return o
}

func (o GetCertificatesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetCertificatesFilter] {
	return pulumix.Output[GetCertificatesFilter]{
		OutputState: o.OutputState,
	}
}

// A filter that returns only resources that match the specified name.
func (o GetCertificatesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCertificatesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCertificatesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetCertificatesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificatesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCertificatesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesFilter)(nil)).Elem()
}

func (o GetCertificatesFilterArrayOutput) ToGetCertificatesFilterArrayOutput() GetCertificatesFilterArrayOutput {
	return o
}

func (o GetCertificatesFilterArrayOutput) ToGetCertificatesFilterArrayOutputWithContext(ctx context.Context) GetCertificatesFilterArrayOutput {
	return o
}

func (o GetCertificatesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCertificatesFilter] {
	return pulumix.Output[[]GetCertificatesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetCertificatesFilterArrayOutput) Index(i pulumi.IntInput) GetCertificatesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesFilter {
		return vs[0].([]GetCertificatesFilter)[vs[1].(int)]
	}).(GetCertificatesFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigInput)(nil)).Elem(), CertificateAuthorityCertificateAuthorityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigPtrInput)(nil)).Elem(), CertificateAuthorityCertificateAuthorityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigSubjectInput)(nil)).Elem(), CertificateAuthorityCertificateAuthorityConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigSubjectPtrInput)(nil)).Elem(), CertificateAuthorityCertificateAuthorityConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigValidityInput)(nil)).Elem(), CertificateAuthorityCertificateAuthorityConfigValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigValidityPtrInput)(nil)).Elem(), CertificateAuthorityCertificateAuthorityConfigValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateAuthorityRuleInput)(nil)).Elem(), CertificateAuthorityCertificateAuthorityRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateAuthorityRuleArrayInput)(nil)).Elem(), CertificateAuthorityCertificateAuthorityRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateRevocationListDetailsInput)(nil)).Elem(), CertificateAuthorityCertificateRevocationListDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateRevocationListDetailsPtrInput)(nil)).Elem(), CertificateAuthorityCertificateRevocationListDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigInput)(nil)).Elem(), CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrInput)(nil)).Elem(), CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCurrentVersionInput)(nil)).Elem(), CertificateAuthorityCurrentVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCurrentVersionArrayInput)(nil)).Elem(), CertificateAuthorityCurrentVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCurrentVersionRevocationStatusInput)(nil)).Elem(), CertificateAuthorityCurrentVersionRevocationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCurrentVersionRevocationStatusArrayInput)(nil)).Elem(), CertificateAuthorityCurrentVersionRevocationStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCurrentVersionValidityInput)(nil)).Elem(), CertificateAuthorityCurrentVersionValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthorityCurrentVersionValidityArrayInput)(nil)).Elem(), CertificateAuthorityCurrentVersionValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthoritySubjectInput)(nil)).Elem(), CertificateAuthoritySubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateAuthoritySubjectArrayInput)(nil)).Elem(), CertificateAuthoritySubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateConfigInput)(nil)).Elem(), CertificateCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateConfigPtrInput)(nil)).Elem(), CertificateCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateConfigSubjectInput)(nil)).Elem(), CertificateCertificateConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateConfigSubjectPtrInput)(nil)).Elem(), CertificateCertificateConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateConfigSubjectAlternativeNameInput)(nil)).Elem(), CertificateCertificateConfigSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateConfigSubjectAlternativeNameArrayInput)(nil)).Elem(), CertificateCertificateConfigSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateConfigValidityInput)(nil)).Elem(), CertificateCertificateConfigValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateConfigValidityPtrInput)(nil)).Elem(), CertificateCertificateConfigValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateRevocationListDetailInput)(nil)).Elem(), CertificateCertificateRevocationListDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateRevocationListDetailArrayInput)(nil)).Elem(), CertificateCertificateRevocationListDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateRevocationListDetailObjectStorageConfigInput)(nil)).Elem(), CertificateCertificateRevocationListDetailObjectStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateRevocationListDetailObjectStorageConfigArrayInput)(nil)).Elem(), CertificateCertificateRevocationListDetailObjectStorageConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateRuleInput)(nil)).Elem(), CertificateCertificateRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCertificateRuleArrayInput)(nil)).Elem(), CertificateCertificateRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCurrentVersionInput)(nil)).Elem(), CertificateCurrentVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCurrentVersionArrayInput)(nil)).Elem(), CertificateCurrentVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCurrentVersionRevocationStatusInput)(nil)).Elem(), CertificateCurrentVersionRevocationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCurrentVersionRevocationStatusArrayInput)(nil)).Elem(), CertificateCurrentVersionRevocationStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCurrentVersionSubjectAlternativeNameInput)(nil)).Elem(), CertificateCurrentVersionSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCurrentVersionSubjectAlternativeNameArrayInput)(nil)).Elem(), CertificateCurrentVersionSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCurrentVersionValidityInput)(nil)).Elem(), CertificateCurrentVersionValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCurrentVersionValidityArrayInput)(nil)).Elem(), CertificateCurrentVersionValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateSubjectInput)(nil)).Elem(), CertificateSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateSubjectArrayInput)(nil)).Elem(), CertificateSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssociationsAssociationCollectionInput)(nil)).Elem(), GetAssociationsAssociationCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssociationsAssociationCollectionArrayInput)(nil)).Elem(), GetAssociationsAssociationCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssociationsAssociationCollectionItemInput)(nil)).Elem(), GetAssociationsAssociationCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssociationsAssociationCollectionItemArrayInput)(nil)).Elem(), GetAssociationsAssociationCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssociationsFilterInput)(nil)).Elem(), GetAssociationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssociationsFilterArrayInput)(nil)).Elem(), GetAssociationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaBundlesCaBundleCollectionInput)(nil)).Elem(), GetCaBundlesCaBundleCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaBundlesCaBundleCollectionArrayInput)(nil)).Elem(), GetCaBundlesCaBundleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaBundlesCaBundleCollectionItemInput)(nil)).Elem(), GetCaBundlesCaBundleCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaBundlesCaBundleCollectionItemArrayInput)(nil)).Elem(), GetCaBundlesCaBundleCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaBundlesFilterInput)(nil)).Elem(), GetCaBundlesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaBundlesFilterArrayInput)(nil)).Elem(), GetCaBundlesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayInput)(nil)).Elem(), GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesFilterInput)(nil)).Elem(), GetCertificateAuthoritiesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritiesFilterArrayInput)(nil)).Elem(), GetCertificateAuthoritiesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfigInput)(nil)).Elem(), GetCertificateAuthorityCertificateAuthorityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfigArrayInput)(nil)).Elem(), GetCertificateAuthorityCertificateAuthorityConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfigSubjectInput)(nil)).Elem(), GetCertificateAuthorityCertificateAuthorityConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayInput)(nil)).Elem(), GetCertificateAuthorityCertificateAuthorityConfigSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfigValidityInput)(nil)).Elem(), GetCertificateAuthorityCertificateAuthorityConfigValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityConfigValidityArrayInput)(nil)).Elem(), GetCertificateAuthorityCertificateAuthorityConfigValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityRuleInput)(nil)).Elem(), GetCertificateAuthorityCertificateAuthorityRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateAuthorityRuleArrayInput)(nil)).Elem(), GetCertificateAuthorityCertificateAuthorityRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateRevocationListDetailInput)(nil)).Elem(), GetCertificateAuthorityCertificateRevocationListDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateRevocationListDetailArrayInput)(nil)).Elem(), GetCertificateAuthorityCertificateRevocationListDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigInput)(nil)).Elem(), GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayInput)(nil)).Elem(), GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCurrentVersionInput)(nil)).Elem(), GetCertificateAuthorityCurrentVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCurrentVersionArrayInput)(nil)).Elem(), GetCertificateAuthorityCurrentVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCurrentVersionRevocationStatusInput)(nil)).Elem(), GetCertificateAuthorityCurrentVersionRevocationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCurrentVersionRevocationStatusArrayInput)(nil)).Elem(), GetCertificateAuthorityCurrentVersionRevocationStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCurrentVersionValidityInput)(nil)).Elem(), GetCertificateAuthorityCurrentVersionValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityCurrentVersionValidityArrayInput)(nil)).Elem(), GetCertificateAuthorityCurrentVersionValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritySubjectInput)(nil)).Elem(), GetCertificateAuthoritySubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthoritySubjectArrayInput)(nil)).Elem(), GetCertificateAuthoritySubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionRevocationStatusInput)(nil)).Elem(), GetCertificateAuthorityVersionRevocationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionRevocationStatusArrayInput)(nil)).Elem(), GetCertificateAuthorityVersionRevocationStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionSubjectAlternativeNameInput)(nil)).Elem(), GetCertificateAuthorityVersionSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionSubjectAlternativeNameArrayInput)(nil)).Elem(), GetCertificateAuthorityVersionSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionValidityInput)(nil)).Elem(), GetCertificateAuthorityVersionValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionValidityArrayInput)(nil)).Elem(), GetCertificateAuthorityVersionValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionInput)(nil)).Elem(), GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayInput)(nil)).Elem(), GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemInput)(nil)).Elem(), GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayInput)(nil)).Elem(), GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusInput)(nil)).Elem(), GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayInput)(nil)).Elem(), GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityInput)(nil)).Elem(), GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayInput)(nil)).Elem(), GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionsFilterInput)(nil)).Elem(), GetCertificateAuthorityVersionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateAuthorityVersionsFilterArrayInput)(nil)).Elem(), GetCertificateAuthorityVersionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateConfigInput)(nil)).Elem(), GetCertificateCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateConfigArrayInput)(nil)).Elem(), GetCertificateCertificateConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateConfigSubjectInput)(nil)).Elem(), GetCertificateCertificateConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateConfigSubjectArrayInput)(nil)).Elem(), GetCertificateCertificateConfigSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateConfigSubjectAlternativeNameInput)(nil)).Elem(), GetCertificateCertificateConfigSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateConfigSubjectAlternativeNameArrayInput)(nil)).Elem(), GetCertificateCertificateConfigSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateConfigValidityInput)(nil)).Elem(), GetCertificateCertificateConfigValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateConfigValidityArrayInput)(nil)).Elem(), GetCertificateCertificateConfigValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateRevocationListDetailInput)(nil)).Elem(), GetCertificateCertificateRevocationListDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateRevocationListDetailArrayInput)(nil)).Elem(), GetCertificateCertificateRevocationListDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateRevocationListDetailObjectStorageConfigInput)(nil)).Elem(), GetCertificateCertificateRevocationListDetailObjectStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayInput)(nil)).Elem(), GetCertificateCertificateRevocationListDetailObjectStorageConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateRuleInput)(nil)).Elem(), GetCertificateCertificateRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCertificateRuleArrayInput)(nil)).Elem(), GetCertificateCertificateRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCurrentVersionInput)(nil)).Elem(), GetCertificateCurrentVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCurrentVersionArrayInput)(nil)).Elem(), GetCertificateCurrentVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCurrentVersionRevocationStatusInput)(nil)).Elem(), GetCertificateCurrentVersionRevocationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCurrentVersionRevocationStatusArrayInput)(nil)).Elem(), GetCertificateCurrentVersionRevocationStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCurrentVersionSubjectAlternativeNameInput)(nil)).Elem(), GetCertificateCurrentVersionSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCurrentVersionSubjectAlternativeNameArrayInput)(nil)).Elem(), GetCertificateCurrentVersionSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCurrentVersionValidityInput)(nil)).Elem(), GetCertificateCurrentVersionValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateCurrentVersionValidityArrayInput)(nil)).Elem(), GetCertificateCurrentVersionValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateSubjectInput)(nil)).Elem(), GetCertificateSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateSubjectArrayInput)(nil)).Elem(), GetCertificateSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionRevocationStatusInput)(nil)).Elem(), GetCertificateVersionRevocationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionRevocationStatusArrayInput)(nil)).Elem(), GetCertificateVersionRevocationStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionSubjectAlternativeNameInput)(nil)).Elem(), GetCertificateVersionSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionSubjectAlternativeNameArrayInput)(nil)).Elem(), GetCertificateVersionSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionValidityInput)(nil)).Elem(), GetCertificateVersionValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionValidityArrayInput)(nil)).Elem(), GetCertificateVersionValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionInput)(nil)).Elem(), GetCertificateVersionsCertificateVersionCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionArrayInput)(nil)).Elem(), GetCertificateVersionsCertificateVersionCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemInput)(nil)).Elem(), GetCertificateVersionsCertificateVersionCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemArrayInput)(nil)).Elem(), GetCertificateVersionsCertificateVersionCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusInput)(nil)).Elem(), GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayInput)(nil)).Elem(), GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameInput)(nil)).Elem(), GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayInput)(nil)).Elem(), GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemValidityInput)(nil)).Elem(), GetCertificateVersionsCertificateVersionCollectionItemValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsCertificateVersionCollectionItemValidityArrayInput)(nil)).Elem(), GetCertificateVersionsCertificateVersionCollectionItemValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsFilterInput)(nil)).Elem(), GetCertificateVersionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateVersionsFilterArrayInput)(nil)).Elem(), GetCertificateVersionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionInput)(nil)).Elem(), GetCertificatesCertificateCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigSubjectInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateConfigSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateConfigSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigValidityInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateConfigValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateConfigValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRevocationListDetailInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRuleInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCertificateRuleArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCertificateRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCurrentVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCurrentVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionValidityInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCurrentVersionValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemCurrentVersionValidityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemSubjectInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateCollectionItemSubjectArrayInput)(nil)).Elem(), GetCertificatesCertificateCollectionItemSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesFilterInput)(nil)).Elem(), GetCertificatesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesFilterArrayInput)(nil)).Elem(), GetCertificatesFilterArray{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateAuthorityConfigOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateAuthorityConfigPtrOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateAuthorityConfigSubjectOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateAuthorityConfigSubjectPtrOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateAuthorityConfigValidityOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateAuthorityConfigValidityPtrOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateAuthorityRuleOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateAuthorityRuleArrayOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateRevocationListDetailsOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateRevocationListDetailsPtrOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigPtrOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCurrentVersionOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCurrentVersionArrayOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCurrentVersionRevocationStatusOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCurrentVersionRevocationStatusArrayOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCurrentVersionValidityOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCurrentVersionValidityArrayOutput{})
	pulumi.RegisterOutputType(CertificateAuthoritySubjectOutput{})
	pulumi.RegisterOutputType(CertificateAuthoritySubjectArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateConfigOutput{})
	pulumi.RegisterOutputType(CertificateCertificateConfigPtrOutput{})
	pulumi.RegisterOutputType(CertificateCertificateConfigSubjectOutput{})
	pulumi.RegisterOutputType(CertificateCertificateConfigSubjectPtrOutput{})
	pulumi.RegisterOutputType(CertificateCertificateConfigSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(CertificateCertificateConfigSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateConfigValidityOutput{})
	pulumi.RegisterOutputType(CertificateCertificateConfigValidityPtrOutput{})
	pulumi.RegisterOutputType(CertificateCertificateRevocationListDetailOutput{})
	pulumi.RegisterOutputType(CertificateCertificateRevocationListDetailArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateRevocationListDetailObjectStorageConfigOutput{})
	pulumi.RegisterOutputType(CertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificateRuleOutput{})
	pulumi.RegisterOutputType(CertificateCertificateRuleArrayOutput{})
	pulumi.RegisterOutputType(CertificateCurrentVersionOutput{})
	pulumi.RegisterOutputType(CertificateCurrentVersionArrayOutput{})
	pulumi.RegisterOutputType(CertificateCurrentVersionRevocationStatusOutput{})
	pulumi.RegisterOutputType(CertificateCurrentVersionRevocationStatusArrayOutput{})
	pulumi.RegisterOutputType(CertificateCurrentVersionSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(CertificateCurrentVersionSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(CertificateCurrentVersionValidityOutput{})
	pulumi.RegisterOutputType(CertificateCurrentVersionValidityArrayOutput{})
	pulumi.RegisterOutputType(CertificateSubjectOutput{})
	pulumi.RegisterOutputType(CertificateSubjectArrayOutput{})
	pulumi.RegisterOutputType(GetAssociationsAssociationCollectionOutput{})
	pulumi.RegisterOutputType(GetAssociationsAssociationCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetAssociationsAssociationCollectionItemOutput{})
	pulumi.RegisterOutputType(GetAssociationsAssociationCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetAssociationsFilterOutput{})
	pulumi.RegisterOutputType(GetAssociationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetCaBundlesCaBundleCollectionOutput{})
	pulumi.RegisterOutputType(GetCaBundlesCaBundleCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetCaBundlesCaBundleCollectionItemOutput{})
	pulumi.RegisterOutputType(GetCaBundlesCaBundleCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetCaBundlesFilterOutput{})
	pulumi.RegisterOutputType(GetCaBundlesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigSubjectArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityConfigValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateAuthorityRuleArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionRevocationStatusArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemCurrentVersionValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesCertificateAuthorityCollectionItemSubjectArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesFilterOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritiesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateAuthorityConfigOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateAuthorityConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateAuthorityConfigSubjectOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateAuthorityConfigSubjectArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateAuthorityConfigValidityOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateAuthorityConfigValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateAuthorityRuleOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateAuthorityRuleArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateRevocationListDetailOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateRevocationListDetailArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCertificateRevocationListDetailObjectStorageConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCurrentVersionOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCurrentVersionArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCurrentVersionRevocationStatusOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCurrentVersionRevocationStatusArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCurrentVersionValidityOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityCurrentVersionValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritySubjectOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthoritySubjectArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionRevocationStatusOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionRevocationStatusArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionValidityOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemRevocationStatusArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionsCertificateAuthorityVersionCollectionItemValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionsFilterOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityVersionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateConfigOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateConfigSubjectOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateConfigSubjectArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateConfigSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateConfigSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateConfigValidityOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateConfigValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateRevocationListDetailOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateRevocationListDetailArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateRevocationListDetailObjectStorageConfigOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateRevocationListDetailObjectStorageConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateRuleOutput{})
	pulumi.RegisterOutputType(GetCertificateCertificateRuleArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateCurrentVersionOutput{})
	pulumi.RegisterOutputType(GetCertificateCurrentVersionArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateCurrentVersionRevocationStatusOutput{})
	pulumi.RegisterOutputType(GetCertificateCurrentVersionRevocationStatusArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateCurrentVersionSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetCertificateCurrentVersionSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateCurrentVersionValidityOutput{})
	pulumi.RegisterOutputType(GetCertificateCurrentVersionValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateSubjectOutput{})
	pulumi.RegisterOutputType(GetCertificateSubjectArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionRevocationStatusOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionRevocationStatusArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionValidityOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsCertificateVersionCollectionOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsCertificateVersionCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsCertificateVersionCollectionItemOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsCertificateVersionCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsCertificateVersionCollectionItemRevocationStatusArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsCertificateVersionCollectionItemSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsCertificateVersionCollectionItemValidityOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsCertificateVersionCollectionItemValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsFilterOutput{})
	pulumi.RegisterOutputType(GetCertificateVersionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateConfigOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateConfigSubjectOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateConfigSubjectArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateConfigSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateConfigValidityOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateConfigValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateRevocationListDetailObjectStorageConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateRuleOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCertificateRuleArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCurrentVersionOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCurrentVersionArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCurrentVersionRevocationStatusArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCurrentVersionSubjectAlternativeNameArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCurrentVersionValidityOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemCurrentVersionValidityArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemSubjectOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateCollectionItemSubjectArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesFilterOutput{})
	pulumi.RegisterOutputType(GetCertificatesFilterArrayOutput{})
}
