// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudbridge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Appliance Image resource in Oracle Cloud Infrastructure Cloud Bridge service.
//
// Returns a list of Appliance Images.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/CloudBridge"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudBridge.GetApplianceImage(ctx, &cloudbridge.GetApplianceImageArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(applianceImageDisplayName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetApplianceImage(ctx *pulumi.Context, args *GetApplianceImageArgs, opts ...pulumi.InvokeOption) (*GetApplianceImageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetApplianceImageResult
	err := ctx.Invoke("oci:CloudBridge/getApplianceImage:getApplianceImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplianceImage.
type GetApplianceImageArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string `pulumi:"displayName"`
}

// A collection of values returned by getApplianceImage.
type GetApplianceImageResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// The name of the image to be displayed.
	DisplayName *string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of appliance images.
	Items []GetApplianceImageItem `pulumi:"items"`
}

func GetApplianceImageOutput(ctx *pulumi.Context, args GetApplianceImageOutputArgs, opts ...pulumi.InvokeOption) GetApplianceImageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetApplianceImageResultOutput, error) {
			args := v.(GetApplianceImageArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetApplianceImageResult
			secret, err := ctx.InvokePackageRaw("oci:CloudBridge/getApplianceImage:getApplianceImage", args, &rv, "", opts...)
			if err != nil {
				return GetApplianceImageResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetApplianceImageResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetApplianceImageResultOutput), nil
			}
			return output, nil
		}).(GetApplianceImageResultOutput)
}

// A collection of arguments for invoking getApplianceImage.
type GetApplianceImageOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (GetApplianceImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceImageArgs)(nil)).Elem()
}

// A collection of values returned by getApplianceImage.
type GetApplianceImageResultOutput struct{ *pulumi.OutputState }

func (GetApplianceImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplianceImageResult)(nil)).Elem()
}

func (o GetApplianceImageResultOutput) ToGetApplianceImageResultOutput() GetApplianceImageResultOutput {
	return o
}

func (o GetApplianceImageResultOutput) ToGetApplianceImageResultOutputWithContext(ctx context.Context) GetApplianceImageResultOutput {
	return o
}

func (o GetApplianceImageResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceImageResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The name of the image to be displayed.
func (o GetApplianceImageResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplianceImageResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetApplianceImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplianceImageResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of appliance images.
func (o GetApplianceImageResultOutput) Items() GetApplianceImageItemArrayOutput {
	return o.ApplyT(func(v GetApplianceImageResult) []GetApplianceImageItem { return v.Items }).(GetApplianceImageItemArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetApplianceImageResultOutput{})
}
