// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudbridge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Asset Sources in Oracle Cloud Infrastructure Cloud Bridge service.
//
// Returns a list of asset sources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CloudBridge"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudBridge.GetAssetSources(ctx, &cloudbridge.GetAssetSourcesArgs{
//				CompartmentId: _var.Compartment_id,
//				AssetSourceId: pulumi.StringRef(oci_cloud_bridge_asset_source.Test_asset_source.Id),
//				DisplayName:   pulumi.StringRef(_var.Asset_source_display_name),
//				State:         pulumi.StringRef(_var.Asset_source_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAssetSources(ctx *pulumi.Context, args *GetAssetSourcesArgs, opts ...pulumi.InvokeOption) (*GetAssetSourcesResult, error) {
	var rv GetAssetSourcesResult
	err := ctx.Invoke("oci:CloudBridge/getAssetSources:getAssetSources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAssetSources.
type GetAssetSourcesArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the asset source.
	AssetSourceId *string `pulumi:"assetSourceId"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetAssetSourcesFilter `pulumi:"filters"`
	// The current state of the asset source.
	State *string `pulumi:"state"`
}

// A collection of values returned by getAssetSources.
type GetAssetSourcesResult struct {
	// The list of asset_source_collection.
	AssetSourceCollections []GetAssetSourcesAssetSourceCollection `pulumi:"assetSourceCollections"`
	AssetSourceId          *string                                `pulumi:"assetSourceId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the resource.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name for the asset source. Does not have to be unique, and it's mutable. Avoid entering confidential information.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetAssetSourcesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the asset source.
	State *string `pulumi:"state"`
}

func GetAssetSourcesOutput(ctx *pulumi.Context, args GetAssetSourcesOutputArgs, opts ...pulumi.InvokeOption) GetAssetSourcesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAssetSourcesResult, error) {
			args := v.(GetAssetSourcesArgs)
			r, err := GetAssetSources(ctx, &args, opts...)
			var s GetAssetSourcesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAssetSourcesResultOutput)
}

// A collection of arguments for invoking getAssetSources.
type GetAssetSourcesOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the asset source.
	AssetSourceId pulumi.StringPtrInput `pulumi:"assetSourceId"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput           `pulumi:"displayName"`
	Filters     GetAssetSourcesFilterArrayInput `pulumi:"filters"`
	// The current state of the asset source.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetAssetSourcesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssetSourcesArgs)(nil)).Elem()
}

// A collection of values returned by getAssetSources.
type GetAssetSourcesResultOutput struct{ *pulumi.OutputState }

func (GetAssetSourcesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssetSourcesResult)(nil)).Elem()
}

func (o GetAssetSourcesResultOutput) ToGetAssetSourcesResultOutput() GetAssetSourcesResultOutput {
	return o
}

func (o GetAssetSourcesResultOutput) ToGetAssetSourcesResultOutputWithContext(ctx context.Context) GetAssetSourcesResultOutput {
	return o
}

// The list of asset_source_collection.
func (o GetAssetSourcesResultOutput) AssetSourceCollections() GetAssetSourcesAssetSourceCollectionArrayOutput {
	return o.ApplyT(func(v GetAssetSourcesResult) []GetAssetSourcesAssetSourceCollection { return v.AssetSourceCollections }).(GetAssetSourcesAssetSourceCollectionArrayOutput)
}

func (o GetAssetSourcesResultOutput) AssetSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssetSourcesResult) *string { return v.AssetSourceId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the resource.
func (o GetAssetSourcesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssetSourcesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name for the asset source. Does not have to be unique, and it's mutable. Avoid entering confidential information.
func (o GetAssetSourcesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssetSourcesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetAssetSourcesResultOutput) Filters() GetAssetSourcesFilterArrayOutput {
	return o.ApplyT(func(v GetAssetSourcesResult) []GetAssetSourcesFilter { return v.Filters }).(GetAssetSourcesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAssetSourcesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssetSourcesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the asset source.
func (o GetAssetSourcesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssetSourcesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAssetSourcesResultOutput{})
}
