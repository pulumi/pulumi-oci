// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudbridge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Assets in Oracle Cloud Infrastructure Cloud Bridge service.
//
// Returns a list of assets.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/cloudbridge"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudbridge.GetAssets(ctx, &cloudbridge.GetAssetsArgs{
//				CompartmentId:    compartmentId,
//				AssetId:          pulumi.StringRef(testAsset.Id),
//				AssetType:        pulumi.StringRef(assetAssetType),
//				DisplayName:      pulumi.StringRef(assetDisplayName),
//				ExternalAssetKey: pulumi.StringRef(assetExternalAssetKey),
//				InventoryId:      pulumi.StringRef(testInventory.Id),
//				SourceKey:        pulumi.StringRef(assetSourceKey),
//				State:            pulumi.StringRef(assetState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAssets(ctx *pulumi.Context, args *GetAssetsArgs, opts ...pulumi.InvokeOption) (*GetAssetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAssetsResult
	err := ctx.Invoke("oci:CloudBridge/getAssets:getAssets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAssets.
type GetAssetsArgs struct {
	// Unique asset identifier.
	AssetId *string `pulumi:"assetId"`
	// The type of asset.
	AssetType *string `pulumi:"assetType"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string `pulumi:"displayName"`
	// External asset key.
	ExternalAssetKey *string           `pulumi:"externalAssetKey"`
	Filters          []GetAssetsFilter `pulumi:"filters"`
	// Unique Inventory identifier.
	InventoryId *string `pulumi:"inventoryId"`
	// Source key from where the assets originate.
	SourceKey *string `pulumi:"sourceKey"`
	// A filter to return only assets whose lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getAssets.
type GetAssetsResult struct {
	// The list of asset_collection.
	AssetCollections []GetAssetsAssetCollection `pulumi:"assetCollections"`
	AssetId          *string                    `pulumi:"assetId"`
	// The type of asset.
	AssetType *string `pulumi:"assetType"`
	// The OCID of the compartment to which an asset belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// Asset display name.
	DisplayName *string `pulumi:"displayName"`
	// The key of the asset from the external environment.
	ExternalAssetKey *string           `pulumi:"externalAssetKey"`
	Filters          []GetAssetsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Inventory ID to which an asset belongs to.
	InventoryId *string `pulumi:"inventoryId"`
	// The source key that the asset belongs to.
	SourceKey *string `pulumi:"sourceKey"`
	// The current state of the asset.
	State *string `pulumi:"state"`
}

func GetAssetsOutput(ctx *pulumi.Context, args GetAssetsOutputArgs, opts ...pulumi.InvokeOption) GetAssetsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAssetsResultOutput, error) {
			args := v.(GetAssetsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:CloudBridge/getAssets:getAssets", args, GetAssetsResultOutput{}, options).(GetAssetsResultOutput), nil
		}).(GetAssetsResultOutput)
}

// A collection of arguments for invoking getAssets.
type GetAssetsOutputArgs struct {
	// Unique asset identifier.
	AssetId pulumi.StringPtrInput `pulumi:"assetId"`
	// The type of asset.
	AssetType pulumi.StringPtrInput `pulumi:"assetType"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// External asset key.
	ExternalAssetKey pulumi.StringPtrInput     `pulumi:"externalAssetKey"`
	Filters          GetAssetsFilterArrayInput `pulumi:"filters"`
	// Unique Inventory identifier.
	InventoryId pulumi.StringPtrInput `pulumi:"inventoryId"`
	// Source key from where the assets originate.
	SourceKey pulumi.StringPtrInput `pulumi:"sourceKey"`
	// A filter to return only assets whose lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetAssetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssetsArgs)(nil)).Elem()
}

// A collection of values returned by getAssets.
type GetAssetsResultOutput struct{ *pulumi.OutputState }

func (GetAssetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssetsResult)(nil)).Elem()
}

func (o GetAssetsResultOutput) ToGetAssetsResultOutput() GetAssetsResultOutput {
	return o
}

func (o GetAssetsResultOutput) ToGetAssetsResultOutputWithContext(ctx context.Context) GetAssetsResultOutput {
	return o
}

// The list of asset_collection.
func (o GetAssetsResultOutput) AssetCollections() GetAssetsAssetCollectionArrayOutput {
	return o.ApplyT(func(v GetAssetsResult) []GetAssetsAssetCollection { return v.AssetCollections }).(GetAssetsAssetCollectionArrayOutput)
}

func (o GetAssetsResultOutput) AssetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssetsResult) *string { return v.AssetId }).(pulumi.StringPtrOutput)
}

// The type of asset.
func (o GetAssetsResultOutput) AssetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssetsResult) *string { return v.AssetType }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment to which an asset belongs to.
func (o GetAssetsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssetsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Asset display name.
func (o GetAssetsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssetsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The key of the asset from the external environment.
func (o GetAssetsResultOutput) ExternalAssetKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssetsResult) *string { return v.ExternalAssetKey }).(pulumi.StringPtrOutput)
}

func (o GetAssetsResultOutput) Filters() GetAssetsFilterArrayOutput {
	return o.ApplyT(func(v GetAssetsResult) []GetAssetsFilter { return v.Filters }).(GetAssetsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAssetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssetsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Inventory ID to which an asset belongs to.
func (o GetAssetsResultOutput) InventoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssetsResult) *string { return v.InventoryId }).(pulumi.StringPtrOutput)
}

// The source key that the asset belongs to.
func (o GetAssetsResultOutput) SourceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssetsResult) *string { return v.SourceKey }).(pulumi.StringPtrOutput)
}

// The current state of the asset.
func (o GetAssetsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAssetsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAssetsResultOutput{})
}
