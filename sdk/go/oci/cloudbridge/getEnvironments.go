// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudbridge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Environments in Oracle Cloud Infrastructure Cloud Bridge service.
//
// Returns a list of source environments.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/CloudBridge"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudBridge.GetEnvironments(ctx, &cloudbridge.GetEnvironmentsArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(environmentDisplayName),
//				EnvironmentId: pulumi.StringRef(testEnvironment.Id),
//				State:         pulumi.StringRef(environmentState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEnvironments(ctx *pulumi.Context, args *GetEnvironmentsArgs, opts ...pulumi.InvokeOption) (*GetEnvironmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEnvironmentsResult
	err := ctx.Invoke("oci:CloudBridge/getEnvironments:getEnvironments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEnvironments.
type GetEnvironmentsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string `pulumi:"displayName"`
	// A filter to return only resources that match the given environment ID.
	EnvironmentId *string                 `pulumi:"environmentId"`
	Filters       []GetEnvironmentsFilter `pulumi:"filters"`
	// A filter to return only resources where their lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getEnvironments.
type GetEnvironmentsResult struct {
	// Compartment identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// Environment identifier, which can be renamed.
	DisplayName *string `pulumi:"displayName"`
	// The list of environment_collection.
	EnvironmentCollections []GetEnvironmentsEnvironmentCollection `pulumi:"environmentCollections"`
	EnvironmentId          *string                                `pulumi:"environmentId"`
	Filters                []GetEnvironmentsFilter                `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the source environment.
	State *string `pulumi:"state"`
}

func GetEnvironmentsOutput(ctx *pulumi.Context, args GetEnvironmentsOutputArgs, opts ...pulumi.InvokeOption) GetEnvironmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEnvironmentsResult, error) {
			args := v.(GetEnvironmentsArgs)
			r, err := GetEnvironments(ctx, &args, opts...)
			var s GetEnvironmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEnvironmentsResultOutput)
}

// A collection of arguments for invoking getEnvironments.
type GetEnvironmentsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A filter to return only resources that match the given environment ID.
	EnvironmentId pulumi.StringPtrInput           `pulumi:"environmentId"`
	Filters       GetEnvironmentsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources where their lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetEnvironmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsArgs)(nil)).Elem()
}

// A collection of values returned by getEnvironments.
type GetEnvironmentsResultOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsResult)(nil)).Elem()
}

func (o GetEnvironmentsResultOutput) ToGetEnvironmentsResultOutput() GetEnvironmentsResultOutput {
	return o
}

func (o GetEnvironmentsResultOutput) ToGetEnvironmentsResultOutputWithContext(ctx context.Context) GetEnvironmentsResultOutput {
	return o
}

// Compartment identifier.
func (o GetEnvironmentsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Environment identifier, which can be renamed.
func (o GetEnvironmentsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The list of environment_collection.
func (o GetEnvironmentsResultOutput) EnvironmentCollections() GetEnvironmentsEnvironmentCollectionArrayOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) []GetEnvironmentsEnvironmentCollection { return v.EnvironmentCollections }).(GetEnvironmentsEnvironmentCollectionArrayOutput)
}

func (o GetEnvironmentsResultOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

func (o GetEnvironmentsResultOutput) Filters() GetEnvironmentsFilterArrayOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) []GetEnvironmentsFilter { return v.Filters }).(GetEnvironmentsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEnvironmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the source environment.
func (o GetEnvironmentsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEnvironmentsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEnvironmentsResultOutput{})
}
