// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudbridge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Inventories in Oracle Cloud Infrastructure Cloud Bridge service.
//
// Returns a list of inventories.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/CloudBridge"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudBridge.GetInventories(ctx, &cloudbridge.GetInventoriesArgs{
//				CompartmentId: compartmentId,
//				State:         pulumi.StringRef(inventoryState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInventories(ctx *pulumi.Context, args *GetInventoriesArgs, opts ...pulumi.InvokeOption) (*GetInventoriesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInventoriesResult
	err := ctx.Invoke("oci:CloudBridge/getInventories:getInventories", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInventories.
type GetInventoriesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string                 `pulumi:"compartmentId"`
	Filters       []GetInventoriesFilter `pulumi:"filters"`
	// A filter to return inventory if the lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getInventories.
type GetInventoriesResult struct {
	// The OCID of the tenantId.
	CompartmentId string                 `pulumi:"compartmentId"`
	Filters       []GetInventoriesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of inventory_collection.
	InventoryCollections []GetInventoriesInventoryCollection `pulumi:"inventoryCollections"`
	// The current state of the inventory.
	State *string `pulumi:"state"`
}

func GetInventoriesOutput(ctx *pulumi.Context, args GetInventoriesOutputArgs, opts ...pulumi.InvokeOption) GetInventoriesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetInventoriesResultOutput, error) {
			args := v.(GetInventoriesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:CloudBridge/getInventories:getInventories", args, GetInventoriesResultOutput{}, options).(GetInventoriesResultOutput), nil
		}).(GetInventoriesResultOutput)
}

// A collection of arguments for invoking getInventories.
type GetInventoriesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput             `pulumi:"compartmentId"`
	Filters       GetInventoriesFilterArrayInput `pulumi:"filters"`
	// A filter to return inventory if the lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetInventoriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoriesArgs)(nil)).Elem()
}

// A collection of values returned by getInventories.
type GetInventoriesResultOutput struct{ *pulumi.OutputState }

func (GetInventoriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoriesResult)(nil)).Elem()
}

func (o GetInventoriesResultOutput) ToGetInventoriesResultOutput() GetInventoriesResultOutput {
	return o
}

func (o GetInventoriesResultOutput) ToGetInventoriesResultOutputWithContext(ctx context.Context) GetInventoriesResultOutput {
	return o
}

// The OCID of the tenantId.
func (o GetInventoriesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoriesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetInventoriesResultOutput) Filters() GetInventoriesFilterArrayOutput {
	return o.ApplyT(func(v GetInventoriesResult) []GetInventoriesFilter { return v.Filters }).(GetInventoriesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInventoriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoriesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of inventory_collection.
func (o GetInventoriesResultOutput) InventoryCollections() GetInventoriesInventoryCollectionArrayOutput {
	return o.ApplyT(func(v GetInventoriesResult) []GetInventoriesInventoryCollection { return v.InventoryCollections }).(GetInventoriesInventoryCollectionArrayOutput)
}

// The current state of the inventory.
func (o GetInventoriesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoriesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInventoriesResultOutput{})
}
