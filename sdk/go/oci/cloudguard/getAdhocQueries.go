// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Adhoc Queries in Oracle Cloud Infrastructure Cloud Guard service.
//
// Returns a list of all adhoc queries (AdhocQuery resources) for a compartment
// identified by compartmentId. List is returned in a AdhocQueryCollection resource
// with page of AdhocQuerySummary resources.
//
// The ListAdhocQueries operation returns only the adhoc queries in 'compartmentId' passed.
// The list does not include any subcompartments of the compartmentId passed.
//
// The parameter `accessLevel` specifies whether to return only those compartments for which the
// requestor has INSPECT permissions on at least one resource directly
// or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
// Principal doesn't have access to even one of the child compartments. This is valid only when
// `compartmentIdInSubtree` is set to `true`.
//
// The parameter `compartmentIdInSubtree` applies when you perform ListAdhocQueries on the
// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
// To get a full list of all compartments and subcompartments in the tenancy (root compartment),
// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CloudGuard"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudGuard.GetAdhocQueries(ctx, &cloudguard.GetAdhocQueriesArgs{
//				CompartmentId:               compartmentId,
//				AccessLevel:                 pulumi.StringRef(adhocQueryAccessLevel),
//				AdhocQueryStatus:            pulumi.StringRef(adhocQueryAdhocQueryStatus),
//				CompartmentIdInSubtree:      pulumi.BoolRef(adhocQueryCompartmentIdInSubtree),
//				TimeEndedFilterQueryParam:   pulumi.StringRef(adhocQueryTimeEndedFilterQueryParam),
//				TimeStartedFilterQueryParam: pulumi.StringRef(adhocQueryTimeStartedFilterQueryParam),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAdhocQueries(ctx *pulumi.Context, args *GetAdhocQueriesArgs, opts ...pulumi.InvokeOption) (*GetAdhocQueriesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAdhocQueriesResult
	err := ctx.Invoke("oci:CloudGuard/getAdhocQueries:getAdhocQueries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAdhocQueries.
type GetAdhocQueriesArgs struct {
	// Valid values are `RESTRICTED` and `ACCESSIBLE`. Default is `RESTRICTED`. Setting this to `ACCESSIBLE` returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to `RESTRICTED` permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// The status of the adhoc query created. Default value for state is provisioning. If no value is specified state is provisioning.
	AdhocQueryStatus *string `pulumi:"adhocQueryStatus"`
	// The OCID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the setting of `accessLevel`.
	CompartmentIdInSubtree *bool                   `pulumi:"compartmentIdInSubtree"`
	Filters                []GetAdhocQueriesFilter `pulumi:"filters"`
	// End time for a filter. If end time is not specified, end time will be set to current time.
	TimeEndedFilterQueryParam *string `pulumi:"timeEndedFilterQueryParam"`
	// Start time for a filter. If start time is not specified, start time will be set to current time - 30 days.
	TimeStartedFilterQueryParam *string `pulumi:"timeStartedFilterQueryParam"`
}

// A collection of values returned by getAdhocQueries.
type GetAdhocQueriesResult struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// The list of adhoc_query_collection.
	AdhocQueryCollections []GetAdhocQueriesAdhocQueryCollection `pulumi:"adhocQueryCollections"`
	AdhocQueryStatus      *string                               `pulumi:"adhocQueryStatus"`
	// Compartment OCID of the adhoc query
	CompartmentId          string                  `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool                   `pulumi:"compartmentIdInSubtree"`
	Filters                []GetAdhocQueriesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                          string  `pulumi:"id"`
	TimeEndedFilterQueryParam   *string `pulumi:"timeEndedFilterQueryParam"`
	TimeStartedFilterQueryParam *string `pulumi:"timeStartedFilterQueryParam"`
}

func GetAdhocQueriesOutput(ctx *pulumi.Context, args GetAdhocQueriesOutputArgs, opts ...pulumi.InvokeOption) GetAdhocQueriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAdhocQueriesResult, error) {
			args := v.(GetAdhocQueriesArgs)
			r, err := GetAdhocQueries(ctx, &args, opts...)
			var s GetAdhocQueriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAdhocQueriesResultOutput)
}

// A collection of arguments for invoking getAdhocQueries.
type GetAdhocQueriesOutputArgs struct {
	// Valid values are `RESTRICTED` and `ACCESSIBLE`. Default is `RESTRICTED`. Setting this to `ACCESSIBLE` returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to `RESTRICTED` permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// The status of the adhoc query created. Default value for state is provisioning. If no value is specified state is provisioning.
	AdhocQueryStatus pulumi.StringPtrInput `pulumi:"adhocQueryStatus"`
	// The OCID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the setting of `accessLevel`.
	CompartmentIdInSubtree pulumi.BoolPtrInput             `pulumi:"compartmentIdInSubtree"`
	Filters                GetAdhocQueriesFilterArrayInput `pulumi:"filters"`
	// End time for a filter. If end time is not specified, end time will be set to current time.
	TimeEndedFilterQueryParam pulumi.StringPtrInput `pulumi:"timeEndedFilterQueryParam"`
	// Start time for a filter. If start time is not specified, start time will be set to current time - 30 days.
	TimeStartedFilterQueryParam pulumi.StringPtrInput `pulumi:"timeStartedFilterQueryParam"`
}

func (GetAdhocQueriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdhocQueriesArgs)(nil)).Elem()
}

// A collection of values returned by getAdhocQueries.
type GetAdhocQueriesResultOutput struct{ *pulumi.OutputState }

func (GetAdhocQueriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdhocQueriesResult)(nil)).Elem()
}

func (o GetAdhocQueriesResultOutput) ToGetAdhocQueriesResultOutput() GetAdhocQueriesResultOutput {
	return o
}

func (o GetAdhocQueriesResultOutput) ToGetAdhocQueriesResultOutputWithContext(ctx context.Context) GetAdhocQueriesResultOutput {
	return o
}

func (o GetAdhocQueriesResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdhocQueriesResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// The list of adhoc_query_collection.
func (o GetAdhocQueriesResultOutput) AdhocQueryCollections() GetAdhocQueriesAdhocQueryCollectionArrayOutput {
	return o.ApplyT(func(v GetAdhocQueriesResult) []GetAdhocQueriesAdhocQueryCollection { return v.AdhocQueryCollections }).(GetAdhocQueriesAdhocQueryCollectionArrayOutput)
}

func (o GetAdhocQueriesResultOutput) AdhocQueryStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdhocQueriesResult) *string { return v.AdhocQueryStatus }).(pulumi.StringPtrOutput)
}

// Compartment OCID of the adhoc query
func (o GetAdhocQueriesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdhocQueriesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetAdhocQueriesResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAdhocQueriesResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetAdhocQueriesResultOutput) Filters() GetAdhocQueriesFilterArrayOutput {
	return o.ApplyT(func(v GetAdhocQueriesResult) []GetAdhocQueriesFilter { return v.Filters }).(GetAdhocQueriesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAdhocQueriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdhocQueriesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAdhocQueriesResultOutput) TimeEndedFilterQueryParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdhocQueriesResult) *string { return v.TimeEndedFilterQueryParam }).(pulumi.StringPtrOutput)
}

func (o GetAdhocQueriesResultOutput) TimeStartedFilterQueryParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAdhocQueriesResult) *string { return v.TimeStartedFilterQueryParam }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAdhocQueriesResultOutput{})
}
