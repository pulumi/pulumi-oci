// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Data Mask Rule resource in Oracle Cloud Infrastructure Cloud Guard service.
//
// Returns a DataMaskRule resource, identified by dataMaskRuleId.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/CloudGuard"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudGuard.GetDataMaskRule(ctx, &cloudguard.GetDataMaskRuleArgs{
//				DataMaskRuleId: testDataMaskRuleOciCloudGuardDataMaskRule.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDataMaskRule(ctx *pulumi.Context, args *LookupDataMaskRuleArgs, opts ...pulumi.InvokeOption) (*LookupDataMaskRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataMaskRuleResult
	err := ctx.Invoke("oci:CloudGuard/getDataMaskRule:getDataMaskRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataMaskRule.
type LookupDataMaskRuleArgs struct {
	// OCID of the data mask rule
	DataMaskRuleId string `pulumi:"dataMaskRuleId"`
}

// A collection of values returned by getDataMaskRule.
type LookupDataMaskRuleResult struct {
	// Compartment OCID where the resource is created
	CompartmentId string `pulumi:"compartmentId"`
	// List of data mask rule categories
	DataMaskCategories []string `pulumi:"dataMaskCategories"`
	DataMaskRuleId     string   `pulumi:"dataMaskRuleId"`
	// The current status of the data mask rule
	DataMaskRuleStatus string `pulumi:"dataMaskRuleStatus"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The data mask rule description
	Description string `pulumi:"description"`
	// Data mask rule display name
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// IAM Group ID associated with the data mask rule
	IamGroupId string `pulumi:"iamGroupId"`
	// Unique identifier that can't be changed after creation
	Id string `pulumi:"id"`
	// Additional details on the substate of the lifecycle state [DEPRECATE]
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// The current lifecycle state of the data mask rule
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Specification of how targets are to be selected (select ALL, or select by TargetResourceType or TargetId).
	TargetSelecteds []GetDataMaskRuleTargetSelected `pulumi:"targetSelecteds"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupDataMaskRuleOutput(ctx *pulumi.Context, args LookupDataMaskRuleOutputArgs, opts ...pulumi.InvokeOption) LookupDataMaskRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDataMaskRuleResult, error) {
			args := v.(LookupDataMaskRuleArgs)
			r, err := LookupDataMaskRule(ctx, &args, opts...)
			var s LookupDataMaskRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDataMaskRuleResultOutput)
}

// A collection of arguments for invoking getDataMaskRule.
type LookupDataMaskRuleOutputArgs struct {
	// OCID of the data mask rule
	DataMaskRuleId pulumi.StringInput `pulumi:"dataMaskRuleId"`
}

func (LookupDataMaskRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataMaskRuleArgs)(nil)).Elem()
}

// A collection of values returned by getDataMaskRule.
type LookupDataMaskRuleResultOutput struct{ *pulumi.OutputState }

func (LookupDataMaskRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataMaskRuleResult)(nil)).Elem()
}

func (o LookupDataMaskRuleResultOutput) ToLookupDataMaskRuleResultOutput() LookupDataMaskRuleResultOutput {
	return o
}

func (o LookupDataMaskRuleResultOutput) ToLookupDataMaskRuleResultOutputWithContext(ctx context.Context) LookupDataMaskRuleResultOutput {
	return o
}

// Compartment OCID where the resource is created
func (o LookupDataMaskRuleResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// List of data mask rule categories
func (o LookupDataMaskRuleResultOutput) DataMaskCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) []string { return v.DataMaskCategories }).(pulumi.StringArrayOutput)
}

func (o LookupDataMaskRuleResultOutput) DataMaskRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) string { return v.DataMaskRuleId }).(pulumi.StringOutput)
}

// The current status of the data mask rule
func (o LookupDataMaskRuleResultOutput) DataMaskRuleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) string { return v.DataMaskRuleStatus }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupDataMaskRuleResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The data mask rule description
func (o LookupDataMaskRuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) string { return v.Description }).(pulumi.StringOutput)
}

// Data mask rule display name
func (o LookupDataMaskRuleResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupDataMaskRuleResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// IAM Group ID associated with the data mask rule
func (o LookupDataMaskRuleResultOutput) IamGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) string { return v.IamGroupId }).(pulumi.StringOutput)
}

// Unique identifier that can't be changed after creation
func (o LookupDataMaskRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Additional details on the substate of the lifecycle state [DEPRECATE]
func (o LookupDataMaskRuleResultOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// The current lifecycle state of the data mask rule
func (o LookupDataMaskRuleResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupDataMaskRuleResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Specification of how targets are to be selected (select ALL, or select by TargetResourceType or TargetId).
func (o LookupDataMaskRuleResultOutput) TargetSelecteds() GetDataMaskRuleTargetSelectedArrayOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) []GetDataMaskRuleTargetSelected { return v.TargetSelecteds }).(GetDataMaskRuleTargetSelectedArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o LookupDataMaskRuleResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o LookupDataMaskRuleResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataMaskRuleResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataMaskRuleResultOutput{})
}
