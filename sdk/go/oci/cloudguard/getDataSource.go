// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Data Source resource in Oracle Cloud Infrastructure Cloud Guard service.
//
// # Returns a DataSource identified by dataSourceId
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CloudGuard"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudGuard.GetDataSource(ctx, &cloudguard.GetDataSourceArgs{
//				DataSourceId: testDataSourceOciCloudGuardDataSource.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetDataSource(ctx *pulumi.Context, args *GetDataSourceArgs, opts ...pulumi.InvokeOption) (*GetDataSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDataSourceResult
	err := ctx.Invoke("oci:CloudGuard/getDataSource:getDataSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataSource.
type GetDataSourceArgs struct {
	// DataSource OCID
	DataSourceId string `pulumi:"dataSourceId"`
}

// A collection of values returned by getDataSource.
type GetDataSourceResult struct {
	// CompartmentId of Data source.
	CompartmentId string `pulumi:"compartmentId"`
	// Details specific to the data source type.
	DataSourceDetails []GetDataSourceDataSourceDetail `pulumi:"dataSourceDetails"`
	// Information about the detector recipe and rule attached
	DataSourceDetectorMappingInfos []GetDataSourceDataSourceDetectorMappingInfo `pulumi:"dataSourceDetectorMappingInfos"`
	// Possible type of dataSourceFeed Provider(LoggingQuery)
	DataSourceFeedProvider string `pulumi:"dataSourceFeedProvider"`
	DataSourceId           string `pulumi:"dataSourceId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// DisplayName of Data source.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Ocid for Data source
	Id string `pulumi:"id"`
	// Information about the region and status of query replication
	RegionStatusDetails []GetDataSourceRegionStatusDetail `pulumi:"regionStatusDetails"`
	// The current state of the resource.
	State string `pulumi:"state"`
	// Status of data Source
	Status string `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the Data source was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Data source was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func GetDataSourceOutput(ctx *pulumi.Context, args GetDataSourceOutputArgs, opts ...pulumi.InvokeOption) GetDataSourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDataSourceResult, error) {
			args := v.(GetDataSourceArgs)
			r, err := GetDataSource(ctx, &args, opts...)
			var s GetDataSourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDataSourceResultOutput)
}

// A collection of arguments for invoking getDataSource.
type GetDataSourceOutputArgs struct {
	// DataSource OCID
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
}

func (GetDataSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceArgs)(nil)).Elem()
}

// A collection of values returned by getDataSource.
type GetDataSourceResultOutput struct{ *pulumi.OutputState }

func (GetDataSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceResult)(nil)).Elem()
}

func (o GetDataSourceResultOutput) ToGetDataSourceResultOutput() GetDataSourceResultOutput {
	return o
}

func (o GetDataSourceResultOutput) ToGetDataSourceResultOutputWithContext(ctx context.Context) GetDataSourceResultOutput {
	return o
}

// CompartmentId of Data source.
func (o GetDataSourceResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Details specific to the data source type.
func (o GetDataSourceResultOutput) DataSourceDetails() GetDataSourceDataSourceDetailArrayOutput {
	return o.ApplyT(func(v GetDataSourceResult) []GetDataSourceDataSourceDetail { return v.DataSourceDetails }).(GetDataSourceDataSourceDetailArrayOutput)
}

// Information about the detector recipe and rule attached
func (o GetDataSourceResultOutput) DataSourceDetectorMappingInfos() GetDataSourceDataSourceDetectorMappingInfoArrayOutput {
	return o.ApplyT(func(v GetDataSourceResult) []GetDataSourceDataSourceDetectorMappingInfo {
		return v.DataSourceDetectorMappingInfos
	}).(GetDataSourceDataSourceDetectorMappingInfoArrayOutput)
}

// Possible type of dataSourceFeed Provider(LoggingQuery)
func (o GetDataSourceResultOutput) DataSourceFeedProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceResult) string { return v.DataSourceFeedProvider }).(pulumi.StringOutput)
}

func (o GetDataSourceResultOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceResult) string { return v.DataSourceId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetDataSourceResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataSourceResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// DisplayName of Data source.
func (o GetDataSourceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetDataSourceResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataSourceResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Ocid for Data source
func (o GetDataSourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Information about the region and status of query replication
func (o GetDataSourceResultOutput) RegionStatusDetails() GetDataSourceRegionStatusDetailArrayOutput {
	return o.ApplyT(func(v GetDataSourceResult) []GetDataSourceRegionStatusDetail { return v.RegionStatusDetails }).(GetDataSourceRegionStatusDetailArrayOutput)
}

// The current state of the resource.
func (o GetDataSourceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceResult) string { return v.State }).(pulumi.StringOutput)
}

// Status of data Source
func (o GetDataSourceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceResult) string { return v.Status }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetDataSourceResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataSourceResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the Data source was created. Format defined by RFC3339.
func (o GetDataSourceResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Data source was updated. Format defined by RFC3339.
func (o GetDataSourceResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDataSourceResultOutput{})
}
