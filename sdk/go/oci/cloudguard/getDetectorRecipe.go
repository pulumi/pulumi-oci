// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Detector Recipe resource in Oracle Cloud Infrastructure Cloud Guard service.
//
// # Returns a DetectorRecipe identified by detectorRecipeId
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CloudGuard"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudGuard.GetDetectorRecipe(ctx, &cloudguard.GetDetectorRecipeArgs{
//				DetectorRecipeId: oci_cloud_guard_detector_recipe.Test_detector_recipe.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupDetectorRecipe(ctx *pulumi.Context, args *LookupDetectorRecipeArgs, opts ...pulumi.InvokeOption) (*LookupDetectorRecipeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDetectorRecipeResult
	err := ctx.Invoke("oci:CloudGuard/getDetectorRecipe:getDetectorRecipe", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDetectorRecipe.
type LookupDetectorRecipeArgs struct {
	// DetectorRecipe OCID
	DetectorRecipeId string `pulumi:"detectorRecipeId"`
}

// A collection of values returned by getDetectorRecipe.
type LookupDetectorRecipeResult struct {
	// compartmentId of detector recipe
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Description for DetectorRecipeDetectorRule.
	Description string `pulumi:"description"`
	// detector for the rule
	Detector         string `pulumi:"detector"`
	DetectorRecipeId string `pulumi:"detectorRecipeId"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules []GetDetectorRecipeDetectorRule `pulumi:"detectorRules"`
	// The display name of entity
	DisplayName string `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules []GetDetectorRecipeEffectiveDetectorRule `pulumi:"effectiveDetectorRules"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Ocid for detector recipe
	Id string `pulumi:"id"`
	// Owner of detector recipe
	Owner string `pulumi:"owner"`
	// Recipe Ocid of the Source Recipe to be cloned
	SourceDetectorRecipeId string `pulumi:"sourceDetectorRecipeId"`
	// The current state of the resource.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The recipe attached to targets
	TargetIds []string `pulumi:"targetIds"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupDetectorRecipeOutput(ctx *pulumi.Context, args LookupDetectorRecipeOutputArgs, opts ...pulumi.InvokeOption) LookupDetectorRecipeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDetectorRecipeResult, error) {
			args := v.(LookupDetectorRecipeArgs)
			r, err := LookupDetectorRecipe(ctx, &args, opts...)
			var s LookupDetectorRecipeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDetectorRecipeResultOutput)
}

// A collection of arguments for invoking getDetectorRecipe.
type LookupDetectorRecipeOutputArgs struct {
	// DetectorRecipe OCID
	DetectorRecipeId pulumi.StringInput `pulumi:"detectorRecipeId"`
}

func (LookupDetectorRecipeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDetectorRecipeArgs)(nil)).Elem()
}

// A collection of values returned by getDetectorRecipe.
type LookupDetectorRecipeResultOutput struct{ *pulumi.OutputState }

func (LookupDetectorRecipeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDetectorRecipeResult)(nil)).Elem()
}

func (o LookupDetectorRecipeResultOutput) ToLookupDetectorRecipeResultOutput() LookupDetectorRecipeResultOutput {
	return o
}

func (o LookupDetectorRecipeResultOutput) ToLookupDetectorRecipeResultOutputWithContext(ctx context.Context) LookupDetectorRecipeResultOutput {
	return o
}

// compartmentId of detector recipe
func (o LookupDetectorRecipeResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupDetectorRecipeResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Description for DetectorRecipeDetectorRule.
func (o LookupDetectorRecipeResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) string { return v.Description }).(pulumi.StringOutput)
}

// detector for the rule
func (o LookupDetectorRecipeResultOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) string { return v.Detector }).(pulumi.StringOutput)
}

func (o LookupDetectorRecipeResultOutput) DetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) string { return v.DetectorRecipeId }).(pulumi.StringOutput)
}

// List of detector rules for the detector type for recipe - user input
func (o LookupDetectorRecipeResultOutput) DetectorRules() GetDetectorRecipeDetectorRuleArrayOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) []GetDetectorRecipeDetectorRule { return v.DetectorRules }).(GetDetectorRecipeDetectorRuleArrayOutput)
}

// The display name of entity
func (o LookupDetectorRecipeResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of effective detector rules for the detector type for recipe after applying defaults
func (o LookupDetectorRecipeResultOutput) EffectiveDetectorRules() GetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) []GetDetectorRecipeEffectiveDetectorRule {
		return v.EffectiveDetectorRules
	}).(GetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupDetectorRecipeResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Ocid for detector recipe
func (o LookupDetectorRecipeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) string { return v.Id }).(pulumi.StringOutput)
}

// Owner of detector recipe
func (o LookupDetectorRecipeResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) string { return v.Owner }).(pulumi.StringOutput)
}

// Recipe Ocid of the Source Recipe to be cloned
func (o LookupDetectorRecipeResultOutput) SourceDetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) string { return v.SourceDetectorRecipeId }).(pulumi.StringOutput)
}

// The current state of the resource.
func (o LookupDetectorRecipeResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupDetectorRecipeResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The recipe attached to targets
func (o LookupDetectorRecipeResultOutput) TargetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) []string { return v.TargetIds }).(pulumi.StringArrayOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o LookupDetectorRecipeResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o LookupDetectorRecipeResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDetectorRecipeResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDetectorRecipeResultOutput{})
}
