// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Lists in Oracle Cloud Infrastructure Cloud Guard service.
//
// Returns a list of all ManagedList resources in a compartment, identified by compartmentId.
// The ListManagedLists operation returns only the managed lists in `compartmentId` passed.
// The list does not include any subcompartments of the compartmentId passed.
//
// The parameter `accessLevel` specifies whether to return ManagedLists in only
// those compartments for which the requestor has INSPECT permissions on at least one resource directly
// or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
// Principal doesn't have access to even one of the child compartments. This is valid only when
// `compartmentIdInSubtree` is set to `true`.
//
// The parameter `compartmentIdInSubtree` applies when you perform ListManagedLists on the
// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
// To get a full list of all compartments and subcompartments in the tenancy (root compartment),
// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/cloudguard"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudguard.GetManagedLists(ctx, &cloudguard.GetManagedListsArgs{
//				CompartmentId:          compartmentId,
//				AccessLevel:            pulumi.StringRef(managedListAccessLevel),
//				CompartmentIdInSubtree: pulumi.BoolRef(managedListCompartmentIdInSubtree),
//				DisplayName:            pulumi.StringRef(managedListDisplayName),
//				ListType:               pulumi.StringRef(managedListListType),
//				ResourceMetadataOnly:   pulumi.BoolRef(managedListResourceMetadataOnly),
//				State:                  pulumi.StringRef(managedListState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedLists(ctx *pulumi.Context, args *GetManagedListsArgs, opts ...pulumi.InvokeOption) (*GetManagedListsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedListsResult
	err := ctx.Invoke("oci:CloudGuard/getManagedLists:getManagedLists", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedLists.
type GetManagedListsArgs struct {
	// Valid values are `RESTRICTED` and `ACCESSIBLE`. Default is `RESTRICTED`. Setting this to `ACCESSIBLE` returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to `RESTRICTED` permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// The OCID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the setting of `accessLevel`.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetManagedListsFilter `pulumi:"filters"`
	// The type of managed list.
	ListType *string `pulumi:"listType"`
	// Default is false. When set to true, the list of all Oracle-managed resources metadata supported by Cloud Guard is returned.
	ResourceMetadataOnly *bool `pulumi:"resourceMetadataOnly"`
	// The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State *string `pulumi:"state"`
}

// A collection of values returned by getManagedLists.
type GetManagedListsResult struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// Compartment OCID where the resource is created
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool  `pulumi:"compartmentIdInSubtree"`
	// Managed list display name
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetManagedListsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Type of information contained in the managed list
	ListType *string `pulumi:"listType"`
	// The list of managed_list_collection.
	ManagedListCollections []GetManagedListsManagedListCollection `pulumi:"managedListCollections"`
	ResourceMetadataOnly   *bool                                  `pulumi:"resourceMetadataOnly"`
	// The current lifecycle state of the resource
	State *string `pulumi:"state"`
}

func GetManagedListsOutput(ctx *pulumi.Context, args GetManagedListsOutputArgs, opts ...pulumi.InvokeOption) GetManagedListsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedListsResultOutput, error) {
			args := v.(GetManagedListsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:CloudGuard/getManagedLists:getManagedLists", args, GetManagedListsResultOutput{}, options).(GetManagedListsResultOutput), nil
		}).(GetManagedListsResultOutput)
}

// A collection of arguments for invoking getManagedLists.
type GetManagedListsOutputArgs struct {
	// Valid values are `RESTRICTED` and `ACCESSIBLE`. Default is `RESTRICTED`. Setting this to `ACCESSIBLE` returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to `RESTRICTED` permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// The OCID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the setting of `accessLevel`.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput           `pulumi:"displayName"`
	Filters     GetManagedListsFilterArrayInput `pulumi:"filters"`
	// The type of managed list.
	ListType pulumi.StringPtrInput `pulumi:"listType"`
	// Default is false. When set to true, the list of all Oracle-managed resources metadata supported by Cloud Guard is returned.
	ResourceMetadataOnly pulumi.BoolPtrInput `pulumi:"resourceMetadataOnly"`
	// The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetManagedListsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsArgs)(nil)).Elem()
}

// A collection of values returned by getManagedLists.
type GetManagedListsResultOutput struct{ *pulumi.OutputState }

func (GetManagedListsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsResult)(nil)).Elem()
}

func (o GetManagedListsResultOutput) ToGetManagedListsResultOutput() GetManagedListsResultOutput {
	return o
}

func (o GetManagedListsResultOutput) ToGetManagedListsResultOutputWithContext(ctx context.Context) GetManagedListsResultOutput {
	return o
}

func (o GetManagedListsResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedListsResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// Compartment OCID where the resource is created
func (o GetManagedListsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetManagedListsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedListsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// Managed list display name
func (o GetManagedListsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedListsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetManagedListsResultOutput) Filters() GetManagedListsFilterArrayOutput {
	return o.ApplyT(func(v GetManagedListsResult) []GetManagedListsFilter { return v.Filters }).(GetManagedListsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedListsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Type of information contained in the managed list
func (o GetManagedListsResultOutput) ListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedListsResult) *string { return v.ListType }).(pulumi.StringPtrOutput)
}

// The list of managed_list_collection.
func (o GetManagedListsResultOutput) ManagedListCollections() GetManagedListsManagedListCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedListsResult) []GetManagedListsManagedListCollection { return v.ManagedListCollections }).(GetManagedListsManagedListCollectionArrayOutput)
}

func (o GetManagedListsResultOutput) ResourceMetadataOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedListsResult) *bool { return v.ResourceMetadataOnly }).(pulumi.BoolPtrOutput)
}

// The current lifecycle state of the resource
func (o GetManagedListsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedListsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedListsResultOutput{})
}
