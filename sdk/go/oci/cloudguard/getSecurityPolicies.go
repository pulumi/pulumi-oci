// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Security Policies in Oracle Cloud Infrastructure Cloud Guard service.
//
// Returns a list of security zone policies. Specify any compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CloudGuard"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudGuard.GetSecurityPolicies(ctx, &cloudguard.GetSecurityPoliciesArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Security_policy_display_name),
//				Id:            pulumi.StringRef(_var.Security_policy_id),
//				State:         pulumi.StringRef(_var.Security_policy_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecurityPolicies(ctx *pulumi.Context, args *GetSecurityPoliciesArgs, opts ...pulumi.InvokeOption) (*GetSecurityPoliciesResult, error) {
	var rv GetSecurityPoliciesResult
	err := ctx.Invoke("oci:CloudGuard/getSecurityPolicies:getSecurityPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityPolicies.
type GetSecurityPoliciesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetSecurityPoliciesFilter `pulumi:"filters"`
	// The unique identifier of the security zone policy (`SecurityPolicy`)
	Id *string `pulumi:"id"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State *string `pulumi:"state"`
}

// A collection of values returned by getSecurityPolicies.
type GetSecurityPoliciesResult struct {
	// The id of the security policy's compartment
	CompartmentId string `pulumi:"compartmentId"`
	// The security policy's full name
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetSecurityPoliciesFilter `pulumi:"filters"`
	// Unique identifier that is immutable on creation
	Id *string `pulumi:"id"`
	// The list of security_policy_collection.
	SecurityPolicyCollections []GetSecurityPoliciesSecurityPolicyCollection `pulumi:"securityPolicyCollections"`
	// The current state of the security policy
	State *string `pulumi:"state"`
}

func GetSecurityPoliciesOutput(ctx *pulumi.Context, args GetSecurityPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetSecurityPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityPoliciesResult, error) {
			args := v.(GetSecurityPoliciesArgs)
			r, err := GetSecurityPolicies(ctx, &args, opts...)
			var s GetSecurityPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityPoliciesResultOutput)
}

// A collection of arguments for invoking getSecurityPolicies.
type GetSecurityPoliciesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput               `pulumi:"displayName"`
	Filters     GetSecurityPoliciesFilterArrayInput `pulumi:"filters"`
	// The unique identifier of the security zone policy (`SecurityPolicy`)
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetSecurityPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityPolicies.
type GetSecurityPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetSecurityPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesResult)(nil)).Elem()
}

func (o GetSecurityPoliciesResultOutput) ToGetSecurityPoliciesResultOutput() GetSecurityPoliciesResultOutput {
	return o
}

func (o GetSecurityPoliciesResultOutput) ToGetSecurityPoliciesResultOutputWithContext(ctx context.Context) GetSecurityPoliciesResultOutput {
	return o
}

// The id of the security policy's compartment
func (o GetSecurityPoliciesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The security policy's full name
func (o GetSecurityPoliciesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetSecurityPoliciesResultOutput) Filters() GetSecurityPoliciesFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) []GetSecurityPoliciesFilter { return v.Filters }).(GetSecurityPoliciesFilterArrayOutput)
}

// Unique identifier that is immutable on creation
func (o GetSecurityPoliciesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of security_policy_collection.
func (o GetSecurityPoliciesResultOutput) SecurityPolicyCollections() GetSecurityPoliciesSecurityPolicyCollectionArrayOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) []GetSecurityPoliciesSecurityPolicyCollection {
		return v.SecurityPolicyCollections
	}).(GetSecurityPoliciesSecurityPolicyCollectionArrayOutput)
}

// The current state of the security policy
func (o GetSecurityPoliciesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityPoliciesResultOutput{})
}
