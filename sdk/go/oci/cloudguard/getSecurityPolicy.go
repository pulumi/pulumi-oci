// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Security Policy resource in Oracle Cloud Infrastructure Cloud Guard service.
//
// Gets a security zone policy using its identifier. When a policy is enabled in a security zone, then any action in the zone that attempts to violate that policy is denied.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CloudGuard"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudGuard.GetSecurityPolicy(ctx, &cloudguard.GetSecurityPolicyArgs{
//				SecurityPolicyId: oci_cloud_guard_security_policy.Test_security_policy.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecurityPolicy(ctx *pulumi.Context, args *GetSecurityPolicyArgs, opts ...pulumi.InvokeOption) (*GetSecurityPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityPolicyResult
	err := ctx.Invoke("oci:CloudGuard/getSecurityPolicy:getSecurityPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityPolicy.
type GetSecurityPolicyArgs struct {
	// The unique identifier of the security zone policy (`SecurityPolicy`)
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// A collection of values returned by getSecurityPolicy.
type GetSecurityPolicyResult struct {
	// The category of security policy
	Category string `pulumi:"category"`
	// The id of the security policy's compartment
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The security policy's description
	Description string `pulumi:"description"`
	// The security policy's full name
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A shorter version of the security policy's name
	FriendlyName string `pulumi:"friendlyName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, this can be used to provide actionable information for a resource in a `Failed` state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The owner of the security policy
	Owner            string `pulumi:"owner"`
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	// The list of services that the security policy protects
	Services []string `pulumi:"services"`
	// The current state of the security policy
	State string `pulumi:"state"`
	// The time the security policy was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the security policy was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func GetSecurityPolicyOutput(ctx *pulumi.Context, args GetSecurityPolicyOutputArgs, opts ...pulumi.InvokeOption) GetSecurityPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityPolicyResult, error) {
			args := v.(GetSecurityPolicyArgs)
			r, err := GetSecurityPolicy(ctx, &args, opts...)
			var s GetSecurityPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityPolicyResultOutput)
}

// A collection of arguments for invoking getSecurityPolicy.
type GetSecurityPolicyOutputArgs struct {
	// The unique identifier of the security zone policy (`SecurityPolicy`)
	SecurityPolicyId pulumi.StringInput `pulumi:"securityPolicyId"`
}

func (GetSecurityPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityPolicy.
type GetSecurityPolicyResultOutput struct{ *pulumi.OutputState }

func (GetSecurityPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPolicyResult)(nil)).Elem()
}

func (o GetSecurityPolicyResultOutput) ToGetSecurityPolicyResultOutput() GetSecurityPolicyResultOutput {
	return o
}

func (o GetSecurityPolicyResultOutput) ToGetSecurityPolicyResultOutputWithContext(ctx context.Context) GetSecurityPolicyResultOutput {
	return o
}

// The category of security policy
func (o GetSecurityPolicyResultOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.Category }).(pulumi.StringOutput)
}

// The id of the security policy's compartment
func (o GetSecurityPolicyResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetSecurityPolicyResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The security policy's description
func (o GetSecurityPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The security policy's full name
func (o GetSecurityPolicyResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetSecurityPolicyResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A shorter version of the security policy's name
func (o GetSecurityPolicyResultOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecurityPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, this can be used to provide actionable information for a resource in a `Failed` state.
func (o GetSecurityPolicyResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The owner of the security policy
func (o GetSecurityPolicyResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetSecurityPolicyResultOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

// The list of services that the security policy protects
func (o GetSecurityPolicyResultOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) []string { return v.Services }).(pulumi.StringArrayOutput)
}

// The current state of the security policy
func (o GetSecurityPolicyResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.State }).(pulumi.StringOutput)
}

// The time the security policy was created. An RFC3339 formatted datetime string.
func (o GetSecurityPolicyResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the security policy was last updated. An RFC3339 formatted datetime string.
func (o GetSecurityPolicyResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityPolicyResultOutput{})
}
