// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Security Recipe resource in Oracle Cloud Infrastructure Cloud Guard service.
//
// Returns a security zone recipe (SecurityRecipe resource) identified by securityRecipeId.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/CloudGuard"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudGuard.GetSecurityRecipe(ctx, &cloudguard.GetSecurityRecipeArgs{
//				SecurityRecipeId: testSecurityRecipeOciCloudGuardSecurityRecipe.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSecurityRecipe(ctx *pulumi.Context, args *LookupSecurityRecipeArgs, opts ...pulumi.InvokeOption) (*LookupSecurityRecipeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSecurityRecipeResult
	err := ctx.Invoke("oci:CloudGuard/getSecurityRecipe:getSecurityRecipe", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityRecipe.
type LookupSecurityRecipeArgs struct {
	// The unique identifier of the security zone recipe. (`SecurityRecipe`)
	SecurityRecipeId string `pulumi:"securityRecipeId"`
}

// A collection of values returned by getSecurityRecipe.
type LookupSecurityRecipeResult struct {
	// The OCID of the compartment that contains the recipe
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The recipe's description
	Description string `pulumi:"description"`
	// The recipe's display name
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique identifier that can’t be changed after creation
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, this can be used to provide actionable information for a recipe in the `Failed` state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The owner of the recipe
	Owner string `pulumi:"owner"`
	// The list of security policy IDs that are included in the recipe
	SecurityPolicies []string `pulumi:"securityPolicies"`
	SecurityRecipeId string   `pulumi:"securityRecipeId"`
	// The current lifecycle state of the recipe
	State string `pulumi:"state"`
	// The time the recipe was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the recipe was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupSecurityRecipeOutput(ctx *pulumi.Context, args LookupSecurityRecipeOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityRecipeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSecurityRecipeResult, error) {
			args := v.(LookupSecurityRecipeArgs)
			r, err := LookupSecurityRecipe(ctx, &args, opts...)
			var s LookupSecurityRecipeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSecurityRecipeResultOutput)
}

// A collection of arguments for invoking getSecurityRecipe.
type LookupSecurityRecipeOutputArgs struct {
	// The unique identifier of the security zone recipe. (`SecurityRecipe`)
	SecurityRecipeId pulumi.StringInput `pulumi:"securityRecipeId"`
}

func (LookupSecurityRecipeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityRecipeArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityRecipe.
type LookupSecurityRecipeResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityRecipeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityRecipeResult)(nil)).Elem()
}

func (o LookupSecurityRecipeResultOutput) ToLookupSecurityRecipeResultOutput() LookupSecurityRecipeResultOutput {
	return o
}

func (o LookupSecurityRecipeResultOutput) ToLookupSecurityRecipeResultOutputWithContext(ctx context.Context) LookupSecurityRecipeResultOutput {
	return o
}

// The OCID of the compartment that contains the recipe
func (o LookupSecurityRecipeResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupSecurityRecipeResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The recipe's description
func (o LookupSecurityRecipeResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) string { return v.Description }).(pulumi.StringOutput)
}

// The recipe's display name
func (o LookupSecurityRecipeResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupSecurityRecipeResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique identifier that can’t be changed after creation
func (o LookupSecurityRecipeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, this can be used to provide actionable information for a recipe in the `Failed` state.
func (o LookupSecurityRecipeResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The owner of the recipe
func (o LookupSecurityRecipeResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) string { return v.Owner }).(pulumi.StringOutput)
}

// The list of security policy IDs that are included in the recipe
func (o LookupSecurityRecipeResultOutput) SecurityPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) []string { return v.SecurityPolicies }).(pulumi.StringArrayOutput)
}

func (o LookupSecurityRecipeResultOutput) SecurityRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) string { return v.SecurityRecipeId }).(pulumi.StringOutput)
}

// The current lifecycle state of the recipe
func (o LookupSecurityRecipeResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) string { return v.State }).(pulumi.StringOutput)
}

// The time the recipe was created. An RFC3339 formatted datetime string.
func (o LookupSecurityRecipeResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the recipe was last updated. An RFC3339 formatted datetime string.
func (o LookupSecurityRecipeResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityRecipeResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityRecipeResultOutput{})
}
