// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Security Recipes in Oracle Cloud Infrastructure Cloud Guard service.
//
// Gets a list of all security zone recipes in a compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CloudGuard"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudGuard.GetSecurityRecipes(ctx, &cloudguard.GetSecurityRecipesArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Security_recipe_display_name),
//				Id:            pulumi.StringRef(_var.Security_recipe_id),
//				State:         pulumi.StringRef(_var.Security_recipe_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecurityRecipes(ctx *pulumi.Context, args *GetSecurityRecipesArgs, opts ...pulumi.InvokeOption) (*GetSecurityRecipesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityRecipesResult
	err := ctx.Invoke("oci:CloudGuard/getSecurityRecipes:getSecurityRecipes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityRecipes.
type GetSecurityRecipesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetSecurityRecipesFilter `pulumi:"filters"`
	// The unique identifier of the security zone recipe (`SecurityRecipe`)
	Id *string `pulumi:"id"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State *string `pulumi:"state"`
}

// A collection of values returned by getSecurityRecipes.
type GetSecurityRecipesResult struct {
	// The id of the compartment that contains the recipe
	CompartmentId string `pulumi:"compartmentId"`
	// The recipe's name
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetSecurityRecipesFilter `pulumi:"filters"`
	// Unique identifier that is immutable on creation
	Id *string `pulumi:"id"`
	// The list of security_recipe_collection.
	SecurityRecipeCollections []GetSecurityRecipesSecurityRecipeCollection `pulumi:"securityRecipeCollections"`
	// The current state of the recipe
	State *string `pulumi:"state"`
}

func GetSecurityRecipesOutput(ctx *pulumi.Context, args GetSecurityRecipesOutputArgs, opts ...pulumi.InvokeOption) GetSecurityRecipesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityRecipesResult, error) {
			args := v.(GetSecurityRecipesArgs)
			r, err := GetSecurityRecipes(ctx, &args, opts...)
			var s GetSecurityRecipesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityRecipesResultOutput)
}

// A collection of arguments for invoking getSecurityRecipes.
type GetSecurityRecipesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput              `pulumi:"displayName"`
	Filters     GetSecurityRecipesFilterArrayInput `pulumi:"filters"`
	// The unique identifier of the security zone recipe (`SecurityRecipe`)
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetSecurityRecipesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityRecipesArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityRecipes.
type GetSecurityRecipesResultOutput struct{ *pulumi.OutputState }

func (GetSecurityRecipesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityRecipesResult)(nil)).Elem()
}

func (o GetSecurityRecipesResultOutput) ToGetSecurityRecipesResultOutput() GetSecurityRecipesResultOutput {
	return o
}

func (o GetSecurityRecipesResultOutput) ToGetSecurityRecipesResultOutputWithContext(ctx context.Context) GetSecurityRecipesResultOutput {
	return o
}

func (o GetSecurityRecipesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecurityRecipesResult] {
	return pulumix.Output[GetSecurityRecipesResult]{
		OutputState: o.OutputState,
	}
}

// The id of the compartment that contains the recipe
func (o GetSecurityRecipesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityRecipesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The recipe's name
func (o GetSecurityRecipesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityRecipesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetSecurityRecipesResultOutput) Filters() GetSecurityRecipesFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityRecipesResult) []GetSecurityRecipesFilter { return v.Filters }).(GetSecurityRecipesFilterArrayOutput)
}

// Unique identifier that is immutable on creation
func (o GetSecurityRecipesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityRecipesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of security_recipe_collection.
func (o GetSecurityRecipesResultOutput) SecurityRecipeCollections() GetSecurityRecipesSecurityRecipeCollectionArrayOutput {
	return o.ApplyT(func(v GetSecurityRecipesResult) []GetSecurityRecipesSecurityRecipeCollection {
		return v.SecurityRecipeCollections
	}).(GetSecurityRecipesSecurityRecipeCollectionArrayOutput)
}

// The current state of the recipe
func (o GetSecurityRecipesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityRecipesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityRecipesResultOutput{})
}
