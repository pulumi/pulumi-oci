// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Security Zones in Oracle Cloud Infrastructure Cloud Guard service.
//
// Returns a list of security zones (SecurityZone resources) in a compartment identified by
// compartmentId. List is contained in a page of SecurityZoneSummary resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/CloudGuard"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudGuard.GetSecurityZones(ctx, &cloudguard.GetSecurityZonesArgs{
//				CompartmentId:                    compartmentId,
//				DisplayName:                      pulumi.StringRef(securityZoneDisplayName),
//				Id:                               pulumi.StringRef(securityZoneId),
//				IsRequiredSecurityZonesInSubtree: pulumi.BoolRef(securityZoneIsRequiredSecurityZonesInSubtree),
//				SecurityRecipeId:                 pulumi.StringRef(testSecurityRecipe.Id),
//				State:                            pulumi.StringRef(securityZoneState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecurityZones(ctx *pulumi.Context, args *GetSecurityZonesArgs, opts ...pulumi.InvokeOption) (*GetSecurityZonesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityZonesResult
	err := ctx.Invoke("oci:CloudGuard/getSecurityZones:getSecurityZones", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityZones.
type GetSecurityZonesArgs struct {
	// The OCID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                  `pulumi:"displayName"`
	Filters     []GetSecurityZonesFilter `pulumi:"filters"`
	// The unique identifier of the security zone (`SecurityZone` resource).
	Id *string `pulumi:"id"`
	// Is security zones in the subtree?
	IsRequiredSecurityZonesInSubtree *bool `pulumi:"isRequiredSecurityZonesInSubtree"`
	// The unique identifier of the security zone recipe. (`SecurityRecipe` resource).
	SecurityRecipeId *string `pulumi:"securityRecipeId"`
	// The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State *string `pulumi:"state"`
}

// A collection of values returned by getSecurityZones.
type GetSecurityZonesResult struct {
	// The OCID of the compartment for the security zone
	CompartmentId string `pulumi:"compartmentId"`
	// The security zone's display name
	DisplayName *string                  `pulumi:"displayName"`
	Filters     []GetSecurityZonesFilter `pulumi:"filters"`
	// Unique identifier that can’t be changed after creation
	Id                               *string `pulumi:"id"`
	IsRequiredSecurityZonesInSubtree *bool   `pulumi:"isRequiredSecurityZonesInSubtree"`
	SecurityRecipeId                 *string `pulumi:"securityRecipeId"`
	// The list of security_zone_collection.
	SecurityZoneCollections []GetSecurityZonesSecurityZoneCollection `pulumi:"securityZoneCollections"`
	// The current lifecycle state of the security zone
	State *string `pulumi:"state"`
}

func GetSecurityZonesOutput(ctx *pulumi.Context, args GetSecurityZonesOutputArgs, opts ...pulumi.InvokeOption) GetSecurityZonesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSecurityZonesResultOutput, error) {
			args := v.(GetSecurityZonesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:CloudGuard/getSecurityZones:getSecurityZones", args, GetSecurityZonesResultOutput{}, options).(GetSecurityZonesResultOutput), nil
		}).(GetSecurityZonesResultOutput)
}

// A collection of arguments for invoking getSecurityZones.
type GetSecurityZonesOutputArgs struct {
	// The OCID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput            `pulumi:"displayName"`
	Filters     GetSecurityZonesFilterArrayInput `pulumi:"filters"`
	// The unique identifier of the security zone (`SecurityZone` resource).
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Is security zones in the subtree?
	IsRequiredSecurityZonesInSubtree pulumi.BoolPtrInput `pulumi:"isRequiredSecurityZonesInSubtree"`
	// The unique identifier of the security zone recipe. (`SecurityRecipe` resource).
	SecurityRecipeId pulumi.StringPtrInput `pulumi:"securityRecipeId"`
	// The field lifecycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetSecurityZonesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityZonesArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityZones.
type GetSecurityZonesResultOutput struct{ *pulumi.OutputState }

func (GetSecurityZonesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityZonesResult)(nil)).Elem()
}

func (o GetSecurityZonesResultOutput) ToGetSecurityZonesResultOutput() GetSecurityZonesResultOutput {
	return o
}

func (o GetSecurityZonesResultOutput) ToGetSecurityZonesResultOutputWithContext(ctx context.Context) GetSecurityZonesResultOutput {
	return o
}

// The OCID of the compartment for the security zone
func (o GetSecurityZonesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The security zone's display name
func (o GetSecurityZonesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityZonesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetSecurityZonesResultOutput) Filters() GetSecurityZonesFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityZonesResult) []GetSecurityZonesFilter { return v.Filters }).(GetSecurityZonesFilterArrayOutput)
}

// Unique identifier that can’t be changed after creation
func (o GetSecurityZonesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityZonesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetSecurityZonesResultOutput) IsRequiredSecurityZonesInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityZonesResult) *bool { return v.IsRequiredSecurityZonesInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetSecurityZonesResultOutput) SecurityRecipeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityZonesResult) *string { return v.SecurityRecipeId }).(pulumi.StringPtrOutput)
}

// The list of security_zone_collection.
func (o GetSecurityZonesResultOutput) SecurityZoneCollections() GetSecurityZonesSecurityZoneCollectionArrayOutput {
	return o.ApplyT(func(v GetSecurityZonesResult) []GetSecurityZonesSecurityZoneCollection {
		return v.SecurityZoneCollections
	}).(GetSecurityZonesSecurityZoneCollectionArrayOutput)
}

// The current lifecycle state of the security zone
func (o GetSecurityZonesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityZonesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityZonesResultOutput{})
}
