// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Managed List resource in Oracle Cloud Infrastructure Cloud Guard service.
//
// Creates a new ManagedList.
//
// ## Import
//
// ManagedLists can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:CloudGuard/managedList:ManagedList test_managed_list "id"
//
// ```
type ManagedList struct {
	pulumi.CustomResourceState

	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Managed list description.
	//
	// Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Managed list display name.
	//
	// Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// provider of the feed
	FeedProvider pulumi.StringOutput `pulumi:"feedProvider"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// Avoid entering confidential information.
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// If this list is editable or not
	IsEditable pulumi.BoolOutput `pulumi:"isEditable"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringOutput `pulumi:"lifecyleDetails"`
	// (Updatable) List of ManagedListItem
	ListItems pulumi.StringArrayOutput `pulumi:"listItems"`
	// type of the list
	ListType pulumi.StringOutput `pulumi:"listType"`
	// OCID of the Source ManagedList
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SourceManagedListId pulumi.StringOutput `pulumi:"sourceManagedListId"`
	// The current state of the resource.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The date and time the managed list was created. Format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the managed list was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewManagedList registers a new resource with the given unique name, arguments, and options.
func NewManagedList(ctx *pulumi.Context,
	name string, args *ManagedListArgs, opts ...pulumi.ResourceOption) (*ManagedList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedList
	err := ctx.RegisterResource("oci:CloudGuard/managedList:ManagedList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedList gets an existing ManagedList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedListState, opts ...pulumi.ResourceOption) (*ManagedList, error) {
	var resource ManagedList
	err := ctx.ReadResource("oci:CloudGuard/managedList:ManagedList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedList resources.
type managedListState struct {
	// (Updatable) Compartment Identifier
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Managed list description.
	//
	// Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Managed list display name.
	//
	// Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// provider of the feed
	FeedProvider *string `pulumi:"feedProvider"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// Avoid entering confidential information.
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// If this list is editable or not
	IsEditable *bool `pulumi:"isEditable"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails *string `pulumi:"lifecyleDetails"`
	// (Updatable) List of ManagedListItem
	ListItems []string `pulumi:"listItems"`
	// type of the list
	ListType *string `pulumi:"listType"`
	// OCID of the Source ManagedList
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SourceManagedListId *string `pulumi:"sourceManagedListId"`
	// The current state of the resource.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the managed list was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the managed list was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type ManagedListState struct {
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Managed list description.
	//
	// Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Managed list display name.
	//
	// Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// provider of the feed
	FeedProvider pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// Avoid entering confidential information.
	FreeformTags pulumi.MapInput
	// If this list is editable or not
	IsEditable pulumi.BoolPtrInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringPtrInput
	// (Updatable) List of ManagedListItem
	ListItems pulumi.StringArrayInput
	// type of the list
	ListType pulumi.StringPtrInput
	// OCID of the Source ManagedList
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SourceManagedListId pulumi.StringPtrInput
	// The current state of the resource.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The date and time the managed list was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The date and time the managed list was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
}

func (ManagedListState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedListState)(nil)).Elem()
}

type managedListArgs struct {
	// (Updatable) Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Managed list description.
	//
	// Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Managed list display name.
	//
	// Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// Avoid entering confidential information.
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) List of ManagedListItem
	ListItems []string `pulumi:"listItems"`
	// type of the list
	ListType *string `pulumi:"listType"`
	// OCID of the Source ManagedList
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SourceManagedListId *string `pulumi:"sourceManagedListId"`
}

// The set of arguments for constructing a ManagedList resource.
type ManagedListArgs struct {
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Managed list description.
	//
	// Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Managed list display name.
	//
	// Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// Avoid entering confidential information.
	FreeformTags pulumi.MapInput
	// (Updatable) List of ManagedListItem
	ListItems pulumi.StringArrayInput
	// type of the list
	ListType pulumi.StringPtrInput
	// OCID of the Source ManagedList
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SourceManagedListId pulumi.StringPtrInput
}

func (ManagedListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedListArgs)(nil)).Elem()
}

type ManagedListInput interface {
	pulumi.Input

	ToManagedListOutput() ManagedListOutput
	ToManagedListOutputWithContext(ctx context.Context) ManagedListOutput
}

func (*ManagedList) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedList)(nil)).Elem()
}

func (i *ManagedList) ToManagedListOutput() ManagedListOutput {
	return i.ToManagedListOutputWithContext(context.Background())
}

func (i *ManagedList) ToManagedListOutputWithContext(ctx context.Context) ManagedListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedListOutput)
}

// ManagedListArrayInput is an input type that accepts ManagedListArray and ManagedListArrayOutput values.
// You can construct a concrete instance of `ManagedListArrayInput` via:
//
//	ManagedListArray{ ManagedListArgs{...} }
type ManagedListArrayInput interface {
	pulumi.Input

	ToManagedListArrayOutput() ManagedListArrayOutput
	ToManagedListArrayOutputWithContext(context.Context) ManagedListArrayOutput
}

type ManagedListArray []ManagedListInput

func (ManagedListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedList)(nil)).Elem()
}

func (i ManagedListArray) ToManagedListArrayOutput() ManagedListArrayOutput {
	return i.ToManagedListArrayOutputWithContext(context.Background())
}

func (i ManagedListArray) ToManagedListArrayOutputWithContext(ctx context.Context) ManagedListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedListArrayOutput)
}

// ManagedListMapInput is an input type that accepts ManagedListMap and ManagedListMapOutput values.
// You can construct a concrete instance of `ManagedListMapInput` via:
//
//	ManagedListMap{ "key": ManagedListArgs{...} }
type ManagedListMapInput interface {
	pulumi.Input

	ToManagedListMapOutput() ManagedListMapOutput
	ToManagedListMapOutputWithContext(context.Context) ManagedListMapOutput
}

type ManagedListMap map[string]ManagedListInput

func (ManagedListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedList)(nil)).Elem()
}

func (i ManagedListMap) ToManagedListMapOutput() ManagedListMapOutput {
	return i.ToManagedListMapOutputWithContext(context.Background())
}

func (i ManagedListMap) ToManagedListMapOutputWithContext(ctx context.Context) ManagedListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedListMapOutput)
}

type ManagedListOutput struct{ *pulumi.OutputState }

func (ManagedListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedList)(nil)).Elem()
}

func (o ManagedListOutput) ToManagedListOutput() ManagedListOutput {
	return o
}

func (o ManagedListOutput) ToManagedListOutputWithContext(ctx context.Context) ManagedListOutput {
	return o
}

// (Updatable) Compartment Identifier
func (o ManagedListOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o ManagedListOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Managed list description.
//
// Avoid entering confidential information.
func (o ManagedListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Managed list display name.
//
// Avoid entering confidential information.
func (o ManagedListOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// provider of the feed
func (o ManagedListOutput) FeedProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.StringOutput { return v.FeedProvider }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
//
// Avoid entering confidential information.
func (o ManagedListOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// If this list is editable or not
func (o ManagedListOutput) IsEditable() pulumi.BoolOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.BoolOutput { return v.IsEditable }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o ManagedListOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.StringOutput { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// (Updatable) List of ManagedListItem
func (o ManagedListOutput) ListItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.StringArrayOutput { return v.ListItems }).(pulumi.StringArrayOutput)
}

// type of the list
func (o ManagedListOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.StringOutput { return v.ListType }).(pulumi.StringOutput)
}

// OCID of the Source ManagedList
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ManagedListOutput) SourceManagedListId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.StringOutput { return v.SourceManagedListId }).(pulumi.StringOutput)
}

// The current state of the resource.
func (o ManagedListOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ManagedListOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the managed list was created. Format defined by RFC3339.
func (o ManagedListOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the managed list was updated. Format defined by RFC3339.
func (o ManagedListOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedList) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type ManagedListArrayOutput struct{ *pulumi.OutputState }

func (ManagedListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedList)(nil)).Elem()
}

func (o ManagedListArrayOutput) ToManagedListArrayOutput() ManagedListArrayOutput {
	return o
}

func (o ManagedListArrayOutput) ToManagedListArrayOutputWithContext(ctx context.Context) ManagedListArrayOutput {
	return o
}

func (o ManagedListArrayOutput) Index(i pulumi.IntInput) ManagedListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedList {
		return vs[0].([]*ManagedList)[vs[1].(int)]
	}).(ManagedListOutput)
}

type ManagedListMapOutput struct{ *pulumi.OutputState }

func (ManagedListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedList)(nil)).Elem()
}

func (o ManagedListMapOutput) ToManagedListMapOutput() ManagedListMapOutput {
	return o
}

func (o ManagedListMapOutput) ToManagedListMapOutputWithContext(ctx context.Context) ManagedListMapOutput {
	return o
}

func (o ManagedListMapOutput) MapIndex(k pulumi.StringInput) ManagedListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedList {
		return vs[0].(map[string]*ManagedList)[vs[1].(string)]
	}).(ManagedListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedListInput)(nil)).Elem(), &ManagedList{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedListArrayInput)(nil)).Elem(), ManagedListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedListMapInput)(nil)).Elem(), ManagedListMap{})
	pulumi.RegisterOutputType(ManagedListOutput{})
	pulumi.RegisterOutputType(ManagedListArrayOutput{})
	pulumi.RegisterOutputType(ManagedListMapOutput{})
}
