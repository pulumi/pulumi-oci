// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudGuardDataSourceDataSourceDetails struct {
	// (Updatable) The additional entities count used for data source query.
	AdditionalEntitiesCount *int `pulumi:"additionalEntitiesCount"`
	// Possible type of dataSourceFeed Provider(LoggingQuery)
	DataSourceFeedProvider string `pulumi:"dataSourceFeedProvider"`
	// (Updatable) Interval in minutes that query is run periodically.
	IntervalInMinutes *int `pulumi:"intervalInMinutes"`
	// (Updatable) Additional details specific to the data source type (Sighting/Insight).
	LoggingQueryDetails *CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails `pulumi:"loggingQueryDetails"`
	// (Updatable) Logging query type for data source (Sighting/Insight)
	LoggingQueryType *string `pulumi:"loggingQueryType"`
	// (Updatable) Operator used in Data Soruce
	Operator *string `pulumi:"operator"`
	// (Updatable) The continuous query expression that is run periodically.
	Query *string `pulumi:"query"`
	// (Updatable) Time when the query can start, if not specified it can start immediately.
	QueryStartTime *CloudGuardDataSourceDataSourceDetailsQueryStartTime `pulumi:"queryStartTime"`
	// (Updatable) Logging Query regions
	Regions []string `pulumi:"regions"`
	// (Updatable) The integer value that must be exceeded, fall below or equal to (depending on the operator), the query result to trigger an event.
	Threshold *int `pulumi:"threshold"`
}

// CloudGuardDataSourceDataSourceDetailsInput is an input type that accepts CloudGuardDataSourceDataSourceDetailsArgs and CloudGuardDataSourceDataSourceDetailsOutput values.
// You can construct a concrete instance of `CloudGuardDataSourceDataSourceDetailsInput` via:
//
//	CloudGuardDataSourceDataSourceDetailsArgs{...}
type CloudGuardDataSourceDataSourceDetailsInput interface {
	pulumi.Input

	ToCloudGuardDataSourceDataSourceDetailsOutput() CloudGuardDataSourceDataSourceDetailsOutput
	ToCloudGuardDataSourceDataSourceDetailsOutputWithContext(context.Context) CloudGuardDataSourceDataSourceDetailsOutput
}

type CloudGuardDataSourceDataSourceDetailsArgs struct {
	// (Updatable) The additional entities count used for data source query.
	AdditionalEntitiesCount pulumi.IntPtrInput `pulumi:"additionalEntitiesCount"`
	// Possible type of dataSourceFeed Provider(LoggingQuery)
	DataSourceFeedProvider pulumi.StringInput `pulumi:"dataSourceFeedProvider"`
	// (Updatable) Interval in minutes that query is run periodically.
	IntervalInMinutes pulumi.IntPtrInput `pulumi:"intervalInMinutes"`
	// (Updatable) Additional details specific to the data source type (Sighting/Insight).
	LoggingQueryDetails CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrInput `pulumi:"loggingQueryDetails"`
	// (Updatable) Logging query type for data source (Sighting/Insight)
	LoggingQueryType pulumi.StringPtrInput `pulumi:"loggingQueryType"`
	// (Updatable) Operator used in Data Soruce
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// (Updatable) The continuous query expression that is run periodically.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// (Updatable) Time when the query can start, if not specified it can start immediately.
	QueryStartTime CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrInput `pulumi:"queryStartTime"`
	// (Updatable) Logging Query regions
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// (Updatable) The integer value that must be exceeded, fall below or equal to (depending on the operator), the query result to trigger an event.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
}

func (CloudGuardDataSourceDataSourceDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardDataSourceDataSourceDetails)(nil)).Elem()
}

func (i CloudGuardDataSourceDataSourceDetailsArgs) ToCloudGuardDataSourceDataSourceDetailsOutput() CloudGuardDataSourceDataSourceDetailsOutput {
	return i.ToCloudGuardDataSourceDataSourceDetailsOutputWithContext(context.Background())
}

func (i CloudGuardDataSourceDataSourceDetailsArgs) ToCloudGuardDataSourceDataSourceDetailsOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceDataSourceDetailsOutput)
}

func (i CloudGuardDataSourceDataSourceDetailsArgs) ToCloudGuardDataSourceDataSourceDetailsPtrOutput() CloudGuardDataSourceDataSourceDetailsPtrOutput {
	return i.ToCloudGuardDataSourceDataSourceDetailsPtrOutputWithContext(context.Background())
}

func (i CloudGuardDataSourceDataSourceDetailsArgs) ToCloudGuardDataSourceDataSourceDetailsPtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceDataSourceDetailsOutput).ToCloudGuardDataSourceDataSourceDetailsPtrOutputWithContext(ctx)
}

// CloudGuardDataSourceDataSourceDetailsPtrInput is an input type that accepts CloudGuardDataSourceDataSourceDetailsArgs, CloudGuardDataSourceDataSourceDetailsPtr and CloudGuardDataSourceDataSourceDetailsPtrOutput values.
// You can construct a concrete instance of `CloudGuardDataSourceDataSourceDetailsPtrInput` via:
//
//	        CloudGuardDataSourceDataSourceDetailsArgs{...}
//
//	or:
//
//	        nil
type CloudGuardDataSourceDataSourceDetailsPtrInput interface {
	pulumi.Input

	ToCloudGuardDataSourceDataSourceDetailsPtrOutput() CloudGuardDataSourceDataSourceDetailsPtrOutput
	ToCloudGuardDataSourceDataSourceDetailsPtrOutputWithContext(context.Context) CloudGuardDataSourceDataSourceDetailsPtrOutput
}

type cloudGuardDataSourceDataSourceDetailsPtrType CloudGuardDataSourceDataSourceDetailsArgs

func CloudGuardDataSourceDataSourceDetailsPtr(v *CloudGuardDataSourceDataSourceDetailsArgs) CloudGuardDataSourceDataSourceDetailsPtrInput {
	return (*cloudGuardDataSourceDataSourceDetailsPtrType)(v)
}

func (*cloudGuardDataSourceDataSourceDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudGuardDataSourceDataSourceDetails)(nil)).Elem()
}

func (i *cloudGuardDataSourceDataSourceDetailsPtrType) ToCloudGuardDataSourceDataSourceDetailsPtrOutput() CloudGuardDataSourceDataSourceDetailsPtrOutput {
	return i.ToCloudGuardDataSourceDataSourceDetailsPtrOutputWithContext(context.Background())
}

func (i *cloudGuardDataSourceDataSourceDetailsPtrType) ToCloudGuardDataSourceDataSourceDetailsPtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceDataSourceDetailsPtrOutput)
}

type CloudGuardDataSourceDataSourceDetailsOutput struct{ *pulumi.OutputState }

func (CloudGuardDataSourceDataSourceDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardDataSourceDataSourceDetails)(nil)).Elem()
}

func (o CloudGuardDataSourceDataSourceDetailsOutput) ToCloudGuardDataSourceDataSourceDetailsOutput() CloudGuardDataSourceDataSourceDetailsOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsOutput) ToCloudGuardDataSourceDataSourceDetailsOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsOutput) ToCloudGuardDataSourceDataSourceDetailsPtrOutput() CloudGuardDataSourceDataSourceDetailsPtrOutput {
	return o.ToCloudGuardDataSourceDataSourceDetailsPtrOutputWithContext(context.Background())
}

func (o CloudGuardDataSourceDataSourceDetailsOutput) ToCloudGuardDataSourceDataSourceDetailsPtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudGuardDataSourceDataSourceDetails) *CloudGuardDataSourceDataSourceDetails {
		return &v
	}).(CloudGuardDataSourceDataSourceDetailsPtrOutput)
}

// (Updatable) The additional entities count used for data source query.
func (o CloudGuardDataSourceDataSourceDetailsOutput) AdditionalEntitiesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetails) *int { return v.AdditionalEntitiesCount }).(pulumi.IntPtrOutput)
}

// Possible type of dataSourceFeed Provider(LoggingQuery)
func (o CloudGuardDataSourceDataSourceDetailsOutput) DataSourceFeedProvider() pulumi.StringOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetails) string { return v.DataSourceFeedProvider }).(pulumi.StringOutput)
}

// (Updatable) Interval in minutes that query is run periodically.
func (o CloudGuardDataSourceDataSourceDetailsOutput) IntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetails) *int { return v.IntervalInMinutes }).(pulumi.IntPtrOutput)
}

// (Updatable) Additional details specific to the data source type (Sighting/Insight).
func (o CloudGuardDataSourceDataSourceDetailsOutput) LoggingQueryDetails() CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetails) *CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails {
		return v.LoggingQueryDetails
	}).(CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput)
}

// (Updatable) Logging query type for data source (Sighting/Insight)
func (o CloudGuardDataSourceDataSourceDetailsOutput) LoggingQueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetails) *string { return v.LoggingQueryType }).(pulumi.StringPtrOutput)
}

// (Updatable) Operator used in Data Soruce
func (o CloudGuardDataSourceDataSourceDetailsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetails) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// (Updatable) The continuous query expression that is run periodically.
func (o CloudGuardDataSourceDataSourceDetailsOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetails) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// (Updatable) Time when the query can start, if not specified it can start immediately.
func (o CloudGuardDataSourceDataSourceDetailsOutput) QueryStartTime() CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetails) *CloudGuardDataSourceDataSourceDetailsQueryStartTime {
		return v.QueryStartTime
	}).(CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput)
}

// (Updatable) Logging Query regions
func (o CloudGuardDataSourceDataSourceDetailsOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetails) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// (Updatable) The integer value that must be exceeded, fall below or equal to (depending on the operator), the query result to trigger an event.
func (o CloudGuardDataSourceDataSourceDetailsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetails) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

type CloudGuardDataSourceDataSourceDetailsPtrOutput struct{ *pulumi.OutputState }

func (CloudGuardDataSourceDataSourceDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudGuardDataSourceDataSourceDetails)(nil)).Elem()
}

func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) ToCloudGuardDataSourceDataSourceDetailsPtrOutput() CloudGuardDataSourceDataSourceDetailsPtrOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) ToCloudGuardDataSourceDataSourceDetailsPtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsPtrOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) Elem() CloudGuardDataSourceDataSourceDetailsOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetails) CloudGuardDataSourceDataSourceDetails {
		if v != nil {
			return *v
		}
		var ret CloudGuardDataSourceDataSourceDetails
		return ret
	}).(CloudGuardDataSourceDataSourceDetailsOutput)
}

// (Updatable) The additional entities count used for data source query.
func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) AdditionalEntitiesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetails) *int {
		if v == nil {
			return nil
		}
		return v.AdditionalEntitiesCount
	}).(pulumi.IntPtrOutput)
}

// Possible type of dataSourceFeed Provider(LoggingQuery)
func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) DataSourceFeedProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DataSourceFeedProvider
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Interval in minutes that query is run periodically.
func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) IntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetails) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInMinutes
	}).(pulumi.IntPtrOutput)
}

// (Updatable) Additional details specific to the data source type (Sighting/Insight).
func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) LoggingQueryDetails() CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetails) *CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails {
		if v == nil {
			return nil
		}
		return v.LoggingQueryDetails
	}).(CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput)
}

// (Updatable) Logging query type for data source (Sighting/Insight)
func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) LoggingQueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetails) *string {
		if v == nil {
			return nil
		}
		return v.LoggingQueryType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Operator used in Data Soruce
func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetails) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The continuous query expression that is run periodically.
func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetails) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Time when the query can start, if not specified it can start immediately.
func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) QueryStartTime() CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetails) *CloudGuardDataSourceDataSourceDetailsQueryStartTime {
		if v == nil {
			return nil
		}
		return v.QueryStartTime
	}).(CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput)
}

// (Updatable) Logging Query regions
func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetails) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

// (Updatable) The integer value that must be exceeded, fall below or equal to (depending on the operator), the query result to trigger an event.
func (o CloudGuardDataSourceDataSourceDetailsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetails) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

type CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails struct {
	// (Updatable) The key entities count used for data source query
	KeyEntitiesCount *int `pulumi:"keyEntitiesCount"`
	// (Updatable) Logging query type for data source (Sighting/Insight)
	LoggingQueryType string `pulumi:"loggingQueryType"`
}

// CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsInput is an input type that accepts CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs and CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput values.
// You can construct a concrete instance of `CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsInput` via:
//
//	CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs{...}
type CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsInput interface {
	pulumi.Input

	ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput() CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput
	ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutputWithContext(context.Context) CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput
}

type CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs struct {
	// (Updatable) The key entities count used for data source query
	KeyEntitiesCount pulumi.IntPtrInput `pulumi:"keyEntitiesCount"`
	// (Updatable) Logging query type for data source (Sighting/Insight)
	LoggingQueryType pulumi.StringInput `pulumi:"loggingQueryType"`
}

func (CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails)(nil)).Elem()
}

func (i CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput() CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput {
	return i.ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutputWithContext(context.Background())
}

func (i CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput)
}

func (i CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput() CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput {
	return i.ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutputWithContext(context.Background())
}

func (i CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput).ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutputWithContext(ctx)
}

// CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrInput is an input type that accepts CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs, CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtr and CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput values.
// You can construct a concrete instance of `CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrInput` via:
//
//	        CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs{...}
//
//	or:
//
//	        nil
type CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrInput interface {
	pulumi.Input

	ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput() CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput
	ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutputWithContext(context.Context) CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput
}

type cloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrType CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs

func CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtr(v *CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs) CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrInput {
	return (*cloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrType)(v)
}

func (*cloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails)(nil)).Elem()
}

func (i *cloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrType) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput() CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput {
	return i.ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutputWithContext(context.Background())
}

func (i *cloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrType) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput)
}

type CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput struct{ *pulumi.OutputState }

func (CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails)(nil)).Elem()
}

func (o CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput() CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput() CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput {
	return o.ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutputWithContext(context.Background())
}

func (o CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails) *CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails {
		return &v
	}).(CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput)
}

// (Updatable) The key entities count used for data source query
func (o CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput) KeyEntitiesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails) *int { return v.KeyEntitiesCount }).(pulumi.IntPtrOutput)
}

// (Updatable) Logging query type for data source (Sighting/Insight)
func (o CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput) LoggingQueryType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails) string { return v.LoggingQueryType }).(pulumi.StringOutput)
}

type CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput struct{ *pulumi.OutputState }

func (CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails)(nil)).Elem()
}

func (o CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput() CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput) ToCloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput) Elem() CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails) CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails {
		if v != nil {
			return *v
		}
		var ret CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails
		return ret
	}).(CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput)
}

// (Updatable) The key entities count used for data source query
func (o CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput) KeyEntitiesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails) *int {
		if v == nil {
			return nil
		}
		return v.KeyEntitiesCount
	}).(pulumi.IntPtrOutput)
}

// (Updatable) Logging query type for data source (Sighting/Insight)
func (o CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput) LoggingQueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetailsLoggingQueryDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LoggingQueryType
	}).(pulumi.StringPtrOutput)
}

type CloudGuardDataSourceDataSourceDetailsQueryStartTime struct {
	// (Updatable) Time when the query can start, if not specified it can start immediately.
	QueryStartTime *string `pulumi:"queryStartTime"`
	// (Updatable) policy used for deciding the query start time
	StartPolicyType string `pulumi:"startPolicyType"`
}

// CloudGuardDataSourceDataSourceDetailsQueryStartTimeInput is an input type that accepts CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs and CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput values.
// You can construct a concrete instance of `CloudGuardDataSourceDataSourceDetailsQueryStartTimeInput` via:
//
//	CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs{...}
type CloudGuardDataSourceDataSourceDetailsQueryStartTimeInput interface {
	pulumi.Input

	ToCloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput() CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput
	ToCloudGuardDataSourceDataSourceDetailsQueryStartTimeOutputWithContext(context.Context) CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput
}

type CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs struct {
	// (Updatable) Time when the query can start, if not specified it can start immediately.
	QueryStartTime pulumi.StringPtrInput `pulumi:"queryStartTime"`
	// (Updatable) policy used for deciding the query start time
	StartPolicyType pulumi.StringInput `pulumi:"startPolicyType"`
}

func (CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardDataSourceDataSourceDetailsQueryStartTime)(nil)).Elem()
}

func (i CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput() CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput {
	return i.ToCloudGuardDataSourceDataSourceDetailsQueryStartTimeOutputWithContext(context.Background())
}

func (i CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimeOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput)
}

func (i CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput() CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput {
	return i.ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutputWithContext(context.Background())
}

func (i CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput).ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutputWithContext(ctx)
}

// CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrInput is an input type that accepts CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs, CloudGuardDataSourceDataSourceDetailsQueryStartTimePtr and CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput values.
// You can construct a concrete instance of `CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrInput` via:
//
//	        CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs{...}
//
//	or:
//
//	        nil
type CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrInput interface {
	pulumi.Input

	ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput() CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput
	ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutputWithContext(context.Context) CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput
}

type cloudGuardDataSourceDataSourceDetailsQueryStartTimePtrType CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs

func CloudGuardDataSourceDataSourceDetailsQueryStartTimePtr(v *CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs) CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrInput {
	return (*cloudGuardDataSourceDataSourceDetailsQueryStartTimePtrType)(v)
}

func (*cloudGuardDataSourceDataSourceDetailsQueryStartTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudGuardDataSourceDataSourceDetailsQueryStartTime)(nil)).Elem()
}

func (i *cloudGuardDataSourceDataSourceDetailsQueryStartTimePtrType) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput() CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput {
	return i.ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutputWithContext(context.Background())
}

func (i *cloudGuardDataSourceDataSourceDetailsQueryStartTimePtrType) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput)
}

type CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput struct{ *pulumi.OutputState }

func (CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardDataSourceDataSourceDetailsQueryStartTime)(nil)).Elem()
}

func (o CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput() CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimeOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput() CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput {
	return o.ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutputWithContext(context.Background())
}

func (o CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudGuardDataSourceDataSourceDetailsQueryStartTime) *CloudGuardDataSourceDataSourceDetailsQueryStartTime {
		return &v
	}).(CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput)
}

// (Updatable) Time when the query can start, if not specified it can start immediately.
func (o CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput) QueryStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetailsQueryStartTime) *string { return v.QueryStartTime }).(pulumi.StringPtrOutput)
}

// (Updatable) policy used for deciding the query start time
func (o CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput) StartPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetailsQueryStartTime) string { return v.StartPolicyType }).(pulumi.StringOutput)
}

type CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput struct{ *pulumi.OutputState }

func (CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudGuardDataSourceDataSourceDetailsQueryStartTime)(nil)).Elem()
}

func (o CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput() CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput) ToCloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput) Elem() CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetailsQueryStartTime) CloudGuardDataSourceDataSourceDetailsQueryStartTime {
		if v != nil {
			return *v
		}
		var ret CloudGuardDataSourceDataSourceDetailsQueryStartTime
		return ret
	}).(CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput)
}

// (Updatable) Time when the query can start, if not specified it can start immediately.
func (o CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput) QueryStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetailsQueryStartTime) *string {
		if v == nil {
			return nil
		}
		return v.QueryStartTime
	}).(pulumi.StringPtrOutput)
}

// (Updatable) policy used for deciding the query start time
func (o CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput) StartPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudGuardDataSourceDataSourceDetailsQueryStartTime) *string {
		if v == nil {
			return nil
		}
		return &v.StartPolicyType
	}).(pulumi.StringPtrOutput)
}

type CloudGuardDataSourceDataSourceDetectorMappingInfo struct {
	// Id of the attached detectorRecipeId to the Data Source.
	DetectorRecipeId *string `pulumi:"detectorRecipeId"`
	// Id of the attached detectorRuleId to the Data Source.
	DetectorRuleId *string `pulumi:"detectorRuleId"`
}

// CloudGuardDataSourceDataSourceDetectorMappingInfoInput is an input type that accepts CloudGuardDataSourceDataSourceDetectorMappingInfoArgs and CloudGuardDataSourceDataSourceDetectorMappingInfoOutput values.
// You can construct a concrete instance of `CloudGuardDataSourceDataSourceDetectorMappingInfoInput` via:
//
//	CloudGuardDataSourceDataSourceDetectorMappingInfoArgs{...}
type CloudGuardDataSourceDataSourceDetectorMappingInfoInput interface {
	pulumi.Input

	ToCloudGuardDataSourceDataSourceDetectorMappingInfoOutput() CloudGuardDataSourceDataSourceDetectorMappingInfoOutput
	ToCloudGuardDataSourceDataSourceDetectorMappingInfoOutputWithContext(context.Context) CloudGuardDataSourceDataSourceDetectorMappingInfoOutput
}

type CloudGuardDataSourceDataSourceDetectorMappingInfoArgs struct {
	// Id of the attached detectorRecipeId to the Data Source.
	DetectorRecipeId pulumi.StringPtrInput `pulumi:"detectorRecipeId"`
	// Id of the attached detectorRuleId to the Data Source.
	DetectorRuleId pulumi.StringPtrInput `pulumi:"detectorRuleId"`
}

func (CloudGuardDataSourceDataSourceDetectorMappingInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardDataSourceDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (i CloudGuardDataSourceDataSourceDetectorMappingInfoArgs) ToCloudGuardDataSourceDataSourceDetectorMappingInfoOutput() CloudGuardDataSourceDataSourceDetectorMappingInfoOutput {
	return i.ToCloudGuardDataSourceDataSourceDetectorMappingInfoOutputWithContext(context.Background())
}

func (i CloudGuardDataSourceDataSourceDetectorMappingInfoArgs) ToCloudGuardDataSourceDataSourceDetectorMappingInfoOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetectorMappingInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceDataSourceDetectorMappingInfoOutput)
}

// CloudGuardDataSourceDataSourceDetectorMappingInfoArrayInput is an input type that accepts CloudGuardDataSourceDataSourceDetectorMappingInfoArray and CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput values.
// You can construct a concrete instance of `CloudGuardDataSourceDataSourceDetectorMappingInfoArrayInput` via:
//
//	CloudGuardDataSourceDataSourceDetectorMappingInfoArray{ CloudGuardDataSourceDataSourceDetectorMappingInfoArgs{...} }
type CloudGuardDataSourceDataSourceDetectorMappingInfoArrayInput interface {
	pulumi.Input

	ToCloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput() CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput
	ToCloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutputWithContext(context.Context) CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput
}

type CloudGuardDataSourceDataSourceDetectorMappingInfoArray []CloudGuardDataSourceDataSourceDetectorMappingInfoInput

func (CloudGuardDataSourceDataSourceDetectorMappingInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudGuardDataSourceDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (i CloudGuardDataSourceDataSourceDetectorMappingInfoArray) ToCloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput() CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput {
	return i.ToCloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutputWithContext(context.Background())
}

func (i CloudGuardDataSourceDataSourceDetectorMappingInfoArray) ToCloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput)
}

type CloudGuardDataSourceDataSourceDetectorMappingInfoOutput struct{ *pulumi.OutputState }

func (CloudGuardDataSourceDataSourceDetectorMappingInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardDataSourceDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (o CloudGuardDataSourceDataSourceDetectorMappingInfoOutput) ToCloudGuardDataSourceDataSourceDetectorMappingInfoOutput() CloudGuardDataSourceDataSourceDetectorMappingInfoOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetectorMappingInfoOutput) ToCloudGuardDataSourceDataSourceDetectorMappingInfoOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetectorMappingInfoOutput {
	return o
}

// Id of the attached detectorRecipeId to the Data Source.
func (o CloudGuardDataSourceDataSourceDetectorMappingInfoOutput) DetectorRecipeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetectorMappingInfo) *string { return v.DetectorRecipeId }).(pulumi.StringPtrOutput)
}

// Id of the attached detectorRuleId to the Data Source.
func (o CloudGuardDataSourceDataSourceDetectorMappingInfoOutput) DetectorRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceDataSourceDetectorMappingInfo) *string { return v.DetectorRuleId }).(pulumi.StringPtrOutput)
}

type CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput struct{ *pulumi.OutputState }

func (CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudGuardDataSourceDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (o CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput) ToCloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput() CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput) ToCloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutputWithContext(ctx context.Context) CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput {
	return o
}

func (o CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput) Index(i pulumi.IntInput) CloudGuardDataSourceDataSourceDetectorMappingInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudGuardDataSourceDataSourceDetectorMappingInfo {
		return vs[0].([]CloudGuardDataSourceDataSourceDetectorMappingInfo)[vs[1].(int)]
	}).(CloudGuardDataSourceDataSourceDetectorMappingInfoOutput)
}

type CloudGuardDataSourceRegionStatusDetail struct {
	// Data Source replication region.
	Region *string `pulumi:"region"`
	// Status of data Source
	Status *string `pulumi:"status"`
}

// CloudGuardDataSourceRegionStatusDetailInput is an input type that accepts CloudGuardDataSourceRegionStatusDetailArgs and CloudGuardDataSourceRegionStatusDetailOutput values.
// You can construct a concrete instance of `CloudGuardDataSourceRegionStatusDetailInput` via:
//
//	CloudGuardDataSourceRegionStatusDetailArgs{...}
type CloudGuardDataSourceRegionStatusDetailInput interface {
	pulumi.Input

	ToCloudGuardDataSourceRegionStatusDetailOutput() CloudGuardDataSourceRegionStatusDetailOutput
	ToCloudGuardDataSourceRegionStatusDetailOutputWithContext(context.Context) CloudGuardDataSourceRegionStatusDetailOutput
}

type CloudGuardDataSourceRegionStatusDetailArgs struct {
	// Data Source replication region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Status of data Source
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (CloudGuardDataSourceRegionStatusDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardDataSourceRegionStatusDetail)(nil)).Elem()
}

func (i CloudGuardDataSourceRegionStatusDetailArgs) ToCloudGuardDataSourceRegionStatusDetailOutput() CloudGuardDataSourceRegionStatusDetailOutput {
	return i.ToCloudGuardDataSourceRegionStatusDetailOutputWithContext(context.Background())
}

func (i CloudGuardDataSourceRegionStatusDetailArgs) ToCloudGuardDataSourceRegionStatusDetailOutputWithContext(ctx context.Context) CloudGuardDataSourceRegionStatusDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceRegionStatusDetailOutput)
}

// CloudGuardDataSourceRegionStatusDetailArrayInput is an input type that accepts CloudGuardDataSourceRegionStatusDetailArray and CloudGuardDataSourceRegionStatusDetailArrayOutput values.
// You can construct a concrete instance of `CloudGuardDataSourceRegionStatusDetailArrayInput` via:
//
//	CloudGuardDataSourceRegionStatusDetailArray{ CloudGuardDataSourceRegionStatusDetailArgs{...} }
type CloudGuardDataSourceRegionStatusDetailArrayInput interface {
	pulumi.Input

	ToCloudGuardDataSourceRegionStatusDetailArrayOutput() CloudGuardDataSourceRegionStatusDetailArrayOutput
	ToCloudGuardDataSourceRegionStatusDetailArrayOutputWithContext(context.Context) CloudGuardDataSourceRegionStatusDetailArrayOutput
}

type CloudGuardDataSourceRegionStatusDetailArray []CloudGuardDataSourceRegionStatusDetailInput

func (CloudGuardDataSourceRegionStatusDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudGuardDataSourceRegionStatusDetail)(nil)).Elem()
}

func (i CloudGuardDataSourceRegionStatusDetailArray) ToCloudGuardDataSourceRegionStatusDetailArrayOutput() CloudGuardDataSourceRegionStatusDetailArrayOutput {
	return i.ToCloudGuardDataSourceRegionStatusDetailArrayOutputWithContext(context.Background())
}

func (i CloudGuardDataSourceRegionStatusDetailArray) ToCloudGuardDataSourceRegionStatusDetailArrayOutputWithContext(ctx context.Context) CloudGuardDataSourceRegionStatusDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudGuardDataSourceRegionStatusDetailArrayOutput)
}

type CloudGuardDataSourceRegionStatusDetailOutput struct{ *pulumi.OutputState }

func (CloudGuardDataSourceRegionStatusDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudGuardDataSourceRegionStatusDetail)(nil)).Elem()
}

func (o CloudGuardDataSourceRegionStatusDetailOutput) ToCloudGuardDataSourceRegionStatusDetailOutput() CloudGuardDataSourceRegionStatusDetailOutput {
	return o
}

func (o CloudGuardDataSourceRegionStatusDetailOutput) ToCloudGuardDataSourceRegionStatusDetailOutputWithContext(ctx context.Context) CloudGuardDataSourceRegionStatusDetailOutput {
	return o
}

// Data Source replication region.
func (o CloudGuardDataSourceRegionStatusDetailOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceRegionStatusDetail) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Status of data Source
func (o CloudGuardDataSourceRegionStatusDetailOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudGuardDataSourceRegionStatusDetail) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type CloudGuardDataSourceRegionStatusDetailArrayOutput struct{ *pulumi.OutputState }

func (CloudGuardDataSourceRegionStatusDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudGuardDataSourceRegionStatusDetail)(nil)).Elem()
}

func (o CloudGuardDataSourceRegionStatusDetailArrayOutput) ToCloudGuardDataSourceRegionStatusDetailArrayOutput() CloudGuardDataSourceRegionStatusDetailArrayOutput {
	return o
}

func (o CloudGuardDataSourceRegionStatusDetailArrayOutput) ToCloudGuardDataSourceRegionStatusDetailArrayOutputWithContext(ctx context.Context) CloudGuardDataSourceRegionStatusDetailArrayOutput {
	return o
}

func (o CloudGuardDataSourceRegionStatusDetailArrayOutput) Index(i pulumi.IntInput) CloudGuardDataSourceRegionStatusDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudGuardDataSourceRegionStatusDetail {
		return vs[0].([]CloudGuardDataSourceRegionStatusDetail)[vs[1].(int)]
	}).(CloudGuardDataSourceRegionStatusDetailOutput)
}

type DataMaskRuleTargetSelected struct {
	// (Updatable) Target selection.
	Kind string `pulumi:"kind"`
	// (Updatable) Types of Targets
	Values []string `pulumi:"values"`
}

// DataMaskRuleTargetSelectedInput is an input type that accepts DataMaskRuleTargetSelectedArgs and DataMaskRuleTargetSelectedOutput values.
// You can construct a concrete instance of `DataMaskRuleTargetSelectedInput` via:
//
//	DataMaskRuleTargetSelectedArgs{...}
type DataMaskRuleTargetSelectedInput interface {
	pulumi.Input

	ToDataMaskRuleTargetSelectedOutput() DataMaskRuleTargetSelectedOutput
	ToDataMaskRuleTargetSelectedOutputWithContext(context.Context) DataMaskRuleTargetSelectedOutput
}

type DataMaskRuleTargetSelectedArgs struct {
	// (Updatable) Target selection.
	Kind pulumi.StringInput `pulumi:"kind"`
	// (Updatable) Types of Targets
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DataMaskRuleTargetSelectedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataMaskRuleTargetSelected)(nil)).Elem()
}

func (i DataMaskRuleTargetSelectedArgs) ToDataMaskRuleTargetSelectedOutput() DataMaskRuleTargetSelectedOutput {
	return i.ToDataMaskRuleTargetSelectedOutputWithContext(context.Background())
}

func (i DataMaskRuleTargetSelectedArgs) ToDataMaskRuleTargetSelectedOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataMaskRuleTargetSelectedOutput)
}

func (i DataMaskRuleTargetSelectedArgs) ToDataMaskRuleTargetSelectedPtrOutput() DataMaskRuleTargetSelectedPtrOutput {
	return i.ToDataMaskRuleTargetSelectedPtrOutputWithContext(context.Background())
}

func (i DataMaskRuleTargetSelectedArgs) ToDataMaskRuleTargetSelectedPtrOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataMaskRuleTargetSelectedOutput).ToDataMaskRuleTargetSelectedPtrOutputWithContext(ctx)
}

// DataMaskRuleTargetSelectedPtrInput is an input type that accepts DataMaskRuleTargetSelectedArgs, DataMaskRuleTargetSelectedPtr and DataMaskRuleTargetSelectedPtrOutput values.
// You can construct a concrete instance of `DataMaskRuleTargetSelectedPtrInput` via:
//
//	        DataMaskRuleTargetSelectedArgs{...}
//
//	or:
//
//	        nil
type DataMaskRuleTargetSelectedPtrInput interface {
	pulumi.Input

	ToDataMaskRuleTargetSelectedPtrOutput() DataMaskRuleTargetSelectedPtrOutput
	ToDataMaskRuleTargetSelectedPtrOutputWithContext(context.Context) DataMaskRuleTargetSelectedPtrOutput
}

type dataMaskRuleTargetSelectedPtrType DataMaskRuleTargetSelectedArgs

func DataMaskRuleTargetSelectedPtr(v *DataMaskRuleTargetSelectedArgs) DataMaskRuleTargetSelectedPtrInput {
	return (*dataMaskRuleTargetSelectedPtrType)(v)
}

func (*dataMaskRuleTargetSelectedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataMaskRuleTargetSelected)(nil)).Elem()
}

func (i *dataMaskRuleTargetSelectedPtrType) ToDataMaskRuleTargetSelectedPtrOutput() DataMaskRuleTargetSelectedPtrOutput {
	return i.ToDataMaskRuleTargetSelectedPtrOutputWithContext(context.Background())
}

func (i *dataMaskRuleTargetSelectedPtrType) ToDataMaskRuleTargetSelectedPtrOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataMaskRuleTargetSelectedPtrOutput)
}

type DataMaskRuleTargetSelectedOutput struct{ *pulumi.OutputState }

func (DataMaskRuleTargetSelectedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataMaskRuleTargetSelected)(nil)).Elem()
}

func (o DataMaskRuleTargetSelectedOutput) ToDataMaskRuleTargetSelectedOutput() DataMaskRuleTargetSelectedOutput {
	return o
}

func (o DataMaskRuleTargetSelectedOutput) ToDataMaskRuleTargetSelectedOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedOutput {
	return o
}

func (o DataMaskRuleTargetSelectedOutput) ToDataMaskRuleTargetSelectedPtrOutput() DataMaskRuleTargetSelectedPtrOutput {
	return o.ToDataMaskRuleTargetSelectedPtrOutputWithContext(context.Background())
}

func (o DataMaskRuleTargetSelectedOutput) ToDataMaskRuleTargetSelectedPtrOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataMaskRuleTargetSelected) *DataMaskRuleTargetSelected {
		return &v
	}).(DataMaskRuleTargetSelectedPtrOutput)
}

// (Updatable) Target selection.
func (o DataMaskRuleTargetSelectedOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v DataMaskRuleTargetSelected) string { return v.Kind }).(pulumi.StringOutput)
}

// (Updatable) Types of Targets
func (o DataMaskRuleTargetSelectedOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataMaskRuleTargetSelected) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DataMaskRuleTargetSelectedPtrOutput struct{ *pulumi.OutputState }

func (DataMaskRuleTargetSelectedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataMaskRuleTargetSelected)(nil)).Elem()
}

func (o DataMaskRuleTargetSelectedPtrOutput) ToDataMaskRuleTargetSelectedPtrOutput() DataMaskRuleTargetSelectedPtrOutput {
	return o
}

func (o DataMaskRuleTargetSelectedPtrOutput) ToDataMaskRuleTargetSelectedPtrOutputWithContext(ctx context.Context) DataMaskRuleTargetSelectedPtrOutput {
	return o
}

func (o DataMaskRuleTargetSelectedPtrOutput) Elem() DataMaskRuleTargetSelectedOutput {
	return o.ApplyT(func(v *DataMaskRuleTargetSelected) DataMaskRuleTargetSelected {
		if v != nil {
			return *v
		}
		var ret DataMaskRuleTargetSelected
		return ret
	}).(DataMaskRuleTargetSelectedOutput)
}

// (Updatable) Target selection.
func (o DataMaskRuleTargetSelectedPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataMaskRuleTargetSelected) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Types of Targets
func (o DataMaskRuleTargetSelectedPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataMaskRuleTargetSelected) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type DetectorRecipeDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []DetectorRecipeDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// (Updatable) The id of the attached DataSource.
	DataSourceId *string `pulumi:"dataSourceId"`
	// (Updatable) Description for DetectorRecipeDetectorRule.
	Description *string `pulumi:"description"`
	// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
	Details DetectorRecipeDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector *string `pulumi:"detector"`
	// (Updatable) DetectorRecipeRule Identifier
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// (Updatable) Detector recipe display name.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Data Source entities mapping for a Detector Rule
	EntitiesMappings []DetectorRecipeDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// (Updatable) Recommendation for DetectorRecipeDetectorRule
	Recommendation *string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType *string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType *string `pulumi:"serviceType"`
	// The current state of the resource.
	State *string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// DetectorRecipeDetectorRuleInput is an input type that accepts DetectorRecipeDetectorRuleArgs and DetectorRecipeDetectorRuleOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleInput` via:
//
//	DetectorRecipeDetectorRuleArgs{...}
type DetectorRecipeDetectorRuleInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleOutput() DetectorRecipeDetectorRuleOutput
	ToDetectorRecipeDetectorRuleOutputWithContext(context.Context) DetectorRecipeDetectorRuleOutput
}

type DetectorRecipeDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules DetectorRecipeDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// (Updatable) The id of the attached DataSource.
	DataSourceId pulumi.StringPtrInput `pulumi:"dataSourceId"`
	// (Updatable) Description for DetectorRecipeDetectorRule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
	Details DetectorRecipeDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringPtrInput `pulumi:"detector"`
	// (Updatable) DetectorRecipeRule Identifier
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// (Updatable) Detector recipe display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (Updatable) Data Source entities mapping for a Detector Rule
	EntitiesMappings DetectorRecipeDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// (Updatable) Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringPtrInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
	// The current state of the resource.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (DetectorRecipeDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRule)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleArgs) ToDetectorRecipeDetectorRuleOutput() DetectorRecipeDetectorRuleOutput {
	return i.ToDetectorRecipeDetectorRuleOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleArgs) ToDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleOutput)
}

// DetectorRecipeDetectorRuleArrayInput is an input type that accepts DetectorRecipeDetectorRuleArray and DetectorRecipeDetectorRuleArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleArrayInput` via:
//
//	DetectorRecipeDetectorRuleArray{ DetectorRecipeDetectorRuleArgs{...} }
type DetectorRecipeDetectorRuleArrayInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleArrayOutput() DetectorRecipeDetectorRuleArrayOutput
	ToDetectorRecipeDetectorRuleArrayOutputWithContext(context.Context) DetectorRecipeDetectorRuleArrayOutput
}

type DetectorRecipeDetectorRuleArray []DetectorRecipeDetectorRuleInput

func (DetectorRecipeDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRule)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleArray) ToDetectorRecipeDetectorRuleArrayOutput() DetectorRecipeDetectorRuleArrayOutput {
	return i.ToDetectorRecipeDetectorRuleArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleArray) ToDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleArrayOutput)
}

type DetectorRecipeDetectorRuleOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRule)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleOutput) ToDetectorRecipeDetectorRuleOutput() DetectorRecipeDetectorRuleOutput {
	return o
}

func (o DetectorRecipeDetectorRuleOutput) ToDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o DetectorRecipeDetectorRuleOutput) CandidateResponderRules() DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) []DetectorRecipeDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput)
}

// (Updatable) The id of the attached DataSource.
func (o DetectorRecipeDetectorRuleOutput) DataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.DataSourceId }).(pulumi.StringPtrOutput)
}

// (Updatable) Description for DetectorRecipeDetectorRule.
func (o DetectorRecipeDetectorRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
func (o DetectorRecipeDetectorRuleOutput) Details() DetectorRecipeDetectorRuleDetailsOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) DetectorRecipeDetectorRuleDetails { return v.Details }).(DetectorRecipeDetectorRuleDetailsOutput)
}

// detector for the rule
func (o DetectorRecipeDetectorRuleOutput) Detector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.Detector }).(pulumi.StringPtrOutput)
}

// (Updatable) DetectorRecipeRule Identifier
func (o DetectorRecipeDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// (Updatable) Detector recipe display name.
func (o DetectorRecipeDetectorRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// (Updatable) Data Source entities mapping for a Detector Rule
func (o DetectorRecipeDetectorRuleOutput) EntitiesMappings() DetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) []DetectorRecipeDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(DetectorRecipeDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o DetectorRecipeDetectorRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of cloudguard managed list types related to this rule
func (o DetectorRecipeDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// (Updatable) Recommendation for DetectorRecipeDetectorRule
func (o DetectorRecipeDetectorRuleOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.Recommendation }).(pulumi.StringPtrOutput)
}

// resource type of the configuration to which the rule is applied
func (o DetectorRecipeDetectorRuleOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// service type of the configuration to which the rule is applied
func (o DetectorRecipeDetectorRuleOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// The current state of the resource.
func (o DetectorRecipeDetectorRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o DetectorRecipeDetectorRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o DetectorRecipeDetectorRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type DetectorRecipeDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRule)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleArrayOutput) ToDetectorRecipeDetectorRuleArrayOutput() DetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleArrayOutput) ToDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleArrayOutput) Index(i pulumi.IntInput) DetectorRecipeDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeDetectorRule {
		return vs[0].([]DetectorRecipeDetectorRule)[vs[1].(int)]
	}).(DetectorRecipeDetectorRuleOutput)
}

type DetectorRecipeDetectorRuleCandidateResponderRule struct {
	// (Updatable) Detector recipe display name.
	DisplayName *string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id *string `pulumi:"id"`
	// Preferred state
	IsPreferred *bool `pulumi:"isPreferred"`
}

// DetectorRecipeDetectorRuleCandidateResponderRuleInput is an input type that accepts DetectorRecipeDetectorRuleCandidateResponderRuleArgs and DetectorRecipeDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleCandidateResponderRuleInput` via:
//
//	DetectorRecipeDetectorRuleCandidateResponderRuleArgs{...}
type DetectorRecipeDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleCandidateResponderRuleOutput() DetectorRecipeDetectorRuleCandidateResponderRuleOutput
	ToDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleOutput
}

type DetectorRecipeDetectorRuleCandidateResponderRuleArgs struct {
	// (Updatable) Detector recipe display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolPtrInput `pulumi:"isPreferred"`
}

func (DetectorRecipeDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleCandidateResponderRuleArgs) ToDetectorRecipeDetectorRuleCandidateResponderRuleOutput() DetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return i.ToDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleCandidateResponderRuleArgs) ToDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleCandidateResponderRuleOutput)
}

// DetectorRecipeDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts DetectorRecipeDetectorRuleCandidateResponderRuleArray and DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleCandidateResponderRuleArrayInput` via:
//
//	DetectorRecipeDetectorRuleCandidateResponderRuleArray{ DetectorRecipeDetectorRuleCandidateResponderRuleArgs{...} }
type DetectorRecipeDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput
	ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput
}

type DetectorRecipeDetectorRuleCandidateResponderRuleArray []DetectorRecipeDetectorRuleCandidateResponderRuleInput

func (DetectorRecipeDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleCandidateResponderRuleArray) ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleCandidateResponderRuleArray) ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput)
}

type DetectorRecipeDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleCandidateResponderRuleOutput) ToDetectorRecipeDetectorRuleCandidateResponderRuleOutput() DetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o DetectorRecipeDetectorRuleCandidateResponderRuleOutput) ToDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return o
}

// (Updatable) Detector recipe display name.
func (o DetectorRecipeDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleCandidateResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Ocid for detector recipe
func (o DetectorRecipeDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleCandidateResponderRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Preferred state
func (o DetectorRecipeDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleCandidateResponderRule) *bool { return v.IsPreferred }).(pulumi.BoolPtrOutput)
}

type DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ToDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) DetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeDetectorRuleCandidateResponderRule {
		return vs[0].([]DetectorRecipeDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(DetectorRecipeDetectorRuleCandidateResponderRuleOutput)
}

type DetectorRecipeDetectorRuleDetails struct {
	// (Updatable) Base condition object
	Condition *string `pulumi:"condition"`
	// (Updatable) Configuration details
	Configurations []DetectorRecipeDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// (Updatable) The id of the attached DataSource.
	DataSourceId *string `pulumi:"dataSourceId"`
	// (Updatable) Description for DetectorRecipeDetectorRule.
	Description *string `pulumi:"description"`
	// (Updatable) Data Source entities mapping for a Detector Rule
	EntitiesMappings []DetectorRecipeDetectorRuleDetailsEntitiesMapping `pulumi:"entitiesMappings"`
	// configuration allowed or not
	IsConfigurationAllowed *bool `pulumi:"isConfigurationAllowed"`
	// (Updatable) Enables the control
	IsEnabled bool `pulumi:"isEnabled"`
	// (Updatable) user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// (Updatable) Recommendation for DetectorRecipeDetectorRule
	Recommendation *string `pulumi:"recommendation"`
	// (Updatable) The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// DetectorRecipeDetectorRuleDetailsInput is an input type that accepts DetectorRecipeDetectorRuleDetailsArgs and DetectorRecipeDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsInput` via:
//
//	DetectorRecipeDetectorRuleDetailsArgs{...}
type DetectorRecipeDetectorRuleDetailsInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsOutput() DetectorRecipeDetectorRuleDetailsOutput
	ToDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsOutput
}

type DetectorRecipeDetectorRuleDetailsArgs struct {
	// (Updatable) Base condition object
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// (Updatable) Configuration details
	Configurations DetectorRecipeDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// (Updatable) The id of the attached DataSource.
	DataSourceId pulumi.StringPtrInput `pulumi:"dataSourceId"`
	// (Updatable) Description for DetectorRecipeDetectorRule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Data Source entities mapping for a Detector Rule
	EntitiesMappings DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolPtrInput `pulumi:"isConfigurationAllowed"`
	// (Updatable) Enables the control
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// (Updatable) user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// (Updatable) Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringPtrInput `pulumi:"recommendation"`
	// (Updatable) The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (DetectorRecipeDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsArgs) ToDetectorRecipeDetectorRuleDetailsOutput() DetectorRecipeDetectorRuleDetailsOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsArgs) ToDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsOutput)
}

type DetectorRecipeDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsOutput) ToDetectorRecipeDetectorRuleDetailsOutput() DetectorRecipeDetectorRuleDetailsOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsOutput) ToDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsOutput {
	return o
}

// (Updatable) Base condition object
func (o DetectorRecipeDetectorRuleDetailsOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// (Updatable) Configuration details
func (o DetectorRecipeDetectorRuleDetailsOutput) Configurations() DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) []DetectorRecipeDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

// (Updatable) The id of the attached DataSource.
func (o DetectorRecipeDetectorRuleDetailsOutput) DataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) *string { return v.DataSourceId }).(pulumi.StringPtrOutput)
}

// (Updatable) Description for DetectorRecipeDetectorRule.
func (o DetectorRecipeDetectorRuleDetailsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Data Source entities mapping for a Detector Rule
func (o DetectorRecipeDetectorRuleDetailsOutput) EntitiesMappings() DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) []DetectorRecipeDetectorRuleDetailsEntitiesMapping {
		return v.EntitiesMappings
	}).(DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput)
}

// configuration allowed or not
func (o DetectorRecipeDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) *bool { return v.IsConfigurationAllowed }).(pulumi.BoolPtrOutput)
}

// (Updatable) Enables the control
func (o DetectorRecipeDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// (Updatable) user defined labels for a detector rule
func (o DetectorRecipeDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// (Updatable) Recommendation for DetectorRecipeDetectorRule
func (o DetectorRecipeDetectorRuleDetailsOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) *string { return v.Recommendation }).(pulumi.StringPtrOutput)
}

// (Updatable) The Risk Level
func (o DetectorRecipeDetectorRuleDetailsOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetails) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type DetectorRecipeDetectorRuleDetailsConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// (Updatable) configuration data type
	DataType *string `pulumi:"dataType"`
	// (Updatable) configuration name
	Name string `pulumi:"name"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
	// (Updatable) List of configuration values
	Values []DetectorRecipeDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// DetectorRecipeDetectorRuleDetailsConfigurationInput is an input type that accepts DetectorRecipeDetectorRuleDetailsConfigurationArgs and DetectorRecipeDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsConfigurationInput` via:
//
//	DetectorRecipeDetectorRuleDetailsConfigurationArgs{...}
type DetectorRecipeDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsConfigurationOutput() DetectorRecipeDetectorRuleDetailsConfigurationOutput
	ToDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsConfigurationOutput
}

type DetectorRecipeDetectorRuleDetailsConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// (Updatable) configuration data type
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// (Updatable) configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
	// (Updatable) List of configuration values
	Values DetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (DetectorRecipeDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationArgs) ToDetectorRecipeDetectorRuleDetailsConfigurationOutput() DetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationArgs) ToDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

// DetectorRecipeDetectorRuleDetailsConfigurationArrayInput is an input type that accepts DetectorRecipeDetectorRuleDetailsConfigurationArray and DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsConfigurationArrayInput` via:
//
//	DetectorRecipeDetectorRuleDetailsConfigurationArray{ DetectorRecipeDetectorRuleDetailsConfigurationArgs{...} }
type DetectorRecipeDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
	ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
}

type DetectorRecipeDetectorRuleDetailsConfigurationArray []DetectorRecipeDetectorRuleDetailsConfigurationInput

func (DetectorRecipeDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationArray) ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationArray) ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

type DetectorRecipeDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationOutput() DetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// (Updatable) configuration data type
func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration name
func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) configuration value
func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// (Updatable) List of configuration values
func (o DetectorRecipeDetectorRuleDetailsConfigurationOutput) Values() DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfiguration) []DetectorRecipeDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) DetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeDetectorRuleDetailsConfiguration {
		return vs[0].([]DetectorRecipeDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(DetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

type DetectorRecipeDetectorRuleDetailsConfigurationValue struct {
	// (Updatable) configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// (Updatable) type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value string `pulumi:"value"`
}

// DetectorRecipeDetectorRuleDetailsConfigurationValueInput is an input type that accepts DetectorRecipeDetectorRuleDetailsConfigurationValueArgs and DetectorRecipeDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsConfigurationValueInput` via:
//
//	DetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...}
type DetectorRecipeDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueOutput
	ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueOutput
}

type DetectorRecipeDetectorRuleDetailsConfigurationValueArgs struct {
	// (Updatable) configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// (Updatable) type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (DetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

// DetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts DetectorRecipeDetectorRuleDetailsConfigurationValueArray and DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//	DetectorRecipeDetectorRuleDetailsConfigurationValueArray{ DetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...} }
type DetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
	ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
}

type DetectorRecipeDetectorRuleDetailsConfigurationValueArray []DetectorRecipeDetectorRuleDetailsConfigurationValueInput

func (DetectorRecipeDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type DetectorRecipeDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// (Updatable) configuration list item type, either CUSTOM or MANAGED
func (o DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfigurationValue) string { return v.ListType }).(pulumi.StringOutput)
}

// (Updatable) type of the managed list
func (o DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfigurationValue) string { return v.ManagedListType }).(pulumi.StringOutput)
}

// (Updatable) configuration value
func (o DetectorRecipeDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsConfigurationValue) string { return v.Value }).(pulumi.StringOutput)
}

type DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) DetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeDetectorRuleDetailsConfigurationValue {
		return vs[0].([]DetectorRecipeDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(DetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

type DetectorRecipeDetectorRuleDetailsEntitiesMapping struct {
	// (Updatable) Detector recipe display name.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Possible type of entity
	EntityType *string `pulumi:"entityType"`
	// (Updatable) The entity value mapped to a data source query
	QueryField string `pulumi:"queryField"`
}

// DetectorRecipeDetectorRuleDetailsEntitiesMappingInput is an input type that accepts DetectorRecipeDetectorRuleDetailsEntitiesMappingArgs and DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsEntitiesMappingInput` via:
//
//	DetectorRecipeDetectorRuleDetailsEntitiesMappingArgs{...}
type DetectorRecipeDetectorRuleDetailsEntitiesMappingInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsEntitiesMappingOutput() DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput
	ToDetectorRecipeDetectorRuleDetailsEntitiesMappingOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput
}

type DetectorRecipeDetectorRuleDetailsEntitiesMappingArgs struct {
	// (Updatable) Detector recipe display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (Updatable) Possible type of entity
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	// (Updatable) The entity value mapped to a data source query
	QueryField pulumi.StringInput `pulumi:"queryField"`
}

func (DetectorRecipeDetectorRuleDetailsEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsEntitiesMapping)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsEntitiesMappingArgs) ToDetectorRecipeDetectorRuleDetailsEntitiesMappingOutput() DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsEntitiesMappingOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsEntitiesMappingArgs) ToDetectorRecipeDetectorRuleDetailsEntitiesMappingOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput)
}

// DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayInput is an input type that accepts DetectorRecipeDetectorRuleDetailsEntitiesMappingArray and DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayInput` via:
//
//	DetectorRecipeDetectorRuleDetailsEntitiesMappingArray{ DetectorRecipeDetectorRuleDetailsEntitiesMappingArgs{...} }
type DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput() DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput
	ToDetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutputWithContext(context.Context) DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput
}

type DetectorRecipeDetectorRuleDetailsEntitiesMappingArray []DetectorRecipeDetectorRuleDetailsEntitiesMappingInput

func (DetectorRecipeDetectorRuleDetailsEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleDetailsEntitiesMapping)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleDetailsEntitiesMappingArray) ToDetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput() DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput {
	return i.ToDetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleDetailsEntitiesMappingArray) ToDetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput)
}

type DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsEntitiesMapping)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput) ToDetectorRecipeDetectorRuleDetailsEntitiesMappingOutput() DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput) ToDetectorRecipeDetectorRuleDetailsEntitiesMappingOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput {
	return o
}

// (Updatable) Detector recipe display name.
func (o DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsEntitiesMapping) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// (Updatable) Possible type of entity
func (o DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsEntitiesMapping) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// (Updatable) The entity value mapped to a data source query
func (o DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput) QueryField() pulumi.StringOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleDetailsEntitiesMapping) string { return v.QueryField }).(pulumi.StringOutput)
}

type DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleDetailsEntitiesMapping)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput) ToDetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput() DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput) ToDetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput) Index(i pulumi.IntInput) DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeDetectorRuleDetailsEntitiesMapping {
		return vs[0].([]DetectorRecipeDetectorRuleDetailsEntitiesMapping)[vs[1].(int)]
	}).(DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput)
}

type DetectorRecipeDetectorRuleEntitiesMapping struct {
	// (Updatable) Detector recipe display name.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Possible type of entity
	EntityType *string `pulumi:"entityType"`
	// (Updatable) The entity value mapped to a data source query
	QueryField *string `pulumi:"queryField"`
}

// DetectorRecipeDetectorRuleEntitiesMappingInput is an input type that accepts DetectorRecipeDetectorRuleEntitiesMappingArgs and DetectorRecipeDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleEntitiesMappingInput` via:
//
//	DetectorRecipeDetectorRuleEntitiesMappingArgs{...}
type DetectorRecipeDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleEntitiesMappingOutput() DetectorRecipeDetectorRuleEntitiesMappingOutput
	ToDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(context.Context) DetectorRecipeDetectorRuleEntitiesMappingOutput
}

type DetectorRecipeDetectorRuleEntitiesMappingArgs struct {
	// (Updatable) Detector recipe display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (Updatable) Possible type of entity
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	// (Updatable) The entity value mapped to a data source query
	QueryField pulumi.StringPtrInput `pulumi:"queryField"`
}

func (DetectorRecipeDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleEntitiesMappingArgs) ToDetectorRecipeDetectorRuleEntitiesMappingOutput() DetectorRecipeDetectorRuleEntitiesMappingOutput {
	return i.ToDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleEntitiesMappingArgs) ToDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleEntitiesMappingOutput)
}

// DetectorRecipeDetectorRuleEntitiesMappingArrayInput is an input type that accepts DetectorRecipeDetectorRuleEntitiesMappingArray and DetectorRecipeDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeDetectorRuleEntitiesMappingArrayInput` via:
//
//	DetectorRecipeDetectorRuleEntitiesMappingArray{ DetectorRecipeDetectorRuleEntitiesMappingArgs{...} }
type DetectorRecipeDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() DetectorRecipeDetectorRuleEntitiesMappingArrayOutput
	ToDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) DetectorRecipeDetectorRuleEntitiesMappingArrayOutput
}

type DetectorRecipeDetectorRuleEntitiesMappingArray []DetectorRecipeDetectorRuleEntitiesMappingInput

func (DetectorRecipeDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i DetectorRecipeDetectorRuleEntitiesMappingArray) ToDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() DetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return i.ToDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeDetectorRuleEntitiesMappingArray) ToDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeDetectorRuleEntitiesMappingArrayOutput)
}

type DetectorRecipeDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleEntitiesMappingOutput) ToDetectorRecipeDetectorRuleEntitiesMappingOutput() DetectorRecipeDetectorRuleEntitiesMappingOutput {
	return o
}

func (o DetectorRecipeDetectorRuleEntitiesMappingOutput) ToDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleEntitiesMappingOutput {
	return o
}

// (Updatable) Detector recipe display name.
func (o DetectorRecipeDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleEntitiesMapping) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// (Updatable) Possible type of entity
func (o DetectorRecipeDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleEntitiesMapping) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// (Updatable) The entity value mapped to a data source query
func (o DetectorRecipeDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeDetectorRuleEntitiesMapping) *string { return v.QueryField }).(pulumi.StringPtrOutput)
}

type DetectorRecipeDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o DetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ToDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() DetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ToDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) DetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o DetectorRecipeDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) DetectorRecipeDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeDetectorRuleEntitiesMapping {
		return vs[0].([]DetectorRecipeDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(DetectorRecipeDetectorRuleEntitiesMappingOutput)
}

type DetectorRecipeEffectiveDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []DetectorRecipeEffectiveDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// (Updatable) The id of the attached DataSource.
	DataSourceId *string `pulumi:"dataSourceId"`
	// (Updatable) Description for DetectorRecipeDetectorRule.
	Description *string `pulumi:"description"`
	// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
	Details []DetectorRecipeEffectiveDetectorRuleDetail `pulumi:"details"`
	// detector for the rule
	Detector *string `pulumi:"detector"`
	// (Updatable) DetectorRecipeRule Identifier
	DetectorRuleId *string `pulumi:"detectorRuleId"`
	// (Updatable) Detector recipe display name.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Data Source entities mapping for a Detector Rule
	EntitiesMappings []DetectorRecipeEffectiveDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// (Updatable) Recommendation for DetectorRecipeDetectorRule
	Recommendation *string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType *string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType *string `pulumi:"serviceType"`
	// The current state of the resource.
	State *string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// DetectorRecipeEffectiveDetectorRuleInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleArgs and DetectorRecipeEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleArgs{...}
type DetectorRecipeEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleOutput() DetectorRecipeEffectiveDetectorRuleOutput
	ToDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleOutput
}

type DetectorRecipeEffectiveDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// (Updatable) The id of the attached DataSource.
	DataSourceId pulumi.StringPtrInput `pulumi:"dataSourceId"`
	// (Updatable) Description for DetectorRecipeDetectorRule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
	Details DetectorRecipeEffectiveDetectorRuleDetailArrayInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringPtrInput `pulumi:"detector"`
	// (Updatable) DetectorRecipeRule Identifier
	DetectorRuleId pulumi.StringPtrInput `pulumi:"detectorRuleId"`
	// (Updatable) Detector recipe display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (Updatable) Data Source entities mapping for a Detector Rule
	EntitiesMappings DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// (Updatable) Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringPtrInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
	// The current state of the resource.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (DetectorRecipeEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleArgs) ToDetectorRecipeEffectiveDetectorRuleOutput() DetectorRecipeEffectiveDetectorRuleOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleArgs) ToDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleOutput)
}

// DetectorRecipeEffectiveDetectorRuleArrayInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleArray and DetectorRecipeEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleArrayInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleArray{ DetectorRecipeEffectiveDetectorRuleArgs{...} }
type DetectorRecipeEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleArrayOutput
	ToDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleArrayOutput
}

type DetectorRecipeEffectiveDetectorRuleArray []DetectorRecipeEffectiveDetectorRuleInput

func (DetectorRecipeEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleArray) ToDetectorRecipeEffectiveDetectorRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleArrayOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleArray) ToDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleOutput) ToDetectorRecipeEffectiveDetectorRuleOutput() DetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleOutput) ToDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o DetectorRecipeEffectiveDetectorRuleOutput) CandidateResponderRules() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) []DetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

// (Updatable) The id of the attached DataSource.
func (o DetectorRecipeEffectiveDetectorRuleOutput) DataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.DataSourceId }).(pulumi.StringPtrOutput)
}

// (Updatable) Description for DetectorRecipeDetectorRule.
func (o DetectorRecipeEffectiveDetectorRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of a Detector Rule to be overriden in Detector Recipe
func (o DetectorRecipeEffectiveDetectorRuleOutput) Details() DetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) []DetectorRecipeEffectiveDetectorRuleDetail {
		return v.Details
	}).(DetectorRecipeEffectiveDetectorRuleDetailArrayOutput)
}

// detector for the rule
func (o DetectorRecipeEffectiveDetectorRuleOutput) Detector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.Detector }).(pulumi.StringPtrOutput)
}

// (Updatable) DetectorRecipeRule Identifier
func (o DetectorRecipeEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.DetectorRuleId }).(pulumi.StringPtrOutput)
}

// (Updatable) Detector recipe display name.
func (o DetectorRecipeEffectiveDetectorRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// (Updatable) Data Source entities mapping for a Detector Rule
func (o DetectorRecipeEffectiveDetectorRuleOutput) EntitiesMappings() DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) []DetectorRecipeEffectiveDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o DetectorRecipeEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of cloudguard managed list types related to this rule
func (o DetectorRecipeEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// (Updatable) Recommendation for DetectorRecipeDetectorRule
func (o DetectorRecipeEffectiveDetectorRuleOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.Recommendation }).(pulumi.StringPtrOutput)
}

// resource type of the configuration to which the rule is applied
func (o DetectorRecipeEffectiveDetectorRuleOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// service type of the configuration to which the rule is applied
func (o DetectorRecipeEffectiveDetectorRuleOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// The current state of the resource.
func (o DetectorRecipeEffectiveDetectorRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o DetectorRecipeEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o DetectorRecipeEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type DetectorRecipeEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleArrayOutput) ToDetectorRecipeEffectiveDetectorRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleArrayOutput) ToDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) DetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeEffectiveDetectorRule {
		return vs[0].([]DetectorRecipeEffectiveDetectorRule)[vs[1].(int)]
	}).(DetectorRecipeEffectiveDetectorRuleOutput)
}

type DetectorRecipeEffectiveDetectorRuleCandidateResponderRule struct {
	// (Updatable) Detector recipe display name.
	DisplayName *string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id *string `pulumi:"id"`
	// Preferred state
	IsPreferred *bool `pulumi:"isPreferred"`
}

// DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs and DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs{...}
type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput
	ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput
}

type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs struct {
	// (Updatable) Detector recipe display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolPtrInput `pulumi:"isPreferred"`
}

func (DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput)
}

// DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray and DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray{ DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs{...} }
type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput
	ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput
}

type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray []DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput

func (DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

// (Updatable) Detector recipe display name.
func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleCandidateResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Ocid for detector recipe
func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleCandidateResponderRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Preferred state
func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleCandidateResponderRule) *bool { return v.IsPreferred }).(pulumi.BoolPtrOutput)
}

type DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
		return vs[0].([]DetectorRecipeEffectiveDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetail struct {
	// (Updatable) Base condition object
	Condition *string `pulumi:"condition"`
	// (Updatable) Configuration details
	Configurations []DetectorRecipeEffectiveDetectorRuleDetailConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed *bool `pulumi:"isConfigurationAllowed"`
	// (Updatable) Enables the control
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// (Updatable) The Risk Level
	RiskLevel *string `pulumi:"riskLevel"`
}

// DetectorRecipeEffectiveDetectorRuleDetailInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailArgs and DetectorRecipeEffectiveDetectorRuleDetailOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleDetailArgs{...}
type DetectorRecipeEffectiveDetectorRuleDetailInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailOutput() DetectorRecipeEffectiveDetectorRuleDetailOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailOutput
}

type DetectorRecipeEffectiveDetectorRuleDetailArgs struct {
	// (Updatable) Base condition object
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// (Updatable) Configuration details
	Configurations DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolPtrInput `pulumi:"isConfigurationAllowed"`
	// (Updatable) Enables the control
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// (Updatable) user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// (Updatable) The Risk Level
	RiskLevel pulumi.StringPtrInput `pulumi:"riskLevel"`
}

func (DetectorRecipeEffectiveDetectorRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleDetailArgs) ToDetectorRecipeEffectiveDetectorRuleDetailOutput() DetectorRecipeEffectiveDetectorRuleDetailOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailArgs) ToDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailOutput)
}

// DetectorRecipeEffectiveDetectorRuleDetailArrayInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailArray and DetectorRecipeEffectiveDetectorRuleDetailArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailArrayInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleDetailArray{ DetectorRecipeEffectiveDetectorRuleDetailArgs{...} }
type DetectorRecipeEffectiveDetectorRuleDetailArrayInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailArrayOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailArrayOutput
}

type DetectorRecipeEffectiveDetectorRuleDetailArray []DetectorRecipeEffectiveDetectorRuleDetailInput

func (DetectorRecipeEffectiveDetectorRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleDetailArray) ToDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailArray) ToDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailOutput) ToDetectorRecipeEffectiveDetectorRuleDetailOutput() DetectorRecipeEffectiveDetectorRuleDetailOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailOutput) ToDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailOutput {
	return o
}

// (Updatable) Base condition object
func (o DetectorRecipeEffectiveDetectorRuleDetailOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetail) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// (Updatable) Configuration details
func (o DetectorRecipeEffectiveDetectorRuleDetailOutput) Configurations() DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetail) []DetectorRecipeEffectiveDetectorRuleDetailConfiguration {
		return v.Configurations
	}).(DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

// configuration allowed or not
func (o DetectorRecipeEffectiveDetectorRuleDetailOutput) IsConfigurationAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetail) *bool { return v.IsConfigurationAllowed }).(pulumi.BoolPtrOutput)
}

// (Updatable) Enables the control
func (o DetectorRecipeEffectiveDetectorRuleDetailOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetail) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) user defined labels for a detector rule
func (o DetectorRecipeEffectiveDetectorRuleDetailOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetail) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// (Updatable) The Risk Level
func (o DetectorRecipeEffectiveDetectorRuleDetailOutput) RiskLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetail) *string { return v.RiskLevel }).(pulumi.StringPtrOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ToDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ToDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailArrayOutput) Index(i pulumi.IntInput) DetectorRecipeEffectiveDetectorRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeEffectiveDetectorRuleDetail {
		return vs[0].([]DetectorRecipeEffectiveDetectorRuleDetail)[vs[1].(int)]
	}).(DetectorRecipeEffectiveDetectorRuleDetailOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// (Updatable) configuration data type
	DataType *string `pulumi:"dataType"`
	// (Updatable) configuration name
	Name *string `pulumi:"name"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
	// (Updatable) List of configuration values
	Values []DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue `pulumi:"values"`
}

// DetectorRecipeEffectiveDetectorRuleDetailConfigurationInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs and DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailConfigurationInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{...}
type DetectorRecipeEffectiveDetectorRuleDetailConfigurationInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput
}

type DetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// (Updatable) configuration data type
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// (Updatable) configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
	// (Updatable) List of configuration values
	Values DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput `pulumi:"values"`
}

func (DetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput)
}

// DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailConfigurationArray and DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleDetailConfigurationArray{ DetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{...} }
type DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput
}

type DetectorRecipeEffectiveDetectorRuleDetailConfigurationArray []DetectorRecipeEffectiveDetectorRuleDetailConfigurationInput

func (DetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailConfiguration) *string { return v.ConfigKey }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration data type
func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailConfiguration) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration name
func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// (Updatable) List of configuration values
func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Values() DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailConfiguration) []DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
		return v.Values
	}).(DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeEffectiveDetectorRuleDetailConfiguration {
		return vs[0].([]DetectorRecipeEffectiveDetectorRuleDetailConfiguration)[vs[1].(int)]
	}).(DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue struct {
	// (Updatable) configuration list item type, either CUSTOM or MANAGED
	ListType *string `pulumi:"listType"`
	// (Updatable) type of the managed list
	ManagedListType *string `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
}

// DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs and DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{...}
type DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput
}

type DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs struct {
	// (Updatable) configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringPtrInput `pulumi:"listType"`
	// (Updatable) type of the managed list
	ManagedListType pulumi.StringPtrInput `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput)
}

// DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray and DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray{ DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{...} }
type DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput
	ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput
}

type DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray []DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput

func (DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

// (Updatable) configuration list item type, either CUSTOM or MANAGED
func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) *string { return v.ListType }).(pulumi.StringPtrOutput)
}

// (Updatable) type of the managed list
func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ManagedListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) *string { return v.ManagedListType }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) Index(i pulumi.IntInput) DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
		return vs[0].([]DetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)[vs[1].(int)]
	}).(DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput)
}

type DetectorRecipeEffectiveDetectorRuleEntitiesMapping struct {
	// (Updatable) Detector recipe display name.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Possible type of entity
	EntityType *string `pulumi:"entityType"`
	// (Updatable) The entity value mapped to a data source query
	QueryField *string `pulumi:"queryField"`
}

// DetectorRecipeEffectiveDetectorRuleEntitiesMappingInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs and DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleEntitiesMappingInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{...}
type DetectorRecipeEffectiveDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput
	ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput
}

type DetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs struct {
	// (Updatable) Detector recipe display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (Updatable) Possible type of entity
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	// (Updatable) The entity value mapped to a data source query
	QueryField pulumi.StringPtrInput `pulumi:"queryField"`
}

func (DetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput)
}

// DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput is an input type that accepts DetectorRecipeEffectiveDetectorRuleEntitiesMappingArray and DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput` via:
//
//	DetectorRecipeEffectiveDetectorRuleEntitiesMappingArray{ DetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{...} }
type DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput
	ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput
}

type DetectorRecipeEffectiveDetectorRuleEntitiesMappingArray []DetectorRecipeEffectiveDetectorRuleEntitiesMappingInput

func (DetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i DetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return i.ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i DetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

type DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

// (Updatable) Detector recipe display name.
func (o DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleEntitiesMapping) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// (Updatable) Possible type of entity
func (o DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleEntitiesMapping) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// (Updatable) The entity value mapped to a data source query
func (o DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetectorRecipeEffectiveDetectorRuleEntitiesMapping) *string { return v.QueryField }).(pulumi.StringPtrOutput)
}

type DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ToDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetectorRecipeEffectiveDetectorRuleEntitiesMapping {
		return vs[0].([]DetectorRecipeEffectiveDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput)
}

type ResponderRecipeEffectiveResponderRule struct {
	// (Updatable) Compartment Identifier
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Responder recipe description.
	Description *string `pulumi:"description"`
	// (Updatable) Details of UpdateResponderRuleDetails.
	Details []ResponderRecipeEffectiveResponderRuleDetail `pulumi:"details"`
	// (Updatable) Responder recipe display name.
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// (Updatable) ResponderRecipeRule Identifier
	ResponderRuleId *string `pulumi:"responderRuleId"`
	// The current state of the Example.
	State *string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Type of Responder
	Type *string `pulumi:"type"`
}

// ResponderRecipeEffectiveResponderRuleInput is an input type that accepts ResponderRecipeEffectiveResponderRuleArgs and ResponderRecipeEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleInput` via:
//
//	ResponderRecipeEffectiveResponderRuleArgs{...}
type ResponderRecipeEffectiveResponderRuleInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleOutput() ResponderRecipeEffectiveResponderRuleOutput
	ToResponderRecipeEffectiveResponderRuleOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleOutput
}

type ResponderRecipeEffectiveResponderRuleArgs struct {
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) Responder recipe description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of UpdateResponderRuleDetails.
	Details ResponderRecipeEffectiveResponderRuleDetailArrayInput `pulumi:"details"`
	// (Updatable) Responder recipe display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// (Updatable) ResponderRecipeRule Identifier
	ResponderRuleId pulumi.StringPtrInput `pulumi:"responderRuleId"`
	// The current state of the Example.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ResponderRecipeEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i ResponderRecipeEffectiveResponderRuleArgs) ToResponderRecipeEffectiveResponderRuleOutput() ResponderRecipeEffectiveResponderRuleOutput {
	return i.ToResponderRecipeEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleArgs) ToResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleOutput)
}

// ResponderRecipeEffectiveResponderRuleArrayInput is an input type that accepts ResponderRecipeEffectiveResponderRuleArray and ResponderRecipeEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleArrayInput` via:
//
//	ResponderRecipeEffectiveResponderRuleArray{ ResponderRecipeEffectiveResponderRuleArgs{...} }
type ResponderRecipeEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleArrayOutput() ResponderRecipeEffectiveResponderRuleArrayOutput
	ToResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleArrayOutput
}

type ResponderRecipeEffectiveResponderRuleArray []ResponderRecipeEffectiveResponderRuleInput

func (ResponderRecipeEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i ResponderRecipeEffectiveResponderRuleArray) ToResponderRecipeEffectiveResponderRuleArrayOutput() ResponderRecipeEffectiveResponderRuleArrayOutput {
	return i.ToResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleArray) ToResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleArrayOutput)
}

type ResponderRecipeEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleOutput) ToResponderRecipeEffectiveResponderRuleOutput() ResponderRecipeEffectiveResponderRuleOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleOutput) ToResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleOutput {
	return o
}

// (Updatable) Compartment Identifier
func (o ResponderRecipeEffectiveResponderRuleOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// (Updatable) Responder recipe description.
func (o ResponderRecipeEffectiveResponderRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of UpdateResponderRuleDetails.
func (o ResponderRecipeEffectiveResponderRuleOutput) Details() ResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) []ResponderRecipeEffectiveResponderRuleDetail {
		return v.Details
	}).(ResponderRecipeEffectiveResponderRuleDetailArrayOutput)
}

// (Updatable) Responder recipe display name.
func (o ResponderRecipeEffectiveResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o ResponderRecipeEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of Policy
func (o ResponderRecipeEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// (Updatable) ResponderRecipeRule Identifier
func (o ResponderRecipeEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.ResponderRuleId }).(pulumi.StringPtrOutput)
}

// The current state of the Example.
func (o ResponderRecipeEffectiveResponderRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Supported Execution Modes
func (o ResponderRecipeEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o ResponderRecipeEffectiveResponderRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o ResponderRecipeEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// Type of Responder
func (o ResponderRecipeEffectiveResponderRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResponderRecipeEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleArrayOutput) ToResponderRecipeEffectiveResponderRuleArrayOutput() ResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleArrayOutput) ToResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) ResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponderRecipeEffectiveResponderRule {
		return vs[0].([]ResponderRecipeEffectiveResponderRule)[vs[1].(int)]
	}).(ResponderRecipeEffectiveResponderRuleOutput)
}

type ResponderRecipeEffectiveResponderRuleDetail struct {
	// Base condition object
	Condition *string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []ResponderRecipeEffectiveResponderRuleDetailConfiguration `pulumi:"configurations"`
	// (Updatable) Identifies state for ResponderRule
	IsEnabled *bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode *string `pulumi:"mode"`
}

// ResponderRecipeEffectiveResponderRuleDetailInput is an input type that accepts ResponderRecipeEffectiveResponderRuleDetailArgs and ResponderRecipeEffectiveResponderRuleDetailOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleDetailInput` via:
//
//	ResponderRecipeEffectiveResponderRuleDetailArgs{...}
type ResponderRecipeEffectiveResponderRuleDetailInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleDetailOutput() ResponderRecipeEffectiveResponderRuleDetailOutput
	ToResponderRecipeEffectiveResponderRuleDetailOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleDetailOutput
}

type ResponderRecipeEffectiveResponderRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// (Updatable) Identifies state for ResponderRule
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ResponderRecipeEffectiveResponderRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i ResponderRecipeEffectiveResponderRuleDetailArgs) ToResponderRecipeEffectiveResponderRuleDetailOutput() ResponderRecipeEffectiveResponderRuleDetailOutput {
	return i.ToResponderRecipeEffectiveResponderRuleDetailOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleDetailArgs) ToResponderRecipeEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleDetailOutput)
}

// ResponderRecipeEffectiveResponderRuleDetailArrayInput is an input type that accepts ResponderRecipeEffectiveResponderRuleDetailArray and ResponderRecipeEffectiveResponderRuleDetailArrayOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleDetailArrayInput` via:
//
//	ResponderRecipeEffectiveResponderRuleDetailArray{ ResponderRecipeEffectiveResponderRuleDetailArgs{...} }
type ResponderRecipeEffectiveResponderRuleDetailArrayInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleDetailArrayOutput() ResponderRecipeEffectiveResponderRuleDetailArrayOutput
	ToResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleDetailArrayOutput
}

type ResponderRecipeEffectiveResponderRuleDetailArray []ResponderRecipeEffectiveResponderRuleDetailInput

func (ResponderRecipeEffectiveResponderRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i ResponderRecipeEffectiveResponderRuleDetailArray) ToResponderRecipeEffectiveResponderRuleDetailArrayOutput() ResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return i.ToResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleDetailArray) ToResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleDetailArrayOutput)
}

type ResponderRecipeEffectiveResponderRuleDetailOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleDetailOutput) ToResponderRecipeEffectiveResponderRuleDetailOutput() ResponderRecipeEffectiveResponderRuleDetailOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailOutput) ToResponderRecipeEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailOutput {
	return o
}

// Base condition object
func (o ResponderRecipeEffectiveResponderRuleDetailOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetail) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// ResponderRule configurations
func (o ResponderRecipeEffectiveResponderRuleDetailOutput) Configurations() ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetail) []ResponderRecipeEffectiveResponderRuleDetailConfiguration {
		return v.Configurations
	}).(ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput)
}

// (Updatable) Identifies state for ResponderRule
func (o ResponderRecipeEffectiveResponderRuleDetailOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetail) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// Execution Mode for ResponderRule
func (o ResponderRecipeEffectiveResponderRuleDetailOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetail) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ResponderRecipeEffectiveResponderRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleDetailArrayOutput) ToResponderRecipeEffectiveResponderRuleDetailArrayOutput() ResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailArrayOutput) ToResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailArrayOutput) Index(i pulumi.IntInput) ResponderRecipeEffectiveResponderRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponderRecipeEffectiveResponderRuleDetail {
		return vs[0].([]ResponderRecipeEffectiveResponderRuleDetail)[vs[1].(int)]
	}).(ResponderRecipeEffectiveResponderRuleDetailOutput)
}

type ResponderRecipeEffectiveResponderRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// configuration name
	Name *string `pulumi:"name"`
	// configuration value
	Value *string `pulumi:"value"`
}

// ResponderRecipeEffectiveResponderRuleDetailConfigurationInput is an input type that accepts ResponderRecipeEffectiveResponderRuleDetailConfigurationArgs and ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleDetailConfigurationInput` via:
//
//	ResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{...}
type ResponderRecipeEffectiveResponderRuleDetailConfigurationInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput
	ToResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput
}

type ResponderRecipeEffectiveResponderRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i ResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ToResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return i.ToResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ToResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput)
}

// ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput is an input type that accepts ResponderRecipeEffectiveResponderRuleDetailConfigurationArray and ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput` via:
//
//	ResponderRecipeEffectiveResponderRuleDetailConfigurationArray{ ResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{...} }
type ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput
	ToResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Context) ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput
}

type ResponderRecipeEffectiveResponderRuleDetailConfigurationArray []ResponderRecipeEffectiveResponderRuleDetailConfigurationInput

func (ResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i ResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ToResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return i.ToResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i ResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ToResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput)
}

type ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ToResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ToResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetailConfiguration) *string { return v.ConfigKey }).(pulumi.StringPtrOutput)
}

// configuration name
func (o ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetailConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// configuration value
func (o ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeEffectiveResponderRuleDetailConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ToResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ToResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponderRecipeEffectiveResponderRuleDetailConfiguration {
		return vs[0].([]ResponderRecipeEffectiveResponderRuleDetailConfiguration)[vs[1].(int)]
	}).(ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput)
}

type ResponderRecipeResponderRule struct {
	// (Updatable) Compartment Identifier
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Responder recipe description.
	Description *string `pulumi:"description"`
	// (Updatable) Details of UpdateResponderRuleDetails.
	Details ResponderRecipeResponderRuleDetails `pulumi:"details"`
	// (Updatable) Responder recipe display name.
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// (Updatable) ResponderRecipeRule Identifier
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The current state of the Example.
	State *string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Type of Responder
	Type *string `pulumi:"type"`
}

// ResponderRecipeResponderRuleInput is an input type that accepts ResponderRecipeResponderRuleArgs and ResponderRecipeResponderRuleOutput values.
// You can construct a concrete instance of `ResponderRecipeResponderRuleInput` via:
//
//	ResponderRecipeResponderRuleArgs{...}
type ResponderRecipeResponderRuleInput interface {
	pulumi.Input

	ToResponderRecipeResponderRuleOutput() ResponderRecipeResponderRuleOutput
	ToResponderRecipeResponderRuleOutputWithContext(context.Context) ResponderRecipeResponderRuleOutput
}

type ResponderRecipeResponderRuleArgs struct {
	// (Updatable) Compartment Identifier
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) Responder recipe description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of UpdateResponderRuleDetails.
	Details ResponderRecipeResponderRuleDetailsInput `pulumi:"details"`
	// (Updatable) Responder recipe display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// (Updatable) ResponderRecipeRule Identifier
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The current state of the Example.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ResponderRecipeResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRule)(nil)).Elem()
}

func (i ResponderRecipeResponderRuleArgs) ToResponderRecipeResponderRuleOutput() ResponderRecipeResponderRuleOutput {
	return i.ToResponderRecipeResponderRuleOutputWithContext(context.Background())
}

func (i ResponderRecipeResponderRuleArgs) ToResponderRecipeResponderRuleOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeResponderRuleOutput)
}

// ResponderRecipeResponderRuleArrayInput is an input type that accepts ResponderRecipeResponderRuleArray and ResponderRecipeResponderRuleArrayOutput values.
// You can construct a concrete instance of `ResponderRecipeResponderRuleArrayInput` via:
//
//	ResponderRecipeResponderRuleArray{ ResponderRecipeResponderRuleArgs{...} }
type ResponderRecipeResponderRuleArrayInput interface {
	pulumi.Input

	ToResponderRecipeResponderRuleArrayOutput() ResponderRecipeResponderRuleArrayOutput
	ToResponderRecipeResponderRuleArrayOutputWithContext(context.Context) ResponderRecipeResponderRuleArrayOutput
}

type ResponderRecipeResponderRuleArray []ResponderRecipeResponderRuleInput

func (ResponderRecipeResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeResponderRule)(nil)).Elem()
}

func (i ResponderRecipeResponderRuleArray) ToResponderRecipeResponderRuleArrayOutput() ResponderRecipeResponderRuleArrayOutput {
	return i.ToResponderRecipeResponderRuleArrayOutputWithContext(context.Background())
}

func (i ResponderRecipeResponderRuleArray) ToResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeResponderRuleArrayOutput)
}

type ResponderRecipeResponderRuleOutput struct{ *pulumi.OutputState }

func (ResponderRecipeResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRule)(nil)).Elem()
}

func (o ResponderRecipeResponderRuleOutput) ToResponderRecipeResponderRuleOutput() ResponderRecipeResponderRuleOutput {
	return o
}

func (o ResponderRecipeResponderRuleOutput) ToResponderRecipeResponderRuleOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleOutput {
	return o
}

// (Updatable) Compartment Identifier
func (o ResponderRecipeResponderRuleOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// (Updatable) Responder recipe description.
func (o ResponderRecipeResponderRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of UpdateResponderRuleDetails.
func (o ResponderRecipeResponderRuleOutput) Details() ResponderRecipeResponderRuleDetailsOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) ResponderRecipeResponderRuleDetails { return v.Details }).(ResponderRecipeResponderRuleDetailsOutput)
}

// (Updatable) Responder recipe display name.
func (o ResponderRecipeResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o ResponderRecipeResponderRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of Policy
func (o ResponderRecipeResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// (Updatable) ResponderRecipeRule Identifier
func (o ResponderRecipeResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The current state of the Example.
func (o ResponderRecipeResponderRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Supported Execution Modes
func (o ResponderRecipeResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o ResponderRecipeResponderRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o ResponderRecipeResponderRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// Type of Responder
func (o ResponderRecipeResponderRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResponderRecipeResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (ResponderRecipeResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeResponderRule)(nil)).Elem()
}

func (o ResponderRecipeResponderRuleArrayOutput) ToResponderRecipeResponderRuleArrayOutput() ResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o ResponderRecipeResponderRuleArrayOutput) ToResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o ResponderRecipeResponderRuleArrayOutput) Index(i pulumi.IntInput) ResponderRecipeResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponderRecipeResponderRule {
		return vs[0].([]ResponderRecipeResponderRule)[vs[1].(int)]
	}).(ResponderRecipeResponderRuleOutput)
}

type ResponderRecipeResponderRuleDetails struct {
	// Base condition object
	Condition *string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []ResponderRecipeResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// (Updatable) Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode *string `pulumi:"mode"`
}

// ResponderRecipeResponderRuleDetailsInput is an input type that accepts ResponderRecipeResponderRuleDetailsArgs and ResponderRecipeResponderRuleDetailsOutput values.
// You can construct a concrete instance of `ResponderRecipeResponderRuleDetailsInput` via:
//
//	ResponderRecipeResponderRuleDetailsArgs{...}
type ResponderRecipeResponderRuleDetailsInput interface {
	pulumi.Input

	ToResponderRecipeResponderRuleDetailsOutput() ResponderRecipeResponderRuleDetailsOutput
	ToResponderRecipeResponderRuleDetailsOutputWithContext(context.Context) ResponderRecipeResponderRuleDetailsOutput
}

type ResponderRecipeResponderRuleDetailsArgs struct {
	// Base condition object
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations ResponderRecipeResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// (Updatable) Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ResponderRecipeResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (i ResponderRecipeResponderRuleDetailsArgs) ToResponderRecipeResponderRuleDetailsOutput() ResponderRecipeResponderRuleDetailsOutput {
	return i.ToResponderRecipeResponderRuleDetailsOutputWithContext(context.Background())
}

func (i ResponderRecipeResponderRuleDetailsArgs) ToResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeResponderRuleDetailsOutput)
}

type ResponderRecipeResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (ResponderRecipeResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (o ResponderRecipeResponderRuleDetailsOutput) ToResponderRecipeResponderRuleDetailsOutput() ResponderRecipeResponderRuleDetailsOutput {
	return o
}

func (o ResponderRecipeResponderRuleDetailsOutput) ToResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsOutput {
	return o
}

// Base condition object
func (o ResponderRecipeResponderRuleDetailsOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetails) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// ResponderRule configurations
func (o ResponderRecipeResponderRuleDetailsOutput) Configurations() ResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetails) []ResponderRecipeResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(ResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

// (Updatable) Identifies state for ResponderRule
func (o ResponderRecipeResponderRuleDetailsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetails) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o ResponderRecipeResponderRuleDetailsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetails) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ResponderRecipeResponderRuleDetailsConfiguration struct {
	// Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// configuration name
	Name *string `pulumi:"name"`
	// configuration value
	Value *string `pulumi:"value"`
}

// ResponderRecipeResponderRuleDetailsConfigurationInput is an input type that accepts ResponderRecipeResponderRuleDetailsConfigurationArgs and ResponderRecipeResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `ResponderRecipeResponderRuleDetailsConfigurationInput` via:
//
//	ResponderRecipeResponderRuleDetailsConfigurationArgs{...}
type ResponderRecipeResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToResponderRecipeResponderRuleDetailsConfigurationOutput() ResponderRecipeResponderRuleDetailsConfigurationOutput
	ToResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Context) ResponderRecipeResponderRuleDetailsConfigurationOutput
}

type ResponderRecipeResponderRuleDetailsConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ResponderRecipeResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i ResponderRecipeResponderRuleDetailsConfigurationArgs) ToResponderRecipeResponderRuleDetailsConfigurationOutput() ResponderRecipeResponderRuleDetailsConfigurationOutput {
	return i.ToResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i ResponderRecipeResponderRuleDetailsConfigurationArgs) ToResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeResponderRuleDetailsConfigurationOutput)
}

// ResponderRecipeResponderRuleDetailsConfigurationArrayInput is an input type that accepts ResponderRecipeResponderRuleDetailsConfigurationArray and ResponderRecipeResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `ResponderRecipeResponderRuleDetailsConfigurationArrayInput` via:
//
//	ResponderRecipeResponderRuleDetailsConfigurationArray{ ResponderRecipeResponderRuleDetailsConfigurationArgs{...} }
type ResponderRecipeResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToResponderRecipeResponderRuleDetailsConfigurationArrayOutput() ResponderRecipeResponderRuleDetailsConfigurationArrayOutput
	ToResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) ResponderRecipeResponderRuleDetailsConfigurationArrayOutput
}

type ResponderRecipeResponderRuleDetailsConfigurationArray []ResponderRecipeResponderRuleDetailsConfigurationInput

func (ResponderRecipeResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i ResponderRecipeResponderRuleDetailsConfigurationArray) ToResponderRecipeResponderRuleDetailsConfigurationArrayOutput() ResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return i.ToResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i ResponderRecipeResponderRuleDetailsConfigurationArray) ToResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

type ResponderRecipeResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (ResponderRecipeResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o ResponderRecipeResponderRuleDetailsConfigurationOutput) ToResponderRecipeResponderRuleDetailsConfigurationOutput() ResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

func (o ResponderRecipeResponderRuleDetailsConfigurationOutput) ToResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o ResponderRecipeResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetailsConfiguration) *string { return v.ConfigKey }).(pulumi.StringPtrOutput)
}

// configuration name
func (o ResponderRecipeResponderRuleDetailsConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetailsConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// configuration value
func (o ResponderRecipeResponderRuleDetailsConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponderRecipeResponderRuleDetailsConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ResponderRecipeResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o ResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToResponderRecipeResponderRuleDetailsConfigurationArrayOutput() ResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o ResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) ResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o ResponderRecipeResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) ResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponderRecipeResponderRuleDetailsConfiguration {
		return vs[0].([]ResponderRecipeResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(ResponderRecipeResponderRuleDetailsConfigurationOutput)
}

type TargetTargetDetail struct {
	// The name of the security zone to associate this compartment with.
	SecurityZoneDisplayName *string `pulumi:"securityZoneDisplayName"`
	// The OCID of the security zone to associate this compartment with.
	SecurityZoneId *string `pulumi:"securityZoneId"`
	// possible type of targets(COMPARTMENT/FACLOUD)
	TargetResourceType *string `pulumi:"targetResourceType"`
	// The list of security zone recipes to associate this compartment with.
	TargetSecurityZoneRecipes []TargetTargetDetailTargetSecurityZoneRecipe `pulumi:"targetSecurityZoneRecipes"`
}

// TargetTargetDetailInput is an input type that accepts TargetTargetDetailArgs and TargetTargetDetailOutput values.
// You can construct a concrete instance of `TargetTargetDetailInput` via:
//
//	TargetTargetDetailArgs{...}
type TargetTargetDetailInput interface {
	pulumi.Input

	ToTargetTargetDetailOutput() TargetTargetDetailOutput
	ToTargetTargetDetailOutputWithContext(context.Context) TargetTargetDetailOutput
}

type TargetTargetDetailArgs struct {
	// The name of the security zone to associate this compartment with.
	SecurityZoneDisplayName pulumi.StringPtrInput `pulumi:"securityZoneDisplayName"`
	// The OCID of the security zone to associate this compartment with.
	SecurityZoneId pulumi.StringPtrInput `pulumi:"securityZoneId"`
	// possible type of targets(COMPARTMENT/FACLOUD)
	TargetResourceType pulumi.StringPtrInput `pulumi:"targetResourceType"`
	// The list of security zone recipes to associate this compartment with.
	TargetSecurityZoneRecipes TargetTargetDetailTargetSecurityZoneRecipeArrayInput `pulumi:"targetSecurityZoneRecipes"`
}

func (TargetTargetDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetail)(nil)).Elem()
}

func (i TargetTargetDetailArgs) ToTargetTargetDetailOutput() TargetTargetDetailOutput {
	return i.ToTargetTargetDetailOutputWithContext(context.Background())
}

func (i TargetTargetDetailArgs) ToTargetTargetDetailOutputWithContext(ctx context.Context) TargetTargetDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetailOutput)
}

// TargetTargetDetailArrayInput is an input type that accepts TargetTargetDetailArray and TargetTargetDetailArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetailArrayInput` via:
//
//	TargetTargetDetailArray{ TargetTargetDetailArgs{...} }
type TargetTargetDetailArrayInput interface {
	pulumi.Input

	ToTargetTargetDetailArrayOutput() TargetTargetDetailArrayOutput
	ToTargetTargetDetailArrayOutputWithContext(context.Context) TargetTargetDetailArrayOutput
}

type TargetTargetDetailArray []TargetTargetDetailInput

func (TargetTargetDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetail)(nil)).Elem()
}

func (i TargetTargetDetailArray) ToTargetTargetDetailArrayOutput() TargetTargetDetailArrayOutput {
	return i.ToTargetTargetDetailArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetailArray) ToTargetTargetDetailArrayOutputWithContext(ctx context.Context) TargetTargetDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetailArrayOutput)
}

type TargetTargetDetailOutput struct{ *pulumi.OutputState }

func (TargetTargetDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetail)(nil)).Elem()
}

func (o TargetTargetDetailOutput) ToTargetTargetDetailOutput() TargetTargetDetailOutput {
	return o
}

func (o TargetTargetDetailOutput) ToTargetTargetDetailOutputWithContext(ctx context.Context) TargetTargetDetailOutput {
	return o
}

// The name of the security zone to associate this compartment with.
func (o TargetTargetDetailOutput) SecurityZoneDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetail) *string { return v.SecurityZoneDisplayName }).(pulumi.StringPtrOutput)
}

// The OCID of the security zone to associate this compartment with.
func (o TargetTargetDetailOutput) SecurityZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetail) *string { return v.SecurityZoneId }).(pulumi.StringPtrOutput)
}

// possible type of targets(COMPARTMENT/FACLOUD)
func (o TargetTargetDetailOutput) TargetResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetail) *string { return v.TargetResourceType }).(pulumi.StringPtrOutput)
}

// The list of security zone recipes to associate this compartment with.
func (o TargetTargetDetailOutput) TargetSecurityZoneRecipes() TargetTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return o.ApplyT(func(v TargetTargetDetail) []TargetTargetDetailTargetSecurityZoneRecipe {
		return v.TargetSecurityZoneRecipes
	}).(TargetTargetDetailTargetSecurityZoneRecipeArrayOutput)
}

type TargetTargetDetailArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetail)(nil)).Elem()
}

func (o TargetTargetDetailArrayOutput) ToTargetTargetDetailArrayOutput() TargetTargetDetailArrayOutput {
	return o
}

func (o TargetTargetDetailArrayOutput) ToTargetTargetDetailArrayOutputWithContext(ctx context.Context) TargetTargetDetailArrayOutput {
	return o
}

func (o TargetTargetDetailArrayOutput) Index(i pulumi.IntInput) TargetTargetDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetail {
		return vs[0].([]TargetTargetDetail)[vs[1].(int)]
	}).(TargetTargetDetailOutput)
}

type TargetTargetDetailTargetSecurityZoneRecipe struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id *string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Owner of ResponderRecipe
	Owner *string `pulumi:"owner"`
	// The list of `SecurityPolicy` ids that are included in the recipe
	SecurityPolicies []string `pulumi:"securityPolicies"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// TargetTargetDetailTargetSecurityZoneRecipeInput is an input type that accepts TargetTargetDetailTargetSecurityZoneRecipeArgs and TargetTargetDetailTargetSecurityZoneRecipeOutput values.
// You can construct a concrete instance of `TargetTargetDetailTargetSecurityZoneRecipeInput` via:
//
//	TargetTargetDetailTargetSecurityZoneRecipeArgs{...}
type TargetTargetDetailTargetSecurityZoneRecipeInput interface {
	pulumi.Input

	ToTargetTargetDetailTargetSecurityZoneRecipeOutput() TargetTargetDetailTargetSecurityZoneRecipeOutput
	ToTargetTargetDetailTargetSecurityZoneRecipeOutputWithContext(context.Context) TargetTargetDetailTargetSecurityZoneRecipeOutput
}

type TargetTargetDetailTargetSecurityZoneRecipeArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// Owner of ResponderRecipe
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// The list of `SecurityPolicy` ids that are included in the recipe
	SecurityPolicies pulumi.StringArrayInput `pulumi:"securityPolicies"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (TargetTargetDetailTargetSecurityZoneRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (i TargetTargetDetailTargetSecurityZoneRecipeArgs) ToTargetTargetDetailTargetSecurityZoneRecipeOutput() TargetTargetDetailTargetSecurityZoneRecipeOutput {
	return i.ToTargetTargetDetailTargetSecurityZoneRecipeOutputWithContext(context.Background())
}

func (i TargetTargetDetailTargetSecurityZoneRecipeArgs) ToTargetTargetDetailTargetSecurityZoneRecipeOutputWithContext(ctx context.Context) TargetTargetDetailTargetSecurityZoneRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetailTargetSecurityZoneRecipeOutput)
}

// TargetTargetDetailTargetSecurityZoneRecipeArrayInput is an input type that accepts TargetTargetDetailTargetSecurityZoneRecipeArray and TargetTargetDetailTargetSecurityZoneRecipeArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetailTargetSecurityZoneRecipeArrayInput` via:
//
//	TargetTargetDetailTargetSecurityZoneRecipeArray{ TargetTargetDetailTargetSecurityZoneRecipeArgs{...} }
type TargetTargetDetailTargetSecurityZoneRecipeArrayInput interface {
	pulumi.Input

	ToTargetTargetDetailTargetSecurityZoneRecipeArrayOutput() TargetTargetDetailTargetSecurityZoneRecipeArrayOutput
	ToTargetTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(context.Context) TargetTargetDetailTargetSecurityZoneRecipeArrayOutput
}

type TargetTargetDetailTargetSecurityZoneRecipeArray []TargetTargetDetailTargetSecurityZoneRecipeInput

func (TargetTargetDetailTargetSecurityZoneRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (i TargetTargetDetailTargetSecurityZoneRecipeArray) ToTargetTargetDetailTargetSecurityZoneRecipeArrayOutput() TargetTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return i.ToTargetTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetailTargetSecurityZoneRecipeArray) ToTargetTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(ctx context.Context) TargetTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetailTargetSecurityZoneRecipeArrayOutput)
}

type TargetTargetDetailTargetSecurityZoneRecipeOutput struct{ *pulumi.OutputState }

func (TargetTargetDetailTargetSecurityZoneRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) ToTargetTargetDetailTargetSecurityZoneRecipeOutput() TargetTargetDetailTargetSecurityZoneRecipeOutput {
	return o
}

func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) ToTargetTargetDetailTargetSecurityZoneRecipeOutputWithContext(ctx context.Context) TargetTargetDetailTargetSecurityZoneRecipeOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The target description.
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) DetectorTemplate identifier.
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier of TargetResponderRecipe that can't be changed after creation.
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// Owner of ResponderRecipe
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// The list of `SecurityPolicy` ids that are included in the recipe
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) SecurityPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) []string { return v.SecurityPolicies }).(pulumi.StringArrayOutput)
}

// (Updatable) The current state of the DetectorRule.
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) *string { return v.State }).(pulumi.StringPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetDetailTargetSecurityZoneRecipeOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetailTargetSecurityZoneRecipe) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type TargetTargetDetailTargetSecurityZoneRecipeArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetailTargetSecurityZoneRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (o TargetTargetDetailTargetSecurityZoneRecipeArrayOutput) ToTargetTargetDetailTargetSecurityZoneRecipeArrayOutput() TargetTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return o
}

func (o TargetTargetDetailTargetSecurityZoneRecipeArrayOutput) ToTargetTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(ctx context.Context) TargetTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return o
}

func (o TargetTargetDetailTargetSecurityZoneRecipeArrayOutput) Index(i pulumi.IntInput) TargetTargetDetailTargetSecurityZoneRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetailTargetSecurityZoneRecipe {
		return vs[0].([]TargetTargetDetailTargetSecurityZoneRecipe)[vs[1].(int)]
	}).(TargetTargetDetailTargetSecurityZoneRecipeOutput)
}

type TargetTargetDetectorRecipe struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// The target description.
	Description *string `pulumi:"description"`
	// detector for the rule
	Detector *string `pulumi:"detector"`
	// Identifier for DetectorRecipe.
	DetectorRecipeId string `pulumi:"detectorRecipeId"`
	// (Updatable) Overrides to be applied to Detector Rule associated with the target
	DetectorRules []TargetTargetDetectorRecipeDetectorRule `pulumi:"detectorRules"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName *string `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules []TargetTargetDetectorRecipeEffectiveDetectorRule `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id *string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner *string `pulumi:"owner"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// TargetTargetDetectorRecipeInput is an input type that accepts TargetTargetDetectorRecipeArgs and TargetTargetDetectorRecipeOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeInput` via:
//
//	TargetTargetDetectorRecipeArgs{...}
type TargetTargetDetectorRecipeInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeOutput() TargetTargetDetectorRecipeOutput
	ToTargetTargetDetectorRecipeOutputWithContext(context.Context) TargetTargetDetectorRecipeOutput
}

type TargetTargetDetectorRecipeArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// detector for the rule
	Detector pulumi.StringPtrInput `pulumi:"detector"`
	// Identifier for DetectorRecipe.
	DetectorRecipeId pulumi.StringInput `pulumi:"detectorRecipeId"`
	// (Updatable) Overrides to be applied to Detector Rule associated with the target
	DetectorRules TargetTargetDetectorRecipeDetectorRuleArrayInput `pulumi:"detectorRules"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules TargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (TargetTargetDetectorRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipe)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeArgs) ToTargetTargetDetectorRecipeOutput() TargetTargetDetectorRecipeOutput {
	return i.ToTargetTargetDetectorRecipeOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeArgs) ToTargetTargetDetectorRecipeOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeOutput)
}

// TargetTargetDetectorRecipeArrayInput is an input type that accepts TargetTargetDetectorRecipeArray and TargetTargetDetectorRecipeArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeArrayInput` via:
//
//	TargetTargetDetectorRecipeArray{ TargetTargetDetectorRecipeArgs{...} }
type TargetTargetDetectorRecipeArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeArrayOutput() TargetTargetDetectorRecipeArrayOutput
	ToTargetTargetDetectorRecipeArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeArrayOutput
}

type TargetTargetDetectorRecipeArray []TargetTargetDetectorRecipeInput

func (TargetTargetDetectorRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipe)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeArray) ToTargetTargetDetectorRecipeArrayOutput() TargetTargetDetectorRecipeArrayOutput {
	return i.ToTargetTargetDetectorRecipeArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeArray) ToTargetTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeArrayOutput)
}

type TargetTargetDetectorRecipeOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipe)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeOutput) ToTargetTargetDetectorRecipeOutput() TargetTargetDetectorRecipeOutput {
	return o
}

func (o TargetTargetDetectorRecipeOutput) ToTargetTargetDetectorRecipeOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetDetectorRecipeOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The target description.
func (o TargetTargetDetectorRecipeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// detector for the rule
func (o TargetTargetDetectorRecipeOutput) Detector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.Detector }).(pulumi.StringPtrOutput)
}

// Identifier for DetectorRecipe.
func (o TargetTargetDetectorRecipeOutput) DetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) string { return v.DetectorRecipeId }).(pulumi.StringOutput)
}

// (Updatable) Overrides to be applied to Detector Rule associated with the target
func (o TargetTargetDetectorRecipeOutput) DetectorRules() TargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) []TargetTargetDetectorRecipeDetectorRule { return v.DetectorRules }).(TargetTargetDetectorRecipeDetectorRuleArrayOutput)
}

// (Updatable) DetectorTemplate identifier.
func (o TargetTargetDetectorRecipeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// List of effective detector rules for the detector type for recipe after applying defaults
func (o TargetTargetDetectorRecipeOutput) EffectiveDetectorRules() TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) []TargetTargetDetectorRecipeEffectiveDetectorRule {
		return v.EffectiveDetectorRules
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that can't be changed after creation.
func (o TargetTargetDetectorRecipeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Owner of ResponderRecipe
func (o TargetTargetDetectorRecipeOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// (Updatable) The current state of the DetectorRule.
func (o TargetTargetDetectorRecipeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipe) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipe)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeArrayOutput) ToTargetTargetDetectorRecipeArrayOutput() TargetTargetDetectorRecipeArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeArrayOutput) ToTargetTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipe {
		return vs[0].([]TargetTargetDetectorRecipe)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeOutput)
}

type TargetTargetDetectorRecipeDetectorRule struct {
	// The id of the attached DataSource.
	DataSourceId *string `pulumi:"dataSourceId"`
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetDetectorRecipeDetectorRuleDetails `pulumi:"details"`
	// detector for the rule
	Detector *string `pulumi:"detector"`
	// (Updatable) Identifier for DetectorRule.
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName *string `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []TargetTargetDetectorRecipeDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation *string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType *string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType *string `pulumi:"serviceType"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// TargetTargetDetectorRecipeDetectorRuleInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleArgs and TargetTargetDetectorRecipeDetectorRuleOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleInput` via:
//
//	TargetTargetDetectorRecipeDetectorRuleArgs{...}
type TargetTargetDetectorRecipeDetectorRuleInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleOutput() TargetTargetDetectorRecipeDetectorRuleOutput
	ToTargetTargetDetectorRecipeDetectorRuleOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleOutput
}

type TargetTargetDetectorRecipeDetectorRuleArgs struct {
	// The id of the attached DataSource.
	DataSourceId pulumi.StringPtrInput `pulumi:"dataSourceId"`
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetDetectorRecipeDetectorRuleDetailsInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringPtrInput `pulumi:"detector"`
	// (Updatable) Identifier for DetectorRule.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringPtrInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (TargetTargetDetectorRecipeDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleArgs) ToTargetTargetDetectorRecipeDetectorRuleOutput() TargetTargetDetectorRecipeDetectorRuleOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleArgs) ToTargetTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleOutput)
}

// TargetTargetDetectorRecipeDetectorRuleArrayInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleArray and TargetTargetDetectorRecipeDetectorRuleArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleArrayInput` via:
//
//	TargetTargetDetectorRecipeDetectorRuleArray{ TargetTargetDetectorRecipeDetectorRuleArgs{...} }
type TargetTargetDetectorRecipeDetectorRuleArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleArrayOutput() TargetTargetDetectorRecipeDetectorRuleArrayOutput
	ToTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleArrayOutput
}

type TargetTargetDetectorRecipeDetectorRuleArray []TargetTargetDetectorRecipeDetectorRuleInput

func (TargetTargetDetectorRecipeDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleArray) ToTargetTargetDetectorRecipeDetectorRuleArrayOutput() TargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleArray) ToTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleArrayOutput)
}

type TargetTargetDetectorRecipeDetectorRuleOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleOutput) ToTargetTargetDetectorRecipeDetectorRuleOutput() TargetTargetDetectorRecipeDetectorRuleOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleOutput) ToTargetTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleOutput {
	return o
}

// The id of the attached DataSource.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) DataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.DataSourceId }).(pulumi.StringPtrOutput)
}

// The target description.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of ResponderRule.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) Details() TargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) TargetTargetDetectorRecipeDetectorRuleDetails {
		return v.Details
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsOutput)
}

// detector for the rule
func (o TargetTargetDetectorRecipeDetectorRuleOutput) Detector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.Detector }).(pulumi.StringPtrOutput)
}

// (Updatable) Identifier for DetectorRule.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// (Updatable) DetectorTemplate identifier.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Data Source entities mapping for a Detector Rule
func (o TargetTargetDetectorRecipeDetectorRuleOutput) EntitiesMappings() TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) []TargetTargetDetectorRecipeDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of cloudguard managed list types related to this rule
func (o TargetTargetDetectorRecipeDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o TargetTargetDetectorRecipeDetectorRuleOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.Recommendation }).(pulumi.StringPtrOutput)
}

// resource type of the configuration to which the rule is applied
func (o TargetTargetDetectorRecipeDetectorRuleOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// service type of the configuration to which the rule is applied
func (o TargetTargetDetectorRecipeDetectorRuleOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// (Updatable) The current state of the DetectorRule.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeDetectorRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleArrayOutput() TargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeDetectorRule {
		return vs[0].([]TargetTargetDetectorRecipeDetectorRule)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeDetectorRuleOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetails struct {
	// (Updatable) Condition group corresponding to each compartment
	ConditionGroups []TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup `pulumi:"conditionGroups"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations []TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed *bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled *bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel *string `pulumi:"riskLevel"`
}

// TargetTargetDetectorRecipeDetectorRuleDetailsInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsArgs and TargetTargetDetectorRecipeDetectorRuleDetailsOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsInput` via:
//
//	TargetTargetDetectorRecipeDetectorRuleDetailsArgs{...}
type TargetTargetDetectorRecipeDetectorRuleDetailsInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsOutput() TargetTargetDetectorRecipeDetectorRuleDetailsOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsArgs struct {
	// (Updatable) Condition group corresponding to each compartment
	ConditionGroups TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput `pulumi:"conditionGroups"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolPtrInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringPtrInput `pulumi:"riskLevel"`
}

func (TargetTargetDetectorRecipeDetectorRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsOutput() TargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetails)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsOutput() TargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsOutput {
	return o
}

// (Updatable) Condition group corresponding to each compartment
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) ConditionGroups() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) []TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
		return v.ConditionGroups
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput)
}

// (Updatable) Configurations associated with the ResponderRule
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) Configurations() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) []TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration {
		return v.Configurations
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

// configuration allowed or not
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) IsConfigurationAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) *bool { return v.IsConfigurationAllowed }).(pulumi.BoolPtrOutput)
}

// Identifies state for ResponderRule
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// user defined labels for a detector rule
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o TargetTargetDetectorRecipeDetectorRuleDetailsOutput) RiskLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetails) *string { return v.RiskLevel }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup struct {
	// (Updatable) compartment associated with condition
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Base condition object
	Condition string `pulumi:"condition"`
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs and TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput` via:
//
//	TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs{...}
type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// (Updatable) Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
}

func (TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput)
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray and TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput` via:
//
//	TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray{ TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs{...} }
type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray []TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput

func (TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Base condition object
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup) string { return v.Condition }).(pulumi.StringOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup {
		return vs[0].([]TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroup)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// configuration data type
	DataType *string `pulumi:"dataType"`
	// (Updatable) configuration name
	Name *string `pulumi:"name"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
	// List of configuration values
	Values []TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue `pulumi:"values"`
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs and TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput` via:
//
//	TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs{...}
type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// (Updatable) configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
	// List of configuration values
	Values TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput `pulumi:"values"`
}

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray and TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput` via:
//
//	TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray{ TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs{...} }
type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray []TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.ConfigKey }).(pulumi.StringPtrOutput)
}

// configuration data type
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration name
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// List of configuration values
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput) Values() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration) []TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
		return v.Values
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration {
		return vs[0].([]TargetTargetDetectorRecipeDetectorRuleDetailsConfiguration)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType *string `pulumi:"listType"`
	// type of the managed list
	ManagedListType *string `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs and TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput` via:
//
//	TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...}
type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringPtrInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringPtrInput `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

// TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray and TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput` via:
//
//	TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray{ TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs{...} }
type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
	ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray []TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) *string { return v.ListType }).(pulumi.StringPtrOutput)
}

// type of the managed list
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) ManagedListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) *string {
		return v.ManagedListType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput() TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue {
		return vs[0].([]TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValue)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput)
}

type TargetTargetDetectorRecipeDetectorRuleEntitiesMapping struct {
	// (Updatable) DetectorTemplate identifier.
	DisplayName *string `pulumi:"displayName"`
	// Possible type of entity
	EntityType *string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField *string `pulumi:"queryField"`
}

// TargetTargetDetectorRecipeDetectorRuleEntitiesMappingInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs and TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleEntitiesMappingInput` via:
//
//	TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs{...}
type TargetTargetDetectorRecipeDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput() TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput
	ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput
}

type TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs struct {
	// (Updatable) DetectorTemplate identifier.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringPtrInput `pulumi:"queryField"`
}

func (TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs) ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput() TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs) ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput)
}

// TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput is an input type that accepts TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray and TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput` via:
//
//	TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray{ TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs{...} }
type TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput
	ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput
}

type TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray []TargetTargetDetectorRecipeDetectorRuleEntitiesMappingInput

func (TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray) ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return i.ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray) ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput)
}

type TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput() TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return o
}

// (Updatable) DetectorTemplate identifier.
func (o TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleEntitiesMapping) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Possible type of entity
func (o TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleEntitiesMapping) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// The entity value mapped to a data source query
func (o TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeDetectorRuleEntitiesMapping) *string { return v.QueryField }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ToTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeDetectorRuleEntitiesMapping {
		return vs[0].([]TargetTargetDetectorRecipeDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRule struct {
	// The id of the attached DataSource.
	DataSourceId *string `pulumi:"dataSourceId"`
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details []TargetTargetDetectorRecipeEffectiveDetectorRuleDetail `pulumi:"details"`
	// detector for the rule
	Detector *string `pulumi:"detector"`
	// (Updatable) Identifier for DetectorRule.
	DetectorRuleId *string `pulumi:"detectorRuleId"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName *string `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation *string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType *string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType *string `pulumi:"serviceType"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleArgs and TargetTargetDetectorRecipeEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleArgs{...}
type TargetTargetDetectorRecipeEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleArgs struct {
	// The id of the attached DataSource.
	DataSourceId pulumi.StringPtrInput `pulumi:"dataSourceId"`
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringPtrInput `pulumi:"detector"`
	// (Updatable) Identifier for DetectorRule.
	DetectorRuleId pulumi.StringPtrInput `pulumi:"detectorRuleId"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringPtrInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (TargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleArray and TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleArray{ TargetTargetDetectorRecipeEffectiveDetectorRuleArgs{...} }
type TargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleArray []TargetTargetDetectorRecipeEffectiveDetectorRuleInput

func (TargetTargetDetectorRecipeEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

// The id of the attached DataSource.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) DataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.DataSourceId }).(pulumi.StringPtrOutput)
}

// The target description.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of ResponderRule.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Details() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) []TargetTargetDetectorRecipeEffectiveDetectorRuleDetail {
		return v.Details
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput)
}

// detector for the rule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Detector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.Detector }).(pulumi.StringPtrOutput)
}

// (Updatable) Identifier for DetectorRule.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.DetectorRuleId }).(pulumi.StringPtrOutput)
}

// (Updatable) DetectorTemplate identifier.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Data Source entities mapping for a Detector Rule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) EntitiesMappings() TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) []TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of cloudguard managed list types related to this rule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.Recommendation }).(pulumi.StringPtrOutput)
}

// resource type of the configuration to which the rule is applied
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// service type of the configuration to which the rule is applied
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// (Updatable) The current state of the DetectorRule.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeEffectiveDetectorRule {
		return vs[0].([]TargetTargetDetectorRecipeEffectiveDetectorRule)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetail struct {
	// (Updatable) Condition group corresponding to each compartment
	ConditionGroups []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup `pulumi:"conditionGroups"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed *bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled *bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel *string `pulumi:"riskLevel"`
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs{...}
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs struct {
	// (Updatable) Condition group corresponding to each compartment
	ConditionGroups TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput `pulumi:"conditionGroups"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolPtrInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringPtrInput `pulumi:"riskLevel"`
}

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput)
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray{ TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs{...} }
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailInput

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return o
}

// (Updatable) Condition group corresponding to each compartment
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ConditionGroups() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetail) []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup {
		return v.ConditionGroups
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput)
}

// (Updatable) Configurations associated with the ResponderRule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) Configurations() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetail) []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
		return v.Configurations
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

// configuration allowed or not
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) IsConfigurationAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetail) *bool { return v.IsConfigurationAllowed }).(pulumi.BoolPtrOutput)
}

// Identifies state for ResponderRule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetail) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// user defined labels for a detector rule
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetail) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) RiskLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetail) *string { return v.RiskLevel }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeEffectiveDetectorRuleDetail {
		return vs[0].([]TargetTargetDetectorRecipeEffectiveDetectorRuleDetail)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Base condition object
	Condition *string `pulumi:"condition"`
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs{...}
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// (Updatable) Base condition object
	Condition pulumi.StringPtrInput `pulumi:"condition"`
}

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput)
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray{ TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs{...} }
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup) *string {
		return v.CompartmentId
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Base condition object
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup) *string {
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup {
		return vs[0].([]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// configuration data type
	DataType *string `pulumi:"dataType"`
	// (Updatable) configuration name
	Name *string `pulumi:"name"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
	// List of configuration values
	Values []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue `pulumi:"values"`
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{...}
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// (Updatable) configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
	// List of configuration values
	Values TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput `pulumi:"values"`
}

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput)
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray{ TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{...} }
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) *string { return v.ConfigKey }).(pulumi.StringPtrOutput)
}

// configuration data type
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration name
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// List of configuration values
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Values() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
		return v.Values
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
		return vs[0].([]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType *string `pulumi:"listType"`
	// type of the managed list
	ManagedListType *string `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{...}
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringPtrInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringPtrInput `pulumi:"managedListType"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput)
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray and TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray{ TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{...} }
type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray []TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) *string {
		return v.ListType
	}).(pulumi.StringPtrOutput)
}

// type of the managed list
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ManagedListType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) *string {
		return v.ManagedListType
	}).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) *string {
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
		return vs[0].([]TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping struct {
	// (Updatable) DetectorTemplate identifier.
	DisplayName *string `pulumi:"displayName"`
	// Possible type of entity
	EntityType *string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField *string `pulumi:"queryField"`
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs and TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{...}
type TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs struct {
	// (Updatable) DetectorTemplate identifier.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringPtrInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringPtrInput `pulumi:"queryField"`
}

func (TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput)
}

// TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput is an input type that accepts TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray and TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput` via:
//
//	TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray{ TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{...} }
type TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput
	ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray []TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput

func (TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return i.ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

// (Updatable) DetectorTemplate identifier.
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Possible type of entity
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) *string { return v.EntityType }).(pulumi.StringPtrOutput)
}

// The entity value mapped to a data source query
func (o TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) *string { return v.QueryField }).(pulumi.StringPtrOutput)
}

type TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ToTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping {
		return vs[0].([]TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput)
}

type TargetTargetResponderRecipe struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName *string `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules []TargetTargetResponderRecipeEffectiveResponderRule `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id *string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner *string `pulumi:"owner"`
	// Identifier for ResponderRecipe.
	ResponderRecipeId string `pulumi:"responderRecipeId"`
	// (Updatable) Override responder rules associated with reponder recipe in a target.
	ResponderRules []TargetTargetResponderRecipeResponderRule `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// TargetTargetResponderRecipeInput is an input type that accepts TargetTargetResponderRecipeArgs and TargetTargetResponderRecipeOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeInput` via:
//
//	TargetTargetResponderRecipeArgs{...}
type TargetTargetResponderRecipeInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeOutput() TargetTargetResponderRecipeOutput
	ToTargetTargetResponderRecipeOutputWithContext(context.Context) TargetTargetResponderRecipeOutput
}

type TargetTargetResponderRecipeArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules TargetTargetResponderRecipeEffectiveResponderRuleArrayInput `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// Identifier for ResponderRecipe.
	ResponderRecipeId pulumi.StringInput `pulumi:"responderRecipeId"`
	// (Updatable) Override responder rules associated with reponder recipe in a target.
	ResponderRules TargetTargetResponderRecipeResponderRuleArrayInput `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (TargetTargetResponderRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipe)(nil)).Elem()
}

func (i TargetTargetResponderRecipeArgs) ToTargetTargetResponderRecipeOutput() TargetTargetResponderRecipeOutput {
	return i.ToTargetTargetResponderRecipeOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeArgs) ToTargetTargetResponderRecipeOutputWithContext(ctx context.Context) TargetTargetResponderRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeOutput)
}

// TargetTargetResponderRecipeArrayInput is an input type that accepts TargetTargetResponderRecipeArray and TargetTargetResponderRecipeArrayOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeArrayInput` via:
//
//	TargetTargetResponderRecipeArray{ TargetTargetResponderRecipeArgs{...} }
type TargetTargetResponderRecipeArrayInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeArrayOutput() TargetTargetResponderRecipeArrayOutput
	ToTargetTargetResponderRecipeArrayOutputWithContext(context.Context) TargetTargetResponderRecipeArrayOutput
}

type TargetTargetResponderRecipeArray []TargetTargetResponderRecipeInput

func (TargetTargetResponderRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipe)(nil)).Elem()
}

func (i TargetTargetResponderRecipeArray) ToTargetTargetResponderRecipeArrayOutput() TargetTargetResponderRecipeArrayOutput {
	return i.ToTargetTargetResponderRecipeArrayOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeArray) ToTargetTargetResponderRecipeArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeArrayOutput)
}

type TargetTargetResponderRecipeOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipe)(nil)).Elem()
}

func (o TargetTargetResponderRecipeOutput) ToTargetTargetResponderRecipeOutput() TargetTargetResponderRecipeOutput {
	return o
}

func (o TargetTargetResponderRecipeOutput) ToTargetTargetResponderRecipeOutputWithContext(ctx context.Context) TargetTargetResponderRecipeOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetResponderRecipeOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The target description.
func (o TargetTargetResponderRecipeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) DetectorTemplate identifier.
func (o TargetTargetResponderRecipeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// List of responder rules associated with the recipe after applying all defaults
func (o TargetTargetResponderRecipeOutput) EffectiveResponderRules() TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) []TargetTargetResponderRecipeEffectiveResponderRule {
		return v.EffectiveResponderRules
	}).(TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that can't be changed after creation.
func (o TargetTargetResponderRecipeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Owner of ResponderRecipe
func (o TargetTargetResponderRecipeOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// Identifier for ResponderRecipe.
func (o TargetTargetResponderRecipeOutput) ResponderRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) string { return v.ResponderRecipeId }).(pulumi.StringOutput)
}

// (Updatable) Override responder rules associated with reponder recipe in a target.
func (o TargetTargetResponderRecipeOutput) ResponderRules() TargetTargetResponderRecipeResponderRuleArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) []TargetTargetResponderRecipeResponderRule {
		return v.ResponderRules
	}).(TargetTargetResponderRecipeResponderRuleArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetResponderRecipeOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetResponderRecipeOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipe) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipe)(nil)).Elem()
}

func (o TargetTargetResponderRecipeArrayOutput) ToTargetTargetResponderRecipeArrayOutput() TargetTargetResponderRecipeArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeArrayOutput) ToTargetTargetResponderRecipeArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeArrayOutput) Index(i pulumi.IntInput) TargetTargetResponderRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetResponderRecipe {
		return vs[0].([]TargetTargetResponderRecipe)[vs[1].(int)]
	}).(TargetTargetResponderRecipeOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRule struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details []TargetTargetResponderRecipeEffectiveResponderRuleDetail `pulumi:"details"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// (Updatable) Identifier for ResponderRule.
	ResponderRuleId *string `pulumi:"responderRuleId"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Type of Responder
	Type *string `pulumi:"type"`
}

// TargetTargetResponderRecipeEffectiveResponderRuleInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleArgs and TargetTargetResponderRecipeEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleInput` via:
//
//	TargetTargetResponderRecipeEffectiveResponderRuleArgs{...}
type TargetTargetResponderRecipeEffectiveResponderRuleInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleOutput() TargetTargetResponderRecipeEffectiveResponderRuleOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleOutput
}

type TargetTargetResponderRecipeEffectiveResponderRuleArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayInput `pulumi:"details"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// (Updatable) Identifier for ResponderRule.
	ResponderRuleId pulumi.StringPtrInput `pulumi:"responderRuleId"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TargetTargetResponderRecipeEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleOutput() TargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleOutput)
}

// TargetTargetResponderRecipeEffectiveResponderRuleArrayInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleArray and TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleArrayInput` via:
//
//	TargetTargetResponderRecipeEffectiveResponderRuleArray{ TargetTargetResponderRecipeEffectiveResponderRuleArgs{...} }
type TargetTargetResponderRecipeEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput
}

type TargetTargetResponderRecipeEffectiveResponderRuleArray []TargetTargetResponderRecipeEffectiveResponderRuleInput

func (TargetTargetResponderRecipeEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleArray) ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleArray) ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleOutput() TargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The target description.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of ResponderRule.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) Details() TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) []TargetTargetResponderRecipeEffectiveResponderRuleDetail {
		return v.Details
	}).(TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput)
}

// (Updatable) DetectorTemplate identifier.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of Policy
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// (Updatable) Identifier for ResponderRule.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.ResponderRuleId }).(pulumi.StringPtrOutput)
}

// (Updatable) The current state of the DetectorRule.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Supported Execution Modes
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// Type of Responder
func (o TargetTargetResponderRecipeEffectiveResponderRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) TargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetResponderRecipeEffectiveResponderRule {
		return vs[0].([]TargetTargetResponderRecipeEffectiveResponderRule)[vs[1].(int)]
	}).(TargetTargetResponderRecipeEffectiveResponderRuleOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetail struct {
	// (Updatable) Base condition object
	Condition *string `pulumi:"condition"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations []TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) Execution Mode for ResponderRule
	Mode *string `pulumi:"mode"`
}

// TargetTargetResponderRecipeEffectiveResponderRuleDetailInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleDetailArgs and TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleDetailInput` via:
//
//	TargetTargetResponderRecipeEffectiveResponderRuleDetailArgs{...}
type TargetTargetResponderRecipeEffectiveResponderRuleDetailInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailArgs struct {
	// (Updatable) Base condition object
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// (Updatable) Execution Mode for ResponderRule
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput)
}

// TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleDetailArray and TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayInput` via:
//
//	TargetTargetResponderRecipeEffectiveResponderRuleDetailArray{ TargetTargetResponderRecipeEffectiveResponderRuleDetailArgs{...} }
type TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailArray []TargetTargetResponderRecipeEffectiveResponderRuleDetailInput

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailArray) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailArray) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return o
}

// (Updatable) Base condition object
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetail) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// (Updatable) Configurations associated with the ResponderRule
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) Configurations() TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetail) []TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration {
		return v.Configurations
	}).(TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetail) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) Execution Mode for ResponderRule
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetail) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) Index(i pulumi.IntInput) TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetResponderRecipeEffectiveResponderRuleDetail {
		return vs[0].([]TargetTargetResponderRecipeEffectiveResponderRuleDetail)[vs[1].(int)]
	}).(TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey *string `pulumi:"configKey"`
	// (Updatable) configuration name
	Name *string `pulumi:"name"`
	// (Updatable) configuration value
	Value *string `pulumi:"value"`
}

// TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs and TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput` via:
//
//	TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{...}
type TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringPtrInput `pulumi:"configKey"`
	// (Updatable) configuration name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput)
}

// TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput is an input type that accepts TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray and TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput` via:
//
//	TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray{ TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{...} }
type TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput
	ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray []TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return i.ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ConfigKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration) *string {
		return v.ConfigKey
	}).(pulumi.StringPtrOutput)
}

// (Updatable) configuration name
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// (Updatable) configuration value
func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ToTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration {
		return vs[0].([]TargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)[vs[1].(int)]
	}).(TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput)
}

type TargetTargetResponderRecipeResponderRule struct {
	// (Updatable) compartment associated with condition
	CompartmentId *string `pulumi:"compartmentId"`
	// The target description.
	Description *string `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetResponderRecipeResponderRuleDetails `pulumi:"details"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName *string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// (Updatable) Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// (Updatable) The current state of the DetectorRule.
	State *string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// Type of Responder
	Type *string `pulumi:"type"`
}

// TargetTargetResponderRecipeResponderRuleInput is an input type that accepts TargetTargetResponderRecipeResponderRuleArgs and TargetTargetResponderRecipeResponderRuleOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeResponderRuleInput` via:
//
//	TargetTargetResponderRecipeResponderRuleArgs{...}
type TargetTargetResponderRecipeResponderRuleInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeResponderRuleOutput() TargetTargetResponderRecipeResponderRuleOutput
	ToTargetTargetResponderRecipeResponderRuleOutputWithContext(context.Context) TargetTargetResponderRecipeResponderRuleOutput
}

type TargetTargetResponderRecipeResponderRuleArgs struct {
	// (Updatable) compartment associated with condition
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The target description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Updatable) Details of ResponderRule.
	Details TargetTargetResponderRecipeResponderRuleDetailsInput `pulumi:"details"`
	// (Updatable) DetectorTemplate identifier.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// (Updatable) Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// (Updatable) The current state of the DetectorRule.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TargetTargetResponderRecipeResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i TargetTargetResponderRecipeResponderRuleArgs) ToTargetTargetResponderRecipeResponderRuleOutput() TargetTargetResponderRecipeResponderRuleOutput {
	return i.ToTargetTargetResponderRecipeResponderRuleOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeResponderRuleArgs) ToTargetTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeResponderRuleOutput)
}

// TargetTargetResponderRecipeResponderRuleArrayInput is an input type that accepts TargetTargetResponderRecipeResponderRuleArray and TargetTargetResponderRecipeResponderRuleArrayOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeResponderRuleArrayInput` via:
//
//	TargetTargetResponderRecipeResponderRuleArray{ TargetTargetResponderRecipeResponderRuleArgs{...} }
type TargetTargetResponderRecipeResponderRuleArrayInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeResponderRuleArrayOutput() TargetTargetResponderRecipeResponderRuleArrayOutput
	ToTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Context) TargetTargetResponderRecipeResponderRuleArrayOutput
}

type TargetTargetResponderRecipeResponderRuleArray []TargetTargetResponderRecipeResponderRuleInput

func (TargetTargetResponderRecipeResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i TargetTargetResponderRecipeResponderRuleArray) ToTargetTargetResponderRecipeResponderRuleArrayOutput() TargetTargetResponderRecipeResponderRuleArrayOutput {
	return i.ToTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeResponderRuleArray) ToTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeResponderRuleArrayOutput)
}

type TargetTargetResponderRecipeResponderRuleOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o TargetTargetResponderRecipeResponderRuleOutput) ToTargetTargetResponderRecipeResponderRuleOutput() TargetTargetResponderRecipeResponderRuleOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleOutput) ToTargetTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleOutput {
	return o
}

// (Updatable) compartment associated with condition
func (o TargetTargetResponderRecipeResponderRuleOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The target description.
func (o TargetTargetResponderRecipeResponderRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Updatable) Details of ResponderRule.
func (o TargetTargetResponderRecipeResponderRuleOutput) Details() TargetTargetResponderRecipeResponderRuleDetailsOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) TargetTargetResponderRecipeResponderRuleDetails {
		return v.Details
	}).(TargetTargetResponderRecipeResponderRuleDetailsOutput)
}

// (Updatable) DetectorTemplate identifier.
func (o TargetTargetResponderRecipeResponderRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o TargetTargetResponderRecipeResponderRuleOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// List of Policy
func (o TargetTargetResponderRecipeResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// (Updatable) Identifier for ResponderRule.
func (o TargetTargetResponderRecipeResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// (Updatable) The current state of the DetectorRule.
func (o TargetTargetResponderRecipeResponderRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Supported Execution Modes
func (o TargetTargetResponderRecipeResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o TargetTargetResponderRecipeResponderRuleOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o TargetTargetResponderRecipeResponderRuleOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// Type of Responder
func (o TargetTargetResponderRecipeResponderRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o TargetTargetResponderRecipeResponderRuleArrayOutput) ToTargetTargetResponderRecipeResponderRuleArrayOutput() TargetTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleArrayOutput) ToTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleArrayOutput) Index(i pulumi.IntInput) TargetTargetResponderRecipeResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetResponderRecipeResponderRule {
		return vs[0].([]TargetTargetResponderRecipeResponderRule)[vs[1].(int)]
	}).(TargetTargetResponderRecipeResponderRuleOutput)
}

type TargetTargetResponderRecipeResponderRuleDetails struct {
	// (Updatable) Base condition object
	Condition *string `pulumi:"condition"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations []TargetTargetResponderRecipeResponderRuleDetailsConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) Execution Mode for ResponderRule
	Mode *string `pulumi:"mode"`
}

// TargetTargetResponderRecipeResponderRuleDetailsInput is an input type that accepts TargetTargetResponderRecipeResponderRuleDetailsArgs and TargetTargetResponderRecipeResponderRuleDetailsOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeResponderRuleDetailsInput` via:
//
//	TargetTargetResponderRecipeResponderRuleDetailsArgs{...}
type TargetTargetResponderRecipeResponderRuleDetailsInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeResponderRuleDetailsOutput() TargetTargetResponderRecipeResponderRuleDetailsOutput
	ToTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(context.Context) TargetTargetResponderRecipeResponderRuleDetailsOutput
}

type TargetTargetResponderRecipeResponderRuleDetailsArgs struct {
	// (Updatable) Base condition object
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// (Updatable) Configurations associated with the ResponderRule
	Configurations TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// (Updatable) Execution Mode for ResponderRule
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (TargetTargetResponderRecipeResponderRuleDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (i TargetTargetResponderRecipeResponderRuleDetailsArgs) ToTargetTargetResponderRecipeResponderRuleDetailsOutput() TargetTargetResponderRecipeResponderRuleDetailsOutput {
	return i.ToTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeResponderRuleDetailsArgs) ToTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeResponderRuleDetailsOutput)
}

type TargetTargetResponderRecipeResponderRuleDetailsOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeResponderRuleDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleDetails)(nil)).Elem()
}

func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) ToTargetTargetResponderRecipeResponderRuleDetailsOutput() TargetTargetResponderRecipeResponderRuleDetailsOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) ToTargetTargetResponderRecipeResponderRuleDetailsOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsOutput {
	return o
}

// (Updatable) Base condition object
func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetails) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// (Updatable) Configurations associated with the ResponderRule
func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) Configurations() TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetails) []TargetTargetResponderRecipeResponderRuleDetailsConfiguration {
		return v.Configurations
	}).(TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetails) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// (Updatable) Execution Mode for ResponderRule
func (o TargetTargetResponderRecipeResponderRuleDetailsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetails) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type TargetTargetResponderRecipeResponderRuleDetailsConfiguration struct {
	// (Updatable) Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// (Updatable) configuration name
	Name string `pulumi:"name"`
	// (Updatable) configuration value
	Value string `pulumi:"value"`
}

// TargetTargetResponderRecipeResponderRuleDetailsConfigurationInput is an input type that accepts TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs and TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeResponderRuleDetailsConfigurationInput` via:
//
//	TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs{...}
type TargetTargetResponderRecipeResponderRuleDetailsConfigurationInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput
	ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput
}

type TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs struct {
	// (Updatable) Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// (Updatable) configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// (Updatable) configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return i.ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput)
}

// TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput is an input type that accepts TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray and TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput values.
// You can construct a concrete instance of `TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput` via:
//
//	TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray{ TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs{...} }
type TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput interface {
	pulumi.Input

	ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput
	ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput
}

type TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray []TargetTargetResponderRecipeResponderRuleDetailsConfigurationInput

func (TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (i TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return i.ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(context.Background())
}

func (i TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput)
}

type TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return o
}

// (Updatable) Unique name of the configuration
func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetailsConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// (Updatable) configuration name
func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetailsConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) configuration value
func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TargetTargetResponderRecipeResponderRuleDetailsConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetTargetResponderRecipeResponderRuleDetailsConfiguration)(nil)).Elem()
}

func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput() TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) ToTargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutputWithContext(ctx context.Context) TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput {
	return o
}

func (o TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput) Index(i pulumi.IntInput) TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetTargetResponderRecipeResponderRuleDetailsConfiguration {
		return vs[0].([]TargetTargetResponderRecipeResponderRuleDetailsConfiguration)[vs[1].(int)]
	}).(TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput)
}

type GetDataMaskRuleTargetSelected struct {
	// Target selection.
	Kind string `pulumi:"kind"`
	// Types of Targets
	Values []string `pulumi:"values"`
}

// GetDataMaskRuleTargetSelectedInput is an input type that accepts GetDataMaskRuleTargetSelectedArgs and GetDataMaskRuleTargetSelectedOutput values.
// You can construct a concrete instance of `GetDataMaskRuleTargetSelectedInput` via:
//
//	GetDataMaskRuleTargetSelectedArgs{...}
type GetDataMaskRuleTargetSelectedInput interface {
	pulumi.Input

	ToGetDataMaskRuleTargetSelectedOutput() GetDataMaskRuleTargetSelectedOutput
	ToGetDataMaskRuleTargetSelectedOutputWithContext(context.Context) GetDataMaskRuleTargetSelectedOutput
}

type GetDataMaskRuleTargetSelectedArgs struct {
	// Target selection.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Types of Targets
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDataMaskRuleTargetSelectedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRuleTargetSelected)(nil)).Elem()
}

func (i GetDataMaskRuleTargetSelectedArgs) ToGetDataMaskRuleTargetSelectedOutput() GetDataMaskRuleTargetSelectedOutput {
	return i.ToGetDataMaskRuleTargetSelectedOutputWithContext(context.Background())
}

func (i GetDataMaskRuleTargetSelectedArgs) ToGetDataMaskRuleTargetSelectedOutputWithContext(ctx context.Context) GetDataMaskRuleTargetSelectedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRuleTargetSelectedOutput)
}

// GetDataMaskRuleTargetSelectedArrayInput is an input type that accepts GetDataMaskRuleTargetSelectedArray and GetDataMaskRuleTargetSelectedArrayOutput values.
// You can construct a concrete instance of `GetDataMaskRuleTargetSelectedArrayInput` via:
//
//	GetDataMaskRuleTargetSelectedArray{ GetDataMaskRuleTargetSelectedArgs{...} }
type GetDataMaskRuleTargetSelectedArrayInput interface {
	pulumi.Input

	ToGetDataMaskRuleTargetSelectedArrayOutput() GetDataMaskRuleTargetSelectedArrayOutput
	ToGetDataMaskRuleTargetSelectedArrayOutputWithContext(context.Context) GetDataMaskRuleTargetSelectedArrayOutput
}

type GetDataMaskRuleTargetSelectedArray []GetDataMaskRuleTargetSelectedInput

func (GetDataMaskRuleTargetSelectedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRuleTargetSelected)(nil)).Elem()
}

func (i GetDataMaskRuleTargetSelectedArray) ToGetDataMaskRuleTargetSelectedArrayOutput() GetDataMaskRuleTargetSelectedArrayOutput {
	return i.ToGetDataMaskRuleTargetSelectedArrayOutputWithContext(context.Background())
}

func (i GetDataMaskRuleTargetSelectedArray) ToGetDataMaskRuleTargetSelectedArrayOutputWithContext(ctx context.Context) GetDataMaskRuleTargetSelectedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRuleTargetSelectedArrayOutput)
}

type GetDataMaskRuleTargetSelectedOutput struct{ *pulumi.OutputState }

func (GetDataMaskRuleTargetSelectedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRuleTargetSelected)(nil)).Elem()
}

func (o GetDataMaskRuleTargetSelectedOutput) ToGetDataMaskRuleTargetSelectedOutput() GetDataMaskRuleTargetSelectedOutput {
	return o
}

func (o GetDataMaskRuleTargetSelectedOutput) ToGetDataMaskRuleTargetSelectedOutputWithContext(ctx context.Context) GetDataMaskRuleTargetSelectedOutput {
	return o
}

// Target selection.
func (o GetDataMaskRuleTargetSelectedOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRuleTargetSelected) string { return v.Kind }).(pulumi.StringOutput)
}

// Types of Targets
func (o GetDataMaskRuleTargetSelectedOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataMaskRuleTargetSelected) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDataMaskRuleTargetSelectedArrayOutput struct{ *pulumi.OutputState }

func (GetDataMaskRuleTargetSelectedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRuleTargetSelected)(nil)).Elem()
}

func (o GetDataMaskRuleTargetSelectedArrayOutput) ToGetDataMaskRuleTargetSelectedArrayOutput() GetDataMaskRuleTargetSelectedArrayOutput {
	return o
}

func (o GetDataMaskRuleTargetSelectedArrayOutput) ToGetDataMaskRuleTargetSelectedArrayOutputWithContext(ctx context.Context) GetDataMaskRuleTargetSelectedArrayOutput {
	return o
}

func (o GetDataMaskRuleTargetSelectedArrayOutput) Index(i pulumi.IntInput) GetDataMaskRuleTargetSelectedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataMaskRuleTargetSelected {
		return vs[0].([]GetDataMaskRuleTargetSelected)[vs[1].(int)]
	}).(GetDataMaskRuleTargetSelectedOutput)
}

type GetDataMaskRulesDataMaskRuleCollection struct {
	Items []GetDataMaskRulesDataMaskRuleCollectionItem `pulumi:"items"`
}

// GetDataMaskRulesDataMaskRuleCollectionInput is an input type that accepts GetDataMaskRulesDataMaskRuleCollectionArgs and GetDataMaskRulesDataMaskRuleCollectionOutput values.
// You can construct a concrete instance of `GetDataMaskRulesDataMaskRuleCollectionInput` via:
//
//	GetDataMaskRulesDataMaskRuleCollectionArgs{...}
type GetDataMaskRulesDataMaskRuleCollectionInput interface {
	pulumi.Input

	ToGetDataMaskRulesDataMaskRuleCollectionOutput() GetDataMaskRulesDataMaskRuleCollectionOutput
	ToGetDataMaskRulesDataMaskRuleCollectionOutputWithContext(context.Context) GetDataMaskRulesDataMaskRuleCollectionOutput
}

type GetDataMaskRulesDataMaskRuleCollectionArgs struct {
	Items GetDataMaskRulesDataMaskRuleCollectionItemArrayInput `pulumi:"items"`
}

func (GetDataMaskRulesDataMaskRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollection)(nil)).Elem()
}

func (i GetDataMaskRulesDataMaskRuleCollectionArgs) ToGetDataMaskRulesDataMaskRuleCollectionOutput() GetDataMaskRulesDataMaskRuleCollectionOutput {
	return i.ToGetDataMaskRulesDataMaskRuleCollectionOutputWithContext(context.Background())
}

func (i GetDataMaskRulesDataMaskRuleCollectionArgs) ToGetDataMaskRulesDataMaskRuleCollectionOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesDataMaskRuleCollectionOutput)
}

// GetDataMaskRulesDataMaskRuleCollectionArrayInput is an input type that accepts GetDataMaskRulesDataMaskRuleCollectionArray and GetDataMaskRulesDataMaskRuleCollectionArrayOutput values.
// You can construct a concrete instance of `GetDataMaskRulesDataMaskRuleCollectionArrayInput` via:
//
//	GetDataMaskRulesDataMaskRuleCollectionArray{ GetDataMaskRulesDataMaskRuleCollectionArgs{...} }
type GetDataMaskRulesDataMaskRuleCollectionArrayInput interface {
	pulumi.Input

	ToGetDataMaskRulesDataMaskRuleCollectionArrayOutput() GetDataMaskRulesDataMaskRuleCollectionArrayOutput
	ToGetDataMaskRulesDataMaskRuleCollectionArrayOutputWithContext(context.Context) GetDataMaskRulesDataMaskRuleCollectionArrayOutput
}

type GetDataMaskRulesDataMaskRuleCollectionArray []GetDataMaskRulesDataMaskRuleCollectionInput

func (GetDataMaskRulesDataMaskRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesDataMaskRuleCollection)(nil)).Elem()
}

func (i GetDataMaskRulesDataMaskRuleCollectionArray) ToGetDataMaskRulesDataMaskRuleCollectionArrayOutput() GetDataMaskRulesDataMaskRuleCollectionArrayOutput {
	return i.ToGetDataMaskRulesDataMaskRuleCollectionArrayOutputWithContext(context.Background())
}

func (i GetDataMaskRulesDataMaskRuleCollectionArray) ToGetDataMaskRulesDataMaskRuleCollectionArrayOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesDataMaskRuleCollectionArrayOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesDataMaskRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollection)(nil)).Elem()
}

func (o GetDataMaskRulesDataMaskRuleCollectionOutput) ToGetDataMaskRulesDataMaskRuleCollectionOutput() GetDataMaskRulesDataMaskRuleCollectionOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionOutput) ToGetDataMaskRulesDataMaskRuleCollectionOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionOutput) Items() GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollection) []GetDataMaskRulesDataMaskRuleCollectionItem {
		return v.Items
	}).(GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesDataMaskRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesDataMaskRuleCollection)(nil)).Elem()
}

func (o GetDataMaskRulesDataMaskRuleCollectionArrayOutput) ToGetDataMaskRulesDataMaskRuleCollectionArrayOutput() GetDataMaskRulesDataMaskRuleCollectionArrayOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionArrayOutput) ToGetDataMaskRulesDataMaskRuleCollectionArrayOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionArrayOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionArrayOutput) Index(i pulumi.IntInput) GetDataMaskRulesDataMaskRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataMaskRulesDataMaskRuleCollection {
		return vs[0].([]GetDataMaskRulesDataMaskRuleCollection)[vs[1].(int)]
	}).(GetDataMaskRulesDataMaskRuleCollectionOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Data Mask Categories
	DataMaskCategories []string `pulumi:"dataMaskCategories"`
	// The status of the dataMaskRule.
	DataMaskRuleStatus string `pulumi:"dataMaskRuleStatus"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The data mask rule description.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// OCID of iamGroup
	IamGroupId string `pulumi:"iamGroupId"`
	// Unique identifier that is immutable on creation
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Target Selection eg select ALL or select on basis of TargetResourceTypes or TargetIds.
	TargetSelecteds []GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected `pulumi:"targetSelecteds"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDataMaskRulesDataMaskRuleCollectionItemInput is an input type that accepts GetDataMaskRulesDataMaskRuleCollectionItemArgs and GetDataMaskRulesDataMaskRuleCollectionItemOutput values.
// You can construct a concrete instance of `GetDataMaskRulesDataMaskRuleCollectionItemInput` via:
//
//	GetDataMaskRulesDataMaskRuleCollectionItemArgs{...}
type GetDataMaskRulesDataMaskRuleCollectionItemInput interface {
	pulumi.Input

	ToGetDataMaskRulesDataMaskRuleCollectionItemOutput() GetDataMaskRulesDataMaskRuleCollectionItemOutput
	ToGetDataMaskRulesDataMaskRuleCollectionItemOutputWithContext(context.Context) GetDataMaskRulesDataMaskRuleCollectionItemOutput
}

type GetDataMaskRulesDataMaskRuleCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Data Mask Categories
	DataMaskCategories pulumi.StringArrayInput `pulumi:"dataMaskCategories"`
	// The status of the dataMaskRule.
	DataMaskRuleStatus pulumi.StringInput `pulumi:"dataMaskRuleStatus"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The data mask rule description.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// OCID of iamGroup
	IamGroupId pulumi.StringInput `pulumi:"iamGroupId"`
	// Unique identifier that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringInput `pulumi:"lifecyleDetails"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// Target Selection eg select ALL or select on basis of TargetResourceTypes or TargetIds.
	TargetSelecteds GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayInput `pulumi:"targetSelecteds"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDataMaskRulesDataMaskRuleCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItem)(nil)).Elem()
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemArgs) ToGetDataMaskRulesDataMaskRuleCollectionItemOutput() GetDataMaskRulesDataMaskRuleCollectionItemOutput {
	return i.ToGetDataMaskRulesDataMaskRuleCollectionItemOutputWithContext(context.Background())
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemArgs) ToGetDataMaskRulesDataMaskRuleCollectionItemOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesDataMaskRuleCollectionItemOutput)
}

// GetDataMaskRulesDataMaskRuleCollectionItemArrayInput is an input type that accepts GetDataMaskRulesDataMaskRuleCollectionItemArray and GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDataMaskRulesDataMaskRuleCollectionItemArrayInput` via:
//
//	GetDataMaskRulesDataMaskRuleCollectionItemArray{ GetDataMaskRulesDataMaskRuleCollectionItemArgs{...} }
type GetDataMaskRulesDataMaskRuleCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutput() GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput
	ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutputWithContext(context.Context) GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput
}

type GetDataMaskRulesDataMaskRuleCollectionItemArray []GetDataMaskRulesDataMaskRuleCollectionItemInput

func (GetDataMaskRulesDataMaskRuleCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesDataMaskRuleCollectionItem)(nil)).Elem()
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemArray) ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutput() GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput {
	return i.ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemArray) ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesDataMaskRuleCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItem)(nil)).Elem()
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemOutput() GetDataMaskRulesDataMaskRuleCollectionItemOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Data Mask Categories
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) DataMaskCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) []string { return v.DataMaskCategories }).(pulumi.StringArrayOutput)
}

// The status of the dataMaskRule.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) DataMaskRuleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.DataMaskRuleStatus }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The data mask rule description.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// OCID of iamGroup
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) IamGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.IamGroupId }).(pulumi.StringOutput)
}

// Unique identifier that is immutable on creation
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// Target Selection eg select ALL or select on basis of TargetResourceTypes or TargetIds.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) TargetSelecteds() GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) []GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected {
		return v.TargetSelecteds
	}).(GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetDataMaskRulesDataMaskRuleCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesDataMaskRuleCollectionItem)(nil)).Elem()
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutput() GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemArrayOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDataMaskRulesDataMaskRuleCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataMaskRulesDataMaskRuleCollectionItem {
		return vs[0].([]GetDataMaskRulesDataMaskRuleCollectionItem)[vs[1].(int)]
	}).(GetDataMaskRulesDataMaskRuleCollectionItemOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected struct {
	// Target selection.
	Kind string `pulumi:"kind"`
	// Types of Targets
	Values []string `pulumi:"values"`
}

// GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedInput is an input type that accepts GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs and GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput values.
// You can construct a concrete instance of `GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedInput` via:
//
//	GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs{...}
type GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedInput interface {
	pulumi.Input

	ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput() GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput
	ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutputWithContext(context.Context) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput
}

type GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs struct {
	// Target selection.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Types of Targets
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected)(nil)).Elem()
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput() GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput {
	return i.ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutputWithContext(context.Background())
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput)
}

// GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayInput is an input type that accepts GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArray and GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput values.
// You can construct a concrete instance of `GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayInput` via:
//
//	GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArray{ GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs{...} }
type GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayInput interface {
	pulumi.Input

	ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput() GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput
	ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutputWithContext(context.Context) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput
}

type GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArray []GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedInput

func (GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected)(nil)).Elem()
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArray) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput() GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput {
	return i.ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutputWithContext(context.Background())
}

func (i GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArray) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected)(nil)).Elem()
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput() GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput {
	return o
}

// Target selection.
func (o GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected) string { return v.Kind }).(pulumi.StringOutput)
}

// Types of Targets
func (o GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected)(nil)).Elem()
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput() GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput) ToGetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutputWithContext(ctx context.Context) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput {
	return o
}

func (o GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput) Index(i pulumi.IntInput) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected {
		return vs[0].([]GetDataMaskRulesDataMaskRuleCollectionItemTargetSelected)[vs[1].(int)]
	}).(GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput)
}

type GetDataMaskRulesFilter struct {
	Name  string `pulumi:"name"`
	Regex *bool  `pulumi:"regex"`
	// Types of Targets
	Values []string `pulumi:"values"`
}

// GetDataMaskRulesFilterInput is an input type that accepts GetDataMaskRulesFilterArgs and GetDataMaskRulesFilterOutput values.
// You can construct a concrete instance of `GetDataMaskRulesFilterInput` via:
//
//	GetDataMaskRulesFilterArgs{...}
type GetDataMaskRulesFilterInput interface {
	pulumi.Input

	ToGetDataMaskRulesFilterOutput() GetDataMaskRulesFilterOutput
	ToGetDataMaskRulesFilterOutputWithContext(context.Context) GetDataMaskRulesFilterOutput
}

type GetDataMaskRulesFilterArgs struct {
	Name  pulumi.StringInput  `pulumi:"name"`
	Regex pulumi.BoolPtrInput `pulumi:"regex"`
	// Types of Targets
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDataMaskRulesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesFilter)(nil)).Elem()
}

func (i GetDataMaskRulesFilterArgs) ToGetDataMaskRulesFilterOutput() GetDataMaskRulesFilterOutput {
	return i.ToGetDataMaskRulesFilterOutputWithContext(context.Background())
}

func (i GetDataMaskRulesFilterArgs) ToGetDataMaskRulesFilterOutputWithContext(ctx context.Context) GetDataMaskRulesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesFilterOutput)
}

// GetDataMaskRulesFilterArrayInput is an input type that accepts GetDataMaskRulesFilterArray and GetDataMaskRulesFilterArrayOutput values.
// You can construct a concrete instance of `GetDataMaskRulesFilterArrayInput` via:
//
//	GetDataMaskRulesFilterArray{ GetDataMaskRulesFilterArgs{...} }
type GetDataMaskRulesFilterArrayInput interface {
	pulumi.Input

	ToGetDataMaskRulesFilterArrayOutput() GetDataMaskRulesFilterArrayOutput
	ToGetDataMaskRulesFilterArrayOutputWithContext(context.Context) GetDataMaskRulesFilterArrayOutput
}

type GetDataMaskRulesFilterArray []GetDataMaskRulesFilterInput

func (GetDataMaskRulesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesFilter)(nil)).Elem()
}

func (i GetDataMaskRulesFilterArray) ToGetDataMaskRulesFilterArrayOutput() GetDataMaskRulesFilterArrayOutput {
	return i.ToGetDataMaskRulesFilterArrayOutputWithContext(context.Background())
}

func (i GetDataMaskRulesFilterArray) ToGetDataMaskRulesFilterArrayOutputWithContext(ctx context.Context) GetDataMaskRulesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataMaskRulesFilterArrayOutput)
}

type GetDataMaskRulesFilterOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataMaskRulesFilter)(nil)).Elem()
}

func (o GetDataMaskRulesFilterOutput) ToGetDataMaskRulesFilterOutput() GetDataMaskRulesFilterOutput {
	return o
}

func (o GetDataMaskRulesFilterOutput) ToGetDataMaskRulesFilterOutputWithContext(ctx context.Context) GetDataMaskRulesFilterOutput {
	return o
}

func (o GetDataMaskRulesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataMaskRulesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataMaskRulesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDataMaskRulesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

// Types of Targets
func (o GetDataMaskRulesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataMaskRulesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDataMaskRulesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDataMaskRulesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataMaskRulesFilter)(nil)).Elem()
}

func (o GetDataMaskRulesFilterArrayOutput) ToGetDataMaskRulesFilterArrayOutput() GetDataMaskRulesFilterArrayOutput {
	return o
}

func (o GetDataMaskRulesFilterArrayOutput) ToGetDataMaskRulesFilterArrayOutputWithContext(ctx context.Context) GetDataMaskRulesFilterArrayOutput {
	return o
}

func (o GetDataMaskRulesFilterArrayOutput) Index(i pulumi.IntInput) GetDataMaskRulesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataMaskRulesFilter {
		return vs[0].([]GetDataMaskRulesFilter)[vs[1].(int)]
	}).(GetDataMaskRulesFilterOutput)
}

type GetDataSourceDataSourceDetail struct {
	// The additional entities count used for data source query.
	AdditionalEntitiesCount int `pulumi:"additionalEntitiesCount"`
	// Possible type of dataSourceFeed Provider(LoggingQuery)
	DataSourceFeedProvider string `pulumi:"dataSourceFeedProvider"`
	// Interval in minutes that query is run periodically.
	IntervalInMinutes int `pulumi:"intervalInMinutes"`
	// Additional details specific to the data source type (Sighting/Insight).
	LoggingQueryDetails []GetDataSourceDataSourceDetailLoggingQueryDetail `pulumi:"loggingQueryDetails"`
	// Logging query type for data source (Sighting/Insight)
	LoggingQueryType string `pulumi:"loggingQueryType"`
	// Operator used in Data Soruce
	Operator string `pulumi:"operator"`
	// The continuous query expression that is run periodically.
	Query string `pulumi:"query"`
	// Time when the query can start, if not specified it can start immediately.
	QueryStartTimes []GetDataSourceDataSourceDetailQueryStartTime `pulumi:"queryStartTimes"`
	// Logging Query regions
	Regions []string `pulumi:"regions"`
	// The integer value that must be exceeded, fall below or equal to (depending on the operator), the query result to trigger an event.
	Threshold int `pulumi:"threshold"`
}

// GetDataSourceDataSourceDetailInput is an input type that accepts GetDataSourceDataSourceDetailArgs and GetDataSourceDataSourceDetailOutput values.
// You can construct a concrete instance of `GetDataSourceDataSourceDetailInput` via:
//
//	GetDataSourceDataSourceDetailArgs{...}
type GetDataSourceDataSourceDetailInput interface {
	pulumi.Input

	ToGetDataSourceDataSourceDetailOutput() GetDataSourceDataSourceDetailOutput
	ToGetDataSourceDataSourceDetailOutputWithContext(context.Context) GetDataSourceDataSourceDetailOutput
}

type GetDataSourceDataSourceDetailArgs struct {
	// The additional entities count used for data source query.
	AdditionalEntitiesCount pulumi.IntInput `pulumi:"additionalEntitiesCount"`
	// Possible type of dataSourceFeed Provider(LoggingQuery)
	DataSourceFeedProvider pulumi.StringInput `pulumi:"dataSourceFeedProvider"`
	// Interval in minutes that query is run periodically.
	IntervalInMinutes pulumi.IntInput `pulumi:"intervalInMinutes"`
	// Additional details specific to the data source type (Sighting/Insight).
	LoggingQueryDetails GetDataSourceDataSourceDetailLoggingQueryDetailArrayInput `pulumi:"loggingQueryDetails"`
	// Logging query type for data source (Sighting/Insight)
	LoggingQueryType pulumi.StringInput `pulumi:"loggingQueryType"`
	// Operator used in Data Soruce
	Operator pulumi.StringInput `pulumi:"operator"`
	// The continuous query expression that is run periodically.
	Query pulumi.StringInput `pulumi:"query"`
	// Time when the query can start, if not specified it can start immediately.
	QueryStartTimes GetDataSourceDataSourceDetailQueryStartTimeArrayInput `pulumi:"queryStartTimes"`
	// Logging Query regions
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// The integer value that must be exceeded, fall below or equal to (depending on the operator), the query result to trigger an event.
	Threshold pulumi.IntInput `pulumi:"threshold"`
}

func (GetDataSourceDataSourceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceDataSourceDetail)(nil)).Elem()
}

func (i GetDataSourceDataSourceDetailArgs) ToGetDataSourceDataSourceDetailOutput() GetDataSourceDataSourceDetailOutput {
	return i.ToGetDataSourceDataSourceDetailOutputWithContext(context.Background())
}

func (i GetDataSourceDataSourceDetailArgs) ToGetDataSourceDataSourceDetailOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceDataSourceDetailOutput)
}

// GetDataSourceDataSourceDetailArrayInput is an input type that accepts GetDataSourceDataSourceDetailArray and GetDataSourceDataSourceDetailArrayOutput values.
// You can construct a concrete instance of `GetDataSourceDataSourceDetailArrayInput` via:
//
//	GetDataSourceDataSourceDetailArray{ GetDataSourceDataSourceDetailArgs{...} }
type GetDataSourceDataSourceDetailArrayInput interface {
	pulumi.Input

	ToGetDataSourceDataSourceDetailArrayOutput() GetDataSourceDataSourceDetailArrayOutput
	ToGetDataSourceDataSourceDetailArrayOutputWithContext(context.Context) GetDataSourceDataSourceDetailArrayOutput
}

type GetDataSourceDataSourceDetailArray []GetDataSourceDataSourceDetailInput

func (GetDataSourceDataSourceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceDataSourceDetail)(nil)).Elem()
}

func (i GetDataSourceDataSourceDetailArray) ToGetDataSourceDataSourceDetailArrayOutput() GetDataSourceDataSourceDetailArrayOutput {
	return i.ToGetDataSourceDataSourceDetailArrayOutputWithContext(context.Background())
}

func (i GetDataSourceDataSourceDetailArray) ToGetDataSourceDataSourceDetailArrayOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceDataSourceDetailArrayOutput)
}

type GetDataSourceDataSourceDetailOutput struct{ *pulumi.OutputState }

func (GetDataSourceDataSourceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceDataSourceDetail)(nil)).Elem()
}

func (o GetDataSourceDataSourceDetailOutput) ToGetDataSourceDataSourceDetailOutput() GetDataSourceDataSourceDetailOutput {
	return o
}

func (o GetDataSourceDataSourceDetailOutput) ToGetDataSourceDataSourceDetailOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailOutput {
	return o
}

// The additional entities count used for data source query.
func (o GetDataSourceDataSourceDetailOutput) AdditionalEntitiesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetail) int { return v.AdditionalEntitiesCount }).(pulumi.IntOutput)
}

// Possible type of dataSourceFeed Provider(LoggingQuery)
func (o GetDataSourceDataSourceDetailOutput) DataSourceFeedProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetail) string { return v.DataSourceFeedProvider }).(pulumi.StringOutput)
}

// Interval in minutes that query is run periodically.
func (o GetDataSourceDataSourceDetailOutput) IntervalInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetail) int { return v.IntervalInMinutes }).(pulumi.IntOutput)
}

// Additional details specific to the data source type (Sighting/Insight).
func (o GetDataSourceDataSourceDetailOutput) LoggingQueryDetails() GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetail) []GetDataSourceDataSourceDetailLoggingQueryDetail {
		return v.LoggingQueryDetails
	}).(GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput)
}

// Logging query type for data source (Sighting/Insight)
func (o GetDataSourceDataSourceDetailOutput) LoggingQueryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetail) string { return v.LoggingQueryType }).(pulumi.StringOutput)
}

// Operator used in Data Soruce
func (o GetDataSourceDataSourceDetailOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetail) string { return v.Operator }).(pulumi.StringOutput)
}

// The continuous query expression that is run periodically.
func (o GetDataSourceDataSourceDetailOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetail) string { return v.Query }).(pulumi.StringOutput)
}

// Time when the query can start, if not specified it can start immediately.
func (o GetDataSourceDataSourceDetailOutput) QueryStartTimes() GetDataSourceDataSourceDetailQueryStartTimeArrayOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetail) []GetDataSourceDataSourceDetailQueryStartTime {
		return v.QueryStartTimes
	}).(GetDataSourceDataSourceDetailQueryStartTimeArrayOutput)
}

// Logging Query regions
func (o GetDataSourceDataSourceDetailOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetail) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// The integer value that must be exceeded, fall below or equal to (depending on the operator), the query result to trigger an event.
func (o GetDataSourceDataSourceDetailOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetail) int { return v.Threshold }).(pulumi.IntOutput)
}

type GetDataSourceDataSourceDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceDataSourceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceDataSourceDetail)(nil)).Elem()
}

func (o GetDataSourceDataSourceDetailArrayOutput) ToGetDataSourceDataSourceDetailArrayOutput() GetDataSourceDataSourceDetailArrayOutput {
	return o
}

func (o GetDataSourceDataSourceDetailArrayOutput) ToGetDataSourceDataSourceDetailArrayOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailArrayOutput {
	return o
}

func (o GetDataSourceDataSourceDetailArrayOutput) Index(i pulumi.IntInput) GetDataSourceDataSourceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceDataSourceDetail {
		return vs[0].([]GetDataSourceDataSourceDetail)[vs[1].(int)]
	}).(GetDataSourceDataSourceDetailOutput)
}

type GetDataSourceDataSourceDetailLoggingQueryDetail struct {
	// The key entities count used for data source query
	KeyEntitiesCount int `pulumi:"keyEntitiesCount"`
	// Logging query type for data source (Sighting/Insight)
	LoggingQueryType string `pulumi:"loggingQueryType"`
}

// GetDataSourceDataSourceDetailLoggingQueryDetailInput is an input type that accepts GetDataSourceDataSourceDetailLoggingQueryDetailArgs and GetDataSourceDataSourceDetailLoggingQueryDetailOutput values.
// You can construct a concrete instance of `GetDataSourceDataSourceDetailLoggingQueryDetailInput` via:
//
//	GetDataSourceDataSourceDetailLoggingQueryDetailArgs{...}
type GetDataSourceDataSourceDetailLoggingQueryDetailInput interface {
	pulumi.Input

	ToGetDataSourceDataSourceDetailLoggingQueryDetailOutput() GetDataSourceDataSourceDetailLoggingQueryDetailOutput
	ToGetDataSourceDataSourceDetailLoggingQueryDetailOutputWithContext(context.Context) GetDataSourceDataSourceDetailLoggingQueryDetailOutput
}

type GetDataSourceDataSourceDetailLoggingQueryDetailArgs struct {
	// The key entities count used for data source query
	KeyEntitiesCount pulumi.IntInput `pulumi:"keyEntitiesCount"`
	// Logging query type for data source (Sighting/Insight)
	LoggingQueryType pulumi.StringInput `pulumi:"loggingQueryType"`
}

func (GetDataSourceDataSourceDetailLoggingQueryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceDataSourceDetailLoggingQueryDetail)(nil)).Elem()
}

func (i GetDataSourceDataSourceDetailLoggingQueryDetailArgs) ToGetDataSourceDataSourceDetailLoggingQueryDetailOutput() GetDataSourceDataSourceDetailLoggingQueryDetailOutput {
	return i.ToGetDataSourceDataSourceDetailLoggingQueryDetailOutputWithContext(context.Background())
}

func (i GetDataSourceDataSourceDetailLoggingQueryDetailArgs) ToGetDataSourceDataSourceDetailLoggingQueryDetailOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailLoggingQueryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceDataSourceDetailLoggingQueryDetailOutput)
}

// GetDataSourceDataSourceDetailLoggingQueryDetailArrayInput is an input type that accepts GetDataSourceDataSourceDetailLoggingQueryDetailArray and GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput values.
// You can construct a concrete instance of `GetDataSourceDataSourceDetailLoggingQueryDetailArrayInput` via:
//
//	GetDataSourceDataSourceDetailLoggingQueryDetailArray{ GetDataSourceDataSourceDetailLoggingQueryDetailArgs{...} }
type GetDataSourceDataSourceDetailLoggingQueryDetailArrayInput interface {
	pulumi.Input

	ToGetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput() GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput
	ToGetDataSourceDataSourceDetailLoggingQueryDetailArrayOutputWithContext(context.Context) GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput
}

type GetDataSourceDataSourceDetailLoggingQueryDetailArray []GetDataSourceDataSourceDetailLoggingQueryDetailInput

func (GetDataSourceDataSourceDetailLoggingQueryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceDataSourceDetailLoggingQueryDetail)(nil)).Elem()
}

func (i GetDataSourceDataSourceDetailLoggingQueryDetailArray) ToGetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput() GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput {
	return i.ToGetDataSourceDataSourceDetailLoggingQueryDetailArrayOutputWithContext(context.Background())
}

func (i GetDataSourceDataSourceDetailLoggingQueryDetailArray) ToGetDataSourceDataSourceDetailLoggingQueryDetailArrayOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput)
}

type GetDataSourceDataSourceDetailLoggingQueryDetailOutput struct{ *pulumi.OutputState }

func (GetDataSourceDataSourceDetailLoggingQueryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceDataSourceDetailLoggingQueryDetail)(nil)).Elem()
}

func (o GetDataSourceDataSourceDetailLoggingQueryDetailOutput) ToGetDataSourceDataSourceDetailLoggingQueryDetailOutput() GetDataSourceDataSourceDetailLoggingQueryDetailOutput {
	return o
}

func (o GetDataSourceDataSourceDetailLoggingQueryDetailOutput) ToGetDataSourceDataSourceDetailLoggingQueryDetailOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailLoggingQueryDetailOutput {
	return o
}

// The key entities count used for data source query
func (o GetDataSourceDataSourceDetailLoggingQueryDetailOutput) KeyEntitiesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetailLoggingQueryDetail) int { return v.KeyEntitiesCount }).(pulumi.IntOutput)
}

// Logging query type for data source (Sighting/Insight)
func (o GetDataSourceDataSourceDetailLoggingQueryDetailOutput) LoggingQueryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetailLoggingQueryDetail) string { return v.LoggingQueryType }).(pulumi.StringOutput)
}

type GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceDataSourceDetailLoggingQueryDetail)(nil)).Elem()
}

func (o GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput) ToGetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput() GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput {
	return o
}

func (o GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput) ToGetDataSourceDataSourceDetailLoggingQueryDetailArrayOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput {
	return o
}

func (o GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput) Index(i pulumi.IntInput) GetDataSourceDataSourceDetailLoggingQueryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceDataSourceDetailLoggingQueryDetail {
		return vs[0].([]GetDataSourceDataSourceDetailLoggingQueryDetail)[vs[1].(int)]
	}).(GetDataSourceDataSourceDetailLoggingQueryDetailOutput)
}

type GetDataSourceDataSourceDetailQueryStartTime struct {
	// Time when the query can start, if not specified it can start immediately.
	QueryStartTime string `pulumi:"queryStartTime"`
	// policy used for deciding the query start time
	StartPolicyType string `pulumi:"startPolicyType"`
}

// GetDataSourceDataSourceDetailQueryStartTimeInput is an input type that accepts GetDataSourceDataSourceDetailQueryStartTimeArgs and GetDataSourceDataSourceDetailQueryStartTimeOutput values.
// You can construct a concrete instance of `GetDataSourceDataSourceDetailQueryStartTimeInput` via:
//
//	GetDataSourceDataSourceDetailQueryStartTimeArgs{...}
type GetDataSourceDataSourceDetailQueryStartTimeInput interface {
	pulumi.Input

	ToGetDataSourceDataSourceDetailQueryStartTimeOutput() GetDataSourceDataSourceDetailQueryStartTimeOutput
	ToGetDataSourceDataSourceDetailQueryStartTimeOutputWithContext(context.Context) GetDataSourceDataSourceDetailQueryStartTimeOutput
}

type GetDataSourceDataSourceDetailQueryStartTimeArgs struct {
	// Time when the query can start, if not specified it can start immediately.
	QueryStartTime pulumi.StringInput `pulumi:"queryStartTime"`
	// policy used for deciding the query start time
	StartPolicyType pulumi.StringInput `pulumi:"startPolicyType"`
}

func (GetDataSourceDataSourceDetailQueryStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceDataSourceDetailQueryStartTime)(nil)).Elem()
}

func (i GetDataSourceDataSourceDetailQueryStartTimeArgs) ToGetDataSourceDataSourceDetailQueryStartTimeOutput() GetDataSourceDataSourceDetailQueryStartTimeOutput {
	return i.ToGetDataSourceDataSourceDetailQueryStartTimeOutputWithContext(context.Background())
}

func (i GetDataSourceDataSourceDetailQueryStartTimeArgs) ToGetDataSourceDataSourceDetailQueryStartTimeOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailQueryStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceDataSourceDetailQueryStartTimeOutput)
}

// GetDataSourceDataSourceDetailQueryStartTimeArrayInput is an input type that accepts GetDataSourceDataSourceDetailQueryStartTimeArray and GetDataSourceDataSourceDetailQueryStartTimeArrayOutput values.
// You can construct a concrete instance of `GetDataSourceDataSourceDetailQueryStartTimeArrayInput` via:
//
//	GetDataSourceDataSourceDetailQueryStartTimeArray{ GetDataSourceDataSourceDetailQueryStartTimeArgs{...} }
type GetDataSourceDataSourceDetailQueryStartTimeArrayInput interface {
	pulumi.Input

	ToGetDataSourceDataSourceDetailQueryStartTimeArrayOutput() GetDataSourceDataSourceDetailQueryStartTimeArrayOutput
	ToGetDataSourceDataSourceDetailQueryStartTimeArrayOutputWithContext(context.Context) GetDataSourceDataSourceDetailQueryStartTimeArrayOutput
}

type GetDataSourceDataSourceDetailQueryStartTimeArray []GetDataSourceDataSourceDetailQueryStartTimeInput

func (GetDataSourceDataSourceDetailQueryStartTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceDataSourceDetailQueryStartTime)(nil)).Elem()
}

func (i GetDataSourceDataSourceDetailQueryStartTimeArray) ToGetDataSourceDataSourceDetailQueryStartTimeArrayOutput() GetDataSourceDataSourceDetailQueryStartTimeArrayOutput {
	return i.ToGetDataSourceDataSourceDetailQueryStartTimeArrayOutputWithContext(context.Background())
}

func (i GetDataSourceDataSourceDetailQueryStartTimeArray) ToGetDataSourceDataSourceDetailQueryStartTimeArrayOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailQueryStartTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceDataSourceDetailQueryStartTimeArrayOutput)
}

type GetDataSourceDataSourceDetailQueryStartTimeOutput struct{ *pulumi.OutputState }

func (GetDataSourceDataSourceDetailQueryStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceDataSourceDetailQueryStartTime)(nil)).Elem()
}

func (o GetDataSourceDataSourceDetailQueryStartTimeOutput) ToGetDataSourceDataSourceDetailQueryStartTimeOutput() GetDataSourceDataSourceDetailQueryStartTimeOutput {
	return o
}

func (o GetDataSourceDataSourceDetailQueryStartTimeOutput) ToGetDataSourceDataSourceDetailQueryStartTimeOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailQueryStartTimeOutput {
	return o
}

// Time when the query can start, if not specified it can start immediately.
func (o GetDataSourceDataSourceDetailQueryStartTimeOutput) QueryStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetailQueryStartTime) string { return v.QueryStartTime }).(pulumi.StringOutput)
}

// policy used for deciding the query start time
func (o GetDataSourceDataSourceDetailQueryStartTimeOutput) StartPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetailQueryStartTime) string { return v.StartPolicyType }).(pulumi.StringOutput)
}

type GetDataSourceDataSourceDetailQueryStartTimeArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceDataSourceDetailQueryStartTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceDataSourceDetailQueryStartTime)(nil)).Elem()
}

func (o GetDataSourceDataSourceDetailQueryStartTimeArrayOutput) ToGetDataSourceDataSourceDetailQueryStartTimeArrayOutput() GetDataSourceDataSourceDetailQueryStartTimeArrayOutput {
	return o
}

func (o GetDataSourceDataSourceDetailQueryStartTimeArrayOutput) ToGetDataSourceDataSourceDetailQueryStartTimeArrayOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetailQueryStartTimeArrayOutput {
	return o
}

func (o GetDataSourceDataSourceDetailQueryStartTimeArrayOutput) Index(i pulumi.IntInput) GetDataSourceDataSourceDetailQueryStartTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceDataSourceDetailQueryStartTime {
		return vs[0].([]GetDataSourceDataSourceDetailQueryStartTime)[vs[1].(int)]
	}).(GetDataSourceDataSourceDetailQueryStartTimeOutput)
}

type GetDataSourceDataSourceDetectorMappingInfo struct {
	// Id of the attached detectorRecipeId to the Data Source.
	DetectorRecipeId string `pulumi:"detectorRecipeId"`
	// Id of the attached detectorRuleId to the Data Source.
	DetectorRuleId string `pulumi:"detectorRuleId"`
}

// GetDataSourceDataSourceDetectorMappingInfoInput is an input type that accepts GetDataSourceDataSourceDetectorMappingInfoArgs and GetDataSourceDataSourceDetectorMappingInfoOutput values.
// You can construct a concrete instance of `GetDataSourceDataSourceDetectorMappingInfoInput` via:
//
//	GetDataSourceDataSourceDetectorMappingInfoArgs{...}
type GetDataSourceDataSourceDetectorMappingInfoInput interface {
	pulumi.Input

	ToGetDataSourceDataSourceDetectorMappingInfoOutput() GetDataSourceDataSourceDetectorMappingInfoOutput
	ToGetDataSourceDataSourceDetectorMappingInfoOutputWithContext(context.Context) GetDataSourceDataSourceDetectorMappingInfoOutput
}

type GetDataSourceDataSourceDetectorMappingInfoArgs struct {
	// Id of the attached detectorRecipeId to the Data Source.
	DetectorRecipeId pulumi.StringInput `pulumi:"detectorRecipeId"`
	// Id of the attached detectorRuleId to the Data Source.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
}

func (GetDataSourceDataSourceDetectorMappingInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (i GetDataSourceDataSourceDetectorMappingInfoArgs) ToGetDataSourceDataSourceDetectorMappingInfoOutput() GetDataSourceDataSourceDetectorMappingInfoOutput {
	return i.ToGetDataSourceDataSourceDetectorMappingInfoOutputWithContext(context.Background())
}

func (i GetDataSourceDataSourceDetectorMappingInfoArgs) ToGetDataSourceDataSourceDetectorMappingInfoOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetectorMappingInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceDataSourceDetectorMappingInfoOutput)
}

// GetDataSourceDataSourceDetectorMappingInfoArrayInput is an input type that accepts GetDataSourceDataSourceDetectorMappingInfoArray and GetDataSourceDataSourceDetectorMappingInfoArrayOutput values.
// You can construct a concrete instance of `GetDataSourceDataSourceDetectorMappingInfoArrayInput` via:
//
//	GetDataSourceDataSourceDetectorMappingInfoArray{ GetDataSourceDataSourceDetectorMappingInfoArgs{...} }
type GetDataSourceDataSourceDetectorMappingInfoArrayInput interface {
	pulumi.Input

	ToGetDataSourceDataSourceDetectorMappingInfoArrayOutput() GetDataSourceDataSourceDetectorMappingInfoArrayOutput
	ToGetDataSourceDataSourceDetectorMappingInfoArrayOutputWithContext(context.Context) GetDataSourceDataSourceDetectorMappingInfoArrayOutput
}

type GetDataSourceDataSourceDetectorMappingInfoArray []GetDataSourceDataSourceDetectorMappingInfoInput

func (GetDataSourceDataSourceDetectorMappingInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (i GetDataSourceDataSourceDetectorMappingInfoArray) ToGetDataSourceDataSourceDetectorMappingInfoArrayOutput() GetDataSourceDataSourceDetectorMappingInfoArrayOutput {
	return i.ToGetDataSourceDataSourceDetectorMappingInfoArrayOutputWithContext(context.Background())
}

func (i GetDataSourceDataSourceDetectorMappingInfoArray) ToGetDataSourceDataSourceDetectorMappingInfoArrayOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetectorMappingInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceDataSourceDetectorMappingInfoArrayOutput)
}

type GetDataSourceDataSourceDetectorMappingInfoOutput struct{ *pulumi.OutputState }

func (GetDataSourceDataSourceDetectorMappingInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (o GetDataSourceDataSourceDetectorMappingInfoOutput) ToGetDataSourceDataSourceDetectorMappingInfoOutput() GetDataSourceDataSourceDetectorMappingInfoOutput {
	return o
}

func (o GetDataSourceDataSourceDetectorMappingInfoOutput) ToGetDataSourceDataSourceDetectorMappingInfoOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetectorMappingInfoOutput {
	return o
}

// Id of the attached detectorRecipeId to the Data Source.
func (o GetDataSourceDataSourceDetectorMappingInfoOutput) DetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetectorMappingInfo) string { return v.DetectorRecipeId }).(pulumi.StringOutput)
}

// Id of the attached detectorRuleId to the Data Source.
func (o GetDataSourceDataSourceDetectorMappingInfoOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceDataSourceDetectorMappingInfo) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

type GetDataSourceDataSourceDetectorMappingInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceDataSourceDetectorMappingInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (o GetDataSourceDataSourceDetectorMappingInfoArrayOutput) ToGetDataSourceDataSourceDetectorMappingInfoArrayOutput() GetDataSourceDataSourceDetectorMappingInfoArrayOutput {
	return o
}

func (o GetDataSourceDataSourceDetectorMappingInfoArrayOutput) ToGetDataSourceDataSourceDetectorMappingInfoArrayOutputWithContext(ctx context.Context) GetDataSourceDataSourceDetectorMappingInfoArrayOutput {
	return o
}

func (o GetDataSourceDataSourceDetectorMappingInfoArrayOutput) Index(i pulumi.IntInput) GetDataSourceDataSourceDetectorMappingInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceDataSourceDetectorMappingInfo {
		return vs[0].([]GetDataSourceDataSourceDetectorMappingInfo)[vs[1].(int)]
	}).(GetDataSourceDataSourceDetectorMappingInfoOutput)
}

type GetDataSourceEventItem struct {
	// Data source event comments
	Comments string `pulumi:"comments"`
	// DataSource OCID
	DataSourceId string `pulumi:"dataSourceId"`
	// Data source event date time
	EventDate string `pulumi:"eventDate"`
	// Event info of a data source.
	EventInfos []GetDataSourceEventItemEventInfo `pulumi:"eventInfos"`
	// A filter to return only resource their region matches the given region.
	Region string `pulumi:"region"`
	// Current data source event info status
	Status string `pulumi:"status"`
	// Data source event created time
	TimeCreated string `pulumi:"timeCreated"`
}

// GetDataSourceEventItemInput is an input type that accepts GetDataSourceEventItemArgs and GetDataSourceEventItemOutput values.
// You can construct a concrete instance of `GetDataSourceEventItemInput` via:
//
//	GetDataSourceEventItemArgs{...}
type GetDataSourceEventItemInput interface {
	pulumi.Input

	ToGetDataSourceEventItemOutput() GetDataSourceEventItemOutput
	ToGetDataSourceEventItemOutputWithContext(context.Context) GetDataSourceEventItemOutput
}

type GetDataSourceEventItemArgs struct {
	// Data source event comments
	Comments pulumi.StringInput `pulumi:"comments"`
	// DataSource OCID
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// Data source event date time
	EventDate pulumi.StringInput `pulumi:"eventDate"`
	// Event info of a data source.
	EventInfos GetDataSourceEventItemEventInfoArrayInput `pulumi:"eventInfos"`
	// A filter to return only resource their region matches the given region.
	Region pulumi.StringInput `pulumi:"region"`
	// Current data source event info status
	Status pulumi.StringInput `pulumi:"status"`
	// Data source event created time
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
}

func (GetDataSourceEventItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventItem)(nil)).Elem()
}

func (i GetDataSourceEventItemArgs) ToGetDataSourceEventItemOutput() GetDataSourceEventItemOutput {
	return i.ToGetDataSourceEventItemOutputWithContext(context.Background())
}

func (i GetDataSourceEventItemArgs) ToGetDataSourceEventItemOutputWithContext(ctx context.Context) GetDataSourceEventItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventItemOutput)
}

// GetDataSourceEventItemArrayInput is an input type that accepts GetDataSourceEventItemArray and GetDataSourceEventItemArrayOutput values.
// You can construct a concrete instance of `GetDataSourceEventItemArrayInput` via:
//
//	GetDataSourceEventItemArray{ GetDataSourceEventItemArgs{...} }
type GetDataSourceEventItemArrayInput interface {
	pulumi.Input

	ToGetDataSourceEventItemArrayOutput() GetDataSourceEventItemArrayOutput
	ToGetDataSourceEventItemArrayOutputWithContext(context.Context) GetDataSourceEventItemArrayOutput
}

type GetDataSourceEventItemArray []GetDataSourceEventItemInput

func (GetDataSourceEventItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventItem)(nil)).Elem()
}

func (i GetDataSourceEventItemArray) ToGetDataSourceEventItemArrayOutput() GetDataSourceEventItemArrayOutput {
	return i.ToGetDataSourceEventItemArrayOutputWithContext(context.Background())
}

func (i GetDataSourceEventItemArray) ToGetDataSourceEventItemArrayOutputWithContext(ctx context.Context) GetDataSourceEventItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventItemArrayOutput)
}

type GetDataSourceEventItemOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventItem)(nil)).Elem()
}

func (o GetDataSourceEventItemOutput) ToGetDataSourceEventItemOutput() GetDataSourceEventItemOutput {
	return o
}

func (o GetDataSourceEventItemOutput) ToGetDataSourceEventItemOutputWithContext(ctx context.Context) GetDataSourceEventItemOutput {
	return o
}

// Data source event comments
func (o GetDataSourceEventItemOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventItem) string { return v.Comments }).(pulumi.StringOutput)
}

// DataSource OCID
func (o GetDataSourceEventItemOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventItem) string { return v.DataSourceId }).(pulumi.StringOutput)
}

// Data source event date time
func (o GetDataSourceEventItemOutput) EventDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventItem) string { return v.EventDate }).(pulumi.StringOutput)
}

// Event info of a data source.
func (o GetDataSourceEventItemOutput) EventInfos() GetDataSourceEventItemEventInfoArrayOutput {
	return o.ApplyT(func(v GetDataSourceEventItem) []GetDataSourceEventItemEventInfo { return v.EventInfos }).(GetDataSourceEventItemEventInfoArrayOutput)
}

// A filter to return only resource their region matches the given region.
func (o GetDataSourceEventItemOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventItem) string { return v.Region }).(pulumi.StringOutput)
}

// Current data source event info status
func (o GetDataSourceEventItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventItem) string { return v.Status }).(pulumi.StringOutput)
}

// Data source event created time
func (o GetDataSourceEventItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

type GetDataSourceEventItemArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventItem)(nil)).Elem()
}

func (o GetDataSourceEventItemArrayOutput) ToGetDataSourceEventItemArrayOutput() GetDataSourceEventItemArrayOutput {
	return o
}

func (o GetDataSourceEventItemArrayOutput) ToGetDataSourceEventItemArrayOutputWithContext(ctx context.Context) GetDataSourceEventItemArrayOutput {
	return o
}

func (o GetDataSourceEventItemArrayOutput) Index(i pulumi.IntInput) GetDataSourceEventItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceEventItem {
		return vs[0].([]GetDataSourceEventItem)[vs[1].(int)]
	}).(GetDataSourceEventItemOutput)
}

type GetDataSourceEventItemEventInfo struct {
	// Possible type of dataSourceFeed Provider(LoggingQuery)
	DataSourceFeedProvider string `pulumi:"dataSourceFeedProvider"`
	LogResult              string `pulumi:"logResult"`
	ObservedValue          string `pulumi:"observedValue"`
	Operator               string `pulumi:"operator"`
	TriggerValue           string `pulumi:"triggerValue"`
}

// GetDataSourceEventItemEventInfoInput is an input type that accepts GetDataSourceEventItemEventInfoArgs and GetDataSourceEventItemEventInfoOutput values.
// You can construct a concrete instance of `GetDataSourceEventItemEventInfoInput` via:
//
//	GetDataSourceEventItemEventInfoArgs{...}
type GetDataSourceEventItemEventInfoInput interface {
	pulumi.Input

	ToGetDataSourceEventItemEventInfoOutput() GetDataSourceEventItemEventInfoOutput
	ToGetDataSourceEventItemEventInfoOutputWithContext(context.Context) GetDataSourceEventItemEventInfoOutput
}

type GetDataSourceEventItemEventInfoArgs struct {
	// Possible type of dataSourceFeed Provider(LoggingQuery)
	DataSourceFeedProvider pulumi.StringInput `pulumi:"dataSourceFeedProvider"`
	LogResult              pulumi.StringInput `pulumi:"logResult"`
	ObservedValue          pulumi.StringInput `pulumi:"observedValue"`
	Operator               pulumi.StringInput `pulumi:"operator"`
	TriggerValue           pulumi.StringInput `pulumi:"triggerValue"`
}

func (GetDataSourceEventItemEventInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventItemEventInfo)(nil)).Elem()
}

func (i GetDataSourceEventItemEventInfoArgs) ToGetDataSourceEventItemEventInfoOutput() GetDataSourceEventItemEventInfoOutput {
	return i.ToGetDataSourceEventItemEventInfoOutputWithContext(context.Background())
}

func (i GetDataSourceEventItemEventInfoArgs) ToGetDataSourceEventItemEventInfoOutputWithContext(ctx context.Context) GetDataSourceEventItemEventInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventItemEventInfoOutput)
}

// GetDataSourceEventItemEventInfoArrayInput is an input type that accepts GetDataSourceEventItemEventInfoArray and GetDataSourceEventItemEventInfoArrayOutput values.
// You can construct a concrete instance of `GetDataSourceEventItemEventInfoArrayInput` via:
//
//	GetDataSourceEventItemEventInfoArray{ GetDataSourceEventItemEventInfoArgs{...} }
type GetDataSourceEventItemEventInfoArrayInput interface {
	pulumi.Input

	ToGetDataSourceEventItemEventInfoArrayOutput() GetDataSourceEventItemEventInfoArrayOutput
	ToGetDataSourceEventItemEventInfoArrayOutputWithContext(context.Context) GetDataSourceEventItemEventInfoArrayOutput
}

type GetDataSourceEventItemEventInfoArray []GetDataSourceEventItemEventInfoInput

func (GetDataSourceEventItemEventInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventItemEventInfo)(nil)).Elem()
}

func (i GetDataSourceEventItemEventInfoArray) ToGetDataSourceEventItemEventInfoArrayOutput() GetDataSourceEventItemEventInfoArrayOutput {
	return i.ToGetDataSourceEventItemEventInfoArrayOutputWithContext(context.Background())
}

func (i GetDataSourceEventItemEventInfoArray) ToGetDataSourceEventItemEventInfoArrayOutputWithContext(ctx context.Context) GetDataSourceEventItemEventInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventItemEventInfoArrayOutput)
}

type GetDataSourceEventItemEventInfoOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventItemEventInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventItemEventInfo)(nil)).Elem()
}

func (o GetDataSourceEventItemEventInfoOutput) ToGetDataSourceEventItemEventInfoOutput() GetDataSourceEventItemEventInfoOutput {
	return o
}

func (o GetDataSourceEventItemEventInfoOutput) ToGetDataSourceEventItemEventInfoOutputWithContext(ctx context.Context) GetDataSourceEventItemEventInfoOutput {
	return o
}

// Possible type of dataSourceFeed Provider(LoggingQuery)
func (o GetDataSourceEventItemEventInfoOutput) DataSourceFeedProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventItemEventInfo) string { return v.DataSourceFeedProvider }).(pulumi.StringOutput)
}

func (o GetDataSourceEventItemEventInfoOutput) LogResult() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventItemEventInfo) string { return v.LogResult }).(pulumi.StringOutput)
}

func (o GetDataSourceEventItemEventInfoOutput) ObservedValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventItemEventInfo) string { return v.ObservedValue }).(pulumi.StringOutput)
}

func (o GetDataSourceEventItemEventInfoOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventItemEventInfo) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetDataSourceEventItemEventInfoOutput) TriggerValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventItemEventInfo) string { return v.TriggerValue }).(pulumi.StringOutput)
}

type GetDataSourceEventItemEventInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventItemEventInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventItemEventInfo)(nil)).Elem()
}

func (o GetDataSourceEventItemEventInfoArrayOutput) ToGetDataSourceEventItemEventInfoArrayOutput() GetDataSourceEventItemEventInfoArrayOutput {
	return o
}

func (o GetDataSourceEventItemEventInfoArrayOutput) ToGetDataSourceEventItemEventInfoArrayOutputWithContext(ctx context.Context) GetDataSourceEventItemEventInfoArrayOutput {
	return o
}

func (o GetDataSourceEventItemEventInfoArrayOutput) Index(i pulumi.IntInput) GetDataSourceEventItemEventInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceEventItemEventInfo {
		return vs[0].([]GetDataSourceEventItemEventInfo)[vs[1].(int)]
	}).(GetDataSourceEventItemEventInfoOutput)
}

type GetDataSourceEventsDataSourceEventCollection struct {
	// List of event related to a DataSource
	Items []GetDataSourceEventsDataSourceEventCollectionItem `pulumi:"items"`
}

// GetDataSourceEventsDataSourceEventCollectionInput is an input type that accepts GetDataSourceEventsDataSourceEventCollectionArgs and GetDataSourceEventsDataSourceEventCollectionOutput values.
// You can construct a concrete instance of `GetDataSourceEventsDataSourceEventCollectionInput` via:
//
//	GetDataSourceEventsDataSourceEventCollectionArgs{...}
type GetDataSourceEventsDataSourceEventCollectionInput interface {
	pulumi.Input

	ToGetDataSourceEventsDataSourceEventCollectionOutput() GetDataSourceEventsDataSourceEventCollectionOutput
	ToGetDataSourceEventsDataSourceEventCollectionOutputWithContext(context.Context) GetDataSourceEventsDataSourceEventCollectionOutput
}

type GetDataSourceEventsDataSourceEventCollectionArgs struct {
	// List of event related to a DataSource
	Items GetDataSourceEventsDataSourceEventCollectionItemArrayInput `pulumi:"items"`
}

func (GetDataSourceEventsDataSourceEventCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollection)(nil)).Elem()
}

func (i GetDataSourceEventsDataSourceEventCollectionArgs) ToGetDataSourceEventsDataSourceEventCollectionOutput() GetDataSourceEventsDataSourceEventCollectionOutput {
	return i.ToGetDataSourceEventsDataSourceEventCollectionOutputWithContext(context.Background())
}

func (i GetDataSourceEventsDataSourceEventCollectionArgs) ToGetDataSourceEventsDataSourceEventCollectionOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventsDataSourceEventCollectionOutput)
}

// GetDataSourceEventsDataSourceEventCollectionArrayInput is an input type that accepts GetDataSourceEventsDataSourceEventCollectionArray and GetDataSourceEventsDataSourceEventCollectionArrayOutput values.
// You can construct a concrete instance of `GetDataSourceEventsDataSourceEventCollectionArrayInput` via:
//
//	GetDataSourceEventsDataSourceEventCollectionArray{ GetDataSourceEventsDataSourceEventCollectionArgs{...} }
type GetDataSourceEventsDataSourceEventCollectionArrayInput interface {
	pulumi.Input

	ToGetDataSourceEventsDataSourceEventCollectionArrayOutput() GetDataSourceEventsDataSourceEventCollectionArrayOutput
	ToGetDataSourceEventsDataSourceEventCollectionArrayOutputWithContext(context.Context) GetDataSourceEventsDataSourceEventCollectionArrayOutput
}

type GetDataSourceEventsDataSourceEventCollectionArray []GetDataSourceEventsDataSourceEventCollectionInput

func (GetDataSourceEventsDataSourceEventCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventsDataSourceEventCollection)(nil)).Elem()
}

func (i GetDataSourceEventsDataSourceEventCollectionArray) ToGetDataSourceEventsDataSourceEventCollectionArrayOutput() GetDataSourceEventsDataSourceEventCollectionArrayOutput {
	return i.ToGetDataSourceEventsDataSourceEventCollectionArrayOutputWithContext(context.Background())
}

func (i GetDataSourceEventsDataSourceEventCollectionArray) ToGetDataSourceEventsDataSourceEventCollectionArrayOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventsDataSourceEventCollectionArrayOutput)
}

type GetDataSourceEventsDataSourceEventCollectionOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventsDataSourceEventCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollection)(nil)).Elem()
}

func (o GetDataSourceEventsDataSourceEventCollectionOutput) ToGetDataSourceEventsDataSourceEventCollectionOutput() GetDataSourceEventsDataSourceEventCollectionOutput {
	return o
}

func (o GetDataSourceEventsDataSourceEventCollectionOutput) ToGetDataSourceEventsDataSourceEventCollectionOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionOutput {
	return o
}

// List of event related to a DataSource
func (o GetDataSourceEventsDataSourceEventCollectionOutput) Items() GetDataSourceEventsDataSourceEventCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollection) []GetDataSourceEventsDataSourceEventCollectionItem {
		return v.Items
	}).(GetDataSourceEventsDataSourceEventCollectionItemArrayOutput)
}

type GetDataSourceEventsDataSourceEventCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventsDataSourceEventCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventsDataSourceEventCollection)(nil)).Elem()
}

func (o GetDataSourceEventsDataSourceEventCollectionArrayOutput) ToGetDataSourceEventsDataSourceEventCollectionArrayOutput() GetDataSourceEventsDataSourceEventCollectionArrayOutput {
	return o
}

func (o GetDataSourceEventsDataSourceEventCollectionArrayOutput) ToGetDataSourceEventsDataSourceEventCollectionArrayOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionArrayOutput {
	return o
}

func (o GetDataSourceEventsDataSourceEventCollectionArrayOutput) Index(i pulumi.IntInput) GetDataSourceEventsDataSourceEventCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceEventsDataSourceEventCollection {
		return vs[0].([]GetDataSourceEventsDataSourceEventCollection)[vs[1].(int)]
	}).(GetDataSourceEventsDataSourceEventCollectionOutput)
}

type GetDataSourceEventsDataSourceEventCollectionItem struct {
	// Data source event comments
	Comments string `pulumi:"comments"`
	// DataSource OCID
	DataSourceId string `pulumi:"dataSourceId"`
	// Data source event date time
	EventDate string `pulumi:"eventDate"`
	// Event info of a data source.
	EventInfos []GetDataSourceEventsDataSourceEventCollectionItemEventInfo `pulumi:"eventInfos"`
	// A filter to return only resource their region matches the given region.
	Region string `pulumi:"region"`
	// Current data source event info status
	Status string `pulumi:"status"`
	// Data source event created time
	TimeCreated string `pulumi:"timeCreated"`
}

// GetDataSourceEventsDataSourceEventCollectionItemInput is an input type that accepts GetDataSourceEventsDataSourceEventCollectionItemArgs and GetDataSourceEventsDataSourceEventCollectionItemOutput values.
// You can construct a concrete instance of `GetDataSourceEventsDataSourceEventCollectionItemInput` via:
//
//	GetDataSourceEventsDataSourceEventCollectionItemArgs{...}
type GetDataSourceEventsDataSourceEventCollectionItemInput interface {
	pulumi.Input

	ToGetDataSourceEventsDataSourceEventCollectionItemOutput() GetDataSourceEventsDataSourceEventCollectionItemOutput
	ToGetDataSourceEventsDataSourceEventCollectionItemOutputWithContext(context.Context) GetDataSourceEventsDataSourceEventCollectionItemOutput
}

type GetDataSourceEventsDataSourceEventCollectionItemArgs struct {
	// Data source event comments
	Comments pulumi.StringInput `pulumi:"comments"`
	// DataSource OCID
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// Data source event date time
	EventDate pulumi.StringInput `pulumi:"eventDate"`
	// Event info of a data source.
	EventInfos GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayInput `pulumi:"eventInfos"`
	// A filter to return only resource their region matches the given region.
	Region pulumi.StringInput `pulumi:"region"`
	// Current data source event info status
	Status pulumi.StringInput `pulumi:"status"`
	// Data source event created time
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
}

func (GetDataSourceEventsDataSourceEventCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollectionItem)(nil)).Elem()
}

func (i GetDataSourceEventsDataSourceEventCollectionItemArgs) ToGetDataSourceEventsDataSourceEventCollectionItemOutput() GetDataSourceEventsDataSourceEventCollectionItemOutput {
	return i.ToGetDataSourceEventsDataSourceEventCollectionItemOutputWithContext(context.Background())
}

func (i GetDataSourceEventsDataSourceEventCollectionItemArgs) ToGetDataSourceEventsDataSourceEventCollectionItemOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventsDataSourceEventCollectionItemOutput)
}

// GetDataSourceEventsDataSourceEventCollectionItemArrayInput is an input type that accepts GetDataSourceEventsDataSourceEventCollectionItemArray and GetDataSourceEventsDataSourceEventCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDataSourceEventsDataSourceEventCollectionItemArrayInput` via:
//
//	GetDataSourceEventsDataSourceEventCollectionItemArray{ GetDataSourceEventsDataSourceEventCollectionItemArgs{...} }
type GetDataSourceEventsDataSourceEventCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDataSourceEventsDataSourceEventCollectionItemArrayOutput() GetDataSourceEventsDataSourceEventCollectionItemArrayOutput
	ToGetDataSourceEventsDataSourceEventCollectionItemArrayOutputWithContext(context.Context) GetDataSourceEventsDataSourceEventCollectionItemArrayOutput
}

type GetDataSourceEventsDataSourceEventCollectionItemArray []GetDataSourceEventsDataSourceEventCollectionItemInput

func (GetDataSourceEventsDataSourceEventCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventsDataSourceEventCollectionItem)(nil)).Elem()
}

func (i GetDataSourceEventsDataSourceEventCollectionItemArray) ToGetDataSourceEventsDataSourceEventCollectionItemArrayOutput() GetDataSourceEventsDataSourceEventCollectionItemArrayOutput {
	return i.ToGetDataSourceEventsDataSourceEventCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDataSourceEventsDataSourceEventCollectionItemArray) ToGetDataSourceEventsDataSourceEventCollectionItemArrayOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventsDataSourceEventCollectionItemArrayOutput)
}

type GetDataSourceEventsDataSourceEventCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventsDataSourceEventCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollectionItem)(nil)).Elem()
}

func (o GetDataSourceEventsDataSourceEventCollectionItemOutput) ToGetDataSourceEventsDataSourceEventCollectionItemOutput() GetDataSourceEventsDataSourceEventCollectionItemOutput {
	return o
}

func (o GetDataSourceEventsDataSourceEventCollectionItemOutput) ToGetDataSourceEventsDataSourceEventCollectionItemOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionItemOutput {
	return o
}

// Data source event comments
func (o GetDataSourceEventsDataSourceEventCollectionItemOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItem) string { return v.Comments }).(pulumi.StringOutput)
}

// DataSource OCID
func (o GetDataSourceEventsDataSourceEventCollectionItemOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItem) string { return v.DataSourceId }).(pulumi.StringOutput)
}

// Data source event date time
func (o GetDataSourceEventsDataSourceEventCollectionItemOutput) EventDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItem) string { return v.EventDate }).(pulumi.StringOutput)
}

// Event info of a data source.
func (o GetDataSourceEventsDataSourceEventCollectionItemOutput) EventInfos() GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItem) []GetDataSourceEventsDataSourceEventCollectionItemEventInfo {
		return v.EventInfos
	}).(GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput)
}

// A filter to return only resource their region matches the given region.
func (o GetDataSourceEventsDataSourceEventCollectionItemOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItem) string { return v.Region }).(pulumi.StringOutput)
}

// Current data source event info status
func (o GetDataSourceEventsDataSourceEventCollectionItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItem) string { return v.Status }).(pulumi.StringOutput)
}

// Data source event created time
func (o GetDataSourceEventsDataSourceEventCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

type GetDataSourceEventsDataSourceEventCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventsDataSourceEventCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventsDataSourceEventCollectionItem)(nil)).Elem()
}

func (o GetDataSourceEventsDataSourceEventCollectionItemArrayOutput) ToGetDataSourceEventsDataSourceEventCollectionItemArrayOutput() GetDataSourceEventsDataSourceEventCollectionItemArrayOutput {
	return o
}

func (o GetDataSourceEventsDataSourceEventCollectionItemArrayOutput) ToGetDataSourceEventsDataSourceEventCollectionItemArrayOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionItemArrayOutput {
	return o
}

func (o GetDataSourceEventsDataSourceEventCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDataSourceEventsDataSourceEventCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceEventsDataSourceEventCollectionItem {
		return vs[0].([]GetDataSourceEventsDataSourceEventCollectionItem)[vs[1].(int)]
	}).(GetDataSourceEventsDataSourceEventCollectionItemOutput)
}

type GetDataSourceEventsDataSourceEventCollectionItemEventInfo struct {
	// Possible type of dataSourceFeed Provider(LoggingQuery)
	DataSourceFeedProvider string `pulumi:"dataSourceFeedProvider"`
	LogResult              string `pulumi:"logResult"`
	ObservedValue          string `pulumi:"observedValue"`
	Operator               string `pulumi:"operator"`
	TriggerValue           string `pulumi:"triggerValue"`
}

// GetDataSourceEventsDataSourceEventCollectionItemEventInfoInput is an input type that accepts GetDataSourceEventsDataSourceEventCollectionItemEventInfoArgs and GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput values.
// You can construct a concrete instance of `GetDataSourceEventsDataSourceEventCollectionItemEventInfoInput` via:
//
//	GetDataSourceEventsDataSourceEventCollectionItemEventInfoArgs{...}
type GetDataSourceEventsDataSourceEventCollectionItemEventInfoInput interface {
	pulumi.Input

	ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput() GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput
	ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoOutputWithContext(context.Context) GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput
}

type GetDataSourceEventsDataSourceEventCollectionItemEventInfoArgs struct {
	// Possible type of dataSourceFeed Provider(LoggingQuery)
	DataSourceFeedProvider pulumi.StringInput `pulumi:"dataSourceFeedProvider"`
	LogResult              pulumi.StringInput `pulumi:"logResult"`
	ObservedValue          pulumi.StringInput `pulumi:"observedValue"`
	Operator               pulumi.StringInput `pulumi:"operator"`
	TriggerValue           pulumi.StringInput `pulumi:"triggerValue"`
}

func (GetDataSourceEventsDataSourceEventCollectionItemEventInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollectionItemEventInfo)(nil)).Elem()
}

func (i GetDataSourceEventsDataSourceEventCollectionItemEventInfoArgs) ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput() GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput {
	return i.ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoOutputWithContext(context.Background())
}

func (i GetDataSourceEventsDataSourceEventCollectionItemEventInfoArgs) ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput)
}

// GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayInput is an input type that accepts GetDataSourceEventsDataSourceEventCollectionItemEventInfoArray and GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput values.
// You can construct a concrete instance of `GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayInput` via:
//
//	GetDataSourceEventsDataSourceEventCollectionItemEventInfoArray{ GetDataSourceEventsDataSourceEventCollectionItemEventInfoArgs{...} }
type GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayInput interface {
	pulumi.Input

	ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput() GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput
	ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutputWithContext(context.Context) GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput
}

type GetDataSourceEventsDataSourceEventCollectionItemEventInfoArray []GetDataSourceEventsDataSourceEventCollectionItemEventInfoInput

func (GetDataSourceEventsDataSourceEventCollectionItemEventInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventsDataSourceEventCollectionItemEventInfo)(nil)).Elem()
}

func (i GetDataSourceEventsDataSourceEventCollectionItemEventInfoArray) ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput() GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput {
	return i.ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutputWithContext(context.Background())
}

func (i GetDataSourceEventsDataSourceEventCollectionItemEventInfoArray) ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput)
}

type GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollectionItemEventInfo)(nil)).Elem()
}

func (o GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput) ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput() GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput {
	return o
}

func (o GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput) ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput {
	return o
}

// Possible type of dataSourceFeed Provider(LoggingQuery)
func (o GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput) DataSourceFeedProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItemEventInfo) string {
		return v.DataSourceFeedProvider
	}).(pulumi.StringOutput)
}

func (o GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput) LogResult() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItemEventInfo) string { return v.LogResult }).(pulumi.StringOutput)
}

func (o GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput) ObservedValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItemEventInfo) string { return v.ObservedValue }).(pulumi.StringOutput)
}

func (o GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItemEventInfo) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput) TriggerValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsDataSourceEventCollectionItemEventInfo) string { return v.TriggerValue }).(pulumi.StringOutput)
}

type GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventsDataSourceEventCollectionItemEventInfo)(nil)).Elem()
}

func (o GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput) ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput() GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput {
	return o
}

func (o GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput) ToGetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutputWithContext(ctx context.Context) GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput {
	return o
}

func (o GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput) Index(i pulumi.IntInput) GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceEventsDataSourceEventCollectionItemEventInfo {
		return vs[0].([]GetDataSourceEventsDataSourceEventCollectionItemEventInfo)[vs[1].(int)]
	}).(GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput)
}

type GetDataSourceEventsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetDataSourceEventsFilterInput is an input type that accepts GetDataSourceEventsFilterArgs and GetDataSourceEventsFilterOutput values.
// You can construct a concrete instance of `GetDataSourceEventsFilterInput` via:
//
//	GetDataSourceEventsFilterArgs{...}
type GetDataSourceEventsFilterInput interface {
	pulumi.Input

	ToGetDataSourceEventsFilterOutput() GetDataSourceEventsFilterOutput
	ToGetDataSourceEventsFilterOutputWithContext(context.Context) GetDataSourceEventsFilterOutput
}

type GetDataSourceEventsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDataSourceEventsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventsFilter)(nil)).Elem()
}

func (i GetDataSourceEventsFilterArgs) ToGetDataSourceEventsFilterOutput() GetDataSourceEventsFilterOutput {
	return i.ToGetDataSourceEventsFilterOutputWithContext(context.Background())
}

func (i GetDataSourceEventsFilterArgs) ToGetDataSourceEventsFilterOutputWithContext(ctx context.Context) GetDataSourceEventsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventsFilterOutput)
}

// GetDataSourceEventsFilterArrayInput is an input type that accepts GetDataSourceEventsFilterArray and GetDataSourceEventsFilterArrayOutput values.
// You can construct a concrete instance of `GetDataSourceEventsFilterArrayInput` via:
//
//	GetDataSourceEventsFilterArray{ GetDataSourceEventsFilterArgs{...} }
type GetDataSourceEventsFilterArrayInput interface {
	pulumi.Input

	ToGetDataSourceEventsFilterArrayOutput() GetDataSourceEventsFilterArrayOutput
	ToGetDataSourceEventsFilterArrayOutputWithContext(context.Context) GetDataSourceEventsFilterArrayOutput
}

type GetDataSourceEventsFilterArray []GetDataSourceEventsFilterInput

func (GetDataSourceEventsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventsFilter)(nil)).Elem()
}

func (i GetDataSourceEventsFilterArray) ToGetDataSourceEventsFilterArrayOutput() GetDataSourceEventsFilterArrayOutput {
	return i.ToGetDataSourceEventsFilterArrayOutputWithContext(context.Background())
}

func (i GetDataSourceEventsFilterArray) ToGetDataSourceEventsFilterArrayOutputWithContext(ctx context.Context) GetDataSourceEventsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceEventsFilterArrayOutput)
}

type GetDataSourceEventsFilterOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceEventsFilter)(nil)).Elem()
}

func (o GetDataSourceEventsFilterOutput) ToGetDataSourceEventsFilterOutput() GetDataSourceEventsFilterOutput {
	return o
}

func (o GetDataSourceEventsFilterOutput) ToGetDataSourceEventsFilterOutputWithContext(ctx context.Context) GetDataSourceEventsFilterOutput {
	return o
}

func (o GetDataSourceEventsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceEventsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataSourceEventsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDataSourceEventsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetDataSourceEventsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataSourceEventsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDataSourceEventsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceEventsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceEventsFilter)(nil)).Elem()
}

func (o GetDataSourceEventsFilterArrayOutput) ToGetDataSourceEventsFilterArrayOutput() GetDataSourceEventsFilterArrayOutput {
	return o
}

func (o GetDataSourceEventsFilterArrayOutput) ToGetDataSourceEventsFilterArrayOutputWithContext(ctx context.Context) GetDataSourceEventsFilterArrayOutput {
	return o
}

func (o GetDataSourceEventsFilterArrayOutput) Index(i pulumi.IntInput) GetDataSourceEventsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceEventsFilter {
		return vs[0].([]GetDataSourceEventsFilter)[vs[1].(int)]
	}).(GetDataSourceEventsFilterOutput)
}

type GetDataSourceRegionStatusDetail struct {
	// Data Source replication region.
	Region string `pulumi:"region"`
	// Status of data Source
	Status string `pulumi:"status"`
}

// GetDataSourceRegionStatusDetailInput is an input type that accepts GetDataSourceRegionStatusDetailArgs and GetDataSourceRegionStatusDetailOutput values.
// You can construct a concrete instance of `GetDataSourceRegionStatusDetailInput` via:
//
//	GetDataSourceRegionStatusDetailArgs{...}
type GetDataSourceRegionStatusDetailInput interface {
	pulumi.Input

	ToGetDataSourceRegionStatusDetailOutput() GetDataSourceRegionStatusDetailOutput
	ToGetDataSourceRegionStatusDetailOutputWithContext(context.Context) GetDataSourceRegionStatusDetailOutput
}

type GetDataSourceRegionStatusDetailArgs struct {
	// Data Source replication region.
	Region pulumi.StringInput `pulumi:"region"`
	// Status of data Source
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDataSourceRegionStatusDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceRegionStatusDetail)(nil)).Elem()
}

func (i GetDataSourceRegionStatusDetailArgs) ToGetDataSourceRegionStatusDetailOutput() GetDataSourceRegionStatusDetailOutput {
	return i.ToGetDataSourceRegionStatusDetailOutputWithContext(context.Background())
}

func (i GetDataSourceRegionStatusDetailArgs) ToGetDataSourceRegionStatusDetailOutputWithContext(ctx context.Context) GetDataSourceRegionStatusDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceRegionStatusDetailOutput)
}

// GetDataSourceRegionStatusDetailArrayInput is an input type that accepts GetDataSourceRegionStatusDetailArray and GetDataSourceRegionStatusDetailArrayOutput values.
// You can construct a concrete instance of `GetDataSourceRegionStatusDetailArrayInput` via:
//
//	GetDataSourceRegionStatusDetailArray{ GetDataSourceRegionStatusDetailArgs{...} }
type GetDataSourceRegionStatusDetailArrayInput interface {
	pulumi.Input

	ToGetDataSourceRegionStatusDetailArrayOutput() GetDataSourceRegionStatusDetailArrayOutput
	ToGetDataSourceRegionStatusDetailArrayOutputWithContext(context.Context) GetDataSourceRegionStatusDetailArrayOutput
}

type GetDataSourceRegionStatusDetailArray []GetDataSourceRegionStatusDetailInput

func (GetDataSourceRegionStatusDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceRegionStatusDetail)(nil)).Elem()
}

func (i GetDataSourceRegionStatusDetailArray) ToGetDataSourceRegionStatusDetailArrayOutput() GetDataSourceRegionStatusDetailArrayOutput {
	return i.ToGetDataSourceRegionStatusDetailArrayOutputWithContext(context.Background())
}

func (i GetDataSourceRegionStatusDetailArray) ToGetDataSourceRegionStatusDetailArrayOutputWithContext(ctx context.Context) GetDataSourceRegionStatusDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourceRegionStatusDetailArrayOutput)
}

type GetDataSourceRegionStatusDetailOutput struct{ *pulumi.OutputState }

func (GetDataSourceRegionStatusDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourceRegionStatusDetail)(nil)).Elem()
}

func (o GetDataSourceRegionStatusDetailOutput) ToGetDataSourceRegionStatusDetailOutput() GetDataSourceRegionStatusDetailOutput {
	return o
}

func (o GetDataSourceRegionStatusDetailOutput) ToGetDataSourceRegionStatusDetailOutputWithContext(ctx context.Context) GetDataSourceRegionStatusDetailOutput {
	return o
}

// Data Source replication region.
func (o GetDataSourceRegionStatusDetailOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceRegionStatusDetail) string { return v.Region }).(pulumi.StringOutput)
}

// Status of data Source
func (o GetDataSourceRegionStatusDetailOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourceRegionStatusDetail) string { return v.Status }).(pulumi.StringOutput)
}

type GetDataSourceRegionStatusDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourceRegionStatusDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourceRegionStatusDetail)(nil)).Elem()
}

func (o GetDataSourceRegionStatusDetailArrayOutput) ToGetDataSourceRegionStatusDetailArrayOutput() GetDataSourceRegionStatusDetailArrayOutput {
	return o
}

func (o GetDataSourceRegionStatusDetailArrayOutput) ToGetDataSourceRegionStatusDetailArrayOutputWithContext(ctx context.Context) GetDataSourceRegionStatusDetailArrayOutput {
	return o
}

func (o GetDataSourceRegionStatusDetailArrayOutput) Index(i pulumi.IntInput) GetDataSourceRegionStatusDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourceRegionStatusDetail {
		return vs[0].([]GetDataSourceRegionStatusDetail)[vs[1].(int)]
	}).(GetDataSourceRegionStatusDetailOutput)
}

type GetDataSourcesDataSourceCollection struct {
	Items []GetDataSourcesDataSourceCollectionItem `pulumi:"items"`
}

// GetDataSourcesDataSourceCollectionInput is an input type that accepts GetDataSourcesDataSourceCollectionArgs and GetDataSourcesDataSourceCollectionOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionInput` via:
//
//	GetDataSourcesDataSourceCollectionArgs{...}
type GetDataSourcesDataSourceCollectionInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionOutput() GetDataSourcesDataSourceCollectionOutput
	ToGetDataSourcesDataSourceCollectionOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionOutput
}

type GetDataSourcesDataSourceCollectionArgs struct {
	Items GetDataSourcesDataSourceCollectionItemArrayInput `pulumi:"items"`
}

func (GetDataSourcesDataSourceCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollection)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionArgs) ToGetDataSourcesDataSourceCollectionOutput() GetDataSourcesDataSourceCollectionOutput {
	return i.ToGetDataSourcesDataSourceCollectionOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionArgs) ToGetDataSourcesDataSourceCollectionOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionOutput)
}

// GetDataSourcesDataSourceCollectionArrayInput is an input type that accepts GetDataSourcesDataSourceCollectionArray and GetDataSourcesDataSourceCollectionArrayOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionArrayInput` via:
//
//	GetDataSourcesDataSourceCollectionArray{ GetDataSourcesDataSourceCollectionArgs{...} }
type GetDataSourcesDataSourceCollectionArrayInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionArrayOutput() GetDataSourcesDataSourceCollectionArrayOutput
	ToGetDataSourcesDataSourceCollectionArrayOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionArrayOutput
}

type GetDataSourcesDataSourceCollectionArray []GetDataSourcesDataSourceCollectionInput

func (GetDataSourcesDataSourceCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollection)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionArray) ToGetDataSourcesDataSourceCollectionArrayOutput() GetDataSourcesDataSourceCollectionArrayOutput {
	return i.ToGetDataSourcesDataSourceCollectionArrayOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionArray) ToGetDataSourcesDataSourceCollectionArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionArrayOutput)
}

type GetDataSourcesDataSourceCollectionOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollection)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionOutput) ToGetDataSourcesDataSourceCollectionOutput() GetDataSourcesDataSourceCollectionOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionOutput) ToGetDataSourcesDataSourceCollectionOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionOutput) Items() GetDataSourcesDataSourceCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollection) []GetDataSourcesDataSourceCollectionItem { return v.Items }).(GetDataSourcesDataSourceCollectionItemArrayOutput)
}

type GetDataSourcesDataSourceCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollection)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionArrayOutput) ToGetDataSourcesDataSourceCollectionArrayOutput() GetDataSourcesDataSourceCollectionArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionArrayOutput) ToGetDataSourcesDataSourceCollectionArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionArrayOutput) Index(i pulumi.IntInput) GetDataSourcesDataSourceCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourcesDataSourceCollection {
		return vs[0].([]GetDataSourcesDataSourceCollection)[vs[1].(int)]
	}).(GetDataSourcesDataSourceCollectionOutput)
}

type GetDataSourcesDataSourceCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Details specific to the data source type.
	DataSourceDetails []GetDataSourcesDataSourceCollectionItemDataSourceDetail `pulumi:"dataSourceDetails"`
	// Information about the detector recipe and rule attached
	DataSourceDetectorMappingInfos []GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfo `pulumi:"dataSourceDetectorMappingInfos"`
	// A filter to return only resources their feedProvider matches the given DataSourceFeedProvider.
	DataSourceFeedProvider string `pulumi:"dataSourceFeedProvider"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Ocid for Data source
	Id string `pulumi:"id"`
	// Information about the region and status of query replication
	RegionStatusDetails []GetDataSourcesDataSourceCollectionItemRegionStatusDetail `pulumi:"regionStatusDetails"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// Status of data Source
	Status string `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the Data source was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the Data source was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDataSourcesDataSourceCollectionItemInput is an input type that accepts GetDataSourcesDataSourceCollectionItemArgs and GetDataSourcesDataSourceCollectionItemOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemInput` via:
//
//	GetDataSourcesDataSourceCollectionItemArgs{...}
type GetDataSourcesDataSourceCollectionItemInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemOutput() GetDataSourcesDataSourceCollectionItemOutput
	ToGetDataSourcesDataSourceCollectionItemOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemOutput
}

type GetDataSourcesDataSourceCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Details specific to the data source type.
	DataSourceDetails GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayInput `pulumi:"dataSourceDetails"`
	// Information about the detector recipe and rule attached
	DataSourceDetectorMappingInfos GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayInput `pulumi:"dataSourceDetectorMappingInfos"`
	// A filter to return only resources their feedProvider matches the given DataSourceFeedProvider.
	DataSourceFeedProvider pulumi.StringInput `pulumi:"dataSourceFeedProvider"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Ocid for Data source
	Id pulumi.StringInput `pulumi:"id"`
	// Information about the region and status of query replication
	RegionStatusDetails GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayInput `pulumi:"regionStatusDetails"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// Status of data Source
	Status pulumi.StringInput `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the Data source was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the Data source was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDataSourcesDataSourceCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItem)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemArgs) ToGetDataSourcesDataSourceCollectionItemOutput() GetDataSourcesDataSourceCollectionItemOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemArgs) ToGetDataSourcesDataSourceCollectionItemOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemOutput)
}

// GetDataSourcesDataSourceCollectionItemArrayInput is an input type that accepts GetDataSourcesDataSourceCollectionItemArray and GetDataSourcesDataSourceCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemArrayInput` via:
//
//	GetDataSourcesDataSourceCollectionItemArray{ GetDataSourcesDataSourceCollectionItemArgs{...} }
type GetDataSourcesDataSourceCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemArrayOutput() GetDataSourcesDataSourceCollectionItemArrayOutput
	ToGetDataSourcesDataSourceCollectionItemArrayOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemArrayOutput
}

type GetDataSourcesDataSourceCollectionItemArray []GetDataSourcesDataSourceCollectionItemInput

func (GetDataSourcesDataSourceCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItem)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemArray) ToGetDataSourcesDataSourceCollectionItemArrayOutput() GetDataSourcesDataSourceCollectionItemArrayOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemArray) ToGetDataSourcesDataSourceCollectionItemArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemArrayOutput)
}

type GetDataSourcesDataSourceCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItem)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemOutput) ToGetDataSourcesDataSourceCollectionItemOutput() GetDataSourcesDataSourceCollectionItemOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemOutput) ToGetDataSourcesDataSourceCollectionItemOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetDataSourcesDataSourceCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Details specific to the data source type.
func (o GetDataSourcesDataSourceCollectionItemOutput) DataSourceDetails() GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) []GetDataSourcesDataSourceCollectionItemDataSourceDetail {
		return v.DataSourceDetails
	}).(GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput)
}

// Information about the detector recipe and rule attached
func (o GetDataSourcesDataSourceCollectionItemOutput) DataSourceDetectorMappingInfos() GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) []GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfo {
		return v.DataSourceDetectorMappingInfos
	}).(GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput)
}

// A filter to return only resources their feedProvider matches the given DataSourceFeedProvider.
func (o GetDataSourcesDataSourceCollectionItemOutput) DataSourceFeedProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) string { return v.DataSourceFeedProvider }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetDataSourcesDataSourceCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetDataSourcesDataSourceCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetDataSourcesDataSourceCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Ocid for Data source
func (o GetDataSourcesDataSourceCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Information about the region and status of query replication
func (o GetDataSourcesDataSourceCollectionItemOutput) RegionStatusDetails() GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) []GetDataSourcesDataSourceCollectionItemRegionStatusDetail {
		return v.RegionStatusDetails
	}).(GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetDataSourcesDataSourceCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Status of data Source
func (o GetDataSourcesDataSourceCollectionItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) string { return v.Status }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetDataSourcesDataSourceCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the Data source was created. Format defined by RFC3339.
func (o GetDataSourcesDataSourceCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the Data source was updated. Format defined by RFC3339.
func (o GetDataSourcesDataSourceCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDataSourcesDataSourceCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItem)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemArrayOutput) ToGetDataSourcesDataSourceCollectionItemArrayOutput() GetDataSourcesDataSourceCollectionItemArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemArrayOutput) ToGetDataSourcesDataSourceCollectionItemArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDataSourcesDataSourceCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourcesDataSourceCollectionItem {
		return vs[0].([]GetDataSourcesDataSourceCollectionItem)[vs[1].(int)]
	}).(GetDataSourcesDataSourceCollectionItemOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetail struct {
	// The additional entities count used for data source query.
	AdditionalEntitiesCount int `pulumi:"additionalEntitiesCount"`
	// A filter to return only resources their feedProvider matches the given DataSourceFeedProvider.
	DataSourceFeedProvider string `pulumi:"dataSourceFeedProvider"`
	// Interval in minutes that query is run periodically.
	IntervalInMinutes int `pulumi:"intervalInMinutes"`
	// Additional details specific to the data source type (Sighting/Insight).
	LoggingQueryDetails []GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetail `pulumi:"loggingQueryDetails"`
	// A filter to return only resources their query type matches the given LoggingQueryType.
	LoggingQueryType string `pulumi:"loggingQueryType"`
	// Operator used in Data Soruce
	Operator string `pulumi:"operator"`
	// The continuous query expression that is run periodically.
	Query string `pulumi:"query"`
	// Time when the query can start, if not specified it can start immediately.
	QueryStartTimes []GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTime `pulumi:"queryStartTimes"`
	// Logging Query regions
	Regions []string `pulumi:"regions"`
	// The integer value that must be exceeded, fall below or equal to (depending on the operator), the query result to trigger an event.
	Threshold int `pulumi:"threshold"`
}

// GetDataSourcesDataSourceCollectionItemDataSourceDetailInput is an input type that accepts GetDataSourcesDataSourceCollectionItemDataSourceDetailArgs and GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemDataSourceDetailInput` via:
//
//	GetDataSourcesDataSourceCollectionItemDataSourceDetailArgs{...}
type GetDataSourcesDataSourceCollectionItemDataSourceDetailInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput
	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailArgs struct {
	// The additional entities count used for data source query.
	AdditionalEntitiesCount pulumi.IntInput `pulumi:"additionalEntitiesCount"`
	// A filter to return only resources their feedProvider matches the given DataSourceFeedProvider.
	DataSourceFeedProvider pulumi.StringInput `pulumi:"dataSourceFeedProvider"`
	// Interval in minutes that query is run periodically.
	IntervalInMinutes pulumi.IntInput `pulumi:"intervalInMinutes"`
	// Additional details specific to the data source type (Sighting/Insight).
	LoggingQueryDetails GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayInput `pulumi:"loggingQueryDetails"`
	// A filter to return only resources their query type matches the given LoggingQueryType.
	LoggingQueryType pulumi.StringInput `pulumi:"loggingQueryType"`
	// Operator used in Data Soruce
	Operator pulumi.StringInput `pulumi:"operator"`
	// The continuous query expression that is run periodically.
	Query pulumi.StringInput `pulumi:"query"`
	// Time when the query can start, if not specified it can start immediately.
	QueryStartTimes GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayInput `pulumi:"queryStartTimes"`
	// Logging Query regions
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// The integer value that must be exceeded, fall below or equal to (depending on the operator), the query result to trigger an event.
	Threshold pulumi.IntInput `pulumi:"threshold"`
}

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetail)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailArgs) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemDataSourceDetailOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailArgs) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput)
}

// GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayInput is an input type that accepts GetDataSourcesDataSourceCollectionItemDataSourceDetailArray and GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayInput` via:
//
//	GetDataSourcesDataSourceCollectionItemDataSourceDetailArray{ GetDataSourcesDataSourceCollectionItemDataSourceDetailArgs{...} }
type GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput
	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailArray []GetDataSourcesDataSourceCollectionItemDataSourceDetailInput

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItemDataSourceDetail)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailArray) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailArray) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetail)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput {
	return o
}

// The additional entities count used for data source query.
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) AdditionalEntitiesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetail) int { return v.AdditionalEntitiesCount }).(pulumi.IntOutput)
}

// A filter to return only resources their feedProvider matches the given DataSourceFeedProvider.
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) DataSourceFeedProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetail) string { return v.DataSourceFeedProvider }).(pulumi.StringOutput)
}

// Interval in minutes that query is run periodically.
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) IntervalInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetail) int { return v.IntervalInMinutes }).(pulumi.IntOutput)
}

// Additional details specific to the data source type (Sighting/Insight).
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) LoggingQueryDetails() GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetail) []GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetail {
		return v.LoggingQueryDetails
	}).(GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput)
}

// A filter to return only resources their query type matches the given LoggingQueryType.
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) LoggingQueryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetail) string { return v.LoggingQueryType }).(pulumi.StringOutput)
}

// Operator used in Data Soruce
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetail) string { return v.Operator }).(pulumi.StringOutput)
}

// The continuous query expression that is run periodically.
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetail) string { return v.Query }).(pulumi.StringOutput)
}

// Time when the query can start, if not specified it can start immediately.
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) QueryStartTimes() GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetail) []GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTime {
		return v.QueryStartTimes
	}).(GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput)
}

// Logging Query regions
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetail) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// The integer value that must be exceeded, fall below or equal to (depending on the operator), the query result to trigger an event.
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetail) int { return v.Threshold }).(pulumi.IntOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItemDataSourceDetail)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput) Index(i pulumi.IntInput) GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourcesDataSourceCollectionItemDataSourceDetail {
		return vs[0].([]GetDataSourcesDataSourceCollectionItemDataSourceDetail)[vs[1].(int)]
	}).(GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetail struct {
	// The key entities count used for data source query
	KeyEntitiesCount int `pulumi:"keyEntitiesCount"`
	// A filter to return only resources their query type matches the given LoggingQueryType.
	LoggingQueryType string `pulumi:"loggingQueryType"`
}

// GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailInput is an input type that accepts GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArgs and GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailInput` via:
//
//	GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArgs{...}
type GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput
	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArgs struct {
	// The key entities count used for data source query
	KeyEntitiesCount pulumi.IntInput `pulumi:"keyEntitiesCount"`
	// A filter to return only resources their query type matches the given LoggingQueryType.
	LoggingQueryType pulumi.StringInput `pulumi:"loggingQueryType"`
}

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetail)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArgs) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArgs) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput)
}

// GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayInput is an input type that accepts GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArray and GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayInput` via:
//
//	GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArray{ GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArgs{...} }
type GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput
	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArray []GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailInput

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetail)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArray) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArray) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetail)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput {
	return o
}

// The key entities count used for data source query
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput) KeyEntitiesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetail) int {
		return v.KeyEntitiesCount
	}).(pulumi.IntOutput)
}

// A filter to return only resources their query type matches the given LoggingQueryType.
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput) LoggingQueryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetail) string {
		return v.LoggingQueryType
	}).(pulumi.StringOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetail)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput) Index(i pulumi.IntInput) GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetail {
		return vs[0].([]GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetail)[vs[1].(int)]
	}).(GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTime struct {
	// Time when the query can start, if not specified it can start immediately.
	QueryStartTime string `pulumi:"queryStartTime"`
	// policy used for deciding the query start time
	StartPolicyType string `pulumi:"startPolicyType"`
}

// GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeInput is an input type that accepts GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArgs and GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeInput` via:
//
//	GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArgs{...}
type GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput
	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArgs struct {
	// Time when the query can start, if not specified it can start immediately.
	QueryStartTime pulumi.StringInput `pulumi:"queryStartTime"`
	// policy used for deciding the query start time
	StartPolicyType pulumi.StringInput `pulumi:"startPolicyType"`
}

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTime)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArgs) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArgs) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput)
}

// GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayInput is an input type that accepts GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArray and GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayInput` via:
//
//	GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArray{ GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArgs{...} }
type GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput
	ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArray []GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeInput

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTime)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArray) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArray) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTime)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput {
	return o
}

// Time when the query can start, if not specified it can start immediately.
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput) QueryStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTime) string {
		return v.QueryStartTime
	}).(pulumi.StringOutput)
}

// policy used for deciding the query start time
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput) StartPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTime) string {
		return v.StartPolicyType
	}).(pulumi.StringOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTime)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput) Index(i pulumi.IntInput) GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTime {
		return vs[0].([]GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTime)[vs[1].(int)]
	}).(GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfo struct {
	// Id of the attached detectorRecipeId to the Data Source.
	DetectorRecipeId string `pulumi:"detectorRecipeId"`
	// Id of the attached detectorRuleId to the Data Source.
	DetectorRuleId string `pulumi:"detectorRuleId"`
}

// GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoInput is an input type that accepts GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArgs and GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoInput` via:
//
//	GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArgs{...}
type GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput
	ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArgs struct {
	// Id of the attached detectorRecipeId to the Data Source.
	DetectorRecipeId pulumi.StringInput `pulumi:"detectorRecipeId"`
	// Id of the attached detectorRuleId to the Data Source.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
}

func (GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArgs) ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArgs) ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput)
}

// GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayInput is an input type that accepts GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArray and GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayInput` via:
//
//	GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArray{ GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArgs{...} }
type GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput
	ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArray []GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoInput

func (GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArray) ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArray) ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput {
	return o
}

// Id of the attached detectorRecipeId to the Data Source.
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput) DetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfo) string {
		return v.DetectorRecipeId
	}).(pulumi.StringOutput)
}

// Id of the attached detectorRuleId to the Data Source.
func (o GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfo) string {
		return v.DetectorRuleId
	}).(pulumi.StringOutput)
}

type GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfo)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput() GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput) ToGetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput) Index(i pulumi.IntInput) GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfo {
		return vs[0].([]GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfo)[vs[1].(int)]
	}).(GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput)
}

type GetDataSourcesDataSourceCollectionItemRegionStatusDetail struct {
	// Data Source replication region.
	Region string `pulumi:"region"`
	// Status of data Source
	Status string `pulumi:"status"`
}

// GetDataSourcesDataSourceCollectionItemRegionStatusDetailInput is an input type that accepts GetDataSourcesDataSourceCollectionItemRegionStatusDetailArgs and GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemRegionStatusDetailInput` via:
//
//	GetDataSourcesDataSourceCollectionItemRegionStatusDetailArgs{...}
type GetDataSourcesDataSourceCollectionItemRegionStatusDetailInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput() GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput
	ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput
}

type GetDataSourcesDataSourceCollectionItemRegionStatusDetailArgs struct {
	// Data Source replication region.
	Region pulumi.StringInput `pulumi:"region"`
	// Status of data Source
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDataSourcesDataSourceCollectionItemRegionStatusDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemRegionStatusDetail)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemRegionStatusDetailArgs) ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput() GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemRegionStatusDetailArgs) ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput)
}

// GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayInput is an input type that accepts GetDataSourcesDataSourceCollectionItemRegionStatusDetailArray and GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput values.
// You can construct a concrete instance of `GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayInput` via:
//
//	GetDataSourcesDataSourceCollectionItemRegionStatusDetailArray{ GetDataSourcesDataSourceCollectionItemRegionStatusDetailArgs{...} }
type GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayInput interface {
	pulumi.Input

	ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput() GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput
	ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutputWithContext(context.Context) GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput
}

type GetDataSourcesDataSourceCollectionItemRegionStatusDetailArray []GetDataSourcesDataSourceCollectionItemRegionStatusDetailInput

func (GetDataSourcesDataSourceCollectionItemRegionStatusDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItemRegionStatusDetail)(nil)).Elem()
}

func (i GetDataSourcesDataSourceCollectionItemRegionStatusDetailArray) ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput() GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput {
	return i.ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutputWithContext(context.Background())
}

func (i GetDataSourcesDataSourceCollectionItemRegionStatusDetailArray) ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput)
}

type GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemRegionStatusDetail)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput) ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput() GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput) ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput {
	return o
}

// Data Source replication region.
func (o GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemRegionStatusDetail) string { return v.Region }).(pulumi.StringOutput)
}

// Status of data Source
func (o GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesDataSourceCollectionItemRegionStatusDetail) string { return v.Status }).(pulumi.StringOutput)
}

type GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesDataSourceCollectionItemRegionStatusDetail)(nil)).Elem()
}

func (o GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput) ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput() GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput) ToGetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutputWithContext(ctx context.Context) GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput {
	return o
}

func (o GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput) Index(i pulumi.IntInput) GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourcesDataSourceCollectionItemRegionStatusDetail {
		return vs[0].([]GetDataSourcesDataSourceCollectionItemRegionStatusDetail)[vs[1].(int)]
	}).(GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput)
}

type GetDataSourcesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetDataSourcesFilterInput is an input type that accepts GetDataSourcesFilterArgs and GetDataSourcesFilterOutput values.
// You can construct a concrete instance of `GetDataSourcesFilterInput` via:
//
//	GetDataSourcesFilterArgs{...}
type GetDataSourcesFilterInput interface {
	pulumi.Input

	ToGetDataSourcesFilterOutput() GetDataSourcesFilterOutput
	ToGetDataSourcesFilterOutputWithContext(context.Context) GetDataSourcesFilterOutput
}

type GetDataSourcesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDataSourcesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesFilter)(nil)).Elem()
}

func (i GetDataSourcesFilterArgs) ToGetDataSourcesFilterOutput() GetDataSourcesFilterOutput {
	return i.ToGetDataSourcesFilterOutputWithContext(context.Background())
}

func (i GetDataSourcesFilterArgs) ToGetDataSourcesFilterOutputWithContext(ctx context.Context) GetDataSourcesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesFilterOutput)
}

// GetDataSourcesFilterArrayInput is an input type that accepts GetDataSourcesFilterArray and GetDataSourcesFilterArrayOutput values.
// You can construct a concrete instance of `GetDataSourcesFilterArrayInput` via:
//
//	GetDataSourcesFilterArray{ GetDataSourcesFilterArgs{...} }
type GetDataSourcesFilterArrayInput interface {
	pulumi.Input

	ToGetDataSourcesFilterArrayOutput() GetDataSourcesFilterArrayOutput
	ToGetDataSourcesFilterArrayOutputWithContext(context.Context) GetDataSourcesFilterArrayOutput
}

type GetDataSourcesFilterArray []GetDataSourcesFilterInput

func (GetDataSourcesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesFilter)(nil)).Elem()
}

func (i GetDataSourcesFilterArray) ToGetDataSourcesFilterArrayOutput() GetDataSourcesFilterArrayOutput {
	return i.ToGetDataSourcesFilterArrayOutputWithContext(context.Background())
}

func (i GetDataSourcesFilterArray) ToGetDataSourcesFilterArrayOutputWithContext(ctx context.Context) GetDataSourcesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataSourcesFilterArrayOutput)
}

type GetDataSourcesFilterOutput struct{ *pulumi.OutputState }

func (GetDataSourcesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSourcesFilter)(nil)).Elem()
}

func (o GetDataSourcesFilterOutput) ToGetDataSourcesFilterOutput() GetDataSourcesFilterOutput {
	return o
}

func (o GetDataSourcesFilterOutput) ToGetDataSourcesFilterOutputWithContext(ctx context.Context) GetDataSourcesFilterOutput {
	return o
}

func (o GetDataSourcesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSourcesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataSourcesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDataSourcesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetDataSourcesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataSourcesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDataSourcesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDataSourcesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataSourcesFilter)(nil)).Elem()
}

func (o GetDataSourcesFilterArrayOutput) ToGetDataSourcesFilterArrayOutput() GetDataSourcesFilterArrayOutput {
	return o
}

func (o GetDataSourcesFilterArrayOutput) ToGetDataSourcesFilterArrayOutputWithContext(ctx context.Context) GetDataSourcesFilterArrayOutput {
	return o
}

func (o GetDataSourcesFilterArrayOutput) Index(i pulumi.IntInput) GetDataSourcesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataSourcesFilter {
		return vs[0].([]GetDataSourcesFilter)[vs[1].(int)]
	}).(GetDataSourcesFilterOutput)
}

type GetDetectorRecipeDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []GetDetectorRecipeDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// The id of the attached DataSource.
	DataSourceId string `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description string `pulumi:"description"`
	// Details of a Detector Rule
	Details []GetDetectorRecipeDetectorRuleDetail `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// The display name of entity
	DisplayName string `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []GetDetectorRecipeDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The current state of the resource.
	State string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDetectorRecipeDetectorRuleInput is an input type that accepts GetDetectorRecipeDetectorRuleArgs and GetDetectorRecipeDetectorRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleInput` via:
//
//	GetDetectorRecipeDetectorRuleArgs{...}
type GetDetectorRecipeDetectorRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleOutput() GetDetectorRecipeDetectorRuleOutput
	ToGetDetectorRecipeDetectorRuleOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleOutput
}

type GetDetectorRecipeDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// The id of the attached DataSource.
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipeDetectorRuleDetailArrayInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// The display name of entity
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings GetDetectorRecipeDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The current state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDetectorRecipeDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleArgs) ToGetDetectorRecipeDetectorRuleOutput() GetDetectorRecipeDetectorRuleOutput {
	return i.ToGetDetectorRecipeDetectorRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleArgs) ToGetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleOutput)
}

// GetDetectorRecipeDetectorRuleArrayInput is an input type that accepts GetDetectorRecipeDetectorRuleArray and GetDetectorRecipeDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleArrayInput` via:
//
//	GetDetectorRecipeDetectorRuleArray{ GetDetectorRecipeDetectorRuleArgs{...} }
type GetDetectorRecipeDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleArrayOutput() GetDetectorRecipeDetectorRuleArrayOutput
	ToGetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleArrayOutput
}

type GetDetectorRecipeDetectorRuleArray []GetDetectorRecipeDetectorRuleInput

func (GetDetectorRecipeDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleArray) ToGetDetectorRecipeDetectorRuleArrayOutput() GetDetectorRecipeDetectorRuleArrayOutput {
	return i.ToGetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleArray) ToGetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleArrayOutput)
}

type GetDetectorRecipeDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleOutput) ToGetDetectorRecipeDetectorRuleOutput() GetDetectorRecipeDetectorRuleOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleOutput) ToGetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o GetDetectorRecipeDetectorRuleOutput) CandidateResponderRules() GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) []GetDetectorRecipeDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput)
}

// The id of the attached DataSource.
func (o GetDetectorRecipeDetectorRuleOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.DataSourceId }).(pulumi.StringOutput)
}

// Description for DetectorRecipeDetectorRule.
func (o GetDetectorRecipeDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of a Detector Rule
func (o GetDetectorRecipeDetectorRuleOutput) Details() GetDetectorRecipeDetectorRuleDetailArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) []GetDetectorRecipeDetectorRuleDetail { return v.Details }).(GetDetectorRecipeDetectorRuleDetailArrayOutput)
}

// detector for the rule
func (o GetDetectorRecipeDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule.
func (o GetDetectorRecipeDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// The display name of entity
func (o GetDetectorRecipeDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Data Source entities mapping for a Detector Rule
func (o GetDetectorRecipeDetectorRuleOutput) EntitiesMappings() GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) []GetDetectorRecipeDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetDetectorRecipeDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetDetectorRecipeDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o GetDetectorRecipeDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.Recommendation }).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetDetectorRecipeDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.ResourceType }).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetDetectorRecipeDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The current state of the resource.
func (o GetDetectorRecipeDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o GetDetectorRecipeDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o GetDetectorRecipeDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDetectorRecipeDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleArrayOutput) ToGetDetectorRecipeDetectorRuleArrayOutput() GetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleArrayOutput) ToGetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeDetectorRule {
		return vs[0].([]GetDetectorRecipeDetectorRule)[vs[1].(int)]
	}).(GetDetectorRecipeDetectorRuleOutput)
}

type GetDetectorRecipeDetectorRuleCandidateResponderRule struct {
	// The display name of entity
	DisplayName string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id string `pulumi:"id"`
	// Preferred state
	IsPreferred bool `pulumi:"isPreferred"`
}

// GetDetectorRecipeDetectorRuleCandidateResponderRuleInput is an input type that accepts GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs and GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleCandidateResponderRuleInput` via:
//
//	GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs{...}
type GetDetectorRecipeDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput
	ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput
}

type GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs struct {
	// The display name of entity
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolInput `pulumi:"isPreferred"`
}

func (GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return i.ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput)
}

// GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts GetDetectorRecipeDetectorRuleCandidateResponderRuleArray and GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayInput` via:
//
//	GetDetectorRecipeDetectorRuleCandidateResponderRuleArray{ GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs{...} }
type GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput
	ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput
}

type GetDetectorRecipeDetectorRuleCandidateResponderRuleArray []GetDetectorRecipeDetectorRuleCandidateResponderRuleInput

func (GetDetectorRecipeDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput)
}

type GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return o
}

// The display name of entity
func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleCandidateResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Ocid for detector recipe
func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleCandidateResponderRule) string { return v.Id }).(pulumi.StringOutput)
}

// Preferred state
func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleCandidateResponderRule) bool { return v.IsPreferred }).(pulumi.BoolOutput)
}

type GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeDetectorRuleCandidateResponderRule {
		return vs[0].([]GetDetectorRecipeDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput)
}

type GetDetectorRecipeDetectorRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// Configuration details
	Configurations []GetDetectorRecipeDetectorRuleDetailConfiguration `pulumi:"configurations"`
	// The id of the attached DataSource.
	DataSourceId string `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description string `pulumi:"description"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []GetDetectorRecipeDetectorRuleDetailEntitiesMapping `pulumi:"entitiesMappings"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetDetectorRecipeDetectorRuleDetailInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailArgs and GetDetectorRecipeDetectorRuleDetailOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailInput` via:
//
//	GetDetectorRecipeDetectorRuleDetailArgs{...}
type GetDetectorRecipeDetectorRuleDetailInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailOutput() GetDetectorRecipeDetectorRuleDetailOutput
	ToGetDetectorRecipeDetectorRuleDetailOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailOutput
}

type GetDetectorRecipeDetectorRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// Configuration details
	Configurations GetDetectorRecipeDetectorRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// The id of the attached DataSource.
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description pulumi.StringInput `pulumi:"description"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetDetectorRecipeDetectorRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailArgs) ToGetDetectorRecipeDetectorRuleDetailOutput() GetDetectorRecipeDetectorRuleDetailOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailArgs) ToGetDetectorRecipeDetectorRuleDetailOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailOutput)
}

// GetDetectorRecipeDetectorRuleDetailArrayInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailArray and GetDetectorRecipeDetectorRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailArrayInput` via:
//
//	GetDetectorRecipeDetectorRuleDetailArray{ GetDetectorRecipeDetectorRuleDetailArgs{...} }
type GetDetectorRecipeDetectorRuleDetailArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailArrayOutput() GetDetectorRecipeDetectorRuleDetailArrayOutput
	ToGetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailArrayOutput
}

type GetDetectorRecipeDetectorRuleDetailArray []GetDetectorRecipeDetectorRuleDetailInput

func (GetDetectorRecipeDetectorRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailArray) ToGetDetectorRecipeDetectorRuleDetailArrayOutput() GetDetectorRecipeDetectorRuleDetailArrayOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailArray) ToGetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailArrayOutput)
}

type GetDetectorRecipeDetectorRuleDetailOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailOutput) ToGetDetectorRecipeDetectorRuleDetailOutput() GetDetectorRecipeDetectorRuleDetailOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailOutput) ToGetDetectorRecipeDetectorRuleDetailOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailOutput {
	return o
}

// Base condition object
func (o GetDetectorRecipeDetectorRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetail) string { return v.Condition }).(pulumi.StringOutput)
}

// Configuration details
func (o GetDetectorRecipeDetectorRuleDetailOutput) Configurations() GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetail) []GetDetectorRecipeDetectorRuleDetailConfiguration {
		return v.Configurations
	}).(GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput)
}

// The id of the attached DataSource.
func (o GetDetectorRecipeDetectorRuleDetailOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetail) string { return v.DataSourceId }).(pulumi.StringOutput)
}

// Description for DetectorRecipeDetectorRule.
func (o GetDetectorRecipeDetectorRuleDetailOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetail) string { return v.Description }).(pulumi.StringOutput)
}

// Data Source entities mapping for a Detector Rule
func (o GetDetectorRecipeDetectorRuleDetailOutput) EntitiesMappings() GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetail) []GetDetectorRecipeDetectorRuleDetailEntitiesMapping {
		return v.EntitiesMappings
	}).(GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput)
}

// configuration allowed or not
func (o GetDetectorRecipeDetectorRuleDetailOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetail) bool { return v.IsConfigurationAllowed }).(pulumi.BoolOutput)
}

// Enables the control
func (o GetDetectorRecipeDetectorRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetail) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetDetectorRecipeDetectorRuleDetailOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetail) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o GetDetectorRecipeDetectorRuleDetailOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetail) string { return v.Recommendation }).(pulumi.StringOutput)
}

// The Risk Level
func (o GetDetectorRecipeDetectorRuleDetailOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetail) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type GetDetectorRecipeDetectorRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailArrayOutput) ToGetDetectorRecipeDetectorRuleDetailArrayOutput() GetDetectorRecipeDetectorRuleDetailArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailArrayOutput) ToGetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeDetectorRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeDetectorRuleDetail {
		return vs[0].([]GetDetectorRecipeDetectorRuleDetail)[vs[1].(int)]
	}).(GetDetectorRecipeDetectorRuleDetailOutput)
}

type GetDetectorRecipeDetectorRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetDetectorRecipeDetectorRuleDetailConfigurationValue `pulumi:"values"`
}

// GetDetectorRecipeDetectorRuleDetailConfigurationInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailConfigurationArgs and GetDetectorRecipeDetectorRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailConfigurationInput` via:
//
//	GetDetectorRecipeDetectorRuleDetailConfigurationArgs{...}
type GetDetectorRecipeDetectorRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailConfigurationOutput() GetDetectorRecipeDetectorRuleDetailConfigurationOutput
	ToGetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationOutput
}

type GetDetectorRecipeDetectorRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput `pulumi:"values"`
}

func (GetDetectorRecipeDetectorRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailConfigurationArgs) ToGetDetectorRecipeDetectorRuleDetailConfigurationOutput() GetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailConfigurationArgs) ToGetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailConfigurationOutput)
}

// GetDetectorRecipeDetectorRuleDetailConfigurationArrayInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailConfigurationArray and GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailConfigurationArrayInput` via:
//
//	GetDetectorRecipeDetectorRuleDetailConfigurationArray{ GetDetectorRecipeDetectorRuleDetailConfigurationArgs{...} }
type GetDetectorRecipeDetectorRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput
	ToGetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput
}

type GetDetectorRecipeDetectorRuleDetailConfigurationArray []GetDetectorRecipeDetectorRuleDetailConfigurationInput

func (GetDetectorRecipeDetectorRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailConfigurationArray) ToGetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailConfigurationArray) ToGetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput)
}

type GetDetectorRecipeDetectorRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailConfigurationOutput) ToGetDetectorRecipeDetectorRuleDetailConfigurationOutput() GetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailConfigurationOutput) ToGetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetDetectorRecipeDetectorRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration data type
func (o GetDetectorRecipeDetectorRuleDetailConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailConfiguration) string { return v.DataType }).(pulumi.StringOutput)
}

// configuration name
func (o GetDetectorRecipeDetectorRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipeDetectorRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

// List of configuration values
func (o GetDetectorRecipeDetectorRuleDetailConfigurationOutput) Values() GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailConfiguration) []GetDetectorRecipeDetectorRuleDetailConfigurationValue {
		return v.Values
	}).(GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) ToGetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) ToGetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeDetectorRuleDetailConfiguration {
		return vs[0].([]GetDetectorRecipeDetectorRuleDetailConfiguration)[vs[1].(int)]
	}).(GetDetectorRecipeDetectorRuleDetailConfigurationOutput)
}

type GetDetectorRecipeDetectorRuleDetailConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetDetectorRecipeDetectorRuleDetailConfigurationValueInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailConfigurationValueArgs and GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailConfigurationValueInput` via:
//
//	GetDetectorRecipeDetectorRuleDetailConfigurationValueArgs{...}
type GetDetectorRecipeDetectorRuleDetailConfigurationValueInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput
	ToGetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput
}

type GetDetectorRecipeDetectorRuleDetailConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDetectorRecipeDetectorRuleDetailConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailConfigurationValueArgs) ToGetDetectorRecipeDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailConfigurationValueArgs) ToGetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput)
}

// GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailConfigurationValueArray and GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput` via:
//
//	GetDetectorRecipeDetectorRuleDetailConfigurationValueArray{ GetDetectorRecipeDetectorRuleDetailConfigurationValueArgs{...} }
type GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput
	ToGetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput
}

type GetDetectorRecipeDetectorRuleDetailConfigurationValueArray []GetDetectorRecipeDetectorRuleDetailConfigurationValueInput

func (GetDetectorRecipeDetectorRuleDetailConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailConfigurationValueArray) ToGetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailConfigurationValueArray) ToGetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ToGetDetectorRecipeDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ToGetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailConfigurationValue) string { return v.ListType }).(pulumi.StringOutput)
}

// type of the managed list
func (o GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailConfigurationValue) string { return v.ManagedListType }).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailConfigurationValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) ToGetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) ToGetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeDetectorRuleDetailConfigurationValue {
		return vs[0].([]GetDetectorRecipeDetectorRuleDetailConfigurationValue)[vs[1].(int)]
	}).(GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput)
}

type GetDetectorRecipeDetectorRuleDetailEntitiesMapping struct {
	// The display name of entity
	DisplayName string `pulumi:"displayName"`
	// Possible type of entity
	EntityType string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField string `pulumi:"queryField"`
}

// GetDetectorRecipeDetectorRuleDetailEntitiesMappingInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailEntitiesMappingArgs and GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailEntitiesMappingInput` via:
//
//	GetDetectorRecipeDetectorRuleDetailEntitiesMappingArgs{...}
type GetDetectorRecipeDetectorRuleDetailEntitiesMappingInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput() GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput
	ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput
}

type GetDetectorRecipeDetectorRuleDetailEntitiesMappingArgs struct {
	// The display name of entity
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringInput `pulumi:"queryField"`
}

func (GetDetectorRecipeDetectorRuleDetailEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailEntitiesMappingArgs) ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput() GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailEntitiesMappingArgs) ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput)
}

// GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayInput is an input type that accepts GetDetectorRecipeDetectorRuleDetailEntitiesMappingArray and GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayInput` via:
//
//	GetDetectorRecipeDetectorRuleDetailEntitiesMappingArray{ GetDetectorRecipeDetectorRuleDetailEntitiesMappingArgs{...} }
type GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput() GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput
	ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput
}

type GetDetectorRecipeDetectorRuleDetailEntitiesMappingArray []GetDetectorRecipeDetectorRuleDetailEntitiesMappingInput

func (GetDetectorRecipeDetectorRuleDetailEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetailEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleDetailEntitiesMappingArray) ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput() GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput {
	return i.ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleDetailEntitiesMappingArray) ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput)
}

type GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput) ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput() GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput) ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput {
	return o
}

// The display name of entity
func (o GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailEntitiesMapping) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Possible type of entity
func (o GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailEntitiesMapping) string { return v.EntityType }).(pulumi.StringOutput)
}

// The entity value mapped to a data source query
func (o GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput) QueryField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleDetailEntitiesMapping) string { return v.QueryField }).(pulumi.StringOutput)
}

type GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleDetailEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput) ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput() GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput) ToGetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeDetectorRuleDetailEntitiesMapping {
		return vs[0].([]GetDetectorRecipeDetectorRuleDetailEntitiesMapping)[vs[1].(int)]
	}).(GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput)
}

type GetDetectorRecipeDetectorRuleEntitiesMapping struct {
	// The display name of entity
	DisplayName string `pulumi:"displayName"`
	// Possible type of entity
	EntityType string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField string `pulumi:"queryField"`
}

// GetDetectorRecipeDetectorRuleEntitiesMappingInput is an input type that accepts GetDetectorRecipeDetectorRuleEntitiesMappingArgs and GetDetectorRecipeDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleEntitiesMappingInput` via:
//
//	GetDetectorRecipeDetectorRuleEntitiesMappingArgs{...}
type GetDetectorRecipeDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleEntitiesMappingOutput() GetDetectorRecipeDetectorRuleEntitiesMappingOutput
	ToGetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleEntitiesMappingOutput
}

type GetDetectorRecipeDetectorRuleEntitiesMappingArgs struct {
	// The display name of entity
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringInput `pulumi:"queryField"`
}

func (GetDetectorRecipeDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleEntitiesMappingArgs) ToGetDetectorRecipeDetectorRuleEntitiesMappingOutput() GetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return i.ToGetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleEntitiesMappingArgs) ToGetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleEntitiesMappingOutput)
}

// GetDetectorRecipeDetectorRuleEntitiesMappingArrayInput is an input type that accepts GetDetectorRecipeDetectorRuleEntitiesMappingArray and GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeDetectorRuleEntitiesMappingArrayInput` via:
//
//	GetDetectorRecipeDetectorRuleEntitiesMappingArray{ GetDetectorRecipeDetectorRuleEntitiesMappingArgs{...} }
type GetDetectorRecipeDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput
	ToGetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput
}

type GetDetectorRecipeDetectorRuleEntitiesMappingArray []GetDetectorRecipeDetectorRuleEntitiesMappingInput

func (GetDetectorRecipeDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipeDetectorRuleEntitiesMappingArray) ToGetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return i.ToGetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeDetectorRuleEntitiesMappingArray) ToGetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput)
}

type GetDetectorRecipeDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleEntitiesMappingOutput) ToGetDetectorRecipeDetectorRuleEntitiesMappingOutput() GetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleEntitiesMappingOutput) ToGetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return o
}

// The display name of entity
func (o GetDetectorRecipeDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleEntitiesMapping) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Possible type of entity
func (o GetDetectorRecipeDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleEntitiesMapping) string { return v.EntityType }).(pulumi.StringOutput)
}

// The entity value mapped to a data source query
func (o GetDetectorRecipeDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeDetectorRuleEntitiesMapping) string { return v.QueryField }).(pulumi.StringOutput)
}

type GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ToGetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ToGetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeDetectorRuleEntitiesMapping {
		return vs[0].([]GetDetectorRecipeDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(GetDetectorRecipeDetectorRuleEntitiesMappingOutput)
}

type GetDetectorRecipeEffectiveDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// The id of the attached DataSource.
	DataSourceId string `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description string `pulumi:"description"`
	// Details of a Detector Rule
	Details []GetDetectorRecipeEffectiveDetectorRuleDetail `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// The display name of entity
	DisplayName string `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The current state of the resource.
	State string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDetectorRecipeEffectiveDetectorRuleInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleArgs and GetDetectorRecipeEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleArgs{...}
type GetDetectorRecipeEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleOutput() GetDetectorRecipeEffectiveDetectorRuleOutput
	ToGetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleOutput
}

type GetDetectorRecipeEffectiveDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// The id of the attached DataSource.
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipeEffectiveDetectorRuleDetailArrayInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// The display name of entity
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The current state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDetectorRecipeEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleArgs) ToGetDetectorRecipeEffectiveDetectorRuleOutput() GetDetectorRecipeEffectiveDetectorRuleOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleArgs) ToGetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleOutput)
}

// GetDetectorRecipeEffectiveDetectorRuleArrayInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleArray and GetDetectorRecipeEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleArrayInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleArray{ GetDetectorRecipeEffectiveDetectorRuleArgs{...} }
type GetDetectorRecipeEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleArrayOutput
	ToGetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleArrayOutput
}

type GetDetectorRecipeEffectiveDetectorRuleArray []GetDetectorRecipeEffectiveDetectorRuleInput

func (GetDetectorRecipeEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleArray) ToGetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleArray) ToGetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleOutput) ToGetDetectorRecipeEffectiveDetectorRuleOutput() GetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleOutput) ToGetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) CandidateResponderRules() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) []GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

// The id of the attached DataSource.
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.DataSourceId }).(pulumi.StringOutput)
}

// Description for DetectorRecipeDetectorRule.
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of a Detector Rule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) Details() GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) []GetDetectorRecipeEffectiveDetectorRuleDetail {
		return v.Details
	}).(GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput)
}

// detector for the rule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule.
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// The display name of entity
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Data Source entities mapping for a Detector Rule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) EntitiesMappings() GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) []GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.Recommendation }).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.ResourceType }).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The current state of the resource.
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o GetDetectorRecipeEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeEffectiveDetectorRule {
		return vs[0].([]GetDetectorRecipeEffectiveDetectorRule)[vs[1].(int)]
	}).(GetDetectorRecipeEffectiveDetectorRuleOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule struct {
	// The display name of entity
	DisplayName string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id string `pulumi:"id"`
	// Preferred state
	IsPreferred bool `pulumi:"isPreferred"`
}

// GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs and GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs{...}
type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput
	ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput
}

type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs struct {
	// The display name of entity
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolInput `pulumi:"isPreferred"`
}

func (GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput)
}

// GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray and GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray{ GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs{...} }
type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput
	ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput
}

type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray []GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput

func (GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

// The display name of entity
func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Ocid for detector recipe
func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule) string { return v.Id }).(pulumi.StringOutput)
}

// Preferred state
func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule) bool { return v.IsPreferred }).(pulumi.BoolOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule {
		return vs[0].([]GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// Configuration details
	Configurations []GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetDetectorRecipeEffectiveDetectorRuleDetailInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleDetailArgs and GetDetectorRecipeEffectiveDetectorRuleDetailOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleDetailInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleDetailArgs{...}
type GetDetectorRecipeEffectiveDetectorRuleDetailInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleDetailOutput() GetDetectorRecipeEffectiveDetectorRuleDetailOutput
	ToGetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailOutput
}

type GetDetectorRecipeEffectiveDetectorRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// Configuration details
	Configurations GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetDetectorRecipeEffectiveDetectorRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailOutput() GetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleDetailOutput)
}

// GetDetectorRecipeEffectiveDetectorRuleDetailArrayInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleDetailArray and GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleDetailArrayInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleDetailArray{ GetDetectorRecipeEffectiveDetectorRuleDetailArgs{...} }
type GetDetectorRecipeEffectiveDetectorRuleDetailArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput
	ToGetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput
}

type GetDetectorRecipeEffectiveDetectorRuleDetailArray []GetDetectorRecipeEffectiveDetectorRuleDetailInput

func (GetDetectorRecipeEffectiveDetectorRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailArray) ToGetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailArray) ToGetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailOutput() GetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return o
}

// Base condition object
func (o GetDetectorRecipeEffectiveDetectorRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetail) string { return v.Condition }).(pulumi.StringOutput)
}

// Configuration details
func (o GetDetectorRecipeEffectiveDetectorRuleDetailOutput) Configurations() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetail) []GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
		return v.Configurations
	}).(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetDetectorRecipeEffectiveDetectorRuleDetailOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetail) bool { return v.IsConfigurationAllowed }).(pulumi.BoolOutput)
}

// Enables the control
func (o GetDetectorRecipeEffectiveDetectorRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetail) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetDetectorRecipeEffectiveDetectorRuleDetailOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetail) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetDetectorRecipeEffectiveDetectorRuleDetailOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetail) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeEffectiveDetectorRuleDetail {
		return vs[0].([]GetDetectorRecipeEffectiveDetectorRuleDetail)[vs[1].(int)]
	}).(GetDetectorRecipeEffectiveDetectorRuleDetailOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue `pulumi:"values"`
}

// GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs and GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{...}
type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput
	ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput
}

type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput `pulumi:"values"`
}

func (GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput)
}

// GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray and GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray{ GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{...} }
type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput
	ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput
}

type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray []GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput

func (GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration data type
func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string { return v.DataType }).(pulumi.StringOutput)
}

// configuration name
func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

// List of configuration values
func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Values() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) []GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
		return v.Values
	}).(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
		return vs[0].([]GetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)[vs[1].(int)]
	}).(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs and GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{...}
type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput
	ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput
}

type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput)
}

// GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray and GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray{ GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{...} }
type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput
	ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput
}

type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray []GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput

func (GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) string { return v.ListType }).(pulumi.StringOutput)
}

// type of the managed list
func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
		return vs[0].([]GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)[vs[1].(int)]
	}).(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping struct {
	// The display name of entity
	DisplayName string `pulumi:"displayName"`
	// Possible type of entity
	EntityType string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField string `pulumi:"queryField"`
}

// GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs and GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{...}
type GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput
	ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput
}

type GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs struct {
	// The display name of entity
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringInput `pulumi:"queryField"`
}

func (GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput)
}

// GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput is an input type that accepts GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray and GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput` via:
//
//	GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray{ GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{...} }
type GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput
	ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput
}

type GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray []GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput

func (GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return i.ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

// The display name of entity
func (o GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Possible type of entity
func (o GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) string { return v.EntityType }).(pulumi.StringOutput)
}

// The entity value mapped to a data source query
func (o GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) string { return v.QueryField }).(pulumi.StringOutput)
}

type GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ToGetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping {
		return vs[0].([]GetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput)
}

type GetDetectorRecipesDetectorRecipeCollection struct {
	Items []GetDetectorRecipesDetectorRecipeCollectionItem `pulumi:"items"`
}

// GetDetectorRecipesDetectorRecipeCollectionInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionArgs and GetDetectorRecipesDetectorRecipeCollectionOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionOutput() GetDetectorRecipesDetectorRecipeCollectionOutput
	ToGetDetectorRecipesDetectorRecipeCollectionOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionOutput
}

type GetDetectorRecipesDetectorRecipeCollectionArgs struct {
	Items GetDetectorRecipesDetectorRecipeCollectionItemArrayInput `pulumi:"items"`
}

func (GetDetectorRecipesDetectorRecipeCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollection)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionArgs) ToGetDetectorRecipesDetectorRecipeCollectionOutput() GetDetectorRecipesDetectorRecipeCollectionOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionArgs) ToGetDetectorRecipesDetectorRecipeCollectionOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionArray and GetDetectorRecipesDetectorRecipeCollectionArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionArray{ GetDetectorRecipesDetectorRecipeCollectionArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionArrayOutput() GetDetectorRecipesDetectorRecipeCollectionArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionArray []GetDetectorRecipesDetectorRecipeCollectionInput

func (GetDetectorRecipesDetectorRecipeCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollection)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionArray) ToGetDetectorRecipesDetectorRecipeCollectionArrayOutput() GetDetectorRecipesDetectorRecipeCollectionArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionArray) ToGetDetectorRecipesDetectorRecipeCollectionArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollection)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionOutput) ToGetDetectorRecipesDetectorRecipeCollectionOutput() GetDetectorRecipesDetectorRecipeCollectionOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionOutput) ToGetDetectorRecipesDetectorRecipeCollectionOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionOutput) Items() GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollection) []GetDetectorRecipesDetectorRecipeCollectionItem {
		return v.Items
	}).(GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollection)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionArrayOutput() GetDetectorRecipesDetectorRecipeCollectionArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollection {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollection)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Description for DetectorRecipeDetectorRule.
	Description string `pulumi:"description"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule `pulumi:"detectorRules"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule `pulumi:"effectiveDetectorRules"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Ocid for detector recipe
	Id string `pulumi:"id"`
	// Owner of detector recipe
	Owner string `pulumi:"owner"`
	// Recipe Ocid of the Source Recipe to be cloned
	SourceDetectorRecipeId string `pulumi:"sourceDetectorRecipeId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The recipe attached to targets
	TargetIds []string `pulumi:"targetIds"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemArgs and GetDetectorRecipesDetectorRecipeCollectionItemOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemOutput() GetDetectorRecipesDetectorRecipeCollectionItemOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// Description for DetectorRecipeDetectorRule.
	Description pulumi.StringInput `pulumi:"description"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayInput `pulumi:"detectorRules"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayInput `pulumi:"effectiveDetectorRules"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Ocid for detector recipe
	Id pulumi.StringInput `pulumi:"id"`
	// Owner of detector recipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// Recipe Ocid of the Source Recipe to be cloned
	SourceDetectorRecipeId pulumi.StringInput `pulumi:"sourceDetectorRecipeId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The recipe attached to targets
	TargetIds pulumi.StringArrayInput `pulumi:"targetIds"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItem)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemOutput() GetDetectorRecipesDetectorRecipeCollectionItemOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemArray and GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemArray{ GetDetectorRecipesDetectorRecipeCollectionItemArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemArray []GetDetectorRecipesDetectorRecipeCollectionItemInput

func (GetDetectorRecipesDetectorRecipeCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItem)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemArray) ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemArray) ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItem)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemOutput() GetDetectorRecipesDetectorRecipeCollectionItemOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Description for DetectorRecipeDetectorRule.
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// detector for the rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.Detector }).(pulumi.StringOutput)
}

// List of detector rules for the detector type for recipe - user input
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) DetectorRules() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule {
		return v.DetectorRules
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of effective detector rules for the detector type for recipe after applying defaults
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) EffectiveDetectorRules() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule {
		return v.EffectiveDetectorRules
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Ocid for detector recipe
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Owner of detector recipe
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.Owner }).(pulumi.StringOutput)
}

// Recipe Ocid of the Source Recipe to be cloned
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) SourceDetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.SourceDetectorRecipeId }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The recipe attached to targets
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) TargetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) []string { return v.TargetIds }).(pulumi.StringArrayOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItem)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItem {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItem)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// The id of the attached DataSource.
	DataSourceId string `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description string `pulumi:"description"`
	// Details of a Detector Rule
	Details []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// The id of the attached DataSource.
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray{ GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleInput

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) CandidateResponderRules() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput)
}

// The id of the attached DataSource.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.DataSourceId }).(pulumi.StringOutput)
}

// Description for DetectorRecipeDetectorRule.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of a Detector Rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) Details() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail {
		return v.Details
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput)
}

// detector for the rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Data Source entities mapping for a Detector Rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) EntitiesMappings() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.Recommendation }).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.ResourceType }).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id string `pulumi:"id"`
	// Preferred state
	IsPreferred bool `pulumi:"isPreferred"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolInput `pulumi:"isPreferred"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray{ GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleInput

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Ocid for detector recipe
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// Preferred state
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule) bool {
		return v.IsPreferred
	}).(pulumi.BoolOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// Configuration details
	Configurations []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration `pulumi:"configurations"`
	// The id of the attached DataSource.
	DataSourceId string `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description string `pulumi:"description"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping `pulumi:"entitiesMappings"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// Configuration details
	Configurations GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// The id of the attached DataSource.
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description pulumi.StringInput `pulumi:"description"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArray and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArray{ GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArray []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailInput

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput {
	return o
}

// Base condition object
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail) string { return v.Condition }).(pulumi.StringOutput)
}

// Configuration details
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) Configurations() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail) []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration {
		return v.Configurations
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput)
}

// The id of the attached DataSource.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail) string { return v.DataSourceId }).(pulumi.StringOutput)
}

// Description for DetectorRecipeDetectorRule.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail) string { return v.Description }).(pulumi.StringOutput)
}

// Data Source entities mapping for a Detector Rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) EntitiesMappings() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail) []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping {
		return v.EntitiesMappings
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput)
}

// configuration allowed or not
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail) bool {
		return v.IsConfigurationAllowed
	}).(pulumi.BoolOutput)
}

// Enables the control
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail) string {
		return v.Recommendation
	}).(pulumi.StringOutput)
}

// The Risk Level
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetail)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue `pulumi:"values"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayInput `pulumi:"values"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArray and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArray{ GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArray []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationInput

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration data type
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration) string {
		return v.DataType
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

// List of configuration values
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput) Values() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration) []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue {
		return v.Values
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfiguration)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArray and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArray{ GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArray []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueInput

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue) string {
		return v.ListType
	}).(pulumi.StringOutput)
}

// type of the managed list
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValue)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Possible type of entity
	EntityType string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField string `pulumi:"queryField"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringInput `pulumi:"queryField"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArray and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArray{ GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArray []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingInput

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Possible type of entity
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// The entity value mapped to a data source query
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput) QueryField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping) string {
		return v.QueryField
	}).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMapping)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Possible type of entity
	EntityType string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField string `pulumi:"queryField"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArgs and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringInput `pulumi:"queryField"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArray and GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArray{ GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArray []GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingInput

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArray) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Possible type of entity
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// The entity value mapped to a data source query
func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping) string {
		return v.QueryField
	}).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule `pulumi:"candidateResponderRules"`
	// The id of the attached DataSource.
	DataSourceId string `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description string `pulumi:"description"`
	// Details of a Detector Rule
	Details []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs struct {
	// List of CandidateResponderRule related to this rule
	CandidateResponderRules GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayInput `pulumi:"candidateResponderRules"`
	// The id of the attached DataSource.
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// Description for DetectorRecipeDetectorRule.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of a Detector Rule
	Details GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for DetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the detector recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the detector recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray{ GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleInput

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput {
	return o
}

// List of CandidateResponderRule related to this rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) CandidateResponderRules() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule {
		return v.CandidateResponderRules
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

// The id of the attached DataSource.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.DataSourceId
	}).(pulumi.StringOutput)
}

// Description for DetectorRecipeDetectorRule.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Details of a Detector Rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) Details() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail {
		return v.Details
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput)
}

// detector for the rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.DetectorRuleId
	}).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Data Source entities mapping for a Detector Rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) EntitiesMappings() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) []string {
		return v.ManagedListTypes
	}).(pulumi.StringArrayOutput)
}

// Recommendation for DetectorRecipeDetectorRule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.Recommendation
	}).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.ResourceType
	}).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.ServiceType
	}).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the detector recipe was created. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the detector recipe was updated. Format defined by RFC3339.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Ocid for detector recipe
	Id string `pulumi:"id"`
	// Preferred state
	IsPreferred bool `pulumi:"isPreferred"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Ocid for detector recipe
	Id pulumi.StringInput `pulumi:"id"`
	// Preferred state
	IsPreferred pulumi.BoolInput `pulumi:"isPreferred"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray{ GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleInput

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Ocid for detector recipe
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// Preferred state
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput) IsPreferred() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule) bool {
		return v.IsPreferred
	}).(pulumi.BoolOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRule)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// Configuration details
	Configurations []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArgs and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// Configuration details
	Configurations GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Enables the control
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArray and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArray{ GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArray []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailInput

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput {
	return o
}

// Base condition object
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// Configuration details
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput) Configurations() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail) []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration {
		return v.Configurations
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail) bool {
		return v.IsConfigurationAllowed
	}).(pulumi.BoolOutput)
}

// Enables the control
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail) []string {
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail) string {
		return v.RiskLevel
	}).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetail)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue `pulumi:"values"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArgs and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayInput `pulumi:"values"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArray and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArray{ GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArray []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationInput

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration data type
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration) string {
		return v.DataType
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

// List of configuration values
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput) Values() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration) []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue {
		return v.Values
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfiguration)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArgs and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArray and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArray{ GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArray []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueInput

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue) string {
		return v.ListType
	}).(pulumi.StringOutput)
}

// type of the managed list
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValue)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Possible type of entity
	EntityType string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField string `pulumi:"queryField"`
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArgs and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArgs{...}
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringInput `pulumi:"queryField"`
}

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArgs) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput)
}

// GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayInput is an input type that accepts GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArray and GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayInput` via:
//
//	GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArray{ GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArgs{...} }
type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput
	ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArray []GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingInput

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return i.ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArray) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Possible type of entity
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// The entity value mapped to a data source query
func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping) string {
		return v.QueryField
	}).(pulumi.StringOutput)
}

type GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput() GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput) ToGetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping {
		return vs[0].([]GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput)
}

type GetDetectorRecipesFilter struct {
	// configuration name
	Name  string `pulumi:"name"`
	Regex *bool  `pulumi:"regex"`
	// List of configuration values
	Values []string `pulumi:"values"`
}

// GetDetectorRecipesFilterInput is an input type that accepts GetDetectorRecipesFilterArgs and GetDetectorRecipesFilterOutput values.
// You can construct a concrete instance of `GetDetectorRecipesFilterInput` via:
//
//	GetDetectorRecipesFilterArgs{...}
type GetDetectorRecipesFilterInput interface {
	pulumi.Input

	ToGetDetectorRecipesFilterOutput() GetDetectorRecipesFilterOutput
	ToGetDetectorRecipesFilterOutputWithContext(context.Context) GetDetectorRecipesFilterOutput
}

type GetDetectorRecipesFilterArgs struct {
	// configuration name
	Name  pulumi.StringInput  `pulumi:"name"`
	Regex pulumi.BoolPtrInput `pulumi:"regex"`
	// List of configuration values
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDetectorRecipesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesFilter)(nil)).Elem()
}

func (i GetDetectorRecipesFilterArgs) ToGetDetectorRecipesFilterOutput() GetDetectorRecipesFilterOutput {
	return i.ToGetDetectorRecipesFilterOutputWithContext(context.Background())
}

func (i GetDetectorRecipesFilterArgs) ToGetDetectorRecipesFilterOutputWithContext(ctx context.Context) GetDetectorRecipesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesFilterOutput)
}

// GetDetectorRecipesFilterArrayInput is an input type that accepts GetDetectorRecipesFilterArray and GetDetectorRecipesFilterArrayOutput values.
// You can construct a concrete instance of `GetDetectorRecipesFilterArrayInput` via:
//
//	GetDetectorRecipesFilterArray{ GetDetectorRecipesFilterArgs{...} }
type GetDetectorRecipesFilterArrayInput interface {
	pulumi.Input

	ToGetDetectorRecipesFilterArrayOutput() GetDetectorRecipesFilterArrayOutput
	ToGetDetectorRecipesFilterArrayOutputWithContext(context.Context) GetDetectorRecipesFilterArrayOutput
}

type GetDetectorRecipesFilterArray []GetDetectorRecipesFilterInput

func (GetDetectorRecipesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesFilter)(nil)).Elem()
}

func (i GetDetectorRecipesFilterArray) ToGetDetectorRecipesFilterArrayOutput() GetDetectorRecipesFilterArrayOutput {
	return i.ToGetDetectorRecipesFilterArrayOutputWithContext(context.Background())
}

func (i GetDetectorRecipesFilterArray) ToGetDetectorRecipesFilterArrayOutputWithContext(ctx context.Context) GetDetectorRecipesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDetectorRecipesFilterArrayOutput)
}

type GetDetectorRecipesFilterOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDetectorRecipesFilter)(nil)).Elem()
}

func (o GetDetectorRecipesFilterOutput) ToGetDetectorRecipesFilterOutput() GetDetectorRecipesFilterOutput {
	return o
}

func (o GetDetectorRecipesFilterOutput) ToGetDetectorRecipesFilterOutputWithContext(ctx context.Context) GetDetectorRecipesFilterOutput {
	return o
}

// configuration name
func (o GetDetectorRecipesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDetectorRecipesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDetectorRecipesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDetectorRecipesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

// List of configuration values
func (o GetDetectorRecipesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDetectorRecipesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDetectorRecipesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDetectorRecipesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDetectorRecipesFilter)(nil)).Elem()
}

func (o GetDetectorRecipesFilterArrayOutput) ToGetDetectorRecipesFilterArrayOutput() GetDetectorRecipesFilterArrayOutput {
	return o
}

func (o GetDetectorRecipesFilterArrayOutput) ToGetDetectorRecipesFilterArrayOutputWithContext(ctx context.Context) GetDetectorRecipesFilterArrayOutput {
	return o
}

func (o GetDetectorRecipesFilterArrayOutput) Index(i pulumi.IntInput) GetDetectorRecipesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDetectorRecipesFilter {
		return vs[0].([]GetDetectorRecipesFilter)[vs[1].(int)]
	}).(GetDetectorRecipesFilterOutput)
}

type GetGuardTargetTargetDetail struct {
	// The name of the security zone to associate this compartment with.
	SecurityZoneDisplayName string `pulumi:"securityZoneDisplayName"`
	// The OCID of the security zone to associate this compartment with.
	SecurityZoneId string `pulumi:"securityZoneId"`
	// possible type of targets
	TargetResourceType string `pulumi:"targetResourceType"`
	// The list of security zone recipes to associate this compartment with.
	TargetSecurityZoneRecipes []GetGuardTargetTargetDetailTargetSecurityZoneRecipe `pulumi:"targetSecurityZoneRecipes"`
}

// GetGuardTargetTargetDetailInput is an input type that accepts GetGuardTargetTargetDetailArgs and GetGuardTargetTargetDetailOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetailInput` via:
//
//	GetGuardTargetTargetDetailArgs{...}
type GetGuardTargetTargetDetailInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetailOutput() GetGuardTargetTargetDetailOutput
	ToGetGuardTargetTargetDetailOutputWithContext(context.Context) GetGuardTargetTargetDetailOutput
}

type GetGuardTargetTargetDetailArgs struct {
	// The name of the security zone to associate this compartment with.
	SecurityZoneDisplayName pulumi.StringInput `pulumi:"securityZoneDisplayName"`
	// The OCID of the security zone to associate this compartment with.
	SecurityZoneId pulumi.StringInput `pulumi:"securityZoneId"`
	// possible type of targets
	TargetResourceType pulumi.StringInput `pulumi:"targetResourceType"`
	// The list of security zone recipes to associate this compartment with.
	TargetSecurityZoneRecipes GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayInput `pulumi:"targetSecurityZoneRecipes"`
}

func (GetGuardTargetTargetDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetail)(nil)).Elem()
}

func (i GetGuardTargetTargetDetailArgs) ToGetGuardTargetTargetDetailOutput() GetGuardTargetTargetDetailOutput {
	return i.ToGetGuardTargetTargetDetailOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetailArgs) ToGetGuardTargetTargetDetailOutputWithContext(ctx context.Context) GetGuardTargetTargetDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetailOutput)
}

// GetGuardTargetTargetDetailArrayInput is an input type that accepts GetGuardTargetTargetDetailArray and GetGuardTargetTargetDetailArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetailArrayInput` via:
//
//	GetGuardTargetTargetDetailArray{ GetGuardTargetTargetDetailArgs{...} }
type GetGuardTargetTargetDetailArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetailArrayOutput() GetGuardTargetTargetDetailArrayOutput
	ToGetGuardTargetTargetDetailArrayOutputWithContext(context.Context) GetGuardTargetTargetDetailArrayOutput
}

type GetGuardTargetTargetDetailArray []GetGuardTargetTargetDetailInput

func (GetGuardTargetTargetDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetail)(nil)).Elem()
}

func (i GetGuardTargetTargetDetailArray) ToGetGuardTargetTargetDetailArrayOutput() GetGuardTargetTargetDetailArrayOutput {
	return i.ToGetGuardTargetTargetDetailArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetailArray) ToGetGuardTargetTargetDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetailArrayOutput)
}

type GetGuardTargetTargetDetailOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetail)(nil)).Elem()
}

func (o GetGuardTargetTargetDetailOutput) ToGetGuardTargetTargetDetailOutput() GetGuardTargetTargetDetailOutput {
	return o
}

func (o GetGuardTargetTargetDetailOutput) ToGetGuardTargetTargetDetailOutputWithContext(ctx context.Context) GetGuardTargetTargetDetailOutput {
	return o
}

// The name of the security zone to associate this compartment with.
func (o GetGuardTargetTargetDetailOutput) SecurityZoneDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetail) string { return v.SecurityZoneDisplayName }).(pulumi.StringOutput)
}

// The OCID of the security zone to associate this compartment with.
func (o GetGuardTargetTargetDetailOutput) SecurityZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetail) string { return v.SecurityZoneId }).(pulumi.StringOutput)
}

// possible type of targets
func (o GetGuardTargetTargetDetailOutput) TargetResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetail) string { return v.TargetResourceType }).(pulumi.StringOutput)
}

// The list of security zone recipes to associate this compartment with.
func (o GetGuardTargetTargetDetailOutput) TargetSecurityZoneRecipes() GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetail) []GetGuardTargetTargetDetailTargetSecurityZoneRecipe {
		return v.TargetSecurityZoneRecipes
	}).(GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput)
}

type GetGuardTargetTargetDetailArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetail)(nil)).Elem()
}

func (o GetGuardTargetTargetDetailArrayOutput) ToGetGuardTargetTargetDetailArrayOutput() GetGuardTargetTargetDetailArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetailArrayOutput) ToGetGuardTargetTargetDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetailArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetailArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetail {
		return vs[0].([]GetGuardTargetTargetDetail)[vs[1].(int)]
	}).(GetGuardTargetTargetDetailOutput)
}

type GetGuardTargetTargetDetailTargetSecurityZoneRecipe struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// ResponderRule display name.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// The list of `SecurityPolicy` ids that are included in the recipe
	SecurityPolicies []string `pulumi:"securityPolicies"`
	// The current state of the ResponderRule.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetGuardTargetTargetDetailTargetSecurityZoneRecipeInput is an input type that accepts GetGuardTargetTargetDetailTargetSecurityZoneRecipeArgs and GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetailTargetSecurityZoneRecipeInput` via:
//
//	GetGuardTargetTargetDetailTargetSecurityZoneRecipeArgs{...}
type GetGuardTargetTargetDetailTargetSecurityZoneRecipeInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput() GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput
	ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeOutputWithContext(context.Context) GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput
}

type GetGuardTargetTargetDetailTargetSecurityZoneRecipeArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// ResponderRule display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// The list of `SecurityPolicy` ids that are included in the recipe
	SecurityPolicies pulumi.StringArrayInput `pulumi:"securityPolicies"`
	// The current state of the ResponderRule.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetGuardTargetTargetDetailTargetSecurityZoneRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (i GetGuardTargetTargetDetailTargetSecurityZoneRecipeArgs) ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput() GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput {
	return i.ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetailTargetSecurityZoneRecipeArgs) ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeOutputWithContext(ctx context.Context) GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput)
}

// GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayInput is an input type that accepts GetGuardTargetTargetDetailTargetSecurityZoneRecipeArray and GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayInput` via:
//
//	GetGuardTargetTargetDetailTargetSecurityZoneRecipeArray{ GetGuardTargetTargetDetailTargetSecurityZoneRecipeArgs{...} }
type GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput() GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput
	ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(context.Context) GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput
}

type GetGuardTargetTargetDetailTargetSecurityZoneRecipeArray []GetGuardTargetTargetDetailTargetSecurityZoneRecipeInput

func (GetGuardTargetTargetDetailTargetSecurityZoneRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (i GetGuardTargetTargetDetailTargetSecurityZoneRecipeArray) ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput() GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return i.ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetailTargetSecurityZoneRecipeArray) ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput)
}

type GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput() GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput {
	return o
}

func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeOutputWithContext(ctx context.Context) GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput {
	return o
}

// Compartment Identifier
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// ResponderRule description.
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) string { return v.Description }).(pulumi.StringOutput)
}

// ResponderRule display name.
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// Unique identifier of TargetResponderRecipe that can't be changed after creation.
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) string { return v.Owner }).(pulumi.StringOutput)
}

// The list of `SecurityPolicy` ids that are included in the recipe
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) SecurityPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) []string { return v.SecurityPolicies }).(pulumi.StringArrayOutput)
}

// The current state of the ResponderRule.
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetailTargetSecurityZoneRecipe) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput) ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput() GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput) ToGetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetailTargetSecurityZoneRecipe {
		return vs[0].([]GetGuardTargetTargetDetailTargetSecurityZoneRecipe)[vs[1].(int)]
	}).(GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput)
}

type GetGuardTargetTargetDetectorRecipe struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// Unique identifier for Detector Recipe of which this is an extension
	DetectorRecipeId string `pulumi:"detectorRecipeId"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules []GetGuardTargetTargetDetectorRecipeDetectorRule `pulumi:"detectorRules"`
	// ResponderRule display name.
	DisplayName string `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// The current state of the ResponderRule.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetGuardTargetTargetDetectorRecipeInput is an input type that accepts GetGuardTargetTargetDetectorRecipeArgs and GetGuardTargetTargetDetectorRecipeOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeInput` via:
//
//	GetGuardTargetTargetDetectorRecipeArgs{...}
type GetGuardTargetTargetDetectorRecipeInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeOutput() GetGuardTargetTargetDetectorRecipeOutput
	ToGetGuardTargetTargetDetectorRecipeOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeOutput
}

type GetGuardTargetTargetDetectorRecipeArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// Unique identifier for Detector Recipe of which this is an extension
	DetectorRecipeId pulumi.StringInput `pulumi:"detectorRecipeId"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules GetGuardTargetTargetDetectorRecipeDetectorRuleArrayInput `pulumi:"detectorRules"`
	// ResponderRule display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id pulumi.StringInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// The current state of the ResponderRule.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetGuardTargetTargetDetectorRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipe)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeArgs) ToGetGuardTargetTargetDetectorRecipeOutput() GetGuardTargetTargetDetectorRecipeOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeArgs) ToGetGuardTargetTargetDetectorRecipeOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeOutput)
}

// GetGuardTargetTargetDetectorRecipeArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeArray and GetGuardTargetTargetDetectorRecipeArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeArray{ GetGuardTargetTargetDetectorRecipeArgs{...} }
type GetGuardTargetTargetDetectorRecipeArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeArrayOutput() GetGuardTargetTargetDetectorRecipeArrayOutput
	ToGetGuardTargetTargetDetectorRecipeArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeArrayOutput
}

type GetGuardTargetTargetDetectorRecipeArray []GetGuardTargetTargetDetectorRecipeInput

func (GetGuardTargetTargetDetectorRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipe)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeArray) ToGetGuardTargetTargetDetectorRecipeArrayOutput() GetGuardTargetTargetDetectorRecipeArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeArray) ToGetGuardTargetTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipe)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeOutput) ToGetGuardTargetTargetDetectorRecipeOutput() GetGuardTargetTargetDetectorRecipeOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeOutput) ToGetGuardTargetTargetDetectorRecipeOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeOutput {
	return o
}

// Compartment Identifier
func (o GetGuardTargetTargetDetectorRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetTargetDetectorRecipeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) string { return v.Description }).(pulumi.StringOutput)
}

// detector for the rule
func (o GetGuardTargetTargetDetectorRecipeOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) string { return v.Detector }).(pulumi.StringOutput)
}

// Unique identifier for Detector Recipe of which this is an extension
func (o GetGuardTargetTargetDetectorRecipeOutput) DetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) string { return v.DetectorRecipeId }).(pulumi.StringOutput)
}

// List of detector rules for the detector type for recipe - user input
func (o GetGuardTargetTargetDetectorRecipeOutput) DetectorRules() GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) []GetGuardTargetTargetDetectorRecipeDetectorRule {
		return v.DetectorRules
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput)
}

// ResponderRule display name.
func (o GetGuardTargetTargetDetectorRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of effective detector rules for the detector type for recipe after applying defaults
func (o GetGuardTargetTargetDetectorRecipeOutput) EffectiveDetectorRules() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule {
		return v.EffectiveDetectorRules
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that can't be changed after creation.
func (o GetGuardTargetTargetDetectorRecipeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) string { return v.Id }).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetGuardTargetTargetDetectorRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) string { return v.Owner }).(pulumi.StringOutput)
}

// The current state of the ResponderRule.
func (o GetGuardTargetTargetDetectorRecipeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetTargetDetectorRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetTargetDetectorRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipe) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetectorRecipeArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipe)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeArrayOutput) ToGetGuardTargetTargetDetectorRecipeArrayOutput() GetGuardTargetTargetDetectorRecipeArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeArrayOutput) ToGetGuardTargetTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipe {
		return vs[0].([]GetGuardTargetTargetDetectorRecipe)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRule struct {
	// The id of the attached DataSource.
	DataSourceId string `pulumi:"dataSourceId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetGuardTargetTargetDetectorRecipeDetectorRuleDetail `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// ResponderRule display name.
	DisplayName string `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The current state of the ResponderRule.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleArgs and GetGuardTargetTargetDetectorRecipeDetectorRuleOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleArgs{...}
type GetGuardTargetTargetDetectorRecipeDetectorRuleInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleArgs struct {
	// The id of the attached DataSource.
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// ResponderRule display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The current state of the ResponderRule.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetGuardTargetTargetDetectorRecipeDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleOutput)
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleArray and GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleArray{ GetGuardTargetTargetDetectorRecipeDetectorRuleArgs{...} }
type GetGuardTargetTargetDetectorRecipeDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleArray []GetGuardTargetTargetDetectorRecipeDetectorRuleInput

func (GetGuardTargetTargetDetectorRecipeDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleOutput {
	return o
}

// The id of the attached DataSource.
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.DataSourceId }).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) Details() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) []GetGuardTargetTargetDetectorRecipeDetectorRuleDetail {
		return v.Details
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput)
}

// detector for the rule
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule.
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// ResponderRule display name.
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Data Source entities mapping for a Detector Rule
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) EntitiesMappings() GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) []GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.Recommendation }).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.ResourceType }).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The current state of the ResponderRule.
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeDetectorRule {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeDetectorRule)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetail struct {
	// Condition group corresponding to each compartment
	ConditionGroups []GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations []GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleDetailInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArgs and GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleDetailInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArgs{...}
type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArgs struct {
	// Condition group corresponding to each compartment
	ConditionGroups GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayInput `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput)
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArray and GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArray{ GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArgs{...} }
type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArray []GetGuardTargetTargetDetectorRecipeDetectorRuleDetailInput

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput {
	return o
}

// Condition group corresponding to each compartment
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput) ConditionGroups() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetail) []GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup {
		return v.ConditionGroups
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput)
}

// ResponderRule configurations
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput) Configurations() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetail) []GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration {
		return v.Configurations
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetail) bool { return v.IsConfigurationAllowed }).(pulumi.BoolOutput)
}

// Identifies state for ResponderRule
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetail) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetail) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetail) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeDetectorRuleDetail {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeDetectorRuleDetail)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// Base condition object
	Condition string `pulumi:"condition"`
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs and GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs{...}
type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
}

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput)
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArray and GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArray{ GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs{...} }
type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArray []GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupInput

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput {
	return o
}

// Compartment Identifier
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Base condition object
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup) string { return v.Condition }).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroup)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue `pulumi:"values"`
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArgs and GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArgs{...}
type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput `pulumi:"values"`
}

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput)
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArray and GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArray{ GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArgs{...} }
type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArray []GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationInput

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration data type
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration) string { return v.DataType }).(pulumi.StringOutput)
}

// configuration name
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

// List of configuration values
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) Values() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration) []GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue {
		return v.Values
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfiguration)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs and GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs{...}
type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput)
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray and GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray{ GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs{...} }
type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray []GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueInput

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue) string {
		return v.ListType
	}).(pulumi.StringOutput)
}

// type of the managed list
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValue)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping struct {
	// ResponderRule display name.
	DisplayName string `pulumi:"displayName"`
	// Possible type of entity
	EntityType string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField string `pulumi:"queryField"`
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs and GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs{...}
type GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs struct {
	// ResponderRule display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringInput `pulumi:"queryField"`
}

func (GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs) ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput)
}

// GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray and GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray{ GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs{...} }
type GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput
	ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray []GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingInput

func (GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray) ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return o
}

// ResponderRule display name.
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Possible type of entity
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping) string { return v.EntityType }).(pulumi.StringOutput)
}

// The entity value mapped to a data source query
func (o GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping) string { return v.QueryField }).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ToGetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule struct {
	// The id of the attached DataSource.
	DataSourceId string `pulumi:"dataSourceId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// ResponderRule display name.
	DisplayName string `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The current state of the ResponderRule.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArgs and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArgs{...}
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArgs struct {
	// The id of the attached DataSource.
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// ResponderRule display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The current state of the ResponderRule.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArray and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArray{ GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArgs{...} }
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArray []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleInput

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

// The id of the attached DataSource.
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.DataSourceId }).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Details() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail {
		return v.Details
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput)
}

// detector for the rule
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule.
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.DetectorRuleId }).(pulumi.StringOutput)
}

// ResponderRule display name.
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Data Source entities mapping for a Detector Rule
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) EntitiesMappings() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) []string { return v.ManagedListTypes }).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.Recommendation }).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.ResourceType }).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.ServiceType }).(pulumi.StringOutput)
}

// The current state of the ResponderRule.
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRule)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail struct {
	// Condition group corresponding to each compartment
	ConditionGroups []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs{...}
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs struct {
	// Condition group corresponding to each compartment
	ConditionGroups GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput)
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray{ GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs{...} }
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailInput

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return o
}

// Condition group corresponding to each compartment
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ConditionGroups() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail) []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup {
		return v.ConditionGroups
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput)
}

// ResponderRule configurations
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) Configurations() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail) []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
		return v.Configurations
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail) bool {
		return v.IsConfigurationAllowed
	}).(pulumi.BoolOutput)
}

// Identifies state for ResponderRule
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail) string { return v.RiskLevel }).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetail)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// Base condition object
	Condition string `pulumi:"condition"`
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs{...}
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
}

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput)
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray{ GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs{...} }
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return o
}

// Compartment Identifier
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Base condition object
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue `pulumi:"values"`
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{...}
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput `pulumi:"values"`
}

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput)
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray{ GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{...} }
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration data type
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string {
		return v.DataType
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

// List of configuration values
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Values() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
		return v.Values
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{...}
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput)
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray{ GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{...} }
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) string {
		return v.ListType
	}).(pulumi.StringOutput)
}

// type of the managed list
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping struct {
	// ResponderRule display name.
	DisplayName string `pulumi:"displayName"`
	// Possible type of entity
	EntityType string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField string `pulumi:"queryField"`
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{...}
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs struct {
	// ResponderRule display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringInput `pulumi:"queryField"`
}

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput)
}

// GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput is an input type that accepts GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray and GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput` via:
//
//	GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray{ GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{...} }
type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput
	ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray []GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return i.ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

// ResponderRule display name.
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Possible type of entity
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// The entity value mapped to a data source query
func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) string {
		return v.QueryField
	}).(pulumi.StringOutput)
}

type GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ToGetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping {
		return vs[0].([]GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput)
}

type GetGuardTargetTargetResponderRecipe struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// ResponderRule display name.
	DisplayName string `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules []GetGuardTargetTargetResponderRecipeEffectiveResponderRule `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// Unique identifier for Responder Recipe of which this is an extension.
	ResponderRecipeId string `pulumi:"responderRecipeId"`
	// List of responder rules associated with the recipe - user input
	ResponderRules []GetGuardTargetTargetResponderRecipeResponderRule `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetGuardTargetTargetResponderRecipeInput is an input type that accepts GetGuardTargetTargetResponderRecipeArgs and GetGuardTargetTargetResponderRecipeOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeInput` via:
//
//	GetGuardTargetTargetResponderRecipeArgs{...}
type GetGuardTargetTargetResponderRecipeInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeOutput() GetGuardTargetTargetResponderRecipeOutput
	ToGetGuardTargetTargetResponderRecipeOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeOutput
}

type GetGuardTargetTargetResponderRecipeArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// ResponderRule display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayInput `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id pulumi.StringInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// Unique identifier for Responder Recipe of which this is an extension.
	ResponderRecipeId pulumi.StringInput `pulumi:"responderRecipeId"`
	// List of responder rules associated with the recipe - user input
	ResponderRules GetGuardTargetTargetResponderRecipeResponderRuleArrayInput `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetGuardTargetTargetResponderRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipe)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeArgs) ToGetGuardTargetTargetResponderRecipeOutput() GetGuardTargetTargetResponderRecipeOutput {
	return i.ToGetGuardTargetTargetResponderRecipeOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeArgs) ToGetGuardTargetTargetResponderRecipeOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeOutput)
}

// GetGuardTargetTargetResponderRecipeArrayInput is an input type that accepts GetGuardTargetTargetResponderRecipeArray and GetGuardTargetTargetResponderRecipeArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeArrayInput` via:
//
//	GetGuardTargetTargetResponderRecipeArray{ GetGuardTargetTargetResponderRecipeArgs{...} }
type GetGuardTargetTargetResponderRecipeArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeArrayOutput() GetGuardTargetTargetResponderRecipeArrayOutput
	ToGetGuardTargetTargetResponderRecipeArrayOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeArrayOutput
}

type GetGuardTargetTargetResponderRecipeArray []GetGuardTargetTargetResponderRecipeInput

func (GetGuardTargetTargetResponderRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipe)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeArray) ToGetGuardTargetTargetResponderRecipeArrayOutput() GetGuardTargetTargetResponderRecipeArrayOutput {
	return i.ToGetGuardTargetTargetResponderRecipeArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeArray) ToGetGuardTargetTargetResponderRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeArrayOutput)
}

type GetGuardTargetTargetResponderRecipeOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipe)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeOutput) ToGetGuardTargetTargetResponderRecipeOutput() GetGuardTargetTargetResponderRecipeOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeOutput) ToGetGuardTargetTargetResponderRecipeOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeOutput {
	return o
}

// Compartment Identifier
func (o GetGuardTargetTargetResponderRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipe) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetTargetResponderRecipeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipe) string { return v.Description }).(pulumi.StringOutput)
}

// ResponderRule display name.
func (o GetGuardTargetTargetResponderRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipe) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe after applying all defaults
func (o GetGuardTargetTargetResponderRecipeOutput) EffectiveResponderRules() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipe) []GetGuardTargetTargetResponderRecipeEffectiveResponderRule {
		return v.EffectiveResponderRules
	}).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that can't be changed after creation.
func (o GetGuardTargetTargetResponderRecipeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipe) string { return v.Id }).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetGuardTargetTargetResponderRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipe) string { return v.Owner }).(pulumi.StringOutput)
}

// Unique identifier for Responder Recipe of which this is an extension.
func (o GetGuardTargetTargetResponderRecipeOutput) ResponderRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipe) string { return v.ResponderRecipeId }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe - user input
func (o GetGuardTargetTargetResponderRecipeOutput) ResponderRules() GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipe) []GetGuardTargetTargetResponderRecipeResponderRule {
		return v.ResponderRules
	}).(GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetTargetResponderRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipe) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetTargetResponderRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipe) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetGuardTargetTargetResponderRecipeArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipe)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeArrayOutput) ToGetGuardTargetTargetResponderRecipeArrayOutput() GetGuardTargetTargetResponderRecipeArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeArrayOutput) ToGetGuardTargetTargetResponderRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetResponderRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetResponderRecipe {
		return vs[0].([]GetGuardTargetTargetResponderRecipe)[vs[1].(int)]
	}).(GetGuardTargetTargetResponderRecipeOutput)
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRule struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail `pulumi:"details"`
	// ResponderRule display name.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Unique ResponderRule identifier.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The current state of the ResponderRule.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetGuardTargetTargetResponderRecipeEffectiveResponderRuleInput is an input type that accepts GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArgs and GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeEffectiveResponderRuleInput` via:
//
//	GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArgs{...}
type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput
	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayInput `pulumi:"details"`
	// ResponderRule display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Unique ResponderRule identifier.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The current state of the ResponderRule.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArgs) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return i.ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArgs) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput)
}

// GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayInput is an input type that accepts GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArray and GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayInput` via:
//
//	GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArray{ GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArgs{...} }
type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput
	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArray []GetGuardTargetTargetResponderRecipeEffectiveResponderRuleInput

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArray) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return i.ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArray) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

// Compartment Identifier
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) Details() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) []GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail {
		return v.Details
	}).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput)
}

// ResponderRule display name.
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of Policy
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Unique ResponderRule identifier.
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The current state of the ResponderRule.
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Responder
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetResponderRecipeEffectiveResponderRule {
		return vs[0].([]GetGuardTargetTargetResponderRecipeEffectiveResponderRule)[vs[1].(int)]
	}).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput)
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailInput is an input type that accepts GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArgs and GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailInput` via:
//
//	GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArgs{...}
type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput
	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArgs) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return i.ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArgs) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput)
}

// GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayInput is an input type that accepts GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArray and GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayInput` via:
//
//	GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArray{ GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArgs{...} }
type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput
	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArray []GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailInput

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArray) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return i.ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArray) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput)
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return o
}

// Base condition object
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail) string { return v.Condition }).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) Configurations() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail) []GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration {
		return v.Configurations
	}).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail) string { return v.Mode }).(pulumi.StringOutput)
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail {
		return vs[0].([]GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetail)[vs[1].(int)]
	}).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput)
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput is an input type that accepts GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs and GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput` via:
//
//	GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{...}
type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput
	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return i.ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput)
}

// GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput is an input type that accepts GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray and GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput` via:
//
//	GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray{ GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{...} }
type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput
	ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray []GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return i.ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput)
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ToGetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration {
		return vs[0].([]GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)[vs[1].(int)]
	}).(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput)
}

type GetGuardTargetTargetResponderRecipeResponderRule struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetGuardTargetTargetResponderRecipeResponderRuleDetail `pulumi:"details"`
	// ResponderRule display name.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Unique ResponderRule identifier.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The current state of the ResponderRule.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetGuardTargetTargetResponderRecipeResponderRuleInput is an input type that accepts GetGuardTargetTargetResponderRecipeResponderRuleArgs and GetGuardTargetTargetResponderRecipeResponderRuleOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeResponderRuleInput` via:
//
//	GetGuardTargetTargetResponderRecipeResponderRuleArgs{...}
type GetGuardTargetTargetResponderRecipeResponderRuleInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeResponderRuleOutput() GetGuardTargetTargetResponderRecipeResponderRuleOutput
	ToGetGuardTargetTargetResponderRecipeResponderRuleOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeResponderRuleOutput
}

type GetGuardTargetTargetResponderRecipeResponderRuleArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayInput `pulumi:"details"`
	// ResponderRule display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Unique ResponderRule identifier.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The current state of the ResponderRule.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetGuardTargetTargetResponderRecipeResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleArgs) ToGetGuardTargetTargetResponderRecipeResponderRuleOutput() GetGuardTargetTargetResponderRecipeResponderRuleOutput {
	return i.ToGetGuardTargetTargetResponderRecipeResponderRuleOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleArgs) ToGetGuardTargetTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeResponderRuleOutput)
}

// GetGuardTargetTargetResponderRecipeResponderRuleArrayInput is an input type that accepts GetGuardTargetTargetResponderRecipeResponderRuleArray and GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeResponderRuleArrayInput` via:
//
//	GetGuardTargetTargetResponderRecipeResponderRuleArray{ GetGuardTargetTargetResponderRecipeResponderRuleArgs{...} }
type GetGuardTargetTargetResponderRecipeResponderRuleArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeResponderRuleArrayOutput() GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput
	ToGetGuardTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput
}

type GetGuardTargetTargetResponderRecipeResponderRuleArray []GetGuardTargetTargetResponderRecipeResponderRuleInput

func (GetGuardTargetTargetResponderRecipeResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleArray) ToGetGuardTargetTargetResponderRecipeResponderRuleArrayOutput() GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput {
	return i.ToGetGuardTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleArray) ToGetGuardTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput)
}

type GetGuardTargetTargetResponderRecipeResponderRuleOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleOutput() GetGuardTargetTargetResponderRecipeResponderRuleOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleOutput {
	return o
}

// Compartment Identifier
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) Details() GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) []GetGuardTargetTargetResponderRecipeResponderRuleDetail {
		return v.Details
	}).(GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput)
}

// ResponderRule display name.
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of Policy
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Unique ResponderRule identifier.
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The current state of the ResponderRule.
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Responder
func (o GetGuardTargetTargetResponderRecipeResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleArrayOutput() GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetResponderRecipeResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetResponderRecipeResponderRule {
		return vs[0].([]GetGuardTargetTargetResponderRecipeResponderRule)[vs[1].(int)]
	}).(GetGuardTargetTargetResponderRecipeResponderRuleOutput)
}

type GetGuardTargetTargetResponderRecipeResponderRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetGuardTargetTargetResponderRecipeResponderRuleDetailInput is an input type that accepts GetGuardTargetTargetResponderRecipeResponderRuleDetailArgs and GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeResponderRuleDetailInput` via:
//
//	GetGuardTargetTargetResponderRecipeResponderRuleDetailArgs{...}
type GetGuardTargetTargetResponderRecipeResponderRuleDetailInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeResponderRuleDetailOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput
	ToGetGuardTargetTargetResponderRecipeResponderRuleDetailOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput
}

type GetGuardTargetTargetResponderRecipeResponderRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetGuardTargetTargetResponderRecipeResponderRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleDetailArgs) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput {
	return i.ToGetGuardTargetTargetResponderRecipeResponderRuleDetailOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleDetailArgs) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput)
}

// GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayInput is an input type that accepts GetGuardTargetTargetResponderRecipeResponderRuleDetailArray and GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayInput` via:
//
//	GetGuardTargetTargetResponderRecipeResponderRuleDetailArray{ GetGuardTargetTargetResponderRecipeResponderRuleDetailArgs{...} }
type GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput
	ToGetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput
}

type GetGuardTargetTargetResponderRecipeResponderRuleDetailArray []GetGuardTargetTargetResponderRecipeResponderRuleDetailInput

func (GetGuardTargetTargetResponderRecipeResponderRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleDetailArray) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput {
	return i.ToGetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleDetailArray) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput)
}

type GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput {
	return o
}

// Base condition object
func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRuleDetail) string { return v.Condition }).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput) Configurations() GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRuleDetail) []GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration {
		return v.Configurations
	}).(GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRuleDetail) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRuleDetail) string { return v.Mode }).(pulumi.StringOutput)
}

type GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetResponderRecipeResponderRuleDetail {
		return vs[0].([]GetGuardTargetTargetResponderRecipeResponderRuleDetail)[vs[1].(int)]
	}).(GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput)
}

type GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationInput is an input type that accepts GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArgs and GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationInput` via:
//
//	GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArgs{...}
type GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput
	ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput
}

type GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArgs) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput {
	return i.ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArgs) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput)
}

// GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayInput is an input type that accepts GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArray and GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayInput` via:
//
//	GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArray{ GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArgs{...} }
type GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput
	ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput
}

type GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArray []GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationInput

func (GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArray) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return i.ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArray) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput)
}

type GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration name
func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput() GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput) ToGetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration {
		return vs[0].([]GetGuardTargetTargetResponderRecipeResponderRuleDetailConfiguration)[vs[1].(int)]
	}).(GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput)
}

type GetGuardTargetsFilter struct {
	// configuration name
	Name  string `pulumi:"name"`
	Regex *bool  `pulumi:"regex"`
	// List of configuration values
	Values []string `pulumi:"values"`
}

// GetGuardTargetsFilterInput is an input type that accepts GetGuardTargetsFilterArgs and GetGuardTargetsFilterOutput values.
// You can construct a concrete instance of `GetGuardTargetsFilterInput` via:
//
//	GetGuardTargetsFilterArgs{...}
type GetGuardTargetsFilterInput interface {
	pulumi.Input

	ToGetGuardTargetsFilterOutput() GetGuardTargetsFilterOutput
	ToGetGuardTargetsFilterOutputWithContext(context.Context) GetGuardTargetsFilterOutput
}

type GetGuardTargetsFilterArgs struct {
	// configuration name
	Name  pulumi.StringInput  `pulumi:"name"`
	Regex pulumi.BoolPtrInput `pulumi:"regex"`
	// List of configuration values
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetGuardTargetsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsFilter)(nil)).Elem()
}

func (i GetGuardTargetsFilterArgs) ToGetGuardTargetsFilterOutput() GetGuardTargetsFilterOutput {
	return i.ToGetGuardTargetsFilterOutputWithContext(context.Background())
}

func (i GetGuardTargetsFilterArgs) ToGetGuardTargetsFilterOutputWithContext(ctx context.Context) GetGuardTargetsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsFilterOutput)
}

// GetGuardTargetsFilterArrayInput is an input type that accepts GetGuardTargetsFilterArray and GetGuardTargetsFilterArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsFilterArrayInput` via:
//
//	GetGuardTargetsFilterArray{ GetGuardTargetsFilterArgs{...} }
type GetGuardTargetsFilterArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsFilterArrayOutput() GetGuardTargetsFilterArrayOutput
	ToGetGuardTargetsFilterArrayOutputWithContext(context.Context) GetGuardTargetsFilterArrayOutput
}

type GetGuardTargetsFilterArray []GetGuardTargetsFilterInput

func (GetGuardTargetsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsFilter)(nil)).Elem()
}

func (i GetGuardTargetsFilterArray) ToGetGuardTargetsFilterArrayOutput() GetGuardTargetsFilterArrayOutput {
	return i.ToGetGuardTargetsFilterArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsFilterArray) ToGetGuardTargetsFilterArrayOutputWithContext(ctx context.Context) GetGuardTargetsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsFilterArrayOutput)
}

type GetGuardTargetsFilterOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsFilter)(nil)).Elem()
}

func (o GetGuardTargetsFilterOutput) ToGetGuardTargetsFilterOutput() GetGuardTargetsFilterOutput {
	return o
}

func (o GetGuardTargetsFilterOutput) ToGetGuardTargetsFilterOutputWithContext(ctx context.Context) GetGuardTargetsFilterOutput {
	return o
}

// configuration name
func (o GetGuardTargetsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGuardTargetsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGuardTargetsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

// List of configuration values
func (o GetGuardTargetsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetGuardTargetsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsFilter)(nil)).Elem()
}

func (o GetGuardTargetsFilterArrayOutput) ToGetGuardTargetsFilterArrayOutput() GetGuardTargetsFilterArrayOutput {
	return o
}

func (o GetGuardTargetsFilterArrayOutput) ToGetGuardTargetsFilterArrayOutputWithContext(ctx context.Context) GetGuardTargetsFilterArrayOutput {
	return o
}

func (o GetGuardTargetsFilterArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsFilter {
		return vs[0].([]GetGuardTargetsFilter)[vs[1].(int)]
	}).(GetGuardTargetsFilterOutput)
}

type GetGuardTargetsTargetCollection struct {
	Items []GetGuardTargetsTargetCollectionItem `pulumi:"items"`
}

// GetGuardTargetsTargetCollectionInput is an input type that accepts GetGuardTargetsTargetCollectionArgs and GetGuardTargetsTargetCollectionOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionInput` via:
//
//	GetGuardTargetsTargetCollectionArgs{...}
type GetGuardTargetsTargetCollectionInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionOutput() GetGuardTargetsTargetCollectionOutput
	ToGetGuardTargetsTargetCollectionOutputWithContext(context.Context) GetGuardTargetsTargetCollectionOutput
}

type GetGuardTargetsTargetCollectionArgs struct {
	Items GetGuardTargetsTargetCollectionItemArrayInput `pulumi:"items"`
}

func (GetGuardTargetsTargetCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollection)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionArgs) ToGetGuardTargetsTargetCollectionOutput() GetGuardTargetsTargetCollectionOutput {
	return i.ToGetGuardTargetsTargetCollectionOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionArgs) ToGetGuardTargetsTargetCollectionOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionOutput)
}

// GetGuardTargetsTargetCollectionArrayInput is an input type that accepts GetGuardTargetsTargetCollectionArray and GetGuardTargetsTargetCollectionArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionArrayInput` via:
//
//	GetGuardTargetsTargetCollectionArray{ GetGuardTargetsTargetCollectionArgs{...} }
type GetGuardTargetsTargetCollectionArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionArrayOutput() GetGuardTargetsTargetCollectionArrayOutput
	ToGetGuardTargetsTargetCollectionArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionArrayOutput
}

type GetGuardTargetsTargetCollectionArray []GetGuardTargetsTargetCollectionInput

func (GetGuardTargetsTargetCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollection)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionArray) ToGetGuardTargetsTargetCollectionArrayOutput() GetGuardTargetsTargetCollectionArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionArray) ToGetGuardTargetsTargetCollectionArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionArrayOutput)
}

type GetGuardTargetsTargetCollectionOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollection)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionOutput) ToGetGuardTargetsTargetCollectionOutput() GetGuardTargetsTargetCollectionOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionOutput) ToGetGuardTargetsTargetCollectionOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionOutput) Items() GetGuardTargetsTargetCollectionItemArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollection) []GetGuardTargetsTargetCollectionItem { return v.Items }).(GetGuardTargetsTargetCollectionItemArrayOutput)
}

type GetGuardTargetsTargetCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollection)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionArrayOutput) ToGetGuardTargetsTargetCollectionArrayOutput() GetGuardTargetsTargetCollectionArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionArrayOutput) ToGetGuardTargetsTargetCollectionArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollection {
		return vs[0].([]GetGuardTargetsTargetCollection)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionOutput)
}

type GetGuardTargetsTargetCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id string `pulumi:"id"`
	// List of inherited compartments
	InheritedByCompartments []string `pulumi:"inheritedByCompartments"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// Total number of recipes attached to target
	RecipeCount int `pulumi:"recipeCount"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Details specific to the target type.
	TargetDetails []GetGuardTargetsTargetCollectionItemTargetDetail `pulumi:"targetDetails"`
	// List of detector recipes associated with target
	TargetDetectorRecipes []GetGuardTargetsTargetCollectionItemTargetDetectorRecipe `pulumi:"targetDetectorRecipes"`
	// Resource ID which the target uses to monitor
	TargetResourceId string `pulumi:"targetResourceId"`
	// possible type of targets
	TargetResourceType string `pulumi:"targetResourceType"`
	// List of responder recipes associated with target
	TargetResponderRecipes []GetGuardTargetsTargetCollectionItemTargetResponderRecipe `pulumi:"targetResponderRecipes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetGuardTargetsTargetCollectionItemInput is an input type that accepts GetGuardTargetsTargetCollectionItemArgs and GetGuardTargetsTargetCollectionItemOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemInput` via:
//
//	GetGuardTargetsTargetCollectionItemArgs{...}
type GetGuardTargetsTargetCollectionItemInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemOutput() GetGuardTargetsTargetCollectionItemOutput
	ToGetGuardTargetsTargetCollectionItemOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemOutput
}

type GetGuardTargetsTargetCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id pulumi.StringInput `pulumi:"id"`
	// List of inherited compartments
	InheritedByCompartments pulumi.StringArrayInput `pulumi:"inheritedByCompartments"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringInput `pulumi:"lifecyleDetails"`
	// Total number of recipes attached to target
	RecipeCount pulumi.IntInput `pulumi:"recipeCount"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// Details specific to the target type.
	TargetDetails GetGuardTargetsTargetCollectionItemTargetDetailArrayInput `pulumi:"targetDetails"`
	// List of detector recipes associated with target
	TargetDetectorRecipes GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayInput `pulumi:"targetDetectorRecipes"`
	// Resource ID which the target uses to monitor
	TargetResourceId pulumi.StringInput `pulumi:"targetResourceId"`
	// possible type of targets
	TargetResourceType pulumi.StringInput `pulumi:"targetResourceType"`
	// List of responder recipes associated with target
	TargetResponderRecipes GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayInput `pulumi:"targetResponderRecipes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetGuardTargetsTargetCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItem)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemArgs) ToGetGuardTargetsTargetCollectionItemOutput() GetGuardTargetsTargetCollectionItemOutput {
	return i.ToGetGuardTargetsTargetCollectionItemOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemArgs) ToGetGuardTargetsTargetCollectionItemOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemOutput)
}

// GetGuardTargetsTargetCollectionItemArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemArray and GetGuardTargetsTargetCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemArray{ GetGuardTargetsTargetCollectionItemArgs{...} }
type GetGuardTargetsTargetCollectionItemArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemArrayOutput() GetGuardTargetsTargetCollectionItemArrayOutput
	ToGetGuardTargetsTargetCollectionItemArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemArrayOutput
}

type GetGuardTargetsTargetCollectionItemArray []GetGuardTargetsTargetCollectionItemInput

func (GetGuardTargetsTargetCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItem)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemArray) ToGetGuardTargetsTargetCollectionItemArrayOutput() GetGuardTargetsTargetCollectionItemArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemArray) ToGetGuardTargetsTargetCollectionItemArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemArrayOutput)
}

type GetGuardTargetsTargetCollectionItemOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItem)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemOutput) ToGetGuardTargetsTargetCollectionItemOutput() GetGuardTargetsTargetCollectionItemOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemOutput) ToGetGuardTargetsTargetCollectionItemOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetGuardTargetsTargetCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetGuardTargetsTargetCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// ResponderRule description.
func (o GetGuardTargetsTargetCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetGuardTargetsTargetCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetGuardTargetsTargetCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier of TargetResponderRecipe that can't be changed after creation.
func (o GetGuardTargetsTargetCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// List of inherited compartments
func (o GetGuardTargetsTargetCollectionItemOutput) InheritedByCompartments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) []string { return v.InheritedByCompartments }).(pulumi.StringArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetGuardTargetsTargetCollectionItemOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// Total number of recipes attached to target
func (o GetGuardTargetsTargetCollectionItemOutput) RecipeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) int { return v.RecipeCount }).(pulumi.IntOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetGuardTargetsTargetCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetGuardTargetsTargetCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// Details specific to the target type.
func (o GetGuardTargetsTargetCollectionItemOutput) TargetDetails() GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) []GetGuardTargetsTargetCollectionItemTargetDetail {
		return v.TargetDetails
	}).(GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput)
}

// List of detector recipes associated with target
func (o GetGuardTargetsTargetCollectionItemOutput) TargetDetectorRecipes() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipe {
		return v.TargetDetectorRecipes
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput)
}

// Resource ID which the target uses to monitor
func (o GetGuardTargetsTargetCollectionItemOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// possible type of targets
func (o GetGuardTargetsTargetCollectionItemOutput) TargetResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) string { return v.TargetResourceType }).(pulumi.StringOutput)
}

// List of responder recipes associated with target
func (o GetGuardTargetsTargetCollectionItemOutput) TargetResponderRecipes() GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) []GetGuardTargetsTargetCollectionItemTargetResponderRecipe {
		return v.TargetResponderRecipes
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItem)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemArrayOutput) ToGetGuardTargetsTargetCollectionItemArrayOutput() GetGuardTargetsTargetCollectionItemArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemArrayOutput) ToGetGuardTargetsTargetCollectionItemArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItem {
		return vs[0].([]GetGuardTargetsTargetCollectionItem)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetail struct {
	// The name of the security zone to associate this compartment with.
	SecurityZoneDisplayName string `pulumi:"securityZoneDisplayName"`
	// The OCID of the security zone to associate this compartment with.
	SecurityZoneId string `pulumi:"securityZoneId"`
	// possible type of targets
	TargetResourceType string `pulumi:"targetResourceType"`
	// The list of security zone recipes to associate this compartment with.
	TargetSecurityZoneRecipes []GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe `pulumi:"targetSecurityZoneRecipes"`
}

// GetGuardTargetsTargetCollectionItemTargetDetailInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetailArgs and GetGuardTargetsTargetCollectionItemTargetDetailOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetailInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetailArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetailInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetailOutput() GetGuardTargetsTargetCollectionItemTargetDetailOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetailOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetailOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetailArgs struct {
	// The name of the security zone to associate this compartment with.
	SecurityZoneDisplayName pulumi.StringInput `pulumi:"securityZoneDisplayName"`
	// The OCID of the security zone to associate this compartment with.
	SecurityZoneId pulumi.StringInput `pulumi:"securityZoneId"`
	// possible type of targets
	TargetResourceType pulumi.StringInput `pulumi:"targetResourceType"`
	// The list of security zone recipes to associate this compartment with.
	TargetSecurityZoneRecipes GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayInput `pulumi:"targetSecurityZoneRecipes"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetail)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetailArgs) ToGetGuardTargetsTargetCollectionItemTargetDetailOutput() GetGuardTargetsTargetCollectionItemTargetDetailOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetailOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetailArgs) ToGetGuardTargetsTargetCollectionItemTargetDetailOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetailOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetailArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetailArray and GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetailArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetailArray{ GetGuardTargetsTargetCollectionItemTargetDetailArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetailArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetailArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetailArray []GetGuardTargetsTargetCollectionItemTargetDetailInput

func (GetGuardTargetsTargetCollectionItemTargetDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetail)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetailArray) ToGetGuardTargetsTargetCollectionItemTargetDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetailArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetailArray) ToGetGuardTargetsTargetCollectionItemTargetDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetailOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetail)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetailOutput) ToGetGuardTargetsTargetCollectionItemTargetDetailOutput() GetGuardTargetsTargetCollectionItemTargetDetailOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetailOutput) ToGetGuardTargetsTargetCollectionItemTargetDetailOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetailOutput {
	return o
}

// The name of the security zone to associate this compartment with.
func (o GetGuardTargetsTargetCollectionItemTargetDetailOutput) SecurityZoneDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetail) string { return v.SecurityZoneDisplayName }).(pulumi.StringOutput)
}

// The OCID of the security zone to associate this compartment with.
func (o GetGuardTargetsTargetCollectionItemTargetDetailOutput) SecurityZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetail) string { return v.SecurityZoneId }).(pulumi.StringOutput)
}

// possible type of targets
func (o GetGuardTargetsTargetCollectionItemTargetDetailOutput) TargetResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetail) string { return v.TargetResourceType }).(pulumi.StringOutput)
}

// The list of security zone recipes to associate this compartment with.
func (o GetGuardTargetsTargetCollectionItemTargetDetailOutput) TargetSecurityZoneRecipes() GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetail) []GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe {
		return v.TargetSecurityZoneRecipes
	}).(GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetail)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetail {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetail)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetailOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// The list of `SecurityPolicy` ids that are included in the recipe
	SecurityPolicies []string `pulumi:"securityPolicies"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArgs and GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput() GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// The list of `SecurityPolicy` ids that are included in the recipe
	SecurityPolicies pulumi.StringArrayInput `pulumi:"securityPolicies"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArgs) ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput() GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArgs) ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArray and GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArray{ GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArray []GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeInput

func (GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArray) ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArray) ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput() GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) map[string]interface{} {
		return v.DefinedTags
	}).(pulumi.MapOutput)
}

// ResponderRule description.
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) map[string]interface{} {
		return v.FreeformTags
	}).(pulumi.MapOutput)
}

// Unique identifier of TargetResponderRecipe that can't be changed after creation.
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) string { return v.Owner }).(pulumi.StringOutput)
}

// The list of `SecurityPolicy` ids that are included in the recipe
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) SecurityPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) []string {
		return v.SecurityPolicies
	}).(pulumi.StringArrayOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) map[string]interface{} {
		return v.SystemTags
	}).(pulumi.MapOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipe)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipe struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// Unique identifier for Detector Recipe of which this is an extension
	DetectorRecipeId string `pulumi:"detectorRecipeId"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule `pulumi:"detectorRules"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// Unique identifier for Detector Recipe of which this is an extension
	DetectorRecipeId pulumi.StringInput `pulumi:"detectorRecipeId"`
	// List of detector rules for the detector type for recipe - user input
	DetectorRules GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayInput `pulumi:"detectorRules"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of effective detector rules for the detector type for recipe after applying defaults
	EffectiveDetectorRules GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayInput `pulumi:"effectiveDetectorRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id pulumi.StringInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipe)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipe)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipe)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.Description }).(pulumi.StringOutput)
}

// detector for the rule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.Detector }).(pulumi.StringOutput)
}

// Unique identifier for Detector Recipe of which this is an extension
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) DetectorRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.DetectorRecipeId }).(pulumi.StringOutput)
}

// List of detector rules for the detector type for recipe - user input
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) DetectorRules() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule {
		return v.DetectorRules
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of effective detector rules for the detector type for recipe after applying defaults
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) EffectiveDetectorRules() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule {
		return v.EffectiveDetectorRules
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that can't be changed after creation.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.Id }).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.Owner }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipe) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipe)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipe {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipe)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule struct {
	// The id of the attached DataSource.
	DataSourceId string `pulumi:"dataSourceId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs struct {
	// The id of the attached DataSource.
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput {
	return o
}

// The id of the attached DataSource.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string {
		return v.DataSourceId
	}).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) Details() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail {
		return v.Details
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput)
}

// detector for the rule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.Detector }).(pulumi.StringOutput)
}

// The unique identifier of the detector rule.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string {
		return v.DetectorRuleId
	}).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Data Source entities mapping for a Detector Rule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) EntitiesMappings() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) []string {
		return v.ManagedListTypes
	}).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string {
		return v.Recommendation
	}).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string {
		return v.ResourceType
	}).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string {
		return v.ServiceType
	}).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRule)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail struct {
	// Condition group corresponding to each compartment
	ConditionGroups []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArgs struct {
	// Condition group corresponding to each compartment
	ConditionGroups GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayInput `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput {
	return o
}

// Condition group corresponding to each compartment
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput) ConditionGroups() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup {
		return v.ConditionGroups
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput)
}

// ResponderRule configurations
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput) Configurations() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration {
		return v.Configurations
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail) bool {
		return v.IsConfigurationAllowed
	}).(pulumi.BoolOutput)
}

// Identifies state for ResponderRule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail) []string {
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail) string {
		return v.RiskLevel
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetail)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Base condition object
	Condition string `pulumi:"condition"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Base condition object
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroup)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue `pulumi:"values"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput `pulumi:"values"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration data type
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration) string {
		return v.DataType
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

// List of configuration values
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput) Values() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue {
		return v.Values
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfiguration)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue) string {
		return v.ListType
	}).(pulumi.StringOutput)
}

// type of the managed list
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValue)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Possible type of entity
	EntityType string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField string `pulumi:"queryField"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringInput `pulumi:"queryField"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Possible type of entity
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// The entity value mapped to a data source query
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping) string {
		return v.QueryField
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule struct {
	// The id of the attached DataSource.
	DataSourceId string `pulumi:"dataSourceId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail `pulumi:"details"`
	// detector for the rule
	Detector string `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId string `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes []string `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation string `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType string `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType string `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs struct {
	// The id of the attached DataSource.
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput `pulumi:"details"`
	// detector for the rule
	Detector pulumi.StringInput `pulumi:"detector"`
	// The unique identifier of the detector rule.
	DetectorRuleId pulumi.StringInput `pulumi:"detectorRuleId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Data Source entities mapping for a Detector Rule
	EntitiesMappings GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput `pulumi:"entitiesMappings"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of cloudguard managed list types related to this rule
	ManagedListTypes pulumi.StringArrayInput `pulumi:"managedListTypes"`
	// Recommendation for TargetDetectorRecipeDetectorRule
	Recommendation pulumi.StringInput `pulumi:"recommendation"`
	// resource type of the configuration to which the rule is applied
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// service type of the configuration to which the rule is applied
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return o
}

// The id of the attached DataSource.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.DataSourceId
	}).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) Details() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail {
		return v.Details
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput)
}

// detector for the rule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) Detector() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.Detector
	}).(pulumi.StringOutput)
}

// The unique identifier of the detector rule.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) DetectorRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.DetectorRuleId
	}).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Data Source entities mapping for a Detector Rule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) EntitiesMappings() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping {
		return v.EntitiesMappings
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of cloudguard managed list types related to this rule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ManagedListTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) []string {
		return v.ManagedListTypes
	}).(pulumi.StringArrayOutput)
}

// Recommendation for TargetDetectorRecipeDetectorRule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.Recommendation
	}).(pulumi.StringOutput)
}

// resource type of the configuration to which the rule is applied
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.ResourceType
	}).(pulumi.StringOutput)
}

// service type of the configuration to which the rule is applied
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.ServiceType
	}).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.State
	}).(pulumi.StringOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRule)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail struct {
	// Condition group corresponding to each compartment
	ConditionGroups []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed bool `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels []string `pulumi:"labels"`
	// The Risk Level
	RiskLevel string `pulumi:"riskLevel"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArgs struct {
	// Condition group corresponding to each compartment
	ConditionGroups GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput `pulumi:"conditionGroups"`
	// ResponderRule configurations
	Configurations GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// configuration allowed or not
	IsConfigurationAllowed pulumi.BoolInput `pulumi:"isConfigurationAllowed"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// user defined labels for a detector rule
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The Risk Level
	RiskLevel pulumi.StringInput `pulumi:"riskLevel"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return o
}

// Condition group corresponding to each compartment
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) ConditionGroups() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup {
		return v.ConditionGroups
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput)
}

// ResponderRule configurations
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) Configurations() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
		return v.Configurations
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

// configuration allowed or not
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) IsConfigurationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail) bool {
		return v.IsConfigurationAllowed
	}).(pulumi.BoolOutput)
}

// Identifies state for ResponderRule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

// user defined labels for a detector rule
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail) []string {
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// The Risk Level
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput) RiskLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail) string {
		return v.RiskLevel
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetail)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Base condition object
	Condition string `pulumi:"condition"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Base condition object
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroup)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration data type
	DataType string `pulumi:"dataType"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
	// List of configuration values
	Values []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue `pulumi:"values"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration data type
	DataType pulumi.StringInput `pulumi:"dataType"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
	// List of configuration values
	Values GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput `pulumi:"values"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration data type
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string {
		return v.DataType
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

// List of configuration values
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput) Values() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration) []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
		return v.Values
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfiguration)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType string `pulumi:"listType"`
	// type of the managed list
	ManagedListType string `pulumi:"managedListType"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs struct {
	// configuration list item type, either CUSTOM or MANAGED
	ListType pulumi.StringInput `pulumi:"listType"`
	// type of the managed list
	ManagedListType pulumi.StringInput `pulumi:"managedListType"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return o
}

// configuration list item type, either CUSTOM or MANAGED
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) string {
		return v.ListType
	}).(pulumi.StringOutput)
}

// type of the managed list
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) ManagedListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) string {
		return v.ManagedListType
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValue)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Possible type of entity
	EntityType string `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField string `pulumi:"queryField"`
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{...}
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Possible type of entity
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The entity value mapped to a data source query
	QueryField pulumi.StringInput `pulumi:"queryField"`
}

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput)
}

// GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray and GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray{ GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray []GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return o
}

// A filter to return only resources that match the entire display name given.
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Possible type of entity
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// The entity value mapped to a data source query
func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput) QueryField() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping) string {
		return v.QueryField
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput() GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMapping)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipe struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules []GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id string `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// Unique identifier for Responder Recipe of which this is an extension.
	ResponderRecipeId string `pulumi:"responderRecipeId"`
	// List of responder rules associated with the recipe - user input
	ResponderRules []GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeArgs and GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeArgs{...}
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of responder rules associated with the recipe after applying all defaults
	EffectiveResponderRules GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayInput `pulumi:"effectiveResponderRules"`
	// Unique identifier of TargetResponderRecipe that can't be changed after creation.
	Id pulumi.StringInput `pulumi:"id"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// Unique identifier for Responder Recipe of which this is an extension.
	ResponderRecipeId pulumi.StringInput `pulumi:"responderRecipeId"`
	// List of responder rules associated with the recipe - user input
	ResponderRules GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayInput `pulumi:"responderRules"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipe)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput)
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeArray and GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeArray{ GetGuardTargetsTargetCollectionItemTargetResponderRecipeArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeArray []GetGuardTargetsTargetCollectionItemTargetResponderRecipeInput

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipe)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipe)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipe) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipe) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipe) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe after applying all defaults
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) EffectiveResponderRules() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipe) []GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule {
		return v.EffectiveResponderRules
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

// Unique identifier of TargetResponderRecipe that can't be changed after creation.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipe) string { return v.Id }).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipe) string { return v.Owner }).(pulumi.StringOutput)
}

// Unique identifier for Responder Recipe of which this is an extension.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) ResponderRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipe) string { return v.ResponderRecipeId }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe - user input
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) ResponderRules() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipe) []GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule {
		return v.ResponderRules
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipe) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipe) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipe)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetResponderRecipe {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetResponderRecipe)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Unique ResponderRule identifier.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs and GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs{...}
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayInput `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Unique ResponderRule identifier.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput)
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray and GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray{ GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray []GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleInput

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) Details() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) []GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail {
		return v.Details
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of Policy
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) []string {
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

// Unique ResponderRule identifier.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.ResponderRuleId
	}).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.State
	}).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) []string {
		return v.SupportedModes
	}).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

// Type of Responder
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArgs and GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArgs{...}
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput)
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArray and GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArray{ GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArray []GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailInput

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return o
}

// Base condition object
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput) Configurations() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail) []GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration {
		return v.Configurations
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs and GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{...}
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput)
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray and GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray{ GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray []GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Unique ResponderRule identifier.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs and GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs{...}
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayInput `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Unique ResponderRule identifier.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the target was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the target was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput)
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray and GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray{ GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray []GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleInput

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) Details() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) []GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail {
		return v.Details
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of Policy
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) []string {
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

// Unique ResponderRule identifier.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string {
		return v.ResponderRuleId
	}).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) []string {
		return v.SupportedModes
	}).(pulumi.StringArrayOutput)
}

// The date and time the target was created. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the target was updated. Format defined by RFC3339.
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

// Type of Responder
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArgs and GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArgs{...}
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput)
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArray and GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArray{ GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArray []GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailInput

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput {
	return o
}

// Base condition object
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput) Configurations() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail) []GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration {
		return v.Configurations
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetail)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArgs and GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArgs{...}
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArgs) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput)
}

// GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayInput is an input type that accepts GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArray and GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayInput` via:
//
//	GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArray{ GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArgs{...} }
type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput
	ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArray []GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationInput

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return i.ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArray) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput() GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput) ToGetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration {
		return vs[0].([]GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfiguration)[vs[1].(int)]
	}).(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput)
}

type GetManagedListsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetManagedListsFilterInput is an input type that accepts GetManagedListsFilterArgs and GetManagedListsFilterOutput values.
// You can construct a concrete instance of `GetManagedListsFilterInput` via:
//
//	GetManagedListsFilterArgs{...}
type GetManagedListsFilterInput interface {
	pulumi.Input

	ToGetManagedListsFilterOutput() GetManagedListsFilterOutput
	ToGetManagedListsFilterOutputWithContext(context.Context) GetManagedListsFilterOutput
}

type GetManagedListsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetManagedListsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsFilter)(nil)).Elem()
}

func (i GetManagedListsFilterArgs) ToGetManagedListsFilterOutput() GetManagedListsFilterOutput {
	return i.ToGetManagedListsFilterOutputWithContext(context.Background())
}

func (i GetManagedListsFilterArgs) ToGetManagedListsFilterOutputWithContext(ctx context.Context) GetManagedListsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsFilterOutput)
}

// GetManagedListsFilterArrayInput is an input type that accepts GetManagedListsFilterArray and GetManagedListsFilterArrayOutput values.
// You can construct a concrete instance of `GetManagedListsFilterArrayInput` via:
//
//	GetManagedListsFilterArray{ GetManagedListsFilterArgs{...} }
type GetManagedListsFilterArrayInput interface {
	pulumi.Input

	ToGetManagedListsFilterArrayOutput() GetManagedListsFilterArrayOutput
	ToGetManagedListsFilterArrayOutputWithContext(context.Context) GetManagedListsFilterArrayOutput
}

type GetManagedListsFilterArray []GetManagedListsFilterInput

func (GetManagedListsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsFilter)(nil)).Elem()
}

func (i GetManagedListsFilterArray) ToGetManagedListsFilterArrayOutput() GetManagedListsFilterArrayOutput {
	return i.ToGetManagedListsFilterArrayOutputWithContext(context.Background())
}

func (i GetManagedListsFilterArray) ToGetManagedListsFilterArrayOutputWithContext(ctx context.Context) GetManagedListsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsFilterArrayOutput)
}

type GetManagedListsFilterOutput struct{ *pulumi.OutputState }

func (GetManagedListsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsFilter)(nil)).Elem()
}

func (o GetManagedListsFilterOutput) ToGetManagedListsFilterOutput() GetManagedListsFilterOutput {
	return o
}

func (o GetManagedListsFilterOutput) ToGetManagedListsFilterOutputWithContext(ctx context.Context) GetManagedListsFilterOutput {
	return o
}

func (o GetManagedListsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagedListsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedListsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetManagedListsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedListsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetManagedListsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetManagedListsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsFilter)(nil)).Elem()
}

func (o GetManagedListsFilterArrayOutput) ToGetManagedListsFilterArrayOutput() GetManagedListsFilterArrayOutput {
	return o
}

func (o GetManagedListsFilterArrayOutput) ToGetManagedListsFilterArrayOutputWithContext(ctx context.Context) GetManagedListsFilterArrayOutput {
	return o
}

func (o GetManagedListsFilterArrayOutput) Index(i pulumi.IntInput) GetManagedListsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedListsFilter {
		return vs[0].([]GetManagedListsFilter)[vs[1].(int)]
	}).(GetManagedListsFilterOutput)
}

type GetManagedListsManagedListCollection struct {
	Items []GetManagedListsManagedListCollectionItem `pulumi:"items"`
}

// GetManagedListsManagedListCollectionInput is an input type that accepts GetManagedListsManagedListCollectionArgs and GetManagedListsManagedListCollectionOutput values.
// You can construct a concrete instance of `GetManagedListsManagedListCollectionInput` via:
//
//	GetManagedListsManagedListCollectionArgs{...}
type GetManagedListsManagedListCollectionInput interface {
	pulumi.Input

	ToGetManagedListsManagedListCollectionOutput() GetManagedListsManagedListCollectionOutput
	ToGetManagedListsManagedListCollectionOutputWithContext(context.Context) GetManagedListsManagedListCollectionOutput
}

type GetManagedListsManagedListCollectionArgs struct {
	Items GetManagedListsManagedListCollectionItemArrayInput `pulumi:"items"`
}

func (GetManagedListsManagedListCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsManagedListCollection)(nil)).Elem()
}

func (i GetManagedListsManagedListCollectionArgs) ToGetManagedListsManagedListCollectionOutput() GetManagedListsManagedListCollectionOutput {
	return i.ToGetManagedListsManagedListCollectionOutputWithContext(context.Background())
}

func (i GetManagedListsManagedListCollectionArgs) ToGetManagedListsManagedListCollectionOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsManagedListCollectionOutput)
}

// GetManagedListsManagedListCollectionArrayInput is an input type that accepts GetManagedListsManagedListCollectionArray and GetManagedListsManagedListCollectionArrayOutput values.
// You can construct a concrete instance of `GetManagedListsManagedListCollectionArrayInput` via:
//
//	GetManagedListsManagedListCollectionArray{ GetManagedListsManagedListCollectionArgs{...} }
type GetManagedListsManagedListCollectionArrayInput interface {
	pulumi.Input

	ToGetManagedListsManagedListCollectionArrayOutput() GetManagedListsManagedListCollectionArrayOutput
	ToGetManagedListsManagedListCollectionArrayOutputWithContext(context.Context) GetManagedListsManagedListCollectionArrayOutput
}

type GetManagedListsManagedListCollectionArray []GetManagedListsManagedListCollectionInput

func (GetManagedListsManagedListCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsManagedListCollection)(nil)).Elem()
}

func (i GetManagedListsManagedListCollectionArray) ToGetManagedListsManagedListCollectionArrayOutput() GetManagedListsManagedListCollectionArrayOutput {
	return i.ToGetManagedListsManagedListCollectionArrayOutputWithContext(context.Background())
}

func (i GetManagedListsManagedListCollectionArray) ToGetManagedListsManagedListCollectionArrayOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsManagedListCollectionArrayOutput)
}

type GetManagedListsManagedListCollectionOutput struct{ *pulumi.OutputState }

func (GetManagedListsManagedListCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsManagedListCollection)(nil)).Elem()
}

func (o GetManagedListsManagedListCollectionOutput) ToGetManagedListsManagedListCollectionOutput() GetManagedListsManagedListCollectionOutput {
	return o
}

func (o GetManagedListsManagedListCollectionOutput) ToGetManagedListsManagedListCollectionOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionOutput {
	return o
}

func (o GetManagedListsManagedListCollectionOutput) Items() GetManagedListsManagedListCollectionItemArrayOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollection) []GetManagedListsManagedListCollectionItem {
		return v.Items
	}).(GetManagedListsManagedListCollectionItemArrayOutput)
}

type GetManagedListsManagedListCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetManagedListsManagedListCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsManagedListCollection)(nil)).Elem()
}

func (o GetManagedListsManagedListCollectionArrayOutput) ToGetManagedListsManagedListCollectionArrayOutput() GetManagedListsManagedListCollectionArrayOutput {
	return o
}

func (o GetManagedListsManagedListCollectionArrayOutput) ToGetManagedListsManagedListCollectionArrayOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionArrayOutput {
	return o
}

func (o GetManagedListsManagedListCollectionArrayOutput) Index(i pulumi.IntInput) GetManagedListsManagedListCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedListsManagedListCollection {
		return vs[0].([]GetManagedListsManagedListCollection)[vs[1].(int)]
	}).(GetManagedListsManagedListCollectionOutput)
}

type GetManagedListsManagedListCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// ManagedList description.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// provider of the feed
	FeedProvider string `pulumi:"feedProvider"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation
	Id string `pulumi:"id"`
	// If this list is editable or not
	IsEditable bool `pulumi:"isEditable"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails string `pulumi:"lifecyleDetails"`
	// List of ManagedListItem
	ListItems []string `pulumi:"listItems"`
	// The type of the ManagedList.
	ListType string `pulumi:"listType"`
	// OCID of the Source ManagedList
	SourceManagedListId string `pulumi:"sourceManagedListId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the managed list was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the managed list was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetManagedListsManagedListCollectionItemInput is an input type that accepts GetManagedListsManagedListCollectionItemArgs and GetManagedListsManagedListCollectionItemOutput values.
// You can construct a concrete instance of `GetManagedListsManagedListCollectionItemInput` via:
//
//	GetManagedListsManagedListCollectionItemArgs{...}
type GetManagedListsManagedListCollectionItemInput interface {
	pulumi.Input

	ToGetManagedListsManagedListCollectionItemOutput() GetManagedListsManagedListCollectionItemOutput
	ToGetManagedListsManagedListCollectionItemOutputWithContext(context.Context) GetManagedListsManagedListCollectionItemOutput
}

type GetManagedListsManagedListCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// ManagedList description.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// provider of the feed
	FeedProvider pulumi.StringInput `pulumi:"feedProvider"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation
	Id pulumi.StringInput `pulumi:"id"`
	// If this list is editable or not
	IsEditable pulumi.BoolInput `pulumi:"isEditable"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecyleDetails pulumi.StringInput `pulumi:"lifecyleDetails"`
	// List of ManagedListItem
	ListItems pulumi.StringArrayInput `pulumi:"listItems"`
	// The type of the ManagedList.
	ListType pulumi.StringInput `pulumi:"listType"`
	// OCID of the Source ManagedList
	SourceManagedListId pulumi.StringInput `pulumi:"sourceManagedListId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the managed list was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the managed list was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetManagedListsManagedListCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsManagedListCollectionItem)(nil)).Elem()
}

func (i GetManagedListsManagedListCollectionItemArgs) ToGetManagedListsManagedListCollectionItemOutput() GetManagedListsManagedListCollectionItemOutput {
	return i.ToGetManagedListsManagedListCollectionItemOutputWithContext(context.Background())
}

func (i GetManagedListsManagedListCollectionItemArgs) ToGetManagedListsManagedListCollectionItemOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsManagedListCollectionItemOutput)
}

// GetManagedListsManagedListCollectionItemArrayInput is an input type that accepts GetManagedListsManagedListCollectionItemArray and GetManagedListsManagedListCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetManagedListsManagedListCollectionItemArrayInput` via:
//
//	GetManagedListsManagedListCollectionItemArray{ GetManagedListsManagedListCollectionItemArgs{...} }
type GetManagedListsManagedListCollectionItemArrayInput interface {
	pulumi.Input

	ToGetManagedListsManagedListCollectionItemArrayOutput() GetManagedListsManagedListCollectionItemArrayOutput
	ToGetManagedListsManagedListCollectionItemArrayOutputWithContext(context.Context) GetManagedListsManagedListCollectionItemArrayOutput
}

type GetManagedListsManagedListCollectionItemArray []GetManagedListsManagedListCollectionItemInput

func (GetManagedListsManagedListCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsManagedListCollectionItem)(nil)).Elem()
}

func (i GetManagedListsManagedListCollectionItemArray) ToGetManagedListsManagedListCollectionItemArrayOutput() GetManagedListsManagedListCollectionItemArrayOutput {
	return i.ToGetManagedListsManagedListCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetManagedListsManagedListCollectionItemArray) ToGetManagedListsManagedListCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedListsManagedListCollectionItemArrayOutput)
}

type GetManagedListsManagedListCollectionItemOutput struct{ *pulumi.OutputState }

func (GetManagedListsManagedListCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedListsManagedListCollectionItem)(nil)).Elem()
}

func (o GetManagedListsManagedListCollectionItemOutput) ToGetManagedListsManagedListCollectionItemOutput() GetManagedListsManagedListCollectionItemOutput {
	return o
}

func (o GetManagedListsManagedListCollectionItemOutput) ToGetManagedListsManagedListCollectionItemOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetManagedListsManagedListCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetManagedListsManagedListCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// ManagedList description.
func (o GetManagedListsManagedListCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetManagedListsManagedListCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// provider of the feed
func (o GetManagedListsManagedListCollectionItemOutput) FeedProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.FeedProvider }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetManagedListsManagedListCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier that is immutable on creation
func (o GetManagedListsManagedListCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// If this list is editable or not
func (o GetManagedListsManagedListCollectionItemOutput) IsEditable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) bool { return v.IsEditable }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetManagedListsManagedListCollectionItemOutput) LifecyleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.LifecyleDetails }).(pulumi.StringOutput)
}

// List of ManagedListItem
func (o GetManagedListsManagedListCollectionItemOutput) ListItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) []string { return v.ListItems }).(pulumi.StringArrayOutput)
}

// The type of the ManagedList.
func (o GetManagedListsManagedListCollectionItemOutput) ListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.ListType }).(pulumi.StringOutput)
}

// OCID of the Source ManagedList
func (o GetManagedListsManagedListCollectionItemOutput) SourceManagedListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.SourceManagedListId }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetManagedListsManagedListCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetManagedListsManagedListCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the managed list was created. Format defined by RFC3339.
func (o GetManagedListsManagedListCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the managed list was updated. Format defined by RFC3339.
func (o GetManagedListsManagedListCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedListsManagedListCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetManagedListsManagedListCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetManagedListsManagedListCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedListsManagedListCollectionItem)(nil)).Elem()
}

func (o GetManagedListsManagedListCollectionItemArrayOutput) ToGetManagedListsManagedListCollectionItemArrayOutput() GetManagedListsManagedListCollectionItemArrayOutput {
	return o
}

func (o GetManagedListsManagedListCollectionItemArrayOutput) ToGetManagedListsManagedListCollectionItemArrayOutputWithContext(ctx context.Context) GetManagedListsManagedListCollectionItemArrayOutput {
	return o
}

func (o GetManagedListsManagedListCollectionItemArrayOutput) Index(i pulumi.IntInput) GetManagedListsManagedListCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedListsManagedListCollectionItem {
		return vs[0].([]GetManagedListsManagedListCollectionItem)[vs[1].(int)]
	}).(GetManagedListsManagedListCollectionItemOutput)
}

type GetProblemEntitiesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetProblemEntitiesFilterInput is an input type that accepts GetProblemEntitiesFilterArgs and GetProblemEntitiesFilterOutput values.
// You can construct a concrete instance of `GetProblemEntitiesFilterInput` via:
//
//	GetProblemEntitiesFilterArgs{...}
type GetProblemEntitiesFilterInput interface {
	pulumi.Input

	ToGetProblemEntitiesFilterOutput() GetProblemEntitiesFilterOutput
	ToGetProblemEntitiesFilterOutputWithContext(context.Context) GetProblemEntitiesFilterOutput
}

type GetProblemEntitiesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetProblemEntitiesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntitiesFilter)(nil)).Elem()
}

func (i GetProblemEntitiesFilterArgs) ToGetProblemEntitiesFilterOutput() GetProblemEntitiesFilterOutput {
	return i.ToGetProblemEntitiesFilterOutputWithContext(context.Background())
}

func (i GetProblemEntitiesFilterArgs) ToGetProblemEntitiesFilterOutputWithContext(ctx context.Context) GetProblemEntitiesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntitiesFilterOutput)
}

// GetProblemEntitiesFilterArrayInput is an input type that accepts GetProblemEntitiesFilterArray and GetProblemEntitiesFilterArrayOutput values.
// You can construct a concrete instance of `GetProblemEntitiesFilterArrayInput` via:
//
//	GetProblemEntitiesFilterArray{ GetProblemEntitiesFilterArgs{...} }
type GetProblemEntitiesFilterArrayInput interface {
	pulumi.Input

	ToGetProblemEntitiesFilterArrayOutput() GetProblemEntitiesFilterArrayOutput
	ToGetProblemEntitiesFilterArrayOutputWithContext(context.Context) GetProblemEntitiesFilterArrayOutput
}

type GetProblemEntitiesFilterArray []GetProblemEntitiesFilterInput

func (GetProblemEntitiesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntitiesFilter)(nil)).Elem()
}

func (i GetProblemEntitiesFilterArray) ToGetProblemEntitiesFilterArrayOutput() GetProblemEntitiesFilterArrayOutput {
	return i.ToGetProblemEntitiesFilterArrayOutputWithContext(context.Background())
}

func (i GetProblemEntitiesFilterArray) ToGetProblemEntitiesFilterArrayOutputWithContext(ctx context.Context) GetProblemEntitiesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntitiesFilterArrayOutput)
}

type GetProblemEntitiesFilterOutput struct{ *pulumi.OutputState }

func (GetProblemEntitiesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntitiesFilter)(nil)).Elem()
}

func (o GetProblemEntitiesFilterOutput) ToGetProblemEntitiesFilterOutput() GetProblemEntitiesFilterOutput {
	return o
}

func (o GetProblemEntitiesFilterOutput) ToGetProblemEntitiesFilterOutputWithContext(ctx context.Context) GetProblemEntitiesFilterOutput {
	return o
}

func (o GetProblemEntitiesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntitiesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProblemEntitiesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProblemEntitiesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetProblemEntitiesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProblemEntitiesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetProblemEntitiesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetProblemEntitiesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntitiesFilter)(nil)).Elem()
}

func (o GetProblemEntitiesFilterArrayOutput) ToGetProblemEntitiesFilterArrayOutput() GetProblemEntitiesFilterArrayOutput {
	return o
}

func (o GetProblemEntitiesFilterArrayOutput) ToGetProblemEntitiesFilterArrayOutputWithContext(ctx context.Context) GetProblemEntitiesFilterArrayOutput {
	return o
}

func (o GetProblemEntitiesFilterArrayOutput) Index(i pulumi.IntInput) GetProblemEntitiesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProblemEntitiesFilter {
		return vs[0].([]GetProblemEntitiesFilter)[vs[1].(int)]
	}).(GetProblemEntitiesFilterOutput)
}

type GetProblemEntitiesProblemEntityCollection struct {
	// List of problem entities summaries related to a data source.
	Items []GetProblemEntitiesProblemEntityCollectionItem `pulumi:"items"`
}

// GetProblemEntitiesProblemEntityCollectionInput is an input type that accepts GetProblemEntitiesProblemEntityCollectionArgs and GetProblemEntitiesProblemEntityCollectionOutput values.
// You can construct a concrete instance of `GetProblemEntitiesProblemEntityCollectionInput` via:
//
//	GetProblemEntitiesProblemEntityCollectionArgs{...}
type GetProblemEntitiesProblemEntityCollectionInput interface {
	pulumi.Input

	ToGetProblemEntitiesProblemEntityCollectionOutput() GetProblemEntitiesProblemEntityCollectionOutput
	ToGetProblemEntitiesProblemEntityCollectionOutputWithContext(context.Context) GetProblemEntitiesProblemEntityCollectionOutput
}

type GetProblemEntitiesProblemEntityCollectionArgs struct {
	// List of problem entities summaries related to a data source.
	Items GetProblemEntitiesProblemEntityCollectionItemArrayInput `pulumi:"items"`
}

func (GetProblemEntitiesProblemEntityCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntitiesProblemEntityCollection)(nil)).Elem()
}

func (i GetProblemEntitiesProblemEntityCollectionArgs) ToGetProblemEntitiesProblemEntityCollectionOutput() GetProblemEntitiesProblemEntityCollectionOutput {
	return i.ToGetProblemEntitiesProblemEntityCollectionOutputWithContext(context.Background())
}

func (i GetProblemEntitiesProblemEntityCollectionArgs) ToGetProblemEntitiesProblemEntityCollectionOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntitiesProblemEntityCollectionOutput)
}

// GetProblemEntitiesProblemEntityCollectionArrayInput is an input type that accepts GetProblemEntitiesProblemEntityCollectionArray and GetProblemEntitiesProblemEntityCollectionArrayOutput values.
// You can construct a concrete instance of `GetProblemEntitiesProblemEntityCollectionArrayInput` via:
//
//	GetProblemEntitiesProblemEntityCollectionArray{ GetProblemEntitiesProblemEntityCollectionArgs{...} }
type GetProblemEntitiesProblemEntityCollectionArrayInput interface {
	pulumi.Input

	ToGetProblemEntitiesProblemEntityCollectionArrayOutput() GetProblemEntitiesProblemEntityCollectionArrayOutput
	ToGetProblemEntitiesProblemEntityCollectionArrayOutputWithContext(context.Context) GetProblemEntitiesProblemEntityCollectionArrayOutput
}

type GetProblemEntitiesProblemEntityCollectionArray []GetProblemEntitiesProblemEntityCollectionInput

func (GetProblemEntitiesProblemEntityCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntitiesProblemEntityCollection)(nil)).Elem()
}

func (i GetProblemEntitiesProblemEntityCollectionArray) ToGetProblemEntitiesProblemEntityCollectionArrayOutput() GetProblemEntitiesProblemEntityCollectionArrayOutput {
	return i.ToGetProblemEntitiesProblemEntityCollectionArrayOutputWithContext(context.Background())
}

func (i GetProblemEntitiesProblemEntityCollectionArray) ToGetProblemEntitiesProblemEntityCollectionArrayOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntitiesProblemEntityCollectionArrayOutput)
}

type GetProblemEntitiesProblemEntityCollectionOutput struct{ *pulumi.OutputState }

func (GetProblemEntitiesProblemEntityCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntitiesProblemEntityCollection)(nil)).Elem()
}

func (o GetProblemEntitiesProblemEntityCollectionOutput) ToGetProblemEntitiesProblemEntityCollectionOutput() GetProblemEntitiesProblemEntityCollectionOutput {
	return o
}

func (o GetProblemEntitiesProblemEntityCollectionOutput) ToGetProblemEntitiesProblemEntityCollectionOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionOutput {
	return o
}

// List of problem entities summaries related to a data source.
func (o GetProblemEntitiesProblemEntityCollectionOutput) Items() GetProblemEntitiesProblemEntityCollectionItemArrayOutput {
	return o.ApplyT(func(v GetProblemEntitiesProblemEntityCollection) []GetProblemEntitiesProblemEntityCollectionItem {
		return v.Items
	}).(GetProblemEntitiesProblemEntityCollectionItemArrayOutput)
}

type GetProblemEntitiesProblemEntityCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetProblemEntitiesProblemEntityCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntitiesProblemEntityCollection)(nil)).Elem()
}

func (o GetProblemEntitiesProblemEntityCollectionArrayOutput) ToGetProblemEntitiesProblemEntityCollectionArrayOutput() GetProblemEntitiesProblemEntityCollectionArrayOutput {
	return o
}

func (o GetProblemEntitiesProblemEntityCollectionArrayOutput) ToGetProblemEntitiesProblemEntityCollectionArrayOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionArrayOutput {
	return o
}

func (o GetProblemEntitiesProblemEntityCollectionArrayOutput) Index(i pulumi.IntInput) GetProblemEntitiesProblemEntityCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProblemEntitiesProblemEntityCollection {
		return vs[0].([]GetProblemEntitiesProblemEntityCollection)[vs[1].(int)]
	}).(GetProblemEntitiesProblemEntityCollectionOutput)
}

type GetProblemEntitiesProblemEntityCollectionItem struct {
	// List of event related to a DataSource
	EntityDetails []GetProblemEntitiesProblemEntityCollectionItemEntityDetail `pulumi:"entityDetails"`
	// OCId of the problem.
	ProblemId string `pulumi:"problemId"`
	// Data source problem entities region
	Regions []string `pulumi:"regions"`
	// Log result query url for a data source query
	ResultUrl string `pulumi:"resultUrl"`
	// Data source problem entities first detected time
	TimeFirstDetected string `pulumi:"timeFirstDetected"`
	// Data source problem entities last detected time
	TimeLastDetected string `pulumi:"timeLastDetected"`
}

// GetProblemEntitiesProblemEntityCollectionItemInput is an input type that accepts GetProblemEntitiesProblemEntityCollectionItemArgs and GetProblemEntitiesProblemEntityCollectionItemOutput values.
// You can construct a concrete instance of `GetProblemEntitiesProblemEntityCollectionItemInput` via:
//
//	GetProblemEntitiesProblemEntityCollectionItemArgs{...}
type GetProblemEntitiesProblemEntityCollectionItemInput interface {
	pulumi.Input

	ToGetProblemEntitiesProblemEntityCollectionItemOutput() GetProblemEntitiesProblemEntityCollectionItemOutput
	ToGetProblemEntitiesProblemEntityCollectionItemOutputWithContext(context.Context) GetProblemEntitiesProblemEntityCollectionItemOutput
}

type GetProblemEntitiesProblemEntityCollectionItemArgs struct {
	// List of event related to a DataSource
	EntityDetails GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayInput `pulumi:"entityDetails"`
	// OCId of the problem.
	ProblemId pulumi.StringInput `pulumi:"problemId"`
	// Data source problem entities region
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// Log result query url for a data source query
	ResultUrl pulumi.StringInput `pulumi:"resultUrl"`
	// Data source problem entities first detected time
	TimeFirstDetected pulumi.StringInput `pulumi:"timeFirstDetected"`
	// Data source problem entities last detected time
	TimeLastDetected pulumi.StringInput `pulumi:"timeLastDetected"`
}

func (GetProblemEntitiesProblemEntityCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntitiesProblemEntityCollectionItem)(nil)).Elem()
}

func (i GetProblemEntitiesProblemEntityCollectionItemArgs) ToGetProblemEntitiesProblemEntityCollectionItemOutput() GetProblemEntitiesProblemEntityCollectionItemOutput {
	return i.ToGetProblemEntitiesProblemEntityCollectionItemOutputWithContext(context.Background())
}

func (i GetProblemEntitiesProblemEntityCollectionItemArgs) ToGetProblemEntitiesProblemEntityCollectionItemOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntitiesProblemEntityCollectionItemOutput)
}

// GetProblemEntitiesProblemEntityCollectionItemArrayInput is an input type that accepts GetProblemEntitiesProblemEntityCollectionItemArray and GetProblemEntitiesProblemEntityCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetProblemEntitiesProblemEntityCollectionItemArrayInput` via:
//
//	GetProblemEntitiesProblemEntityCollectionItemArray{ GetProblemEntitiesProblemEntityCollectionItemArgs{...} }
type GetProblemEntitiesProblemEntityCollectionItemArrayInput interface {
	pulumi.Input

	ToGetProblemEntitiesProblemEntityCollectionItemArrayOutput() GetProblemEntitiesProblemEntityCollectionItemArrayOutput
	ToGetProblemEntitiesProblemEntityCollectionItemArrayOutputWithContext(context.Context) GetProblemEntitiesProblemEntityCollectionItemArrayOutput
}

type GetProblemEntitiesProblemEntityCollectionItemArray []GetProblemEntitiesProblemEntityCollectionItemInput

func (GetProblemEntitiesProblemEntityCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntitiesProblemEntityCollectionItem)(nil)).Elem()
}

func (i GetProblemEntitiesProblemEntityCollectionItemArray) ToGetProblemEntitiesProblemEntityCollectionItemArrayOutput() GetProblemEntitiesProblemEntityCollectionItemArrayOutput {
	return i.ToGetProblemEntitiesProblemEntityCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetProblemEntitiesProblemEntityCollectionItemArray) ToGetProblemEntitiesProblemEntityCollectionItemArrayOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntitiesProblemEntityCollectionItemArrayOutput)
}

type GetProblemEntitiesProblemEntityCollectionItemOutput struct{ *pulumi.OutputState }

func (GetProblemEntitiesProblemEntityCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntitiesProblemEntityCollectionItem)(nil)).Elem()
}

func (o GetProblemEntitiesProblemEntityCollectionItemOutput) ToGetProblemEntitiesProblemEntityCollectionItemOutput() GetProblemEntitiesProblemEntityCollectionItemOutput {
	return o
}

func (o GetProblemEntitiesProblemEntityCollectionItemOutput) ToGetProblemEntitiesProblemEntityCollectionItemOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionItemOutput {
	return o
}

// List of event related to a DataSource
func (o GetProblemEntitiesProblemEntityCollectionItemOutput) EntityDetails() GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput {
	return o.ApplyT(func(v GetProblemEntitiesProblemEntityCollectionItem) []GetProblemEntitiesProblemEntityCollectionItemEntityDetail {
		return v.EntityDetails
	}).(GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput)
}

// OCId of the problem.
func (o GetProblemEntitiesProblemEntityCollectionItemOutput) ProblemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntitiesProblemEntityCollectionItem) string { return v.ProblemId }).(pulumi.StringOutput)
}

// Data source problem entities region
func (o GetProblemEntitiesProblemEntityCollectionItemOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProblemEntitiesProblemEntityCollectionItem) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// Log result query url for a data source query
func (o GetProblemEntitiesProblemEntityCollectionItemOutput) ResultUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntitiesProblemEntityCollectionItem) string { return v.ResultUrl }).(pulumi.StringOutput)
}

// Data source problem entities first detected time
func (o GetProblemEntitiesProblemEntityCollectionItemOutput) TimeFirstDetected() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntitiesProblemEntityCollectionItem) string { return v.TimeFirstDetected }).(pulumi.StringOutput)
}

// Data source problem entities last detected time
func (o GetProblemEntitiesProblemEntityCollectionItemOutput) TimeLastDetected() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntitiesProblemEntityCollectionItem) string { return v.TimeLastDetected }).(pulumi.StringOutput)
}

type GetProblemEntitiesProblemEntityCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetProblemEntitiesProblemEntityCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntitiesProblemEntityCollectionItem)(nil)).Elem()
}

func (o GetProblemEntitiesProblemEntityCollectionItemArrayOutput) ToGetProblemEntitiesProblemEntityCollectionItemArrayOutput() GetProblemEntitiesProblemEntityCollectionItemArrayOutput {
	return o
}

func (o GetProblemEntitiesProblemEntityCollectionItemArrayOutput) ToGetProblemEntitiesProblemEntityCollectionItemArrayOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionItemArrayOutput {
	return o
}

func (o GetProblemEntitiesProblemEntityCollectionItemArrayOutput) Index(i pulumi.IntInput) GetProblemEntitiesProblemEntityCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProblemEntitiesProblemEntityCollectionItem {
		return vs[0].([]GetProblemEntitiesProblemEntityCollectionItem)[vs[1].(int)]
	}).(GetProblemEntitiesProblemEntityCollectionItemOutput)
}

type GetProblemEntitiesProblemEntityCollectionItemEntityDetail struct {
	// The display name of entity
	DisplayName string `pulumi:"displayName"`
	// Type of entity
	Type string `pulumi:"type"`
	// The entity value
	Value string `pulumi:"value"`
}

// GetProblemEntitiesProblemEntityCollectionItemEntityDetailInput is an input type that accepts GetProblemEntitiesProblemEntityCollectionItemEntityDetailArgs and GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput values.
// You can construct a concrete instance of `GetProblemEntitiesProblemEntityCollectionItemEntityDetailInput` via:
//
//	GetProblemEntitiesProblemEntityCollectionItemEntityDetailArgs{...}
type GetProblemEntitiesProblemEntityCollectionItemEntityDetailInput interface {
	pulumi.Input

	ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput() GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput
	ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailOutputWithContext(context.Context) GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput
}

type GetProblemEntitiesProblemEntityCollectionItemEntityDetailArgs struct {
	// The display name of entity
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Type of entity
	Type pulumi.StringInput `pulumi:"type"`
	// The entity value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProblemEntitiesProblemEntityCollectionItemEntityDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntitiesProblemEntityCollectionItemEntityDetail)(nil)).Elem()
}

func (i GetProblemEntitiesProblemEntityCollectionItemEntityDetailArgs) ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput() GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput {
	return i.ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailOutputWithContext(context.Background())
}

func (i GetProblemEntitiesProblemEntityCollectionItemEntityDetailArgs) ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput)
}

// GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayInput is an input type that accepts GetProblemEntitiesProblemEntityCollectionItemEntityDetailArray and GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput values.
// You can construct a concrete instance of `GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayInput` via:
//
//	GetProblemEntitiesProblemEntityCollectionItemEntityDetailArray{ GetProblemEntitiesProblemEntityCollectionItemEntityDetailArgs{...} }
type GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayInput interface {
	pulumi.Input

	ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput() GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput
	ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutputWithContext(context.Context) GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput
}

type GetProblemEntitiesProblemEntityCollectionItemEntityDetailArray []GetProblemEntitiesProblemEntityCollectionItemEntityDetailInput

func (GetProblemEntitiesProblemEntityCollectionItemEntityDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntitiesProblemEntityCollectionItemEntityDetail)(nil)).Elem()
}

func (i GetProblemEntitiesProblemEntityCollectionItemEntityDetailArray) ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput() GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput {
	return i.ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutputWithContext(context.Background())
}

func (i GetProblemEntitiesProblemEntityCollectionItemEntityDetailArray) ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput)
}

type GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput struct{ *pulumi.OutputState }

func (GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntitiesProblemEntityCollectionItemEntityDetail)(nil)).Elem()
}

func (o GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput) ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput() GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput {
	return o
}

func (o GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput) ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput {
	return o
}

// The display name of entity
func (o GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntitiesProblemEntityCollectionItemEntityDetail) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Type of entity
func (o GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntitiesProblemEntityCollectionItemEntityDetail) string { return v.Type }).(pulumi.StringOutput)
}

// The entity value
func (o GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntitiesProblemEntityCollectionItemEntityDetail) string { return v.Value }).(pulumi.StringOutput)
}

type GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput struct{ *pulumi.OutputState }

func (GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntitiesProblemEntityCollectionItemEntityDetail)(nil)).Elem()
}

func (o GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput) ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput() GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput {
	return o
}

func (o GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput) ToGetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutputWithContext(ctx context.Context) GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput {
	return o
}

func (o GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput) Index(i pulumi.IntInput) GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProblemEntitiesProblemEntityCollectionItemEntityDetail {
		return vs[0].([]GetProblemEntitiesProblemEntityCollectionItemEntityDetail)[vs[1].(int)]
	}).(GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput)
}

type GetProblemEntityItem struct {
	// List of event related to a DataSource
	EntityDetails []GetProblemEntityItemEntityDetail `pulumi:"entityDetails"`
	// OCId of the problem.
	ProblemId string `pulumi:"problemId"`
	// Data source problem entities region
	Regions []string `pulumi:"regions"`
	// Log result query url for a data source query
	ResultUrl string `pulumi:"resultUrl"`
	// Data source problem entities first detected time
	TimeFirstDetected string `pulumi:"timeFirstDetected"`
	// Data source problem entities last detected time
	TimeLastDetected string `pulumi:"timeLastDetected"`
}

// GetProblemEntityItemInput is an input type that accepts GetProblemEntityItemArgs and GetProblemEntityItemOutput values.
// You can construct a concrete instance of `GetProblemEntityItemInput` via:
//
//	GetProblemEntityItemArgs{...}
type GetProblemEntityItemInput interface {
	pulumi.Input

	ToGetProblemEntityItemOutput() GetProblemEntityItemOutput
	ToGetProblemEntityItemOutputWithContext(context.Context) GetProblemEntityItemOutput
}

type GetProblemEntityItemArgs struct {
	// List of event related to a DataSource
	EntityDetails GetProblemEntityItemEntityDetailArrayInput `pulumi:"entityDetails"`
	// OCId of the problem.
	ProblemId pulumi.StringInput `pulumi:"problemId"`
	// Data source problem entities region
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// Log result query url for a data source query
	ResultUrl pulumi.StringInput `pulumi:"resultUrl"`
	// Data source problem entities first detected time
	TimeFirstDetected pulumi.StringInput `pulumi:"timeFirstDetected"`
	// Data source problem entities last detected time
	TimeLastDetected pulumi.StringInput `pulumi:"timeLastDetected"`
}

func (GetProblemEntityItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntityItem)(nil)).Elem()
}

func (i GetProblemEntityItemArgs) ToGetProblemEntityItemOutput() GetProblemEntityItemOutput {
	return i.ToGetProblemEntityItemOutputWithContext(context.Background())
}

func (i GetProblemEntityItemArgs) ToGetProblemEntityItemOutputWithContext(ctx context.Context) GetProblemEntityItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntityItemOutput)
}

// GetProblemEntityItemArrayInput is an input type that accepts GetProblemEntityItemArray and GetProblemEntityItemArrayOutput values.
// You can construct a concrete instance of `GetProblemEntityItemArrayInput` via:
//
//	GetProblemEntityItemArray{ GetProblemEntityItemArgs{...} }
type GetProblemEntityItemArrayInput interface {
	pulumi.Input

	ToGetProblemEntityItemArrayOutput() GetProblemEntityItemArrayOutput
	ToGetProblemEntityItemArrayOutputWithContext(context.Context) GetProblemEntityItemArrayOutput
}

type GetProblemEntityItemArray []GetProblemEntityItemInput

func (GetProblemEntityItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntityItem)(nil)).Elem()
}

func (i GetProblemEntityItemArray) ToGetProblemEntityItemArrayOutput() GetProblemEntityItemArrayOutput {
	return i.ToGetProblemEntityItemArrayOutputWithContext(context.Background())
}

func (i GetProblemEntityItemArray) ToGetProblemEntityItemArrayOutputWithContext(ctx context.Context) GetProblemEntityItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntityItemArrayOutput)
}

type GetProblemEntityItemOutput struct{ *pulumi.OutputState }

func (GetProblemEntityItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntityItem)(nil)).Elem()
}

func (o GetProblemEntityItemOutput) ToGetProblemEntityItemOutput() GetProblemEntityItemOutput {
	return o
}

func (o GetProblemEntityItemOutput) ToGetProblemEntityItemOutputWithContext(ctx context.Context) GetProblemEntityItemOutput {
	return o
}

// List of event related to a DataSource
func (o GetProblemEntityItemOutput) EntityDetails() GetProblemEntityItemEntityDetailArrayOutput {
	return o.ApplyT(func(v GetProblemEntityItem) []GetProblemEntityItemEntityDetail { return v.EntityDetails }).(GetProblemEntityItemEntityDetailArrayOutput)
}

// OCId of the problem.
func (o GetProblemEntityItemOutput) ProblemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntityItem) string { return v.ProblemId }).(pulumi.StringOutput)
}

// Data source problem entities region
func (o GetProblemEntityItemOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProblemEntityItem) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// Log result query url for a data source query
func (o GetProblemEntityItemOutput) ResultUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntityItem) string { return v.ResultUrl }).(pulumi.StringOutput)
}

// Data source problem entities first detected time
func (o GetProblemEntityItemOutput) TimeFirstDetected() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntityItem) string { return v.TimeFirstDetected }).(pulumi.StringOutput)
}

// Data source problem entities last detected time
func (o GetProblemEntityItemOutput) TimeLastDetected() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntityItem) string { return v.TimeLastDetected }).(pulumi.StringOutput)
}

type GetProblemEntityItemArrayOutput struct{ *pulumi.OutputState }

func (GetProblemEntityItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntityItem)(nil)).Elem()
}

func (o GetProblemEntityItemArrayOutput) ToGetProblemEntityItemArrayOutput() GetProblemEntityItemArrayOutput {
	return o
}

func (o GetProblemEntityItemArrayOutput) ToGetProblemEntityItemArrayOutputWithContext(ctx context.Context) GetProblemEntityItemArrayOutput {
	return o
}

func (o GetProblemEntityItemArrayOutput) Index(i pulumi.IntInput) GetProblemEntityItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProblemEntityItem {
		return vs[0].([]GetProblemEntityItem)[vs[1].(int)]
	}).(GetProblemEntityItemOutput)
}

type GetProblemEntityItemEntityDetail struct {
	// The display name of entity
	DisplayName string `pulumi:"displayName"`
	// Type of entity
	Type string `pulumi:"type"`
	// The entity value
	Value string `pulumi:"value"`
}

// GetProblemEntityItemEntityDetailInput is an input type that accepts GetProblemEntityItemEntityDetailArgs and GetProblemEntityItemEntityDetailOutput values.
// You can construct a concrete instance of `GetProblemEntityItemEntityDetailInput` via:
//
//	GetProblemEntityItemEntityDetailArgs{...}
type GetProblemEntityItemEntityDetailInput interface {
	pulumi.Input

	ToGetProblemEntityItemEntityDetailOutput() GetProblemEntityItemEntityDetailOutput
	ToGetProblemEntityItemEntityDetailOutputWithContext(context.Context) GetProblemEntityItemEntityDetailOutput
}

type GetProblemEntityItemEntityDetailArgs struct {
	// The display name of entity
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Type of entity
	Type pulumi.StringInput `pulumi:"type"`
	// The entity value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProblemEntityItemEntityDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntityItemEntityDetail)(nil)).Elem()
}

func (i GetProblemEntityItemEntityDetailArgs) ToGetProblemEntityItemEntityDetailOutput() GetProblemEntityItemEntityDetailOutput {
	return i.ToGetProblemEntityItemEntityDetailOutputWithContext(context.Background())
}

func (i GetProblemEntityItemEntityDetailArgs) ToGetProblemEntityItemEntityDetailOutputWithContext(ctx context.Context) GetProblemEntityItemEntityDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntityItemEntityDetailOutput)
}

// GetProblemEntityItemEntityDetailArrayInput is an input type that accepts GetProblemEntityItemEntityDetailArray and GetProblemEntityItemEntityDetailArrayOutput values.
// You can construct a concrete instance of `GetProblemEntityItemEntityDetailArrayInput` via:
//
//	GetProblemEntityItemEntityDetailArray{ GetProblemEntityItemEntityDetailArgs{...} }
type GetProblemEntityItemEntityDetailArrayInput interface {
	pulumi.Input

	ToGetProblemEntityItemEntityDetailArrayOutput() GetProblemEntityItemEntityDetailArrayOutput
	ToGetProblemEntityItemEntityDetailArrayOutputWithContext(context.Context) GetProblemEntityItemEntityDetailArrayOutput
}

type GetProblemEntityItemEntityDetailArray []GetProblemEntityItemEntityDetailInput

func (GetProblemEntityItemEntityDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntityItemEntityDetail)(nil)).Elem()
}

func (i GetProblemEntityItemEntityDetailArray) ToGetProblemEntityItemEntityDetailArrayOutput() GetProblemEntityItemEntityDetailArrayOutput {
	return i.ToGetProblemEntityItemEntityDetailArrayOutputWithContext(context.Background())
}

func (i GetProblemEntityItemEntityDetailArray) ToGetProblemEntityItemEntityDetailArrayOutputWithContext(ctx context.Context) GetProblemEntityItemEntityDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProblemEntityItemEntityDetailArrayOutput)
}

type GetProblemEntityItemEntityDetailOutput struct{ *pulumi.OutputState }

func (GetProblemEntityItemEntityDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProblemEntityItemEntityDetail)(nil)).Elem()
}

func (o GetProblemEntityItemEntityDetailOutput) ToGetProblemEntityItemEntityDetailOutput() GetProblemEntityItemEntityDetailOutput {
	return o
}

func (o GetProblemEntityItemEntityDetailOutput) ToGetProblemEntityItemEntityDetailOutputWithContext(ctx context.Context) GetProblemEntityItemEntityDetailOutput {
	return o
}

// The display name of entity
func (o GetProblemEntityItemEntityDetailOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntityItemEntityDetail) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Type of entity
func (o GetProblemEntityItemEntityDetailOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntityItemEntityDetail) string { return v.Type }).(pulumi.StringOutput)
}

// The entity value
func (o GetProblemEntityItemEntityDetailOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProblemEntityItemEntityDetail) string { return v.Value }).(pulumi.StringOutput)
}

type GetProblemEntityItemEntityDetailArrayOutput struct{ *pulumi.OutputState }

func (GetProblemEntityItemEntityDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProblemEntityItemEntityDetail)(nil)).Elem()
}

func (o GetProblemEntityItemEntityDetailArrayOutput) ToGetProblemEntityItemEntityDetailArrayOutput() GetProblemEntityItemEntityDetailArrayOutput {
	return o
}

func (o GetProblemEntityItemEntityDetailArrayOutput) ToGetProblemEntityItemEntityDetailArrayOutputWithContext(ctx context.Context) GetProblemEntityItemEntityDetailArrayOutput {
	return o
}

func (o GetProblemEntityItemEntityDetailArrayOutput) Index(i pulumi.IntInput) GetProblemEntityItemEntityDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProblemEntityItemEntityDetail {
		return vs[0].([]GetProblemEntityItemEntityDetail)[vs[1].(int)]
	}).(GetProblemEntityItemEntityDetailOutput)
}

type GetResponderRecipeEffectiveResponderRule struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetResponderRecipeEffectiveResponderRuleDetail `pulumi:"details"`
	// ResponderRule display name.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The current state of the Example.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetResponderRecipeEffectiveResponderRuleInput is an input type that accepts GetResponderRecipeEffectiveResponderRuleArgs and GetResponderRecipeEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `GetResponderRecipeEffectiveResponderRuleInput` via:
//
//	GetResponderRecipeEffectiveResponderRuleArgs{...}
type GetResponderRecipeEffectiveResponderRuleInput interface {
	pulumi.Input

	ToGetResponderRecipeEffectiveResponderRuleOutput() GetResponderRecipeEffectiveResponderRuleOutput
	ToGetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Context) GetResponderRecipeEffectiveResponderRuleOutput
}

type GetResponderRecipeEffectiveResponderRuleArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipeEffectiveResponderRuleDetailArrayInput `pulumi:"details"`
	// ResponderRule display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The current state of the Example.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResponderRecipeEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetResponderRecipeEffectiveResponderRuleArgs) ToGetResponderRecipeEffectiveResponderRuleOutput() GetResponderRecipeEffectiveResponderRuleOutput {
	return i.ToGetResponderRecipeEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i GetResponderRecipeEffectiveResponderRuleArgs) ToGetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeEffectiveResponderRuleOutput)
}

// GetResponderRecipeEffectiveResponderRuleArrayInput is an input type that accepts GetResponderRecipeEffectiveResponderRuleArray and GetResponderRecipeEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipeEffectiveResponderRuleArrayInput` via:
//
//	GetResponderRecipeEffectiveResponderRuleArray{ GetResponderRecipeEffectiveResponderRuleArgs{...} }
type GetResponderRecipeEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToGetResponderRecipeEffectiveResponderRuleArrayOutput() GetResponderRecipeEffectiveResponderRuleArrayOutput
	ToGetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Context) GetResponderRecipeEffectiveResponderRuleArrayOutput
}

type GetResponderRecipeEffectiveResponderRuleArray []GetResponderRecipeEffectiveResponderRuleInput

func (GetResponderRecipeEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (i GetResponderRecipeEffectiveResponderRuleArray) ToGetResponderRecipeEffectiveResponderRuleArrayOutput() GetResponderRecipeEffectiveResponderRuleArrayOutput {
	return i.ToGetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipeEffectiveResponderRuleArray) ToGetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeEffectiveResponderRuleArrayOutput)
}

type GetResponderRecipeEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetResponderRecipeEffectiveResponderRuleOutput) ToGetResponderRecipeEffectiveResponderRuleOutput() GetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleOutput) ToGetResponderRecipeEffectiveResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleOutput {
	return o
}

// Compartment Identifier
func (o GetResponderRecipeEffectiveResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetResponderRecipeEffectiveResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetResponderRecipeEffectiveResponderRuleOutput) Details() GetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) []GetResponderRecipeEffectiveResponderRuleDetail {
		return v.Details
	}).(GetResponderRecipeEffectiveResponderRuleDetailArrayOutput)
}

// ResponderRule display name.
func (o GetResponderRecipeEffectiveResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetResponderRecipeEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of Policy
func (o GetResponderRecipeEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetResponderRecipeEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The current state of the Example.
func (o GetResponderRecipeEffectiveResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetResponderRecipeEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o GetResponderRecipeEffectiveResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o GetResponderRecipeEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Responder
func (o GetResponderRecipeEffectiveResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetResponderRecipeEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeEffectiveResponderRule)(nil)).Elem()
}

func (o GetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetResponderRecipeEffectiveResponderRuleArrayOutput() GetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleArrayOutput) ToGetResponderRecipeEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) GetResponderRecipeEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipeEffectiveResponderRule {
		return vs[0].([]GetResponderRecipeEffectiveResponderRule)[vs[1].(int)]
	}).(GetResponderRecipeEffectiveResponderRuleOutput)
}

type GetResponderRecipeEffectiveResponderRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetResponderRecipeEffectiveResponderRuleDetailConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetResponderRecipeEffectiveResponderRuleDetailInput is an input type that accepts GetResponderRecipeEffectiveResponderRuleDetailArgs and GetResponderRecipeEffectiveResponderRuleDetailOutput values.
// You can construct a concrete instance of `GetResponderRecipeEffectiveResponderRuleDetailInput` via:
//
//	GetResponderRecipeEffectiveResponderRuleDetailArgs{...}
type GetResponderRecipeEffectiveResponderRuleDetailInput interface {
	pulumi.Input

	ToGetResponderRecipeEffectiveResponderRuleDetailOutput() GetResponderRecipeEffectiveResponderRuleDetailOutput
	ToGetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(context.Context) GetResponderRecipeEffectiveResponderRuleDetailOutput
}

type GetResponderRecipeEffectiveResponderRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetResponderRecipeEffectiveResponderRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i GetResponderRecipeEffectiveResponderRuleDetailArgs) ToGetResponderRecipeEffectiveResponderRuleDetailOutput() GetResponderRecipeEffectiveResponderRuleDetailOutput {
	return i.ToGetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(context.Background())
}

func (i GetResponderRecipeEffectiveResponderRuleDetailArgs) ToGetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeEffectiveResponderRuleDetailOutput)
}

// GetResponderRecipeEffectiveResponderRuleDetailArrayInput is an input type that accepts GetResponderRecipeEffectiveResponderRuleDetailArray and GetResponderRecipeEffectiveResponderRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipeEffectiveResponderRuleDetailArrayInput` via:
//
//	GetResponderRecipeEffectiveResponderRuleDetailArray{ GetResponderRecipeEffectiveResponderRuleDetailArgs{...} }
type GetResponderRecipeEffectiveResponderRuleDetailArrayInput interface {
	pulumi.Input

	ToGetResponderRecipeEffectiveResponderRuleDetailArrayOutput() GetResponderRecipeEffectiveResponderRuleDetailArrayOutput
	ToGetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(context.Context) GetResponderRecipeEffectiveResponderRuleDetailArrayOutput
}

type GetResponderRecipeEffectiveResponderRuleDetailArray []GetResponderRecipeEffectiveResponderRuleDetailInput

func (GetResponderRecipeEffectiveResponderRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i GetResponderRecipeEffectiveResponderRuleDetailArray) ToGetResponderRecipeEffectiveResponderRuleDetailArrayOutput() GetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return i.ToGetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipeEffectiveResponderRuleDetailArray) ToGetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeEffectiveResponderRuleDetailArrayOutput)
}

type GetResponderRecipeEffectiveResponderRuleDetailOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeEffectiveResponderRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o GetResponderRecipeEffectiveResponderRuleDetailOutput) ToGetResponderRecipeEffectiveResponderRuleDetailOutput() GetResponderRecipeEffectiveResponderRuleDetailOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleDetailOutput) ToGetResponderRecipeEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailOutput {
	return o
}

// Base condition object
func (o GetResponderRecipeEffectiveResponderRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetail) string { return v.Condition }).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetResponderRecipeEffectiveResponderRuleDetailOutput) Configurations() GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetail) []GetResponderRecipeEffectiveResponderRuleDetailConfiguration {
		return v.Configurations
	}).(GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetResponderRecipeEffectiveResponderRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetail) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetResponderRecipeEffectiveResponderRuleDetailOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetail) string { return v.Mode }).(pulumi.StringOutput)
}

type GetResponderRecipeEffectiveResponderRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o GetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ToGetResponderRecipeEffectiveResponderRuleDetailArrayOutput() GetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleDetailArrayOutput) ToGetResponderRecipeEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleDetailArrayOutput) Index(i pulumi.IntInput) GetResponderRecipeEffectiveResponderRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipeEffectiveResponderRuleDetail {
		return vs[0].([]GetResponderRecipeEffectiveResponderRuleDetail)[vs[1].(int)]
	}).(GetResponderRecipeEffectiveResponderRuleDetailOutput)
}

type GetResponderRecipeEffectiveResponderRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetResponderRecipeEffectiveResponderRuleDetailConfigurationInput is an input type that accepts GetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs and GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetResponderRecipeEffectiveResponderRuleDetailConfigurationInput` via:
//
//	GetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{...}
type GetResponderRecipeEffectiveResponderRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput
	ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Context) GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput
}

type GetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return i.ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs) ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput)
}

// GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput is an input type that accepts GetResponderRecipeEffectiveResponderRuleDetailConfigurationArray and GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput` via:
//
//	GetResponderRecipeEffectiveResponderRuleDetailConfigurationArray{ GetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{...} }
type GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput
	ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Context) GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput
}

type GetResponderRecipeEffectiveResponderRuleDetailConfigurationArray []GetResponderRecipeEffectiveResponderRuleDetailConfigurationInput

func (GetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return i.ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipeEffectiveResponderRuleDetailConfigurationArray) ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput)
}

type GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput() GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetailConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration name
func (o GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetailConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeEffectiveResponderRuleDetailConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput() GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) ToGetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipeEffectiveResponderRuleDetailConfiguration {
		return vs[0].([]GetResponderRecipeEffectiveResponderRuleDetailConfiguration)[vs[1].(int)]
	}).(GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput)
}

type GetResponderRecipeResponderRule struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetResponderRecipeResponderRuleDetail `pulumi:"details"`
	// ResponderRule display name.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The current state of the Example.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetResponderRecipeResponderRuleInput is an input type that accepts GetResponderRecipeResponderRuleArgs and GetResponderRecipeResponderRuleOutput values.
// You can construct a concrete instance of `GetResponderRecipeResponderRuleInput` via:
//
//	GetResponderRecipeResponderRuleArgs{...}
type GetResponderRecipeResponderRuleInput interface {
	pulumi.Input

	ToGetResponderRecipeResponderRuleOutput() GetResponderRecipeResponderRuleOutput
	ToGetResponderRecipeResponderRuleOutputWithContext(context.Context) GetResponderRecipeResponderRuleOutput
}

type GetResponderRecipeResponderRuleArgs struct {
	// Compartment Identifier
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipeResponderRuleDetailArrayInput `pulumi:"details"`
	// ResponderRule display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The current state of the Example.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResponderRecipeResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetResponderRecipeResponderRuleArgs) ToGetResponderRecipeResponderRuleOutput() GetResponderRecipeResponderRuleOutput {
	return i.ToGetResponderRecipeResponderRuleOutputWithContext(context.Background())
}

func (i GetResponderRecipeResponderRuleArgs) ToGetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeResponderRuleOutput)
}

// GetResponderRecipeResponderRuleArrayInput is an input type that accepts GetResponderRecipeResponderRuleArray and GetResponderRecipeResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipeResponderRuleArrayInput` via:
//
//	GetResponderRecipeResponderRuleArray{ GetResponderRecipeResponderRuleArgs{...} }
type GetResponderRecipeResponderRuleArrayInput interface {
	pulumi.Input

	ToGetResponderRecipeResponderRuleArrayOutput() GetResponderRecipeResponderRuleArrayOutput
	ToGetResponderRecipeResponderRuleArrayOutputWithContext(context.Context) GetResponderRecipeResponderRuleArrayOutput
}

type GetResponderRecipeResponderRuleArray []GetResponderRecipeResponderRuleInput

func (GetResponderRecipeResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeResponderRule)(nil)).Elem()
}

func (i GetResponderRecipeResponderRuleArray) ToGetResponderRecipeResponderRuleArrayOutput() GetResponderRecipeResponderRuleArrayOutput {
	return i.ToGetResponderRecipeResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipeResponderRuleArray) ToGetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeResponderRuleArrayOutput)
}

type GetResponderRecipeResponderRuleOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetResponderRecipeResponderRuleOutput) ToGetResponderRecipeResponderRuleOutput() GetResponderRecipeResponderRuleOutput {
	return o
}

func (o GetResponderRecipeResponderRuleOutput) ToGetResponderRecipeResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleOutput {
	return o
}

// Compartment Identifier
func (o GetResponderRecipeResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetResponderRecipeResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetResponderRecipeResponderRuleOutput) Details() GetResponderRecipeResponderRuleDetailArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) []GetResponderRecipeResponderRuleDetail { return v.Details }).(GetResponderRecipeResponderRuleDetailArrayOutput)
}

// ResponderRule display name.
func (o GetResponderRecipeResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetResponderRecipeResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of Policy
func (o GetResponderRecipeResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetResponderRecipeResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The current state of the Example.
func (o GetResponderRecipeResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetResponderRecipeResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o GetResponderRecipeResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o GetResponderRecipeResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Responder
func (o GetResponderRecipeResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetResponderRecipeResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeResponderRule)(nil)).Elem()
}

func (o GetResponderRecipeResponderRuleArrayOutput) ToGetResponderRecipeResponderRuleArrayOutput() GetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipeResponderRuleArrayOutput) ToGetResponderRecipeResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipeResponderRuleArrayOutput) Index(i pulumi.IntInput) GetResponderRecipeResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipeResponderRule {
		return vs[0].([]GetResponderRecipeResponderRule)[vs[1].(int)]
	}).(GetResponderRecipeResponderRuleOutput)
}

type GetResponderRecipeResponderRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetResponderRecipeResponderRuleDetailConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetResponderRecipeResponderRuleDetailInput is an input type that accepts GetResponderRecipeResponderRuleDetailArgs and GetResponderRecipeResponderRuleDetailOutput values.
// You can construct a concrete instance of `GetResponderRecipeResponderRuleDetailInput` via:
//
//	GetResponderRecipeResponderRuleDetailArgs{...}
type GetResponderRecipeResponderRuleDetailInput interface {
	pulumi.Input

	ToGetResponderRecipeResponderRuleDetailOutput() GetResponderRecipeResponderRuleDetailOutput
	ToGetResponderRecipeResponderRuleDetailOutputWithContext(context.Context) GetResponderRecipeResponderRuleDetailOutput
}

type GetResponderRecipeResponderRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetResponderRecipeResponderRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetResponderRecipeResponderRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (i GetResponderRecipeResponderRuleDetailArgs) ToGetResponderRecipeResponderRuleDetailOutput() GetResponderRecipeResponderRuleDetailOutput {
	return i.ToGetResponderRecipeResponderRuleDetailOutputWithContext(context.Background())
}

func (i GetResponderRecipeResponderRuleDetailArgs) ToGetResponderRecipeResponderRuleDetailOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeResponderRuleDetailOutput)
}

// GetResponderRecipeResponderRuleDetailArrayInput is an input type that accepts GetResponderRecipeResponderRuleDetailArray and GetResponderRecipeResponderRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipeResponderRuleDetailArrayInput` via:
//
//	GetResponderRecipeResponderRuleDetailArray{ GetResponderRecipeResponderRuleDetailArgs{...} }
type GetResponderRecipeResponderRuleDetailArrayInput interface {
	pulumi.Input

	ToGetResponderRecipeResponderRuleDetailArrayOutput() GetResponderRecipeResponderRuleDetailArrayOutput
	ToGetResponderRecipeResponderRuleDetailArrayOutputWithContext(context.Context) GetResponderRecipeResponderRuleDetailArrayOutput
}

type GetResponderRecipeResponderRuleDetailArray []GetResponderRecipeResponderRuleDetailInput

func (GetResponderRecipeResponderRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (i GetResponderRecipeResponderRuleDetailArray) ToGetResponderRecipeResponderRuleDetailArrayOutput() GetResponderRecipeResponderRuleDetailArrayOutput {
	return i.ToGetResponderRecipeResponderRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipeResponderRuleDetailArray) ToGetResponderRecipeResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeResponderRuleDetailArrayOutput)
}

type GetResponderRecipeResponderRuleDetailOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeResponderRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (o GetResponderRecipeResponderRuleDetailOutput) ToGetResponderRecipeResponderRuleDetailOutput() GetResponderRecipeResponderRuleDetailOutput {
	return o
}

func (o GetResponderRecipeResponderRuleDetailOutput) ToGetResponderRecipeResponderRuleDetailOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailOutput {
	return o
}

// Base condition object
func (o GetResponderRecipeResponderRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetail) string { return v.Condition }).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetResponderRecipeResponderRuleDetailOutput) Configurations() GetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetail) []GetResponderRecipeResponderRuleDetailConfiguration {
		return v.Configurations
	}).(GetResponderRecipeResponderRuleDetailConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetResponderRecipeResponderRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetail) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetResponderRecipeResponderRuleDetailOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetail) string { return v.Mode }).(pulumi.StringOutput)
}

type GetResponderRecipeResponderRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeResponderRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeResponderRuleDetail)(nil)).Elem()
}

func (o GetResponderRecipeResponderRuleDetailArrayOutput) ToGetResponderRecipeResponderRuleDetailArrayOutput() GetResponderRecipeResponderRuleDetailArrayOutput {
	return o
}

func (o GetResponderRecipeResponderRuleDetailArrayOutput) ToGetResponderRecipeResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailArrayOutput {
	return o
}

func (o GetResponderRecipeResponderRuleDetailArrayOutput) Index(i pulumi.IntInput) GetResponderRecipeResponderRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipeResponderRuleDetail {
		return vs[0].([]GetResponderRecipeResponderRuleDetail)[vs[1].(int)]
	}).(GetResponderRecipeResponderRuleDetailOutput)
}

type GetResponderRecipeResponderRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetResponderRecipeResponderRuleDetailConfigurationInput is an input type that accepts GetResponderRecipeResponderRuleDetailConfigurationArgs and GetResponderRecipeResponderRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetResponderRecipeResponderRuleDetailConfigurationInput` via:
//
//	GetResponderRecipeResponderRuleDetailConfigurationArgs{...}
type GetResponderRecipeResponderRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetResponderRecipeResponderRuleDetailConfigurationOutput() GetResponderRecipeResponderRuleDetailConfigurationOutput
	ToGetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(context.Context) GetResponderRecipeResponderRuleDetailConfigurationOutput
}

type GetResponderRecipeResponderRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetResponderRecipeResponderRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetResponderRecipeResponderRuleDetailConfigurationArgs) ToGetResponderRecipeResponderRuleDetailConfigurationOutput() GetResponderRecipeResponderRuleDetailConfigurationOutput {
	return i.ToGetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetResponderRecipeResponderRuleDetailConfigurationArgs) ToGetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeResponderRuleDetailConfigurationOutput)
}

// GetResponderRecipeResponderRuleDetailConfigurationArrayInput is an input type that accepts GetResponderRecipeResponderRuleDetailConfigurationArray and GetResponderRecipeResponderRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipeResponderRuleDetailConfigurationArrayInput` via:
//
//	GetResponderRecipeResponderRuleDetailConfigurationArray{ GetResponderRecipeResponderRuleDetailConfigurationArgs{...} }
type GetResponderRecipeResponderRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetResponderRecipeResponderRuleDetailConfigurationArrayOutput() GetResponderRecipeResponderRuleDetailConfigurationArrayOutput
	ToGetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(context.Context) GetResponderRecipeResponderRuleDetailConfigurationArrayOutput
}

type GetResponderRecipeResponderRuleDetailConfigurationArray []GetResponderRecipeResponderRuleDetailConfigurationInput

func (GetResponderRecipeResponderRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetResponderRecipeResponderRuleDetailConfigurationArray) ToGetResponderRecipeResponderRuleDetailConfigurationArrayOutput() GetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return i.ToGetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipeResponderRuleDetailConfigurationArray) ToGetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipeResponderRuleDetailConfigurationArrayOutput)
}

type GetResponderRecipeResponderRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeResponderRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetResponderRecipeResponderRuleDetailConfigurationOutput) ToGetResponderRecipeResponderRuleDetailConfigurationOutput() GetResponderRecipeResponderRuleDetailConfigurationOutput {
	return o
}

func (o GetResponderRecipeResponderRuleDetailConfigurationOutput) ToGetResponderRecipeResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetResponderRecipeResponderRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetailConfiguration) string { return v.ConfigKey }).(pulumi.StringOutput)
}

// configuration name
func (o GetResponderRecipeResponderRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetailConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// configuration value
func (o GetResponderRecipeResponderRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipeResponderRuleDetailConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type GetResponderRecipeResponderRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipeResponderRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipeResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetResponderRecipeResponderRuleDetailConfigurationArrayOutput) ToGetResponderRecipeResponderRuleDetailConfigurationArrayOutput() GetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipeResponderRuleDetailConfigurationArrayOutput) ToGetResponderRecipeResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipeResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipeResponderRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetResponderRecipeResponderRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipeResponderRuleDetailConfiguration {
		return vs[0].([]GetResponderRecipeResponderRuleDetailConfiguration)[vs[1].(int)]
	}).(GetResponderRecipeResponderRuleDetailConfigurationOutput)
}

type GetResponderRecipesFilter struct {
	// configuration name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetResponderRecipesFilterInput is an input type that accepts GetResponderRecipesFilterArgs and GetResponderRecipesFilterOutput values.
// You can construct a concrete instance of `GetResponderRecipesFilterInput` via:
//
//	GetResponderRecipesFilterArgs{...}
type GetResponderRecipesFilterInput interface {
	pulumi.Input

	ToGetResponderRecipesFilterOutput() GetResponderRecipesFilterOutput
	ToGetResponderRecipesFilterOutputWithContext(context.Context) GetResponderRecipesFilterOutput
}

type GetResponderRecipesFilterArgs struct {
	// configuration name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetResponderRecipesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesFilter)(nil)).Elem()
}

func (i GetResponderRecipesFilterArgs) ToGetResponderRecipesFilterOutput() GetResponderRecipesFilterOutput {
	return i.ToGetResponderRecipesFilterOutputWithContext(context.Background())
}

func (i GetResponderRecipesFilterArgs) ToGetResponderRecipesFilterOutputWithContext(ctx context.Context) GetResponderRecipesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesFilterOutput)
}

// GetResponderRecipesFilterArrayInput is an input type that accepts GetResponderRecipesFilterArray and GetResponderRecipesFilterArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesFilterArrayInput` via:
//
//	GetResponderRecipesFilterArray{ GetResponderRecipesFilterArgs{...} }
type GetResponderRecipesFilterArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesFilterArrayOutput() GetResponderRecipesFilterArrayOutput
	ToGetResponderRecipesFilterArrayOutputWithContext(context.Context) GetResponderRecipesFilterArrayOutput
}

type GetResponderRecipesFilterArray []GetResponderRecipesFilterInput

func (GetResponderRecipesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesFilter)(nil)).Elem()
}

func (i GetResponderRecipesFilterArray) ToGetResponderRecipesFilterArrayOutput() GetResponderRecipesFilterArrayOutput {
	return i.ToGetResponderRecipesFilterArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesFilterArray) ToGetResponderRecipesFilterArrayOutputWithContext(ctx context.Context) GetResponderRecipesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesFilterArrayOutput)
}

type GetResponderRecipesFilterOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesFilter)(nil)).Elem()
}

func (o GetResponderRecipesFilterOutput) ToGetResponderRecipesFilterOutput() GetResponderRecipesFilterOutput {
	return o
}

func (o GetResponderRecipesFilterOutput) ToGetResponderRecipesFilterOutputWithContext(ctx context.Context) GetResponderRecipesFilterOutput {
	return o
}

// configuration name
func (o GetResponderRecipesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetResponderRecipesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetResponderRecipesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetResponderRecipesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetResponderRecipesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesFilter)(nil)).Elem()
}

func (o GetResponderRecipesFilterArrayOutput) ToGetResponderRecipesFilterArrayOutput() GetResponderRecipesFilterArrayOutput {
	return o
}

func (o GetResponderRecipesFilterArrayOutput) ToGetResponderRecipesFilterArrayOutputWithContext(ctx context.Context) GetResponderRecipesFilterArrayOutput {
	return o
}

func (o GetResponderRecipesFilterArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesFilter {
		return vs[0].([]GetResponderRecipesFilter)[vs[1].(int)]
	}).(GetResponderRecipesFilterOutput)
}

type GetResponderRecipesResponderRecipeCollection struct {
	Items []GetResponderRecipesResponderRecipeCollectionItem `pulumi:"items"`
}

// GetResponderRecipesResponderRecipeCollectionInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionArgs and GetResponderRecipesResponderRecipeCollectionOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionArgs{...}
type GetResponderRecipesResponderRecipeCollectionInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionOutput() GetResponderRecipesResponderRecipeCollectionOutput
	ToGetResponderRecipesResponderRecipeCollectionOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionOutput
}

type GetResponderRecipesResponderRecipeCollectionArgs struct {
	Items GetResponderRecipesResponderRecipeCollectionItemArrayInput `pulumi:"items"`
}

func (GetResponderRecipesResponderRecipeCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollection)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionArgs) ToGetResponderRecipesResponderRecipeCollectionOutput() GetResponderRecipesResponderRecipeCollectionOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionArgs) ToGetResponderRecipesResponderRecipeCollectionOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionOutput)
}

// GetResponderRecipesResponderRecipeCollectionArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionArray and GetResponderRecipesResponderRecipeCollectionArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionArrayInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionArray{ GetResponderRecipesResponderRecipeCollectionArgs{...} }
type GetResponderRecipesResponderRecipeCollectionArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionArrayOutput() GetResponderRecipesResponderRecipeCollectionArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionArray []GetResponderRecipesResponderRecipeCollectionInput

func (GetResponderRecipesResponderRecipeCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollection)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionArray) ToGetResponderRecipesResponderRecipeCollectionArrayOutput() GetResponderRecipesResponderRecipeCollectionArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionArray) ToGetResponderRecipesResponderRecipeCollectionArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollection)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionOutput) ToGetResponderRecipesResponderRecipeCollectionOutput() GetResponderRecipesResponderRecipeCollectionOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionOutput) ToGetResponderRecipesResponderRecipeCollectionOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionOutput) Items() GetResponderRecipesResponderRecipeCollectionItemArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollection) []GetResponderRecipesResponderRecipeCollectionItem {
		return v.Items
	}).(GetResponderRecipesResponderRecipeCollectionItemArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollection)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionArrayOutput) ToGetResponderRecipesResponderRecipeCollectionArrayOutput() GetResponderRecipesResponderRecipeCollectionArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionArrayOutput) ToGetResponderRecipesResponderRecipeCollectionArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollection {
		return vs[0].([]GetResponderRecipesResponderRecipeCollection)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionOutput)
}

type GetResponderRecipesResponderRecipeCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// List of responder rules associated with the recipe
	EffectiveResponderRules []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule `pulumi:"effectiveResponderRules"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Identifier for ResponderRecipe.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Owner of ResponderRecipe
	Owner string `pulumi:"owner"`
	// List of responder rules associated with the recipe
	ResponderRules []GetResponderRecipesResponderRecipeCollectionItemResponderRule `pulumi:"responderRules"`
	// The id of the source responder recipe.
	SourceResponderRecipeId string `pulumi:"sourceResponderRecipeId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetResponderRecipesResponderRecipeCollectionItemInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemArgs and GetResponderRecipesResponderRecipeCollectionItemOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemOutput() GetResponderRecipesResponderRecipeCollectionItemOutput
	ToGetResponderRecipesResponderRecipeCollectionItemOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemOutput
}

type GetResponderRecipesResponderRecipeCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// List of responder rules associated with the recipe
	EffectiveResponderRules GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayInput `pulumi:"effectiveResponderRules"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Identifier for ResponderRecipe.
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Owner of ResponderRecipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// List of responder rules associated with the recipe
	ResponderRules GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayInput `pulumi:"responderRules"`
	// The id of the source responder recipe.
	SourceResponderRecipeId pulumi.StringInput `pulumi:"sourceResponderRecipeId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetResponderRecipesResponderRecipeCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItem)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemArgs) ToGetResponderRecipesResponderRecipeCollectionItemOutput() GetResponderRecipesResponderRecipeCollectionItemOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemArgs) ToGetResponderRecipesResponderRecipeCollectionItemOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemArray and GetResponderRecipesResponderRecipeCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemArrayInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemArray{ GetResponderRecipesResponderRecipeCollectionItemArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemArrayOutput() GetResponderRecipesResponderRecipeCollectionItemArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemArray []GetResponderRecipesResponderRecipeCollectionItemInput

func (GetResponderRecipesResponderRecipeCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItem)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemArray) ToGetResponderRecipesResponderRecipeCollectionItemArrayOutput() GetResponderRecipesResponderRecipeCollectionItemArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemArray) ToGetResponderRecipesResponderRecipeCollectionItemArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItem)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemOutput) ToGetResponderRecipesResponderRecipeCollectionItemOutput() GetResponderRecipesResponderRecipeCollectionItemOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemOutput) ToGetResponderRecipesResponderRecipeCollectionItemOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// ResponderRule description.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) EffectiveResponderRules() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule {
		return v.EffectiveResponderRules
	}).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Identifier for ResponderRecipe.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Owner of ResponderRecipe
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.Owner }).(pulumi.StringOutput)
}

// List of responder rules associated with the recipe
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) ResponderRules() GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) []GetResponderRecipesResponderRecipeCollectionItemResponderRule {
		return v.ResponderRules
	}).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput)
}

// The id of the source responder recipe.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) SourceResponderRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.SourceResponderRecipeId }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItem)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemArrayOutput() GetResponderRecipesResponderRecipeCollectionItemArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItem {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItem)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs and GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput
	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayInput `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray and GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray{ GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleInput

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) Details() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail {
		return v.Details
	}).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of Policy
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) []string {
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.ResponderRuleId
	}).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) []string {
		return v.SupportedModes
	}).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

// Type of Responder
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRule)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArgs and GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput
	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArray and GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArray{ GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArray []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailInput

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArray) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArray) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput {
	return o
}

// Base condition object
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput) Configurations() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail) []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration {
		return v.Configurations
	}).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail) bool {
		return v.IsEnabled
	}).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetail)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArgs and GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput
	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArgs) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArray and GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArray{ GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArray []GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationInput

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArray) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArray) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfiguration)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRule struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// ResponderRule description.
	Description string `pulumi:"description"`
	// Details of ResponderRule.
	Details []GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies []string `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId string `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes []string `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Type of Responder
	Type string `pulumi:"type"`
}

// GetResponderRecipesResponderRecipeCollectionItemResponderRuleInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs and GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemResponderRuleInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemResponderRuleInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput
	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// ResponderRule description.
	Description pulumi.StringInput `pulumi:"description"`
	// Details of ResponderRule.
	Details GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayInput `pulumi:"details"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// List of Policy
	Policies pulumi.StringArrayInput `pulumi:"policies"`
	// Identifier for ResponderRule.
	ResponderRuleId pulumi.StringInput `pulumi:"responderRuleId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// Supported Execution Modes
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the responder recipe was updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// Type of Responder
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRule)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray and GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray{ GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray []GetResponderRecipesResponderRecipeCollectionItemResponderRuleInput

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemResponderRule)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRule)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// ResponderRule description.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.Description }).(pulumi.StringOutput)
}

// Details of ResponderRule.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) Details() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) []GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail {
		return v.Details
	}).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// List of Policy
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

// Identifier for ResponderRule.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) ResponderRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.ResponderRuleId }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.State }).(pulumi.StringOutput)
}

// Supported Execution Modes
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) []string {
		return v.SupportedModes
	}).(pulumi.StringArrayOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the responder recipe was updated. Format defined by RFC3339.
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Type of Responder
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemResponderRule)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItemResponderRule {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItemResponderRule)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail struct {
	// Base condition object
	Condition string `pulumi:"condition"`
	// ResponderRule configurations
	Configurations []GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled bool `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode string `pulumi:"mode"`
}

// GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArgs and GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput
	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArgs struct {
	// Base condition object
	Condition pulumi.StringInput `pulumi:"condition"`
	// ResponderRule configurations
	Configurations GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayInput `pulumi:"configurations"`
	// Identifies state for ResponderRule
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Execution Mode for ResponderRule
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArray and GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArray{ GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArray []GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailInput

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArray) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArray) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput {
	return o
}

// Base condition object
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail) string { return v.Condition }).(pulumi.StringOutput)
}

// ResponderRule configurations
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput) Configurations() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail) []GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration {
		return v.Configurations
	}).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput)
}

// Identifies state for ResponderRule
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Execution Mode for ResponderRule
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail) string { return v.Mode }).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetail)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration struct {
	// Unique name of the configuration
	ConfigKey string `pulumi:"configKey"`
	// configuration name
	Name string `pulumi:"name"`
	// configuration value
	Value string `pulumi:"value"`
}

// GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArgs and GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArgs{...}
type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput
	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArgs struct {
	// Unique name of the configuration
	ConfigKey pulumi.StringInput `pulumi:"configKey"`
	// configuration name
	Name pulumi.StringInput `pulumi:"name"`
	// configuration value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArgs) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput)
}

// GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayInput is an input type that accepts GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArray and GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput values.
// You can construct a concrete instance of `GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayInput` via:
//
//	GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArray{ GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArgs{...} }
type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayInput interface {
	pulumi.Input

	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput
	ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutputWithContext(context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArray []GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationInput

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration)(nil)).Elem()
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArray) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput {
	return i.ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutputWithContext(context.Background())
}

func (i GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArray) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput {
	return o
}

// Unique name of the configuration
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput) ConfigKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration) string {
		return v.ConfigKey
	}).(pulumi.StringOutput)
}

// configuration name
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// configuration value
func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration)(nil)).Elem()
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput() GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput) ToGetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutputWithContext(ctx context.Context) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput {
	return o
}

func (o GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput) Index(i pulumi.IntInput) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration {
		return vs[0].([]GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfiguration)[vs[1].(int)]
	}).(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput)
}

type GetSecurityPoliciesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSecurityPoliciesFilterInput is an input type that accepts GetSecurityPoliciesFilterArgs and GetSecurityPoliciesFilterOutput values.
// You can construct a concrete instance of `GetSecurityPoliciesFilterInput` via:
//
//	GetSecurityPoliciesFilterArgs{...}
type GetSecurityPoliciesFilterInput interface {
	pulumi.Input

	ToGetSecurityPoliciesFilterOutput() GetSecurityPoliciesFilterOutput
	ToGetSecurityPoliciesFilterOutputWithContext(context.Context) GetSecurityPoliciesFilterOutput
}

type GetSecurityPoliciesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecurityPoliciesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesFilter)(nil)).Elem()
}

func (i GetSecurityPoliciesFilterArgs) ToGetSecurityPoliciesFilterOutput() GetSecurityPoliciesFilterOutput {
	return i.ToGetSecurityPoliciesFilterOutputWithContext(context.Background())
}

func (i GetSecurityPoliciesFilterArgs) ToGetSecurityPoliciesFilterOutputWithContext(ctx context.Context) GetSecurityPoliciesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityPoliciesFilterOutput)
}

// GetSecurityPoliciesFilterArrayInput is an input type that accepts GetSecurityPoliciesFilterArray and GetSecurityPoliciesFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityPoliciesFilterArrayInput` via:
//
//	GetSecurityPoliciesFilterArray{ GetSecurityPoliciesFilterArgs{...} }
type GetSecurityPoliciesFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityPoliciesFilterArrayOutput() GetSecurityPoliciesFilterArrayOutput
	ToGetSecurityPoliciesFilterArrayOutputWithContext(context.Context) GetSecurityPoliciesFilterArrayOutput
}

type GetSecurityPoliciesFilterArray []GetSecurityPoliciesFilterInput

func (GetSecurityPoliciesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityPoliciesFilter)(nil)).Elem()
}

func (i GetSecurityPoliciesFilterArray) ToGetSecurityPoliciesFilterArrayOutput() GetSecurityPoliciesFilterArrayOutput {
	return i.ToGetSecurityPoliciesFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityPoliciesFilterArray) ToGetSecurityPoliciesFilterArrayOutputWithContext(ctx context.Context) GetSecurityPoliciesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityPoliciesFilterArrayOutput)
}

type GetSecurityPoliciesFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityPoliciesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesFilter)(nil)).Elem()
}

func (o GetSecurityPoliciesFilterOutput) ToGetSecurityPoliciesFilterOutput() GetSecurityPoliciesFilterOutput {
	return o
}

func (o GetSecurityPoliciesFilterOutput) ToGetSecurityPoliciesFilterOutputWithContext(ctx context.Context) GetSecurityPoliciesFilterOutput {
	return o
}

func (o GetSecurityPoliciesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecurityPoliciesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityPoliciesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSecurityPoliciesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityPoliciesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecurityPoliciesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityPoliciesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityPoliciesFilter)(nil)).Elem()
}

func (o GetSecurityPoliciesFilterArrayOutput) ToGetSecurityPoliciesFilterArrayOutput() GetSecurityPoliciesFilterArrayOutput {
	return o
}

func (o GetSecurityPoliciesFilterArrayOutput) ToGetSecurityPoliciesFilterArrayOutputWithContext(ctx context.Context) GetSecurityPoliciesFilterArrayOutput {
	return o
}

func (o GetSecurityPoliciesFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityPoliciesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityPoliciesFilter {
		return vs[0].([]GetSecurityPoliciesFilter)[vs[1].(int)]
	}).(GetSecurityPoliciesFilterOutput)
}

type GetSecurityPoliciesSecurityPolicyCollection struct {
	Items []GetSecurityPoliciesSecurityPolicyCollectionItem `pulumi:"items"`
}

// GetSecurityPoliciesSecurityPolicyCollectionInput is an input type that accepts GetSecurityPoliciesSecurityPolicyCollectionArgs and GetSecurityPoliciesSecurityPolicyCollectionOutput values.
// You can construct a concrete instance of `GetSecurityPoliciesSecurityPolicyCollectionInput` via:
//
//	GetSecurityPoliciesSecurityPolicyCollectionArgs{...}
type GetSecurityPoliciesSecurityPolicyCollectionInput interface {
	pulumi.Input

	ToGetSecurityPoliciesSecurityPolicyCollectionOutput() GetSecurityPoliciesSecurityPolicyCollectionOutput
	ToGetSecurityPoliciesSecurityPolicyCollectionOutputWithContext(context.Context) GetSecurityPoliciesSecurityPolicyCollectionOutput
}

type GetSecurityPoliciesSecurityPolicyCollectionArgs struct {
	Items GetSecurityPoliciesSecurityPolicyCollectionItemArrayInput `pulumi:"items"`
}

func (GetSecurityPoliciesSecurityPolicyCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesSecurityPolicyCollection)(nil)).Elem()
}

func (i GetSecurityPoliciesSecurityPolicyCollectionArgs) ToGetSecurityPoliciesSecurityPolicyCollectionOutput() GetSecurityPoliciesSecurityPolicyCollectionOutput {
	return i.ToGetSecurityPoliciesSecurityPolicyCollectionOutputWithContext(context.Background())
}

func (i GetSecurityPoliciesSecurityPolicyCollectionArgs) ToGetSecurityPoliciesSecurityPolicyCollectionOutputWithContext(ctx context.Context) GetSecurityPoliciesSecurityPolicyCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityPoliciesSecurityPolicyCollectionOutput)
}

// GetSecurityPoliciesSecurityPolicyCollectionArrayInput is an input type that accepts GetSecurityPoliciesSecurityPolicyCollectionArray and GetSecurityPoliciesSecurityPolicyCollectionArrayOutput values.
// You can construct a concrete instance of `GetSecurityPoliciesSecurityPolicyCollectionArrayInput` via:
//
//	GetSecurityPoliciesSecurityPolicyCollectionArray{ GetSecurityPoliciesSecurityPolicyCollectionArgs{...} }
type GetSecurityPoliciesSecurityPolicyCollectionArrayInput interface {
	pulumi.Input

	ToGetSecurityPoliciesSecurityPolicyCollectionArrayOutput() GetSecurityPoliciesSecurityPolicyCollectionArrayOutput
	ToGetSecurityPoliciesSecurityPolicyCollectionArrayOutputWithContext(context.Context) GetSecurityPoliciesSecurityPolicyCollectionArrayOutput
}

type GetSecurityPoliciesSecurityPolicyCollectionArray []GetSecurityPoliciesSecurityPolicyCollectionInput

func (GetSecurityPoliciesSecurityPolicyCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityPoliciesSecurityPolicyCollection)(nil)).Elem()
}

func (i GetSecurityPoliciesSecurityPolicyCollectionArray) ToGetSecurityPoliciesSecurityPolicyCollectionArrayOutput() GetSecurityPoliciesSecurityPolicyCollectionArrayOutput {
	return i.ToGetSecurityPoliciesSecurityPolicyCollectionArrayOutputWithContext(context.Background())
}

func (i GetSecurityPoliciesSecurityPolicyCollectionArray) ToGetSecurityPoliciesSecurityPolicyCollectionArrayOutputWithContext(ctx context.Context) GetSecurityPoliciesSecurityPolicyCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityPoliciesSecurityPolicyCollectionArrayOutput)
}

type GetSecurityPoliciesSecurityPolicyCollectionOutput struct{ *pulumi.OutputState }

func (GetSecurityPoliciesSecurityPolicyCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesSecurityPolicyCollection)(nil)).Elem()
}

func (o GetSecurityPoliciesSecurityPolicyCollectionOutput) ToGetSecurityPoliciesSecurityPolicyCollectionOutput() GetSecurityPoliciesSecurityPolicyCollectionOutput {
	return o
}

func (o GetSecurityPoliciesSecurityPolicyCollectionOutput) ToGetSecurityPoliciesSecurityPolicyCollectionOutputWithContext(ctx context.Context) GetSecurityPoliciesSecurityPolicyCollectionOutput {
	return o
}

func (o GetSecurityPoliciesSecurityPolicyCollectionOutput) Items() GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollection) []GetSecurityPoliciesSecurityPolicyCollectionItem {
		return v.Items
	}).(GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput)
}

type GetSecurityPoliciesSecurityPolicyCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityPoliciesSecurityPolicyCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityPoliciesSecurityPolicyCollection)(nil)).Elem()
}

func (o GetSecurityPoliciesSecurityPolicyCollectionArrayOutput) ToGetSecurityPoliciesSecurityPolicyCollectionArrayOutput() GetSecurityPoliciesSecurityPolicyCollectionArrayOutput {
	return o
}

func (o GetSecurityPoliciesSecurityPolicyCollectionArrayOutput) ToGetSecurityPoliciesSecurityPolicyCollectionArrayOutputWithContext(ctx context.Context) GetSecurityPoliciesSecurityPolicyCollectionArrayOutput {
	return o
}

func (o GetSecurityPoliciesSecurityPolicyCollectionArrayOutput) Index(i pulumi.IntInput) GetSecurityPoliciesSecurityPolicyCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityPoliciesSecurityPolicyCollection {
		return vs[0].([]GetSecurityPoliciesSecurityPolicyCollection)[vs[1].(int)]
	}).(GetSecurityPoliciesSecurityPolicyCollectionOutput)
}

type GetSecurityPoliciesSecurityPolicyCollectionItem struct {
	// The category of security policy
	Category string `pulumi:"category"`
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The security policy's description
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A shorter version of the security policy's name
	FriendlyName string `pulumi:"friendlyName"`
	// The unique identifier of the security zone policy (`SecurityPolicy`)
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, this can be used to provide actionable information for a resource in a `Failed` state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The owner of the security policy
	Owner string `pulumi:"owner"`
	// The list of services that the security policy protects
	Services []string `pulumi:"services"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the security policy was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the security policy was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetSecurityPoliciesSecurityPolicyCollectionItemInput is an input type that accepts GetSecurityPoliciesSecurityPolicyCollectionItemArgs and GetSecurityPoliciesSecurityPolicyCollectionItemOutput values.
// You can construct a concrete instance of `GetSecurityPoliciesSecurityPolicyCollectionItemInput` via:
//
//	GetSecurityPoliciesSecurityPolicyCollectionItemArgs{...}
type GetSecurityPoliciesSecurityPolicyCollectionItemInput interface {
	pulumi.Input

	ToGetSecurityPoliciesSecurityPolicyCollectionItemOutput() GetSecurityPoliciesSecurityPolicyCollectionItemOutput
	ToGetSecurityPoliciesSecurityPolicyCollectionItemOutputWithContext(context.Context) GetSecurityPoliciesSecurityPolicyCollectionItemOutput
}

type GetSecurityPoliciesSecurityPolicyCollectionItemArgs struct {
	// The category of security policy
	Category pulumi.StringInput `pulumi:"category"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The security policy's description
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// A shorter version of the security policy's name
	FriendlyName pulumi.StringInput `pulumi:"friendlyName"`
	// The unique identifier of the security zone policy (`SecurityPolicy`)
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, this can be used to provide actionable information for a resource in a `Failed` state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The owner of the security policy
	Owner pulumi.StringInput `pulumi:"owner"`
	// The list of services that the security policy protects
	Services pulumi.StringArrayInput `pulumi:"services"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the security policy was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the security policy was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetSecurityPoliciesSecurityPolicyCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesSecurityPolicyCollectionItem)(nil)).Elem()
}

func (i GetSecurityPoliciesSecurityPolicyCollectionItemArgs) ToGetSecurityPoliciesSecurityPolicyCollectionItemOutput() GetSecurityPoliciesSecurityPolicyCollectionItemOutput {
	return i.ToGetSecurityPoliciesSecurityPolicyCollectionItemOutputWithContext(context.Background())
}

func (i GetSecurityPoliciesSecurityPolicyCollectionItemArgs) ToGetSecurityPoliciesSecurityPolicyCollectionItemOutputWithContext(ctx context.Context) GetSecurityPoliciesSecurityPolicyCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityPoliciesSecurityPolicyCollectionItemOutput)
}

// GetSecurityPoliciesSecurityPolicyCollectionItemArrayInput is an input type that accepts GetSecurityPoliciesSecurityPolicyCollectionItemArray and GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSecurityPoliciesSecurityPolicyCollectionItemArrayInput` via:
//
//	GetSecurityPoliciesSecurityPolicyCollectionItemArray{ GetSecurityPoliciesSecurityPolicyCollectionItemArgs{...} }
type GetSecurityPoliciesSecurityPolicyCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput() GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput
	ToGetSecurityPoliciesSecurityPolicyCollectionItemArrayOutputWithContext(context.Context) GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput
}

type GetSecurityPoliciesSecurityPolicyCollectionItemArray []GetSecurityPoliciesSecurityPolicyCollectionItemInput

func (GetSecurityPoliciesSecurityPolicyCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityPoliciesSecurityPolicyCollectionItem)(nil)).Elem()
}

func (i GetSecurityPoliciesSecurityPolicyCollectionItemArray) ToGetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput() GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput {
	return i.ToGetSecurityPoliciesSecurityPolicyCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSecurityPoliciesSecurityPolicyCollectionItemArray) ToGetSecurityPoliciesSecurityPolicyCollectionItemArrayOutputWithContext(ctx context.Context) GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput)
}

type GetSecurityPoliciesSecurityPolicyCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSecurityPoliciesSecurityPolicyCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesSecurityPolicyCollectionItem)(nil)).Elem()
}

func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) ToGetSecurityPoliciesSecurityPolicyCollectionItemOutput() GetSecurityPoliciesSecurityPolicyCollectionItemOutput {
	return o
}

func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) ToGetSecurityPoliciesSecurityPolicyCollectionItemOutputWithContext(ctx context.Context) GetSecurityPoliciesSecurityPolicyCollectionItemOutput {
	return o
}

// The category of security policy
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) string { return v.Category }).(pulumi.StringOutput)
}

// The ID of the compartment in which to list resources.
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The security policy's description
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// A shorter version of the security policy's name
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// The unique identifier of the security zone policy (`SecurityPolicy`)
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, this can be used to provide actionable information for a resource in a `Failed` state.
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The owner of the security policy
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) string { return v.Owner }).(pulumi.StringOutput)
}

// The list of services that the security policy protects
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) []string { return v.Services }).(pulumi.StringArrayOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the security policy was created. An RFC3339 formatted datetime string.
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the security policy was last updated. An RFC3339 formatted datetime string.
func (o GetSecurityPoliciesSecurityPolicyCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesSecurityPolicyCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityPoliciesSecurityPolicyCollectionItem)(nil)).Elem()
}

func (o GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput) ToGetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput() GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput {
	return o
}

func (o GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput) ToGetSecurityPoliciesSecurityPolicyCollectionItemArrayOutputWithContext(ctx context.Context) GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput {
	return o
}

func (o GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSecurityPoliciesSecurityPolicyCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityPoliciesSecurityPolicyCollectionItem {
		return vs[0].([]GetSecurityPoliciesSecurityPolicyCollectionItem)[vs[1].(int)]
	}).(GetSecurityPoliciesSecurityPolicyCollectionItemOutput)
}

type GetSecurityRecipesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSecurityRecipesFilterInput is an input type that accepts GetSecurityRecipesFilterArgs and GetSecurityRecipesFilterOutput values.
// You can construct a concrete instance of `GetSecurityRecipesFilterInput` via:
//
//	GetSecurityRecipesFilterArgs{...}
type GetSecurityRecipesFilterInput interface {
	pulumi.Input

	ToGetSecurityRecipesFilterOutput() GetSecurityRecipesFilterOutput
	ToGetSecurityRecipesFilterOutputWithContext(context.Context) GetSecurityRecipesFilterOutput
}

type GetSecurityRecipesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecurityRecipesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityRecipesFilter)(nil)).Elem()
}

func (i GetSecurityRecipesFilterArgs) ToGetSecurityRecipesFilterOutput() GetSecurityRecipesFilterOutput {
	return i.ToGetSecurityRecipesFilterOutputWithContext(context.Background())
}

func (i GetSecurityRecipesFilterArgs) ToGetSecurityRecipesFilterOutputWithContext(ctx context.Context) GetSecurityRecipesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityRecipesFilterOutput)
}

// GetSecurityRecipesFilterArrayInput is an input type that accepts GetSecurityRecipesFilterArray and GetSecurityRecipesFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityRecipesFilterArrayInput` via:
//
//	GetSecurityRecipesFilterArray{ GetSecurityRecipesFilterArgs{...} }
type GetSecurityRecipesFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityRecipesFilterArrayOutput() GetSecurityRecipesFilterArrayOutput
	ToGetSecurityRecipesFilterArrayOutputWithContext(context.Context) GetSecurityRecipesFilterArrayOutput
}

type GetSecurityRecipesFilterArray []GetSecurityRecipesFilterInput

func (GetSecurityRecipesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityRecipesFilter)(nil)).Elem()
}

func (i GetSecurityRecipesFilterArray) ToGetSecurityRecipesFilterArrayOutput() GetSecurityRecipesFilterArrayOutput {
	return i.ToGetSecurityRecipesFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityRecipesFilterArray) ToGetSecurityRecipesFilterArrayOutputWithContext(ctx context.Context) GetSecurityRecipesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityRecipesFilterArrayOutput)
}

type GetSecurityRecipesFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityRecipesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityRecipesFilter)(nil)).Elem()
}

func (o GetSecurityRecipesFilterOutput) ToGetSecurityRecipesFilterOutput() GetSecurityRecipesFilterOutput {
	return o
}

func (o GetSecurityRecipesFilterOutput) ToGetSecurityRecipesFilterOutputWithContext(ctx context.Context) GetSecurityRecipesFilterOutput {
	return o
}

func (o GetSecurityRecipesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityRecipesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecurityRecipesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityRecipesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSecurityRecipesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityRecipesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecurityRecipesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityRecipesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityRecipesFilter)(nil)).Elem()
}

func (o GetSecurityRecipesFilterArrayOutput) ToGetSecurityRecipesFilterArrayOutput() GetSecurityRecipesFilterArrayOutput {
	return o
}

func (o GetSecurityRecipesFilterArrayOutput) ToGetSecurityRecipesFilterArrayOutputWithContext(ctx context.Context) GetSecurityRecipesFilterArrayOutput {
	return o
}

func (o GetSecurityRecipesFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityRecipesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityRecipesFilter {
		return vs[0].([]GetSecurityRecipesFilter)[vs[1].(int)]
	}).(GetSecurityRecipesFilterOutput)
}

type GetSecurityRecipesSecurityRecipeCollection struct {
	Items []GetSecurityRecipesSecurityRecipeCollectionItem `pulumi:"items"`
}

// GetSecurityRecipesSecurityRecipeCollectionInput is an input type that accepts GetSecurityRecipesSecurityRecipeCollectionArgs and GetSecurityRecipesSecurityRecipeCollectionOutput values.
// You can construct a concrete instance of `GetSecurityRecipesSecurityRecipeCollectionInput` via:
//
//	GetSecurityRecipesSecurityRecipeCollectionArgs{...}
type GetSecurityRecipesSecurityRecipeCollectionInput interface {
	pulumi.Input

	ToGetSecurityRecipesSecurityRecipeCollectionOutput() GetSecurityRecipesSecurityRecipeCollectionOutput
	ToGetSecurityRecipesSecurityRecipeCollectionOutputWithContext(context.Context) GetSecurityRecipesSecurityRecipeCollectionOutput
}

type GetSecurityRecipesSecurityRecipeCollectionArgs struct {
	Items GetSecurityRecipesSecurityRecipeCollectionItemArrayInput `pulumi:"items"`
}

func (GetSecurityRecipesSecurityRecipeCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityRecipesSecurityRecipeCollection)(nil)).Elem()
}

func (i GetSecurityRecipesSecurityRecipeCollectionArgs) ToGetSecurityRecipesSecurityRecipeCollectionOutput() GetSecurityRecipesSecurityRecipeCollectionOutput {
	return i.ToGetSecurityRecipesSecurityRecipeCollectionOutputWithContext(context.Background())
}

func (i GetSecurityRecipesSecurityRecipeCollectionArgs) ToGetSecurityRecipesSecurityRecipeCollectionOutputWithContext(ctx context.Context) GetSecurityRecipesSecurityRecipeCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityRecipesSecurityRecipeCollectionOutput)
}

// GetSecurityRecipesSecurityRecipeCollectionArrayInput is an input type that accepts GetSecurityRecipesSecurityRecipeCollectionArray and GetSecurityRecipesSecurityRecipeCollectionArrayOutput values.
// You can construct a concrete instance of `GetSecurityRecipesSecurityRecipeCollectionArrayInput` via:
//
//	GetSecurityRecipesSecurityRecipeCollectionArray{ GetSecurityRecipesSecurityRecipeCollectionArgs{...} }
type GetSecurityRecipesSecurityRecipeCollectionArrayInput interface {
	pulumi.Input

	ToGetSecurityRecipesSecurityRecipeCollectionArrayOutput() GetSecurityRecipesSecurityRecipeCollectionArrayOutput
	ToGetSecurityRecipesSecurityRecipeCollectionArrayOutputWithContext(context.Context) GetSecurityRecipesSecurityRecipeCollectionArrayOutput
}

type GetSecurityRecipesSecurityRecipeCollectionArray []GetSecurityRecipesSecurityRecipeCollectionInput

func (GetSecurityRecipesSecurityRecipeCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityRecipesSecurityRecipeCollection)(nil)).Elem()
}

func (i GetSecurityRecipesSecurityRecipeCollectionArray) ToGetSecurityRecipesSecurityRecipeCollectionArrayOutput() GetSecurityRecipesSecurityRecipeCollectionArrayOutput {
	return i.ToGetSecurityRecipesSecurityRecipeCollectionArrayOutputWithContext(context.Background())
}

func (i GetSecurityRecipesSecurityRecipeCollectionArray) ToGetSecurityRecipesSecurityRecipeCollectionArrayOutputWithContext(ctx context.Context) GetSecurityRecipesSecurityRecipeCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityRecipesSecurityRecipeCollectionArrayOutput)
}

type GetSecurityRecipesSecurityRecipeCollectionOutput struct{ *pulumi.OutputState }

func (GetSecurityRecipesSecurityRecipeCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityRecipesSecurityRecipeCollection)(nil)).Elem()
}

func (o GetSecurityRecipesSecurityRecipeCollectionOutput) ToGetSecurityRecipesSecurityRecipeCollectionOutput() GetSecurityRecipesSecurityRecipeCollectionOutput {
	return o
}

func (o GetSecurityRecipesSecurityRecipeCollectionOutput) ToGetSecurityRecipesSecurityRecipeCollectionOutputWithContext(ctx context.Context) GetSecurityRecipesSecurityRecipeCollectionOutput {
	return o
}

func (o GetSecurityRecipesSecurityRecipeCollectionOutput) Items() GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollection) []GetSecurityRecipesSecurityRecipeCollectionItem {
		return v.Items
	}).(GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput)
}

type GetSecurityRecipesSecurityRecipeCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityRecipesSecurityRecipeCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityRecipesSecurityRecipeCollection)(nil)).Elem()
}

func (o GetSecurityRecipesSecurityRecipeCollectionArrayOutput) ToGetSecurityRecipesSecurityRecipeCollectionArrayOutput() GetSecurityRecipesSecurityRecipeCollectionArrayOutput {
	return o
}

func (o GetSecurityRecipesSecurityRecipeCollectionArrayOutput) ToGetSecurityRecipesSecurityRecipeCollectionArrayOutputWithContext(ctx context.Context) GetSecurityRecipesSecurityRecipeCollectionArrayOutput {
	return o
}

func (o GetSecurityRecipesSecurityRecipeCollectionArrayOutput) Index(i pulumi.IntInput) GetSecurityRecipesSecurityRecipeCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityRecipesSecurityRecipeCollection {
		return vs[0].([]GetSecurityRecipesSecurityRecipeCollection)[vs[1].(int)]
	}).(GetSecurityRecipesSecurityRecipeCollectionOutput)
}

type GetSecurityRecipesSecurityRecipeCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The recipe's description
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The unique identifier of the security zone recipe (`SecurityRecipe`)
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, this can be used to provide actionable information for a recipe in the `Failed` state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The owner of the recipe
	Owner string `pulumi:"owner"`
	// The list of `SecurityPolicy` ids that are included in the recipe
	SecurityPolicies []string `pulumi:"securityPolicies"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the recipe was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the recipe was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetSecurityRecipesSecurityRecipeCollectionItemInput is an input type that accepts GetSecurityRecipesSecurityRecipeCollectionItemArgs and GetSecurityRecipesSecurityRecipeCollectionItemOutput values.
// You can construct a concrete instance of `GetSecurityRecipesSecurityRecipeCollectionItemInput` via:
//
//	GetSecurityRecipesSecurityRecipeCollectionItemArgs{...}
type GetSecurityRecipesSecurityRecipeCollectionItemInput interface {
	pulumi.Input

	ToGetSecurityRecipesSecurityRecipeCollectionItemOutput() GetSecurityRecipesSecurityRecipeCollectionItemOutput
	ToGetSecurityRecipesSecurityRecipeCollectionItemOutputWithContext(context.Context) GetSecurityRecipesSecurityRecipeCollectionItemOutput
}

type GetSecurityRecipesSecurityRecipeCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The recipe's description
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The unique identifier of the security zone recipe (`SecurityRecipe`)
	Id pulumi.StringInput `pulumi:"id"`
	// A message describing the current state in more detail. For example, this can be used to provide actionable information for a recipe in the `Failed` state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The owner of the recipe
	Owner pulumi.StringInput `pulumi:"owner"`
	// The list of `SecurityPolicy` ids that are included in the recipe
	SecurityPolicies pulumi.StringArrayInput `pulumi:"securityPolicies"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the recipe was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the recipe was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetSecurityRecipesSecurityRecipeCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityRecipesSecurityRecipeCollectionItem)(nil)).Elem()
}

func (i GetSecurityRecipesSecurityRecipeCollectionItemArgs) ToGetSecurityRecipesSecurityRecipeCollectionItemOutput() GetSecurityRecipesSecurityRecipeCollectionItemOutput {
	return i.ToGetSecurityRecipesSecurityRecipeCollectionItemOutputWithContext(context.Background())
}

func (i GetSecurityRecipesSecurityRecipeCollectionItemArgs) ToGetSecurityRecipesSecurityRecipeCollectionItemOutputWithContext(ctx context.Context) GetSecurityRecipesSecurityRecipeCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityRecipesSecurityRecipeCollectionItemOutput)
}

// GetSecurityRecipesSecurityRecipeCollectionItemArrayInput is an input type that accepts GetSecurityRecipesSecurityRecipeCollectionItemArray and GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSecurityRecipesSecurityRecipeCollectionItemArrayInput` via:
//
//	GetSecurityRecipesSecurityRecipeCollectionItemArray{ GetSecurityRecipesSecurityRecipeCollectionItemArgs{...} }
type GetSecurityRecipesSecurityRecipeCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSecurityRecipesSecurityRecipeCollectionItemArrayOutput() GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput
	ToGetSecurityRecipesSecurityRecipeCollectionItemArrayOutputWithContext(context.Context) GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput
}

type GetSecurityRecipesSecurityRecipeCollectionItemArray []GetSecurityRecipesSecurityRecipeCollectionItemInput

func (GetSecurityRecipesSecurityRecipeCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityRecipesSecurityRecipeCollectionItem)(nil)).Elem()
}

func (i GetSecurityRecipesSecurityRecipeCollectionItemArray) ToGetSecurityRecipesSecurityRecipeCollectionItemArrayOutput() GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput {
	return i.ToGetSecurityRecipesSecurityRecipeCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSecurityRecipesSecurityRecipeCollectionItemArray) ToGetSecurityRecipesSecurityRecipeCollectionItemArrayOutputWithContext(ctx context.Context) GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput)
}

type GetSecurityRecipesSecurityRecipeCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSecurityRecipesSecurityRecipeCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityRecipesSecurityRecipeCollectionItem)(nil)).Elem()
}

func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) ToGetSecurityRecipesSecurityRecipeCollectionItemOutput() GetSecurityRecipesSecurityRecipeCollectionItemOutput {
	return o
}

func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) ToGetSecurityRecipesSecurityRecipeCollectionItemOutputWithContext(ctx context.Context) GetSecurityRecipesSecurityRecipeCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The recipe's description
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The unique identifier of the security zone recipe (`SecurityRecipe`)
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, this can be used to provide actionable information for a recipe in the `Failed` state.
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The owner of the recipe
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) string { return v.Owner }).(pulumi.StringOutput)
}

// The list of `SecurityPolicy` ids that are included in the recipe
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) SecurityPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) []string { return v.SecurityPolicies }).(pulumi.StringArrayOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the recipe was created. An RFC3339 formatted datetime string.
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the recipe was last updated. An RFC3339 formatted datetime string.
func (o GetSecurityRecipesSecurityRecipeCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityRecipesSecurityRecipeCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityRecipesSecurityRecipeCollectionItem)(nil)).Elem()
}

func (o GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput) ToGetSecurityRecipesSecurityRecipeCollectionItemArrayOutput() GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput {
	return o
}

func (o GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput) ToGetSecurityRecipesSecurityRecipeCollectionItemArrayOutputWithContext(ctx context.Context) GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput {
	return o
}

func (o GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSecurityRecipesSecurityRecipeCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityRecipesSecurityRecipeCollectionItem {
		return vs[0].([]GetSecurityRecipesSecurityRecipeCollectionItem)[vs[1].(int)]
	}).(GetSecurityRecipesSecurityRecipeCollectionItemOutput)
}

type GetSecurityZonesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSecurityZonesFilterInput is an input type that accepts GetSecurityZonesFilterArgs and GetSecurityZonesFilterOutput values.
// You can construct a concrete instance of `GetSecurityZonesFilterInput` via:
//
//	GetSecurityZonesFilterArgs{...}
type GetSecurityZonesFilterInput interface {
	pulumi.Input

	ToGetSecurityZonesFilterOutput() GetSecurityZonesFilterOutput
	ToGetSecurityZonesFilterOutputWithContext(context.Context) GetSecurityZonesFilterOutput
}

type GetSecurityZonesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecurityZonesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityZonesFilter)(nil)).Elem()
}

func (i GetSecurityZonesFilterArgs) ToGetSecurityZonesFilterOutput() GetSecurityZonesFilterOutput {
	return i.ToGetSecurityZonesFilterOutputWithContext(context.Background())
}

func (i GetSecurityZonesFilterArgs) ToGetSecurityZonesFilterOutputWithContext(ctx context.Context) GetSecurityZonesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityZonesFilterOutput)
}

// GetSecurityZonesFilterArrayInput is an input type that accepts GetSecurityZonesFilterArray and GetSecurityZonesFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityZonesFilterArrayInput` via:
//
//	GetSecurityZonesFilterArray{ GetSecurityZonesFilterArgs{...} }
type GetSecurityZonesFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityZonesFilterArrayOutput() GetSecurityZonesFilterArrayOutput
	ToGetSecurityZonesFilterArrayOutputWithContext(context.Context) GetSecurityZonesFilterArrayOutput
}

type GetSecurityZonesFilterArray []GetSecurityZonesFilterInput

func (GetSecurityZonesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityZonesFilter)(nil)).Elem()
}

func (i GetSecurityZonesFilterArray) ToGetSecurityZonesFilterArrayOutput() GetSecurityZonesFilterArrayOutput {
	return i.ToGetSecurityZonesFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityZonesFilterArray) ToGetSecurityZonesFilterArrayOutputWithContext(ctx context.Context) GetSecurityZonesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityZonesFilterArrayOutput)
}

type GetSecurityZonesFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityZonesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityZonesFilter)(nil)).Elem()
}

func (o GetSecurityZonesFilterOutput) ToGetSecurityZonesFilterOutput() GetSecurityZonesFilterOutput {
	return o
}

func (o GetSecurityZonesFilterOutput) ToGetSecurityZonesFilterOutputWithContext(ctx context.Context) GetSecurityZonesFilterOutput {
	return o
}

func (o GetSecurityZonesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecurityZonesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityZonesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSecurityZonesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityZonesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecurityZonesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityZonesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityZonesFilter)(nil)).Elem()
}

func (o GetSecurityZonesFilterArrayOutput) ToGetSecurityZonesFilterArrayOutput() GetSecurityZonesFilterArrayOutput {
	return o
}

func (o GetSecurityZonesFilterArrayOutput) ToGetSecurityZonesFilterArrayOutputWithContext(ctx context.Context) GetSecurityZonesFilterArrayOutput {
	return o
}

func (o GetSecurityZonesFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityZonesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityZonesFilter {
		return vs[0].([]GetSecurityZonesFilter)[vs[1].(int)]
	}).(GetSecurityZonesFilterOutput)
}

type GetSecurityZonesSecurityZoneCollection struct {
	Items []GetSecurityZonesSecurityZoneCollectionItem `pulumi:"items"`
}

// GetSecurityZonesSecurityZoneCollectionInput is an input type that accepts GetSecurityZonesSecurityZoneCollectionArgs and GetSecurityZonesSecurityZoneCollectionOutput values.
// You can construct a concrete instance of `GetSecurityZonesSecurityZoneCollectionInput` via:
//
//	GetSecurityZonesSecurityZoneCollectionArgs{...}
type GetSecurityZonesSecurityZoneCollectionInput interface {
	pulumi.Input

	ToGetSecurityZonesSecurityZoneCollectionOutput() GetSecurityZonesSecurityZoneCollectionOutput
	ToGetSecurityZonesSecurityZoneCollectionOutputWithContext(context.Context) GetSecurityZonesSecurityZoneCollectionOutput
}

type GetSecurityZonesSecurityZoneCollectionArgs struct {
	Items GetSecurityZonesSecurityZoneCollectionItemArrayInput `pulumi:"items"`
}

func (GetSecurityZonesSecurityZoneCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityZonesSecurityZoneCollection)(nil)).Elem()
}

func (i GetSecurityZonesSecurityZoneCollectionArgs) ToGetSecurityZonesSecurityZoneCollectionOutput() GetSecurityZonesSecurityZoneCollectionOutput {
	return i.ToGetSecurityZonesSecurityZoneCollectionOutputWithContext(context.Background())
}

func (i GetSecurityZonesSecurityZoneCollectionArgs) ToGetSecurityZonesSecurityZoneCollectionOutputWithContext(ctx context.Context) GetSecurityZonesSecurityZoneCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityZonesSecurityZoneCollectionOutput)
}

// GetSecurityZonesSecurityZoneCollectionArrayInput is an input type that accepts GetSecurityZonesSecurityZoneCollectionArray and GetSecurityZonesSecurityZoneCollectionArrayOutput values.
// You can construct a concrete instance of `GetSecurityZonesSecurityZoneCollectionArrayInput` via:
//
//	GetSecurityZonesSecurityZoneCollectionArray{ GetSecurityZonesSecurityZoneCollectionArgs{...} }
type GetSecurityZonesSecurityZoneCollectionArrayInput interface {
	pulumi.Input

	ToGetSecurityZonesSecurityZoneCollectionArrayOutput() GetSecurityZonesSecurityZoneCollectionArrayOutput
	ToGetSecurityZonesSecurityZoneCollectionArrayOutputWithContext(context.Context) GetSecurityZonesSecurityZoneCollectionArrayOutput
}

type GetSecurityZonesSecurityZoneCollectionArray []GetSecurityZonesSecurityZoneCollectionInput

func (GetSecurityZonesSecurityZoneCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityZonesSecurityZoneCollection)(nil)).Elem()
}

func (i GetSecurityZonesSecurityZoneCollectionArray) ToGetSecurityZonesSecurityZoneCollectionArrayOutput() GetSecurityZonesSecurityZoneCollectionArrayOutput {
	return i.ToGetSecurityZonesSecurityZoneCollectionArrayOutputWithContext(context.Background())
}

func (i GetSecurityZonesSecurityZoneCollectionArray) ToGetSecurityZonesSecurityZoneCollectionArrayOutputWithContext(ctx context.Context) GetSecurityZonesSecurityZoneCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityZonesSecurityZoneCollectionArrayOutput)
}

type GetSecurityZonesSecurityZoneCollectionOutput struct{ *pulumi.OutputState }

func (GetSecurityZonesSecurityZoneCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityZonesSecurityZoneCollection)(nil)).Elem()
}

func (o GetSecurityZonesSecurityZoneCollectionOutput) ToGetSecurityZonesSecurityZoneCollectionOutput() GetSecurityZonesSecurityZoneCollectionOutput {
	return o
}

func (o GetSecurityZonesSecurityZoneCollectionOutput) ToGetSecurityZonesSecurityZoneCollectionOutputWithContext(ctx context.Context) GetSecurityZonesSecurityZoneCollectionOutput {
	return o
}

func (o GetSecurityZonesSecurityZoneCollectionOutput) Items() GetSecurityZonesSecurityZoneCollectionItemArrayOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollection) []GetSecurityZonesSecurityZoneCollectionItem {
		return v.Items
	}).(GetSecurityZonesSecurityZoneCollectionItemArrayOutput)
}

type GetSecurityZonesSecurityZoneCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityZonesSecurityZoneCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityZonesSecurityZoneCollection)(nil)).Elem()
}

func (o GetSecurityZonesSecurityZoneCollectionArrayOutput) ToGetSecurityZonesSecurityZoneCollectionArrayOutput() GetSecurityZonesSecurityZoneCollectionArrayOutput {
	return o
}

func (o GetSecurityZonesSecurityZoneCollectionArrayOutput) ToGetSecurityZonesSecurityZoneCollectionArrayOutputWithContext(ctx context.Context) GetSecurityZonesSecurityZoneCollectionArrayOutput {
	return o
}

func (o GetSecurityZonesSecurityZoneCollectionArrayOutput) Index(i pulumi.IntInput) GetSecurityZonesSecurityZoneCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityZonesSecurityZoneCollection {
		return vs[0].([]GetSecurityZonesSecurityZoneCollection)[vs[1].(int)]
	}).(GetSecurityZonesSecurityZoneCollectionOutput)
}

type GetSecurityZonesSecurityZoneCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The security zone's description
	Description string `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The unique identifier of the security zone (`SecurityZone`)
	Id string `pulumi:"id"`
	// List of inherited compartments
	InheritedByCompartments []string `pulumi:"inheritedByCompartments"`
	// A message describing the current state in more detail. For example, this can be used to provide actionable information for a zone in the `Failed` state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The OCID of the recipe (`SecurityRecipe`) for the security zone
	SecurityZoneRecipeId string `pulumi:"securityZoneRecipeId"`
	// The OCID of the target associated with the security zone
	SecurityZoneTargetId string `pulumi:"securityZoneTargetId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the security zone was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the security zone was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetSecurityZonesSecurityZoneCollectionItemInput is an input type that accepts GetSecurityZonesSecurityZoneCollectionItemArgs and GetSecurityZonesSecurityZoneCollectionItemOutput values.
// You can construct a concrete instance of `GetSecurityZonesSecurityZoneCollectionItemInput` via:
//
//	GetSecurityZonesSecurityZoneCollectionItemArgs{...}
type GetSecurityZonesSecurityZoneCollectionItemInput interface {
	pulumi.Input

	ToGetSecurityZonesSecurityZoneCollectionItemOutput() GetSecurityZonesSecurityZoneCollectionItemOutput
	ToGetSecurityZonesSecurityZoneCollectionItemOutputWithContext(context.Context) GetSecurityZonesSecurityZoneCollectionItemOutput
}

type GetSecurityZonesSecurityZoneCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// The security zone's description
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The unique identifier of the security zone (`SecurityZone`)
	Id pulumi.StringInput `pulumi:"id"`
	// List of inherited compartments
	InheritedByCompartments pulumi.StringArrayInput `pulumi:"inheritedByCompartments"`
	// A message describing the current state in more detail. For example, this can be used to provide actionable information for a zone in the `Failed` state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The OCID of the recipe (`SecurityRecipe`) for the security zone
	SecurityZoneRecipeId pulumi.StringInput `pulumi:"securityZoneRecipeId"`
	// The OCID of the target associated with the security zone
	SecurityZoneTargetId pulumi.StringInput `pulumi:"securityZoneTargetId"`
	// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the security zone was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the security zone was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetSecurityZonesSecurityZoneCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityZonesSecurityZoneCollectionItem)(nil)).Elem()
}

func (i GetSecurityZonesSecurityZoneCollectionItemArgs) ToGetSecurityZonesSecurityZoneCollectionItemOutput() GetSecurityZonesSecurityZoneCollectionItemOutput {
	return i.ToGetSecurityZonesSecurityZoneCollectionItemOutputWithContext(context.Background())
}

func (i GetSecurityZonesSecurityZoneCollectionItemArgs) ToGetSecurityZonesSecurityZoneCollectionItemOutputWithContext(ctx context.Context) GetSecurityZonesSecurityZoneCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityZonesSecurityZoneCollectionItemOutput)
}

// GetSecurityZonesSecurityZoneCollectionItemArrayInput is an input type that accepts GetSecurityZonesSecurityZoneCollectionItemArray and GetSecurityZonesSecurityZoneCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetSecurityZonesSecurityZoneCollectionItemArrayInput` via:
//
//	GetSecurityZonesSecurityZoneCollectionItemArray{ GetSecurityZonesSecurityZoneCollectionItemArgs{...} }
type GetSecurityZonesSecurityZoneCollectionItemArrayInput interface {
	pulumi.Input

	ToGetSecurityZonesSecurityZoneCollectionItemArrayOutput() GetSecurityZonesSecurityZoneCollectionItemArrayOutput
	ToGetSecurityZonesSecurityZoneCollectionItemArrayOutputWithContext(context.Context) GetSecurityZonesSecurityZoneCollectionItemArrayOutput
}

type GetSecurityZonesSecurityZoneCollectionItemArray []GetSecurityZonesSecurityZoneCollectionItemInput

func (GetSecurityZonesSecurityZoneCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityZonesSecurityZoneCollectionItem)(nil)).Elem()
}

func (i GetSecurityZonesSecurityZoneCollectionItemArray) ToGetSecurityZonesSecurityZoneCollectionItemArrayOutput() GetSecurityZonesSecurityZoneCollectionItemArrayOutput {
	return i.ToGetSecurityZonesSecurityZoneCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetSecurityZonesSecurityZoneCollectionItemArray) ToGetSecurityZonesSecurityZoneCollectionItemArrayOutputWithContext(ctx context.Context) GetSecurityZonesSecurityZoneCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityZonesSecurityZoneCollectionItemArrayOutput)
}

type GetSecurityZonesSecurityZoneCollectionItemOutput struct{ *pulumi.OutputState }

func (GetSecurityZonesSecurityZoneCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityZonesSecurityZoneCollectionItem)(nil)).Elem()
}

func (o GetSecurityZonesSecurityZoneCollectionItemOutput) ToGetSecurityZonesSecurityZoneCollectionItemOutput() GetSecurityZonesSecurityZoneCollectionItemOutput {
	return o
}

func (o GetSecurityZonesSecurityZoneCollectionItemOutput) ToGetSecurityZonesSecurityZoneCollectionItemOutputWithContext(ctx context.Context) GetSecurityZonesSecurityZoneCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The security zone's description
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The unique identifier of the security zone (`SecurityZone`)
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// List of inherited compartments
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) InheritedByCompartments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) []string { return v.InheritedByCompartments }).(pulumi.StringArrayOutput)
}

// A message describing the current state in more detail. For example, this can be used to provide actionable information for a zone in the `Failed` state.
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of the recipe (`SecurityRecipe`) for the security zone
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) SecurityZoneRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) string { return v.SecurityZoneRecipeId }).(pulumi.StringOutput)
}

// The OCID of the target associated with the security zone
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) SecurityZoneTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) string { return v.SecurityZoneTargetId }).(pulumi.StringOutput)
}

// The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the security zone was created. An RFC3339 formatted datetime string.
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the security zone was last updated. An RFC3339 formatted datetime string.
func (o GetSecurityZonesSecurityZoneCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityZonesSecurityZoneCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetSecurityZonesSecurityZoneCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityZonesSecurityZoneCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityZonesSecurityZoneCollectionItem)(nil)).Elem()
}

func (o GetSecurityZonesSecurityZoneCollectionItemArrayOutput) ToGetSecurityZonesSecurityZoneCollectionItemArrayOutput() GetSecurityZonesSecurityZoneCollectionItemArrayOutput {
	return o
}

func (o GetSecurityZonesSecurityZoneCollectionItemArrayOutput) ToGetSecurityZonesSecurityZoneCollectionItemArrayOutputWithContext(ctx context.Context) GetSecurityZonesSecurityZoneCollectionItemArrayOutput {
	return o
}

func (o GetSecurityZonesSecurityZoneCollectionItemArrayOutput) Index(i pulumi.IntInput) GetSecurityZonesSecurityZoneCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityZonesSecurityZoneCollectionItem {
		return vs[0].([]GetSecurityZonesSecurityZoneCollectionItem)[vs[1].(int)]
	}).(GetSecurityZonesSecurityZoneCollectionItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudGuardDataSourceDataSourceDetailsInput)(nil)).Elem(), CloudGuardDataSourceDataSourceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudGuardDataSourceDataSourceDetailsPtrInput)(nil)).Elem(), CloudGuardDataSourceDataSourceDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsInput)(nil)).Elem(), CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrInput)(nil)).Elem(), CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudGuardDataSourceDataSourceDetailsQueryStartTimeInput)(nil)).Elem(), CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrInput)(nil)).Elem(), CloudGuardDataSourceDataSourceDetailsQueryStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudGuardDataSourceDataSourceDetectorMappingInfoInput)(nil)).Elem(), CloudGuardDataSourceDataSourceDetectorMappingInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudGuardDataSourceDataSourceDetectorMappingInfoArrayInput)(nil)).Elem(), CloudGuardDataSourceDataSourceDetectorMappingInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudGuardDataSourceRegionStatusDetailInput)(nil)).Elem(), CloudGuardDataSourceRegionStatusDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudGuardDataSourceRegionStatusDetailArrayInput)(nil)).Elem(), CloudGuardDataSourceRegionStatusDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataMaskRuleTargetSelectedInput)(nil)).Elem(), DataMaskRuleTargetSelectedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataMaskRuleTargetSelectedPtrInput)(nil)).Elem(), DataMaskRuleTargetSelectedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleInput)(nil)).Elem(), DetectorRecipeDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleArrayInput)(nil)).Elem(), DetectorRecipeDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleCandidateResponderRuleInput)(nil)).Elem(), DetectorRecipeDetectorRuleCandidateResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleCandidateResponderRuleArrayInput)(nil)).Elem(), DetectorRecipeDetectorRuleCandidateResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsInput)(nil)).Elem(), DetectorRecipeDetectorRuleDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfigurationInput)(nil)).Elem(), DetectorRecipeDetectorRuleDetailsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfigurationArrayInput)(nil)).Elem(), DetectorRecipeDetectorRuleDetailsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfigurationValueInput)(nil)).Elem(), DetectorRecipeDetectorRuleDetailsConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput)(nil)).Elem(), DetectorRecipeDetectorRuleDetailsConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsEntitiesMappingInput)(nil)).Elem(), DetectorRecipeDetectorRuleDetailsEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayInput)(nil)).Elem(), DetectorRecipeDetectorRuleDetailsEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleEntitiesMappingInput)(nil)).Elem(), DetectorRecipeDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), DetectorRecipeDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleArrayInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailArrayInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailConfigurationInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleEntitiesMappingInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), DetectorRecipeEffectiveDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleInput)(nil)).Elem(), ResponderRecipeEffectiveResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleArrayInput)(nil)).Elem(), ResponderRecipeEffectiveResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetailInput)(nil)).Elem(), ResponderRecipeEffectiveResponderRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetailArrayInput)(nil)).Elem(), ResponderRecipeEffectiveResponderRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetailConfigurationInput)(nil)).Elem(), ResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput)(nil)).Elem(), ResponderRecipeEffectiveResponderRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeResponderRuleInput)(nil)).Elem(), ResponderRecipeResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeResponderRuleArrayInput)(nil)).Elem(), ResponderRecipeResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeResponderRuleDetailsInput)(nil)).Elem(), ResponderRecipeResponderRuleDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeResponderRuleDetailsConfigurationInput)(nil)).Elem(), ResponderRecipeResponderRuleDetailsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeResponderRuleDetailsConfigurationArrayInput)(nil)).Elem(), ResponderRecipeResponderRuleDetailsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetailInput)(nil)).Elem(), TargetTargetDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetailArrayInput)(nil)).Elem(), TargetTargetDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetailTargetSecurityZoneRecipeInput)(nil)).Elem(), TargetTargetDetailTargetSecurityZoneRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetailTargetSecurityZoneRecipeArrayInput)(nil)).Elem(), TargetTargetDetailTargetSecurityZoneRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeInput)(nil)).Elem(), TargetTargetDetectorRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleInput)(nil)).Elem(), TargetTargetDetectorRecipeDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsInput)(nil)).Elem(), TargetTargetDetectorRecipeDetectorRuleDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupInput)(nil)).Elem(), TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationInput)(nil)).Elem(), TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueInput)(nil)).Elem(), TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleEntitiesMappingInput)(nil)).Elem(), TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeInput)(nil)).Elem(), TargetTargetResponderRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeArrayInput)(nil)).Elem(), TargetTargetResponderRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleInput)(nil)).Elem(), TargetTargetResponderRecipeEffectiveResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleArrayInput)(nil)).Elem(), TargetTargetResponderRecipeEffectiveResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetailInput)(nil)).Elem(), TargetTargetResponderRecipeEffectiveResponderRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayInput)(nil)).Elem(), TargetTargetResponderRecipeEffectiveResponderRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput)(nil)).Elem(), TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput)(nil)).Elem(), TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleInput)(nil)).Elem(), TargetTargetResponderRecipeResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleArrayInput)(nil)).Elem(), TargetTargetResponderRecipeResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleDetailsInput)(nil)).Elem(), TargetTargetResponderRecipeResponderRuleDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleDetailsConfigurationInput)(nil)).Elem(), TargetTargetResponderRecipeResponderRuleDetailsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayInput)(nil)).Elem(), TargetTargetResponderRecipeResponderRuleDetailsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataMaskRuleTargetSelectedInput)(nil)).Elem(), GetDataMaskRuleTargetSelectedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataMaskRuleTargetSelectedArrayInput)(nil)).Elem(), GetDataMaskRuleTargetSelectedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionInput)(nil)).Elem(), GetDataMaskRulesDataMaskRuleCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionArrayInput)(nil)).Elem(), GetDataMaskRulesDataMaskRuleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItemInput)(nil)).Elem(), GetDataMaskRulesDataMaskRuleCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItemArrayInput)(nil)).Elem(), GetDataMaskRulesDataMaskRuleCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedInput)(nil)).Elem(), GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayInput)(nil)).Elem(), GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataMaskRulesFilterInput)(nil)).Elem(), GetDataMaskRulesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataMaskRulesFilterArrayInput)(nil)).Elem(), GetDataMaskRulesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceDataSourceDetailInput)(nil)).Elem(), GetDataSourceDataSourceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceDataSourceDetailArrayInput)(nil)).Elem(), GetDataSourceDataSourceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceDataSourceDetailLoggingQueryDetailInput)(nil)).Elem(), GetDataSourceDataSourceDetailLoggingQueryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceDataSourceDetailLoggingQueryDetailArrayInput)(nil)).Elem(), GetDataSourceDataSourceDetailLoggingQueryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceDataSourceDetailQueryStartTimeInput)(nil)).Elem(), GetDataSourceDataSourceDetailQueryStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceDataSourceDetailQueryStartTimeArrayInput)(nil)).Elem(), GetDataSourceDataSourceDetailQueryStartTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceDataSourceDetectorMappingInfoInput)(nil)).Elem(), GetDataSourceDataSourceDetectorMappingInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceDataSourceDetectorMappingInfoArrayInput)(nil)).Elem(), GetDataSourceDataSourceDetectorMappingInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventItemInput)(nil)).Elem(), GetDataSourceEventItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventItemArrayInput)(nil)).Elem(), GetDataSourceEventItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventItemEventInfoInput)(nil)).Elem(), GetDataSourceEventItemEventInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventItemEventInfoArrayInput)(nil)).Elem(), GetDataSourceEventItemEventInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollectionInput)(nil)).Elem(), GetDataSourceEventsDataSourceEventCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollectionArrayInput)(nil)).Elem(), GetDataSourceEventsDataSourceEventCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollectionItemInput)(nil)).Elem(), GetDataSourceEventsDataSourceEventCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollectionItemArrayInput)(nil)).Elem(), GetDataSourceEventsDataSourceEventCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollectionItemEventInfoInput)(nil)).Elem(), GetDataSourceEventsDataSourceEventCollectionItemEventInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayInput)(nil)).Elem(), GetDataSourceEventsDataSourceEventCollectionItemEventInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventsFilterInput)(nil)).Elem(), GetDataSourceEventsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceEventsFilterArrayInput)(nil)).Elem(), GetDataSourceEventsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceRegionStatusDetailInput)(nil)).Elem(), GetDataSourceRegionStatusDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourceRegionStatusDetailArrayInput)(nil)).Elem(), GetDataSourceRegionStatusDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionArrayInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemArrayInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetailInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemDataSourceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemDataSourceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemRegionStatusDetailInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemRegionStatusDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayInput)(nil)).Elem(), GetDataSourcesDataSourceCollectionItemRegionStatusDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesFilterInput)(nil)).Elem(), GetDataSourcesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataSourcesFilterArrayInput)(nil)).Elem(), GetDataSourcesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleArrayInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleCandidateResponderRuleInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleCandidateResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleCandidateResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailArrayInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailConfigurationInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailConfigurationArrayInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailConfigurationValueInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleDetailConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleDetailConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailEntitiesMappingInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleDetailEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleDetailEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleEntitiesMappingInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), GetDetectorRecipeDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleArrayInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailArrayInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesFilterInput)(nil)).Elem(), GetDetectorRecipesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDetectorRecipesFilterArrayInput)(nil)).Elem(), GetDetectorRecipesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetailInput)(nil)).Elem(), GetGuardTargetTargetDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetailArrayInput)(nil)).Elem(), GetGuardTargetTargetDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetailTargetSecurityZoneRecipeInput)(nil)).Elem(), GetGuardTargetTargetDetailTargetSecurityZoneRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayInput)(nil)).Elem(), GetGuardTargetTargetDetailTargetSecurityZoneRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeArrayInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRuleInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRuleInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRuleArrayInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRuleDetailInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeResponderRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeResponderRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayInput)(nil)).Elem(), GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsFilterInput)(nil)).Elem(), GetGuardTargetsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsFilterArrayInput)(nil)).Elem(), GetGuardTargetsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionInput)(nil)).Elem(), GetGuardTargetsTargetCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetailInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetailArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayInput)(nil)).Elem(), GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedListsFilterInput)(nil)).Elem(), GetManagedListsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedListsFilterArrayInput)(nil)).Elem(), GetManagedListsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedListsManagedListCollectionInput)(nil)).Elem(), GetManagedListsManagedListCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedListsManagedListCollectionArrayInput)(nil)).Elem(), GetManagedListsManagedListCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedListsManagedListCollectionItemInput)(nil)).Elem(), GetManagedListsManagedListCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedListsManagedListCollectionItemArrayInput)(nil)).Elem(), GetManagedListsManagedListCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntitiesFilterInput)(nil)).Elem(), GetProblemEntitiesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntitiesFilterArrayInput)(nil)).Elem(), GetProblemEntitiesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntitiesProblemEntityCollectionInput)(nil)).Elem(), GetProblemEntitiesProblemEntityCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntitiesProblemEntityCollectionArrayInput)(nil)).Elem(), GetProblemEntitiesProblemEntityCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntitiesProblemEntityCollectionItemInput)(nil)).Elem(), GetProblemEntitiesProblemEntityCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntitiesProblemEntityCollectionItemArrayInput)(nil)).Elem(), GetProblemEntitiesProblemEntityCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntitiesProblemEntityCollectionItemEntityDetailInput)(nil)).Elem(), GetProblemEntitiesProblemEntityCollectionItemEntityDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayInput)(nil)).Elem(), GetProblemEntitiesProblemEntityCollectionItemEntityDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntityItemInput)(nil)).Elem(), GetProblemEntityItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntityItemArrayInput)(nil)).Elem(), GetProblemEntityItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntityItemEntityDetailInput)(nil)).Elem(), GetProblemEntityItemEntityDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProblemEntityItemEntityDetailArrayInput)(nil)).Elem(), GetProblemEntityItemEntityDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleInput)(nil)).Elem(), GetResponderRecipeEffectiveResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleArrayInput)(nil)).Elem(), GetResponderRecipeEffectiveResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetailInput)(nil)).Elem(), GetResponderRecipeEffectiveResponderRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetailArrayInput)(nil)).Elem(), GetResponderRecipeEffectiveResponderRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetailConfigurationInput)(nil)).Elem(), GetResponderRecipeEffectiveResponderRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayInput)(nil)).Elem(), GetResponderRecipeEffectiveResponderRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeResponderRuleInput)(nil)).Elem(), GetResponderRecipeResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeResponderRuleArrayInput)(nil)).Elem(), GetResponderRecipeResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeResponderRuleDetailInput)(nil)).Elem(), GetResponderRecipeResponderRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeResponderRuleDetailArrayInput)(nil)).Elem(), GetResponderRecipeResponderRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeResponderRuleDetailConfigurationInput)(nil)).Elem(), GetResponderRecipeResponderRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipeResponderRuleDetailConfigurationArrayInput)(nil)).Elem(), GetResponderRecipeResponderRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesFilterInput)(nil)).Elem(), GetResponderRecipesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesFilterArrayInput)(nil)).Elem(), GetResponderRecipesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionArrayInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemArrayInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemResponderRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemResponderRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayInput)(nil)).Elem(), GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityPoliciesFilterInput)(nil)).Elem(), GetSecurityPoliciesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityPoliciesFilterArrayInput)(nil)).Elem(), GetSecurityPoliciesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityPoliciesSecurityPolicyCollectionInput)(nil)).Elem(), GetSecurityPoliciesSecurityPolicyCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityPoliciesSecurityPolicyCollectionArrayInput)(nil)).Elem(), GetSecurityPoliciesSecurityPolicyCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityPoliciesSecurityPolicyCollectionItemInput)(nil)).Elem(), GetSecurityPoliciesSecurityPolicyCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityPoliciesSecurityPolicyCollectionItemArrayInput)(nil)).Elem(), GetSecurityPoliciesSecurityPolicyCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityRecipesFilterInput)(nil)).Elem(), GetSecurityRecipesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityRecipesFilterArrayInput)(nil)).Elem(), GetSecurityRecipesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityRecipesSecurityRecipeCollectionInput)(nil)).Elem(), GetSecurityRecipesSecurityRecipeCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityRecipesSecurityRecipeCollectionArrayInput)(nil)).Elem(), GetSecurityRecipesSecurityRecipeCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityRecipesSecurityRecipeCollectionItemInput)(nil)).Elem(), GetSecurityRecipesSecurityRecipeCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityRecipesSecurityRecipeCollectionItemArrayInput)(nil)).Elem(), GetSecurityRecipesSecurityRecipeCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityZonesFilterInput)(nil)).Elem(), GetSecurityZonesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityZonesFilterArrayInput)(nil)).Elem(), GetSecurityZonesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityZonesSecurityZoneCollectionInput)(nil)).Elem(), GetSecurityZonesSecurityZoneCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityZonesSecurityZoneCollectionArrayInput)(nil)).Elem(), GetSecurityZonesSecurityZoneCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityZonesSecurityZoneCollectionItemInput)(nil)).Elem(), GetSecurityZonesSecurityZoneCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityZonesSecurityZoneCollectionItemArrayInput)(nil)).Elem(), GetSecurityZonesSecurityZoneCollectionItemArray{})
	pulumi.RegisterOutputType(CloudGuardDataSourceDataSourceDetailsOutput{})
	pulumi.RegisterOutputType(CloudGuardDataSourceDataSourceDetailsPtrOutput{})
	pulumi.RegisterOutputType(CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsOutput{})
	pulumi.RegisterOutputType(CloudGuardDataSourceDataSourceDetailsLoggingQueryDetailsPtrOutput{})
	pulumi.RegisterOutputType(CloudGuardDataSourceDataSourceDetailsQueryStartTimeOutput{})
	pulumi.RegisterOutputType(CloudGuardDataSourceDataSourceDetailsQueryStartTimePtrOutput{})
	pulumi.RegisterOutputType(CloudGuardDataSourceDataSourceDetectorMappingInfoOutput{})
	pulumi.RegisterOutputType(CloudGuardDataSourceDataSourceDetectorMappingInfoArrayOutput{})
	pulumi.RegisterOutputType(CloudGuardDataSourceRegionStatusDetailOutput{})
	pulumi.RegisterOutputType(CloudGuardDataSourceRegionStatusDetailArrayOutput{})
	pulumi.RegisterOutputType(DataMaskRuleTargetSelectedOutput{})
	pulumi.RegisterOutputType(DataMaskRuleTargetSelectedPtrOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsEntitiesMappingOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleDetailsEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(DetectorRecipeDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(DetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleDetailOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(ResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ResponderRecipeResponderRuleOutput{})
	pulumi.RegisterOutputType(ResponderRecipeResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(ResponderRecipeResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(ResponderRecipeResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(ResponderRecipeResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetailOutput{})
	pulumi.RegisterOutputType(TargetTargetDetailArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetailTargetSecurityZoneRecipeOutput{})
	pulumi.RegisterOutputType(TargetTargetDetailTargetSecurityZoneRecipeArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleDetailsConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(TargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleDetailOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeResponderRuleOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeResponderRuleDetailsOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeResponderRuleDetailsConfigurationOutput{})
	pulumi.RegisterOutputType(TargetTargetResponderRecipeResponderRuleDetailsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDataMaskRuleTargetSelectedOutput{})
	pulumi.RegisterOutputType(GetDataMaskRuleTargetSelectedArrayOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesDataMaskRuleCollectionOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesDataMaskRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesDataMaskRuleCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesDataMaskRuleCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesDataMaskRuleCollectionItemTargetSelectedArrayOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesFilterOutput{})
	pulumi.RegisterOutputType(GetDataMaskRulesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceDataSourceDetailOutput{})
	pulumi.RegisterOutputType(GetDataSourceDataSourceDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceDataSourceDetailLoggingQueryDetailOutput{})
	pulumi.RegisterOutputType(GetDataSourceDataSourceDetailLoggingQueryDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceDataSourceDetailQueryStartTimeOutput{})
	pulumi.RegisterOutputType(GetDataSourceDataSourceDetailQueryStartTimeArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceDataSourceDetectorMappingInfoOutput{})
	pulumi.RegisterOutputType(GetDataSourceDataSourceDetectorMappingInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventItemOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventItemArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventItemEventInfoOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventItemEventInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventsDataSourceEventCollectionOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventsDataSourceEventCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventsDataSourceEventCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventsDataSourceEventCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventsDataSourceEventCollectionItemEventInfoOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventsDataSourceEventCollectionItemEventInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventsFilterOutput{})
	pulumi.RegisterOutputType(GetDataSourceEventsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourceRegionStatusDetailOutput{})
	pulumi.RegisterOutputType(GetDataSourceRegionStatusDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemDataSourceDetailOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemDataSourceDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemDataSourceDetailLoggingQueryDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemDataSourceDetailQueryStartTimeArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemDataSourceDetectorMappingInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemRegionStatusDetailOutput{})
	pulumi.RegisterOutputType(GetDataSourcesDataSourceCollectionItemRegionStatusDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDataSourcesFilterOutput{})
	pulumi.RegisterOutputType(GetDataSourcesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailEntitiesMappingOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleDetailEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleDetailOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleDetailEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleCandidateResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleDetailConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesFilterOutput{})
	pulumi.RegisterOutputType(GetDetectorRecipesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetailOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetailArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetailTargetSecurityZoneRecipeOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetailTargetSecurityZoneRecipeArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeResponderRuleOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeResponderRuleDetailOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeResponderRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetGuardTargetTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsFilterOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetailOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetailArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetailTargetSecurityZoneRecipeArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleDetailConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConditionGroupArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleDetailConfigurationValueArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetDetectorRecipeEffectiveDetectorRuleEntitiesMappingArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetManagedListsFilterOutput{})
	pulumi.RegisterOutputType(GetManagedListsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetManagedListsManagedListCollectionOutput{})
	pulumi.RegisterOutputType(GetManagedListsManagedListCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetManagedListsManagedListCollectionItemOutput{})
	pulumi.RegisterOutputType(GetManagedListsManagedListCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetProblemEntitiesFilterOutput{})
	pulumi.RegisterOutputType(GetProblemEntitiesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetProblemEntitiesProblemEntityCollectionOutput{})
	pulumi.RegisterOutputType(GetProblemEntitiesProblemEntityCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetProblemEntitiesProblemEntityCollectionItemOutput{})
	pulumi.RegisterOutputType(GetProblemEntitiesProblemEntityCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetProblemEntitiesProblemEntityCollectionItemEntityDetailOutput{})
	pulumi.RegisterOutputType(GetProblemEntitiesProblemEntityCollectionItemEntityDetailArrayOutput{})
	pulumi.RegisterOutputType(GetProblemEntityItemOutput{})
	pulumi.RegisterOutputType(GetProblemEntityItemArrayOutput{})
	pulumi.RegisterOutputType(GetProblemEntityItemEntityDetailOutput{})
	pulumi.RegisterOutputType(GetProblemEntityItemEntityDetailArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeEffectiveResponderRuleDetailOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeEffectiveResponderRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeEffectiveResponderRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeEffectiveResponderRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeResponderRuleOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeResponderRuleDetailOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeResponderRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeResponderRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetResponderRecipeResponderRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesFilterOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemEffectiveResponderRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemResponderRuleOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemResponderRuleArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailArrayOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationOutput{})
	pulumi.RegisterOutputType(GetResponderRecipesResponderRecipeCollectionItemResponderRuleDetailConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityPoliciesFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityPoliciesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityPoliciesSecurityPolicyCollectionOutput{})
	pulumi.RegisterOutputType(GetSecurityPoliciesSecurityPolicyCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityPoliciesSecurityPolicyCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSecurityPoliciesSecurityPolicyCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityRecipesFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityRecipesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityRecipesSecurityRecipeCollectionOutput{})
	pulumi.RegisterOutputType(GetSecurityRecipesSecurityRecipeCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityRecipesSecurityRecipeCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSecurityRecipesSecurityRecipeCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityZonesFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityZonesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityZonesSecurityZoneCollectionOutput{})
	pulumi.RegisterOutputType(GetSecurityZonesSecurityZoneCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityZonesSecurityZoneCollectionItemOutput{})
	pulumi.RegisterOutputType(GetSecurityZonesSecurityZoneCollectionItemArrayOutput{})
}
