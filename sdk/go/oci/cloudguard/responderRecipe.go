// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudguard

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Responder Recipe resource in Oracle Cloud Infrastructure Cloud Guard service.
//
// Creates a responder recipe (ResponderRecipe resource), from values passed in a
// CreateResponderRecipeDetails resource.
//
// ## Import
//
// ResponderRecipes can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:CloudGuard/responderRecipe:ResponderRecipe test_responder_recipe "id"
// ```
type ResponderRecipe struct {
	pulumi.CustomResourceState

	// (Updatable) Compartment OCID
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) Responder recipe description.
	//
	// Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Responder recipe display name.
	//
	// Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// List of currently enabled responder rules for the responder type, for recipe after applying defaults
	EffectiveResponderRules ResponderRecipeEffectiveResponderRuleArrayOutput `pulumi:"effectiveResponderRules"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// Avoid entering confidential information.
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Owner of responder recipe
	Owner pulumi.StringOutput `pulumi:"owner"`
	// (Updatable) List of responder rules to override from source responder recipe
	ResponderRules ResponderRecipeResponderRuleArrayOutput `pulumi:"responderRules"`
	// The unique identifier of the source responder recipe
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SourceResponderRecipeId pulumi.StringOutput `pulumi:"sourceResponderRecipeId"`
	// The current lifecycle state of the example
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the responder recipe was last updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewResponderRecipe registers a new resource with the given unique name, arguments, and options.
func NewResponderRecipe(ctx *pulumi.Context,
	name string, args *ResponderRecipeArgs, opts ...pulumi.ResourceOption) (*ResponderRecipe, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.SourceResponderRecipeId == nil {
		return nil, errors.New("invalid value for required argument 'SourceResponderRecipeId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResponderRecipe
	err := ctx.RegisterResource("oci:CloudGuard/responderRecipe:ResponderRecipe", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResponderRecipe gets an existing ResponderRecipe resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResponderRecipe(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResponderRecipeState, opts ...pulumi.ResourceOption) (*ResponderRecipe, error) {
	var resource ResponderRecipe
	err := ctx.ReadResource("oci:CloudGuard/responderRecipe:ResponderRecipe", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResponderRecipe resources.
type responderRecipeState struct {
	// (Updatable) Compartment OCID
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Responder recipe description.
	//
	// Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Responder recipe display name.
	//
	// Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// List of currently enabled responder rules for the responder type, for recipe after applying defaults
	EffectiveResponderRules []ResponderRecipeEffectiveResponderRule `pulumi:"effectiveResponderRules"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// Avoid entering confidential information.
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Owner of responder recipe
	Owner *string `pulumi:"owner"`
	// (Updatable) List of responder rules to override from source responder recipe
	ResponderRules []ResponderRecipeResponderRule `pulumi:"responderRules"`
	// The unique identifier of the source responder recipe
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SourceResponderRecipeId *string `pulumi:"sourceResponderRecipeId"`
	// The current lifecycle state of the example
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the responder recipe was last updated. Format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type ResponderRecipeState struct {
	// (Updatable) Compartment OCID
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Responder recipe description.
	//
	// Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Responder recipe display name.
	//
	// Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// List of currently enabled responder rules for the responder type, for recipe after applying defaults
	EffectiveResponderRules ResponderRecipeEffectiveResponderRuleArrayInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// Avoid entering confidential information.
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// Owner of responder recipe
	Owner pulumi.StringPtrInput
	// (Updatable) List of responder rules to override from source responder recipe
	ResponderRules ResponderRecipeResponderRuleArrayInput
	// The unique identifier of the source responder recipe
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SourceResponderRecipeId pulumi.StringPtrInput
	// The current lifecycle state of the example
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The date and time the responder recipe was created. Format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The date and time the responder recipe was last updated. Format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
}

func (ResponderRecipeState) ElementType() reflect.Type {
	return reflect.TypeOf((*responderRecipeState)(nil)).Elem()
}

type responderRecipeArgs struct {
	// (Updatable) Compartment OCID
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Responder recipe description.
	//
	// Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Responder recipe display name.
	//
	// Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// Avoid entering confidential information.
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) List of responder rules to override from source responder recipe
	ResponderRules []ResponderRecipeResponderRule `pulumi:"responderRules"`
	// The unique identifier of the source responder recipe
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SourceResponderRecipeId string `pulumi:"sourceResponderRecipeId"`
}

// The set of arguments for constructing a ResponderRecipe resource.
type ResponderRecipeArgs struct {
	// (Updatable) Compartment OCID
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Responder recipe description.
	//
	// Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Responder recipe display name.
	//
	// Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// Avoid entering confidential information.
	FreeformTags pulumi.StringMapInput
	// (Updatable) List of responder rules to override from source responder recipe
	ResponderRules ResponderRecipeResponderRuleArrayInput
	// The unique identifier of the source responder recipe
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SourceResponderRecipeId pulumi.StringInput
}

func (ResponderRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*responderRecipeArgs)(nil)).Elem()
}

type ResponderRecipeInput interface {
	pulumi.Input

	ToResponderRecipeOutput() ResponderRecipeOutput
	ToResponderRecipeOutputWithContext(ctx context.Context) ResponderRecipeOutput
}

func (*ResponderRecipe) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponderRecipe)(nil)).Elem()
}

func (i *ResponderRecipe) ToResponderRecipeOutput() ResponderRecipeOutput {
	return i.ToResponderRecipeOutputWithContext(context.Background())
}

func (i *ResponderRecipe) ToResponderRecipeOutputWithContext(ctx context.Context) ResponderRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeOutput)
}

// ResponderRecipeArrayInput is an input type that accepts ResponderRecipeArray and ResponderRecipeArrayOutput values.
// You can construct a concrete instance of `ResponderRecipeArrayInput` via:
//
//	ResponderRecipeArray{ ResponderRecipeArgs{...} }
type ResponderRecipeArrayInput interface {
	pulumi.Input

	ToResponderRecipeArrayOutput() ResponderRecipeArrayOutput
	ToResponderRecipeArrayOutputWithContext(context.Context) ResponderRecipeArrayOutput
}

type ResponderRecipeArray []ResponderRecipeInput

func (ResponderRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResponderRecipe)(nil)).Elem()
}

func (i ResponderRecipeArray) ToResponderRecipeArrayOutput() ResponderRecipeArrayOutput {
	return i.ToResponderRecipeArrayOutputWithContext(context.Background())
}

func (i ResponderRecipeArray) ToResponderRecipeArrayOutputWithContext(ctx context.Context) ResponderRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeArrayOutput)
}

// ResponderRecipeMapInput is an input type that accepts ResponderRecipeMap and ResponderRecipeMapOutput values.
// You can construct a concrete instance of `ResponderRecipeMapInput` via:
//
//	ResponderRecipeMap{ "key": ResponderRecipeArgs{...} }
type ResponderRecipeMapInput interface {
	pulumi.Input

	ToResponderRecipeMapOutput() ResponderRecipeMapOutput
	ToResponderRecipeMapOutputWithContext(context.Context) ResponderRecipeMapOutput
}

type ResponderRecipeMap map[string]ResponderRecipeInput

func (ResponderRecipeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResponderRecipe)(nil)).Elem()
}

func (i ResponderRecipeMap) ToResponderRecipeMapOutput() ResponderRecipeMapOutput {
	return i.ToResponderRecipeMapOutputWithContext(context.Background())
}

func (i ResponderRecipeMap) ToResponderRecipeMapOutputWithContext(ctx context.Context) ResponderRecipeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderRecipeMapOutput)
}

type ResponderRecipeOutput struct{ *pulumi.OutputState }

func (ResponderRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponderRecipe)(nil)).Elem()
}

func (o ResponderRecipeOutput) ToResponderRecipeOutput() ResponderRecipeOutput {
	return o
}

func (o ResponderRecipeOutput) ToResponderRecipeOutputWithContext(ctx context.Context) ResponderRecipeOutput {
	return o
}

// (Updatable) Compartment OCID
func (o ResponderRecipeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o ResponderRecipeOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) Responder recipe description.
//
// Avoid entering confidential information.
func (o ResponderRecipeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Responder recipe display name.
//
// Avoid entering confidential information.
func (o ResponderRecipeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// List of currently enabled responder rules for the responder type, for recipe after applying defaults
func (o ResponderRecipeOutput) EffectiveResponderRules() ResponderRecipeEffectiveResponderRuleArrayOutput {
	return o.ApplyT(func(v *ResponderRecipe) ResponderRecipeEffectiveResponderRuleArrayOutput {
		return v.EffectiveResponderRules
	}).(ResponderRecipeEffectiveResponderRuleArrayOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
//
// Avoid entering confidential information.
func (o ResponderRecipeOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o ResponderRecipeOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Owner of responder recipe
func (o ResponderRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// (Updatable) List of responder rules to override from source responder recipe
func (o ResponderRecipeOutput) ResponderRules() ResponderRecipeResponderRuleArrayOutput {
	return o.ApplyT(func(v *ResponderRecipe) ResponderRecipeResponderRuleArrayOutput { return v.ResponderRules }).(ResponderRecipeResponderRuleArrayOutput)
}

// The unique identifier of the source responder recipe
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ResponderRecipeOutput) SourceResponderRecipeId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringOutput { return v.SourceResponderRecipeId }).(pulumi.StringOutput)
}

// The current lifecycle state of the example
func (o ResponderRecipeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ResponderRecipeOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the responder recipe was created. Format defined by RFC3339.
func (o ResponderRecipeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the responder recipe was last updated. Format defined by RFC3339.
func (o ResponderRecipeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderRecipe) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type ResponderRecipeArrayOutput struct{ *pulumi.OutputState }

func (ResponderRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResponderRecipe)(nil)).Elem()
}

func (o ResponderRecipeArrayOutput) ToResponderRecipeArrayOutput() ResponderRecipeArrayOutput {
	return o
}

func (o ResponderRecipeArrayOutput) ToResponderRecipeArrayOutputWithContext(ctx context.Context) ResponderRecipeArrayOutput {
	return o
}

func (o ResponderRecipeArrayOutput) Index(i pulumi.IntInput) ResponderRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResponderRecipe {
		return vs[0].([]*ResponderRecipe)[vs[1].(int)]
	}).(ResponderRecipeOutput)
}

type ResponderRecipeMapOutput struct{ *pulumi.OutputState }

func (ResponderRecipeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResponderRecipe)(nil)).Elem()
}

func (o ResponderRecipeMapOutput) ToResponderRecipeMapOutput() ResponderRecipeMapOutput {
	return o
}

func (o ResponderRecipeMapOutput) ToResponderRecipeMapOutputWithContext(ctx context.Context) ResponderRecipeMapOutput {
	return o
}

func (o ResponderRecipeMapOutput) MapIndex(k pulumi.StringInput) ResponderRecipeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResponderRecipe {
		return vs[0].(map[string]*ResponderRecipe)[vs[1].(string)]
	}).(ResponderRecipeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeInput)(nil)).Elem(), &ResponderRecipe{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeArrayInput)(nil)).Elem(), ResponderRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderRecipeMapInput)(nil)).Elem(), ResponderRecipeMap{})
	pulumi.RegisterOutputType(ResponderRecipeOutput{})
	pulumi.RegisterOutputType(ResponderRecipeArrayOutput{})
	pulumi.RegisterOutputType(ResponderRecipeMapOutput{})
}
