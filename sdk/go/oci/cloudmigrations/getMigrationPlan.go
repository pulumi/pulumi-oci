// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudmigrations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Migration Plan resource in Oracle Cloud Infrastructure Cloud Migrations service.
//
// Gets a migration plan by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/cloudmigrations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudmigrations.GetMigrationPlan(ctx, &cloudmigrations.GetMigrationPlanArgs{
//				MigrationPlanId: testMigrationPlanOciCloudMigrationsMigrationPlan.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMigrationPlan(ctx *pulumi.Context, args *LookupMigrationPlanArgs, opts ...pulumi.InvokeOption) (*LookupMigrationPlanResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMigrationPlanResult
	err := ctx.Invoke("oci:CloudMigrations/getMigrationPlan:getMigrationPlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMigrationPlan.
type LookupMigrationPlanArgs struct {
	// Unique migration plan identifier
	MigrationPlanId string `pulumi:"migrationPlanId"`
}

// A collection of values returned by getMigrationPlan.
type LookupMigrationPlanResult struct {
	// Limits of the resources that are needed for migration. Example: {"BlockVolume": 2, "VCN": 1}
	CalculatedLimits map[string]string `pulumi:"calculatedLimits"`
	// The OCID of the compartment containing the migration plan.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The unique Oracle ID (OCID) that is immutable on creation.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The OCID of the associated migration.
	MigrationId     string `pulumi:"migrationId"`
	MigrationPlanId string `pulumi:"migrationPlanId"`
	// Status of the migration plan.
	MigrationPlanStats []GetMigrationPlanMigrationPlanStat `pulumi:"migrationPlanStats"`
	// OCID of the referenced ORM job.
	ReferenceToRmsStack string `pulumi:"referenceToRmsStack"`
	// Source migraiton plan ID to be cloned.
	SourceMigrationPlanId string `pulumi:"sourceMigrationPlanId"`
	// The current state of the migration plan.
	State string `pulumi:"state"`
	// List of strategies for the resources to be migrated.
	Strategies []GetMigrationPlanStrategy `pulumi:"strategies"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// List of target environments.
	TargetEnvironments []GetMigrationPlanTargetEnvironment `pulumi:"targetEnvironments"`
	// The time when the migration plan was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when the migration plan was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupMigrationPlanOutput(ctx *pulumi.Context, args LookupMigrationPlanOutputArgs, opts ...pulumi.InvokeOption) LookupMigrationPlanResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMigrationPlanResultOutput, error) {
			args := v.(LookupMigrationPlanArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:CloudMigrations/getMigrationPlan:getMigrationPlan", args, LookupMigrationPlanResultOutput{}, options).(LookupMigrationPlanResultOutput), nil
		}).(LookupMigrationPlanResultOutput)
}

// A collection of arguments for invoking getMigrationPlan.
type LookupMigrationPlanOutputArgs struct {
	// Unique migration plan identifier
	MigrationPlanId pulumi.StringInput `pulumi:"migrationPlanId"`
}

func (LookupMigrationPlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMigrationPlanArgs)(nil)).Elem()
}

// A collection of values returned by getMigrationPlan.
type LookupMigrationPlanResultOutput struct{ *pulumi.OutputState }

func (LookupMigrationPlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMigrationPlanResult)(nil)).Elem()
}

func (o LookupMigrationPlanResultOutput) ToLookupMigrationPlanResultOutput() LookupMigrationPlanResultOutput {
	return o
}

func (o LookupMigrationPlanResultOutput) ToLookupMigrationPlanResultOutputWithContext(ctx context.Context) LookupMigrationPlanResultOutput {
	return o
}

// Limits of the resources that are needed for migration. Example: {"BlockVolume": 2, "VCN": 1}
func (o LookupMigrationPlanResultOutput) CalculatedLimits() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) map[string]string { return v.CalculatedLimits }).(pulumi.StringMapOutput)
}

// The OCID of the compartment containing the migration plan.
func (o LookupMigrationPlanResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupMigrationPlanResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupMigrationPlanResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{"bar-key": "value"}`
func (o LookupMigrationPlanResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The unique Oracle ID (OCID) that is immutable on creation.
func (o LookupMigrationPlanResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
func (o LookupMigrationPlanResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of the associated migration.
func (o LookupMigrationPlanResultOutput) MigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) string { return v.MigrationId }).(pulumi.StringOutput)
}

func (o LookupMigrationPlanResultOutput) MigrationPlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) string { return v.MigrationPlanId }).(pulumi.StringOutput)
}

// Status of the migration plan.
func (o LookupMigrationPlanResultOutput) MigrationPlanStats() GetMigrationPlanMigrationPlanStatArrayOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) []GetMigrationPlanMigrationPlanStat { return v.MigrationPlanStats }).(GetMigrationPlanMigrationPlanStatArrayOutput)
}

// OCID of the referenced ORM job.
func (o LookupMigrationPlanResultOutput) ReferenceToRmsStack() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) string { return v.ReferenceToRmsStack }).(pulumi.StringOutput)
}

// Source migraiton plan ID to be cloned.
func (o LookupMigrationPlanResultOutput) SourceMigrationPlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) string { return v.SourceMigrationPlanId }).(pulumi.StringOutput)
}

// The current state of the migration plan.
func (o LookupMigrationPlanResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) string { return v.State }).(pulumi.StringOutput)
}

// List of strategies for the resources to be migrated.
func (o LookupMigrationPlanResultOutput) Strategies() GetMigrationPlanStrategyArrayOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) []GetMigrationPlanStrategy { return v.Strategies }).(GetMigrationPlanStrategyArrayOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupMigrationPlanResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// List of target environments.
func (o LookupMigrationPlanResultOutput) TargetEnvironments() GetMigrationPlanTargetEnvironmentArrayOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) []GetMigrationPlanTargetEnvironment { return v.TargetEnvironments }).(GetMigrationPlanTargetEnvironmentArrayOutput)
}

// The time when the migration plan was created. An RFC3339 formatted datetime string.
func (o LookupMigrationPlanResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the migration plan was updated. An RFC3339 formatted datetime string.
func (o LookupMigrationPlanResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationPlanResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMigrationPlanResultOutput{})
}
