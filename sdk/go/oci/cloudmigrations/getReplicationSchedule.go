// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudmigrations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Replication Schedule resource in Oracle Cloud Infrastructure Cloud Migrations service.
//
// Gets a replication schedule by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/cloudmigrations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudmigrations.GetReplicationSchedule(ctx, &cloudmigrations.GetReplicationScheduleArgs{
//				ReplicationScheduleId: testReplicationScheduleOciCloudMigrationsReplicationSchedule.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupReplicationSchedule(ctx *pulumi.Context, args *LookupReplicationScheduleArgs, opts ...pulumi.InvokeOption) (*LookupReplicationScheduleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReplicationScheduleResult
	err := ctx.Invoke("oci:CloudMigrations/getReplicationSchedule:getReplicationSchedule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReplicationSchedule.
type LookupReplicationScheduleArgs struct {
	// Unique replication schedule identifier in path
	ReplicationScheduleId string `pulumi:"replicationScheduleId"`
}

// A collection of values returned by getReplicationSchedule.
type LookupReplicationScheduleResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the replication schedule exists.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A name of the replication schedule.
	DisplayName string `pulumi:"displayName"`
	// Recurrence specification for the replication schedule execution.
	ExecutionRecurrences string `pulumi:"executionRecurrences"`
	// Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the replication schedule.
	Id string `pulumi:"id"`
	// The detailed state of the replication schedule.
	LifecycleDetails      string `pulumi:"lifecycleDetails"`
	ReplicationScheduleId string `pulumi:"replicationScheduleId"`
	// Current state of the replication schedule.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time when the replication schedule was created in RFC3339 format.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when the replication schedule was last updated in RFC3339 format.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupReplicationScheduleOutput(ctx *pulumi.Context, args LookupReplicationScheduleOutputArgs, opts ...pulumi.InvokeOption) LookupReplicationScheduleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupReplicationScheduleResultOutput, error) {
			args := v.(LookupReplicationScheduleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:CloudMigrations/getReplicationSchedule:getReplicationSchedule", args, LookupReplicationScheduleResultOutput{}, options).(LookupReplicationScheduleResultOutput), nil
		}).(LookupReplicationScheduleResultOutput)
}

// A collection of arguments for invoking getReplicationSchedule.
type LookupReplicationScheduleOutputArgs struct {
	// Unique replication schedule identifier in path
	ReplicationScheduleId pulumi.StringInput `pulumi:"replicationScheduleId"`
}

func (LookupReplicationScheduleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReplicationScheduleArgs)(nil)).Elem()
}

// A collection of values returned by getReplicationSchedule.
type LookupReplicationScheduleResultOutput struct{ *pulumi.OutputState }

func (LookupReplicationScheduleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReplicationScheduleResult)(nil)).Elem()
}

func (o LookupReplicationScheduleResultOutput) ToLookupReplicationScheduleResultOutput() LookupReplicationScheduleResultOutput {
	return o
}

func (o LookupReplicationScheduleResultOutput) ToLookupReplicationScheduleResultOutputWithContext(ctx context.Context) LookupReplicationScheduleResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the replication schedule exists.
func (o LookupReplicationScheduleResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupReplicationScheduleResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A name of the replication schedule.
func (o LookupReplicationScheduleResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Recurrence specification for the replication schedule execution.
func (o LookupReplicationScheduleResultOutput) ExecutionRecurrences() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) string { return v.ExecutionRecurrences }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{"bar-key": "value"}`
func (o LookupReplicationScheduleResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the replication schedule.
func (o LookupReplicationScheduleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The detailed state of the replication schedule.
func (o LookupReplicationScheduleResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o LookupReplicationScheduleResultOutput) ReplicationScheduleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) string { return v.ReplicationScheduleId }).(pulumi.StringOutput)
}

// Current state of the replication schedule.
func (o LookupReplicationScheduleResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupReplicationScheduleResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time when the replication schedule was created in RFC3339 format.
func (o LookupReplicationScheduleResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the replication schedule was last updated in RFC3339 format.
func (o LookupReplicationScheduleResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationScheduleResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReplicationScheduleResultOutput{})
}
