// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudmigrations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Replication Schedules in Oracle Cloud Infrastructure Cloud Migrations service.
//
// Returns a list of replication schedules.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CloudMigrations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudMigrations.GetReplicationSchedules(ctx, &cloudmigrations.GetReplicationSchedulesArgs{
//				CompartmentId:         pulumi.StringRef(_var.Compartment_id),
//				DisplayName:           pulumi.StringRef(_var.Replication_schedule_display_name),
//				ReplicationScheduleId: pulumi.StringRef(oci_cloud_migrations_replication_schedule.Test_replication_schedule.Id),
//				State:                 pulumi.StringRef(_var.Replication_schedule_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetReplicationSchedules(ctx *pulumi.Context, args *GetReplicationSchedulesArgs, opts ...pulumi.InvokeOption) (*GetReplicationSchedulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetReplicationSchedulesResult
	err := ctx.Invoke("oci:CloudMigrations/getReplicationSchedules:getReplicationSchedules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReplicationSchedules.
type GetReplicationSchedulesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire given display name.
	DisplayName *string                         `pulumi:"displayName"`
	Filters     []GetReplicationSchedulesFilter `pulumi:"filters"`
	// Unique replication schedule identifier in query
	ReplicationScheduleId *string `pulumi:"replicationScheduleId"`
	// The current state of the replication schedule.
	State *string `pulumi:"state"`
}

// A collection of values returned by getReplicationSchedules.
type GetReplicationSchedulesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the replication schedule exists.
	CompartmentId *string `pulumi:"compartmentId"`
	// A name of the replication schedule.
	DisplayName *string                         `pulumi:"displayName"`
	Filters     []GetReplicationSchedulesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of replication_schedule_collection.
	ReplicationScheduleCollections []GetReplicationSchedulesReplicationScheduleCollection `pulumi:"replicationScheduleCollections"`
	ReplicationScheduleId          *string                                                `pulumi:"replicationScheduleId"`
	// Current state of the replication schedule.
	State *string `pulumi:"state"`
}

func GetReplicationSchedulesOutput(ctx *pulumi.Context, args GetReplicationSchedulesOutputArgs, opts ...pulumi.InvokeOption) GetReplicationSchedulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetReplicationSchedulesResult, error) {
			args := v.(GetReplicationSchedulesArgs)
			r, err := GetReplicationSchedules(ctx, &args, opts...)
			var s GetReplicationSchedulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetReplicationSchedulesResultOutput)
}

// A collection of arguments for invoking getReplicationSchedules.
type GetReplicationSchedulesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire given display name.
	DisplayName pulumi.StringPtrInput                   `pulumi:"displayName"`
	Filters     GetReplicationSchedulesFilterArrayInput `pulumi:"filters"`
	// Unique replication schedule identifier in query
	ReplicationScheduleId pulumi.StringPtrInput `pulumi:"replicationScheduleId"`
	// The current state of the replication schedule.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetReplicationSchedulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationSchedulesArgs)(nil)).Elem()
}

// A collection of values returned by getReplicationSchedules.
type GetReplicationSchedulesResultOutput struct{ *pulumi.OutputState }

func (GetReplicationSchedulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationSchedulesResult)(nil)).Elem()
}

func (o GetReplicationSchedulesResultOutput) ToGetReplicationSchedulesResultOutput() GetReplicationSchedulesResultOutput {
	return o
}

func (o GetReplicationSchedulesResultOutput) ToGetReplicationSchedulesResultOutputWithContext(ctx context.Context) GetReplicationSchedulesResultOutput {
	return o
}

func (o GetReplicationSchedulesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetReplicationSchedulesResult] {
	return pulumix.Output[GetReplicationSchedulesResult]{
		OutputState: o.OutputState,
	}
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the replication schedule exists.
func (o GetReplicationSchedulesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReplicationSchedulesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A name of the replication schedule.
func (o GetReplicationSchedulesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReplicationSchedulesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetReplicationSchedulesResultOutput) Filters() GetReplicationSchedulesFilterArrayOutput {
	return o.ApplyT(func(v GetReplicationSchedulesResult) []GetReplicationSchedulesFilter { return v.Filters }).(GetReplicationSchedulesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetReplicationSchedulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSchedulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of replication_schedule_collection.
func (o GetReplicationSchedulesResultOutput) ReplicationScheduleCollections() GetReplicationSchedulesReplicationScheduleCollectionArrayOutput {
	return o.ApplyT(func(v GetReplicationSchedulesResult) []GetReplicationSchedulesReplicationScheduleCollection {
		return v.ReplicationScheduleCollections
	}).(GetReplicationSchedulesReplicationScheduleCollectionArrayOutput)
}

func (o GetReplicationSchedulesResultOutput) ReplicationScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReplicationSchedulesResult) *string { return v.ReplicationScheduleId }).(pulumi.StringPtrOutput)
}

// Current state of the replication schedule.
func (o GetReplicationSchedulesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReplicationSchedulesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetReplicationSchedulesResultOutput{})
}
