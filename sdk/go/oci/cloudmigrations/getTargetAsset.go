// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudmigrations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Target Asset resource in Oracle Cloud Infrastructure Cloud Migrations service.
//
// Gets a target asset by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CloudMigrations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudMigrations.GetTargetAsset(ctx, &cloudmigrations.GetTargetAssetArgs{
//				TargetAssetId: testTargetAssetOciCloudMigrationsTargetAsset.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTargetAsset(ctx *pulumi.Context, args *LookupTargetAssetArgs, opts ...pulumi.InvokeOption) (*LookupTargetAssetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTargetAssetResult
	err := ctx.Invoke("oci:CloudMigrations/getTargetAsset:getTargetAsset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTargetAsset.
type LookupTargetAssetArgs struct {
	// Unique target asset identifier
	TargetAssetId string `pulumi:"targetAssetId"`
}

// A collection of values returned by getTargetAsset.
type LookupTargetAssetResult struct {
	// Performance of the block volumes.
	BlockVolumesPerformance int `pulumi:"blockVolumesPerformance"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Messages about the compatibility issues.
	CompatibilityMessages []GetTargetAssetCompatibilityMessage `pulumi:"compatibilityMessages"`
	// Created resource identifier
	CreatedResourceId string `pulumi:"createdResourceId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Cost estimation description
	EstimatedCosts []GetTargetAssetEstimatedCost `pulumi:"estimatedCosts"`
	// Asset ID generated by mirgration service. It is used in the mirgration service pipeline.
	Id string `pulumi:"id"`
	// A boolean indicating whether the asset should be migrated.
	IsExcludedFromExecution bool `pulumi:"isExcludedFromExecution"`
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Description of the migration asset.
	MigrationAssets []GetTargetAssetMigrationAsset `pulumi:"migrationAssets"`
	// OCID of the associated migration plan.
	MigrationPlanId string `pulumi:"migrationPlanId"`
	// Microsoft license for VM configuration.
	MsLicense string `pulumi:"msLicense"`
	// Preferred VM shape type that you provide.
	PreferredShapeType string `pulumi:"preferredShapeType"`
	// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	RecommendedSpecs []GetTargetAssetRecommendedSpec `pulumi:"recommendedSpecs"`
	// The current state of the target asset.
	State         string `pulumi:"state"`
	TargetAssetId string `pulumi:"targetAssetId"`
	// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	TestSpecs []GetTargetAssetTestSpec `pulumi:"testSpecs"`
	// The time when the assessment was done. An RFC3339 formatted datetime string.
	TimeAssessed string `pulumi:"timeAssessed"`
	// The time when the target asset was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when the target asset was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The type of action to run when the instance is interrupted for eviction.
	Type string `pulumi:"type"`
	// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	UserSpecs []GetTargetAssetUserSpec `pulumi:"userSpecs"`
}

func LookupTargetAssetOutput(ctx *pulumi.Context, args LookupTargetAssetOutputArgs, opts ...pulumi.InvokeOption) LookupTargetAssetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTargetAssetResult, error) {
			args := v.(LookupTargetAssetArgs)
			r, err := LookupTargetAsset(ctx, &args, opts...)
			var s LookupTargetAssetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTargetAssetResultOutput)
}

// A collection of arguments for invoking getTargetAsset.
type LookupTargetAssetOutputArgs struct {
	// Unique target asset identifier
	TargetAssetId pulumi.StringInput `pulumi:"targetAssetId"`
}

func (LookupTargetAssetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTargetAssetArgs)(nil)).Elem()
}

// A collection of values returned by getTargetAsset.
type LookupTargetAssetResultOutput struct{ *pulumi.OutputState }

func (LookupTargetAssetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTargetAssetResult)(nil)).Elem()
}

func (o LookupTargetAssetResultOutput) ToLookupTargetAssetResultOutput() LookupTargetAssetResultOutput {
	return o
}

func (o LookupTargetAssetResultOutput) ToLookupTargetAssetResultOutputWithContext(ctx context.Context) LookupTargetAssetResultOutput {
	return o
}

// Performance of the block volumes.
func (o LookupTargetAssetResultOutput) BlockVolumesPerformance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) int { return v.BlockVolumesPerformance }).(pulumi.IntOutput)
}

// The OCID of the compartment.
func (o LookupTargetAssetResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Messages about the compatibility issues.
func (o LookupTargetAssetResultOutput) CompatibilityMessages() GetTargetAssetCompatibilityMessageArrayOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) []GetTargetAssetCompatibilityMessage { return v.CompatibilityMessages }).(GetTargetAssetCompatibilityMessageArrayOutput)
}

// Created resource identifier
func (o LookupTargetAssetResultOutput) CreatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.CreatedResourceId }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupTargetAssetResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Cost estimation description
func (o LookupTargetAssetResultOutput) EstimatedCosts() GetTargetAssetEstimatedCostArrayOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) []GetTargetAssetEstimatedCost { return v.EstimatedCosts }).(GetTargetAssetEstimatedCostArrayOutput)
}

// Asset ID generated by mirgration service. It is used in the mirgration service pipeline.
func (o LookupTargetAssetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.Id }).(pulumi.StringOutput)
}

// A boolean indicating whether the asset should be migrated.
func (o LookupTargetAssetResultOutput) IsExcludedFromExecution() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) bool { return v.IsExcludedFromExecution }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
func (o LookupTargetAssetResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Description of the migration asset.
func (o LookupTargetAssetResultOutput) MigrationAssets() GetTargetAssetMigrationAssetArrayOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) []GetTargetAssetMigrationAsset { return v.MigrationAssets }).(GetTargetAssetMigrationAssetArrayOutput)
}

// OCID of the associated migration plan.
func (o LookupTargetAssetResultOutput) MigrationPlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.MigrationPlanId }).(pulumi.StringOutput)
}

// Microsoft license for VM configuration.
func (o LookupTargetAssetResultOutput) MsLicense() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.MsLicense }).(pulumi.StringOutput)
}

// Preferred VM shape type that you provide.
func (o LookupTargetAssetResultOutput) PreferredShapeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.PreferredShapeType }).(pulumi.StringOutput)
}

// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
func (o LookupTargetAssetResultOutput) RecommendedSpecs() GetTargetAssetRecommendedSpecArrayOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) []GetTargetAssetRecommendedSpec { return v.RecommendedSpecs }).(GetTargetAssetRecommendedSpecArrayOutput)
}

// The current state of the target asset.
func (o LookupTargetAssetResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupTargetAssetResultOutput) TargetAssetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.TargetAssetId }).(pulumi.StringOutput)
}

// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
func (o LookupTargetAssetResultOutput) TestSpecs() GetTargetAssetTestSpecArrayOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) []GetTargetAssetTestSpec { return v.TestSpecs }).(GetTargetAssetTestSpecArrayOutput)
}

// The time when the assessment was done. An RFC3339 formatted datetime string.
func (o LookupTargetAssetResultOutput) TimeAssessed() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.TimeAssessed }).(pulumi.StringOutput)
}

// The time when the target asset was created. An RFC3339 formatted datetime string.
func (o LookupTargetAssetResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the target asset was updated. An RFC3339 formatted datetime string.
func (o LookupTargetAssetResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The type of action to run when the instance is interrupted for eviction.
func (o LookupTargetAssetResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) string { return v.Type }).(pulumi.StringOutput)
}

// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
func (o LookupTargetAssetResultOutput) UserSpecs() GetTargetAssetUserSpecArrayOutput {
	return o.ApplyT(func(v LookupTargetAssetResult) []GetTargetAssetUserSpec { return v.UserSpecs }).(GetTargetAssetUserSpecArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTargetAssetResultOutput{})
}
