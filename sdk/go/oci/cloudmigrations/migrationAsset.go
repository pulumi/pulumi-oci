// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudmigrations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Migration Asset resource in Oracle Cloud Infrastructure Cloud Migrations service.
//
// Creates a migration asset.
//
// ## Import
//
// MigrationAssets can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:CloudMigrations/migrationAsset:MigrationAsset test_migration_asset "id"
// ```
type MigrationAsset struct {
	pulumi.CustomResourceState

	// Availability domain
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// Compartment Identifier
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// List of migration assets that depend on the asset.
	DependedOnBies pulumi.StringArrayOutput `pulumi:"dependedOnBies"`
	// (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// OCID of an asset for an inventory.
	InventoryAssetId pulumi.StringOutput `pulumi:"inventoryAssetId"`
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails         pulumi.StringOutput      `pulumi:"lifecycleDetails"`
	MigrationAssetDependsOns pulumi.StringArrayOutput `pulumi:"migrationAssetDependsOns"`
	// OCID of the associated migration.
	MigrationId pulumi.StringOutput `pulumi:"migrationId"`
	// List of notifications
	Notifications pulumi.StringArrayOutput `pulumi:"notifications"`
	// The parent snapshot of the migration asset to be used by the replication task.
	ParentSnapshot pulumi.StringOutput `pulumi:"parentSnapshot"`
	// Replication compartment identifier
	ReplicationCompartmentId pulumi.StringOutput `pulumi:"replicationCompartmentId"`
	// (Updatable) Replication schedule identifier
	ReplicationScheduleId pulumi.StringOutput `pulumi:"replicationScheduleId"`
	// Name of snapshot bucket
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SnapShotBucketName pulumi.StringOutput `pulumi:"snapShotBucketName"`
	// Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{"bar-key": "value"}`
	Snapshots pulumi.StringMapOutput `pulumi:"snapshots"`
	// OCID that is referenced to an asset for an inventory.
	SourceAssetId pulumi.StringOutput `pulumi:"sourceAssetId"`
	// The current state of the migration asset.
	State pulumi.StringOutput `pulumi:"state"`
	// Tenancy identifier
	TenancyId pulumi.StringOutput `pulumi:"tenancyId"`
	// The time when the migration asset was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time when the migration asset was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// The type of asset referenced for inventory.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMigrationAsset registers a new resource with the given unique name, arguments, and options.
func NewMigrationAsset(ctx *pulumi.Context,
	name string, args *MigrationAssetArgs, opts ...pulumi.ResourceOption) (*MigrationAsset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityDomain == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityDomain'")
	}
	if args.InventoryAssetId == nil {
		return nil, errors.New("invalid value for required argument 'InventoryAssetId'")
	}
	if args.MigrationId == nil {
		return nil, errors.New("invalid value for required argument 'MigrationId'")
	}
	if args.ReplicationCompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'ReplicationCompartmentId'")
	}
	if args.SnapShotBucketName == nil {
		return nil, errors.New("invalid value for required argument 'SnapShotBucketName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MigrationAsset
	err := ctx.RegisterResource("oci:CloudMigrations/migrationAsset:MigrationAsset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMigrationAsset gets an existing MigrationAsset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMigrationAsset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MigrationAssetState, opts ...pulumi.ResourceOption) (*MigrationAsset, error) {
	var resource MigrationAsset
	err := ctx.ReadResource("oci:CloudMigrations/migrationAsset:MigrationAsset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MigrationAsset resources.
type migrationAssetState struct {
	// Availability domain
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// Compartment Identifier
	CompartmentId *string `pulumi:"compartmentId"`
	// List of migration assets that depend on the asset.
	DependedOnBies []string `pulumi:"dependedOnBies"`
	// (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// OCID of an asset for an inventory.
	InventoryAssetId *string `pulumi:"inventoryAssetId"`
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails         *string  `pulumi:"lifecycleDetails"`
	MigrationAssetDependsOns []string `pulumi:"migrationAssetDependsOns"`
	// OCID of the associated migration.
	MigrationId *string `pulumi:"migrationId"`
	// List of notifications
	Notifications []string `pulumi:"notifications"`
	// The parent snapshot of the migration asset to be used by the replication task.
	ParentSnapshot *string `pulumi:"parentSnapshot"`
	// Replication compartment identifier
	ReplicationCompartmentId *string `pulumi:"replicationCompartmentId"`
	// (Updatable) Replication schedule identifier
	ReplicationScheduleId *string `pulumi:"replicationScheduleId"`
	// Name of snapshot bucket
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SnapShotBucketName *string `pulumi:"snapShotBucketName"`
	// Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{"bar-key": "value"}`
	Snapshots map[string]string `pulumi:"snapshots"`
	// OCID that is referenced to an asset for an inventory.
	SourceAssetId *string `pulumi:"sourceAssetId"`
	// The current state of the migration asset.
	State *string `pulumi:"state"`
	// Tenancy identifier
	TenancyId *string `pulumi:"tenancyId"`
	// The time when the migration asset was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when the migration asset was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The type of asset referenced for inventory.
	Type *string `pulumi:"type"`
}

type MigrationAssetState struct {
	// Availability domain
	AvailabilityDomain pulumi.StringPtrInput
	// Compartment Identifier
	CompartmentId pulumi.StringPtrInput
	// List of migration assets that depend on the asset.
	DependedOnBies pulumi.StringArrayInput
	// (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// OCID of an asset for an inventory.
	InventoryAssetId pulumi.StringPtrInput
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails         pulumi.StringPtrInput
	MigrationAssetDependsOns pulumi.StringArrayInput
	// OCID of the associated migration.
	MigrationId pulumi.StringPtrInput
	// List of notifications
	Notifications pulumi.StringArrayInput
	// The parent snapshot of the migration asset to be used by the replication task.
	ParentSnapshot pulumi.StringPtrInput
	// Replication compartment identifier
	ReplicationCompartmentId pulumi.StringPtrInput
	// (Updatable) Replication schedule identifier
	ReplicationScheduleId pulumi.StringPtrInput
	// Name of snapshot bucket
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SnapShotBucketName pulumi.StringPtrInput
	// Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{"bar-key": "value"}`
	Snapshots pulumi.StringMapInput
	// OCID that is referenced to an asset for an inventory.
	SourceAssetId pulumi.StringPtrInput
	// The current state of the migration asset.
	State pulumi.StringPtrInput
	// Tenancy identifier
	TenancyId pulumi.StringPtrInput
	// The time when the migration asset was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time when the migration asset was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// The type of asset referenced for inventory.
	Type pulumi.StringPtrInput
}

func (MigrationAssetState) ElementType() reflect.Type {
	return reflect.TypeOf((*migrationAssetState)(nil)).Elem()
}

type migrationAssetArgs struct {
	// Availability domain
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// OCID of an asset for an inventory.
	InventoryAssetId         string   `pulumi:"inventoryAssetId"`
	MigrationAssetDependsOns []string `pulumi:"migrationAssetDependsOns"`
	// OCID of the associated migration.
	MigrationId string `pulumi:"migrationId"`
	// Replication compartment identifier
	ReplicationCompartmentId string `pulumi:"replicationCompartmentId"`
	// (Updatable) Replication schedule identifier
	ReplicationScheduleId *string `pulumi:"replicationScheduleId"`
	// Name of snapshot bucket
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SnapShotBucketName string `pulumi:"snapShotBucketName"`
}

// The set of arguments for constructing a MigrationAsset resource.
type MigrationAssetArgs struct {
	// Availability domain
	AvailabilityDomain pulumi.StringInput
	// (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// OCID of an asset for an inventory.
	InventoryAssetId         pulumi.StringInput
	MigrationAssetDependsOns pulumi.StringArrayInput
	// OCID of the associated migration.
	MigrationId pulumi.StringInput
	// Replication compartment identifier
	ReplicationCompartmentId pulumi.StringInput
	// (Updatable) Replication schedule identifier
	ReplicationScheduleId pulumi.StringPtrInput
	// Name of snapshot bucket
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SnapShotBucketName pulumi.StringInput
}

func (MigrationAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*migrationAssetArgs)(nil)).Elem()
}

type MigrationAssetInput interface {
	pulumi.Input

	ToMigrationAssetOutput() MigrationAssetOutput
	ToMigrationAssetOutputWithContext(ctx context.Context) MigrationAssetOutput
}

func (*MigrationAsset) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationAsset)(nil)).Elem()
}

func (i *MigrationAsset) ToMigrationAssetOutput() MigrationAssetOutput {
	return i.ToMigrationAssetOutputWithContext(context.Background())
}

func (i *MigrationAsset) ToMigrationAssetOutputWithContext(ctx context.Context) MigrationAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationAssetOutput)
}

// MigrationAssetArrayInput is an input type that accepts MigrationAssetArray and MigrationAssetArrayOutput values.
// You can construct a concrete instance of `MigrationAssetArrayInput` via:
//
//	MigrationAssetArray{ MigrationAssetArgs{...} }
type MigrationAssetArrayInput interface {
	pulumi.Input

	ToMigrationAssetArrayOutput() MigrationAssetArrayOutput
	ToMigrationAssetArrayOutputWithContext(context.Context) MigrationAssetArrayOutput
}

type MigrationAssetArray []MigrationAssetInput

func (MigrationAssetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MigrationAsset)(nil)).Elem()
}

func (i MigrationAssetArray) ToMigrationAssetArrayOutput() MigrationAssetArrayOutput {
	return i.ToMigrationAssetArrayOutputWithContext(context.Background())
}

func (i MigrationAssetArray) ToMigrationAssetArrayOutputWithContext(ctx context.Context) MigrationAssetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationAssetArrayOutput)
}

// MigrationAssetMapInput is an input type that accepts MigrationAssetMap and MigrationAssetMapOutput values.
// You can construct a concrete instance of `MigrationAssetMapInput` via:
//
//	MigrationAssetMap{ "key": MigrationAssetArgs{...} }
type MigrationAssetMapInput interface {
	pulumi.Input

	ToMigrationAssetMapOutput() MigrationAssetMapOutput
	ToMigrationAssetMapOutputWithContext(context.Context) MigrationAssetMapOutput
}

type MigrationAssetMap map[string]MigrationAssetInput

func (MigrationAssetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MigrationAsset)(nil)).Elem()
}

func (i MigrationAssetMap) ToMigrationAssetMapOutput() MigrationAssetMapOutput {
	return i.ToMigrationAssetMapOutputWithContext(context.Background())
}

func (i MigrationAssetMap) ToMigrationAssetMapOutputWithContext(ctx context.Context) MigrationAssetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationAssetMapOutput)
}

type MigrationAssetOutput struct{ *pulumi.OutputState }

func (MigrationAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationAsset)(nil)).Elem()
}

func (o MigrationAssetOutput) ToMigrationAssetOutput() MigrationAssetOutput {
	return o
}

func (o MigrationAssetOutput) ToMigrationAssetOutputWithContext(ctx context.Context) MigrationAssetOutput {
	return o
}

// Availability domain
func (o MigrationAssetOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// Compartment Identifier
func (o MigrationAssetOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// List of migration assets that depend on the asset.
func (o MigrationAssetOutput) DependedOnBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringArrayOutput { return v.DependedOnBies }).(pulumi.StringArrayOutput)
}

// (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o MigrationAssetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// OCID of an asset for an inventory.
func (o MigrationAssetOutput) InventoryAssetId() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.InventoryAssetId }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
func (o MigrationAssetOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o MigrationAssetOutput) MigrationAssetDependsOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringArrayOutput { return v.MigrationAssetDependsOns }).(pulumi.StringArrayOutput)
}

// OCID of the associated migration.
func (o MigrationAssetOutput) MigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.MigrationId }).(pulumi.StringOutput)
}

// List of notifications
func (o MigrationAssetOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringArrayOutput { return v.Notifications }).(pulumi.StringArrayOutput)
}

// The parent snapshot of the migration asset to be used by the replication task.
func (o MigrationAssetOutput) ParentSnapshot() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.ParentSnapshot }).(pulumi.StringOutput)
}

// Replication compartment identifier
func (o MigrationAssetOutput) ReplicationCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.ReplicationCompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Replication schedule identifier
func (o MigrationAssetOutput) ReplicationScheduleId() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.ReplicationScheduleId }).(pulumi.StringOutput)
}

// Name of snapshot bucket
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o MigrationAssetOutput) SnapShotBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.SnapShotBucketName }).(pulumi.StringOutput)
}

// Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{"bar-key": "value"}`
func (o MigrationAssetOutput) Snapshots() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringMapOutput { return v.Snapshots }).(pulumi.StringMapOutput)
}

// OCID that is referenced to an asset for an inventory.
func (o MigrationAssetOutput) SourceAssetId() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.SourceAssetId }).(pulumi.StringOutput)
}

// The current state of the migration asset.
func (o MigrationAssetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Tenancy identifier
func (o MigrationAssetOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.TenancyId }).(pulumi.StringOutput)
}

// The time when the migration asset was created. An RFC3339 formatted datetime string.
func (o MigrationAssetOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the migration asset was updated. An RFC3339 formatted datetime string.
func (o MigrationAssetOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The type of asset referenced for inventory.
func (o MigrationAssetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationAsset) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type MigrationAssetArrayOutput struct{ *pulumi.OutputState }

func (MigrationAssetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MigrationAsset)(nil)).Elem()
}

func (o MigrationAssetArrayOutput) ToMigrationAssetArrayOutput() MigrationAssetArrayOutput {
	return o
}

func (o MigrationAssetArrayOutput) ToMigrationAssetArrayOutputWithContext(ctx context.Context) MigrationAssetArrayOutput {
	return o
}

func (o MigrationAssetArrayOutput) Index(i pulumi.IntInput) MigrationAssetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MigrationAsset {
		return vs[0].([]*MigrationAsset)[vs[1].(int)]
	}).(MigrationAssetOutput)
}

type MigrationAssetMapOutput struct{ *pulumi.OutputState }

func (MigrationAssetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MigrationAsset)(nil)).Elem()
}

func (o MigrationAssetMapOutput) ToMigrationAssetMapOutput() MigrationAssetMapOutput {
	return o
}

func (o MigrationAssetMapOutput) ToMigrationAssetMapOutputWithContext(ctx context.Context) MigrationAssetMapOutput {
	return o
}

func (o MigrationAssetMapOutput) MapIndex(k pulumi.StringInput) MigrationAssetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MigrationAsset {
		return vs[0].(map[string]*MigrationAsset)[vs[1].(string)]
	}).(MigrationAssetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationAssetInput)(nil)).Elem(), &MigrationAsset{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationAssetArrayInput)(nil)).Elem(), MigrationAssetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationAssetMapInput)(nil)).Elem(), MigrationAssetMap{})
	pulumi.RegisterOutputType(MigrationAssetOutput{})
	pulumi.RegisterOutputType(MigrationAssetArrayOutput{})
	pulumi.RegisterOutputType(MigrationAssetMapOutput{})
}
