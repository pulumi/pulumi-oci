// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudmigrations

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Target Asset resource in Oracle Cloud Infrastructure Cloud Migrations service.
//
// Creates a target asset.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/CloudMigrations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := CloudMigrations.NewTargetAsset(ctx, "testTargetAsset", &CloudMigrations.TargetAssetArgs{
//				IsExcludedFromExecution: pulumi.Any(_var.Target_asset_is_excluded_from_execution),
//				MigrationPlanId:         pulumi.Any(oci_cloud_migrations_migration_plan.Test_migration_plan.Id),
//				PreferredShapeType:      pulumi.Any(_var.Target_asset_preferred_shape_type),
//				Type:                    pulumi.Any(_var.Target_asset_type),
//				UserSpec: &cloudmigrations.TargetAssetUserSpecArgs{
//					AgentConfig: &cloudmigrations.TargetAssetUserSpecAgentConfigArgs{
//						AreAllPluginsDisabled: pulumi.Any(_var.Target_asset_user_spec_agent_config_are_all_plugins_disabled),
//						IsManagementDisabled:  pulumi.Any(_var.Target_asset_user_spec_agent_config_is_management_disabled),
//						IsMonitoringDisabled:  pulumi.Any(_var.Target_asset_user_spec_agent_config_is_monitoring_disabled),
//						PluginsConfigs: cloudmigrations.TargetAssetUserSpecAgentConfigPluginsConfigArray{
//							&cloudmigrations.TargetAssetUserSpecAgentConfigPluginsConfigArgs{
//								DesiredState: pulumi.Any(_var.Target_asset_user_spec_agent_config_plugins_config_desired_state),
//								Name:         pulumi.Any(_var.Target_asset_user_spec_agent_config_plugins_config_name),
//							},
//						},
//					},
//					AvailabilityDomain:    pulumi.Any(_var.Target_asset_user_spec_availability_domain),
//					CapacityReservationId: pulumi.Any(oci_cloud_migrations_capacity_reservation.Test_capacity_reservation.Id),
//					CompartmentId:         pulumi.Any(_var.Compartment_id),
//					CreateVnicDetails: &cloudmigrations.TargetAssetUserSpecCreateVnicDetailsArgs{
//						AssignPrivateDnsRecord: pulumi.Any(_var.Target_asset_user_spec_create_vnic_details_assign_private_dns_record),
//						AssignPublicIp:         pulumi.Any(_var.Target_asset_user_spec_create_vnic_details_assign_public_ip),
//						DefinedTags: pulumi.AnyMap{
//							"foo-namespace.bar-key": pulumi.Any("value"),
//						},
//						DisplayName: pulumi.Any(_var.Target_asset_user_spec_create_vnic_details_display_name),
//						FreeformTags: pulumi.AnyMap{
//							"bar-key": pulumi.Any("value"),
//						},
//						HostnameLabel:       pulumi.Any(_var.Target_asset_user_spec_create_vnic_details_hostname_label),
//						NsgIds:              pulumi.Any(_var.Target_asset_user_spec_create_vnic_details_nsg_ids),
//						PrivateIp:           pulumi.Any(_var.Target_asset_user_spec_create_vnic_details_private_ip),
//						SkipSourceDestCheck: pulumi.Any(_var.Target_asset_user_spec_create_vnic_details_skip_source_dest_check),
//						SubnetId:            pulumi.Any(oci_core_subnet.Test_subnet.Id),
//						VlanId:              pulumi.Any(oci_core_vlan.Test_vlan.Id),
//					},
//					DedicatedVmHostId: pulumi.Any(oci_core_dedicated_vm_host.Test_dedicated_vm_host.Id),
//					DefinedTags: pulumi.AnyMap{
//						"foo-namespace.bar-key": pulumi.Any("value"),
//					},
//					DisplayName: pulumi.Any(_var.Target_asset_user_spec_display_name),
//					FaultDomain: pulumi.Any(_var.Target_asset_user_spec_fault_domain),
//					FreeformTags: pulumi.AnyMap{
//						"bar-key": pulumi.Any("value"),
//					},
//					HostnameLabel: pulumi.Any(_var.Target_asset_user_spec_hostname_label),
//					InstanceOptions: &cloudmigrations.TargetAssetUserSpecInstanceOptionsArgs{
//						AreLegacyImdsEndpointsDisabled: pulumi.Any(_var.Target_asset_user_spec_instance_options_are_legacy_imds_endpoints_disabled),
//					},
//					IpxeScript:                     pulumi.Any(_var.Target_asset_user_spec_ipxe_script),
//					IsPvEncryptionInTransitEnabled: pulumi.Any(_var.Target_asset_user_spec_is_pv_encryption_in_transit_enabled),
//					PreemptibleInstanceConfig: &cloudmigrations.TargetAssetUserSpecPreemptibleInstanceConfigArgs{
//						PreemptionAction: &cloudmigrations.TargetAssetUserSpecPreemptibleInstanceConfigPreemptionActionArgs{
//							Type:               pulumi.Any(_var.Target_asset_user_spec_preemptible_instance_config_preemption_action_type),
//							PreserveBootVolume: pulumi.Any(_var.Target_asset_user_spec_preemptible_instance_config_preemption_action_preserve_boot_volume),
//						},
//					},
//					Shape: pulumi.Any(_var.Target_asset_user_spec_shape),
//					ShapeConfig: &cloudmigrations.TargetAssetUserSpecShapeConfigArgs{
//						BaselineOcpuUtilization: pulumi.Any(_var.Target_asset_user_spec_shape_config_baseline_ocpu_utilization),
//						MemoryInGbs:             pulumi.Any(_var.Target_asset_user_spec_shape_config_memory_in_gbs),
//						Ocpus:                   pulumi.Any(_var.Target_asset_user_spec_shape_config_ocpus),
//					},
//					SourceDetails: &cloudmigrations.TargetAssetUserSpecSourceDetailsArgs{
//						SourceType:          pulumi.Any(_var.Target_asset_user_spec_source_details_source_type),
//						BootVolumeId:        pulumi.Any(oci_core_boot_volume.Test_boot_volume.Id),
//						BootVolumeSizeInGbs: pulumi.Any(_var.Target_asset_user_spec_source_details_boot_volume_size_in_gbs),
//						BootVolumeVpusPerGb: pulumi.Any(_var.Target_asset_user_spec_source_details_boot_volume_vpus_per_gb),
//						ImageId:             pulumi.Any(oci_core_image.Test_image.Id),
//						KmsKeyId:            pulumi.Any(oci_kms_key.Test_key.Id),
//					},
//				},
//				BlockVolumesPerformance: pulumi.Any(_var.Target_asset_block_volumes_performance),
//				MsLicense:               pulumi.Any(_var.Target_asset_ms_license),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// TargetAssets can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:CloudMigrations/targetAsset:TargetAsset test_target_asset "id"
//
// ```
type TargetAsset struct {
	pulumi.CustomResourceState

	// (Updatable) Performance of the block volumes.
	BlockVolumesPerformance pulumi.IntOutput `pulumi:"blockVolumesPerformance"`
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Messages about the compatibility issues.
	CompatibilityMessages TargetAssetCompatibilityMessageArrayOutput `pulumi:"compatibilityMessages"`
	// Created resource identifier
	CreatedResourceId pulumi.StringOutput `pulumi:"createdResourceId"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Cost estimation description
	EstimatedCosts TargetAssetEstimatedCostArrayOutput `pulumi:"estimatedCosts"`
	// (Updatable) A boolean indicating whether the asset should be migrated.
	IsExcludedFromExecution pulumi.BoolOutput `pulumi:"isExcludedFromExecution"`
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Description of the migration asset.
	MigrationAssets TargetAssetMigrationAssetArrayOutput `pulumi:"migrationAssets"`
	// OCID of the associated migration plan.
	MigrationPlanId pulumi.StringOutput `pulumi:"migrationPlanId"`
	// (Updatable) Microsoft license for the VM configuration.
	MsLicense pulumi.StringOutput `pulumi:"msLicense"`
	// (Updatable) Preferred VM shape type that you provide.
	PreferredShapeType pulumi.StringOutput `pulumi:"preferredShapeType"`
	// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	RecommendedSpecs TargetAssetRecommendedSpecArrayOutput `pulumi:"recommendedSpecs"`
	// The current state of the target asset.
	State pulumi.StringOutput `pulumi:"state"`
	// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	TestSpecs TargetAssetTestSpecArrayOutput `pulumi:"testSpecs"`
	// The time when the assessment was done. An RFC3339 formatted datetime string.
	TimeAssessed pulumi.StringOutput `pulumi:"timeAssessed"`
	// The time when the target asset was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time when the target asset was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) The type of action to run when the instance is interrupted for eviction.
	Type pulumi.StringOutput `pulumi:"type"`
	// (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	UserSpec TargetAssetUserSpecOutput `pulumi:"userSpec"`
}

// NewTargetAsset registers a new resource with the given unique name, arguments, and options.
func NewTargetAsset(ctx *pulumi.Context,
	name string, args *TargetAssetArgs, opts ...pulumi.ResourceOption) (*TargetAsset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IsExcludedFromExecution == nil {
		return nil, errors.New("invalid value for required argument 'IsExcludedFromExecution'")
	}
	if args.MigrationPlanId == nil {
		return nil, errors.New("invalid value for required argument 'MigrationPlanId'")
	}
	if args.PreferredShapeType == nil {
		return nil, errors.New("invalid value for required argument 'PreferredShapeType'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.UserSpec == nil {
		return nil, errors.New("invalid value for required argument 'UserSpec'")
	}
	var resource TargetAsset
	err := ctx.RegisterResource("oci:CloudMigrations/targetAsset:TargetAsset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTargetAsset gets an existing TargetAsset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTargetAsset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TargetAssetState, opts ...pulumi.ResourceOption) (*TargetAsset, error) {
	var resource TargetAsset
	err := ctx.ReadResource("oci:CloudMigrations/targetAsset:TargetAsset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TargetAsset resources.
type targetAssetState struct {
	// (Updatable) Performance of the block volumes.
	BlockVolumesPerformance *int `pulumi:"blockVolumesPerformance"`
	// (Updatable) The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// Messages about the compatibility issues.
	CompatibilityMessages []TargetAssetCompatibilityMessage `pulumi:"compatibilityMessages"`
	// Created resource identifier
	CreatedResourceId *string `pulumi:"createdResourceId"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// Cost estimation description
	EstimatedCosts []TargetAssetEstimatedCost `pulumi:"estimatedCosts"`
	// (Updatable) A boolean indicating whether the asset should be migrated.
	IsExcludedFromExecution *bool `pulumi:"isExcludedFromExecution"`
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Description of the migration asset.
	MigrationAssets []TargetAssetMigrationAsset `pulumi:"migrationAssets"`
	// OCID of the associated migration plan.
	MigrationPlanId *string `pulumi:"migrationPlanId"`
	// (Updatable) Microsoft license for the VM configuration.
	MsLicense *string `pulumi:"msLicense"`
	// (Updatable) Preferred VM shape type that you provide.
	PreferredShapeType *string `pulumi:"preferredShapeType"`
	// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	RecommendedSpecs []TargetAssetRecommendedSpec `pulumi:"recommendedSpecs"`
	// The current state of the target asset.
	State *string `pulumi:"state"`
	// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	TestSpecs []TargetAssetTestSpec `pulumi:"testSpecs"`
	// The time when the assessment was done. An RFC3339 formatted datetime string.
	TimeAssessed *string `pulumi:"timeAssessed"`
	// The time when the target asset was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when the target asset was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) The type of action to run when the instance is interrupted for eviction.
	Type *string `pulumi:"type"`
	// (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	UserSpec *TargetAssetUserSpec `pulumi:"userSpec"`
}

type TargetAssetState struct {
	// (Updatable) Performance of the block volumes.
	BlockVolumesPerformance pulumi.IntPtrInput
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// Messages about the compatibility issues.
	CompatibilityMessages TargetAssetCompatibilityMessageArrayInput
	// Created resource identifier
	CreatedResourceId pulumi.StringPtrInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// Cost estimation description
	EstimatedCosts TargetAssetEstimatedCostArrayInput
	// (Updatable) A boolean indicating whether the asset should be migrated.
	IsExcludedFromExecution pulumi.BoolPtrInput
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// Description of the migration asset.
	MigrationAssets TargetAssetMigrationAssetArrayInput
	// OCID of the associated migration plan.
	MigrationPlanId pulumi.StringPtrInput
	// (Updatable) Microsoft license for the VM configuration.
	MsLicense pulumi.StringPtrInput
	// (Updatable) Preferred VM shape type that you provide.
	PreferredShapeType pulumi.StringPtrInput
	// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	RecommendedSpecs TargetAssetRecommendedSpecArrayInput
	// The current state of the target asset.
	State pulumi.StringPtrInput
	// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	TestSpecs TargetAssetTestSpecArrayInput
	// The time when the assessment was done. An RFC3339 formatted datetime string.
	TimeAssessed pulumi.StringPtrInput
	// The time when the target asset was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time when the target asset was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) The type of action to run when the instance is interrupted for eviction.
	Type pulumi.StringPtrInput
	// (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	UserSpec TargetAssetUserSpecPtrInput
}

func (TargetAssetState) ElementType() reflect.Type {
	return reflect.TypeOf((*targetAssetState)(nil)).Elem()
}

type targetAssetArgs struct {
	// (Updatable) Performance of the block volumes.
	BlockVolumesPerformance *int `pulumi:"blockVolumesPerformance"`
	// (Updatable) A boolean indicating whether the asset should be migrated.
	IsExcludedFromExecution bool `pulumi:"isExcludedFromExecution"`
	// OCID of the associated migration plan.
	MigrationPlanId string `pulumi:"migrationPlanId"`
	// (Updatable) Microsoft license for the VM configuration.
	MsLicense *string `pulumi:"msLicense"`
	// (Updatable) Preferred VM shape type that you provide.
	PreferredShapeType string `pulumi:"preferredShapeType"`
	// (Updatable) The type of action to run when the instance is interrupted for eviction.
	Type string `pulumi:"type"`
	// (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	UserSpec TargetAssetUserSpec `pulumi:"userSpec"`
}

// The set of arguments for constructing a TargetAsset resource.
type TargetAssetArgs struct {
	// (Updatable) Performance of the block volumes.
	BlockVolumesPerformance pulumi.IntPtrInput
	// (Updatable) A boolean indicating whether the asset should be migrated.
	IsExcludedFromExecution pulumi.BoolInput
	// OCID of the associated migration plan.
	MigrationPlanId pulumi.StringInput
	// (Updatable) Microsoft license for the VM configuration.
	MsLicense pulumi.StringPtrInput
	// (Updatable) Preferred VM shape type that you provide.
	PreferredShapeType pulumi.StringInput
	// (Updatable) The type of action to run when the instance is interrupted for eviction.
	Type pulumi.StringInput
	// (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
	UserSpec TargetAssetUserSpecInput
}

func (TargetAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*targetAssetArgs)(nil)).Elem()
}

type TargetAssetInput interface {
	pulumi.Input

	ToTargetAssetOutput() TargetAssetOutput
	ToTargetAssetOutputWithContext(ctx context.Context) TargetAssetOutput
}

func (*TargetAsset) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetAsset)(nil)).Elem()
}

func (i *TargetAsset) ToTargetAssetOutput() TargetAssetOutput {
	return i.ToTargetAssetOutputWithContext(context.Background())
}

func (i *TargetAsset) ToTargetAssetOutputWithContext(ctx context.Context) TargetAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetAssetOutput)
}

// TargetAssetArrayInput is an input type that accepts TargetAssetArray and TargetAssetArrayOutput values.
// You can construct a concrete instance of `TargetAssetArrayInput` via:
//
//	TargetAssetArray{ TargetAssetArgs{...} }
type TargetAssetArrayInput interface {
	pulumi.Input

	ToTargetAssetArrayOutput() TargetAssetArrayOutput
	ToTargetAssetArrayOutputWithContext(context.Context) TargetAssetArrayOutput
}

type TargetAssetArray []TargetAssetInput

func (TargetAssetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TargetAsset)(nil)).Elem()
}

func (i TargetAssetArray) ToTargetAssetArrayOutput() TargetAssetArrayOutput {
	return i.ToTargetAssetArrayOutputWithContext(context.Background())
}

func (i TargetAssetArray) ToTargetAssetArrayOutputWithContext(ctx context.Context) TargetAssetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetAssetArrayOutput)
}

// TargetAssetMapInput is an input type that accepts TargetAssetMap and TargetAssetMapOutput values.
// You can construct a concrete instance of `TargetAssetMapInput` via:
//
//	TargetAssetMap{ "key": TargetAssetArgs{...} }
type TargetAssetMapInput interface {
	pulumi.Input

	ToTargetAssetMapOutput() TargetAssetMapOutput
	ToTargetAssetMapOutputWithContext(context.Context) TargetAssetMapOutput
}

type TargetAssetMap map[string]TargetAssetInput

func (TargetAssetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TargetAsset)(nil)).Elem()
}

func (i TargetAssetMap) ToTargetAssetMapOutput() TargetAssetMapOutput {
	return i.ToTargetAssetMapOutputWithContext(context.Background())
}

func (i TargetAssetMap) ToTargetAssetMapOutputWithContext(ctx context.Context) TargetAssetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetAssetMapOutput)
}

type TargetAssetOutput struct{ *pulumi.OutputState }

func (TargetAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetAsset)(nil)).Elem()
}

func (o TargetAssetOutput) ToTargetAssetOutput() TargetAssetOutput {
	return o
}

func (o TargetAssetOutput) ToTargetAssetOutputWithContext(ctx context.Context) TargetAssetOutput {
	return o
}

// (Updatable) Performance of the block volumes.
func (o TargetAssetOutput) BlockVolumesPerformance() pulumi.IntOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.IntOutput { return v.BlockVolumesPerformance }).(pulumi.IntOutput)
}

// (Updatable) The OCID of the compartment.
func (o TargetAssetOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Messages about the compatibility issues.
func (o TargetAssetOutput) CompatibilityMessages() TargetAssetCompatibilityMessageArrayOutput {
	return o.ApplyT(func(v *TargetAsset) TargetAssetCompatibilityMessageArrayOutput { return v.CompatibilityMessages }).(TargetAssetCompatibilityMessageArrayOutput)
}

// Created resource identifier
func (o TargetAssetOutput) CreatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.CreatedResourceId }).(pulumi.StringOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o TargetAssetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Cost estimation description
func (o TargetAssetOutput) EstimatedCosts() TargetAssetEstimatedCostArrayOutput {
	return o.ApplyT(func(v *TargetAsset) TargetAssetEstimatedCostArrayOutput { return v.EstimatedCosts }).(TargetAssetEstimatedCostArrayOutput)
}

// (Updatable) A boolean indicating whether the asset should be migrated.
func (o TargetAssetOutput) IsExcludedFromExecution() pulumi.BoolOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.BoolOutput { return v.IsExcludedFromExecution }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
func (o TargetAssetOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Description of the migration asset.
func (o TargetAssetOutput) MigrationAssets() TargetAssetMigrationAssetArrayOutput {
	return o.ApplyT(func(v *TargetAsset) TargetAssetMigrationAssetArrayOutput { return v.MigrationAssets }).(TargetAssetMigrationAssetArrayOutput)
}

// OCID of the associated migration plan.
func (o TargetAssetOutput) MigrationPlanId() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.MigrationPlanId }).(pulumi.StringOutput)
}

// (Updatable) Microsoft license for the VM configuration.
func (o TargetAssetOutput) MsLicense() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.MsLicense }).(pulumi.StringOutput)
}

// (Updatable) Preferred VM shape type that you provide.
func (o TargetAssetOutput) PreferredShapeType() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.PreferredShapeType }).(pulumi.StringOutput)
}

// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
func (o TargetAssetOutput) RecommendedSpecs() TargetAssetRecommendedSpecArrayOutput {
	return o.ApplyT(func(v *TargetAsset) TargetAssetRecommendedSpecArrayOutput { return v.RecommendedSpecs }).(TargetAssetRecommendedSpecArrayOutput)
}

// The current state of the target asset.
func (o TargetAssetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
func (o TargetAssetOutput) TestSpecs() TargetAssetTestSpecArrayOutput {
	return o.ApplyT(func(v *TargetAsset) TargetAssetTestSpecArrayOutput { return v.TestSpecs }).(TargetAssetTestSpecArrayOutput)
}

// The time when the assessment was done. An RFC3339 formatted datetime string.
func (o TargetAssetOutput) TimeAssessed() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.TimeAssessed }).(pulumi.StringOutput)
}

// The time when the target asset was created. An RFC3339 formatted datetime string.
func (o TargetAssetOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when the target asset was updated. An RFC3339 formatted datetime string.
func (o TargetAssetOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) The type of action to run when the instance is interrupted for eviction.
func (o TargetAssetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetAsset) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
func (o TargetAssetOutput) UserSpec() TargetAssetUserSpecOutput {
	return o.ApplyT(func(v *TargetAsset) TargetAssetUserSpecOutput { return v.UserSpec }).(TargetAssetUserSpecOutput)
}

type TargetAssetArrayOutput struct{ *pulumi.OutputState }

func (TargetAssetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TargetAsset)(nil)).Elem()
}

func (o TargetAssetArrayOutput) ToTargetAssetArrayOutput() TargetAssetArrayOutput {
	return o
}

func (o TargetAssetArrayOutput) ToTargetAssetArrayOutputWithContext(ctx context.Context) TargetAssetArrayOutput {
	return o
}

func (o TargetAssetArrayOutput) Index(i pulumi.IntInput) TargetAssetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TargetAsset {
		return vs[0].([]*TargetAsset)[vs[1].(int)]
	}).(TargetAssetOutput)
}

type TargetAssetMapOutput struct{ *pulumi.OutputState }

func (TargetAssetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TargetAsset)(nil)).Elem()
}

func (o TargetAssetMapOutput) ToTargetAssetMapOutput() TargetAssetMapOutput {
	return o
}

func (o TargetAssetMapOutput) ToTargetAssetMapOutputWithContext(ctx context.Context) TargetAssetMapOutput {
	return o
}

func (o TargetAssetMapOutput) MapIndex(k pulumi.StringInput) TargetAssetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TargetAsset {
		return vs[0].(map[string]*TargetAsset)[vs[1].(string)]
	}).(TargetAssetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TargetAssetInput)(nil)).Elem(), &TargetAsset{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetAssetArrayInput)(nil)).Elem(), TargetAssetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetAssetMapInput)(nil)).Elem(), TargetAssetMap{})
	pulumi.RegisterOutputType(TargetAssetOutput{})
	pulumi.RegisterOutputType(TargetAssetArrayOutput{})
	pulumi.RegisterOutputType(TargetAssetMapOutput{})
}
