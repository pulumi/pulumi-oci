// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clusterplacementgroups

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Cluster Placement Group resource in Oracle Cloud Infrastructure Cluster Placement Groups service.
//
// Creates a new cluster placement group in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ClusterPlacementGroups"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ClusterPlacementGroups.NewClusterPlacementGroup(ctx, "test_cluster_placement_group", &ClusterPlacementGroups.ClusterPlacementGroupArgs{
//				AvailabilityDomain:        pulumi.Any(clusterPlacementGroupAvailabilityDomain),
//				ClusterPlacementGroupType: pulumi.Any(clusterPlacementGroupClusterPlacementGroupType),
//				CompartmentId:             pulumi.Any(compartmentId),
//				Description:               pulumi.Any(clusterPlacementGroupDescription),
//				Name:                      pulumi.Any(clusterPlacementGroupName),
//				Capabilities: &clusterplacementgroups.ClusterPlacementGroupCapabilitiesArgs{
//					Items: clusterplacementgroups.ClusterPlacementGroupCapabilitiesItemArray{
//						&clusterplacementgroups.ClusterPlacementGroupCapabilitiesItemArgs{
//							Name:    pulumi.Any(clusterPlacementGroupCapabilitiesItemsName),
//							Service: pulumi.Any(clusterPlacementGroupCapabilitiesItemsService),
//						},
//					},
//				},
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//				OpcDryRun: pulumi.Any(clusterPlacementGroupOpcDryRun),
//				PlacementInstruction: &clusterplacementgroups.ClusterPlacementGroupPlacementInstructionArgs{
//					Type:  pulumi.Any(clusterPlacementGroupPlacementInstructionType),
//					Value: pulumi.Any(clusterPlacementGroupPlacementInstructionValue),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ClusterPlacementGroups can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:ClusterPlacementGroups/clusterPlacementGroup:ClusterPlacementGroup test_cluster_placement_group "id"
// ```
type ClusterPlacementGroup struct {
	pulumi.CustomResourceState

	// The availability domain where you want to create the cluster placement group.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// A list of resources that you can create in a cluster placement group.
	Capabilities ClusterPlacementGroupCapabilitiesOutput `pulumi:"capabilities"`
	// ClusterPlacementGroup Identifier.
	ClusterPlacementGroupType pulumi.StringOutput `pulumi:"clusterPlacementGroupType"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the cluster placement group.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A description of the cluster placement group.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, lifecycle details for a resource in a Failed state might include information to act on.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The friendly name of the cluster placement group.
	Name pulumi.StringOutput `pulumi:"name"`
	// When set to `true`, the request performs validation on the submitted data without modifying configuration item details.
	OpcDryRun pulumi.BoolOutput `pulumi:"opcDryRun"`
	// Details that inform cluster placement group provisioning.
	PlacementInstruction ClusterPlacementGroupPlacementInstructionOutput `pulumi:"placementInstruction"`
	// (Updatable) The target state for the Cluster Placement Group. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the cluster placement group was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the cluster placement group was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewClusterPlacementGroup registers a new resource with the given unique name, arguments, and options.
func NewClusterPlacementGroup(ctx *pulumi.Context,
	name string, args *ClusterPlacementGroupArgs, opts ...pulumi.ResourceOption) (*ClusterPlacementGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityDomain == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityDomain'")
	}
	if args.ClusterPlacementGroupType == nil {
		return nil, errors.New("invalid value for required argument 'ClusterPlacementGroupType'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClusterPlacementGroup
	err := ctx.RegisterResource("oci:ClusterPlacementGroups/clusterPlacementGroup:ClusterPlacementGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterPlacementGroup gets an existing ClusterPlacementGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterPlacementGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterPlacementGroupState, opts ...pulumi.ResourceOption) (*ClusterPlacementGroup, error) {
	var resource ClusterPlacementGroup
	err := ctx.ReadResource("oci:ClusterPlacementGroups/clusterPlacementGroup:ClusterPlacementGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterPlacementGroup resources.
type clusterPlacementGroupState struct {
	// The availability domain where you want to create the cluster placement group.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// A list of resources that you can create in a cluster placement group.
	Capabilities *ClusterPlacementGroupCapabilities `pulumi:"capabilities"`
	// ClusterPlacementGroup Identifier.
	ClusterPlacementGroupType *string `pulumi:"clusterPlacementGroupType"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the cluster placement group.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A description of the cluster placement group.
	Description *string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, lifecycle details for a resource in a Failed state might include information to act on.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The friendly name of the cluster placement group.
	Name *string `pulumi:"name"`
	// When set to `true`, the request performs validation on the submitted data without modifying configuration item details.
	OpcDryRun *bool `pulumi:"opcDryRun"`
	// Details that inform cluster placement group provisioning.
	PlacementInstruction *ClusterPlacementGroupPlacementInstruction `pulumi:"placementInstruction"`
	// (Updatable) The target state for the Cluster Placement Group. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the cluster placement group was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the cluster placement group was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type ClusterPlacementGroupState struct {
	// The availability domain where you want to create the cluster placement group.
	AvailabilityDomain pulumi.StringPtrInput
	// A list of resources that you can create in a cluster placement group.
	Capabilities ClusterPlacementGroupCapabilitiesPtrInput
	// ClusterPlacementGroup Identifier.
	ClusterPlacementGroupType pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the cluster placement group.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A description of the cluster placement group.
	Description pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, lifecycle details for a resource in a Failed state might include information to act on.
	LifecycleDetails pulumi.StringPtrInput
	// The friendly name of the cluster placement group.
	Name pulumi.StringPtrInput
	// When set to `true`, the request performs validation on the submitted data without modifying configuration item details.
	OpcDryRun pulumi.BoolPtrInput
	// Details that inform cluster placement group provisioning.
	PlacementInstruction ClusterPlacementGroupPlacementInstructionPtrInput
	// (Updatable) The target state for the Cluster Placement Group. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the cluster placement group was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeCreated pulumi.StringPtrInput
	// The time the cluster placement group was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
	TimeUpdated pulumi.StringPtrInput
}

func (ClusterPlacementGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterPlacementGroupState)(nil)).Elem()
}

type clusterPlacementGroupArgs struct {
	// The availability domain where you want to create the cluster placement group.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// A list of resources that you can create in a cluster placement group.
	Capabilities *ClusterPlacementGroupCapabilities `pulumi:"capabilities"`
	// ClusterPlacementGroup Identifier.
	ClusterPlacementGroupType string `pulumi:"clusterPlacementGroupType"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the cluster placement group.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A description of the cluster placement group.
	Description string `pulumi:"description"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The friendly name of the cluster placement group.
	Name *string `pulumi:"name"`
	// When set to `true`, the request performs validation on the submitted data without modifying configuration item details.
	OpcDryRun *bool `pulumi:"opcDryRun"`
	// Details that inform cluster placement group provisioning.
	PlacementInstruction *ClusterPlacementGroupPlacementInstruction `pulumi:"placementInstruction"`
	// (Updatable) The target state for the Cluster Placement Group. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a ClusterPlacementGroup resource.
type ClusterPlacementGroupArgs struct {
	// The availability domain where you want to create the cluster placement group.
	AvailabilityDomain pulumi.StringInput
	// A list of resources that you can create in a cluster placement group.
	Capabilities ClusterPlacementGroupCapabilitiesPtrInput
	// ClusterPlacementGroup Identifier.
	ClusterPlacementGroupType pulumi.StringInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the cluster placement group.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A description of the cluster placement group.
	Description pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The friendly name of the cluster placement group.
	Name pulumi.StringPtrInput
	// When set to `true`, the request performs validation on the submitted data without modifying configuration item details.
	OpcDryRun pulumi.BoolPtrInput
	// Details that inform cluster placement group provisioning.
	PlacementInstruction ClusterPlacementGroupPlacementInstructionPtrInput
	// (Updatable) The target state for the Cluster Placement Group. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringPtrInput
}

func (ClusterPlacementGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterPlacementGroupArgs)(nil)).Elem()
}

type ClusterPlacementGroupInput interface {
	pulumi.Input

	ToClusterPlacementGroupOutput() ClusterPlacementGroupOutput
	ToClusterPlacementGroupOutputWithContext(ctx context.Context) ClusterPlacementGroupOutput
}

func (*ClusterPlacementGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPlacementGroup)(nil)).Elem()
}

func (i *ClusterPlacementGroup) ToClusterPlacementGroupOutput() ClusterPlacementGroupOutput {
	return i.ToClusterPlacementGroupOutputWithContext(context.Background())
}

func (i *ClusterPlacementGroup) ToClusterPlacementGroupOutputWithContext(ctx context.Context) ClusterPlacementGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPlacementGroupOutput)
}

// ClusterPlacementGroupArrayInput is an input type that accepts ClusterPlacementGroupArray and ClusterPlacementGroupArrayOutput values.
// You can construct a concrete instance of `ClusterPlacementGroupArrayInput` via:
//
//	ClusterPlacementGroupArray{ ClusterPlacementGroupArgs{...} }
type ClusterPlacementGroupArrayInput interface {
	pulumi.Input

	ToClusterPlacementGroupArrayOutput() ClusterPlacementGroupArrayOutput
	ToClusterPlacementGroupArrayOutputWithContext(context.Context) ClusterPlacementGroupArrayOutput
}

type ClusterPlacementGroupArray []ClusterPlacementGroupInput

func (ClusterPlacementGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterPlacementGroup)(nil)).Elem()
}

func (i ClusterPlacementGroupArray) ToClusterPlacementGroupArrayOutput() ClusterPlacementGroupArrayOutput {
	return i.ToClusterPlacementGroupArrayOutputWithContext(context.Background())
}

func (i ClusterPlacementGroupArray) ToClusterPlacementGroupArrayOutputWithContext(ctx context.Context) ClusterPlacementGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPlacementGroupArrayOutput)
}

// ClusterPlacementGroupMapInput is an input type that accepts ClusterPlacementGroupMap and ClusterPlacementGroupMapOutput values.
// You can construct a concrete instance of `ClusterPlacementGroupMapInput` via:
//
//	ClusterPlacementGroupMap{ "key": ClusterPlacementGroupArgs{...} }
type ClusterPlacementGroupMapInput interface {
	pulumi.Input

	ToClusterPlacementGroupMapOutput() ClusterPlacementGroupMapOutput
	ToClusterPlacementGroupMapOutputWithContext(context.Context) ClusterPlacementGroupMapOutput
}

type ClusterPlacementGroupMap map[string]ClusterPlacementGroupInput

func (ClusterPlacementGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterPlacementGroup)(nil)).Elem()
}

func (i ClusterPlacementGroupMap) ToClusterPlacementGroupMapOutput() ClusterPlacementGroupMapOutput {
	return i.ToClusterPlacementGroupMapOutputWithContext(context.Background())
}

func (i ClusterPlacementGroupMap) ToClusterPlacementGroupMapOutputWithContext(ctx context.Context) ClusterPlacementGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPlacementGroupMapOutput)
}

type ClusterPlacementGroupOutput struct{ *pulumi.OutputState }

func (ClusterPlacementGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPlacementGroup)(nil)).Elem()
}

func (o ClusterPlacementGroupOutput) ToClusterPlacementGroupOutput() ClusterPlacementGroupOutput {
	return o
}

func (o ClusterPlacementGroupOutput) ToClusterPlacementGroupOutputWithContext(ctx context.Context) ClusterPlacementGroupOutput {
	return o
}

// The availability domain where you want to create the cluster placement group.
func (o ClusterPlacementGroupOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// A list of resources that you can create in a cluster placement group.
func (o ClusterPlacementGroupOutput) Capabilities() ClusterPlacementGroupCapabilitiesOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) ClusterPlacementGroupCapabilitiesOutput { return v.Capabilities }).(ClusterPlacementGroupCapabilitiesOutput)
}

// ClusterPlacementGroup Identifier.
func (o ClusterPlacementGroupOutput) ClusterPlacementGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.StringOutput { return v.ClusterPlacementGroupType }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the cluster placement group.
func (o ClusterPlacementGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o ClusterPlacementGroupOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A description of the cluster placement group.
func (o ClusterPlacementGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o ClusterPlacementGroupOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// A message describing the current state in more detail. For example, lifecycle details for a resource in a Failed state might include information to act on.
func (o ClusterPlacementGroupOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The friendly name of the cluster placement group.
func (o ClusterPlacementGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// When set to `true`, the request performs validation on the submitted data without modifying configuration item details.
func (o ClusterPlacementGroupOutput) OpcDryRun() pulumi.BoolOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.BoolOutput { return v.OpcDryRun }).(pulumi.BoolOutput)
}

// Details that inform cluster placement group provisioning.
func (o ClusterPlacementGroupOutput) PlacementInstruction() ClusterPlacementGroupPlacementInstructionOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) ClusterPlacementGroupPlacementInstructionOutput {
		return v.PlacementInstruction
	}).(ClusterPlacementGroupPlacementInstructionOutput)
}

// (Updatable) The target state for the Cluster Placement Group. Could be set to `ACTIVE` or `INACTIVE`.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ClusterPlacementGroupOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ClusterPlacementGroupOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the cluster placement group was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
func (o ClusterPlacementGroupOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the cluster placement group was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
func (o ClusterPlacementGroupOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterPlacementGroup) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type ClusterPlacementGroupArrayOutput struct{ *pulumi.OutputState }

func (ClusterPlacementGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterPlacementGroup)(nil)).Elem()
}

func (o ClusterPlacementGroupArrayOutput) ToClusterPlacementGroupArrayOutput() ClusterPlacementGroupArrayOutput {
	return o
}

func (o ClusterPlacementGroupArrayOutput) ToClusterPlacementGroupArrayOutputWithContext(ctx context.Context) ClusterPlacementGroupArrayOutput {
	return o
}

func (o ClusterPlacementGroupArrayOutput) Index(i pulumi.IntInput) ClusterPlacementGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterPlacementGroup {
		return vs[0].([]*ClusterPlacementGroup)[vs[1].(int)]
	}).(ClusterPlacementGroupOutput)
}

type ClusterPlacementGroupMapOutput struct{ *pulumi.OutputState }

func (ClusterPlacementGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterPlacementGroup)(nil)).Elem()
}

func (o ClusterPlacementGroupMapOutput) ToClusterPlacementGroupMapOutput() ClusterPlacementGroupMapOutput {
	return o
}

func (o ClusterPlacementGroupMapOutput) ToClusterPlacementGroupMapOutputWithContext(ctx context.Context) ClusterPlacementGroupMapOutput {
	return o
}

func (o ClusterPlacementGroupMapOutput) MapIndex(k pulumi.StringInput) ClusterPlacementGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterPlacementGroup {
		return vs[0].(map[string]*ClusterPlacementGroup)[vs[1].(string)]
	}).(ClusterPlacementGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPlacementGroupInput)(nil)).Elem(), &ClusterPlacementGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPlacementGroupArrayInput)(nil)).Elem(), ClusterPlacementGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPlacementGroupMapInput)(nil)).Elem(), ClusterPlacementGroupMap{})
	pulumi.RegisterOutputType(ClusterPlacementGroupOutput{})
	pulumi.RegisterOutputType(ClusterPlacementGroupArrayOutput{})
	pulumi.RegisterOutputType(ClusterPlacementGroupMapOutput{})
}
