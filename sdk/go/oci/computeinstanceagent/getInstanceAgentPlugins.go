// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package computeinstanceagent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Instance Agent Plugins in Oracle Cloud Infrastructure Compute Instance Agent service.
//
// The API to get one or more plugin information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ComputeInstanceAgent"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ComputeInstanceAgent.GetInstanceAgentPlugins(ctx, &computeinstanceagent.GetInstanceAgentPluginsArgs{
//				InstanceagentId: oci_computeinstanceagent_instanceagent.Test_instanceagent.Id,
//				Name:            pulumi.StringRef(_var.Instance_agent_plugin_name),
//				Status:          pulumi.StringRef(_var.Instance_agent_plugin_status),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInstanceAgentPlugins(ctx *pulumi.Context, args *GetInstanceAgentPluginsArgs, opts ...pulumi.InvokeOption) (*GetInstanceAgentPluginsResult, error) {
	var rv GetInstanceAgentPluginsResult
	err := ctx.Invoke("oci:ComputeInstanceAgent/getInstanceAgentPlugins:getInstanceAgentPlugins", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceAgentPlugins.
type GetInstanceAgentPluginsArgs struct {
	CompartmentId string                          `pulumi:"compartmentId"`
	Filters       []GetInstanceAgentPluginsFilter `pulumi:"filters"`
	// The OCID of the instance.
	InstanceagentId string `pulumi:"instanceagentId"`
	// The plugin name
	Name *string `pulumi:"name"`
	// The plugin status
	Status *string `pulumi:"status"`
}

// A collection of values returned by getInstanceAgentPlugins.
type GetInstanceAgentPluginsResult struct {
	CompartmentId string                          `pulumi:"compartmentId"`
	Filters       []GetInstanceAgentPluginsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of instance_agent_plugins.
	InstanceAgentPlugins []GetInstanceAgentPluginsInstanceAgentPlugin `pulumi:"instanceAgentPlugins"`
	InstanceagentId      string                                       `pulumi:"instanceagentId"`
	// The plugin name
	Name *string `pulumi:"name"`
	// The plugin status Specified the plugin state on the instance * `RUNNING` - The plugin is in running state * `STOPPED` - The plugin is in stopped state * `NOT_SUPPORTED` - The plugin is not supported on this platform * `INVALID` - The plugin state is not recognizable by the service
	Status *string `pulumi:"status"`
}

func GetInstanceAgentPluginsOutput(ctx *pulumi.Context, args GetInstanceAgentPluginsOutputArgs, opts ...pulumi.InvokeOption) GetInstanceAgentPluginsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceAgentPluginsResult, error) {
			args := v.(GetInstanceAgentPluginsArgs)
			r, err := GetInstanceAgentPlugins(ctx, &args, opts...)
			var s GetInstanceAgentPluginsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceAgentPluginsResultOutput)
}

// A collection of arguments for invoking getInstanceAgentPlugins.
type GetInstanceAgentPluginsOutputArgs struct {
	CompartmentId pulumi.StringInput                      `pulumi:"compartmentId"`
	Filters       GetInstanceAgentPluginsFilterArrayInput `pulumi:"filters"`
	// The OCID of the instance.
	InstanceagentId pulumi.StringInput `pulumi:"instanceagentId"`
	// The plugin name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The plugin status
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetInstanceAgentPluginsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAgentPluginsArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceAgentPlugins.
type GetInstanceAgentPluginsResultOutput struct{ *pulumi.OutputState }

func (GetInstanceAgentPluginsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAgentPluginsResult)(nil)).Elem()
}

func (o GetInstanceAgentPluginsResultOutput) ToGetInstanceAgentPluginsResultOutput() GetInstanceAgentPluginsResultOutput {
	return o
}

func (o GetInstanceAgentPluginsResultOutput) ToGetInstanceAgentPluginsResultOutputWithContext(ctx context.Context) GetInstanceAgentPluginsResultOutput {
	return o
}

func (o GetInstanceAgentPluginsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetInstanceAgentPluginsResultOutput) Filters() GetInstanceAgentPluginsFilterArrayOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsResult) []GetInstanceAgentPluginsFilter { return v.Filters }).(GetInstanceAgentPluginsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceAgentPluginsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of instance_agent_plugins.
func (o GetInstanceAgentPluginsResultOutput) InstanceAgentPlugins() GetInstanceAgentPluginsInstanceAgentPluginArrayOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsResult) []GetInstanceAgentPluginsInstanceAgentPlugin {
		return v.InstanceAgentPlugins
	}).(GetInstanceAgentPluginsInstanceAgentPluginArrayOutput)
}

func (o GetInstanceAgentPluginsResultOutput) InstanceagentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsResult) string { return v.InstanceagentId }).(pulumi.StringOutput)
}

// The plugin name
func (o GetInstanceAgentPluginsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The plugin status Specified the plugin state on the instance * `RUNNING` - The plugin is in running state * `STOPPED` - The plugin is in stopped state * `NOT_SUPPORTED` - The plugin is not supported on this platform * `INVALID` - The plugin state is not recognizable by the service
func (o GetInstanceAgentPluginsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceAgentPluginsResultOutput{})
}
