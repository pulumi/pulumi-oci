// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package computeinstanceagent

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetInstanceAgentPluginsFilter struct {
	// The plugin name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetInstanceAgentPluginsFilterInput is an input type that accepts GetInstanceAgentPluginsFilterArgs and GetInstanceAgentPluginsFilterOutput values.
// You can construct a concrete instance of `GetInstanceAgentPluginsFilterInput` via:
//
//	GetInstanceAgentPluginsFilterArgs{...}
type GetInstanceAgentPluginsFilterInput interface {
	pulumi.Input

	ToGetInstanceAgentPluginsFilterOutput() GetInstanceAgentPluginsFilterOutput
	ToGetInstanceAgentPluginsFilterOutputWithContext(context.Context) GetInstanceAgentPluginsFilterOutput
}

type GetInstanceAgentPluginsFilterArgs struct {
	// The plugin name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceAgentPluginsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAgentPluginsFilter)(nil)).Elem()
}

func (i GetInstanceAgentPluginsFilterArgs) ToGetInstanceAgentPluginsFilterOutput() GetInstanceAgentPluginsFilterOutput {
	return i.ToGetInstanceAgentPluginsFilterOutputWithContext(context.Background())
}

func (i GetInstanceAgentPluginsFilterArgs) ToGetInstanceAgentPluginsFilterOutputWithContext(ctx context.Context) GetInstanceAgentPluginsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAgentPluginsFilterOutput)
}

// GetInstanceAgentPluginsFilterArrayInput is an input type that accepts GetInstanceAgentPluginsFilterArray and GetInstanceAgentPluginsFilterArrayOutput values.
// You can construct a concrete instance of `GetInstanceAgentPluginsFilterArrayInput` via:
//
//	GetInstanceAgentPluginsFilterArray{ GetInstanceAgentPluginsFilterArgs{...} }
type GetInstanceAgentPluginsFilterArrayInput interface {
	pulumi.Input

	ToGetInstanceAgentPluginsFilterArrayOutput() GetInstanceAgentPluginsFilterArrayOutput
	ToGetInstanceAgentPluginsFilterArrayOutputWithContext(context.Context) GetInstanceAgentPluginsFilterArrayOutput
}

type GetInstanceAgentPluginsFilterArray []GetInstanceAgentPluginsFilterInput

func (GetInstanceAgentPluginsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAgentPluginsFilter)(nil)).Elem()
}

func (i GetInstanceAgentPluginsFilterArray) ToGetInstanceAgentPluginsFilterArrayOutput() GetInstanceAgentPluginsFilterArrayOutput {
	return i.ToGetInstanceAgentPluginsFilterArrayOutputWithContext(context.Background())
}

func (i GetInstanceAgentPluginsFilterArray) ToGetInstanceAgentPluginsFilterArrayOutputWithContext(ctx context.Context) GetInstanceAgentPluginsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAgentPluginsFilterArrayOutput)
}

type GetInstanceAgentPluginsFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceAgentPluginsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAgentPluginsFilter)(nil)).Elem()
}

func (o GetInstanceAgentPluginsFilterOutput) ToGetInstanceAgentPluginsFilterOutput() GetInstanceAgentPluginsFilterOutput {
	return o
}

func (o GetInstanceAgentPluginsFilterOutput) ToGetInstanceAgentPluginsFilterOutputWithContext(ctx context.Context) GetInstanceAgentPluginsFilterOutput {
	return o
}

// The plugin name
func (o GetInstanceAgentPluginsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstanceAgentPluginsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetInstanceAgentPluginsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceAgentPluginsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceAgentPluginsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAgentPluginsFilter)(nil)).Elem()
}

func (o GetInstanceAgentPluginsFilterArrayOutput) ToGetInstanceAgentPluginsFilterArrayOutput() GetInstanceAgentPluginsFilterArrayOutput {
	return o
}

func (o GetInstanceAgentPluginsFilterArrayOutput) ToGetInstanceAgentPluginsFilterArrayOutputWithContext(ctx context.Context) GetInstanceAgentPluginsFilterArrayOutput {
	return o
}

func (o GetInstanceAgentPluginsFilterArrayOutput) Index(i pulumi.IntInput) GetInstanceAgentPluginsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceAgentPluginsFilter {
		return vs[0].([]GetInstanceAgentPluginsFilter)[vs[1].(int)]
	}).(GetInstanceAgentPluginsFilterOutput)
}

type GetInstanceAgentPluginsInstanceAgentPlugin struct {
	// The optional message from the agent plugin
	Message string `pulumi:"message"`
	// The plugin name
	Name string `pulumi:"name"`
	// The plugin status
	Status string `pulumi:"status"`
	// The last update time of the plugin in UTC
	TimeLastUpdatedUtc string `pulumi:"timeLastUpdatedUtc"`
}

// GetInstanceAgentPluginsInstanceAgentPluginInput is an input type that accepts GetInstanceAgentPluginsInstanceAgentPluginArgs and GetInstanceAgentPluginsInstanceAgentPluginOutput values.
// You can construct a concrete instance of `GetInstanceAgentPluginsInstanceAgentPluginInput` via:
//
//	GetInstanceAgentPluginsInstanceAgentPluginArgs{...}
type GetInstanceAgentPluginsInstanceAgentPluginInput interface {
	pulumi.Input

	ToGetInstanceAgentPluginsInstanceAgentPluginOutput() GetInstanceAgentPluginsInstanceAgentPluginOutput
	ToGetInstanceAgentPluginsInstanceAgentPluginOutputWithContext(context.Context) GetInstanceAgentPluginsInstanceAgentPluginOutput
}

type GetInstanceAgentPluginsInstanceAgentPluginArgs struct {
	// The optional message from the agent plugin
	Message pulumi.StringInput `pulumi:"message"`
	// The plugin name
	Name pulumi.StringInput `pulumi:"name"`
	// The plugin status
	Status pulumi.StringInput `pulumi:"status"`
	// The last update time of the plugin in UTC
	TimeLastUpdatedUtc pulumi.StringInput `pulumi:"timeLastUpdatedUtc"`
}

func (GetInstanceAgentPluginsInstanceAgentPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAgentPluginsInstanceAgentPlugin)(nil)).Elem()
}

func (i GetInstanceAgentPluginsInstanceAgentPluginArgs) ToGetInstanceAgentPluginsInstanceAgentPluginOutput() GetInstanceAgentPluginsInstanceAgentPluginOutput {
	return i.ToGetInstanceAgentPluginsInstanceAgentPluginOutputWithContext(context.Background())
}

func (i GetInstanceAgentPluginsInstanceAgentPluginArgs) ToGetInstanceAgentPluginsInstanceAgentPluginOutputWithContext(ctx context.Context) GetInstanceAgentPluginsInstanceAgentPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAgentPluginsInstanceAgentPluginOutput)
}

// GetInstanceAgentPluginsInstanceAgentPluginArrayInput is an input type that accepts GetInstanceAgentPluginsInstanceAgentPluginArray and GetInstanceAgentPluginsInstanceAgentPluginArrayOutput values.
// You can construct a concrete instance of `GetInstanceAgentPluginsInstanceAgentPluginArrayInput` via:
//
//	GetInstanceAgentPluginsInstanceAgentPluginArray{ GetInstanceAgentPluginsInstanceAgentPluginArgs{...} }
type GetInstanceAgentPluginsInstanceAgentPluginArrayInput interface {
	pulumi.Input

	ToGetInstanceAgentPluginsInstanceAgentPluginArrayOutput() GetInstanceAgentPluginsInstanceAgentPluginArrayOutput
	ToGetInstanceAgentPluginsInstanceAgentPluginArrayOutputWithContext(context.Context) GetInstanceAgentPluginsInstanceAgentPluginArrayOutput
}

type GetInstanceAgentPluginsInstanceAgentPluginArray []GetInstanceAgentPluginsInstanceAgentPluginInput

func (GetInstanceAgentPluginsInstanceAgentPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAgentPluginsInstanceAgentPlugin)(nil)).Elem()
}

func (i GetInstanceAgentPluginsInstanceAgentPluginArray) ToGetInstanceAgentPluginsInstanceAgentPluginArrayOutput() GetInstanceAgentPluginsInstanceAgentPluginArrayOutput {
	return i.ToGetInstanceAgentPluginsInstanceAgentPluginArrayOutputWithContext(context.Background())
}

func (i GetInstanceAgentPluginsInstanceAgentPluginArray) ToGetInstanceAgentPluginsInstanceAgentPluginArrayOutputWithContext(ctx context.Context) GetInstanceAgentPluginsInstanceAgentPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAgentPluginsInstanceAgentPluginArrayOutput)
}

type GetInstanceAgentPluginsInstanceAgentPluginOutput struct{ *pulumi.OutputState }

func (GetInstanceAgentPluginsInstanceAgentPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAgentPluginsInstanceAgentPlugin)(nil)).Elem()
}

func (o GetInstanceAgentPluginsInstanceAgentPluginOutput) ToGetInstanceAgentPluginsInstanceAgentPluginOutput() GetInstanceAgentPluginsInstanceAgentPluginOutput {
	return o
}

func (o GetInstanceAgentPluginsInstanceAgentPluginOutput) ToGetInstanceAgentPluginsInstanceAgentPluginOutputWithContext(ctx context.Context) GetInstanceAgentPluginsInstanceAgentPluginOutput {
	return o
}

// The optional message from the agent plugin
func (o GetInstanceAgentPluginsInstanceAgentPluginOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsInstanceAgentPlugin) string { return v.Message }).(pulumi.StringOutput)
}

// The plugin name
func (o GetInstanceAgentPluginsInstanceAgentPluginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsInstanceAgentPlugin) string { return v.Name }).(pulumi.StringOutput)
}

// The plugin status
func (o GetInstanceAgentPluginsInstanceAgentPluginOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsInstanceAgentPlugin) string { return v.Status }).(pulumi.StringOutput)
}

// The last update time of the plugin in UTC
func (o GetInstanceAgentPluginsInstanceAgentPluginOutput) TimeLastUpdatedUtc() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAgentPluginsInstanceAgentPlugin) string { return v.TimeLastUpdatedUtc }).(pulumi.StringOutput)
}

type GetInstanceAgentPluginsInstanceAgentPluginArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceAgentPluginsInstanceAgentPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAgentPluginsInstanceAgentPlugin)(nil)).Elem()
}

func (o GetInstanceAgentPluginsInstanceAgentPluginArrayOutput) ToGetInstanceAgentPluginsInstanceAgentPluginArrayOutput() GetInstanceAgentPluginsInstanceAgentPluginArrayOutput {
	return o
}

func (o GetInstanceAgentPluginsInstanceAgentPluginArrayOutput) ToGetInstanceAgentPluginsInstanceAgentPluginArrayOutputWithContext(ctx context.Context) GetInstanceAgentPluginsInstanceAgentPluginArrayOutput {
	return o
}

func (o GetInstanceAgentPluginsInstanceAgentPluginArrayOutput) Index(i pulumi.IntInput) GetInstanceAgentPluginsInstanceAgentPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceAgentPluginsInstanceAgentPlugin {
		return vs[0].([]GetInstanceAgentPluginsInstanceAgentPlugin)[vs[1].(int)]
	}).(GetInstanceAgentPluginsInstanceAgentPluginOutput)
}

type GetInstanceAvailablePluginAvailablePlugin struct {
	// Is the plugin enabled or disabled by default
	IsEnabledByDefault bool `pulumi:"isEnabledByDefault"`
	// Is the plugin supported or not
	IsSupported bool `pulumi:"isSupported"`
	// The plugin name
	Name string `pulumi:"name"`
	// A brief description of the plugin functionality
	Summary string `pulumi:"summary"`
}

// GetInstanceAvailablePluginAvailablePluginInput is an input type that accepts GetInstanceAvailablePluginAvailablePluginArgs and GetInstanceAvailablePluginAvailablePluginOutput values.
// You can construct a concrete instance of `GetInstanceAvailablePluginAvailablePluginInput` via:
//
//	GetInstanceAvailablePluginAvailablePluginArgs{...}
type GetInstanceAvailablePluginAvailablePluginInput interface {
	pulumi.Input

	ToGetInstanceAvailablePluginAvailablePluginOutput() GetInstanceAvailablePluginAvailablePluginOutput
	ToGetInstanceAvailablePluginAvailablePluginOutputWithContext(context.Context) GetInstanceAvailablePluginAvailablePluginOutput
}

type GetInstanceAvailablePluginAvailablePluginArgs struct {
	// Is the plugin enabled or disabled by default
	IsEnabledByDefault pulumi.BoolInput `pulumi:"isEnabledByDefault"`
	// Is the plugin supported or not
	IsSupported pulumi.BoolInput `pulumi:"isSupported"`
	// The plugin name
	Name pulumi.StringInput `pulumi:"name"`
	// A brief description of the plugin functionality
	Summary pulumi.StringInput `pulumi:"summary"`
}

func (GetInstanceAvailablePluginAvailablePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAvailablePluginAvailablePlugin)(nil)).Elem()
}

func (i GetInstanceAvailablePluginAvailablePluginArgs) ToGetInstanceAvailablePluginAvailablePluginOutput() GetInstanceAvailablePluginAvailablePluginOutput {
	return i.ToGetInstanceAvailablePluginAvailablePluginOutputWithContext(context.Background())
}

func (i GetInstanceAvailablePluginAvailablePluginArgs) ToGetInstanceAvailablePluginAvailablePluginOutputWithContext(ctx context.Context) GetInstanceAvailablePluginAvailablePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAvailablePluginAvailablePluginOutput)
}

// GetInstanceAvailablePluginAvailablePluginArrayInput is an input type that accepts GetInstanceAvailablePluginAvailablePluginArray and GetInstanceAvailablePluginAvailablePluginArrayOutput values.
// You can construct a concrete instance of `GetInstanceAvailablePluginAvailablePluginArrayInput` via:
//
//	GetInstanceAvailablePluginAvailablePluginArray{ GetInstanceAvailablePluginAvailablePluginArgs{...} }
type GetInstanceAvailablePluginAvailablePluginArrayInput interface {
	pulumi.Input

	ToGetInstanceAvailablePluginAvailablePluginArrayOutput() GetInstanceAvailablePluginAvailablePluginArrayOutput
	ToGetInstanceAvailablePluginAvailablePluginArrayOutputWithContext(context.Context) GetInstanceAvailablePluginAvailablePluginArrayOutput
}

type GetInstanceAvailablePluginAvailablePluginArray []GetInstanceAvailablePluginAvailablePluginInput

func (GetInstanceAvailablePluginAvailablePluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAvailablePluginAvailablePlugin)(nil)).Elem()
}

func (i GetInstanceAvailablePluginAvailablePluginArray) ToGetInstanceAvailablePluginAvailablePluginArrayOutput() GetInstanceAvailablePluginAvailablePluginArrayOutput {
	return i.ToGetInstanceAvailablePluginAvailablePluginArrayOutputWithContext(context.Background())
}

func (i GetInstanceAvailablePluginAvailablePluginArray) ToGetInstanceAvailablePluginAvailablePluginArrayOutputWithContext(ctx context.Context) GetInstanceAvailablePluginAvailablePluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAvailablePluginAvailablePluginArrayOutput)
}

type GetInstanceAvailablePluginAvailablePluginOutput struct{ *pulumi.OutputState }

func (GetInstanceAvailablePluginAvailablePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAvailablePluginAvailablePlugin)(nil)).Elem()
}

func (o GetInstanceAvailablePluginAvailablePluginOutput) ToGetInstanceAvailablePluginAvailablePluginOutput() GetInstanceAvailablePluginAvailablePluginOutput {
	return o
}

func (o GetInstanceAvailablePluginAvailablePluginOutput) ToGetInstanceAvailablePluginAvailablePluginOutputWithContext(ctx context.Context) GetInstanceAvailablePluginAvailablePluginOutput {
	return o
}

// Is the plugin enabled or disabled by default
func (o GetInstanceAvailablePluginAvailablePluginOutput) IsEnabledByDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceAvailablePluginAvailablePlugin) bool { return v.IsEnabledByDefault }).(pulumi.BoolOutput)
}

// Is the plugin supported or not
func (o GetInstanceAvailablePluginAvailablePluginOutput) IsSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceAvailablePluginAvailablePlugin) bool { return v.IsSupported }).(pulumi.BoolOutput)
}

// The plugin name
func (o GetInstanceAvailablePluginAvailablePluginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAvailablePluginAvailablePlugin) string { return v.Name }).(pulumi.StringOutput)
}

// A brief description of the plugin functionality
func (o GetInstanceAvailablePluginAvailablePluginOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAvailablePluginAvailablePlugin) string { return v.Summary }).(pulumi.StringOutput)
}

type GetInstanceAvailablePluginAvailablePluginArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceAvailablePluginAvailablePluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAvailablePluginAvailablePlugin)(nil)).Elem()
}

func (o GetInstanceAvailablePluginAvailablePluginArrayOutput) ToGetInstanceAvailablePluginAvailablePluginArrayOutput() GetInstanceAvailablePluginAvailablePluginArrayOutput {
	return o
}

func (o GetInstanceAvailablePluginAvailablePluginArrayOutput) ToGetInstanceAvailablePluginAvailablePluginArrayOutputWithContext(ctx context.Context) GetInstanceAvailablePluginAvailablePluginArrayOutput {
	return o
}

func (o GetInstanceAvailablePluginAvailablePluginArrayOutput) Index(i pulumi.IntInput) GetInstanceAvailablePluginAvailablePluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceAvailablePluginAvailablePlugin {
		return vs[0].([]GetInstanceAvailablePluginAvailablePlugin)[vs[1].(int)]
	}).(GetInstanceAvailablePluginAvailablePluginOutput)
}

type GetInstanceAvailablePluginFilter struct {
	// The plugin name
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetInstanceAvailablePluginFilterInput is an input type that accepts GetInstanceAvailablePluginFilterArgs and GetInstanceAvailablePluginFilterOutput values.
// You can construct a concrete instance of `GetInstanceAvailablePluginFilterInput` via:
//
//	GetInstanceAvailablePluginFilterArgs{...}
type GetInstanceAvailablePluginFilterInput interface {
	pulumi.Input

	ToGetInstanceAvailablePluginFilterOutput() GetInstanceAvailablePluginFilterOutput
	ToGetInstanceAvailablePluginFilterOutputWithContext(context.Context) GetInstanceAvailablePluginFilterOutput
}

type GetInstanceAvailablePluginFilterArgs struct {
	// The plugin name
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceAvailablePluginFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAvailablePluginFilter)(nil)).Elem()
}

func (i GetInstanceAvailablePluginFilterArgs) ToGetInstanceAvailablePluginFilterOutput() GetInstanceAvailablePluginFilterOutput {
	return i.ToGetInstanceAvailablePluginFilterOutputWithContext(context.Background())
}

func (i GetInstanceAvailablePluginFilterArgs) ToGetInstanceAvailablePluginFilterOutputWithContext(ctx context.Context) GetInstanceAvailablePluginFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAvailablePluginFilterOutput)
}

// GetInstanceAvailablePluginFilterArrayInput is an input type that accepts GetInstanceAvailablePluginFilterArray and GetInstanceAvailablePluginFilterArrayOutput values.
// You can construct a concrete instance of `GetInstanceAvailablePluginFilterArrayInput` via:
//
//	GetInstanceAvailablePluginFilterArray{ GetInstanceAvailablePluginFilterArgs{...} }
type GetInstanceAvailablePluginFilterArrayInput interface {
	pulumi.Input

	ToGetInstanceAvailablePluginFilterArrayOutput() GetInstanceAvailablePluginFilterArrayOutput
	ToGetInstanceAvailablePluginFilterArrayOutputWithContext(context.Context) GetInstanceAvailablePluginFilterArrayOutput
}

type GetInstanceAvailablePluginFilterArray []GetInstanceAvailablePluginFilterInput

func (GetInstanceAvailablePluginFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAvailablePluginFilter)(nil)).Elem()
}

func (i GetInstanceAvailablePluginFilterArray) ToGetInstanceAvailablePluginFilterArrayOutput() GetInstanceAvailablePluginFilterArrayOutput {
	return i.ToGetInstanceAvailablePluginFilterArrayOutputWithContext(context.Background())
}

func (i GetInstanceAvailablePluginFilterArray) ToGetInstanceAvailablePluginFilterArrayOutputWithContext(ctx context.Context) GetInstanceAvailablePluginFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAvailablePluginFilterArrayOutput)
}

type GetInstanceAvailablePluginFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceAvailablePluginFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAvailablePluginFilter)(nil)).Elem()
}

func (o GetInstanceAvailablePluginFilterOutput) ToGetInstanceAvailablePluginFilterOutput() GetInstanceAvailablePluginFilterOutput {
	return o
}

func (o GetInstanceAvailablePluginFilterOutput) ToGetInstanceAvailablePluginFilterOutputWithContext(ctx context.Context) GetInstanceAvailablePluginFilterOutput {
	return o
}

// The plugin name
func (o GetInstanceAvailablePluginFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAvailablePluginFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstanceAvailablePluginFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetInstanceAvailablePluginFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetInstanceAvailablePluginFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceAvailablePluginFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceAvailablePluginFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceAvailablePluginFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAvailablePluginFilter)(nil)).Elem()
}

func (o GetInstanceAvailablePluginFilterArrayOutput) ToGetInstanceAvailablePluginFilterArrayOutput() GetInstanceAvailablePluginFilterArrayOutput {
	return o
}

func (o GetInstanceAvailablePluginFilterArrayOutput) ToGetInstanceAvailablePluginFilterArrayOutputWithContext(ctx context.Context) GetInstanceAvailablePluginFilterArrayOutput {
	return o
}

func (o GetInstanceAvailablePluginFilterArrayOutput) Index(i pulumi.IntInput) GetInstanceAvailablePluginFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceAvailablePluginFilter {
		return vs[0].([]GetInstanceAvailablePluginFilter)[vs[1].(int)]
	}).(GetInstanceAvailablePluginFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAgentPluginsFilterInput)(nil)).Elem(), GetInstanceAgentPluginsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAgentPluginsFilterArrayInput)(nil)).Elem(), GetInstanceAgentPluginsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAgentPluginsInstanceAgentPluginInput)(nil)).Elem(), GetInstanceAgentPluginsInstanceAgentPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAgentPluginsInstanceAgentPluginArrayInput)(nil)).Elem(), GetInstanceAgentPluginsInstanceAgentPluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAvailablePluginAvailablePluginInput)(nil)).Elem(), GetInstanceAvailablePluginAvailablePluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAvailablePluginAvailablePluginArrayInput)(nil)).Elem(), GetInstanceAvailablePluginAvailablePluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAvailablePluginFilterInput)(nil)).Elem(), GetInstanceAvailablePluginFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAvailablePluginFilterArrayInput)(nil)).Elem(), GetInstanceAvailablePluginFilterArray{})
	pulumi.RegisterOutputType(GetInstanceAgentPluginsFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceAgentPluginsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceAgentPluginsInstanceAgentPluginOutput{})
	pulumi.RegisterOutputType(GetInstanceAgentPluginsInstanceAgentPluginArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceAvailablePluginAvailablePluginOutput{})
	pulumi.RegisterOutputType(GetInstanceAvailablePluginAvailablePluginArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceAvailablePluginFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceAvailablePluginFilterArrayOutput{})
}
