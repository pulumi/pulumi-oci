// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

var _ = internal.GetEnvOrDefault

// (Optional) The type of auth to use. Options are 'ApiKey', 'SecurityToken', 'InstancePrincipal', 'ResourcePrincipal' and
// 'OKEWorkloadIdentity'. By default, 'ApiKey' will be used.
func GetAuth(ctx *pulumi.Context) string {
	return config.Get(ctx, "oci:auth")
}

// (Optional) The profile name to be used from config file, if not set it will be DEFAULT.
func GetConfigFileProfile(ctx *pulumi.Context) string {
	return config.Get(ctx, "oci:configFileProfile")
}

// (Optional) Disable automatic retries for retriable errors. Automatic retries were introduced to solve some eventual
// consistency problems but it also introduced performance issues on destroy operations.
func GetDisableAutoRetries(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "oci:disableAutoRetries")
}

// (Optional) The fingerprint for the user's RSA key. This can be found in user settings in the Oracle Cloud Infrastructure
// console. Required if auth is set to 'ApiKey', ignored otherwise.
func GetFingerprint(ctx *pulumi.Context) string {
	return config.Get(ctx, "oci:fingerprint")
}
func GetIgnoreDefinedTags(ctx *pulumi.Context) string {
	return config.Get(ctx, "oci:ignoreDefinedTags")
}

// (Optional) A PEM formatted RSA private key for the user. A privateKey or a privateKeyPath must be provided if auth is
// set to 'ApiKey', ignored otherwise.
func GetPrivateKey(ctx *pulumi.Context) string {
	return config.Get(ctx, "oci:privateKey")
}

// (Optional) The password used to secure the private key.
func GetPrivateKeyPassword(ctx *pulumi.Context) string {
	return config.Get(ctx, "oci:privateKeyPassword")
}

// (Optional) The path to the user's PEM formatted private key. A privateKey or a privateKeyPath must be provided if auth
// is set to 'ApiKey', ignored otherwise.
func GetPrivateKeyPath(ctx *pulumi.Context) string {
	return config.Get(ctx, "oci:privateKeyPath")
}

// (Optional) flags to enable realm specific service endpoint.
func GetRealmSpecificServiceEndpointTemplateEnabled(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "oci:realmSpecificServiceEndpointTemplateEnabled")
}

// (Required) The region for API connections (e.g. us-ashburn-1).
func GetRegion(ctx *pulumi.Context) string {
	return config.Get(ctx, "oci:region")
}

// (Optional) The minimum duration (in seconds) to retry a resource operation in response to an error. The actual retry
// duration may be longer due to jittering of retry operations. This value is ignored if the `disableAutoRetries` field is
// set to true.
func GetRetryDurationSeconds(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "oci:retryDurationSeconds")
}

// (Optional) The tenancy OCID for a user. The tenancy OCID can be found at the bottom of user settings in the Oracle Cloud
// Infrastructure console. Required if auth is set to 'ApiKey', ignored otherwise.
func GetTenancyOcid(ctx *pulumi.Context) string {
	return config.Get(ctx, "oci:tenancyOcid")
}
func GetTestTimeMaintenanceRebootDue(ctx *pulumi.Context) string {
	return config.Get(ctx, "oci:testTimeMaintenanceRebootDue")
}

// (Optional) The user OCID. This can be found in user settings in the Oracle Cloud Infrastructure console. Required if
// auth is set to 'ApiKey', ignored otherwise.
func GetUserOcid(ctx *pulumi.Context) string {
	return config.Get(ctx, "oci:userOcid")
}
