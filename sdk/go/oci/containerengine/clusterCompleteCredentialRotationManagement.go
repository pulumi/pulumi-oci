// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerengine

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Cluster Complete Credential Rotation Management resource in Oracle Cloud Infrastructure Container Engine service.
//
// Complete cluster credential rotation. Retire old credentials from kubernetes components.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ContainerEngine"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ContainerEngine.NewClusterCompleteCredentialRotationManagement(ctx, "test_cluster_complete_credential_rotation_management", &ContainerEngine.ClusterCompleteCredentialRotationManagementArgs{
//				ClusterId: pulumi.Any(testCluster.Id),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				testClusterStartCredentialRotationManagement,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type ClusterCompleteCredentialRotationManagement struct {
	pulumi.CustomResourceState

	// The OCID of the cluster.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
}

// NewClusterCompleteCredentialRotationManagement registers a new resource with the given unique name, arguments, and options.
func NewClusterCompleteCredentialRotationManagement(ctx *pulumi.Context,
	name string, args *ClusterCompleteCredentialRotationManagementArgs, opts ...pulumi.ResourceOption) (*ClusterCompleteCredentialRotationManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClusterCompleteCredentialRotationManagement
	err := ctx.RegisterResource("oci:ContainerEngine/clusterCompleteCredentialRotationManagement:ClusterCompleteCredentialRotationManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterCompleteCredentialRotationManagement gets an existing ClusterCompleteCredentialRotationManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterCompleteCredentialRotationManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterCompleteCredentialRotationManagementState, opts ...pulumi.ResourceOption) (*ClusterCompleteCredentialRotationManagement, error) {
	var resource ClusterCompleteCredentialRotationManagement
	err := ctx.ReadResource("oci:ContainerEngine/clusterCompleteCredentialRotationManagement:ClusterCompleteCredentialRotationManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterCompleteCredentialRotationManagement resources.
type clusterCompleteCredentialRotationManagementState struct {
	// The OCID of the cluster.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ClusterId *string `pulumi:"clusterId"`
}

type ClusterCompleteCredentialRotationManagementState struct {
	// The OCID of the cluster.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ClusterId pulumi.StringPtrInput
}

func (ClusterCompleteCredentialRotationManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterCompleteCredentialRotationManagementState)(nil)).Elem()
}

type clusterCompleteCredentialRotationManagementArgs struct {
	// The OCID of the cluster.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ClusterId string `pulumi:"clusterId"`
}

// The set of arguments for constructing a ClusterCompleteCredentialRotationManagement resource.
type ClusterCompleteCredentialRotationManagementArgs struct {
	// The OCID of the cluster.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ClusterId pulumi.StringInput
}

func (ClusterCompleteCredentialRotationManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterCompleteCredentialRotationManagementArgs)(nil)).Elem()
}

type ClusterCompleteCredentialRotationManagementInput interface {
	pulumi.Input

	ToClusterCompleteCredentialRotationManagementOutput() ClusterCompleteCredentialRotationManagementOutput
	ToClusterCompleteCredentialRotationManagementOutputWithContext(ctx context.Context) ClusterCompleteCredentialRotationManagementOutput
}

func (*ClusterCompleteCredentialRotationManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCompleteCredentialRotationManagement)(nil)).Elem()
}

func (i *ClusterCompleteCredentialRotationManagement) ToClusterCompleteCredentialRotationManagementOutput() ClusterCompleteCredentialRotationManagementOutput {
	return i.ToClusterCompleteCredentialRotationManagementOutputWithContext(context.Background())
}

func (i *ClusterCompleteCredentialRotationManagement) ToClusterCompleteCredentialRotationManagementOutputWithContext(ctx context.Context) ClusterCompleteCredentialRotationManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCompleteCredentialRotationManagementOutput)
}

// ClusterCompleteCredentialRotationManagementArrayInput is an input type that accepts ClusterCompleteCredentialRotationManagementArray and ClusterCompleteCredentialRotationManagementArrayOutput values.
// You can construct a concrete instance of `ClusterCompleteCredentialRotationManagementArrayInput` via:
//
//	ClusterCompleteCredentialRotationManagementArray{ ClusterCompleteCredentialRotationManagementArgs{...} }
type ClusterCompleteCredentialRotationManagementArrayInput interface {
	pulumi.Input

	ToClusterCompleteCredentialRotationManagementArrayOutput() ClusterCompleteCredentialRotationManagementArrayOutput
	ToClusterCompleteCredentialRotationManagementArrayOutputWithContext(context.Context) ClusterCompleteCredentialRotationManagementArrayOutput
}

type ClusterCompleteCredentialRotationManagementArray []ClusterCompleteCredentialRotationManagementInput

func (ClusterCompleteCredentialRotationManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterCompleteCredentialRotationManagement)(nil)).Elem()
}

func (i ClusterCompleteCredentialRotationManagementArray) ToClusterCompleteCredentialRotationManagementArrayOutput() ClusterCompleteCredentialRotationManagementArrayOutput {
	return i.ToClusterCompleteCredentialRotationManagementArrayOutputWithContext(context.Background())
}

func (i ClusterCompleteCredentialRotationManagementArray) ToClusterCompleteCredentialRotationManagementArrayOutputWithContext(ctx context.Context) ClusterCompleteCredentialRotationManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCompleteCredentialRotationManagementArrayOutput)
}

// ClusterCompleteCredentialRotationManagementMapInput is an input type that accepts ClusterCompleteCredentialRotationManagementMap and ClusterCompleteCredentialRotationManagementMapOutput values.
// You can construct a concrete instance of `ClusterCompleteCredentialRotationManagementMapInput` via:
//
//	ClusterCompleteCredentialRotationManagementMap{ "key": ClusterCompleteCredentialRotationManagementArgs{...} }
type ClusterCompleteCredentialRotationManagementMapInput interface {
	pulumi.Input

	ToClusterCompleteCredentialRotationManagementMapOutput() ClusterCompleteCredentialRotationManagementMapOutput
	ToClusterCompleteCredentialRotationManagementMapOutputWithContext(context.Context) ClusterCompleteCredentialRotationManagementMapOutput
}

type ClusterCompleteCredentialRotationManagementMap map[string]ClusterCompleteCredentialRotationManagementInput

func (ClusterCompleteCredentialRotationManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterCompleteCredentialRotationManagement)(nil)).Elem()
}

func (i ClusterCompleteCredentialRotationManagementMap) ToClusterCompleteCredentialRotationManagementMapOutput() ClusterCompleteCredentialRotationManagementMapOutput {
	return i.ToClusterCompleteCredentialRotationManagementMapOutputWithContext(context.Background())
}

func (i ClusterCompleteCredentialRotationManagementMap) ToClusterCompleteCredentialRotationManagementMapOutputWithContext(ctx context.Context) ClusterCompleteCredentialRotationManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCompleteCredentialRotationManagementMapOutput)
}

type ClusterCompleteCredentialRotationManagementOutput struct{ *pulumi.OutputState }

func (ClusterCompleteCredentialRotationManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCompleteCredentialRotationManagement)(nil)).Elem()
}

func (o ClusterCompleteCredentialRotationManagementOutput) ToClusterCompleteCredentialRotationManagementOutput() ClusterCompleteCredentialRotationManagementOutput {
	return o
}

func (o ClusterCompleteCredentialRotationManagementOutput) ToClusterCompleteCredentialRotationManagementOutputWithContext(ctx context.Context) ClusterCompleteCredentialRotationManagementOutput {
	return o
}

// The OCID of the cluster.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ClusterCompleteCredentialRotationManagementOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterCompleteCredentialRotationManagement) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

type ClusterCompleteCredentialRotationManagementArrayOutput struct{ *pulumi.OutputState }

func (ClusterCompleteCredentialRotationManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterCompleteCredentialRotationManagement)(nil)).Elem()
}

func (o ClusterCompleteCredentialRotationManagementArrayOutput) ToClusterCompleteCredentialRotationManagementArrayOutput() ClusterCompleteCredentialRotationManagementArrayOutput {
	return o
}

func (o ClusterCompleteCredentialRotationManagementArrayOutput) ToClusterCompleteCredentialRotationManagementArrayOutputWithContext(ctx context.Context) ClusterCompleteCredentialRotationManagementArrayOutput {
	return o
}

func (o ClusterCompleteCredentialRotationManagementArrayOutput) Index(i pulumi.IntInput) ClusterCompleteCredentialRotationManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterCompleteCredentialRotationManagement {
		return vs[0].([]*ClusterCompleteCredentialRotationManagement)[vs[1].(int)]
	}).(ClusterCompleteCredentialRotationManagementOutput)
}

type ClusterCompleteCredentialRotationManagementMapOutput struct{ *pulumi.OutputState }

func (ClusterCompleteCredentialRotationManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterCompleteCredentialRotationManagement)(nil)).Elem()
}

func (o ClusterCompleteCredentialRotationManagementMapOutput) ToClusterCompleteCredentialRotationManagementMapOutput() ClusterCompleteCredentialRotationManagementMapOutput {
	return o
}

func (o ClusterCompleteCredentialRotationManagementMapOutput) ToClusterCompleteCredentialRotationManagementMapOutputWithContext(ctx context.Context) ClusterCompleteCredentialRotationManagementMapOutput {
	return o
}

func (o ClusterCompleteCredentialRotationManagementMapOutput) MapIndex(k pulumi.StringInput) ClusterCompleteCredentialRotationManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterCompleteCredentialRotationManagement {
		return vs[0].(map[string]*ClusterCompleteCredentialRotationManagement)[vs[1].(string)]
	}).(ClusterCompleteCredentialRotationManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCompleteCredentialRotationManagementInput)(nil)).Elem(), &ClusterCompleteCredentialRotationManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCompleteCredentialRotationManagementArrayInput)(nil)).Elem(), ClusterCompleteCredentialRotationManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCompleteCredentialRotationManagementMapInput)(nil)).Elem(), ClusterCompleteCredentialRotationManagementMap{})
	pulumi.RegisterOutputType(ClusterCompleteCredentialRotationManagementOutput{})
	pulumi.RegisterOutputType(ClusterCompleteCredentialRotationManagementArrayOutput{})
	pulumi.RegisterOutputType(ClusterCompleteCredentialRotationManagementMapOutput{})
}
