// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerengine

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Cluster Start Credential Rotation Management resource in Oracle Cloud Infrastructure Container Engine service.
//
// Start cluster credential rotation by adding new credentials, old credentials will still work after this operation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/containerengine"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := containerengine.NewClusterStartCredentialRotationManagement(ctx, "test_cluster_start_credential_rotation_management", &containerengine.ClusterStartCredentialRotationManagementArgs{
//				AutoCompletionDelayDuration: pulumi.Any(clusterStartCredentialRotationManagementAutoCompletionDelayDuration),
//				ClusterId:                   pulumi.Any(testCluster.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type ClusterStartCredentialRotationManagement struct {
	pulumi.CustomResourceState

	// The duration in days(in ISO 8601 notation eg. P5D) after which the old credentials should be retired. Maximum delay duration is 14 days.
	AutoCompletionDelayDuration pulumi.StringOutput `pulumi:"autoCompletionDelayDuration"`
	// The OCID of the cluster.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
}

// NewClusterStartCredentialRotationManagement registers a new resource with the given unique name, arguments, and options.
func NewClusterStartCredentialRotationManagement(ctx *pulumi.Context,
	name string, args *ClusterStartCredentialRotationManagementArgs, opts ...pulumi.ResourceOption) (*ClusterStartCredentialRotationManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoCompletionDelayDuration == nil {
		return nil, errors.New("invalid value for required argument 'AutoCompletionDelayDuration'")
	}
	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClusterStartCredentialRotationManagement
	err := ctx.RegisterResource("oci:ContainerEngine/clusterStartCredentialRotationManagement:ClusterStartCredentialRotationManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterStartCredentialRotationManagement gets an existing ClusterStartCredentialRotationManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterStartCredentialRotationManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterStartCredentialRotationManagementState, opts ...pulumi.ResourceOption) (*ClusterStartCredentialRotationManagement, error) {
	var resource ClusterStartCredentialRotationManagement
	err := ctx.ReadResource("oci:ContainerEngine/clusterStartCredentialRotationManagement:ClusterStartCredentialRotationManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterStartCredentialRotationManagement resources.
type clusterStartCredentialRotationManagementState struct {
	// The duration in days(in ISO 8601 notation eg. P5D) after which the old credentials should be retired. Maximum delay duration is 14 days.
	AutoCompletionDelayDuration *string `pulumi:"autoCompletionDelayDuration"`
	// The OCID of the cluster.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ClusterId *string `pulumi:"clusterId"`
}

type ClusterStartCredentialRotationManagementState struct {
	// The duration in days(in ISO 8601 notation eg. P5D) after which the old credentials should be retired. Maximum delay duration is 14 days.
	AutoCompletionDelayDuration pulumi.StringPtrInput
	// The OCID of the cluster.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ClusterId pulumi.StringPtrInput
}

func (ClusterStartCredentialRotationManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterStartCredentialRotationManagementState)(nil)).Elem()
}

type clusterStartCredentialRotationManagementArgs struct {
	// The duration in days(in ISO 8601 notation eg. P5D) after which the old credentials should be retired. Maximum delay duration is 14 days.
	AutoCompletionDelayDuration string `pulumi:"autoCompletionDelayDuration"`
	// The OCID of the cluster.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ClusterId string `pulumi:"clusterId"`
}

// The set of arguments for constructing a ClusterStartCredentialRotationManagement resource.
type ClusterStartCredentialRotationManagementArgs struct {
	// The duration in days(in ISO 8601 notation eg. P5D) after which the old credentials should be retired. Maximum delay duration is 14 days.
	AutoCompletionDelayDuration pulumi.StringInput
	// The OCID of the cluster.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ClusterId pulumi.StringInput
}

func (ClusterStartCredentialRotationManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterStartCredentialRotationManagementArgs)(nil)).Elem()
}

type ClusterStartCredentialRotationManagementInput interface {
	pulumi.Input

	ToClusterStartCredentialRotationManagementOutput() ClusterStartCredentialRotationManagementOutput
	ToClusterStartCredentialRotationManagementOutputWithContext(ctx context.Context) ClusterStartCredentialRotationManagementOutput
}

func (*ClusterStartCredentialRotationManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStartCredentialRotationManagement)(nil)).Elem()
}

func (i *ClusterStartCredentialRotationManagement) ToClusterStartCredentialRotationManagementOutput() ClusterStartCredentialRotationManagementOutput {
	return i.ToClusterStartCredentialRotationManagementOutputWithContext(context.Background())
}

func (i *ClusterStartCredentialRotationManagement) ToClusterStartCredentialRotationManagementOutputWithContext(ctx context.Context) ClusterStartCredentialRotationManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStartCredentialRotationManagementOutput)
}

// ClusterStartCredentialRotationManagementArrayInput is an input type that accepts ClusterStartCredentialRotationManagementArray and ClusterStartCredentialRotationManagementArrayOutput values.
// You can construct a concrete instance of `ClusterStartCredentialRotationManagementArrayInput` via:
//
//	ClusterStartCredentialRotationManagementArray{ ClusterStartCredentialRotationManagementArgs{...} }
type ClusterStartCredentialRotationManagementArrayInput interface {
	pulumi.Input

	ToClusterStartCredentialRotationManagementArrayOutput() ClusterStartCredentialRotationManagementArrayOutput
	ToClusterStartCredentialRotationManagementArrayOutputWithContext(context.Context) ClusterStartCredentialRotationManagementArrayOutput
}

type ClusterStartCredentialRotationManagementArray []ClusterStartCredentialRotationManagementInput

func (ClusterStartCredentialRotationManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterStartCredentialRotationManagement)(nil)).Elem()
}

func (i ClusterStartCredentialRotationManagementArray) ToClusterStartCredentialRotationManagementArrayOutput() ClusterStartCredentialRotationManagementArrayOutput {
	return i.ToClusterStartCredentialRotationManagementArrayOutputWithContext(context.Background())
}

func (i ClusterStartCredentialRotationManagementArray) ToClusterStartCredentialRotationManagementArrayOutputWithContext(ctx context.Context) ClusterStartCredentialRotationManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStartCredentialRotationManagementArrayOutput)
}

// ClusterStartCredentialRotationManagementMapInput is an input type that accepts ClusterStartCredentialRotationManagementMap and ClusterStartCredentialRotationManagementMapOutput values.
// You can construct a concrete instance of `ClusterStartCredentialRotationManagementMapInput` via:
//
//	ClusterStartCredentialRotationManagementMap{ "key": ClusterStartCredentialRotationManagementArgs{...} }
type ClusterStartCredentialRotationManagementMapInput interface {
	pulumi.Input

	ToClusterStartCredentialRotationManagementMapOutput() ClusterStartCredentialRotationManagementMapOutput
	ToClusterStartCredentialRotationManagementMapOutputWithContext(context.Context) ClusterStartCredentialRotationManagementMapOutput
}

type ClusterStartCredentialRotationManagementMap map[string]ClusterStartCredentialRotationManagementInput

func (ClusterStartCredentialRotationManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterStartCredentialRotationManagement)(nil)).Elem()
}

func (i ClusterStartCredentialRotationManagementMap) ToClusterStartCredentialRotationManagementMapOutput() ClusterStartCredentialRotationManagementMapOutput {
	return i.ToClusterStartCredentialRotationManagementMapOutputWithContext(context.Background())
}

func (i ClusterStartCredentialRotationManagementMap) ToClusterStartCredentialRotationManagementMapOutputWithContext(ctx context.Context) ClusterStartCredentialRotationManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStartCredentialRotationManagementMapOutput)
}

type ClusterStartCredentialRotationManagementOutput struct{ *pulumi.OutputState }

func (ClusterStartCredentialRotationManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStartCredentialRotationManagement)(nil)).Elem()
}

func (o ClusterStartCredentialRotationManagementOutput) ToClusterStartCredentialRotationManagementOutput() ClusterStartCredentialRotationManagementOutput {
	return o
}

func (o ClusterStartCredentialRotationManagementOutput) ToClusterStartCredentialRotationManagementOutputWithContext(ctx context.Context) ClusterStartCredentialRotationManagementOutput {
	return o
}

// The duration in days(in ISO 8601 notation eg. P5D) after which the old credentials should be retired. Maximum delay duration is 14 days.
func (o ClusterStartCredentialRotationManagementOutput) AutoCompletionDelayDuration() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterStartCredentialRotationManagement) pulumi.StringOutput {
		return v.AutoCompletionDelayDuration
	}).(pulumi.StringOutput)
}

// The OCID of the cluster.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ClusterStartCredentialRotationManagementOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterStartCredentialRotationManagement) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

type ClusterStartCredentialRotationManagementArrayOutput struct{ *pulumi.OutputState }

func (ClusterStartCredentialRotationManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterStartCredentialRotationManagement)(nil)).Elem()
}

func (o ClusterStartCredentialRotationManagementArrayOutput) ToClusterStartCredentialRotationManagementArrayOutput() ClusterStartCredentialRotationManagementArrayOutput {
	return o
}

func (o ClusterStartCredentialRotationManagementArrayOutput) ToClusterStartCredentialRotationManagementArrayOutputWithContext(ctx context.Context) ClusterStartCredentialRotationManagementArrayOutput {
	return o
}

func (o ClusterStartCredentialRotationManagementArrayOutput) Index(i pulumi.IntInput) ClusterStartCredentialRotationManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterStartCredentialRotationManagement {
		return vs[0].([]*ClusterStartCredentialRotationManagement)[vs[1].(int)]
	}).(ClusterStartCredentialRotationManagementOutput)
}

type ClusterStartCredentialRotationManagementMapOutput struct{ *pulumi.OutputState }

func (ClusterStartCredentialRotationManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterStartCredentialRotationManagement)(nil)).Elem()
}

func (o ClusterStartCredentialRotationManagementMapOutput) ToClusterStartCredentialRotationManagementMapOutput() ClusterStartCredentialRotationManagementMapOutput {
	return o
}

func (o ClusterStartCredentialRotationManagementMapOutput) ToClusterStartCredentialRotationManagementMapOutputWithContext(ctx context.Context) ClusterStartCredentialRotationManagementMapOutput {
	return o
}

func (o ClusterStartCredentialRotationManagementMapOutput) MapIndex(k pulumi.StringInput) ClusterStartCredentialRotationManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterStartCredentialRotationManagement {
		return vs[0].(map[string]*ClusterStartCredentialRotationManagement)[vs[1].(string)]
	}).(ClusterStartCredentialRotationManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStartCredentialRotationManagementInput)(nil)).Elem(), &ClusterStartCredentialRotationManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStartCredentialRotationManagementArrayInput)(nil)).Elem(), ClusterStartCredentialRotationManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStartCredentialRotationManagementMapInput)(nil)).Elem(), ClusterStartCredentialRotationManagementMap{})
	pulumi.RegisterOutputType(ClusterStartCredentialRotationManagementOutput{})
	pulumi.RegisterOutputType(ClusterStartCredentialRotationManagementArrayOutput{})
	pulumi.RegisterOutputType(ClusterStartCredentialRotationManagementMapOutput{})
}
