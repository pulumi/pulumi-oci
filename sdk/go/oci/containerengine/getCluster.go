// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerengine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Cluster resource in Oracle Cloud Infrastructure Container Engine service.
//
// Get the details of a cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/ContainerEngine"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ContainerEngine.GetCluster(ctx, &containerengine.GetClusterArgs{
//				ClusterId: testClusterOciContainerengineCluster.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("oci:ContainerEngine/getCluster:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCluster.
type LookupClusterArgs struct {
	// The OCID of the cluster.
	ClusterId string `pulumi:"clusterId"`
}

// A collection of values returned by getCluster.
type LookupClusterResult struct {
	// Available Kubernetes versions to which the clusters masters may be upgraded.
	AvailableKubernetesUpgrades []string `pulumi:"availableKubernetesUpgrades"`
	ClusterId                   string   `pulumi:"clusterId"`
	// Available CNIs and network options for existing and new node pools of the cluster
	ClusterPodNetworkOptions []GetClusterClusterPodNetworkOption `pulumi:"clusterPodNetworkOptions"`
	// The OCID of the compartment in which the cluster exists.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The network configuration for access to the Cluster control plane.
	EndpointConfigs []GetClusterEndpointConfig `pulumi:"endpointConfigs"`
	// Endpoints served up by the cluster masters.
	Endpoints []GetClusterEndpoint `pulumi:"endpoints"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the cluster.
	Id string `pulumi:"id"`
	// The image verification policy for signature validation.
	ImagePolicyConfigs []GetClusterImagePolicyConfig `pulumi:"imagePolicyConfigs"`
	// The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The version of Kubernetes running on the cluster masters.
	KubernetesVersion string `pulumi:"kubernetesVersion"`
	// Details about the state of the cluster masters.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Metadata about the cluster.
	Metadatas []GetClusterMetadata `pulumi:"metadatas"`
	// The name of the cluster.
	Name                           string `pulumi:"name"`
	OpenIdConnectDiscoveryEndpoint string `pulumi:"openIdConnectDiscoveryEndpoint"`
	// Optional attributes for the cluster.
	Options []GetClusterOption `pulumi:"options"`
	// The state of the cluster masters.
	State string `pulumi:"state"`
	// Type of cluster. Values can be BASIC_CLUSTER or ENHANCED_CLUSTER. For more information, see [Cluster Types](https://docs.cloud.oracle.com/iaas/Content/ContEng/Tasks/contengcomparingenhancedwithbasicclusters_topic.htm)
	Type string `pulumi:"type"`
	// The OCID of the virtual cloud network (VCN) in which the cluster exists.
	VcnId string `pulumi:"vcnId"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClusterResultOutput, error) {
			args := v.(LookupClusterArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupClusterResult
			secret, err := ctx.InvokePackageRaw("oci:ContainerEngine/getCluster:getCluster", args, &rv, "", opts...)
			if err != nil {
				return LookupClusterResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupClusterResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupClusterResultOutput), nil
			}
			return output, nil
		}).(LookupClusterResultOutput)
}

// A collection of arguments for invoking getCluster.
type LookupClusterOutputArgs struct {
	// The OCID of the cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCluster.
type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

// Available Kubernetes versions to which the clusters masters may be upgraded.
func (o LookupClusterResultOutput) AvailableKubernetesUpgrades() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []string { return v.AvailableKubernetesUpgrades }).(pulumi.StringArrayOutput)
}

func (o LookupClusterResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Available CNIs and network options for existing and new node pools of the cluster
func (o LookupClusterResultOutput) ClusterPodNetworkOptions() GetClusterClusterPodNetworkOptionArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterClusterPodNetworkOption { return v.ClusterPodNetworkOptions }).(GetClusterClusterPodNetworkOptionArrayOutput)
}

// The OCID of the compartment in which the cluster exists.
func (o LookupClusterResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupClusterResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The network configuration for access to the Cluster control plane.
func (o LookupClusterResultOutput) EndpointConfigs() GetClusterEndpointConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterEndpointConfig { return v.EndpointConfigs }).(GetClusterEndpointConfigArrayOutput)
}

// Endpoints served up by the cluster masters.
func (o LookupClusterResultOutput) Endpoints() GetClusterEndpointArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterEndpoint { return v.Endpoints }).(GetClusterEndpointArrayOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupClusterResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the cluster.
func (o LookupClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// The image verification policy for signature validation.
func (o LookupClusterResultOutput) ImagePolicyConfigs() GetClusterImagePolicyConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterImagePolicyConfig { return v.ImagePolicyConfigs }).(GetClusterImagePolicyConfigArrayOutput)
}

// The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption.
func (o LookupClusterResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The version of Kubernetes running on the cluster masters.
func (o LookupClusterResultOutput) KubernetesVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.KubernetesVersion }).(pulumi.StringOutput)
}

// Details about the state of the cluster masters.
func (o LookupClusterResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Metadata about the cluster.
func (o LookupClusterResultOutput) Metadatas() GetClusterMetadataArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterMetadata { return v.Metadatas }).(GetClusterMetadataArrayOutput)
}

// The name of the cluster.
func (o LookupClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) OpenIdConnectDiscoveryEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.OpenIdConnectDiscoveryEndpoint }).(pulumi.StringOutput)
}

// Optional attributes for the cluster.
func (o LookupClusterResultOutput) Options() GetClusterOptionArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterOption { return v.Options }).(GetClusterOptionArrayOutput)
}

// The state of the cluster masters.
func (o LookupClusterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.State }).(pulumi.StringOutput)
}

// Type of cluster. Values can be BASIC_CLUSTER or ENHANCED_CLUSTER. For more information, see [Cluster Types](https://docs.cloud.oracle.com/iaas/Content/ContEng/Tasks/contengcomparingenhancedwithbasicclusters_topic.htm)
func (o LookupClusterResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Type }).(pulumi.StringOutput)
}

// The OCID of the virtual cloud network (VCN) in which the cluster exists.
func (o LookupClusterResultOutput) VcnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.VcnId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
