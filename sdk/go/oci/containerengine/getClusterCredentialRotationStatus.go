// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerengine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Cluster Credential Rotation Status resource in Oracle Cloud Infrastructure Container Engine service.
//
// Get cluster credential rotation status.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/ContainerEngine"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ContainerEngine.GetClusterCredentialRotationStatus(ctx, &containerengine.GetClusterCredentialRotationStatusArgs{
//				ClusterId: testCluster.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetClusterCredentialRotationStatus(ctx *pulumi.Context, args *GetClusterCredentialRotationStatusArgs, opts ...pulumi.InvokeOption) (*GetClusterCredentialRotationStatusResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClusterCredentialRotationStatusResult
	err := ctx.Invoke("oci:ContainerEngine/getClusterCredentialRotationStatus:getClusterCredentialRotationStatus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterCredentialRotationStatus.
type GetClusterCredentialRotationStatusArgs struct {
	// The OCID of the cluster.
	ClusterId string `pulumi:"clusterId"`
}

// A collection of values returned by getClusterCredentialRotationStatus.
type GetClusterCredentialRotationStatusResult struct {
	ClusterId string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Credential rotation status of a kubernetes cluster IN_PROGRESS: Issuing new credentials to kubernetes cluster control plane and worker nodes or retiring old credentials from kubernetes cluster control plane and worker nodes. WAITING: Waiting for customer to invoke the complete rotation action or the automcatic complete rotation action. COMPLETED: New credentials are functional on kuberentes cluster.
	Status string `pulumi:"status"`
	// Details of a kuberenetes cluster credential rotation status: ISSUING_NEW_CREDENTIALS: Credential rotation is in progress. Starting to issue new credentials to kubernetes cluster control plane and worker nodes. NEW_CREDENTIALS_ISSUED: New credentials are added. At this stage cluster has both old and new credentials and is awaiting old credentials retirement. RETIRING_OLD_CREDENTIALS: Retirement of old credentials is in progress. Starting to remove old credentials from kubernetes cluster control plane and worker nodes. COMPLETED: Credential rotation is complete. Old credentials are retired.
	StatusDetails string `pulumi:"statusDetails"`
	// The time by which retirement of old credentials should start.
	TimeAutoCompletionScheduled string `pulumi:"timeAutoCompletionScheduled"`
}

func GetClusterCredentialRotationStatusOutput(ctx *pulumi.Context, args GetClusterCredentialRotationStatusOutputArgs, opts ...pulumi.InvokeOption) GetClusterCredentialRotationStatusResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetClusterCredentialRotationStatusResultOutput, error) {
			args := v.(GetClusterCredentialRotationStatusArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ContainerEngine/getClusterCredentialRotationStatus:getClusterCredentialRotationStatus", args, GetClusterCredentialRotationStatusResultOutput{}, options).(GetClusterCredentialRotationStatusResultOutput), nil
		}).(GetClusterCredentialRotationStatusResultOutput)
}

// A collection of arguments for invoking getClusterCredentialRotationStatus.
type GetClusterCredentialRotationStatusOutputArgs struct {
	// The OCID of the cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
}

func (GetClusterCredentialRotationStatusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCredentialRotationStatusArgs)(nil)).Elem()
}

// A collection of values returned by getClusterCredentialRotationStatus.
type GetClusterCredentialRotationStatusResultOutput struct{ *pulumi.OutputState }

func (GetClusterCredentialRotationStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCredentialRotationStatusResult)(nil)).Elem()
}

func (o GetClusterCredentialRotationStatusResultOutput) ToGetClusterCredentialRotationStatusResultOutput() GetClusterCredentialRotationStatusResultOutput {
	return o
}

func (o GetClusterCredentialRotationStatusResultOutput) ToGetClusterCredentialRotationStatusResultOutputWithContext(ctx context.Context) GetClusterCredentialRotationStatusResultOutput {
	return o
}

func (o GetClusterCredentialRotationStatusResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCredentialRotationStatusResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClusterCredentialRotationStatusResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCredentialRotationStatusResult) string { return v.Id }).(pulumi.StringOutput)
}

// Credential rotation status of a kubernetes cluster IN_PROGRESS: Issuing new credentials to kubernetes cluster control plane and worker nodes or retiring old credentials from kubernetes cluster control plane and worker nodes. WAITING: Waiting for customer to invoke the complete rotation action or the automcatic complete rotation action. COMPLETED: New credentials are functional on kuberentes cluster.
func (o GetClusterCredentialRotationStatusResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCredentialRotationStatusResult) string { return v.Status }).(pulumi.StringOutput)
}

// Details of a kuberenetes cluster credential rotation status: ISSUING_NEW_CREDENTIALS: Credential rotation is in progress. Starting to issue new credentials to kubernetes cluster control plane and worker nodes. NEW_CREDENTIALS_ISSUED: New credentials are added. At this stage cluster has both old and new credentials and is awaiting old credentials retirement. RETIRING_OLD_CREDENTIALS: Retirement of old credentials is in progress. Starting to remove old credentials from kubernetes cluster control plane and worker nodes. COMPLETED: Credential rotation is complete. Old credentials are retired.
func (o GetClusterCredentialRotationStatusResultOutput) StatusDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCredentialRotationStatusResult) string { return v.StatusDetails }).(pulumi.StringOutput)
}

// The time by which retirement of old credentials should start.
func (o GetClusterCredentialRotationStatusResultOutput) TimeAutoCompletionScheduled() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCredentialRotationStatusResult) string { return v.TimeAutoCompletionScheduled }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClusterCredentialRotationStatusResultOutput{})
}
