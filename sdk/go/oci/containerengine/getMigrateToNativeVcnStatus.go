// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerengine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetMigrateToNativeVcnStatus(ctx *pulumi.Context, args *GetMigrateToNativeVcnStatusArgs, opts ...pulumi.InvokeOption) (*GetMigrateToNativeVcnStatusResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMigrateToNativeVcnStatusResult
	err := ctx.Invoke("oci:ContainerEngine/getMigrateToNativeVcnStatus:getMigrateToNativeVcnStatus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMigrateToNativeVcnStatus.
type GetMigrateToNativeVcnStatusArgs struct {
	ClusterId string `pulumi:"clusterId"`
}

// A collection of values returned by getMigrateToNativeVcnStatus.
type GetMigrateToNativeVcnStatusResult struct {
	ClusterId string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id                        string `pulumi:"id"`
	State                     string `pulumi:"state"`
	TimeDecommissionScheduled string `pulumi:"timeDecommissionScheduled"`
}

func GetMigrateToNativeVcnStatusOutput(ctx *pulumi.Context, args GetMigrateToNativeVcnStatusOutputArgs, opts ...pulumi.InvokeOption) GetMigrateToNativeVcnStatusResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMigrateToNativeVcnStatusResultOutput, error) {
			args := v.(GetMigrateToNativeVcnStatusArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetMigrateToNativeVcnStatusResult
			secret, err := ctx.InvokePackageRaw("oci:ContainerEngine/getMigrateToNativeVcnStatus:getMigrateToNativeVcnStatus", args, &rv, "", opts...)
			if err != nil {
				return GetMigrateToNativeVcnStatusResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetMigrateToNativeVcnStatusResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetMigrateToNativeVcnStatusResultOutput), nil
			}
			return output, nil
		}).(GetMigrateToNativeVcnStatusResultOutput)
}

// A collection of arguments for invoking getMigrateToNativeVcnStatus.
type GetMigrateToNativeVcnStatusOutputArgs struct {
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
}

func (GetMigrateToNativeVcnStatusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMigrateToNativeVcnStatusArgs)(nil)).Elem()
}

// A collection of values returned by getMigrateToNativeVcnStatus.
type GetMigrateToNativeVcnStatusResultOutput struct{ *pulumi.OutputState }

func (GetMigrateToNativeVcnStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMigrateToNativeVcnStatusResult)(nil)).Elem()
}

func (o GetMigrateToNativeVcnStatusResultOutput) ToGetMigrateToNativeVcnStatusResultOutput() GetMigrateToNativeVcnStatusResultOutput {
	return o
}

func (o GetMigrateToNativeVcnStatusResultOutput) ToGetMigrateToNativeVcnStatusResultOutputWithContext(ctx context.Context) GetMigrateToNativeVcnStatusResultOutput {
	return o
}

func (o GetMigrateToNativeVcnStatusResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrateToNativeVcnStatusResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMigrateToNativeVcnStatusResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrateToNativeVcnStatusResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMigrateToNativeVcnStatusResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrateToNativeVcnStatusResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetMigrateToNativeVcnStatusResultOutput) TimeDecommissionScheduled() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrateToNativeVcnStatusResult) string { return v.TimeDecommissionScheduled }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMigrateToNativeVcnStatusResultOutput{})
}
