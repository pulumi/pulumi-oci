// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerengine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Node Pool resource in Oracle Cloud Infrastructure Container Engine service.
//
// Get the details of a node pool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/ContainerEngine"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ContainerEngine.GetNodePool(ctx, &containerengine.GetNodePoolArgs{
//				NodePoolId: testNodePoolOciContainerengineNodePool.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNodePool(ctx *pulumi.Context, args *LookupNodePoolArgs, opts ...pulumi.InvokeOption) (*LookupNodePoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNodePoolResult
	err := ctx.Invoke("oci:ContainerEngine/getNodePool:getNodePool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNodePool.
type LookupNodePoolArgs struct {
	// The OCID of the node pool.
	NodePoolId string `pulumi:"nodePoolId"`
}

// A collection of values returned by getNodePool.
type LookupNodePoolResult struct {
	// The OCID of the cluster to which this node pool is attached.
	ClusterId string `pulumi:"clusterId"`
	// The OCID of the compartment in which the node pool exists.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the compute instance backing this node.
	Id string `pulumi:"id"`
	// A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
	InitialNodeLabels []GetNodePoolInitialNodeLabel `pulumi:"initialNodeLabels"`
	// The version of Kubernetes this node is running.
	KubernetesVersion string `pulumi:"kubernetesVersion"`
	// Details about the state of the node.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The name of the node.
	Name string `pulumi:"name"`
	// The configuration of nodes in the node pool.
	NodeConfigDetails []GetNodePoolNodeConfigDetail `pulumi:"nodeConfigDetails"`
	// Node Eviction Details configuration
	NodeEvictionNodePoolSettings []GetNodePoolNodeEvictionNodePoolSetting `pulumi:"nodeEvictionNodePoolSettings"`
	// Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
	//
	// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageId string `pulumi:"nodeImageId"`
	// Deprecated. see `nodeSource`. The name of the image running on the nodes in the node pool.
	//
	// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageName string `pulumi:"nodeImageName"`
	// A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
	NodeMetadata map[string]interface{} `pulumi:"nodeMetadata"`
	// Node Pool Cycling Details
	NodePoolCyclingDetails []GetNodePoolNodePoolCyclingDetail `pulumi:"nodePoolCyclingDetails"`
	// The OCID of the node pool to which this node belongs.
	NodePoolId string `pulumi:"nodePoolId"`
	// The name of the node shape of the nodes in the node pool.
	NodeShape string `pulumi:"nodeShape"`
	// The shape configuration of the nodes.
	NodeShapeConfigs []GetNodePoolNodeShapeConfig `pulumi:"nodeShapeConfigs"`
	// Source running on the nodes in the node pool.
	NodeSourceDetails []GetNodePoolNodeSourceDetail `pulumi:"nodeSourceDetails"`
	// Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
	NodeSources []GetNodePoolNodeSource `pulumi:"nodeSources"`
	// The nodes in the node pool.
	Nodes []GetNodePoolNode `pulumi:"nodes"`
	// The number of nodes in each subnet.
	QuantityPerSubnet int `pulumi:"quantityPerSubnet"`
	// The SSH public key on each node in the node pool on launch.
	SshPublicKey string `pulumi:"sshPublicKey"`
	// The state of the nodepool.
	State string `pulumi:"state"`
	// The OCIDs of the subnets in which to place nodes for this node pool.
	SubnetIds []string `pulumi:"subnetIds"`
}

func LookupNodePoolOutput(ctx *pulumi.Context, args LookupNodePoolOutputArgs, opts ...pulumi.InvokeOption) LookupNodePoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNodePoolResult, error) {
			args := v.(LookupNodePoolArgs)
			r, err := LookupNodePool(ctx, &args, opts...)
			var s LookupNodePoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNodePoolResultOutput)
}

// A collection of arguments for invoking getNodePool.
type LookupNodePoolOutputArgs struct {
	// The OCID of the node pool.
	NodePoolId pulumi.StringInput `pulumi:"nodePoolId"`
}

func (LookupNodePoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNodePoolArgs)(nil)).Elem()
}

// A collection of values returned by getNodePool.
type LookupNodePoolResultOutput struct{ *pulumi.OutputState }

func (LookupNodePoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNodePoolResult)(nil)).Elem()
}

func (o LookupNodePoolResultOutput) ToLookupNodePoolResultOutput() LookupNodePoolResultOutput {
	return o
}

func (o LookupNodePoolResultOutput) ToLookupNodePoolResultOutputWithContext(ctx context.Context) LookupNodePoolResultOutput {
	return o
}

// The OCID of the cluster to which this node pool is attached.
func (o LookupNodePoolResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The OCID of the compartment in which the node pool exists.
func (o LookupNodePoolResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupNodePoolResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupNodePoolResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupNodePoolResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupNodePoolResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the compute instance backing this node.
func (o LookupNodePoolResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
func (o LookupNodePoolResultOutput) InitialNodeLabels() GetNodePoolInitialNodeLabelArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []GetNodePoolInitialNodeLabel { return v.InitialNodeLabels }).(GetNodePoolInitialNodeLabelArrayOutput)
}

// The version of Kubernetes this node is running.
func (o LookupNodePoolResultOutput) KubernetesVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.KubernetesVersion }).(pulumi.StringOutput)
}

// Details about the state of the node.
func (o LookupNodePoolResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The name of the node.
func (o LookupNodePoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.Name }).(pulumi.StringOutput)
}

// The configuration of nodes in the node pool.
func (o LookupNodePoolResultOutput) NodeConfigDetails() GetNodePoolNodeConfigDetailArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []GetNodePoolNodeConfigDetail { return v.NodeConfigDetails }).(GetNodePoolNodeConfigDetailArrayOutput)
}

// Node Eviction Details configuration
func (o LookupNodePoolResultOutput) NodeEvictionNodePoolSettings() GetNodePoolNodeEvictionNodePoolSettingArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []GetNodePoolNodeEvictionNodePoolSetting {
		return v.NodeEvictionNodePoolSettings
	}).(GetNodePoolNodeEvictionNodePoolSettingArrayOutput)
}

// Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
//
// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
func (o LookupNodePoolResultOutput) NodeImageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.NodeImageId }).(pulumi.StringOutput)
}

// Deprecated. see `nodeSource`. The name of the image running on the nodes in the node pool.
//
// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
func (o LookupNodePoolResultOutput) NodeImageName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.NodeImageName }).(pulumi.StringOutput)
}

// A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
func (o LookupNodePoolResultOutput) NodeMetadata() pulumi.MapOutput {
	return o.ApplyT(func(v LookupNodePoolResult) map[string]interface{} { return v.NodeMetadata }).(pulumi.MapOutput)
}

// Node Pool Cycling Details
func (o LookupNodePoolResultOutput) NodePoolCyclingDetails() GetNodePoolNodePoolCyclingDetailArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []GetNodePoolNodePoolCyclingDetail { return v.NodePoolCyclingDetails }).(GetNodePoolNodePoolCyclingDetailArrayOutput)
}

// The OCID of the node pool to which this node belongs.
func (o LookupNodePoolResultOutput) NodePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.NodePoolId }).(pulumi.StringOutput)
}

// The name of the node shape of the nodes in the node pool.
func (o LookupNodePoolResultOutput) NodeShape() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.NodeShape }).(pulumi.StringOutput)
}

// The shape configuration of the nodes.
func (o LookupNodePoolResultOutput) NodeShapeConfigs() GetNodePoolNodeShapeConfigArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []GetNodePoolNodeShapeConfig { return v.NodeShapeConfigs }).(GetNodePoolNodeShapeConfigArrayOutput)
}

// Source running on the nodes in the node pool.
func (o LookupNodePoolResultOutput) NodeSourceDetails() GetNodePoolNodeSourceDetailArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []GetNodePoolNodeSourceDetail { return v.NodeSourceDetails }).(GetNodePoolNodeSourceDetailArrayOutput)
}

// Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
func (o LookupNodePoolResultOutput) NodeSources() GetNodePoolNodeSourceArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []GetNodePoolNodeSource { return v.NodeSources }).(GetNodePoolNodeSourceArrayOutput)
}

// The nodes in the node pool.
func (o LookupNodePoolResultOutput) Nodes() GetNodePoolNodeArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []GetNodePoolNode { return v.Nodes }).(GetNodePoolNodeArrayOutput)
}

// The number of nodes in each subnet.
func (o LookupNodePoolResultOutput) QuantityPerSubnet() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNodePoolResult) int { return v.QuantityPerSubnet }).(pulumi.IntOutput)
}

// The SSH public key on each node in the node pool on launch.
func (o LookupNodePoolResultOutput) SshPublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.SshPublicKey }).(pulumi.StringOutput)
}

// The state of the nodepool.
func (o LookupNodePoolResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodePoolResult) string { return v.State }).(pulumi.StringOutput)
}

// The OCIDs of the subnets in which to place nodes for this node pool.
func (o LookupNodePoolResultOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNodePoolResult) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNodePoolResultOutput{})
}
