// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerengine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Node Pool Option resource in Oracle Cloud Infrastructure Container Engine service.
//
// Get options available for node pools.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ContainerEngine"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ContainerEngine.GetNodePoolOption(ctx, &containerengine.GetNodePoolOptionArgs{
//				NodePoolOptionId: oci_containerengine_node_pool_option.Test_node_pool_option.Id,
//				CompartmentId:    pulumi.StringRef(_var.Compartment_id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNodePoolOption(ctx *pulumi.Context, args *GetNodePoolOptionArgs, opts ...pulumi.InvokeOption) (*GetNodePoolOptionResult, error) {
	var rv GetNodePoolOptionResult
	err := ctx.Invoke("oci:ContainerEngine/getNodePoolOption:getNodePoolOption", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNodePoolOption.
type GetNodePoolOptionArgs struct {
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The id of the option set to retrieve. Use "all" get all options, or use a cluster ID to get options specific to the provided cluster.
	NodePoolOptionId string `pulumi:"nodePoolOptionId"`
}

// A collection of values returned by getNodePoolOption.
type GetNodePoolOptionResult struct {
	CompartmentId *string `pulumi:"compartmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Deprecated. See sources. When creating a node pool, only image names contained in this property can be passed to the `nodeImageName` property.
	Images []string `pulumi:"images"`
	// Available Kubernetes versions.
	KubernetesVersions []string `pulumi:"kubernetesVersions"`
	NodePoolOptionId   string   `pulumi:"nodePoolOptionId"`
	// Available shapes for nodes.
	Shapes []string `pulumi:"shapes"`
	// Available source of the node.
	Sources []GetNodePoolOptionSource `pulumi:"sources"`
}

func GetNodePoolOptionOutput(ctx *pulumi.Context, args GetNodePoolOptionOutputArgs, opts ...pulumi.InvokeOption) GetNodePoolOptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNodePoolOptionResult, error) {
			args := v.(GetNodePoolOptionArgs)
			r, err := GetNodePoolOption(ctx, &args, opts...)
			var s GetNodePoolOptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNodePoolOptionResultOutput)
}

// A collection of arguments for invoking getNodePoolOption.
type GetNodePoolOptionOutputArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The id of the option set to retrieve. Use "all" get all options, or use a cluster ID to get options specific to the provided cluster.
	NodePoolOptionId pulumi.StringInput `pulumi:"nodePoolOptionId"`
}

func (GetNodePoolOptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodePoolOptionArgs)(nil)).Elem()
}

// A collection of values returned by getNodePoolOption.
type GetNodePoolOptionResultOutput struct{ *pulumi.OutputState }

func (GetNodePoolOptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodePoolOptionResult)(nil)).Elem()
}

func (o GetNodePoolOptionResultOutput) ToGetNodePoolOptionResultOutput() GetNodePoolOptionResultOutput {
	return o
}

func (o GetNodePoolOptionResultOutput) ToGetNodePoolOptionResultOutputWithContext(ctx context.Context) GetNodePoolOptionResultOutput {
	return o
}

func (o GetNodePoolOptionResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNodePoolOptionResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNodePoolOptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodePoolOptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Deprecated. See sources. When creating a node pool, only image names contained in this property can be passed to the `nodeImageName` property.
func (o GetNodePoolOptionResultOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNodePoolOptionResult) []string { return v.Images }).(pulumi.StringArrayOutput)
}

// Available Kubernetes versions.
func (o GetNodePoolOptionResultOutput) KubernetesVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNodePoolOptionResult) []string { return v.KubernetesVersions }).(pulumi.StringArrayOutput)
}

func (o GetNodePoolOptionResultOutput) NodePoolOptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodePoolOptionResult) string { return v.NodePoolOptionId }).(pulumi.StringOutput)
}

// Available shapes for nodes.
func (o GetNodePoolOptionResultOutput) Shapes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNodePoolOptionResult) []string { return v.Shapes }).(pulumi.StringArrayOutput)
}

// Available source of the node.
func (o GetNodePoolOptionResultOutput) Sources() GetNodePoolOptionSourceArrayOutput {
	return o.ApplyT(func(v GetNodePoolOptionResult) []GetNodePoolOptionSource { return v.Sources }).(GetNodePoolOptionSourceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNodePoolOptionResultOutput{})
}
