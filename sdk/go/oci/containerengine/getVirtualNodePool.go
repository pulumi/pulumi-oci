// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerengine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Virtual Node Pool resource in Oracle Cloud Infrastructure Container Engine service.
//
// Get the details of a virtual node pool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/containerengine"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := containerengine.GetVirtualNodePool(ctx, &containerengine.GetVirtualNodePoolArgs{
//				VirtualNodePoolId: testVirtualNodePoolOciContainerengineVirtualNodePool.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVirtualNodePool(ctx *pulumi.Context, args *LookupVirtualNodePoolArgs, opts ...pulumi.InvokeOption) (*LookupVirtualNodePoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVirtualNodePoolResult
	err := ctx.Invoke("oci:ContainerEngine/getVirtualNodePool:getVirtualNodePool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualNodePool.
type LookupVirtualNodePoolArgs struct {
	// The OCID of the virtual node pool.
	VirtualNodePoolId string `pulumi:"virtualNodePoolId"`
}

// A collection of values returned by getVirtualNodePool.
type LookupVirtualNodePoolResult struct {
	// The cluster the virtual node pool is associated with. A virtual node pool can only be associated with one cluster.
	ClusterId string `pulumi:"clusterId"`
	// Compartment of the virtual node pool.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Display name of the virtual node pool. This is a non-unique value.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the virtual node pool.
	Id string `pulumi:"id"`
	// Initial labels that will be added to the Kubernetes Virtual Node object when it registers. This is the same as virtualNodePool resources.
	InitialVirtualNodeLabels []GetVirtualNodePoolInitialVirtualNodeLabel `pulumi:"initialVirtualNodeLabels"`
	// The version of Kubernetes running on the nodes in the node pool.
	KubernetesVersion string `pulumi:"kubernetesVersion"`
	// Details about the state of the Virtual Node Pool.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// List of network security group IDs applied to the Pod VNIC.
	NsgIds []string `pulumi:"nsgIds"`
	// The list of placement configurations which determines where Virtual Nodes will be provisioned across as it relates to the subnet and availability domains. The size attribute determines how many we evenly spread across these placement configurations
	PlacementConfigurations []GetVirtualNodePoolPlacementConfiguration `pulumi:"placementConfigurations"`
	// The pod configuration for pods run on virtual nodes of this virtual node pool.
	PodConfigurations []GetVirtualNodePoolPodConfiguration `pulumi:"podConfigurations"`
	// The number of Virtual Nodes that should be in the Virtual Node Pool. The placement configurations determine where these virtual nodes are placed.
	Size int `pulumi:"size"`
	// The state of the Virtual Node Pool.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// A taint is a collection of <key, value, effect>. These taints will be applied to the Virtual Nodes of this Virtual Node Pool for Kubernetes scheduling.
	Taints []GetVirtualNodePoolTaint `pulumi:"taints"`
	// The time the virtual node pool was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the virtual node pool was updated.
	TimeUpdated       string `pulumi:"timeUpdated"`
	VirtualNodePoolId string `pulumi:"virtualNodePoolId"`
	// The tags associated to the virtual nodes in this virtual node pool.
	VirtualNodeTags []GetVirtualNodePoolVirtualNodeTag `pulumi:"virtualNodeTags"`
}

func LookupVirtualNodePoolOutput(ctx *pulumi.Context, args LookupVirtualNodePoolOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualNodePoolResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVirtualNodePoolResultOutput, error) {
			args := v.(LookupVirtualNodePoolArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ContainerEngine/getVirtualNodePool:getVirtualNodePool", args, LookupVirtualNodePoolResultOutput{}, options).(LookupVirtualNodePoolResultOutput), nil
		}).(LookupVirtualNodePoolResultOutput)
}

// A collection of arguments for invoking getVirtualNodePool.
type LookupVirtualNodePoolOutputArgs struct {
	// The OCID of the virtual node pool.
	VirtualNodePoolId pulumi.StringInput `pulumi:"virtualNodePoolId"`
}

func (LookupVirtualNodePoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualNodePoolArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualNodePool.
type LookupVirtualNodePoolResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualNodePoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualNodePoolResult)(nil)).Elem()
}

func (o LookupVirtualNodePoolResultOutput) ToLookupVirtualNodePoolResultOutput() LookupVirtualNodePoolResultOutput {
	return o
}

func (o LookupVirtualNodePoolResultOutput) ToLookupVirtualNodePoolResultOutputWithContext(ctx context.Context) LookupVirtualNodePoolResultOutput {
	return o
}

// The cluster the virtual node pool is associated with. A virtual node pool can only be associated with one cluster.
func (o LookupVirtualNodePoolResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Compartment of the virtual node pool.
func (o LookupVirtualNodePoolResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupVirtualNodePoolResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Display name of the virtual node pool. This is a non-unique value.
func (o LookupVirtualNodePoolResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupVirtualNodePoolResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the virtual node pool.
func (o LookupVirtualNodePoolResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) string { return v.Id }).(pulumi.StringOutput)
}

// Initial labels that will be added to the Kubernetes Virtual Node object when it registers. This is the same as virtualNodePool resources.
func (o LookupVirtualNodePoolResultOutput) InitialVirtualNodeLabels() GetVirtualNodePoolInitialVirtualNodeLabelArrayOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) []GetVirtualNodePoolInitialVirtualNodeLabel {
		return v.InitialVirtualNodeLabels
	}).(GetVirtualNodePoolInitialVirtualNodeLabelArrayOutput)
}

// The version of Kubernetes running on the nodes in the node pool.
func (o LookupVirtualNodePoolResultOutput) KubernetesVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) string { return v.KubernetesVersion }).(pulumi.StringOutput)
}

// Details about the state of the Virtual Node Pool.
func (o LookupVirtualNodePoolResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of network security group IDs applied to the Pod VNIC.
func (o LookupVirtualNodePoolResultOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The list of placement configurations which determines where Virtual Nodes will be provisioned across as it relates to the subnet and availability domains. The size attribute determines how many we evenly spread across these placement configurations
func (o LookupVirtualNodePoolResultOutput) PlacementConfigurations() GetVirtualNodePoolPlacementConfigurationArrayOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) []GetVirtualNodePoolPlacementConfiguration {
		return v.PlacementConfigurations
	}).(GetVirtualNodePoolPlacementConfigurationArrayOutput)
}

// The pod configuration for pods run on virtual nodes of this virtual node pool.
func (o LookupVirtualNodePoolResultOutput) PodConfigurations() GetVirtualNodePoolPodConfigurationArrayOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) []GetVirtualNodePoolPodConfiguration { return v.PodConfigurations }).(GetVirtualNodePoolPodConfigurationArrayOutput)
}

// The number of Virtual Nodes that should be in the Virtual Node Pool. The placement configurations determine where these virtual nodes are placed.
func (o LookupVirtualNodePoolResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) int { return v.Size }).(pulumi.IntOutput)
}

// The state of the Virtual Node Pool.
func (o LookupVirtualNodePoolResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupVirtualNodePoolResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// A taint is a collection of <key, value, effect>. These taints will be applied to the Virtual Nodes of this Virtual Node Pool for Kubernetes scheduling.
func (o LookupVirtualNodePoolResultOutput) Taints() GetVirtualNodePoolTaintArrayOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) []GetVirtualNodePoolTaint { return v.Taints }).(GetVirtualNodePoolTaintArrayOutput)
}

// The time the virtual node pool was created.
func (o LookupVirtualNodePoolResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the virtual node pool was updated.
func (o LookupVirtualNodePoolResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func (o LookupVirtualNodePoolResultOutput) VirtualNodePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) string { return v.VirtualNodePoolId }).(pulumi.StringOutput)
}

// The tags associated to the virtual nodes in this virtual node pool.
func (o LookupVirtualNodePoolResultOutput) VirtualNodeTags() GetVirtualNodePoolVirtualNodeTagArrayOutput {
	return o.ApplyT(func(v LookupVirtualNodePoolResult) []GetVirtualNodePoolVirtualNodeTag { return v.VirtualNodeTags }).(GetVirtualNodePoolVirtualNodeTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualNodePoolResultOutput{})
}
