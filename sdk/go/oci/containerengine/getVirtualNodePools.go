// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerengine

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Virtual Node Pools in Oracle Cloud Infrastructure Container Engine service.
//
// List all the virtual node pools in a compartment, and optionally filter by cluster.
func GetVirtualNodePools(ctx *pulumi.Context, args *GetVirtualNodePoolsArgs, opts ...pulumi.InvokeOption) (*GetVirtualNodePoolsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVirtualNodePoolsResult
	err := ctx.Invoke("oci:ContainerEngine/getVirtualNodePools:getVirtualNodePools", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualNodePools.
type GetVirtualNodePoolsArgs struct {
	// The OCID of the cluster.
	ClusterId *string `pulumi:"clusterId"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Display name of the virtual node pool. This is a non-unique value.
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetVirtualNodePoolsFilter `pulumi:"filters"`
	// A virtual node pool lifecycle state to filter on. Can have multiple parameters of this name.
	States []string `pulumi:"states"`
}

// A collection of values returned by getVirtualNodePools.
type GetVirtualNodePoolsResult struct {
	// The cluster the virtual node pool is associated with. A virtual node pool can only be associated with one cluster.
	ClusterId *string `pulumi:"clusterId"`
	// Compartment of the virtual node pool.
	CompartmentId string `pulumi:"compartmentId"`
	// Display name of the virtual node pool. This is a non-unique value.
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetVirtualNodePoolsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The state of the Virtual Node Pool.
	States []string `pulumi:"states"`
	// The list of virtual_node_pools.
	VirtualNodePools []GetVirtualNodePoolsVirtualNodePool `pulumi:"virtualNodePools"`
}

func GetVirtualNodePoolsOutput(ctx *pulumi.Context, args GetVirtualNodePoolsOutputArgs, opts ...pulumi.InvokeOption) GetVirtualNodePoolsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVirtualNodePoolsResult, error) {
			args := v.(GetVirtualNodePoolsArgs)
			r, err := GetVirtualNodePools(ctx, &args, opts...)
			var s GetVirtualNodePoolsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVirtualNodePoolsResultOutput)
}

// A collection of arguments for invoking getVirtualNodePools.
type GetVirtualNodePoolsOutputArgs struct {
	// The OCID of the cluster.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Display name of the virtual node pool. This is a non-unique value.
	DisplayName pulumi.StringPtrInput               `pulumi:"displayName"`
	Filters     GetVirtualNodePoolsFilterArrayInput `pulumi:"filters"`
	// A virtual node pool lifecycle state to filter on. Can have multiple parameters of this name.
	States pulumi.StringArrayInput `pulumi:"states"`
}

func (GetVirtualNodePoolsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodePoolsArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualNodePools.
type GetVirtualNodePoolsResultOutput struct{ *pulumi.OutputState }

func (GetVirtualNodePoolsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNodePoolsResult)(nil)).Elem()
}

func (o GetVirtualNodePoolsResultOutput) ToGetVirtualNodePoolsResultOutput() GetVirtualNodePoolsResultOutput {
	return o
}

func (o GetVirtualNodePoolsResultOutput) ToGetVirtualNodePoolsResultOutputWithContext(ctx context.Context) GetVirtualNodePoolsResultOutput {
	return o
}

// The cluster the virtual node pool is associated with. A virtual node pool can only be associated with one cluster.
func (o GetVirtualNodePoolsResultOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualNodePoolsResult) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// Compartment of the virtual node pool.
func (o GetVirtualNodePoolsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodePoolsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Display name of the virtual node pool. This is a non-unique value.
func (o GetVirtualNodePoolsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualNodePoolsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetVirtualNodePoolsResultOutput) Filters() GetVirtualNodePoolsFilterArrayOutput {
	return o.ApplyT(func(v GetVirtualNodePoolsResult) []GetVirtualNodePoolsFilter { return v.Filters }).(GetVirtualNodePoolsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVirtualNodePoolsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNodePoolsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The state of the Virtual Node Pool.
func (o GetVirtualNodePoolsResultOutput) States() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualNodePoolsResult) []string { return v.States }).(pulumi.StringArrayOutput)
}

// The list of virtual_node_pools.
func (o GetVirtualNodePoolsResultOutput) VirtualNodePools() GetVirtualNodePoolsVirtualNodePoolArrayOutput {
	return o.ApplyT(func(v GetVirtualNodePoolsResult) []GetVirtualNodePoolsVirtualNodePool { return v.VirtualNodePools }).(GetVirtualNodePoolsVirtualNodePoolArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVirtualNodePoolsResultOutput{})
}
