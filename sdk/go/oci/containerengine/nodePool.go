// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerengine

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Node Pool resource in Oracle Cloud Infrastructure Container Engine service.
//
// Create a new node pool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/ContainerEngine"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ContainerEngine.NewNodePool(ctx, "testNodePool", &ContainerEngine.NodePoolArgs{
//				ClusterId:     pulumi.Any(oci_containerengine_cluster.Test_cluster.Id),
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				NodeShape:     pulumi.Any(_var.Node_pool_node_shape),
//				DefinedTags: pulumi.AnyMap{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				FreeformTags: pulumi.AnyMap{
//					"Department": pulumi.Any("Finance"),
//				},
//				InitialNodeLabels: containerengine.NodePoolInitialNodeLabelArray{
//					&containerengine.NodePoolInitialNodeLabelArgs{
//						Key:   pulumi.Any(_var.Node_pool_initial_node_labels_key),
//						Value: pulumi.Any(_var.Node_pool_initial_node_labels_value),
//					},
//				},
//				KubernetesVersion: pulumi.Any(_var.Node_pool_kubernetes_version),
//				NodeConfigDetails: &containerengine.NodePoolNodeConfigDetailsArgs{
//					PlacementConfigs: containerengine.NodePoolNodeConfigDetailsPlacementConfigArray{
//						&containerengine.NodePoolNodeConfigDetailsPlacementConfigArgs{
//							AvailabilityDomain:    pulumi.Any(_var.Node_pool_node_config_details_placement_configs_availability_domain),
//							SubnetId:              pulumi.Any(oci_core_subnet.Test_subnet.Id),
//							CapacityReservationId: pulumi.Any(oci_containerengine_capacity_reservation.Test_capacity_reservation.Id),
//							FaultDomains:          pulumi.Any(_var.Node_pool_node_config_details_placement_configs_fault_domains),
//							PreemptibleNodeConfig: &containerengine.NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigArgs{
//								PreemptionAction: &containerengine.NodePoolNodeConfigDetailsPlacementConfigPreemptibleNodeConfigPreemptionActionArgs{
//									Type:                 pulumi.Any(_var.Node_pool_node_config_details_placement_configs_preemptible_node_config_preemption_action_type),
//									IsPreserveBootVolume: pulumi.Any(_var.Node_pool_node_config_details_placement_configs_preemptible_node_config_preemption_action_is_preserve_boot_volume),
//								},
//							},
//						},
//					},
//					Size:                           pulumi.Any(_var.Node_pool_node_config_details_size),
//					IsPvEncryptionInTransitEnabled: pulumi.Any(_var.Node_pool_node_config_details_is_pv_encryption_in_transit_enabled),
//					KmsKeyId:                       pulumi.Any(oci_kms_key.Test_key.Id),
//					NodePoolPodNetworkOptionDetails: &containerengine.NodePoolNodeConfigDetailsNodePoolPodNetworkOptionDetailsArgs{
//						CniType:        pulumi.Any(_var.Node_pool_node_config_details_node_pool_pod_network_option_details_cni_type),
//						MaxPodsPerNode: pulumi.Any(_var.Node_pool_node_config_details_node_pool_pod_network_option_details_max_pods_per_node),
//						PodNsgIds:      pulumi.Any(_var.Node_pool_node_config_details_node_pool_pod_network_option_details_pod_nsg_ids),
//						PodSubnetIds:   pulumi.Any(_var.Node_pool_node_config_details_node_pool_pod_network_option_details_pod_subnet_ids),
//					},
//					DefinedTags: pulumi.AnyMap{
//						"Operations.CostCenter": pulumi.Any("42"),
//					},
//					FreeformTags: pulumi.AnyMap{
//						"Department": pulumi.Any("Finance"),
//					},
//					NsgIds: pulumi.Any(_var.Node_pool_node_config_details_nsg_ids),
//				},
//				NodeEvictionNodePoolSettings: &containerengine.NodePoolNodeEvictionNodePoolSettingsArgs{
//					EvictionGraceDuration:           pulumi.Any(_var.Node_pool_node_eviction_node_pool_settings_eviction_grace_duration),
//					IsForceDeleteAfterGraceDuration: pulumi.Any(_var.Node_pool_node_eviction_node_pool_settings_is_force_delete_after_grace_duration),
//				},
//				NodeImageName: pulumi.Any(oci_core_image.Test_image.Name),
//				NodeMetadata:  pulumi.Any(_var.Node_pool_node_metadata),
//				NodePoolCyclingDetails: &containerengine.NodePoolNodePoolCyclingDetailsArgs{
//					IsNodeCyclingEnabled: pulumi.Any(_var.Node_pool_node_pool_cycling_details_is_node_cycling_enabled),
//					MaximumSurge:         pulumi.Any(_var.Node_pool_node_pool_cycling_details_maximum_surge),
//					MaximumUnavailable:   pulumi.Any(_var.Node_pool_node_pool_cycling_details_maximum_unavailable),
//				},
//				NodeShapeConfig: &containerengine.NodePoolNodeShapeConfigArgs{
//					MemoryInGbs: pulumi.Any(_var.Node_pool_node_shape_config_memory_in_gbs),
//					Ocpus:       pulumi.Any(_var.Node_pool_node_shape_config_ocpus),
//				},
//				NodeSourceDetails: &containerengine.NodePoolNodeSourceDetailsArgs{
//					ImageId:             pulumi.Any(oci_core_image.Test_image.Id),
//					SourceType:          pulumi.Any(_var.Node_pool_node_source_details_source_type),
//					BootVolumeSizeInGbs: pulumi.Any(_var.Node_pool_node_source_details_boot_volume_size_in_gbs),
//				},
//				QuantityPerSubnet: pulumi.Any(_var.Node_pool_quantity_per_subnet),
//				SshPublicKey:      pulumi.Any(_var.Node_pool_ssh_public_key),
//				SubnetIds:         pulumi.Any(_var.Node_pool_subnet_ids),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NodePools can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:ContainerEngine/nodePool:NodePool test_node_pool "id"
//
// ```
type NodePool struct {
	pulumi.CustomResourceState

	// The OCID of the cluster to which this node pool is attached.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The OCID of the compartment in which the node pool exists.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
	InitialNodeLabels NodePoolInitialNodeLabelArrayOutput `pulumi:"initialNodeLabels"`
	// (Updatable) The version of Kubernetes to install on the nodes in the node pool.
	KubernetesVersion pulumi.StringOutput `pulumi:"kubernetesVersion"`
	// Details about the state of the node.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The name of the node pool. Avoid entering confidential information.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	NodeConfigDetails NodePoolNodeConfigDetailsOutput `pulumi:"nodeConfigDetails"`
	// (Updatable) Node Eviction Details configuration
	NodeEvictionNodePoolSettings NodePoolNodeEvictionNodePoolSettingsOutput `pulumi:"nodeEvictionNodePoolSettings"`
	// Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
	//
	// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageId pulumi.StringOutput `pulumi:"nodeImageId"`
	// Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
	//
	// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageName pulumi.StringOutput `pulumi:"nodeImageName"`
	// (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
	NodeMetadata pulumi.MapOutput `pulumi:"nodeMetadata"`
	// (Updatable) Node Pool Cycling Details
	NodePoolCyclingDetails NodePoolNodePoolCyclingDetailsOutput `pulumi:"nodePoolCyclingDetails"`
	// (Updatable) The name of the node shape of the nodes in the node pool.
	NodeShape pulumi.StringOutput `pulumi:"nodeShape"`
	// (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
	NodeShapeConfig NodePoolNodeShapeConfigOutput `pulumi:"nodeShapeConfig"`
	// (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
	NodeSourceDetails NodePoolNodeSourceDetailsOutput `pulumi:"nodeSourceDetails"`
	// Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
	NodeSources NodePoolNodeSourceArrayOutput `pulumi:"nodeSources"`
	// The nodes in the node pool.
	Nodes NodePoolNodeArrayOutput `pulumi:"nodes"`
	// (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
	QuantityPerSubnet pulumi.IntOutput `pulumi:"quantityPerSubnet"`
	// (Updatable) The SSH public key on each node in the node pool on launch.
	SshPublicKey pulumi.StringOutput `pulumi:"sshPublicKey"`
	// The state of the nodepool.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	SubnetIds pulumi.StringArrayOutput `pulumi:"subnetIds"`
}

// NewNodePool registers a new resource with the given unique name, arguments, and options.
func NewNodePool(ctx *pulumi.Context,
	name string, args *NodePoolArgs, opts ...pulumi.ResourceOption) (*NodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.NodeShape == nil {
		return nil, errors.New("invalid value for required argument 'NodeShape'")
	}
	var resource NodePool
	err := ctx.RegisterResource("oci:ContainerEngine/nodePool:NodePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodePool gets an existing NodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodePoolState, opts ...pulumi.ResourceOption) (*NodePool, error) {
	var resource NodePool
	err := ctx.ReadResource("oci:ContainerEngine/nodePool:NodePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodePool resources.
type nodePoolState struct {
	// The OCID of the cluster to which this node pool is attached.
	ClusterId *string `pulumi:"clusterId"`
	// The OCID of the compartment in which the node pool exists.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
	InitialNodeLabels []NodePoolInitialNodeLabel `pulumi:"initialNodeLabels"`
	// (Updatable) The version of Kubernetes to install on the nodes in the node pool.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// Details about the state of the node.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The name of the node pool. Avoid entering confidential information.
	Name *string `pulumi:"name"`
	// (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	NodeConfigDetails *NodePoolNodeConfigDetails `pulumi:"nodeConfigDetails"`
	// (Updatable) Node Eviction Details configuration
	NodeEvictionNodePoolSettings *NodePoolNodeEvictionNodePoolSettings `pulumi:"nodeEvictionNodePoolSettings"`
	// Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
	//
	// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageId *string `pulumi:"nodeImageId"`
	// Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
	//
	// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageName *string `pulumi:"nodeImageName"`
	// (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
	NodeMetadata map[string]interface{} `pulumi:"nodeMetadata"`
	// (Updatable) Node Pool Cycling Details
	NodePoolCyclingDetails *NodePoolNodePoolCyclingDetails `pulumi:"nodePoolCyclingDetails"`
	// (Updatable) The name of the node shape of the nodes in the node pool.
	NodeShape *string `pulumi:"nodeShape"`
	// (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
	NodeShapeConfig *NodePoolNodeShapeConfig `pulumi:"nodeShapeConfig"`
	// (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
	NodeSourceDetails *NodePoolNodeSourceDetails `pulumi:"nodeSourceDetails"`
	// Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
	NodeSources []NodePoolNodeSource `pulumi:"nodeSources"`
	// The nodes in the node pool.
	Nodes []NodePoolNode `pulumi:"nodes"`
	// (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
	QuantityPerSubnet *int `pulumi:"quantityPerSubnet"`
	// (Updatable) The SSH public key on each node in the node pool on launch.
	SshPublicKey *string `pulumi:"sshPublicKey"`
	// The state of the nodepool.
	State *string `pulumi:"state"`
	// (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	SubnetIds []string `pulumi:"subnetIds"`
}

type NodePoolState struct {
	// The OCID of the cluster to which this node pool is attached.
	ClusterId pulumi.StringPtrInput
	// The OCID of the compartment in which the node pool exists.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
	InitialNodeLabels NodePoolInitialNodeLabelArrayInput
	// (Updatable) The version of Kubernetes to install on the nodes in the node pool.
	KubernetesVersion pulumi.StringPtrInput
	// Details about the state of the node.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The name of the node pool. Avoid entering confidential information.
	Name pulumi.StringPtrInput
	// (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	NodeConfigDetails NodePoolNodeConfigDetailsPtrInput
	// (Updatable) Node Eviction Details configuration
	NodeEvictionNodePoolSettings NodePoolNodeEvictionNodePoolSettingsPtrInput
	// Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
	//
	// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageId pulumi.StringPtrInput
	// Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
	//
	// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageName pulumi.StringPtrInput
	// (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
	NodeMetadata pulumi.MapInput
	// (Updatable) Node Pool Cycling Details
	NodePoolCyclingDetails NodePoolNodePoolCyclingDetailsPtrInput
	// (Updatable) The name of the node shape of the nodes in the node pool.
	NodeShape pulumi.StringPtrInput
	// (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
	NodeShapeConfig NodePoolNodeShapeConfigPtrInput
	// (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
	NodeSourceDetails NodePoolNodeSourceDetailsPtrInput
	// Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
	NodeSources NodePoolNodeSourceArrayInput
	// The nodes in the node pool.
	Nodes NodePoolNodeArrayInput
	// (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
	QuantityPerSubnet pulumi.IntPtrInput
	// (Updatable) The SSH public key on each node in the node pool on launch.
	SshPublicKey pulumi.StringPtrInput
	// The state of the nodepool.
	State pulumi.StringPtrInput
	// (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	SubnetIds pulumi.StringArrayInput
}

func (NodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodePoolState)(nil)).Elem()
}

type nodePoolArgs struct {
	// The OCID of the cluster to which this node pool is attached.
	ClusterId string `pulumi:"clusterId"`
	// The OCID of the compartment in which the node pool exists.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
	InitialNodeLabels []NodePoolInitialNodeLabel `pulumi:"initialNodeLabels"`
	// (Updatable) The version of Kubernetes to install on the nodes in the node pool.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// (Updatable) The name of the node pool. Avoid entering confidential information.
	Name *string `pulumi:"name"`
	// (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	NodeConfigDetails *NodePoolNodeConfigDetails `pulumi:"nodeConfigDetails"`
	// (Updatable) Node Eviction Details configuration
	NodeEvictionNodePoolSettings *NodePoolNodeEvictionNodePoolSettings `pulumi:"nodeEvictionNodePoolSettings"`
	// Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
	//
	// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageId *string `pulumi:"nodeImageId"`
	// Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
	//
	// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageName *string `pulumi:"nodeImageName"`
	// (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
	NodeMetadata map[string]interface{} `pulumi:"nodeMetadata"`
	// (Updatable) Node Pool Cycling Details
	NodePoolCyclingDetails *NodePoolNodePoolCyclingDetails `pulumi:"nodePoolCyclingDetails"`
	// (Updatable) The name of the node shape of the nodes in the node pool.
	NodeShape string `pulumi:"nodeShape"`
	// (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
	NodeShapeConfig *NodePoolNodeShapeConfig `pulumi:"nodeShapeConfig"`
	// (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
	NodeSourceDetails *NodePoolNodeSourceDetails `pulumi:"nodeSourceDetails"`
	// (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
	QuantityPerSubnet *int `pulumi:"quantityPerSubnet"`
	// (Updatable) The SSH public key on each node in the node pool on launch.
	SshPublicKey *string `pulumi:"sshPublicKey"`
	// (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	SubnetIds []string `pulumi:"subnetIds"`
}

// The set of arguments for constructing a NodePool resource.
type NodePoolArgs struct {
	// The OCID of the cluster to which this node pool is attached.
	ClusterId pulumi.StringInput
	// The OCID of the compartment in which the node pool exists.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
	InitialNodeLabels NodePoolInitialNodeLabelArrayInput
	// (Updatable) The version of Kubernetes to install on the nodes in the node pool.
	KubernetesVersion pulumi.StringPtrInput
	// (Updatable) The name of the node pool. Avoid entering confidential information.
	Name pulumi.StringPtrInput
	// (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	NodeConfigDetails NodePoolNodeConfigDetailsPtrInput
	// (Updatable) Node Eviction Details configuration
	NodeEvictionNodePoolSettings NodePoolNodeEvictionNodePoolSettingsPtrInput
	// Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
	//
	// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageId pulumi.StringPtrInput
	// Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
	//
	// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
	NodeImageName pulumi.StringPtrInput
	// (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
	NodeMetadata pulumi.MapInput
	// (Updatable) Node Pool Cycling Details
	NodePoolCyclingDetails NodePoolNodePoolCyclingDetailsPtrInput
	// (Updatable) The name of the node shape of the nodes in the node pool.
	NodeShape pulumi.StringInput
	// (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
	NodeShapeConfig NodePoolNodeShapeConfigPtrInput
	// (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
	NodeSourceDetails NodePoolNodeSourceDetailsPtrInput
	// (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
	QuantityPerSubnet pulumi.IntPtrInput
	// (Updatable) The SSH public key on each node in the node pool on launch.
	SshPublicKey pulumi.StringPtrInput
	// (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
	SubnetIds pulumi.StringArrayInput
}

func (NodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodePoolArgs)(nil)).Elem()
}

type NodePoolInput interface {
	pulumi.Input

	ToNodePoolOutput() NodePoolOutput
	ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput
}

func (*NodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePool)(nil)).Elem()
}

func (i *NodePool) ToNodePoolOutput() NodePoolOutput {
	return i.ToNodePoolOutputWithContext(context.Background())
}

func (i *NodePool) ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolOutput)
}

// NodePoolArrayInput is an input type that accepts NodePoolArray and NodePoolArrayOutput values.
// You can construct a concrete instance of `NodePoolArrayInput` via:
//
//	NodePoolArray{ NodePoolArgs{...} }
type NodePoolArrayInput interface {
	pulumi.Input

	ToNodePoolArrayOutput() NodePoolArrayOutput
	ToNodePoolArrayOutputWithContext(context.Context) NodePoolArrayOutput
}

type NodePoolArray []NodePoolInput

func (NodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodePool)(nil)).Elem()
}

func (i NodePoolArray) ToNodePoolArrayOutput() NodePoolArrayOutput {
	return i.ToNodePoolArrayOutputWithContext(context.Background())
}

func (i NodePoolArray) ToNodePoolArrayOutputWithContext(ctx context.Context) NodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolArrayOutput)
}

// NodePoolMapInput is an input type that accepts NodePoolMap and NodePoolMapOutput values.
// You can construct a concrete instance of `NodePoolMapInput` via:
//
//	NodePoolMap{ "key": NodePoolArgs{...} }
type NodePoolMapInput interface {
	pulumi.Input

	ToNodePoolMapOutput() NodePoolMapOutput
	ToNodePoolMapOutputWithContext(context.Context) NodePoolMapOutput
}

type NodePoolMap map[string]NodePoolInput

func (NodePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodePool)(nil)).Elem()
}

func (i NodePoolMap) ToNodePoolMapOutput() NodePoolMapOutput {
	return i.ToNodePoolMapOutputWithContext(context.Background())
}

func (i NodePoolMap) ToNodePoolMapOutputWithContext(ctx context.Context) NodePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolMapOutput)
}

type NodePoolOutput struct{ *pulumi.OutputState }

func (NodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePool)(nil)).Elem()
}

func (o NodePoolOutput) ToNodePoolOutput() NodePoolOutput {
	return o
}

func (o NodePoolOutput) ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput {
	return o
}

// The OCID of the cluster to which this node pool is attached.
func (o NodePoolOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// The OCID of the compartment in which the node pool exists.
func (o NodePoolOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o NodePoolOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *NodePool) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o NodePoolOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *NodePool) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
func (o NodePoolOutput) InitialNodeLabels() NodePoolInitialNodeLabelArrayOutput {
	return o.ApplyT(func(v *NodePool) NodePoolInitialNodeLabelArrayOutput { return v.InitialNodeLabels }).(NodePoolInitialNodeLabelArrayOutput)
}

// (Updatable) The version of Kubernetes to install on the nodes in the node pool.
func (o NodePoolOutput) KubernetesVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.KubernetesVersion }).(pulumi.StringOutput)
}

// Details about the state of the node.
func (o NodePoolOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) The name of the node pool. Avoid entering confidential information.
func (o NodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
func (o NodePoolOutput) NodeConfigDetails() NodePoolNodeConfigDetailsOutput {
	return o.ApplyT(func(v *NodePool) NodePoolNodeConfigDetailsOutput { return v.NodeConfigDetails }).(NodePoolNodeConfigDetailsOutput)
}

// (Updatable) Node Eviction Details configuration
func (o NodePoolOutput) NodeEvictionNodePoolSettings() NodePoolNodeEvictionNodePoolSettingsOutput {
	return o.ApplyT(func(v *NodePool) NodePoolNodeEvictionNodePoolSettingsOutput { return v.NodeEvictionNodePoolSettings }).(NodePoolNodeEvictionNodePoolSettingsOutput)
}

// Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
//
// Deprecated: The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
func (o NodePoolOutput) NodeImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.NodeImageId }).(pulumi.StringOutput)
}

// Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
//
// Deprecated: The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
func (o NodePoolOutput) NodeImageName() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.NodeImageName }).(pulumi.StringOutput)
}

// (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
func (o NodePoolOutput) NodeMetadata() pulumi.MapOutput {
	return o.ApplyT(func(v *NodePool) pulumi.MapOutput { return v.NodeMetadata }).(pulumi.MapOutput)
}

// (Updatable) Node Pool Cycling Details
func (o NodePoolOutput) NodePoolCyclingDetails() NodePoolNodePoolCyclingDetailsOutput {
	return o.ApplyT(func(v *NodePool) NodePoolNodePoolCyclingDetailsOutput { return v.NodePoolCyclingDetails }).(NodePoolNodePoolCyclingDetailsOutput)
}

// (Updatable) The name of the node shape of the nodes in the node pool.
func (o NodePoolOutput) NodeShape() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.NodeShape }).(pulumi.StringOutput)
}

// (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
func (o NodePoolOutput) NodeShapeConfig() NodePoolNodeShapeConfigOutput {
	return o.ApplyT(func(v *NodePool) NodePoolNodeShapeConfigOutput { return v.NodeShapeConfig }).(NodePoolNodeShapeConfigOutput)
}

// (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
func (o NodePoolOutput) NodeSourceDetails() NodePoolNodeSourceDetailsOutput {
	return o.ApplyT(func(v *NodePool) NodePoolNodeSourceDetailsOutput { return v.NodeSourceDetails }).(NodePoolNodeSourceDetailsOutput)
}

// Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
func (o NodePoolOutput) NodeSources() NodePoolNodeSourceArrayOutput {
	return o.ApplyT(func(v *NodePool) NodePoolNodeSourceArrayOutput { return v.NodeSources }).(NodePoolNodeSourceArrayOutput)
}

// The nodes in the node pool.
func (o NodePoolOutput) Nodes() NodePoolNodeArrayOutput {
	return o.ApplyT(func(v *NodePool) NodePoolNodeArrayOutput { return v.Nodes }).(NodePoolNodeArrayOutput)
}

// (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
func (o NodePoolOutput) QuantityPerSubnet() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.QuantityPerSubnet }).(pulumi.IntOutput)
}

// (Updatable) The SSH public key on each node in the node pool on launch.
func (o NodePoolOutput) SshPublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.SshPublicKey }).(pulumi.StringOutput)
}

// The state of the nodepool.
func (o NodePoolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
func (o NodePoolOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringArrayOutput { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type NodePoolArrayOutput struct{ *pulumi.OutputState }

func (NodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodePool)(nil)).Elem()
}

func (o NodePoolArrayOutput) ToNodePoolArrayOutput() NodePoolArrayOutput {
	return o
}

func (o NodePoolArrayOutput) ToNodePoolArrayOutputWithContext(ctx context.Context) NodePoolArrayOutput {
	return o
}

func (o NodePoolArrayOutput) Index(i pulumi.IntInput) NodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NodePool {
		return vs[0].([]*NodePool)[vs[1].(int)]
	}).(NodePoolOutput)
}

type NodePoolMapOutput struct{ *pulumi.OutputState }

func (NodePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodePool)(nil)).Elem()
}

func (o NodePoolMapOutput) ToNodePoolMapOutput() NodePoolMapOutput {
	return o
}

func (o NodePoolMapOutput) ToNodePoolMapOutputWithContext(ctx context.Context) NodePoolMapOutput {
	return o
}

func (o NodePoolMapOutput) MapIndex(k pulumi.StringInput) NodePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NodePool {
		return vs[0].(map[string]*NodePool)[vs[1].(string)]
	}).(NodePoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolInput)(nil)).Elem(), &NodePool{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolArrayInput)(nil)).Elem(), NodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolMapInput)(nil)).Elem(), NodePoolMap{})
	pulumi.RegisterOutputType(NodePoolOutput{})
	pulumi.RegisterOutputType(NodePoolArrayOutput{})
	pulumi.RegisterOutputType(NodePoolMapOutput{})
}
