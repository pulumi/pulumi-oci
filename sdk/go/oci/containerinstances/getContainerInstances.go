// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerinstances

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Container Instances in Oracle Cloud Infrastructure Container Instances service.
//
// Returns a list of container instances.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/containerinstances"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := containerinstances.GetContainerInstances(ctx, &containerinstances.GetContainerInstancesArgs{
//				CompartmentId:      compartmentId,
//				AvailabilityDomain: pulumi.StringRef(containerInstanceAvailabilityDomain),
//				DisplayName:        pulumi.StringRef(containerInstanceDisplayName),
//				State:              pulumi.StringRef(containerInstanceState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetContainerInstances(ctx *pulumi.Context, args *GetContainerInstancesArgs, opts ...pulumi.InvokeOption) (*GetContainerInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetContainerInstancesResult
	err := ctx.Invoke("oci:ContainerInstances/getContainerInstances:getContainerInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerInstances.
type GetContainerInstancesArgs struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetContainerInstancesFilter `pulumi:"filters"`
	// A filter to only return resources that match the given lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getContainerInstances.
type GetContainerInstancesResult struct {
	// The availability domain to place the container instance.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of container_instance_collection.
	ContainerInstanceCollections []GetContainerInstancesContainerInstanceCollection `pulumi:"containerInstanceCollections"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetContainerInstancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the container instance.
	State *string `pulumi:"state"`
}

func GetContainerInstancesOutput(ctx *pulumi.Context, args GetContainerInstancesOutputArgs, opts ...pulumi.InvokeOption) GetContainerInstancesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetContainerInstancesResultOutput, error) {
			args := v.(GetContainerInstancesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:ContainerInstances/getContainerInstances:getContainerInstances", args, GetContainerInstancesResultOutput{}, options).(GetContainerInstancesResultOutput), nil
		}).(GetContainerInstancesResultOutput)
}

// A collection of arguments for invoking getContainerInstances.
type GetContainerInstancesOutputArgs struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                 `pulumi:"displayName"`
	Filters     GetContainerInstancesFilterArrayInput `pulumi:"filters"`
	// A filter to only return resources that match the given lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetContainerInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getContainerInstances.
type GetContainerInstancesResultOutput struct{ *pulumi.OutputState }

func (GetContainerInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerInstancesResult)(nil)).Elem()
}

func (o GetContainerInstancesResultOutput) ToGetContainerInstancesResultOutput() GetContainerInstancesResultOutput {
	return o
}

func (o GetContainerInstancesResultOutput) ToGetContainerInstancesResultOutputWithContext(ctx context.Context) GetContainerInstancesResultOutput {
	return o
}

// The availability domain to place the container instance.
func (o GetContainerInstancesResultOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerInstancesResult) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment.
func (o GetContainerInstancesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerInstancesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of container_instance_collection.
func (o GetContainerInstancesResultOutput) ContainerInstanceCollections() GetContainerInstancesContainerInstanceCollectionArrayOutput {
	return o.ApplyT(func(v GetContainerInstancesResult) []GetContainerInstancesContainerInstanceCollection {
		return v.ContainerInstanceCollections
	}).(GetContainerInstancesContainerInstanceCollectionArrayOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetContainerInstancesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerInstancesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetContainerInstancesResultOutput) Filters() GetContainerInstancesFilterArrayOutput {
	return o.ApplyT(func(v GetContainerInstancesResult) []GetContainerInstancesFilter { return v.Filters }).(GetContainerInstancesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetContainerInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the container instance.
func (o GetContainerInstancesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerInstancesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetContainerInstancesResultOutput{})
}
