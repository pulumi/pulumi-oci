// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Compute Capacity Report resource in Oracle Cloud Infrastructure Core service.
//
// Generates a report of the host capacity within an availability domain that is available for you
// to create compute instances. Host capacity is the physical infrastructure that resources such as compute
// instances run on.
//
// Use the capacity report to determine whether sufficient capacity is available for a shape before
// you create an instance or change the shape of an instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.NewComputeCapacityReport(ctx, "test_compute_capacity_report", &Core.ComputeCapacityReportArgs{
//				AvailabilityDomain: pulumi.Any(computeCapacityReportAvailabilityDomain),
//				CompartmentId:      pulumi.Any(compartmentId),
//				ShapeAvailabilities: core.ComputeCapacityReportShapeAvailabilityArray{
//					&core.ComputeCapacityReportShapeAvailabilityArgs{
//						InstanceShape: pulumi.Any(computeCapacityReportShapeAvailabilitiesInstanceShape),
//						FaultDomain:   pulumi.Any(computeCapacityReportShapeAvailabilitiesFaultDomain),
//						InstanceShapeConfig: &core.ComputeCapacityReportShapeAvailabilityInstanceShapeConfigArgs{
//							MemoryInGbs: pulumi.Any(computeCapacityReportShapeAvailabilitiesInstanceShapeConfigMemoryInGbs),
//							Nvmes:       pulumi.Any(computeCapacityReportShapeAvailabilitiesInstanceShapeConfigNvmes),
//							Ocpus:       pulumi.Any(computeCapacityReportShapeAvailabilitiesInstanceShapeConfigOcpus),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ComputeCapacityReports can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Core/computeCapacityReport:ComputeCapacityReport test_compute_capacity_report "id"
// ```
type ComputeCapacityReport struct {
	pulumi.CustomResourceState

	// The availability domain for the capacity report.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Information about the shapes in the capacity report.
	ShapeAvailabilities ComputeCapacityReportShapeAvailabilityArrayOutput `pulumi:"shapeAvailabilities"`
	// The date and time the capacity report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewComputeCapacityReport registers a new resource with the given unique name, arguments, and options.
func NewComputeCapacityReport(ctx *pulumi.Context,
	name string, args *ComputeCapacityReportArgs, opts ...pulumi.ResourceOption) (*ComputeCapacityReport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityDomain == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityDomain'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ShapeAvailabilities == nil {
		return nil, errors.New("invalid value for required argument 'ShapeAvailabilities'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ComputeCapacityReport
	err := ctx.RegisterResource("oci:Core/computeCapacityReport:ComputeCapacityReport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeCapacityReport gets an existing ComputeCapacityReport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeCapacityReport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeCapacityReportState, opts ...pulumi.ResourceOption) (*ComputeCapacityReport, error) {
	var resource ComputeCapacityReport
	err := ctx.ReadResource("oci:Core/computeCapacityReport:ComputeCapacityReport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeCapacityReport resources.
type computeCapacityReportState struct {
	// The availability domain for the capacity report.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// Information about the shapes in the capacity report.
	ShapeAvailabilities []ComputeCapacityReportShapeAvailability `pulumi:"shapeAvailabilities"`
	// The date and time the capacity report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type ComputeCapacityReportState struct {
	// The availability domain for the capacity report.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root compartment.
	CompartmentId pulumi.StringPtrInput
	// Information about the shapes in the capacity report.
	ShapeAvailabilities ComputeCapacityReportShapeAvailabilityArrayInput
	// The date and time the capacity report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (ComputeCapacityReportState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeCapacityReportState)(nil)).Elem()
}

type computeCapacityReportArgs struct {
	// The availability domain for the capacity report.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Information about the shapes in the capacity report.
	ShapeAvailabilities []ComputeCapacityReportShapeAvailability `pulumi:"shapeAvailabilities"`
}

// The set of arguments for constructing a ComputeCapacityReport resource.
type ComputeCapacityReportArgs struct {
	// The availability domain for the capacity report.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root compartment.
	CompartmentId pulumi.StringInput
	// Information about the shapes in the capacity report.
	ShapeAvailabilities ComputeCapacityReportShapeAvailabilityArrayInput
}

func (ComputeCapacityReportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeCapacityReportArgs)(nil)).Elem()
}

type ComputeCapacityReportInput interface {
	pulumi.Input

	ToComputeCapacityReportOutput() ComputeCapacityReportOutput
	ToComputeCapacityReportOutputWithContext(ctx context.Context) ComputeCapacityReportOutput
}

func (*ComputeCapacityReport) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeCapacityReport)(nil)).Elem()
}

func (i *ComputeCapacityReport) ToComputeCapacityReportOutput() ComputeCapacityReportOutput {
	return i.ToComputeCapacityReportOutputWithContext(context.Background())
}

func (i *ComputeCapacityReport) ToComputeCapacityReportOutputWithContext(ctx context.Context) ComputeCapacityReportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeCapacityReportOutput)
}

// ComputeCapacityReportArrayInput is an input type that accepts ComputeCapacityReportArray and ComputeCapacityReportArrayOutput values.
// You can construct a concrete instance of `ComputeCapacityReportArrayInput` via:
//
//	ComputeCapacityReportArray{ ComputeCapacityReportArgs{...} }
type ComputeCapacityReportArrayInput interface {
	pulumi.Input

	ToComputeCapacityReportArrayOutput() ComputeCapacityReportArrayOutput
	ToComputeCapacityReportArrayOutputWithContext(context.Context) ComputeCapacityReportArrayOutput
}

type ComputeCapacityReportArray []ComputeCapacityReportInput

func (ComputeCapacityReportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeCapacityReport)(nil)).Elem()
}

func (i ComputeCapacityReportArray) ToComputeCapacityReportArrayOutput() ComputeCapacityReportArrayOutput {
	return i.ToComputeCapacityReportArrayOutputWithContext(context.Background())
}

func (i ComputeCapacityReportArray) ToComputeCapacityReportArrayOutputWithContext(ctx context.Context) ComputeCapacityReportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeCapacityReportArrayOutput)
}

// ComputeCapacityReportMapInput is an input type that accepts ComputeCapacityReportMap and ComputeCapacityReportMapOutput values.
// You can construct a concrete instance of `ComputeCapacityReportMapInput` via:
//
//	ComputeCapacityReportMap{ "key": ComputeCapacityReportArgs{...} }
type ComputeCapacityReportMapInput interface {
	pulumi.Input

	ToComputeCapacityReportMapOutput() ComputeCapacityReportMapOutput
	ToComputeCapacityReportMapOutputWithContext(context.Context) ComputeCapacityReportMapOutput
}

type ComputeCapacityReportMap map[string]ComputeCapacityReportInput

func (ComputeCapacityReportMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeCapacityReport)(nil)).Elem()
}

func (i ComputeCapacityReportMap) ToComputeCapacityReportMapOutput() ComputeCapacityReportMapOutput {
	return i.ToComputeCapacityReportMapOutputWithContext(context.Background())
}

func (i ComputeCapacityReportMap) ToComputeCapacityReportMapOutputWithContext(ctx context.Context) ComputeCapacityReportMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeCapacityReportMapOutput)
}

type ComputeCapacityReportOutput struct{ *pulumi.OutputState }

func (ComputeCapacityReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeCapacityReport)(nil)).Elem()
}

func (o ComputeCapacityReportOutput) ToComputeCapacityReportOutput() ComputeCapacityReportOutput {
	return o
}

func (o ComputeCapacityReportOutput) ToComputeCapacityReportOutputWithContext(ctx context.Context) ComputeCapacityReportOutput {
	return o
}

// The availability domain for the capacity report.  Example: `Uocm:PHX-AD-1`
func (o ComputeCapacityReportOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeCapacityReport) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root compartment.
func (o ComputeCapacityReportOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeCapacityReport) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Information about the shapes in the capacity report.
func (o ComputeCapacityReportOutput) ShapeAvailabilities() ComputeCapacityReportShapeAvailabilityArrayOutput {
	return o.ApplyT(func(v *ComputeCapacityReport) ComputeCapacityReportShapeAvailabilityArrayOutput {
		return v.ShapeAvailabilities
	}).(ComputeCapacityReportShapeAvailabilityArrayOutput)
}

// The date and time the capacity report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o ComputeCapacityReportOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeCapacityReport) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type ComputeCapacityReportArrayOutput struct{ *pulumi.OutputState }

func (ComputeCapacityReportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeCapacityReport)(nil)).Elem()
}

func (o ComputeCapacityReportArrayOutput) ToComputeCapacityReportArrayOutput() ComputeCapacityReportArrayOutput {
	return o
}

func (o ComputeCapacityReportArrayOutput) ToComputeCapacityReportArrayOutputWithContext(ctx context.Context) ComputeCapacityReportArrayOutput {
	return o
}

func (o ComputeCapacityReportArrayOutput) Index(i pulumi.IntInput) ComputeCapacityReportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ComputeCapacityReport {
		return vs[0].([]*ComputeCapacityReport)[vs[1].(int)]
	}).(ComputeCapacityReportOutput)
}

type ComputeCapacityReportMapOutput struct{ *pulumi.OutputState }

func (ComputeCapacityReportMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeCapacityReport)(nil)).Elem()
}

func (o ComputeCapacityReportMapOutput) ToComputeCapacityReportMapOutput() ComputeCapacityReportMapOutput {
	return o
}

func (o ComputeCapacityReportMapOutput) ToComputeCapacityReportMapOutputWithContext(ctx context.Context) ComputeCapacityReportMapOutput {
	return o
}

func (o ComputeCapacityReportMapOutput) MapIndex(k pulumi.StringInput) ComputeCapacityReportOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ComputeCapacityReport {
		return vs[0].(map[string]*ComputeCapacityReport)[vs[1].(string)]
	}).(ComputeCapacityReportOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeCapacityReportInput)(nil)).Elem(), &ComputeCapacityReport{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeCapacityReportArrayInput)(nil)).Elem(), ComputeCapacityReportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeCapacityReportMapInput)(nil)).Elem(), ComputeCapacityReportMap{})
	pulumi.RegisterOutputType(ComputeCapacityReportOutput{})
	pulumi.RegisterOutputType(ComputeCapacityReportArrayOutput{})
	pulumi.RegisterOutputType(ComputeCapacityReportMapOutput{})
}
