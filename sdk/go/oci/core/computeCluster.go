// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Compute Cluster resource in Oracle Cloud Infrastructure Core service.
//
// Creates an empty compute cluster, which is a remote direct memory access (RDMA) network group.
// After the compute cluster is created, you can use the compute cluster's OCID with the
// [LaunchInstance](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Instance/LaunchInstance) operation to create instances in the compute cluster.
// For more information, see [Compute Clusters](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/compute-clusters.htm).
//
// To create a cluster network that uses intance pools to manage groups of identical instances,
// see [CreateClusterNetwork](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/ClusterNetwork/CreateClusterNetwork).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.NewComputeCluster(ctx, "testComputeCluster", &Core.ComputeClusterArgs{
//				AvailabilityDomain: pulumi.Any(_var.Compute_cluster_availability_domain),
//				CompartmentId:      pulumi.Any(_var.Compartment_id),
//				DefinedTags: pulumi.AnyMap{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				DisplayName: pulumi.Any(_var.Compute_cluster_display_name),
//				FreeformTags: pulumi.AnyMap{
//					"Department": pulumi.Any("Finance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ComputeClusters can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Core/computeCluster:ComputeCluster test_compute_cluster "id"
//
// ```
type ComputeCluster struct {
	pulumi.CustomResourceState

	// The availability domain that the compute cluster is running in. Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains this compute cluster.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The current state of the compute cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the compute cluster was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewComputeCluster registers a new resource with the given unique name, arguments, and options.
func NewComputeCluster(ctx *pulumi.Context,
	name string, args *ComputeClusterArgs, opts ...pulumi.ResourceOption) (*ComputeCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityDomain == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityDomain'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	var resource ComputeCluster
	err := ctx.RegisterResource("oci:Core/computeCluster:ComputeCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeCluster gets an existing ComputeCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeClusterState, opts ...pulumi.ResourceOption) (*ComputeCluster, error) {
	var resource ComputeCluster
	err := ctx.ReadResource("oci:Core/computeCluster:ComputeCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeCluster resources.
type computeClusterState struct {
	// The availability domain that the compute cluster is running in. Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains this compute cluster.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The current state of the compute cluster.
	State *string `pulumi:"state"`
	// The date and time the compute cluster was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type ComputeClusterState struct {
	// The availability domain that the compute cluster is running in. Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains this compute cluster.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapInput
	// The current state of the compute cluster.
	State pulumi.StringPtrInput
	// The date and time the compute cluster was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (ComputeClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeClusterState)(nil)).Elem()
}

type computeClusterArgs struct {
	// The availability domain that the compute cluster is running in. Example: `Uocm:PHX-AD-1`
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains this compute cluster.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a ComputeCluster resource.
type ComputeClusterArgs struct {
	// The availability domain that the compute cluster is running in. Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains this compute cluster.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapInput
}

func (ComputeClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeClusterArgs)(nil)).Elem()
}

type ComputeClusterInput interface {
	pulumi.Input

	ToComputeClusterOutput() ComputeClusterOutput
	ToComputeClusterOutputWithContext(ctx context.Context) ComputeClusterOutput
}

func (*ComputeCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeCluster)(nil)).Elem()
}

func (i *ComputeCluster) ToComputeClusterOutput() ComputeClusterOutput {
	return i.ToComputeClusterOutputWithContext(context.Background())
}

func (i *ComputeCluster) ToComputeClusterOutputWithContext(ctx context.Context) ComputeClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterOutput)
}

// ComputeClusterArrayInput is an input type that accepts ComputeClusterArray and ComputeClusterArrayOutput values.
// You can construct a concrete instance of `ComputeClusterArrayInput` via:
//
//	ComputeClusterArray{ ComputeClusterArgs{...} }
type ComputeClusterArrayInput interface {
	pulumi.Input

	ToComputeClusterArrayOutput() ComputeClusterArrayOutput
	ToComputeClusterArrayOutputWithContext(context.Context) ComputeClusterArrayOutput
}

type ComputeClusterArray []ComputeClusterInput

func (ComputeClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeCluster)(nil)).Elem()
}

func (i ComputeClusterArray) ToComputeClusterArrayOutput() ComputeClusterArrayOutput {
	return i.ToComputeClusterArrayOutputWithContext(context.Background())
}

func (i ComputeClusterArray) ToComputeClusterArrayOutputWithContext(ctx context.Context) ComputeClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterArrayOutput)
}

// ComputeClusterMapInput is an input type that accepts ComputeClusterMap and ComputeClusterMapOutput values.
// You can construct a concrete instance of `ComputeClusterMapInput` via:
//
//	ComputeClusterMap{ "key": ComputeClusterArgs{...} }
type ComputeClusterMapInput interface {
	pulumi.Input

	ToComputeClusterMapOutput() ComputeClusterMapOutput
	ToComputeClusterMapOutputWithContext(context.Context) ComputeClusterMapOutput
}

type ComputeClusterMap map[string]ComputeClusterInput

func (ComputeClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeCluster)(nil)).Elem()
}

func (i ComputeClusterMap) ToComputeClusterMapOutput() ComputeClusterMapOutput {
	return i.ToComputeClusterMapOutputWithContext(context.Background())
}

func (i ComputeClusterMap) ToComputeClusterMapOutputWithContext(ctx context.Context) ComputeClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterMapOutput)
}

type ComputeClusterOutput struct{ *pulumi.OutputState }

func (ComputeClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeCluster)(nil)).Elem()
}

func (o ComputeClusterOutput) ToComputeClusterOutput() ComputeClusterOutput {
	return o
}

func (o ComputeClusterOutput) ToComputeClusterOutputWithContext(ctx context.Context) ComputeClusterOutput {
	return o
}

// The availability domain that the compute cluster is running in. Example: `Uocm:PHX-AD-1`
func (o ComputeClusterOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeCluster) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains this compute cluster.
func (o ComputeClusterOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeCluster) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o ComputeClusterOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ComputeCluster) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o ComputeClusterOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeCluster) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ComputeClusterOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ComputeCluster) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The current state of the compute cluster.
func (o ComputeClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the compute cluster was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o ComputeClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeCluster) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type ComputeClusterArrayOutput struct{ *pulumi.OutputState }

func (ComputeClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeCluster)(nil)).Elem()
}

func (o ComputeClusterArrayOutput) ToComputeClusterArrayOutput() ComputeClusterArrayOutput {
	return o
}

func (o ComputeClusterArrayOutput) ToComputeClusterArrayOutputWithContext(ctx context.Context) ComputeClusterArrayOutput {
	return o
}

func (o ComputeClusterArrayOutput) Index(i pulumi.IntInput) ComputeClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ComputeCluster {
		return vs[0].([]*ComputeCluster)[vs[1].(int)]
	}).(ComputeClusterOutput)
}

type ComputeClusterMapOutput struct{ *pulumi.OutputState }

func (ComputeClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeCluster)(nil)).Elem()
}

func (o ComputeClusterMapOutput) ToComputeClusterMapOutput() ComputeClusterMapOutput {
	return o
}

func (o ComputeClusterMapOutput) ToComputeClusterMapOutputWithContext(ctx context.Context) ComputeClusterMapOutput {
	return o
}

func (o ComputeClusterMapOutput) MapIndex(k pulumi.StringInput) ComputeClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ComputeCluster {
		return vs[0].(map[string]*ComputeCluster)[vs[1].(string)]
	}).(ComputeClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterInput)(nil)).Elem(), &ComputeCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterArrayInput)(nil)).Elem(), ComputeClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterMapInput)(nil)).Elem(), ComputeClusterMap{})
	pulumi.RegisterOutputType(ComputeClusterOutput{})
	pulumi.RegisterOutputType(ComputeClusterArrayOutput{})
	pulumi.RegisterOutputType(ComputeClusterMapOutput{})
}
