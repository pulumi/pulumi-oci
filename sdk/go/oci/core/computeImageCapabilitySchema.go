// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Compute Image Capability Schema resource in Oracle Cloud Infrastructure Core service.
//
// Creates compute image capability schema.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.NewComputeImageCapabilitySchema(ctx, "testComputeImageCapabilitySchema", &Core.ComputeImageCapabilitySchemaArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				ComputeGlobalImageCapabilitySchemaVersionName: pulumi.Any(_var.Compute_image_capability_schema_compute_global_image_capability_schema_version_name),
//				ImageId: pulumi.Any(oci_core_image.Test_image.Id),
//				SchemaData: pulumi.AnyMap{
//					pulumi.Any{
//						DescriptorType: _var.Compute_image_capability_schema_schema_data_descriptor_type,
//						Source:         _var.Compute_image_capability_schema_schema_data_source,
//						DefaultValue:   _var.Compute_image_capability_schema_schema_data_default_value,
//						Values:         _var.Compute_image_capability_schema_schema_data_values,
//					},
//				},
//				DefinedTags: pulumi.AnyMap{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				DisplayName: pulumi.Any(_var.Compute_image_capability_schema_display_name),
//				FreeformTags: pulumi.AnyMap{
//					"Department": pulumi.Any("Finance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ComputeImageCapabilitySchemas can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Core/computeImageCapabilitySchema:ComputeImageCapabilitySchema test_compute_image_capability_schema "id"
//
// ```
type ComputeImageCapabilitySchema struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment that contains the resource.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The ocid of the compute global image capability schema
	ComputeGlobalImageCapabilitySchemaId pulumi.StringOutput `pulumi:"computeGlobalImageCapabilitySchemaId"`
	// The name of the compute global image capability schema version
	ComputeGlobalImageCapabilitySchemaVersionName pulumi.StringOutput `pulumi:"computeGlobalImageCapabilitySchemaVersionName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The ocid of the image
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// (Updatable) The map of each capability name to its ImageCapabilitySchemaDescriptor.
	SchemaData pulumi.MapOutput `pulumi:"schemaData"`
	// The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewComputeImageCapabilitySchema registers a new resource with the given unique name, arguments, and options.
func NewComputeImageCapabilitySchema(ctx *pulumi.Context,
	name string, args *ComputeImageCapabilitySchemaArgs, opts ...pulumi.ResourceOption) (*ComputeImageCapabilitySchema, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ComputeGlobalImageCapabilitySchemaVersionName == nil {
		return nil, errors.New("invalid value for required argument 'ComputeGlobalImageCapabilitySchemaVersionName'")
	}
	if args.ImageId == nil {
		return nil, errors.New("invalid value for required argument 'ImageId'")
	}
	if args.SchemaData == nil {
		return nil, errors.New("invalid value for required argument 'SchemaData'")
	}
	var resource ComputeImageCapabilitySchema
	err := ctx.RegisterResource("oci:Core/computeImageCapabilitySchema:ComputeImageCapabilitySchema", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeImageCapabilitySchema gets an existing ComputeImageCapabilitySchema resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeImageCapabilitySchema(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeImageCapabilitySchemaState, opts ...pulumi.ResourceOption) (*ComputeImageCapabilitySchema, error) {
	var resource ComputeImageCapabilitySchema
	err := ctx.ReadResource("oci:Core/computeImageCapabilitySchema:ComputeImageCapabilitySchema", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeImageCapabilitySchema resources.
type computeImageCapabilitySchemaState struct {
	// (Updatable) The OCID of the compartment that contains the resource.
	CompartmentId *string `pulumi:"compartmentId"`
	// The ocid of the compute global image capability schema
	ComputeGlobalImageCapabilitySchemaId *string `pulumi:"computeGlobalImageCapabilitySchemaId"`
	// The name of the compute global image capability schema version
	ComputeGlobalImageCapabilitySchemaVersionName *string `pulumi:"computeGlobalImageCapabilitySchemaVersionName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The ocid of the image
	ImageId *string `pulumi:"imageId"`
	// (Updatable) The map of each capability name to its ImageCapabilitySchemaDescriptor.
	SchemaData map[string]interface{} `pulumi:"schemaData"`
	// The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type ComputeImageCapabilitySchemaState struct {
	// (Updatable) The OCID of the compartment that contains the resource.
	CompartmentId pulumi.StringPtrInput
	// The ocid of the compute global image capability schema
	ComputeGlobalImageCapabilitySchemaId pulumi.StringPtrInput
	// The name of the compute global image capability schema version
	ComputeGlobalImageCapabilitySchemaVersionName pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The ocid of the image
	ImageId pulumi.StringPtrInput
	// (Updatable) The map of each capability name to its ImageCapabilitySchemaDescriptor.
	SchemaData pulumi.MapInput
	// The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (ComputeImageCapabilitySchemaState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeImageCapabilitySchemaState)(nil)).Elem()
}

type computeImageCapabilitySchemaArgs struct {
	// (Updatable) The OCID of the compartment that contains the resource.
	CompartmentId string `pulumi:"compartmentId"`
	// The name of the compute global image capability schema version
	ComputeGlobalImageCapabilitySchemaVersionName string `pulumi:"computeGlobalImageCapabilitySchemaVersionName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The ocid of the image
	ImageId string `pulumi:"imageId"`
	// (Updatable) The map of each capability name to its ImageCapabilitySchemaDescriptor.
	SchemaData map[string]interface{} `pulumi:"schemaData"`
}

// The set of arguments for constructing a ComputeImageCapabilitySchema resource.
type ComputeImageCapabilitySchemaArgs struct {
	// (Updatable) The OCID of the compartment that contains the resource.
	CompartmentId pulumi.StringInput
	// The name of the compute global image capability schema version
	ComputeGlobalImageCapabilitySchemaVersionName pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The ocid of the image
	ImageId pulumi.StringInput
	// (Updatable) The map of each capability name to its ImageCapabilitySchemaDescriptor.
	SchemaData pulumi.MapInput
}

func (ComputeImageCapabilitySchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeImageCapabilitySchemaArgs)(nil)).Elem()
}

type ComputeImageCapabilitySchemaInput interface {
	pulumi.Input

	ToComputeImageCapabilitySchemaOutput() ComputeImageCapabilitySchemaOutput
	ToComputeImageCapabilitySchemaOutputWithContext(ctx context.Context) ComputeImageCapabilitySchemaOutput
}

func (*ComputeImageCapabilitySchema) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeImageCapabilitySchema)(nil)).Elem()
}

func (i *ComputeImageCapabilitySchema) ToComputeImageCapabilitySchemaOutput() ComputeImageCapabilitySchemaOutput {
	return i.ToComputeImageCapabilitySchemaOutputWithContext(context.Background())
}

func (i *ComputeImageCapabilitySchema) ToComputeImageCapabilitySchemaOutputWithContext(ctx context.Context) ComputeImageCapabilitySchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeImageCapabilitySchemaOutput)
}

// ComputeImageCapabilitySchemaArrayInput is an input type that accepts ComputeImageCapabilitySchemaArray and ComputeImageCapabilitySchemaArrayOutput values.
// You can construct a concrete instance of `ComputeImageCapabilitySchemaArrayInput` via:
//
//	ComputeImageCapabilitySchemaArray{ ComputeImageCapabilitySchemaArgs{...} }
type ComputeImageCapabilitySchemaArrayInput interface {
	pulumi.Input

	ToComputeImageCapabilitySchemaArrayOutput() ComputeImageCapabilitySchemaArrayOutput
	ToComputeImageCapabilitySchemaArrayOutputWithContext(context.Context) ComputeImageCapabilitySchemaArrayOutput
}

type ComputeImageCapabilitySchemaArray []ComputeImageCapabilitySchemaInput

func (ComputeImageCapabilitySchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeImageCapabilitySchema)(nil)).Elem()
}

func (i ComputeImageCapabilitySchemaArray) ToComputeImageCapabilitySchemaArrayOutput() ComputeImageCapabilitySchemaArrayOutput {
	return i.ToComputeImageCapabilitySchemaArrayOutputWithContext(context.Background())
}

func (i ComputeImageCapabilitySchemaArray) ToComputeImageCapabilitySchemaArrayOutputWithContext(ctx context.Context) ComputeImageCapabilitySchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeImageCapabilitySchemaArrayOutput)
}

// ComputeImageCapabilitySchemaMapInput is an input type that accepts ComputeImageCapabilitySchemaMap and ComputeImageCapabilitySchemaMapOutput values.
// You can construct a concrete instance of `ComputeImageCapabilitySchemaMapInput` via:
//
//	ComputeImageCapabilitySchemaMap{ "key": ComputeImageCapabilitySchemaArgs{...} }
type ComputeImageCapabilitySchemaMapInput interface {
	pulumi.Input

	ToComputeImageCapabilitySchemaMapOutput() ComputeImageCapabilitySchemaMapOutput
	ToComputeImageCapabilitySchemaMapOutputWithContext(context.Context) ComputeImageCapabilitySchemaMapOutput
}

type ComputeImageCapabilitySchemaMap map[string]ComputeImageCapabilitySchemaInput

func (ComputeImageCapabilitySchemaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeImageCapabilitySchema)(nil)).Elem()
}

func (i ComputeImageCapabilitySchemaMap) ToComputeImageCapabilitySchemaMapOutput() ComputeImageCapabilitySchemaMapOutput {
	return i.ToComputeImageCapabilitySchemaMapOutputWithContext(context.Background())
}

func (i ComputeImageCapabilitySchemaMap) ToComputeImageCapabilitySchemaMapOutputWithContext(ctx context.Context) ComputeImageCapabilitySchemaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeImageCapabilitySchemaMapOutput)
}

type ComputeImageCapabilitySchemaOutput struct{ *pulumi.OutputState }

func (ComputeImageCapabilitySchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeImageCapabilitySchema)(nil)).Elem()
}

func (o ComputeImageCapabilitySchemaOutput) ToComputeImageCapabilitySchemaOutput() ComputeImageCapabilitySchemaOutput {
	return o
}

func (o ComputeImageCapabilitySchemaOutput) ToComputeImageCapabilitySchemaOutputWithContext(ctx context.Context) ComputeImageCapabilitySchemaOutput {
	return o
}

// (Updatable) The OCID of the compartment that contains the resource.
func (o ComputeImageCapabilitySchemaOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeImageCapabilitySchema) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The ocid of the compute global image capability schema
func (o ComputeImageCapabilitySchemaOutput) ComputeGlobalImageCapabilitySchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeImageCapabilitySchema) pulumi.StringOutput {
		return v.ComputeGlobalImageCapabilitySchemaId
	}).(pulumi.StringOutput)
}

// The name of the compute global image capability schema version
func (o ComputeImageCapabilitySchemaOutput) ComputeGlobalImageCapabilitySchemaVersionName() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeImageCapabilitySchema) pulumi.StringOutput {
		return v.ComputeGlobalImageCapabilitySchemaVersionName
	}).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o ComputeImageCapabilitySchemaOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ComputeImageCapabilitySchema) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o ComputeImageCapabilitySchemaOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeImageCapabilitySchema) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o ComputeImageCapabilitySchemaOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ComputeImageCapabilitySchema) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The ocid of the image
func (o ComputeImageCapabilitySchemaOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeImageCapabilitySchema) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

// (Updatable) The map of each capability name to its ImageCapabilitySchemaDescriptor.
func (o ComputeImageCapabilitySchemaOutput) SchemaData() pulumi.MapOutput {
	return o.ApplyT(func(v *ComputeImageCapabilitySchema) pulumi.MapOutput { return v.SchemaData }).(pulumi.MapOutput)
}

// The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o ComputeImageCapabilitySchemaOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeImageCapabilitySchema) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type ComputeImageCapabilitySchemaArrayOutput struct{ *pulumi.OutputState }

func (ComputeImageCapabilitySchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeImageCapabilitySchema)(nil)).Elem()
}

func (o ComputeImageCapabilitySchemaArrayOutput) ToComputeImageCapabilitySchemaArrayOutput() ComputeImageCapabilitySchemaArrayOutput {
	return o
}

func (o ComputeImageCapabilitySchemaArrayOutput) ToComputeImageCapabilitySchemaArrayOutputWithContext(ctx context.Context) ComputeImageCapabilitySchemaArrayOutput {
	return o
}

func (o ComputeImageCapabilitySchemaArrayOutput) Index(i pulumi.IntInput) ComputeImageCapabilitySchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ComputeImageCapabilitySchema {
		return vs[0].([]*ComputeImageCapabilitySchema)[vs[1].(int)]
	}).(ComputeImageCapabilitySchemaOutput)
}

type ComputeImageCapabilitySchemaMapOutput struct{ *pulumi.OutputState }

func (ComputeImageCapabilitySchemaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeImageCapabilitySchema)(nil)).Elem()
}

func (o ComputeImageCapabilitySchemaMapOutput) ToComputeImageCapabilitySchemaMapOutput() ComputeImageCapabilitySchemaMapOutput {
	return o
}

func (o ComputeImageCapabilitySchemaMapOutput) ToComputeImageCapabilitySchemaMapOutputWithContext(ctx context.Context) ComputeImageCapabilitySchemaMapOutput {
	return o
}

func (o ComputeImageCapabilitySchemaMapOutput) MapIndex(k pulumi.StringInput) ComputeImageCapabilitySchemaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ComputeImageCapabilitySchema {
		return vs[0].(map[string]*ComputeImageCapabilitySchema)[vs[1].(string)]
	}).(ComputeImageCapabilitySchemaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeImageCapabilitySchemaInput)(nil)).Elem(), &ComputeImageCapabilitySchema{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeImageCapabilitySchemaArrayInput)(nil)).Elem(), ComputeImageCapabilitySchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeImageCapabilitySchemaMapInput)(nil)).Elem(), ComputeImageCapabilitySchemaMap{})
	pulumi.RegisterOutputType(ComputeImageCapabilitySchemaOutput{})
	pulumi.RegisterOutputType(ComputeImageCapabilitySchemaArrayOutput{})
	pulumi.RegisterOutputType(ComputeImageCapabilitySchemaMapOutput{})
}
