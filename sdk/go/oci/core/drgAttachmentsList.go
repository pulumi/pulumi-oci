// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Drg Attachments List resource in Oracle Cloud Infrastructure Core service.
//
// Returns a complete list of DRG attachments that belong to a particular DRG.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.NewDrgAttachmentsList(ctx, "testDrgAttachmentsList", &Core.DrgAttachmentsListArgs{
//				DrgId:          pulumi.Any(oci_core_drg.Test_drg.Id),
//				AttachmentType: pulumi.Any(_var.Drg_attachments_list_attachment_type),
//				IsCrossTenancy: pulumi.Any(_var.Drg_attachments_list_is_cross_tenancy),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Import is not supported for this resource.
type DrgAttachmentsList struct {
	pulumi.CustomResourceState

	// The type for the network resource attached to the DRG.
	AttachmentType pulumi.StringPtrOutput `pulumi:"attachmentType"`
	// The list of drg_attachments.
	DrgAllAttachments DrgAttachmentsListDrgAllAttachmentArrayOutput `pulumi:"drgAllAttachments"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId pulumi.StringOutput `pulumi:"drgId"`
	// Whether the DRG attachment lives in a different tenancy than the DRG.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IsCrossTenancy pulumi.BoolPtrOutput `pulumi:"isCrossTenancy"`
}

// NewDrgAttachmentsList registers a new resource with the given unique name, arguments, and options.
func NewDrgAttachmentsList(ctx *pulumi.Context,
	name string, args *DrgAttachmentsListArgs, opts ...pulumi.ResourceOption) (*DrgAttachmentsList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DrgId == nil {
		return nil, errors.New("invalid value for required argument 'DrgId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DrgAttachmentsList
	err := ctx.RegisterResource("oci:Core/drgAttachmentsList:DrgAttachmentsList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDrgAttachmentsList gets an existing DrgAttachmentsList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDrgAttachmentsList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DrgAttachmentsListState, opts ...pulumi.ResourceOption) (*DrgAttachmentsList, error) {
	var resource DrgAttachmentsList
	err := ctx.ReadResource("oci:Core/drgAttachmentsList:DrgAttachmentsList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DrgAttachmentsList resources.
type drgAttachmentsListState struct {
	// The type for the network resource attached to the DRG.
	AttachmentType *string `pulumi:"attachmentType"`
	// The list of drg_attachments.
	DrgAllAttachments []DrgAttachmentsListDrgAllAttachment `pulumi:"drgAllAttachments"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId *string `pulumi:"drgId"`
	// Whether the DRG attachment lives in a different tenancy than the DRG.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IsCrossTenancy *bool `pulumi:"isCrossTenancy"`
}

type DrgAttachmentsListState struct {
	// The type for the network resource attached to the DRG.
	AttachmentType pulumi.StringPtrInput
	// The list of drg_attachments.
	DrgAllAttachments DrgAttachmentsListDrgAllAttachmentArrayInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId pulumi.StringPtrInput
	// Whether the DRG attachment lives in a different tenancy than the DRG.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IsCrossTenancy pulumi.BoolPtrInput
}

func (DrgAttachmentsListState) ElementType() reflect.Type {
	return reflect.TypeOf((*drgAttachmentsListState)(nil)).Elem()
}

type drgAttachmentsListArgs struct {
	// The type for the network resource attached to the DRG.
	AttachmentType *string `pulumi:"attachmentType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId string `pulumi:"drgId"`
	// Whether the DRG attachment lives in a different tenancy than the DRG.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IsCrossTenancy *bool `pulumi:"isCrossTenancy"`
}

// The set of arguments for constructing a DrgAttachmentsList resource.
type DrgAttachmentsListArgs struct {
	// The type for the network resource attached to the DRG.
	AttachmentType pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId pulumi.StringInput
	// Whether the DRG attachment lives in a different tenancy than the DRG.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	IsCrossTenancy pulumi.BoolPtrInput
}

func (DrgAttachmentsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*drgAttachmentsListArgs)(nil)).Elem()
}

type DrgAttachmentsListInput interface {
	pulumi.Input

	ToDrgAttachmentsListOutput() DrgAttachmentsListOutput
	ToDrgAttachmentsListOutputWithContext(ctx context.Context) DrgAttachmentsListOutput
}

func (*DrgAttachmentsList) ElementType() reflect.Type {
	return reflect.TypeOf((**DrgAttachmentsList)(nil)).Elem()
}

func (i *DrgAttachmentsList) ToDrgAttachmentsListOutput() DrgAttachmentsListOutput {
	return i.ToDrgAttachmentsListOutputWithContext(context.Background())
}

func (i *DrgAttachmentsList) ToDrgAttachmentsListOutputWithContext(ctx context.Context) DrgAttachmentsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrgAttachmentsListOutput)
}

// DrgAttachmentsListArrayInput is an input type that accepts DrgAttachmentsListArray and DrgAttachmentsListArrayOutput values.
// You can construct a concrete instance of `DrgAttachmentsListArrayInput` via:
//
//	DrgAttachmentsListArray{ DrgAttachmentsListArgs{...} }
type DrgAttachmentsListArrayInput interface {
	pulumi.Input

	ToDrgAttachmentsListArrayOutput() DrgAttachmentsListArrayOutput
	ToDrgAttachmentsListArrayOutputWithContext(context.Context) DrgAttachmentsListArrayOutput
}

type DrgAttachmentsListArray []DrgAttachmentsListInput

func (DrgAttachmentsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DrgAttachmentsList)(nil)).Elem()
}

func (i DrgAttachmentsListArray) ToDrgAttachmentsListArrayOutput() DrgAttachmentsListArrayOutput {
	return i.ToDrgAttachmentsListArrayOutputWithContext(context.Background())
}

func (i DrgAttachmentsListArray) ToDrgAttachmentsListArrayOutputWithContext(ctx context.Context) DrgAttachmentsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrgAttachmentsListArrayOutput)
}

// DrgAttachmentsListMapInput is an input type that accepts DrgAttachmentsListMap and DrgAttachmentsListMapOutput values.
// You can construct a concrete instance of `DrgAttachmentsListMapInput` via:
//
//	DrgAttachmentsListMap{ "key": DrgAttachmentsListArgs{...} }
type DrgAttachmentsListMapInput interface {
	pulumi.Input

	ToDrgAttachmentsListMapOutput() DrgAttachmentsListMapOutput
	ToDrgAttachmentsListMapOutputWithContext(context.Context) DrgAttachmentsListMapOutput
}

type DrgAttachmentsListMap map[string]DrgAttachmentsListInput

func (DrgAttachmentsListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DrgAttachmentsList)(nil)).Elem()
}

func (i DrgAttachmentsListMap) ToDrgAttachmentsListMapOutput() DrgAttachmentsListMapOutput {
	return i.ToDrgAttachmentsListMapOutputWithContext(context.Background())
}

func (i DrgAttachmentsListMap) ToDrgAttachmentsListMapOutputWithContext(ctx context.Context) DrgAttachmentsListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrgAttachmentsListMapOutput)
}

type DrgAttachmentsListOutput struct{ *pulumi.OutputState }

func (DrgAttachmentsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DrgAttachmentsList)(nil)).Elem()
}

func (o DrgAttachmentsListOutput) ToDrgAttachmentsListOutput() DrgAttachmentsListOutput {
	return o
}

func (o DrgAttachmentsListOutput) ToDrgAttachmentsListOutputWithContext(ctx context.Context) DrgAttachmentsListOutput {
	return o
}

// The type for the network resource attached to the DRG.
func (o DrgAttachmentsListOutput) AttachmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrgAttachmentsList) pulumi.StringPtrOutput { return v.AttachmentType }).(pulumi.StringPtrOutput)
}

// The list of drg_attachments.
func (o DrgAttachmentsListOutput) DrgAllAttachments() DrgAttachmentsListDrgAllAttachmentArrayOutput {
	return o.ApplyT(func(v *DrgAttachmentsList) DrgAttachmentsListDrgAllAttachmentArrayOutput { return v.DrgAllAttachments }).(DrgAttachmentsListDrgAllAttachmentArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
func (o DrgAttachmentsListOutput) DrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *DrgAttachmentsList) pulumi.StringOutput { return v.DrgId }).(pulumi.StringOutput)
}

// Whether the DRG attachment lives in a different tenancy than the DRG.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DrgAttachmentsListOutput) IsCrossTenancy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DrgAttachmentsList) pulumi.BoolPtrOutput { return v.IsCrossTenancy }).(pulumi.BoolPtrOutput)
}

type DrgAttachmentsListArrayOutput struct{ *pulumi.OutputState }

func (DrgAttachmentsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DrgAttachmentsList)(nil)).Elem()
}

func (o DrgAttachmentsListArrayOutput) ToDrgAttachmentsListArrayOutput() DrgAttachmentsListArrayOutput {
	return o
}

func (o DrgAttachmentsListArrayOutput) ToDrgAttachmentsListArrayOutputWithContext(ctx context.Context) DrgAttachmentsListArrayOutput {
	return o
}

func (o DrgAttachmentsListArrayOutput) Index(i pulumi.IntInput) DrgAttachmentsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DrgAttachmentsList {
		return vs[0].([]*DrgAttachmentsList)[vs[1].(int)]
	}).(DrgAttachmentsListOutput)
}

type DrgAttachmentsListMapOutput struct{ *pulumi.OutputState }

func (DrgAttachmentsListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DrgAttachmentsList)(nil)).Elem()
}

func (o DrgAttachmentsListMapOutput) ToDrgAttachmentsListMapOutput() DrgAttachmentsListMapOutput {
	return o
}

func (o DrgAttachmentsListMapOutput) ToDrgAttachmentsListMapOutputWithContext(ctx context.Context) DrgAttachmentsListMapOutput {
	return o
}

func (o DrgAttachmentsListMapOutput) MapIndex(k pulumi.StringInput) DrgAttachmentsListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DrgAttachmentsList {
		return vs[0].(map[string]*DrgAttachmentsList)[vs[1].(string)]
	}).(DrgAttachmentsListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DrgAttachmentsListInput)(nil)).Elem(), &DrgAttachmentsList{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrgAttachmentsListArrayInput)(nil)).Elem(), DrgAttachmentsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrgAttachmentsListMapInput)(nil)).Elem(), DrgAttachmentsListMap{})
	pulumi.RegisterOutputType(DrgAttachmentsListOutput{})
	pulumi.RegisterOutputType(DrgAttachmentsListArrayOutput{})
	pulumi.RegisterOutputType(DrgAttachmentsListMapOutput{})
}
