// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Drg Route Distribution Statement resource in Oracle Cloud Infrastructure Core service.
//
// Adds one route distribution statement to the specified route distribution.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.NewDrgRouteDistributionStatement(ctx, "testDrgRouteDistributionStatement", &Core.DrgRouteDistributionStatementArgs{
//				DrgRouteDistributionId: pulumi.Any(oci_core_drg_route_distribution.Test_drg_route_distribution.Id),
//				Action:                 pulumi.Any(_var.Drg_route_distribution_statement_statements_action),
//				MatchCriteria: &core.DrgRouteDistributionStatementMatchCriteriaArgs{
//					MatchType:       pulumi.Any(_var.Drg_route_distribution_statement_statements_match_criteria_match_type),
//					AttachmentType:  pulumi.Any(_var.Drg_route_distribution_statement_statements_match_criteria_attachment_type),
//					DrgAttachmentId: pulumi.Any(oci_core_drg_attachment.Test_drg_attachment.Id),
//				},
//				Priority: pulumi.Any(_var.Drg_route_distribution_statement_statements_priority),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// DrgRouteDistributionStatement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Core/drgRouteDistributionStatement:DrgRouteDistributionStatement test_drg_route_distribution_statement "drgRouteDistributions/{drgRouteDistributionId}/statements/{id}"
// ```
type DrgRouteDistributionStatement struct {
	pulumi.CustomResourceState

	// Accept: import/export the route "as is"
	Action pulumi.StringOutput `pulumi:"action"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
	DrgRouteDistributionId pulumi.StringOutput `pulumi:"drgRouteDistributionId"`
	// (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
	MatchCriteria DrgRouteDistributionStatementMatchCriteriaOutput `pulumi:"matchCriteria"`
	// (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Priority pulumi.IntOutput `pulumi:"priority"`
}

// NewDrgRouteDistributionStatement registers a new resource with the given unique name, arguments, and options.
func NewDrgRouteDistributionStatement(ctx *pulumi.Context,
	name string, args *DrgRouteDistributionStatementArgs, opts ...pulumi.ResourceOption) (*DrgRouteDistributionStatement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.DrgRouteDistributionId == nil {
		return nil, errors.New("invalid value for required argument 'DrgRouteDistributionId'")
	}
	if args.MatchCriteria == nil {
		return nil, errors.New("invalid value for required argument 'MatchCriteria'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DrgRouteDistributionStatement
	err := ctx.RegisterResource("oci:Core/drgRouteDistributionStatement:DrgRouteDistributionStatement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDrgRouteDistributionStatement gets an existing DrgRouteDistributionStatement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDrgRouteDistributionStatement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DrgRouteDistributionStatementState, opts ...pulumi.ResourceOption) (*DrgRouteDistributionStatement, error) {
	var resource DrgRouteDistributionStatement
	err := ctx.ReadResource("oci:Core/drgRouteDistributionStatement:DrgRouteDistributionStatement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DrgRouteDistributionStatement resources.
type drgRouteDistributionStatementState struct {
	// Accept: import/export the route "as is"
	Action *string `pulumi:"action"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
	DrgRouteDistributionId *string `pulumi:"drgRouteDistributionId"`
	// (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
	MatchCriteria *DrgRouteDistributionStatementMatchCriteria `pulumi:"matchCriteria"`
	// (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Priority *int `pulumi:"priority"`
}

type DrgRouteDistributionStatementState struct {
	// Accept: import/export the route "as is"
	Action pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
	DrgRouteDistributionId pulumi.StringPtrInput
	// (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
	MatchCriteria DrgRouteDistributionStatementMatchCriteriaPtrInput
	// (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Priority pulumi.IntPtrInput
}

func (DrgRouteDistributionStatementState) ElementType() reflect.Type {
	return reflect.TypeOf((*drgRouteDistributionStatementState)(nil)).Elem()
}

type drgRouteDistributionStatementArgs struct {
	// Accept: import/export the route "as is"
	Action string `pulumi:"action"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
	DrgRouteDistributionId string `pulumi:"drgRouteDistributionId"`
	// (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
	MatchCriteria DrgRouteDistributionStatementMatchCriteria `pulumi:"matchCriteria"`
	// (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Priority int `pulumi:"priority"`
}

// The set of arguments for constructing a DrgRouteDistributionStatement resource.
type DrgRouteDistributionStatementArgs struct {
	// Accept: import/export the route "as is"
	Action pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
	DrgRouteDistributionId pulumi.StringInput
	// (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
	MatchCriteria DrgRouteDistributionStatementMatchCriteriaInput
	// (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Priority pulumi.IntInput
}

func (DrgRouteDistributionStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*drgRouteDistributionStatementArgs)(nil)).Elem()
}

type DrgRouteDistributionStatementInput interface {
	pulumi.Input

	ToDrgRouteDistributionStatementOutput() DrgRouteDistributionStatementOutput
	ToDrgRouteDistributionStatementOutputWithContext(ctx context.Context) DrgRouteDistributionStatementOutput
}

func (*DrgRouteDistributionStatement) ElementType() reflect.Type {
	return reflect.TypeOf((**DrgRouteDistributionStatement)(nil)).Elem()
}

func (i *DrgRouteDistributionStatement) ToDrgRouteDistributionStatementOutput() DrgRouteDistributionStatementOutput {
	return i.ToDrgRouteDistributionStatementOutputWithContext(context.Background())
}

func (i *DrgRouteDistributionStatement) ToDrgRouteDistributionStatementOutputWithContext(ctx context.Context) DrgRouteDistributionStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrgRouteDistributionStatementOutput)
}

// DrgRouteDistributionStatementArrayInput is an input type that accepts DrgRouteDistributionStatementArray and DrgRouteDistributionStatementArrayOutput values.
// You can construct a concrete instance of `DrgRouteDistributionStatementArrayInput` via:
//
//	DrgRouteDistributionStatementArray{ DrgRouteDistributionStatementArgs{...} }
type DrgRouteDistributionStatementArrayInput interface {
	pulumi.Input

	ToDrgRouteDistributionStatementArrayOutput() DrgRouteDistributionStatementArrayOutput
	ToDrgRouteDistributionStatementArrayOutputWithContext(context.Context) DrgRouteDistributionStatementArrayOutput
}

type DrgRouteDistributionStatementArray []DrgRouteDistributionStatementInput

func (DrgRouteDistributionStatementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DrgRouteDistributionStatement)(nil)).Elem()
}

func (i DrgRouteDistributionStatementArray) ToDrgRouteDistributionStatementArrayOutput() DrgRouteDistributionStatementArrayOutput {
	return i.ToDrgRouteDistributionStatementArrayOutputWithContext(context.Background())
}

func (i DrgRouteDistributionStatementArray) ToDrgRouteDistributionStatementArrayOutputWithContext(ctx context.Context) DrgRouteDistributionStatementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrgRouteDistributionStatementArrayOutput)
}

// DrgRouteDistributionStatementMapInput is an input type that accepts DrgRouteDistributionStatementMap and DrgRouteDistributionStatementMapOutput values.
// You can construct a concrete instance of `DrgRouteDistributionStatementMapInput` via:
//
//	DrgRouteDistributionStatementMap{ "key": DrgRouteDistributionStatementArgs{...} }
type DrgRouteDistributionStatementMapInput interface {
	pulumi.Input

	ToDrgRouteDistributionStatementMapOutput() DrgRouteDistributionStatementMapOutput
	ToDrgRouteDistributionStatementMapOutputWithContext(context.Context) DrgRouteDistributionStatementMapOutput
}

type DrgRouteDistributionStatementMap map[string]DrgRouteDistributionStatementInput

func (DrgRouteDistributionStatementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DrgRouteDistributionStatement)(nil)).Elem()
}

func (i DrgRouteDistributionStatementMap) ToDrgRouteDistributionStatementMapOutput() DrgRouteDistributionStatementMapOutput {
	return i.ToDrgRouteDistributionStatementMapOutputWithContext(context.Background())
}

func (i DrgRouteDistributionStatementMap) ToDrgRouteDistributionStatementMapOutputWithContext(ctx context.Context) DrgRouteDistributionStatementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrgRouteDistributionStatementMapOutput)
}

type DrgRouteDistributionStatementOutput struct{ *pulumi.OutputState }

func (DrgRouteDistributionStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DrgRouteDistributionStatement)(nil)).Elem()
}

func (o DrgRouteDistributionStatementOutput) ToDrgRouteDistributionStatementOutput() DrgRouteDistributionStatementOutput {
	return o
}

func (o DrgRouteDistributionStatementOutput) ToDrgRouteDistributionStatementOutputWithContext(ctx context.Context) DrgRouteDistributionStatementOutput {
	return o
}

// Accept: import/export the route "as is"
func (o DrgRouteDistributionStatementOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *DrgRouteDistributionStatement) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
func (o DrgRouteDistributionStatementOutput) DrgRouteDistributionId() pulumi.StringOutput {
	return o.ApplyT(func(v *DrgRouteDistributionStatement) pulumi.StringOutput { return v.DrgRouteDistributionId }).(pulumi.StringOutput)
}

// (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
func (o DrgRouteDistributionStatementOutput) MatchCriteria() DrgRouteDistributionStatementMatchCriteriaOutput {
	return o.ApplyT(func(v *DrgRouteDistributionStatement) DrgRouteDistributionStatementMatchCriteriaOutput {
		return v.MatchCriteria
	}).(DrgRouteDistributionStatementMatchCriteriaOutput)
}

// (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DrgRouteDistributionStatementOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *DrgRouteDistributionStatement) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

type DrgRouteDistributionStatementArrayOutput struct{ *pulumi.OutputState }

func (DrgRouteDistributionStatementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DrgRouteDistributionStatement)(nil)).Elem()
}

func (o DrgRouteDistributionStatementArrayOutput) ToDrgRouteDistributionStatementArrayOutput() DrgRouteDistributionStatementArrayOutput {
	return o
}

func (o DrgRouteDistributionStatementArrayOutput) ToDrgRouteDistributionStatementArrayOutputWithContext(ctx context.Context) DrgRouteDistributionStatementArrayOutput {
	return o
}

func (o DrgRouteDistributionStatementArrayOutput) Index(i pulumi.IntInput) DrgRouteDistributionStatementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DrgRouteDistributionStatement {
		return vs[0].([]*DrgRouteDistributionStatement)[vs[1].(int)]
	}).(DrgRouteDistributionStatementOutput)
}

type DrgRouteDistributionStatementMapOutput struct{ *pulumi.OutputState }

func (DrgRouteDistributionStatementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DrgRouteDistributionStatement)(nil)).Elem()
}

func (o DrgRouteDistributionStatementMapOutput) ToDrgRouteDistributionStatementMapOutput() DrgRouteDistributionStatementMapOutput {
	return o
}

func (o DrgRouteDistributionStatementMapOutput) ToDrgRouteDistributionStatementMapOutputWithContext(ctx context.Context) DrgRouteDistributionStatementMapOutput {
	return o
}

func (o DrgRouteDistributionStatementMapOutput) MapIndex(k pulumi.StringInput) DrgRouteDistributionStatementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DrgRouteDistributionStatement {
		return vs[0].(map[string]*DrgRouteDistributionStatement)[vs[1].(string)]
	}).(DrgRouteDistributionStatementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DrgRouteDistributionStatementInput)(nil)).Elem(), &DrgRouteDistributionStatement{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrgRouteDistributionStatementArrayInput)(nil)).Elem(), DrgRouteDistributionStatementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrgRouteDistributionStatementMapInput)(nil)).Elem(), DrgRouteDistributionStatementMap{})
	pulumi.RegisterOutputType(DrgRouteDistributionStatementOutput{})
	pulumi.RegisterOutputType(DrgRouteDistributionStatementArrayOutput{})
	pulumi.RegisterOutputType(DrgRouteDistributionStatementMapOutput{})
}
