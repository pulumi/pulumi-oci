// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of App Catalog Listings in Oracle Cloud Infrastructure Core service.
//
// Lists the published listings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetAppCatalogListings(ctx, &core.GetAppCatalogListingsArgs{
//				DisplayName:   pulumi.StringRef(appCatalogListingDisplayName),
//				PublisherName: pulumi.StringRef(appCatalogListingPublisherName),
//				PublisherType: pulumi.StringRef(appCatalogListingPublisherType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAppCatalogListings(ctx *pulumi.Context, args *GetAppCatalogListingsArgs, opts ...pulumi.InvokeOption) (*GetAppCatalogListingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAppCatalogListingsResult
	err := ctx.Invoke("oci:Core/getAppCatalogListings:getAppCatalogListings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppCatalogListings.
type GetAppCatalogListingsArgs struct {
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetAppCatalogListingsFilter `pulumi:"filters"`
	// A filter to return only the publisher that matches the given publisher name exactly.
	PublisherName *string `pulumi:"publisherName"`
	// A filter to return only publishers that match the given publisher type exactly. Valid types are OCI, ORACLE, TRUSTED, STANDARD.
	PublisherType *string `pulumi:"publisherType"`
}

// A collection of values returned by getAppCatalogListings.
type GetAppCatalogListingsResult struct {
	// The list of app_catalog_listings.
	AppCatalogListings []GetAppCatalogListingsAppCatalogListing `pulumi:"appCatalogListings"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetAppCatalogListingsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the publisher who published this listing.
	PublisherName *string `pulumi:"publisherName"`
	PublisherType *string `pulumi:"publisherType"`
}

func GetAppCatalogListingsOutput(ctx *pulumi.Context, args GetAppCatalogListingsOutputArgs, opts ...pulumi.InvokeOption) GetAppCatalogListingsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAppCatalogListingsResultOutput, error) {
			args := v.(GetAppCatalogListingsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getAppCatalogListings:getAppCatalogListings", args, GetAppCatalogListingsResultOutput{}, options).(GetAppCatalogListingsResultOutput), nil
		}).(GetAppCatalogListingsResultOutput)
}

// A collection of arguments for invoking getAppCatalogListings.
type GetAppCatalogListingsOutputArgs struct {
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput                 `pulumi:"displayName"`
	Filters     GetAppCatalogListingsFilterArrayInput `pulumi:"filters"`
	// A filter to return only the publisher that matches the given publisher name exactly.
	PublisherName pulumi.StringPtrInput `pulumi:"publisherName"`
	// A filter to return only publishers that match the given publisher type exactly. Valid types are OCI, ORACLE, TRUSTED, STANDARD.
	PublisherType pulumi.StringPtrInput `pulumi:"publisherType"`
}

func (GetAppCatalogListingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppCatalogListingsArgs)(nil)).Elem()
}

// A collection of values returned by getAppCatalogListings.
type GetAppCatalogListingsResultOutput struct{ *pulumi.OutputState }

func (GetAppCatalogListingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppCatalogListingsResult)(nil)).Elem()
}

func (o GetAppCatalogListingsResultOutput) ToGetAppCatalogListingsResultOutput() GetAppCatalogListingsResultOutput {
	return o
}

func (o GetAppCatalogListingsResultOutput) ToGetAppCatalogListingsResultOutputWithContext(ctx context.Context) GetAppCatalogListingsResultOutput {
	return o
}

// The list of app_catalog_listings.
func (o GetAppCatalogListingsResultOutput) AppCatalogListings() GetAppCatalogListingsAppCatalogListingArrayOutput {
	return o.ApplyT(func(v GetAppCatalogListingsResult) []GetAppCatalogListingsAppCatalogListing {
		return v.AppCatalogListings
	}).(GetAppCatalogListingsAppCatalogListingArrayOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetAppCatalogListingsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppCatalogListingsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetAppCatalogListingsResultOutput) Filters() GetAppCatalogListingsFilterArrayOutput {
	return o.ApplyT(func(v GetAppCatalogListingsResult) []GetAppCatalogListingsFilter { return v.Filters }).(GetAppCatalogListingsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAppCatalogListingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppCatalogListingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the publisher who published this listing.
func (o GetAppCatalogListingsResultOutput) PublisherName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppCatalogListingsResult) *string { return v.PublisherName }).(pulumi.StringPtrOutput)
}

func (o GetAppCatalogListingsResultOutput) PublisherType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppCatalogListingsResult) *string { return v.PublisherType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppCatalogListingsResultOutput{})
}
