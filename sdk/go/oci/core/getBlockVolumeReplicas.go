// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Block Volume Replicas in Oracle Cloud Infrastructure Core service.
//
// Lists the block volume replicas in the specified compartment and availability domain.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.GetBlockVolumeReplicas(ctx, &core.GetBlockVolumeReplicasArgs{
//				AvailabilityDomain:   pulumi.StringRef(blockVolumeReplicaAvailabilityDomain),
//				CompartmentId:        pulumi.StringRef(compartmentId),
//				DisplayName:          pulumi.StringRef(blockVolumeReplicaDisplayName),
//				State:                pulumi.StringRef(blockVolumeReplicaState),
//				VolumeGroupReplicaId: pulumi.StringRef(testVolumeGroupReplica.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBlockVolumeReplicas(ctx *pulumi.Context, args *GetBlockVolumeReplicasArgs, opts ...pulumi.InvokeOption) (*GetBlockVolumeReplicasResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBlockVolumeReplicasResult
	err := ctx.Invoke("oci:Core/getBlockVolumeReplicas:getBlockVolumeReplicas", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBlockVolumeReplicas.
type GetBlockVolumeReplicasArgs struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string                        `pulumi:"displayName"`
	Filters     []GetBlockVolumeReplicasFilter `pulumi:"filters"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State *string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the volume group replica.
	VolumeGroupReplicaId *string `pulumi:"volumeGroupReplicaId"`
}

// A collection of values returned by getBlockVolumeReplicas.
type GetBlockVolumeReplicasResult struct {
	// The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The list of block_volume_replicas.
	BlockVolumeReplicas []GetBlockVolumeReplicasBlockVolumeReplica `pulumi:"blockVolumeReplicas"`
	// The OCID of the compartment that contains the block volume replica.
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string                        `pulumi:"displayName"`
	Filters     []GetBlockVolumeReplicasFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of a block volume replica.
	State                *string `pulumi:"state"`
	VolumeGroupReplicaId *string `pulumi:"volumeGroupReplicaId"`
}

func GetBlockVolumeReplicasOutput(ctx *pulumi.Context, args GetBlockVolumeReplicasOutputArgs, opts ...pulumi.InvokeOption) GetBlockVolumeReplicasResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetBlockVolumeReplicasResultOutput, error) {
			args := v.(GetBlockVolumeReplicasArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getBlockVolumeReplicas:getBlockVolumeReplicas", args, GetBlockVolumeReplicasResultOutput{}, options).(GetBlockVolumeReplicasResultOutput), nil
		}).(GetBlockVolumeReplicasResultOutput)
}

// A collection of arguments for invoking getBlockVolumeReplicas.
type GetBlockVolumeReplicasOutputArgs struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput                  `pulumi:"displayName"`
	Filters     GetBlockVolumeReplicasFilterArrayInput `pulumi:"filters"`
	// A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the volume group replica.
	VolumeGroupReplicaId pulumi.StringPtrInput `pulumi:"volumeGroupReplicaId"`
}

func (GetBlockVolumeReplicasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockVolumeReplicasArgs)(nil)).Elem()
}

// A collection of values returned by getBlockVolumeReplicas.
type GetBlockVolumeReplicasResultOutput struct{ *pulumi.OutputState }

func (GetBlockVolumeReplicasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlockVolumeReplicasResult)(nil)).Elem()
}

func (o GetBlockVolumeReplicasResultOutput) ToGetBlockVolumeReplicasResultOutput() GetBlockVolumeReplicasResultOutput {
	return o
}

func (o GetBlockVolumeReplicasResultOutput) ToGetBlockVolumeReplicasResultOutputWithContext(ctx context.Context) GetBlockVolumeReplicasResultOutput {
	return o
}

// The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
func (o GetBlockVolumeReplicasResultOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBlockVolumeReplicasResult) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

// The list of block_volume_replicas.
func (o GetBlockVolumeReplicasResultOutput) BlockVolumeReplicas() GetBlockVolumeReplicasBlockVolumeReplicaArrayOutput {
	return o.ApplyT(func(v GetBlockVolumeReplicasResult) []GetBlockVolumeReplicasBlockVolumeReplica {
		return v.BlockVolumeReplicas
	}).(GetBlockVolumeReplicasBlockVolumeReplicaArrayOutput)
}

// The OCID of the compartment that contains the block volume replica.
func (o GetBlockVolumeReplicasResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBlockVolumeReplicasResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetBlockVolumeReplicasResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBlockVolumeReplicasResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetBlockVolumeReplicasResultOutput) Filters() GetBlockVolumeReplicasFilterArrayOutput {
	return o.ApplyT(func(v GetBlockVolumeReplicasResult) []GetBlockVolumeReplicasFilter { return v.Filters }).(GetBlockVolumeReplicasFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBlockVolumeReplicasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlockVolumeReplicasResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of a block volume replica.
func (o GetBlockVolumeReplicasResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBlockVolumeReplicasResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetBlockVolumeReplicasResultOutput) VolumeGroupReplicaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBlockVolumeReplicasResult) *string { return v.VolumeGroupReplicaId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBlockVolumeReplicasResultOutput{})
}
