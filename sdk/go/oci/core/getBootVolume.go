// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Boot Volume resource in Oracle Cloud Infrastructure Core service.
//
// Gets information for the specified boot volume.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetBootVolume(ctx, &core.GetBootVolumeArgs{
//				BootVolumeId: testBootVolumeOciCoreBootVolume.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBootVolume(ctx *pulumi.Context, args *LookupBootVolumeArgs, opts ...pulumi.InvokeOption) (*LookupBootVolumeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBootVolumeResult
	err := ctx.Invoke("oci:Core/getBootVolume:getBootVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBootVolume.
type LookupBootVolumeArgs struct {
	// The OCID of the boot volume.
	BootVolumeId string `pulumi:"bootVolumeId"`
}

// A collection of values returned by getBootVolume.
type LookupBootVolumeResult struct {
	// The number of Volume Performance Units per GB that this boot volume is effectively tuned to.
	AutoTunedVpusPerGb string `pulumi:"autoTunedVpusPerGb"`
	// The list of autotune policies enabled for this volume.
	AutotunePolicies []GetBootVolumeAutotunePolicy `pulumi:"autotunePolicies"`
	// The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId string `pulumi:"backupPolicyId"`
	BootVolumeId   string `pulumi:"bootVolumeId"`
	// The list of boot volume replicas of this boot volume
	BootVolumeReplicas         []GetBootVolumeBootVolumeReplica `pulumi:"bootVolumeReplicas"`
	BootVolumeReplicasDeletion bool                             `pulumi:"bootVolumeReplicasDeletion"`
	// The clusterPlacementGroup Id of the volume for volume placement.
	ClusterPlacementGroupId string `pulumi:"clusterPlacementGroupId"`
	// The OCID of the compartment that contains the boot volume.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the boot volume replica.
	Id string `pulumi:"id"`
	// The image OCID used to create the boot volume.
	ImageId string `pulumi:"imageId"`
	// Specifies whether the auto-tune performance is enabled for this boot volume. This field is deprecated. Use the `DetachedVolumeAutotunePolicy` instead to enable the volume for detached autotune.
	IsAutoTuneEnabled bool `pulumi:"isAutoTuneEnabled"`
	// Specifies whether the boot volume's data has finished copying from the source boot volume or boot volume backup.
	IsHydrated bool `pulumi:"isHydrated"`
	// The OCID of the Vault service master encryption key assigned to the boot volume.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The size of the boot volume in GBs.
	SizeInGbs string `pulumi:"sizeInGbs"`
	// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
	SizeInMbs     string                      `pulumi:"sizeInMbs"`
	SourceDetails []GetBootVolumeSourceDetail `pulumi:"sourceDetails"`
	// The current state of a boot volume.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the boot volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The OCID of the source volume group.
	VolumeGroupId string `pulumi:"volumeGroupId"`
	// The number of volume performance units (VPUs) that will be applied to this boot volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
	VpusPerGb string `pulumi:"vpusPerGb"`
}

func LookupBootVolumeOutput(ctx *pulumi.Context, args LookupBootVolumeOutputArgs, opts ...pulumi.InvokeOption) LookupBootVolumeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBootVolumeResultOutput, error) {
			args := v.(LookupBootVolumeArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupBootVolumeResult
			secret, err := ctx.InvokePackageRaw("oci:Core/getBootVolume:getBootVolume", args, &rv, "", opts...)
			if err != nil {
				return LookupBootVolumeResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupBootVolumeResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupBootVolumeResultOutput), nil
			}
			return output, nil
		}).(LookupBootVolumeResultOutput)
}

// A collection of arguments for invoking getBootVolume.
type LookupBootVolumeOutputArgs struct {
	// The OCID of the boot volume.
	BootVolumeId pulumi.StringInput `pulumi:"bootVolumeId"`
}

func (LookupBootVolumeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBootVolumeArgs)(nil)).Elem()
}

// A collection of values returned by getBootVolume.
type LookupBootVolumeResultOutput struct{ *pulumi.OutputState }

func (LookupBootVolumeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBootVolumeResult)(nil)).Elem()
}

func (o LookupBootVolumeResultOutput) ToLookupBootVolumeResultOutput() LookupBootVolumeResultOutput {
	return o
}

func (o LookupBootVolumeResultOutput) ToLookupBootVolumeResultOutputWithContext(ctx context.Context) LookupBootVolumeResultOutput {
	return o
}

// The number of Volume Performance Units per GB that this boot volume is effectively tuned to.
func (o LookupBootVolumeResultOutput) AutoTunedVpusPerGb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.AutoTunedVpusPerGb }).(pulumi.StringOutput)
}

// The list of autotune policies enabled for this volume.
func (o LookupBootVolumeResultOutput) AutotunePolicies() GetBootVolumeAutotunePolicyArrayOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) []GetBootVolumeAutotunePolicy { return v.AutotunePolicies }).(GetBootVolumeAutotunePolicyArrayOutput)
}

// The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
func (o LookupBootVolumeResultOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
func (o LookupBootVolumeResultOutput) BackupPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.BackupPolicyId }).(pulumi.StringOutput)
}

func (o LookupBootVolumeResultOutput) BootVolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.BootVolumeId }).(pulumi.StringOutput)
}

// The list of boot volume replicas of this boot volume
func (o LookupBootVolumeResultOutput) BootVolumeReplicas() GetBootVolumeBootVolumeReplicaArrayOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) []GetBootVolumeBootVolumeReplica { return v.BootVolumeReplicas }).(GetBootVolumeBootVolumeReplicaArrayOutput)
}

func (o LookupBootVolumeResultOutput) BootVolumeReplicasDeletion() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) bool { return v.BootVolumeReplicasDeletion }).(pulumi.BoolOutput)
}

// The clusterPlacementGroup Id of the volume for volume placement.
func (o LookupBootVolumeResultOutput) ClusterPlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.ClusterPlacementGroupId }).(pulumi.StringOutput)
}

// The OCID of the compartment that contains the boot volume.
func (o LookupBootVolumeResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupBootVolumeResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupBootVolumeResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupBootVolumeResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the boot volume replica.
func (o LookupBootVolumeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.Id }).(pulumi.StringOutput)
}

// The image OCID used to create the boot volume.
func (o LookupBootVolumeResultOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.ImageId }).(pulumi.StringOutput)
}

// Specifies whether the auto-tune performance is enabled for this boot volume. This field is deprecated. Use the `DetachedVolumeAutotunePolicy` instead to enable the volume for detached autotune.
func (o LookupBootVolumeResultOutput) IsAutoTuneEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) bool { return v.IsAutoTuneEnabled }).(pulumi.BoolOutput)
}

// Specifies whether the boot volume's data has finished copying from the source boot volume or boot volume backup.
func (o LookupBootVolumeResultOutput) IsHydrated() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) bool { return v.IsHydrated }).(pulumi.BoolOutput)
}

// The OCID of the Vault service master encryption key assigned to the boot volume.
func (o LookupBootVolumeResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The size of the boot volume in GBs.
func (o LookupBootVolumeResultOutput) SizeInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.SizeInGbs }).(pulumi.StringOutput)
}

// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
func (o LookupBootVolumeResultOutput) SizeInMbs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.SizeInMbs }).(pulumi.StringOutput)
}

func (o LookupBootVolumeResultOutput) SourceDetails() GetBootVolumeSourceDetailArrayOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) []GetBootVolumeSourceDetail { return v.SourceDetails }).(GetBootVolumeSourceDetailArrayOutput)
}

// The current state of a boot volume.
func (o LookupBootVolumeResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupBootVolumeResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the boot volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o LookupBootVolumeResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The OCID of the source volume group.
func (o LookupBootVolumeResultOutput) VolumeGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.VolumeGroupId }).(pulumi.StringOutput)
}

// The number of volume performance units (VPUs) that will be applied to this boot volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
func (o LookupBootVolumeResultOutput) VpusPerGb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeResult) string { return v.VpusPerGb }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBootVolumeResultOutput{})
}
