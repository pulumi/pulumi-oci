// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Boot Volume Backup resource in Oracle Cloud Infrastructure Core service.
//
// Gets information for the specified boot volume backup.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.GetBootVolumeBackup(ctx, &core.GetBootVolumeBackupArgs{
//				BootVolumeBackupId: testBootVolumeBackupOciCoreBootVolumeBackup.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBootVolumeBackup(ctx *pulumi.Context, args *LookupBootVolumeBackupArgs, opts ...pulumi.InvokeOption) (*LookupBootVolumeBackupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBootVolumeBackupResult
	err := ctx.Invoke("oci:Core/getBootVolumeBackup:getBootVolumeBackup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBootVolumeBackup.
type LookupBootVolumeBackupArgs struct {
	// The OCID of the boot volume backup.
	BootVolumeBackupId string `pulumi:"bootVolumeBackupId"`
}

// A collection of values returned by getBootVolumeBackup.
type LookupBootVolumeBackupResult struct {
	BootVolumeBackupId string `pulumi:"bootVolumeBackupId"`
	// The OCID of the boot volume.
	BootVolumeId string `pulumi:"bootVolumeId"`
	// The OCID of the compartment that contains the boot volume backup.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
	ExpirationTime string `pulumi:"expirationTime"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the boot volume backup.
	Id string `pulumi:"id"`
	// The image OCID used to create the boot volume the backup is taken from.
	ImageId string `pulumi:"imageId"`
	// The OCID of the Vault service master encryption assigned to the boot volume backup. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The size of the boot volume, in GBs.
	SizeInGbs string `pulumi:"sizeInGbs"`
	// The OCID of the source boot volume backup.
	SourceBootVolumeBackupId string                            `pulumi:"sourceBootVolumeBackupId"`
	SourceDetails            []GetBootVolumeBackupSourceDetail `pulumi:"sourceDetails"`
	// Specifies whether the backup was created manually, or via scheduled backup policy.
	SourceType string `pulumi:"sourceType"`
	// The current state of a boot volume backup.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the boot volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the request to create the boot volume backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeRequestReceived string `pulumi:"timeRequestReceived"`
	// The type of a volume backup. Supported values are 'FULL' or 'INCREMENTAL'.
	Type string `pulumi:"type"`
	// The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the boot volume and whether the backup is full or incremental.
	UniqueSizeInGbs string `pulumi:"uniqueSizeInGbs"`
}

func LookupBootVolumeBackupOutput(ctx *pulumi.Context, args LookupBootVolumeBackupOutputArgs, opts ...pulumi.InvokeOption) LookupBootVolumeBackupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBootVolumeBackupResultOutput, error) {
			args := v.(LookupBootVolumeBackupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getBootVolumeBackup:getBootVolumeBackup", args, LookupBootVolumeBackupResultOutput{}, options).(LookupBootVolumeBackupResultOutput), nil
		}).(LookupBootVolumeBackupResultOutput)
}

// A collection of arguments for invoking getBootVolumeBackup.
type LookupBootVolumeBackupOutputArgs struct {
	// The OCID of the boot volume backup.
	BootVolumeBackupId pulumi.StringInput `pulumi:"bootVolumeBackupId"`
}

func (LookupBootVolumeBackupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBootVolumeBackupArgs)(nil)).Elem()
}

// A collection of values returned by getBootVolumeBackup.
type LookupBootVolumeBackupResultOutput struct{ *pulumi.OutputState }

func (LookupBootVolumeBackupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBootVolumeBackupResult)(nil)).Elem()
}

func (o LookupBootVolumeBackupResultOutput) ToLookupBootVolumeBackupResultOutput() LookupBootVolumeBackupResultOutput {
	return o
}

func (o LookupBootVolumeBackupResultOutput) ToLookupBootVolumeBackupResultOutputWithContext(ctx context.Context) LookupBootVolumeBackupResultOutput {
	return o
}

func (o LookupBootVolumeBackupResultOutput) BootVolumeBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.BootVolumeBackupId }).(pulumi.StringOutput)
}

// The OCID of the boot volume.
func (o LookupBootVolumeBackupResultOutput) BootVolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.BootVolumeId }).(pulumi.StringOutput)
}

// The OCID of the compartment that contains the boot volume backup.
func (o LookupBootVolumeBackupResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupBootVolumeBackupResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupBootVolumeBackupResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
func (o LookupBootVolumeBackupResultOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.ExpirationTime }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupBootVolumeBackupResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the boot volume backup.
func (o LookupBootVolumeBackupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The image OCID used to create the boot volume the backup is taken from.
func (o LookupBootVolumeBackupResultOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.ImageId }).(pulumi.StringOutput)
}

// The OCID of the Vault service master encryption assigned to the boot volume backup. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
func (o LookupBootVolumeBackupResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The size of the boot volume, in GBs.
func (o LookupBootVolumeBackupResultOutput) SizeInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.SizeInGbs }).(pulumi.StringOutput)
}

// The OCID of the source boot volume backup.
func (o LookupBootVolumeBackupResultOutput) SourceBootVolumeBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.SourceBootVolumeBackupId }).(pulumi.StringOutput)
}

func (o LookupBootVolumeBackupResultOutput) SourceDetails() GetBootVolumeBackupSourceDetailArrayOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) []GetBootVolumeBackupSourceDetail { return v.SourceDetails }).(GetBootVolumeBackupSourceDetailArrayOutput)
}

// Specifies whether the backup was created manually, or via scheduled backup policy.
func (o LookupBootVolumeBackupResultOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.SourceType }).(pulumi.StringOutput)
}

// The current state of a boot volume backup.
func (o LookupBootVolumeBackupResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupBootVolumeBackupResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the boot volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o LookupBootVolumeBackupResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the request to create the boot volume backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o LookupBootVolumeBackupResultOutput) TimeRequestReceived() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.TimeRequestReceived }).(pulumi.StringOutput)
}

// The type of a volume backup. Supported values are 'FULL' or 'INCREMENTAL'.
func (o LookupBootVolumeBackupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.Type }).(pulumi.StringOutput)
}

// The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the boot volume and whether the backup is full or incremental.
func (o LookupBootVolumeBackupResultOutput) UniqueSizeInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBootVolumeBackupResult) string { return v.UniqueSizeInGbs }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBootVolumeBackupResultOutput{})
}
