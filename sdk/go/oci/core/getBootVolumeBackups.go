// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Boot Volume Backups in Oracle Cloud Infrastructure Core service.
//
// Lists the boot volume backups in the specified compartment. You can filter the results by boot volume.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetBootVolumeBackups(ctx, &core.GetBootVolumeBackupsArgs{
//				CompartmentId:            _var.Compartment_id,
//				BootVolumeId:             pulumi.StringRef(oci_core_boot_volume.Test_boot_volume.Id),
//				DisplayName:              pulumi.StringRef(_var.Boot_volume_backup_display_name),
//				SourceBootVolumeBackupId: pulumi.StringRef(oci_core_boot_volume_backup.Test_boot_volume_backup.Id),
//				State:                    pulumi.StringRef(_var.Boot_volume_backup_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBootVolumeBackups(ctx *pulumi.Context, args *GetBootVolumeBackupsArgs, opts ...pulumi.InvokeOption) (*GetBootVolumeBackupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBootVolumeBackupsResult
	err := ctx.Invoke("oci:Core/getBootVolumeBackups:getBootVolumeBackups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBootVolumeBackups.
type GetBootVolumeBackupsArgs struct {
	// The OCID of the boot volume.
	BootVolumeId *string `pulumi:"bootVolumeId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetBootVolumeBackupsFilter `pulumi:"filters"`
	// A filter to return only resources that originated from the given source boot volume backup.
	SourceBootVolumeBackupId *string `pulumi:"sourceBootVolumeBackupId"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getBootVolumeBackups.
type GetBootVolumeBackupsResult struct {
	// The list of boot_volume_backups.
	BootVolumeBackups []GetBootVolumeBackupsBootVolumeBackup `pulumi:"bootVolumeBackups"`
	// The OCID of the boot volume.
	BootVolumeId *string `pulumi:"bootVolumeId"`
	// The OCID of the compartment that contains the boot volume backup.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetBootVolumeBackupsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the source boot volume backup.
	SourceBootVolumeBackupId *string `pulumi:"sourceBootVolumeBackupId"`
	// The current state of a boot volume backup.
	State *string `pulumi:"state"`
}

func GetBootVolumeBackupsOutput(ctx *pulumi.Context, args GetBootVolumeBackupsOutputArgs, opts ...pulumi.InvokeOption) GetBootVolumeBackupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBootVolumeBackupsResult, error) {
			args := v.(GetBootVolumeBackupsArgs)
			r, err := GetBootVolumeBackups(ctx, &args, opts...)
			var s GetBootVolumeBackupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBootVolumeBackupsResultOutput)
}

// A collection of arguments for invoking getBootVolumeBackups.
type GetBootVolumeBackupsOutputArgs struct {
	// The OCID of the boot volume.
	BootVolumeId pulumi.StringPtrInput `pulumi:"bootVolumeId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput                `pulumi:"displayName"`
	Filters     GetBootVolumeBackupsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that originated from the given source boot volume backup.
	SourceBootVolumeBackupId pulumi.StringPtrInput `pulumi:"sourceBootVolumeBackupId"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetBootVolumeBackupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBootVolumeBackupsArgs)(nil)).Elem()
}

// A collection of values returned by getBootVolumeBackups.
type GetBootVolumeBackupsResultOutput struct{ *pulumi.OutputState }

func (GetBootVolumeBackupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBootVolumeBackupsResult)(nil)).Elem()
}

func (o GetBootVolumeBackupsResultOutput) ToGetBootVolumeBackupsResultOutput() GetBootVolumeBackupsResultOutput {
	return o
}

func (o GetBootVolumeBackupsResultOutput) ToGetBootVolumeBackupsResultOutputWithContext(ctx context.Context) GetBootVolumeBackupsResultOutput {
	return o
}

// The list of boot_volume_backups.
func (o GetBootVolumeBackupsResultOutput) BootVolumeBackups() GetBootVolumeBackupsBootVolumeBackupArrayOutput {
	return o.ApplyT(func(v GetBootVolumeBackupsResult) []GetBootVolumeBackupsBootVolumeBackup { return v.BootVolumeBackups }).(GetBootVolumeBackupsBootVolumeBackupArrayOutput)
}

// The OCID of the boot volume.
func (o GetBootVolumeBackupsResultOutput) BootVolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBootVolumeBackupsResult) *string { return v.BootVolumeId }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment that contains the boot volume backup.
func (o GetBootVolumeBackupsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootVolumeBackupsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetBootVolumeBackupsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBootVolumeBackupsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetBootVolumeBackupsResultOutput) Filters() GetBootVolumeBackupsFilterArrayOutput {
	return o.ApplyT(func(v GetBootVolumeBackupsResult) []GetBootVolumeBackupsFilter { return v.Filters }).(GetBootVolumeBackupsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBootVolumeBackupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootVolumeBackupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the source boot volume backup.
func (o GetBootVolumeBackupsResultOutput) SourceBootVolumeBackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBootVolumeBackupsResult) *string { return v.SourceBootVolumeBackupId }).(pulumi.StringPtrOutput)
}

// The current state of a boot volume backup.
func (o GetBootVolumeBackupsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBootVolumeBackupsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBootVolumeBackupsResultOutput{})
}
