// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Capture Filter resource in Oracle Cloud Infrastructure Core service.
//
// Gets information about the specified VTAP capture filter.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetCaptureFilter(ctx, &core.GetCaptureFilterArgs{
//				CaptureFilterId: oci_core_capture_filter.Test_capture_filter.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCaptureFilter(ctx *pulumi.Context, args *LookupCaptureFilterArgs, opts ...pulumi.InvokeOption) (*LookupCaptureFilterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCaptureFilterResult
	err := ctx.Invoke("oci:Core/getCaptureFilter:getCaptureFilter", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCaptureFilter.
type LookupCaptureFilterArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the capture filter.
	CaptureFilterId string `pulumi:"captureFilterId"`
}

// A collection of values returned by getCaptureFilter.
type LookupCaptureFilterResult struct {
	CaptureFilterId string `pulumi:"captureFilterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the capture filter.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Indicates which service will use this capture filter
	FilterType string `pulumi:"filterType"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The capture filter's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
	Id string `pulumi:"id"`
	// The capture filter's current administrative state.
	State string `pulumi:"state"`
	// The date and time the capture filter was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2021-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The set of rules governing what traffic a VTAP mirrors.
	VtapCaptureFilterRules []GetCaptureFilterVtapCaptureFilterRule `pulumi:"vtapCaptureFilterRules"`
}

func LookupCaptureFilterOutput(ctx *pulumi.Context, args LookupCaptureFilterOutputArgs, opts ...pulumi.InvokeOption) LookupCaptureFilterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCaptureFilterResult, error) {
			args := v.(LookupCaptureFilterArgs)
			r, err := LookupCaptureFilter(ctx, &args, opts...)
			var s LookupCaptureFilterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCaptureFilterResultOutput)
}

// A collection of arguments for invoking getCaptureFilter.
type LookupCaptureFilterOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the capture filter.
	CaptureFilterId pulumi.StringInput `pulumi:"captureFilterId"`
}

func (LookupCaptureFilterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCaptureFilterArgs)(nil)).Elem()
}

// A collection of values returned by getCaptureFilter.
type LookupCaptureFilterResultOutput struct{ *pulumi.OutputState }

func (LookupCaptureFilterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCaptureFilterResult)(nil)).Elem()
}

func (o LookupCaptureFilterResultOutput) ToLookupCaptureFilterResultOutput() LookupCaptureFilterResultOutput {
	return o
}

func (o LookupCaptureFilterResultOutput) ToLookupCaptureFilterResultOutputWithContext(ctx context.Context) LookupCaptureFilterResultOutput {
	return o
}

func (o LookupCaptureFilterResultOutput) CaptureFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaptureFilterResult) string { return v.CaptureFilterId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the capture filter.
func (o LookupCaptureFilterResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaptureFilterResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupCaptureFilterResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupCaptureFilterResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupCaptureFilterResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaptureFilterResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Indicates which service will use this capture filter
func (o LookupCaptureFilterResultOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaptureFilterResult) string { return v.FilterType }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupCaptureFilterResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupCaptureFilterResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The capture filter's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
func (o LookupCaptureFilterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaptureFilterResult) string { return v.Id }).(pulumi.StringOutput)
}

// The capture filter's current administrative state.
func (o LookupCaptureFilterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaptureFilterResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the capture filter was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2021-08-25T21:10:29.600Z`
func (o LookupCaptureFilterResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCaptureFilterResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The set of rules governing what traffic a VTAP mirrors.
func (o LookupCaptureFilterResultOutput) VtapCaptureFilterRules() GetCaptureFilterVtapCaptureFilterRuleArrayOutput {
	return o.ApplyT(func(v LookupCaptureFilterResult) []GetCaptureFilterVtapCaptureFilterRule {
		return v.VtapCaptureFilterRules
	}).(GetCaptureFilterVtapCaptureFilterRuleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCaptureFilterResultOutput{})
}
