// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Capture Filters in Oracle Cloud Infrastructure Core service.
//
// Lists the capture filters in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetCaptureFilters(ctx, &core.GetCaptureFiltersArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Capture_filter_display_name),
//				State:         pulumi.StringRef(_var.Capture_filter_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCaptureFilters(ctx *pulumi.Context, args *GetCaptureFiltersArgs, opts ...pulumi.InvokeOption) (*GetCaptureFiltersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCaptureFiltersResult
	err := ctx.Invoke("oci:Core/getCaptureFilters:getCaptureFilters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCaptureFilters.
type GetCaptureFiltersArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string                   `pulumi:"displayName"`
	Filters     []GetCaptureFiltersFilter `pulumi:"filters"`
	// A filter to return only resources that match the given capture filter lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getCaptureFilters.
type GetCaptureFiltersResult struct {
	// The list of capture_filters.
	CaptureFilters []GetCaptureFiltersCaptureFilter `pulumi:"captureFilters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the capture filter.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string                   `pulumi:"displayName"`
	Filters     []GetCaptureFiltersFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The capture filter's current administrative state.
	State *string `pulumi:"state"`
}

func GetCaptureFiltersOutput(ctx *pulumi.Context, args GetCaptureFiltersOutputArgs, opts ...pulumi.InvokeOption) GetCaptureFiltersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCaptureFiltersResult, error) {
			args := v.(GetCaptureFiltersArgs)
			r, err := GetCaptureFilters(ctx, &args, opts...)
			var s GetCaptureFiltersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCaptureFiltersResultOutput)
}

// A collection of arguments for invoking getCaptureFilters.
type GetCaptureFiltersOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput             `pulumi:"displayName"`
	Filters     GetCaptureFiltersFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given capture filter lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetCaptureFiltersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureFiltersArgs)(nil)).Elem()
}

// A collection of values returned by getCaptureFilters.
type GetCaptureFiltersResultOutput struct{ *pulumi.OutputState }

func (GetCaptureFiltersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureFiltersResult)(nil)).Elem()
}

func (o GetCaptureFiltersResultOutput) ToGetCaptureFiltersResultOutput() GetCaptureFiltersResultOutput {
	return o
}

func (o GetCaptureFiltersResultOutput) ToGetCaptureFiltersResultOutputWithContext(ctx context.Context) GetCaptureFiltersResultOutput {
	return o
}

func (o GetCaptureFiltersResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetCaptureFiltersResult] {
	return pulumix.Output[GetCaptureFiltersResult]{
		OutputState: o.OutputState,
	}
}

// The list of capture_filters.
func (o GetCaptureFiltersResultOutput) CaptureFilters() GetCaptureFiltersCaptureFilterArrayOutput {
	return o.ApplyT(func(v GetCaptureFiltersResult) []GetCaptureFiltersCaptureFilter { return v.CaptureFilters }).(GetCaptureFiltersCaptureFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the capture filter.
func (o GetCaptureFiltersResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureFiltersResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetCaptureFiltersResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCaptureFiltersResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetCaptureFiltersResultOutput) Filters() GetCaptureFiltersFilterArrayOutput {
	return o.ApplyT(func(v GetCaptureFiltersResult) []GetCaptureFiltersFilter { return v.Filters }).(GetCaptureFiltersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCaptureFiltersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureFiltersResult) string { return v.Id }).(pulumi.StringOutput)
}

// The capture filter's current administrative state.
func (o GetCaptureFiltersResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCaptureFiltersResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCaptureFiltersResultOutput{})
}
