// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Compute Image Capability Schema resource in Oracle Cloud Infrastructure Core service.
//
// # Gets the specified Compute Image Capability Schema
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetComputeImageCapabilitySchema(ctx, &core.GetComputeImageCapabilitySchemaArgs{
//				ComputeImageCapabilitySchemaId: testComputeImageCapabilitySchemaOciCoreComputeImageCapabilitySchema.Id,
//				IsMergeEnabled:                 pulumi.StringRef(computeImageCapabilitySchemaIsMergeEnabled),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupComputeImageCapabilitySchema(ctx *pulumi.Context, args *LookupComputeImageCapabilitySchemaArgs, opts ...pulumi.InvokeOption) (*LookupComputeImageCapabilitySchemaResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupComputeImageCapabilitySchemaResult
	err := ctx.Invoke("oci:Core/getComputeImageCapabilitySchema:getComputeImageCapabilitySchema", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputeImageCapabilitySchema.
type LookupComputeImageCapabilitySchemaArgs struct {
	// The id of the compute image capability schema or the image ocid
	ComputeImageCapabilitySchemaId string `pulumi:"computeImageCapabilitySchemaId"`
	// Merge the image capability schema with the global image capability schema
	IsMergeEnabled *string `pulumi:"isMergeEnabled"`
}

// A collection of values returned by getComputeImageCapabilitySchema.
type LookupComputeImageCapabilitySchemaResult struct {
	// The OCID of the compartment containing the compute global image capability schema
	CompartmentId string `pulumi:"compartmentId"`
	// The ocid of the compute global image capability schema
	ComputeGlobalImageCapabilitySchemaId string `pulumi:"computeGlobalImageCapabilitySchemaId"`
	// The name of the compute global image capability schema version
	ComputeGlobalImageCapabilitySchemaVersionName string `pulumi:"computeGlobalImageCapabilitySchemaVersionName"`
	ComputeImageCapabilitySchemaId                string `pulumi:"computeImageCapabilitySchemaId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The compute image capability schema [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	Id string `pulumi:"id"`
	// The OCID of the image associated with this compute image capability schema
	ImageId        string  `pulumi:"imageId"`
	IsMergeEnabled *string `pulumi:"isMergeEnabled"`
	// A mapping of each capability name to its ImageCapabilityDescriptor.
	SchemaData map[string]interface{} `pulumi:"schemaData"`
	// The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
}

func LookupComputeImageCapabilitySchemaOutput(ctx *pulumi.Context, args LookupComputeImageCapabilitySchemaOutputArgs, opts ...pulumi.InvokeOption) LookupComputeImageCapabilitySchemaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupComputeImageCapabilitySchemaResult, error) {
			args := v.(LookupComputeImageCapabilitySchemaArgs)
			r, err := LookupComputeImageCapabilitySchema(ctx, &args, opts...)
			var s LookupComputeImageCapabilitySchemaResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupComputeImageCapabilitySchemaResultOutput)
}

// A collection of arguments for invoking getComputeImageCapabilitySchema.
type LookupComputeImageCapabilitySchemaOutputArgs struct {
	// The id of the compute image capability schema or the image ocid
	ComputeImageCapabilitySchemaId pulumi.StringInput `pulumi:"computeImageCapabilitySchemaId"`
	// Merge the image capability schema with the global image capability schema
	IsMergeEnabled pulumi.StringPtrInput `pulumi:"isMergeEnabled"`
}

func (LookupComputeImageCapabilitySchemaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeImageCapabilitySchemaArgs)(nil)).Elem()
}

// A collection of values returned by getComputeImageCapabilitySchema.
type LookupComputeImageCapabilitySchemaResultOutput struct{ *pulumi.OutputState }

func (LookupComputeImageCapabilitySchemaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeImageCapabilitySchemaResult)(nil)).Elem()
}

func (o LookupComputeImageCapabilitySchemaResultOutput) ToLookupComputeImageCapabilitySchemaResultOutput() LookupComputeImageCapabilitySchemaResultOutput {
	return o
}

func (o LookupComputeImageCapabilitySchemaResultOutput) ToLookupComputeImageCapabilitySchemaResultOutputWithContext(ctx context.Context) LookupComputeImageCapabilitySchemaResultOutput {
	return o
}

// The OCID of the compartment containing the compute global image capability schema
func (o LookupComputeImageCapabilitySchemaResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The ocid of the compute global image capability schema
func (o LookupComputeImageCapabilitySchemaResultOutput) ComputeGlobalImageCapabilitySchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) string { return v.ComputeGlobalImageCapabilitySchemaId }).(pulumi.StringOutput)
}

// The name of the compute global image capability schema version
func (o LookupComputeImageCapabilitySchemaResultOutput) ComputeGlobalImageCapabilitySchemaVersionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) string {
		return v.ComputeGlobalImageCapabilitySchemaVersionName
	}).(pulumi.StringOutput)
}

func (o LookupComputeImageCapabilitySchemaResultOutput) ComputeImageCapabilitySchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) string { return v.ComputeImageCapabilitySchemaId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupComputeImageCapabilitySchemaResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupComputeImageCapabilitySchemaResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupComputeImageCapabilitySchemaResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The compute image capability schema [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o LookupComputeImageCapabilitySchemaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the image associated with this compute image capability schema
func (o LookupComputeImageCapabilitySchemaResultOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o LookupComputeImageCapabilitySchemaResultOutput) IsMergeEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) *string { return v.IsMergeEnabled }).(pulumi.StringPtrOutput)
}

// A mapping of each capability name to its ImageCapabilityDescriptor.
func (o LookupComputeImageCapabilitySchemaResultOutput) SchemaData() pulumi.MapOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) map[string]interface{} { return v.SchemaData }).(pulumi.MapOutput)
}

// The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupComputeImageCapabilitySchemaResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeImageCapabilitySchemaResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupComputeImageCapabilitySchemaResultOutput{})
}
