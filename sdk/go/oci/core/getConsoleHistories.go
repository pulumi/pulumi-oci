// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Console Histories in Oracle Cloud Infrastructure Core service.
//
// Lists the console history metadata for the specified compartment or instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetConsoleHistories(ctx, &core.GetConsoleHistoriesArgs{
//				CompartmentId:      _var.Compartment_id,
//				AvailabilityDomain: pulumi.StringRef(_var.Console_history_availability_domain),
//				InstanceId:         pulumi.StringRef(oci_core_instance.Test_instance.Id),
//				State:              pulumi.StringRef(_var.Console_history_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetConsoleHistories(ctx *pulumi.Context, args *GetConsoleHistoriesArgs, opts ...pulumi.InvokeOption) (*GetConsoleHistoriesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConsoleHistoriesResult
	err := ctx.Invoke("oci:Core/getConsoleHistories:getConsoleHistories", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConsoleHistories.
type GetConsoleHistoriesArgs struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string                      `pulumi:"compartmentId"`
	Filters       []GetConsoleHistoriesFilter `pulumi:"filters"`
	// The OCID of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getConsoleHistories.
type GetConsoleHistoriesResult struct {
	// The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of console_histories.
	ConsoleHistories []GetConsoleHistoriesConsoleHistory `pulumi:"consoleHistories"`
	Filters          []GetConsoleHistoriesFilter         `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The OCID of the instance this console history was fetched from.
	InstanceId *string `pulumi:"instanceId"`
	// The current state of the console history.
	State *string `pulumi:"state"`
}

func GetConsoleHistoriesOutput(ctx *pulumi.Context, args GetConsoleHistoriesOutputArgs, opts ...pulumi.InvokeOption) GetConsoleHistoriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConsoleHistoriesResult, error) {
			args := v.(GetConsoleHistoriesArgs)
			r, err := GetConsoleHistories(ctx, &args, opts...)
			var s GetConsoleHistoriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetConsoleHistoriesResultOutput)
}

// A collection of arguments for invoking getConsoleHistories.
type GetConsoleHistoriesOutputArgs struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput                  `pulumi:"compartmentId"`
	Filters       GetConsoleHistoriesFilterArrayInput `pulumi:"filters"`
	// The OCID of the instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetConsoleHistoriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsoleHistoriesArgs)(nil)).Elem()
}

// A collection of values returned by getConsoleHistories.
type GetConsoleHistoriesResultOutput struct{ *pulumi.OutputState }

func (GetConsoleHistoriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsoleHistoriesResult)(nil)).Elem()
}

func (o GetConsoleHistoriesResultOutput) ToGetConsoleHistoriesResultOutput() GetConsoleHistoriesResultOutput {
	return o
}

func (o GetConsoleHistoriesResultOutput) ToGetConsoleHistoriesResultOutputWithContext(ctx context.Context) GetConsoleHistoriesResultOutput {
	return o
}

// The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
func (o GetConsoleHistoriesResultOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConsoleHistoriesResult) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment.
func (o GetConsoleHistoriesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsoleHistoriesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of console_histories.
func (o GetConsoleHistoriesResultOutput) ConsoleHistories() GetConsoleHistoriesConsoleHistoryArrayOutput {
	return o.ApplyT(func(v GetConsoleHistoriesResult) []GetConsoleHistoriesConsoleHistory { return v.ConsoleHistories }).(GetConsoleHistoriesConsoleHistoryArrayOutput)
}

func (o GetConsoleHistoriesResultOutput) Filters() GetConsoleHistoriesFilterArrayOutput {
	return o.ApplyT(func(v GetConsoleHistoriesResult) []GetConsoleHistoriesFilter { return v.Filters }).(GetConsoleHistoriesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConsoleHistoriesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConsoleHistoriesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The OCID of the instance this console history was fetched from.
func (o GetConsoleHistoriesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConsoleHistoriesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The current state of the console history.
func (o GetConsoleHistoriesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConsoleHistoriesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConsoleHistoriesResultOutput{})
}
