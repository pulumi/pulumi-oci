// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Console History Content resource in Oracle Cloud Infrastructure Core service.
//
// Gets the actual console history data (not the metadata).
// See [CaptureConsoleHistory](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/ConsoleHistory/CaptureConsoleHistory)
// for details about using the console history operations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetConsoleHistoryData(ctx, &core.GetConsoleHistoryDataArgs{
//				ConsoleHistoryId: testConsoleHistory.Id,
//				Length:           pulumi.IntRef(consoleHistoryContentLength),
//				Offset:           pulumi.IntRef(consoleHistoryContentOffset),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetConsoleHistoryData(ctx *pulumi.Context, args *GetConsoleHistoryDataArgs, opts ...pulumi.InvokeOption) (*GetConsoleHistoryDataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConsoleHistoryDataResult
	err := ctx.Invoke("oci:Core/getConsoleHistoryData:getConsoleHistoryData", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConsoleHistoryData.
type GetConsoleHistoryDataArgs struct {
	// The OCID of the console history.
	ConsoleHistoryId string `pulumi:"consoleHistoryId"`
	// Length of the snapshot data to retrieve. Cannot be less than 10240.
	Length *int `pulumi:"length"`
	// Offset of the snapshot data to retrieve.
	Offset *int `pulumi:"offset"`
}

// A collection of values returned by getConsoleHistoryData.
type GetConsoleHistoryDataResult struct {
	ConsoleHistoryId string `pulumi:"consoleHistoryId"`
	// The console history data.
	Data string `pulumi:"data"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Length *int   `pulumi:"length"`
	Offset *int   `pulumi:"offset"`
}

func GetConsoleHistoryDataOutput(ctx *pulumi.Context, args GetConsoleHistoryDataOutputArgs, opts ...pulumi.InvokeOption) GetConsoleHistoryDataResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConsoleHistoryDataResult, error) {
			args := v.(GetConsoleHistoryDataArgs)
			r, err := GetConsoleHistoryData(ctx, &args, opts...)
			var s GetConsoleHistoryDataResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetConsoleHistoryDataResultOutput)
}

// A collection of arguments for invoking getConsoleHistoryData.
type GetConsoleHistoryDataOutputArgs struct {
	// The OCID of the console history.
	ConsoleHistoryId pulumi.StringInput `pulumi:"consoleHistoryId"`
	// Length of the snapshot data to retrieve. Cannot be less than 10240.
	Length pulumi.IntPtrInput `pulumi:"length"`
	// Offset of the snapshot data to retrieve.
	Offset pulumi.IntPtrInput `pulumi:"offset"`
}

func (GetConsoleHistoryDataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsoleHistoryDataArgs)(nil)).Elem()
}

// A collection of values returned by getConsoleHistoryData.
type GetConsoleHistoryDataResultOutput struct{ *pulumi.OutputState }

func (GetConsoleHistoryDataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsoleHistoryDataResult)(nil)).Elem()
}

func (o GetConsoleHistoryDataResultOutput) ToGetConsoleHistoryDataResultOutput() GetConsoleHistoryDataResultOutput {
	return o
}

func (o GetConsoleHistoryDataResultOutput) ToGetConsoleHistoryDataResultOutputWithContext(ctx context.Context) GetConsoleHistoryDataResultOutput {
	return o
}

func (o GetConsoleHistoryDataResultOutput) ConsoleHistoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsoleHistoryDataResult) string { return v.ConsoleHistoryId }).(pulumi.StringOutput)
}

// The console history data.
func (o GetConsoleHistoryDataResultOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsoleHistoryDataResult) string { return v.Data }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConsoleHistoryDataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsoleHistoryDataResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetConsoleHistoryDataResultOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConsoleHistoryDataResult) *int { return v.Length }).(pulumi.IntPtrOutput)
}

func (o GetConsoleHistoryDataResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetConsoleHistoryDataResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConsoleHistoryDataResultOutput{})
}
