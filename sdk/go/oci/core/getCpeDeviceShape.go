// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Cpe Device Shape resource in Oracle Cloud Infrastructure Core service.
//
// Gets the detailed information about the specified CPE device type. This might include a set of questions
// that are specific to the particular CPE device type. The customer must supply answers to those questions
// (see [UpdateTunnelCpeDeviceConfig](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/TunnelCpeDeviceConfig/UpdateTunnelCpeDeviceConfig)).
// The service merges the answers with a template of other information for the CPE device type. The following
// operations return the merged content:
//
//   - [GetCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Cpe/GetCpeDeviceConfigContent)
//   - [GetIpsecCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnection/GetIpsecCpeDeviceConfigContent)
//   - [GetTunnelCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/TunnelCpeDeviceConfig/GetTunnelCpeDeviceConfigContent)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.GetCpeDeviceShape(ctx, &core.GetCpeDeviceShapeArgs{
//				CpeDeviceShapeId: testCpeDeviceShapeOciCoreCpeDeviceShape.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCpeDeviceShape(ctx *pulumi.Context, args *GetCpeDeviceShapeArgs, opts ...pulumi.InvokeOption) (*GetCpeDeviceShapeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCpeDeviceShapeResult
	err := ctx.Invoke("oci:Core/getCpeDeviceShape:getCpeDeviceShape", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCpeDeviceShape.
type GetCpeDeviceShapeArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CPE device shape.
	CpeDeviceShapeId string `pulumi:"cpeDeviceShapeId"`
}

// A collection of values returned by getCpeDeviceShape.
type GetCpeDeviceShapeResult struct {
	// Basic information about a particular CPE device type.
	CpeDeviceInfos []GetCpeDeviceShapeCpeDeviceInfo `pulumi:"cpeDeviceInfos"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CPE device shape. This value uniquely identifies the type of CPE device.
	CpeDeviceShapeId string `pulumi:"cpeDeviceShapeId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// For certain CPE devices types, the customer can provide answers to questions that are specific to the device type. This attribute contains a list of those questions. The Networking service merges the answers with other information and renders a set of CPE configuration content. To provide the answers, use [UpdateTunnelCpeDeviceConfig](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/TunnelCpeDeviceConfig/UpdateTunnelCpeDeviceConfig).
	Parameters []GetCpeDeviceShapeParameter `pulumi:"parameters"`
	// A template of CPE device configuration information that will be merged with the customer's answers to the questions to render the final CPE device configuration content. Also see:
	// * [GetCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Cpe/GetCpeDeviceConfigContent)
	// * [GetIpsecCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnection/GetIpsecCpeDeviceConfigContent)
	// * [GetTunnelCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/TunnelCpeDeviceConfig/GetTunnelCpeDeviceConfigContent)
	Template string `pulumi:"template"`
}

func GetCpeDeviceShapeOutput(ctx *pulumi.Context, args GetCpeDeviceShapeOutputArgs, opts ...pulumi.InvokeOption) GetCpeDeviceShapeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCpeDeviceShapeResultOutput, error) {
			args := v.(GetCpeDeviceShapeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getCpeDeviceShape:getCpeDeviceShape", args, GetCpeDeviceShapeResultOutput{}, options).(GetCpeDeviceShapeResultOutput), nil
		}).(GetCpeDeviceShapeResultOutput)
}

// A collection of arguments for invoking getCpeDeviceShape.
type GetCpeDeviceShapeOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CPE device shape.
	CpeDeviceShapeId pulumi.StringInput `pulumi:"cpeDeviceShapeId"`
}

func (GetCpeDeviceShapeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCpeDeviceShapeArgs)(nil)).Elem()
}

// A collection of values returned by getCpeDeviceShape.
type GetCpeDeviceShapeResultOutput struct{ *pulumi.OutputState }

func (GetCpeDeviceShapeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCpeDeviceShapeResult)(nil)).Elem()
}

func (o GetCpeDeviceShapeResultOutput) ToGetCpeDeviceShapeResultOutput() GetCpeDeviceShapeResultOutput {
	return o
}

func (o GetCpeDeviceShapeResultOutput) ToGetCpeDeviceShapeResultOutputWithContext(ctx context.Context) GetCpeDeviceShapeResultOutput {
	return o
}

// Basic information about a particular CPE device type.
func (o GetCpeDeviceShapeResultOutput) CpeDeviceInfos() GetCpeDeviceShapeCpeDeviceInfoArrayOutput {
	return o.ApplyT(func(v GetCpeDeviceShapeResult) []GetCpeDeviceShapeCpeDeviceInfo { return v.CpeDeviceInfos }).(GetCpeDeviceShapeCpeDeviceInfoArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CPE device shape. This value uniquely identifies the type of CPE device.
func (o GetCpeDeviceShapeResultOutput) CpeDeviceShapeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpeDeviceShapeResult) string { return v.CpeDeviceShapeId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCpeDeviceShapeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpeDeviceShapeResult) string { return v.Id }).(pulumi.StringOutput)
}

// For certain CPE devices types, the customer can provide answers to questions that are specific to the device type. This attribute contains a list of those questions. The Networking service merges the answers with other information and renders a set of CPE configuration content. To provide the answers, use [UpdateTunnelCpeDeviceConfig](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/TunnelCpeDeviceConfig/UpdateTunnelCpeDeviceConfig).
func (o GetCpeDeviceShapeResultOutput) Parameters() GetCpeDeviceShapeParameterArrayOutput {
	return o.ApplyT(func(v GetCpeDeviceShapeResult) []GetCpeDeviceShapeParameter { return v.Parameters }).(GetCpeDeviceShapeParameterArrayOutput)
}

// A template of CPE device configuration information that will be merged with the customer's answers to the questions to render the final CPE device configuration content. Also see:
// * [GetCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Cpe/GetCpeDeviceConfigContent)
// * [GetIpsecCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/IPSecConnection/GetIpsecCpeDeviceConfigContent)
// * [GetTunnelCpeDeviceConfigContent](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/TunnelCpeDeviceConfig/GetTunnelCpeDeviceConfigContent)
func (o GetCpeDeviceShapeResultOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpeDeviceShapeResult) string { return v.Template }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCpeDeviceShapeResultOutput{})
}
