// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Dhcp Options in Oracle Cloud Infrastructure Core service.
//
// Lists the sets of DHCP options in the specified VCN and specified compartment.
// If the VCN ID is not provided, then the list includes the sets of DHCP options from all VCNs in the specified compartment.
// The response includes the default set of options that automatically comes with each VCN,
// plus any other sets you've created.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetDhcpOptions(ctx, &core.GetDhcpOptionsArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(dhcpOptionsDisplayName),
//				State:         pulumi.StringRef(dhcpOptionsState),
//				VcnId:         pulumi.StringRef(testVcn.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDhcpOptions(ctx *pulumi.Context, args *LookupDhcpOptionsArgs, opts ...pulumi.InvokeOption) (*LookupDhcpOptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDhcpOptionsResult
	err := ctx.Invoke("oci:Core/getDhcpOptions:getDhcpOptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDhcpOptions.
type LookupDhcpOptionsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetDhcpOptionsFilter `pulumi:"filters"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
	VcnId *string `pulumi:"vcnId"`
}

// A collection of values returned by getDhcpOptions.
type LookupDhcpOptionsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the set of DHCP options.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetDhcpOptionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The collection of individual DHCP options.
	Options []GetDhcpOptionsOption `pulumi:"options"`
	// The current state of the set of DHCP options.
	State *string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN the set of DHCP options belongs to.
	VcnId *string `pulumi:"vcnId"`
}

func LookupDhcpOptionsOutput(ctx *pulumi.Context, args LookupDhcpOptionsOutputArgs, opts ...pulumi.InvokeOption) LookupDhcpOptionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDhcpOptionsResult, error) {
			args := v.(LookupDhcpOptionsArgs)
			r, err := LookupDhcpOptions(ctx, &args, opts...)
			var s LookupDhcpOptionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDhcpOptionsResultOutput)
}

// A collection of arguments for invoking getDhcpOptions.
type LookupDhcpOptionsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput          `pulumi:"displayName"`
	Filters     GetDhcpOptionsFilterArrayInput `pulumi:"filters"`
	// A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
	VcnId pulumi.StringPtrInput `pulumi:"vcnId"`
}

func (LookupDhcpOptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDhcpOptionsArgs)(nil)).Elem()
}

// A collection of values returned by getDhcpOptions.
type LookupDhcpOptionsResultOutput struct{ *pulumi.OutputState }

func (LookupDhcpOptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDhcpOptionsResult)(nil)).Elem()
}

func (o LookupDhcpOptionsResultOutput) ToLookupDhcpOptionsResultOutput() LookupDhcpOptionsResultOutput {
	return o
}

func (o LookupDhcpOptionsResultOutput) ToLookupDhcpOptionsResultOutputWithContext(ctx context.Context) LookupDhcpOptionsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the set of DHCP options.
func (o LookupDhcpOptionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDhcpOptionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupDhcpOptionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDhcpOptionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupDhcpOptionsResultOutput) Filters() GetDhcpOptionsFilterArrayOutput {
	return o.ApplyT(func(v LookupDhcpOptionsResult) []GetDhcpOptionsFilter { return v.Filters }).(GetDhcpOptionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDhcpOptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDhcpOptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The collection of individual DHCP options.
func (o LookupDhcpOptionsResultOutput) Options() GetDhcpOptionsOptionArrayOutput {
	return o.ApplyT(func(v LookupDhcpOptionsResult) []GetDhcpOptionsOption { return v.Options }).(GetDhcpOptionsOptionArrayOutput)
}

// The current state of the set of DHCP options.
func (o LookupDhcpOptionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDhcpOptionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN the set of DHCP options belongs to.
func (o LookupDhcpOptionsResultOutput) VcnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDhcpOptionsResult) *string { return v.VcnId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDhcpOptionsResultOutput{})
}
