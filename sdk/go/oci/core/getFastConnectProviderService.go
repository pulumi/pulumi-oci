// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Fast Connect Provider Service resource in Oracle Cloud Infrastructure Core service.
//
// Gets the specified provider service.
// For more information, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetFastConnectProviderService(ctx, &core.GetFastConnectProviderServiceArgs{
//				ProviderServiceId: testFastConnectProviderServices.FastConnectProviderServices[0].Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFastConnectProviderService(ctx *pulumi.Context, args *GetFastConnectProviderServiceArgs, opts ...pulumi.InvokeOption) (*GetFastConnectProviderServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFastConnectProviderServiceResult
	err := ctx.Invoke("oci:Core/getFastConnectProviderService:getFastConnectProviderService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFastConnectProviderService.
type GetFastConnectProviderServiceArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the provider service.
	ProviderServiceId string `pulumi:"providerServiceId"`
}

// A collection of values returned by getFastConnectProviderService.
type GetFastConnectProviderServiceResult struct {
	// Who is responsible for managing the virtual circuit bandwidth.
	BandwithShapeManagement string `pulumi:"bandwithShapeManagement"`
	// Who is responsible for managing the ASN information for the network at the other end of the connection from Oracle.
	CustomerAsnManagement string `pulumi:"customerAsnManagement"`
	// The location of the provider's website or portal. This portal is where you can get information about the provider service, create a virtual circuit connection from the provider to Oracle Cloud Infrastructure, and retrieve your provider service key for that virtual circuit connection.  Example: `https://example.com`
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Who is responsible for managing the private peering BGP information.
	PrivatePeeringBgpManagement string `pulumi:"privatePeeringBgpManagement"`
	// The name of the provider.
	ProviderName      string `pulumi:"providerName"`
	ProviderServiceId string `pulumi:"providerServiceId"`
	// Who is responsible for managing the provider service key.
	ProviderServiceKeyManagement string `pulumi:"providerServiceKeyManagement"`
	// The name of the service offered by the provider.
	ProviderServiceName string `pulumi:"providerServiceName"`
	// Who is responsible for managing the public peering BGP information.
	PublicPeeringBgpManagement string `pulumi:"publicPeeringBgpManagement"`
	// Total number of cross-connect or cross-connect groups required for the virtual circuit.
	RequiredTotalCrossConnects int `pulumi:"requiredTotalCrossConnects"`
	// An array of virtual circuit types supported by this service.
	SupportedVirtualCircuitTypes []string `pulumi:"supportedVirtualCircuitTypes"`
	// Provider service type.
	Type string `pulumi:"type"`
}

func GetFastConnectProviderServiceOutput(ctx *pulumi.Context, args GetFastConnectProviderServiceOutputArgs, opts ...pulumi.InvokeOption) GetFastConnectProviderServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFastConnectProviderServiceResult, error) {
			args := v.(GetFastConnectProviderServiceArgs)
			r, err := GetFastConnectProviderService(ctx, &args, opts...)
			var s GetFastConnectProviderServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetFastConnectProviderServiceResultOutput)
}

// A collection of arguments for invoking getFastConnectProviderService.
type GetFastConnectProviderServiceOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the provider service.
	ProviderServiceId pulumi.StringInput `pulumi:"providerServiceId"`
}

func (GetFastConnectProviderServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFastConnectProviderServiceArgs)(nil)).Elem()
}

// A collection of values returned by getFastConnectProviderService.
type GetFastConnectProviderServiceResultOutput struct{ *pulumi.OutputState }

func (GetFastConnectProviderServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFastConnectProviderServiceResult)(nil)).Elem()
}

func (o GetFastConnectProviderServiceResultOutput) ToGetFastConnectProviderServiceResultOutput() GetFastConnectProviderServiceResultOutput {
	return o
}

func (o GetFastConnectProviderServiceResultOutput) ToGetFastConnectProviderServiceResultOutputWithContext(ctx context.Context) GetFastConnectProviderServiceResultOutput {
	return o
}

// Who is responsible for managing the virtual circuit bandwidth.
func (o GetFastConnectProviderServiceResultOutput) BandwithShapeManagement() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) string { return v.BandwithShapeManagement }).(pulumi.StringOutput)
}

// Who is responsible for managing the ASN information for the network at the other end of the connection from Oracle.
func (o GetFastConnectProviderServiceResultOutput) CustomerAsnManagement() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) string { return v.CustomerAsnManagement }).(pulumi.StringOutput)
}

// The location of the provider's website or portal. This portal is where you can get information about the provider service, create a virtual circuit connection from the provider to Oracle Cloud Infrastructure, and retrieve your provider service key for that virtual circuit connection.  Example: `https://example.com`
func (o GetFastConnectProviderServiceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFastConnectProviderServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Who is responsible for managing the private peering BGP information.
func (o GetFastConnectProviderServiceResultOutput) PrivatePeeringBgpManagement() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) string { return v.PrivatePeeringBgpManagement }).(pulumi.StringOutput)
}

// The name of the provider.
func (o GetFastConnectProviderServiceResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o GetFastConnectProviderServiceResultOutput) ProviderServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) string { return v.ProviderServiceId }).(pulumi.StringOutput)
}

// Who is responsible for managing the provider service key.
func (o GetFastConnectProviderServiceResultOutput) ProviderServiceKeyManagement() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) string { return v.ProviderServiceKeyManagement }).(pulumi.StringOutput)
}

// The name of the service offered by the provider.
func (o GetFastConnectProviderServiceResultOutput) ProviderServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) string { return v.ProviderServiceName }).(pulumi.StringOutput)
}

// Who is responsible for managing the public peering BGP information.
func (o GetFastConnectProviderServiceResultOutput) PublicPeeringBgpManagement() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) string { return v.PublicPeeringBgpManagement }).(pulumi.StringOutput)
}

// Total number of cross-connect or cross-connect groups required for the virtual circuit.
func (o GetFastConnectProviderServiceResultOutput) RequiredTotalCrossConnects() pulumi.IntOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) int { return v.RequiredTotalCrossConnects }).(pulumi.IntOutput)
}

// An array of virtual circuit types supported by this service.
func (o GetFastConnectProviderServiceResultOutput) SupportedVirtualCircuitTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) []string { return v.SupportedVirtualCircuitTypes }).(pulumi.StringArrayOutput)
}

// Provider service type.
func (o GetFastConnectProviderServiceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFastConnectProviderServiceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFastConnectProviderServiceResultOutput{})
}
