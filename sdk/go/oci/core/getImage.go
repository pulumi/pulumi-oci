// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Image resource in Oracle Cloud Infrastructure Core service.
//
// Gets the specified image.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetImage(ctx, &core.GetImageArgs{
//				ImageId: testImageOciCoreImage.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupImage(ctx *pulumi.Context, args *LookupImageArgs, opts ...pulumi.InvokeOption) (*LookupImageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupImageResult
	err := ctx.Invoke("oci:Core/getImage:getImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImage.
type LookupImageArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image.
	ImageId string `pulumi:"imageId"`
}

// A collection of values returned by getImage.
type LookupImageResult struct {
	// Oracle Cloud Agent features supported on the image.
	AgentFeatures []GetImageAgentFeature `pulumi:"agentFeatures"`
	// The OCID of the image originally used to launch the instance.
	BaseImageId string `pulumi:"baseImageId"`
	// The size of the internal storage for this image that is subject to billing (1 GB = 1,073,741,824 bytes).  Example: `100`
	BillableSizeInGbs string `pulumi:"billableSizeInGbs"`
	// The OCID of the compartment containing the instance you want to use as the basis for the image.
	CompartmentId string `pulumi:"compartmentId"`
	// Whether instances launched with this image can be used to create new images. For example, you cannot create an image of an Oracle Database instance.  Example: `true`
	CreateImageAllowed bool `pulumi:"createImageAllowed"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly name for the image. It does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the image.
	Id                 string                      `pulumi:"id"`
	ImageId            string                      `pulumi:"imageId"`
	ImageSourceDetails []GetImageImageSourceDetail `pulumi:"imageSourceDetails"`
	InstanceId         string                      `pulumi:"instanceId"`
	// Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
	// * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for platform images.
	// * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
	// * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using VirtIO drivers.
	// * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
	LaunchMode string `pulumi:"launchMode"`
	// Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
	LaunchOptions []GetImageLaunchOption `pulumi:"launchOptions"`
	// The listing type of the image. The default value is "NONE".
	ListingType string `pulumi:"listingType"`
	// The image's operating system.  Example: `Oracle Linux`
	OperatingSystem string `pulumi:"operatingSystem"`
	// The image's operating system version.  Example: `7.2`
	OperatingSystemVersion string `pulumi:"operatingSystemVersion"`
	// The boot volume size for an instance launched from this image (1 MB = 1,048,576 bytes). Note this is not the same as the size of the image when it was exported or the actual size of the image.  Example: `47694`
	SizeInMbs string `pulumi:"sizeInMbs"`
	// The current state of the image.
	State string `pulumi:"state"`
	// The date and time the image was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
}

func LookupImageOutput(ctx *pulumi.Context, args LookupImageOutputArgs, opts ...pulumi.InvokeOption) LookupImageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupImageResultOutput, error) {
			args := v.(LookupImageArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupImageResult
			secret, err := ctx.InvokePackageRaw("oci:Core/getImage:getImage", args, &rv, "", opts...)
			if err != nil {
				return LookupImageResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupImageResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupImageResultOutput), nil
			}
			return output, nil
		}).(LookupImageResultOutput)
}

// A collection of arguments for invoking getImage.
type LookupImageOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
}

func (LookupImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageArgs)(nil)).Elem()
}

// A collection of values returned by getImage.
type LookupImageResultOutput struct{ *pulumi.OutputState }

func (LookupImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageResult)(nil)).Elem()
}

func (o LookupImageResultOutput) ToLookupImageResultOutput() LookupImageResultOutput {
	return o
}

func (o LookupImageResultOutput) ToLookupImageResultOutputWithContext(ctx context.Context) LookupImageResultOutput {
	return o
}

// Oracle Cloud Agent features supported on the image.
func (o LookupImageResultOutput) AgentFeatures() GetImageAgentFeatureArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []GetImageAgentFeature { return v.AgentFeatures }).(GetImageAgentFeatureArrayOutput)
}

// The OCID of the image originally used to launch the instance.
func (o LookupImageResultOutput) BaseImageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.BaseImageId }).(pulumi.StringOutput)
}

// The size of the internal storage for this image that is subject to billing (1 GB = 1,073,741,824 bytes).  Example: `100`
func (o LookupImageResultOutput) BillableSizeInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.BillableSizeInGbs }).(pulumi.StringOutput)
}

// The OCID of the compartment containing the instance you want to use as the basis for the image.
func (o LookupImageResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Whether instances launched with this image can be used to create new images. For example, you cannot create an image of an Oracle Database instance.  Example: `true`
func (o LookupImageResultOutput) CreateImageAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupImageResult) bool { return v.CreateImageAllowed }).(pulumi.BoolOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupImageResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupImageResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly name for the image. It does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupImageResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupImageResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupImageResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the image.
func (o LookupImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) ImageSourceDetails() GetImageImageSourceDetailArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []GetImageImageSourceDetail { return v.ImageSourceDetails }).(GetImageImageSourceDetailArrayOutput)
}

func (o LookupImageResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
// * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for platform images.
// * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
// * `PARAVIRTUALIZED` - VM instances launch with paravirtualized devices using VirtIO drivers.
// * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
func (o LookupImageResultOutput) LaunchMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.LaunchMode }).(pulumi.StringOutput)
}

// Options for tuning the compatibility and performance of VM shapes. The values that you specify override any default values.
func (o LookupImageResultOutput) LaunchOptions() GetImageLaunchOptionArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []GetImageLaunchOption { return v.LaunchOptions }).(GetImageLaunchOptionArrayOutput)
}

// The listing type of the image. The default value is "NONE".
func (o LookupImageResultOutput) ListingType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ListingType }).(pulumi.StringOutput)
}

// The image's operating system.  Example: `Oracle Linux`
func (o LookupImageResultOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

// The image's operating system version.  Example: `7.2`
func (o LookupImageResultOutput) OperatingSystemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.OperatingSystemVersion }).(pulumi.StringOutput)
}

// The boot volume size for an instance launched from this image (1 MB = 1,048,576 bytes). Note this is not the same as the size of the image when it was exported or the actual size of the image.  Example: `47694`
func (o LookupImageResultOutput) SizeInMbs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.SizeInMbs }).(pulumi.StringOutput)
}

// The current state of the image.
func (o LookupImageResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the image was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupImageResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageResultOutput{})
}
