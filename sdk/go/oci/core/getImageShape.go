// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Image Shape resource in Oracle Cloud Infrastructure Core service.
//
// Retrieves an image shape compatibility entry.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.GetImageShape(ctx, &core.GetImageShapeArgs{
//				ImageId:   testImage.Id,
//				ShapeName: testShape.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetImageShape(ctx *pulumi.Context, args *GetImageShapeArgs, opts ...pulumi.InvokeOption) (*GetImageShapeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetImageShapeResult
	err := ctx.Invoke("oci:Core/getImageShape:getImageShape", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImageShape.
type GetImageShapeArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image.
	ImageId string `pulumi:"imageId"`
	// Shape name.
	ShapeName string `pulumi:"shapeName"`
}

// A collection of values returned by getImageShape.
type GetImageShapeResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ImageId string `pulumi:"imageId"`
	// For a flexible image and shape, the amount of memory supported for instances that use this image.
	MemoryConstraints []GetImageShapeMemoryConstraint `pulumi:"memoryConstraints"`
	// OCPU options for an image and shape.
	OcpuConstraints []GetImageShapeOcpuConstraint `pulumi:"ocpuConstraints"`
	// The shape name.
	Shape     string `pulumi:"shape"`
	ShapeName string `pulumi:"shapeName"`
}

func GetImageShapeOutput(ctx *pulumi.Context, args GetImageShapeOutputArgs, opts ...pulumi.InvokeOption) GetImageShapeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetImageShapeResultOutput, error) {
			args := v.(GetImageShapeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getImageShape:getImageShape", args, GetImageShapeResultOutput{}, options).(GetImageShapeResultOutput), nil
		}).(GetImageShapeResultOutput)
}

// A collection of arguments for invoking getImageShape.
type GetImageShapeOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// Shape name.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
}

func (GetImageShapeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageShapeArgs)(nil)).Elem()
}

// A collection of values returned by getImageShape.
type GetImageShapeResultOutput struct{ *pulumi.OutputState }

func (GetImageShapeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageShapeResult)(nil)).Elem()
}

func (o GetImageShapeResultOutput) ToGetImageShapeResultOutput() GetImageShapeResultOutput {
	return o
}

func (o GetImageShapeResultOutput) ToGetImageShapeResultOutputWithContext(ctx context.Context) GetImageShapeResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetImageShapeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageShapeResult) string { return v.Id }).(pulumi.StringOutput)
}

// The image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetImageShapeResultOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageShapeResult) string { return v.ImageId }).(pulumi.StringOutput)
}

// For a flexible image and shape, the amount of memory supported for instances that use this image.
func (o GetImageShapeResultOutput) MemoryConstraints() GetImageShapeMemoryConstraintArrayOutput {
	return o.ApplyT(func(v GetImageShapeResult) []GetImageShapeMemoryConstraint { return v.MemoryConstraints }).(GetImageShapeMemoryConstraintArrayOutput)
}

// OCPU options for an image and shape.
func (o GetImageShapeResultOutput) OcpuConstraints() GetImageShapeOcpuConstraintArrayOutput {
	return o.ApplyT(func(v GetImageShapeResult) []GetImageShapeOcpuConstraint { return v.OcpuConstraints }).(GetImageShapeOcpuConstraintArrayOutput)
}

// The shape name.
func (o GetImageShapeResultOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageShapeResult) string { return v.Shape }).(pulumi.StringOutput)
}

func (o GetImageShapeResultOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageShapeResult) string { return v.ShapeName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImageShapeResultOutput{})
}
