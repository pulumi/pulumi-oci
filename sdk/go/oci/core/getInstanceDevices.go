// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Instance Devices in Oracle Cloud Infrastructure Core service.
//
// Gets a list of all the devices for given instance. You can optionally filter results by device availability.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetInstanceDevices(ctx, &core.GetInstanceDevicesArgs{
//				InstanceId:  testInstance.Id,
//				IsAvailable: pulumi.BoolRef(instanceDeviceIsAvailable),
//				Name:        pulumi.StringRef(instanceDeviceName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetInstanceDevices(ctx *pulumi.Context, args *GetInstanceDevicesArgs, opts ...pulumi.InvokeOption) (*GetInstanceDevicesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstanceDevicesResult
	err := ctx.Invoke("oci:Core/getInstanceDevices:getInstanceDevices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceDevices.
type GetInstanceDevicesArgs struct {
	Filters []GetInstanceDevicesFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance.
	InstanceId string `pulumi:"instanceId"`
	// A filter to return only available devices or only used devices.
	IsAvailable *bool `pulumi:"isAvailable"`
	// A filter to return only devices that match the given name exactly.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getInstanceDevices.
type GetInstanceDevicesResult struct {
	// The list of devices.
	Devices []GetInstanceDevicesDevice `pulumi:"devices"`
	Filters []GetInstanceDevicesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// The flag denoting whether device is available.
	IsAvailable *bool `pulumi:"isAvailable"`
	// The device name.
	Name *string `pulumi:"name"`
}

func GetInstanceDevicesOutput(ctx *pulumi.Context, args GetInstanceDevicesOutputArgs, opts ...pulumi.InvokeOption) GetInstanceDevicesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceDevicesResult, error) {
			args := v.(GetInstanceDevicesArgs)
			r, err := GetInstanceDevices(ctx, &args, opts...)
			var s GetInstanceDevicesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceDevicesResultOutput)
}

// A collection of arguments for invoking getInstanceDevices.
type GetInstanceDevicesOutputArgs struct {
	Filters GetInstanceDevicesFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// A filter to return only available devices or only used devices.
	IsAvailable pulumi.BoolPtrInput `pulumi:"isAvailable"`
	// A filter to return only devices that match the given name exactly.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetInstanceDevicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDevicesArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceDevices.
type GetInstanceDevicesResultOutput struct{ *pulumi.OutputState }

func (GetInstanceDevicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceDevicesResult)(nil)).Elem()
}

func (o GetInstanceDevicesResultOutput) ToGetInstanceDevicesResultOutput() GetInstanceDevicesResultOutput {
	return o
}

func (o GetInstanceDevicesResultOutput) ToGetInstanceDevicesResultOutputWithContext(ctx context.Context) GetInstanceDevicesResultOutput {
	return o
}

// The list of devices.
func (o GetInstanceDevicesResultOutput) Devices() GetInstanceDevicesDeviceArrayOutput {
	return o.ApplyT(func(v GetInstanceDevicesResult) []GetInstanceDevicesDevice { return v.Devices }).(GetInstanceDevicesDeviceArrayOutput)
}

func (o GetInstanceDevicesResultOutput) Filters() GetInstanceDevicesFilterArrayOutput {
	return o.ApplyT(func(v GetInstanceDevicesResult) []GetInstanceDevicesFilter { return v.Filters }).(GetInstanceDevicesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceDevicesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDevicesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceDevicesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceDevicesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The flag denoting whether device is available.
func (o GetInstanceDevicesResultOutput) IsAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetInstanceDevicesResult) *bool { return v.IsAvailable }).(pulumi.BoolPtrOutput)
}

// The device name.
func (o GetInstanceDevicesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceDevicesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceDevicesResultOutput{})
}
