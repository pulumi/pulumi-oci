// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Instance Maintenance Event resource in Oracle Cloud Infrastructure Core service.
//
// Gets the maintenance event for the given instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.GetInstanceMaintenanceEvent(ctx, &core.GetInstanceMaintenanceEventArgs{
//				InstanceMaintenanceEventId: testInstanceMaintenanceEventOciCoreInstanceMaintenanceEvent.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstanceMaintenanceEvent(ctx *pulumi.Context, args *LookupInstanceMaintenanceEventArgs, opts ...pulumi.InvokeOption) (*LookupInstanceMaintenanceEventResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceMaintenanceEventResult
	err := ctx.Invoke("oci:Core/getInstanceMaintenanceEvent:getInstanceMaintenanceEvent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceMaintenanceEvent.
type LookupInstanceMaintenanceEventArgs struct {
	// The OCID of the instance maintenance event.
	InstanceMaintenanceEventId string `pulumi:"instanceMaintenanceEventId"`
}

// A collection of values returned by getInstanceMaintenanceEvent.
type LookupInstanceMaintenanceEventResult struct {
	// Additional details of the maintenance in the form of json.
	AdditionalDetails           map[string]string `pulumi:"additionalDetails"`
	AlternativeResolutionAction string            `pulumi:"alternativeResolutionAction"`
	// These are alternative actions to the requested instanceAction that can be taken to resolve the Maintenance.
	AlternativeResolutionActions []string `pulumi:"alternativeResolutionActions"`
	// For Instances that have local storage, this field is set to true when local storage will be deleted as a result of the Maintenance.
	CanDeleteLocalStorage bool `pulumi:"canDeleteLocalStorage"`
	// Indicates if this MaintenanceEvent is capable of being rescheduled up to the timeHardDueDate.
	CanReschedule bool `pulumi:"canReschedule"`
	// The OCID of the compartment that contains the instance.
	CompartmentId string `pulumi:"compartmentId"`
	// A unique identifier that will group Instances that have a relationship with one another and must be scheduled together for the Maintenance to proceed. Any Instances that have a relationship with one another from a Maintenance perspective will have a matching correlationToken.
	CorrelationToken string `pulumi:"correlationToken"`
	// The creator of the maintenance event.
	CreatedBy string `pulumi:"createdBy"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// It is the descriptive information about the maintenance taking place on the customer instance.
	Description string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// This is the estimated duration of the Maintenance, once the Maintenance has entered the STARTED state.
	EstimatedDuration string `pulumi:"estimatedDuration"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance event.
	Id string `pulumi:"id"`
	// This is the action that will be performed on the Instance by Oracle Cloud Infrastructure when the Maintenance begins.
	InstanceAction string `pulumi:"instanceAction"`
	// The OCID of the instance.
	InstanceId                 string `pulumi:"instanceId"`
	InstanceMaintenanceEventId string `pulumi:"instanceMaintenanceEventId"`
	// This indicates the priority and allowed actions for this Maintenance. Higher priority forms of Maintenance have tighter restrictions and may not be rescheduled, while lower priority/severity Maintenance can be rescheduled, deferred, or even cancelled. Please see the [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
	MaintenanceCategory string `pulumi:"maintenanceCategory"`
	// This is the reason that Maintenance is being performed. See [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
	MaintenanceReason string `pulumi:"maintenanceReason"`
	// The duration of the time window Maintenance is scheduled to begin within.
	StartWindowDuration string `pulumi:"startWindowDuration"`
	// The current state of the maintenance event.
	State string `pulumi:"state"`
	// The date and time the maintenance event was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The time at which the Maintenance actually finished.
	TimeFinished string `pulumi:"timeFinished"`
	// It is the scheduled hard due date and time of the maintenance event. The maintenance event will happen at this time and the due date will not be extended.
	TimeHardDueDate string `pulumi:"timeHardDueDate"`
	// The time at which the Maintenance actually started.
	TimeStarted string `pulumi:"timeStarted"`
	// The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
	TimeWindowStart string `pulumi:"timeWindowStart"`
}

func LookupInstanceMaintenanceEventOutput(ctx *pulumi.Context, args LookupInstanceMaintenanceEventOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceMaintenanceEventResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInstanceMaintenanceEventResultOutput, error) {
			args := v.(LookupInstanceMaintenanceEventArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getInstanceMaintenanceEvent:getInstanceMaintenanceEvent", args, LookupInstanceMaintenanceEventResultOutput{}, options).(LookupInstanceMaintenanceEventResultOutput), nil
		}).(LookupInstanceMaintenanceEventResultOutput)
}

// A collection of arguments for invoking getInstanceMaintenanceEvent.
type LookupInstanceMaintenanceEventOutputArgs struct {
	// The OCID of the instance maintenance event.
	InstanceMaintenanceEventId pulumi.StringInput `pulumi:"instanceMaintenanceEventId"`
}

func (LookupInstanceMaintenanceEventOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceMaintenanceEventArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceMaintenanceEvent.
type LookupInstanceMaintenanceEventResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceMaintenanceEventResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceMaintenanceEventResult)(nil)).Elem()
}

func (o LookupInstanceMaintenanceEventResultOutput) ToLookupInstanceMaintenanceEventResultOutput() LookupInstanceMaintenanceEventResultOutput {
	return o
}

func (o LookupInstanceMaintenanceEventResultOutput) ToLookupInstanceMaintenanceEventResultOutputWithContext(ctx context.Context) LookupInstanceMaintenanceEventResultOutput {
	return o
}

// Additional details of the maintenance in the form of json.
func (o LookupInstanceMaintenanceEventResultOutput) AdditionalDetails() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) map[string]string { return v.AdditionalDetails }).(pulumi.StringMapOutput)
}

func (o LookupInstanceMaintenanceEventResultOutput) AlternativeResolutionAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.AlternativeResolutionAction }).(pulumi.StringOutput)
}

// These are alternative actions to the requested instanceAction that can be taken to resolve the Maintenance.
func (o LookupInstanceMaintenanceEventResultOutput) AlternativeResolutionActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) []string { return v.AlternativeResolutionActions }).(pulumi.StringArrayOutput)
}

// For Instances that have local storage, this field is set to true when local storage will be deleted as a result of the Maintenance.
func (o LookupInstanceMaintenanceEventResultOutput) CanDeleteLocalStorage() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) bool { return v.CanDeleteLocalStorage }).(pulumi.BoolOutput)
}

// Indicates if this MaintenanceEvent is capable of being rescheduled up to the timeHardDueDate.
func (o LookupInstanceMaintenanceEventResultOutput) CanReschedule() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) bool { return v.CanReschedule }).(pulumi.BoolOutput)
}

// The OCID of the compartment that contains the instance.
func (o LookupInstanceMaintenanceEventResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A unique identifier that will group Instances that have a relationship with one another and must be scheduled together for the Maintenance to proceed. Any Instances that have a relationship with one another from a Maintenance perspective will have a matching correlationToken.
func (o LookupInstanceMaintenanceEventResultOutput) CorrelationToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.CorrelationToken }).(pulumi.StringOutput)
}

// The creator of the maintenance event.
func (o LookupInstanceMaintenanceEventResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupInstanceMaintenanceEventResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// It is the descriptive information about the maintenance taking place on the customer instance.
func (o LookupInstanceMaintenanceEventResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupInstanceMaintenanceEventResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// This is the estimated duration of the Maintenance, once the Maintenance has entered the STARTED state.
func (o LookupInstanceMaintenanceEventResultOutput) EstimatedDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.EstimatedDuration }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupInstanceMaintenanceEventResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the maintenance event.
func (o LookupInstanceMaintenanceEventResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.Id }).(pulumi.StringOutput)
}

// This is the action that will be performed on the Instance by Oracle Cloud Infrastructure when the Maintenance begins.
func (o LookupInstanceMaintenanceEventResultOutput) InstanceAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.InstanceAction }).(pulumi.StringOutput)
}

// The OCID of the instance.
func (o LookupInstanceMaintenanceEventResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o LookupInstanceMaintenanceEventResultOutput) InstanceMaintenanceEventId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.InstanceMaintenanceEventId }).(pulumi.StringOutput)
}

// This indicates the priority and allowed actions for this Maintenance. Higher priority forms of Maintenance have tighter restrictions and may not be rescheduled, while lower priority/severity Maintenance can be rescheduled, deferred, or even cancelled. Please see the [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
func (o LookupInstanceMaintenanceEventResultOutput) MaintenanceCategory() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.MaintenanceCategory }).(pulumi.StringOutput)
}

// This is the reason that Maintenance is being performed. See [Instance Maintenance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/placeholder.htm) documentation for details.
func (o LookupInstanceMaintenanceEventResultOutput) MaintenanceReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.MaintenanceReason }).(pulumi.StringOutput)
}

// The duration of the time window Maintenance is scheduled to begin within.
func (o LookupInstanceMaintenanceEventResultOutput) StartWindowDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.StartWindowDuration }).(pulumi.StringOutput)
}

// The current state of the maintenance event.
func (o LookupInstanceMaintenanceEventResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the maintenance event was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o LookupInstanceMaintenanceEventResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time at which the Maintenance actually finished.
func (o LookupInstanceMaintenanceEventResultOutput) TimeFinished() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.TimeFinished }).(pulumi.StringOutput)
}

// It is the scheduled hard due date and time of the maintenance event. The maintenance event will happen at this time and the due date will not be extended.
func (o LookupInstanceMaintenanceEventResultOutput) TimeHardDueDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.TimeHardDueDate }).(pulumi.StringOutput)
}

// The time at which the Maintenance actually started.
func (o LookupInstanceMaintenanceEventResultOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.TimeStarted }).(pulumi.StringOutput)
}

// The beginning of the time window when Maintenance is scheduled to begin. The Maintenance will not begin before this time.
func (o LookupInstanceMaintenanceEventResultOutput) TimeWindowStart() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceMaintenanceEventResult) string { return v.TimeWindowStart }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceMaintenanceEventResultOutput{})
}
