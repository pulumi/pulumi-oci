// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Ip Inventory Subnet resource in Oracle Cloud Infrastructure Core service.
//
// Gets the IP Inventory data of the specified subnet. Specify the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetIpInventorySubnet(ctx, &core.GetIpInventorySubnetArgs{
//				SubnetId: testSubnet.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetIpInventorySubnet(ctx *pulumi.Context, args *GetIpInventorySubnetArgs, opts ...pulumi.InvokeOption) (*GetIpInventorySubnetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpInventorySubnetResult
	err := ctx.Invoke("oci:Core/getIpInventorySubnet:getIpInventorySubnet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpInventorySubnet.
type GetIpInventorySubnetArgs struct {
	// Specify the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet.
	SubnetId string `pulumi:"subnetId"`
}

// A collection of values returned by getIpInventorySubnet.
type GetIpInventorySubnetResult struct {
	// The compartment of the subnet.
	CompartmentId string `pulumi:"compartmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Specifies the count for the number of results for the response.
	IpInventorySubnetCount int `pulumi:"ipInventorySubnetCount"`
	// Lists `SubnetResourceSummary` objects.
	IpInventorySubnetResourceSummaries []GetIpInventorySubnetIpInventorySubnetResourceSummary `pulumi:"ipInventorySubnetResourceSummaries"`
	// The Timestamp of the latest update from the database in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	LastUpdatedTimestamp string `pulumi:"lastUpdatedTimestamp"`
	// Indicates the status of the data.
	Message  string `pulumi:"message"`
	SubnetId string `pulumi:"subnetId"`
}

func GetIpInventorySubnetOutput(ctx *pulumi.Context, args GetIpInventorySubnetOutputArgs, opts ...pulumi.InvokeOption) GetIpInventorySubnetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIpInventorySubnetResultOutput, error) {
			args := v.(GetIpInventorySubnetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getIpInventorySubnet:getIpInventorySubnet", args, GetIpInventorySubnetResultOutput{}, options).(GetIpInventorySubnetResultOutput), nil
		}).(GetIpInventorySubnetResultOutput)
}

// A collection of arguments for invoking getIpInventorySubnet.
type GetIpInventorySubnetOutputArgs struct {
	// Specify the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetIpInventorySubnetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpInventorySubnetArgs)(nil)).Elem()
}

// A collection of values returned by getIpInventorySubnet.
type GetIpInventorySubnetResultOutput struct{ *pulumi.OutputState }

func (GetIpInventorySubnetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpInventorySubnetResult)(nil)).Elem()
}

func (o GetIpInventorySubnetResultOutput) ToGetIpInventorySubnetResultOutput() GetIpInventorySubnetResultOutput {
	return o
}

func (o GetIpInventorySubnetResultOutput) ToGetIpInventorySubnetResultOutputWithContext(ctx context.Context) GetIpInventorySubnetResultOutput {
	return o
}

// The compartment of the subnet.
func (o GetIpInventorySubnetResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInventorySubnetResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpInventorySubnetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInventorySubnetResult) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the count for the number of results for the response.
func (o GetIpInventorySubnetResultOutput) IpInventorySubnetCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpInventorySubnetResult) int { return v.IpInventorySubnetCount }).(pulumi.IntOutput)
}

// Lists `SubnetResourceSummary` objects.
func (o GetIpInventorySubnetResultOutput) IpInventorySubnetResourceSummaries() GetIpInventorySubnetIpInventorySubnetResourceSummaryArrayOutput {
	return o.ApplyT(func(v GetIpInventorySubnetResult) []GetIpInventorySubnetIpInventorySubnetResourceSummary {
		return v.IpInventorySubnetResourceSummaries
	}).(GetIpInventorySubnetIpInventorySubnetResourceSummaryArrayOutput)
}

// The Timestamp of the latest update from the database in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o GetIpInventorySubnetResultOutput) LastUpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInventorySubnetResult) string { return v.LastUpdatedTimestamp }).(pulumi.StringOutput)
}

// Indicates the status of the data.
func (o GetIpInventorySubnetResultOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInventorySubnetResult) string { return v.Message }).(pulumi.StringOutput)
}

func (o GetIpInventorySubnetResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInventorySubnetResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpInventorySubnetResultOutput{})
}
