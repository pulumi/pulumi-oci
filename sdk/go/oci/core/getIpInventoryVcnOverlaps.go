// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Ip Inventory Vcn Overlaps in Oracle Cloud Infrastructure Core service.
//
// Gets the CIDR overlap information of the specified VCN in selected compartments. Specify the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.GetIpInventoryVcnOverlaps(ctx, &core.GetIpInventoryVcnOverlapsArgs{
//				CompartmentLists: ipInventoryVcnOverlapCompartmentList,
//				RegionLists:      ipInventoryVcnOverlapRegionList,
//				VcnId:            testVcn.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetIpInventoryVcnOverlaps(ctx *pulumi.Context, args *GetIpInventoryVcnOverlapsArgs, opts ...pulumi.InvokeOption) (*GetIpInventoryVcnOverlapsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpInventoryVcnOverlapsResult
	err := ctx.Invoke("oci:Core/getIpInventoryVcnOverlaps:getIpInventoryVcnOverlaps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpInventoryVcnOverlaps.
type GetIpInventoryVcnOverlapsArgs struct {
	// The list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartments.
	CompartmentLists []string                          `pulumi:"compartmentLists"`
	Filters          []GetIpInventoryVcnOverlapsFilter `pulumi:"filters"`
	// Lists the selected regions.
	RegionLists []string `pulumi:"regionLists"`
	// Specify the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
	VcnId string `pulumi:"vcnId"`
}

// A collection of values returned by getIpInventoryVcnOverlaps.
type GetIpInventoryVcnOverlapsResult struct {
	CompartmentLists []string                          `pulumi:"compartmentLists"`
	Filters          []GetIpInventoryVcnOverlapsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Lists `IpInventoryVcnOverlapSummary` object.
	IpInventoryVcnOverlapSummaries []GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummary `pulumi:"ipInventoryVcnOverlapSummaries"`
	// The timestamp of the latest update from the database in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	LastUpdatedTimestamp string `pulumi:"lastUpdatedTimestamp"`
	// Indicates the status of the data.
	Message string `pulumi:"message"`
	// The overlap count for the given VCN and compartments.
	OverlapCount int      `pulumi:"overlapCount"`
	RegionLists  []string `pulumi:"regionLists"`
	VcnId        string   `pulumi:"vcnId"`
}

func GetIpInventoryVcnOverlapsOutput(ctx *pulumi.Context, args GetIpInventoryVcnOverlapsOutputArgs, opts ...pulumi.InvokeOption) GetIpInventoryVcnOverlapsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIpInventoryVcnOverlapsResultOutput, error) {
			args := v.(GetIpInventoryVcnOverlapsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getIpInventoryVcnOverlaps:getIpInventoryVcnOverlaps", args, GetIpInventoryVcnOverlapsResultOutput{}, options).(GetIpInventoryVcnOverlapsResultOutput), nil
		}).(GetIpInventoryVcnOverlapsResultOutput)
}

// A collection of arguments for invoking getIpInventoryVcnOverlaps.
type GetIpInventoryVcnOverlapsOutputArgs struct {
	// The list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartments.
	CompartmentLists pulumi.StringArrayInput                   `pulumi:"compartmentLists"`
	Filters          GetIpInventoryVcnOverlapsFilterArrayInput `pulumi:"filters"`
	// Lists the selected regions.
	RegionLists pulumi.StringArrayInput `pulumi:"regionLists"`
	// Specify the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
	VcnId pulumi.StringInput `pulumi:"vcnId"`
}

func (GetIpInventoryVcnOverlapsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpInventoryVcnOverlapsArgs)(nil)).Elem()
}

// A collection of values returned by getIpInventoryVcnOverlaps.
type GetIpInventoryVcnOverlapsResultOutput struct{ *pulumi.OutputState }

func (GetIpInventoryVcnOverlapsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpInventoryVcnOverlapsResult)(nil)).Elem()
}

func (o GetIpInventoryVcnOverlapsResultOutput) ToGetIpInventoryVcnOverlapsResultOutput() GetIpInventoryVcnOverlapsResultOutput {
	return o
}

func (o GetIpInventoryVcnOverlapsResultOutput) ToGetIpInventoryVcnOverlapsResultOutputWithContext(ctx context.Context) GetIpInventoryVcnOverlapsResultOutput {
	return o
}

func (o GetIpInventoryVcnOverlapsResultOutput) CompartmentLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpInventoryVcnOverlapsResult) []string { return v.CompartmentLists }).(pulumi.StringArrayOutput)
}

func (o GetIpInventoryVcnOverlapsResultOutput) Filters() GetIpInventoryVcnOverlapsFilterArrayOutput {
	return o.ApplyT(func(v GetIpInventoryVcnOverlapsResult) []GetIpInventoryVcnOverlapsFilter { return v.Filters }).(GetIpInventoryVcnOverlapsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpInventoryVcnOverlapsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInventoryVcnOverlapsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Lists `IpInventoryVcnOverlapSummary` object.
func (o GetIpInventoryVcnOverlapsResultOutput) IpInventoryVcnOverlapSummaries() GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummaryArrayOutput {
	return o.ApplyT(func(v GetIpInventoryVcnOverlapsResult) []GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummary {
		return v.IpInventoryVcnOverlapSummaries
	}).(GetIpInventoryVcnOverlapsIpInventoryVcnOverlapSummaryArrayOutput)
}

// The timestamp of the latest update from the database in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o GetIpInventoryVcnOverlapsResultOutput) LastUpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInventoryVcnOverlapsResult) string { return v.LastUpdatedTimestamp }).(pulumi.StringOutput)
}

// Indicates the status of the data.
func (o GetIpInventoryVcnOverlapsResultOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInventoryVcnOverlapsResult) string { return v.Message }).(pulumi.StringOutput)
}

// The overlap count for the given VCN and compartments.
func (o GetIpInventoryVcnOverlapsResultOutput) OverlapCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpInventoryVcnOverlapsResult) int { return v.OverlapCount }).(pulumi.IntOutput)
}

func (o GetIpInventoryVcnOverlapsResultOutput) RegionLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpInventoryVcnOverlapsResult) []string { return v.RegionLists }).(pulumi.StringArrayOutput)
}

func (o GetIpInventoryVcnOverlapsResultOutput) VcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpInventoryVcnOverlapsResult) string { return v.VcnId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpInventoryVcnOverlapsResultOutput{})
}
