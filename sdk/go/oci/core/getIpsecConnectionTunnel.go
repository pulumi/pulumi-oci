// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Ip Sec Connection Tunnel resource in Oracle Cloud Infrastructure Core service.
//
// Gets the specified IPSec connection's specified tunnel basic information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetIpsecConnectionTunnel(ctx, &core.GetIpsecConnectionTunnelArgs{
//				IpsecId:  oci_core_ipsec.Test_ipsec.Id,
//				TunnelId: data.Oci_core_ipsec_connection_tunnels.Test_ip_sec_connection_tunnels.Ip_sec_connection_tunnels[0].Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetIpsecConnectionTunnel(ctx *pulumi.Context, args *GetIpsecConnectionTunnelArgs, opts ...pulumi.InvokeOption) (*GetIpsecConnectionTunnelResult, error) {
	var rv GetIpsecConnectionTunnelResult
	err := ctx.Invoke("oci:Core/getIpsecConnectionTunnel:getIpsecConnectionTunnel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpsecConnectionTunnel.
type GetIpsecConnectionTunnelArgs struct {
	// The OCID of the IPSec connection.
	IpsecId string `pulumi:"ipsecId"`
	// The OCID of the IPSec connection's tunnel.
	TunnelId string `pulumi:"tunnelId"`
}

// A collection of values returned by getIpsecConnectionTunnel.
type GetIpsecConnectionTunnelResult struct {
	// Information needed to establish a BGP Session on an interface.
	BgpSessionInfos []GetIpsecConnectionTunnelBgpSessionInfo `pulumi:"bgpSessionInfos"`
	// The OCID of the compartment containing the tunnel.
	CompartmentId string `pulumi:"compartmentId"`
	// The IP address of Cpe headend.  Example: `129.146.17.50`
	CpeIp string `pulumi:"cpeIp"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Configuration information used by the encryption domain policy.
	EncryptionDomainConfigs []GetIpsecConnectionTunnelEncryptionDomainConfig `pulumi:"encryptionDomainConfigs"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Internet Key Exchange protocol version.
	IkeVersion string `pulumi:"ikeVersion"`
	IpsecId    string `pulumi:"ipsecId"`
	// the routing strategy used for this tunnel, either static route or BGP dynamic routing
	Routing string `pulumi:"routing"`
	// The IPSec connection's tunnel's lifecycle state.
	State string `pulumi:"state"`
	// The tunnel's current state.
	Status string `pulumi:"status"`
	// The date and time the IPSec connection tunnel was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// When the status of the tunnel last changed, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
	TimeStatusUpdated string `pulumi:"timeStatusUpdated"`
	TunnelId          string `pulumi:"tunnelId"`
	// The IP address of Oracle's VPN headend.  Example: `129.146.17.50`
	VpnIp string `pulumi:"vpnIp"`
}

func GetIpsecConnectionTunnelOutput(ctx *pulumi.Context, args GetIpsecConnectionTunnelOutputArgs, opts ...pulumi.InvokeOption) GetIpsecConnectionTunnelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIpsecConnectionTunnelResult, error) {
			args := v.(GetIpsecConnectionTunnelArgs)
			r, err := GetIpsecConnectionTunnel(ctx, &args, opts...)
			var s GetIpsecConnectionTunnelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIpsecConnectionTunnelResultOutput)
}

// A collection of arguments for invoking getIpsecConnectionTunnel.
type GetIpsecConnectionTunnelOutputArgs struct {
	// The OCID of the IPSec connection.
	IpsecId pulumi.StringInput `pulumi:"ipsecId"`
	// The OCID of the IPSec connection's tunnel.
	TunnelId pulumi.StringInput `pulumi:"tunnelId"`
}

func (GetIpsecConnectionTunnelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsecConnectionTunnelArgs)(nil)).Elem()
}

// A collection of values returned by getIpsecConnectionTunnel.
type GetIpsecConnectionTunnelResultOutput struct{ *pulumi.OutputState }

func (GetIpsecConnectionTunnelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsecConnectionTunnelResult)(nil)).Elem()
}

func (o GetIpsecConnectionTunnelResultOutput) ToGetIpsecConnectionTunnelResultOutput() GetIpsecConnectionTunnelResultOutput {
	return o
}

func (o GetIpsecConnectionTunnelResultOutput) ToGetIpsecConnectionTunnelResultOutputWithContext(ctx context.Context) GetIpsecConnectionTunnelResultOutput {
	return o
}

// Information needed to establish a BGP Session on an interface.
func (o GetIpsecConnectionTunnelResultOutput) BgpSessionInfos() GetIpsecConnectionTunnelBgpSessionInfoArrayOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) []GetIpsecConnectionTunnelBgpSessionInfo {
		return v.BgpSessionInfos
	}).(GetIpsecConnectionTunnelBgpSessionInfoArrayOutput)
}

// The OCID of the compartment containing the tunnel.
func (o GetIpsecConnectionTunnelResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The IP address of Cpe headend.  Example: `129.146.17.50`
func (o GetIpsecConnectionTunnelResultOutput) CpeIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.CpeIp }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetIpsecConnectionTunnelResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Configuration information used by the encryption domain policy.
func (o GetIpsecConnectionTunnelResultOutput) EncryptionDomainConfigs() GetIpsecConnectionTunnelEncryptionDomainConfigArrayOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) []GetIpsecConnectionTunnelEncryptionDomainConfig {
		return v.EncryptionDomainConfigs
	}).(GetIpsecConnectionTunnelEncryptionDomainConfigArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpsecConnectionTunnelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.Id }).(pulumi.StringOutput)
}

// Internet Key Exchange protocol version.
func (o GetIpsecConnectionTunnelResultOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.IkeVersion }).(pulumi.StringOutput)
}

func (o GetIpsecConnectionTunnelResultOutput) IpsecId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.IpsecId }).(pulumi.StringOutput)
}

// the routing strategy used for this tunnel, either static route or BGP dynamic routing
func (o GetIpsecConnectionTunnelResultOutput) Routing() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.Routing }).(pulumi.StringOutput)
}

// The IPSec connection's tunnel's lifecycle state.
func (o GetIpsecConnectionTunnelResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.State }).(pulumi.StringOutput)
}

// The tunnel's current state.
func (o GetIpsecConnectionTunnelResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.Status }).(pulumi.StringOutput)
}

// The date and time the IPSec connection tunnel was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
func (o GetIpsecConnectionTunnelResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// When the status of the tunnel last changed, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
func (o GetIpsecConnectionTunnelResultOutput) TimeStatusUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.TimeStatusUpdated }).(pulumi.StringOutput)
}

func (o GetIpsecConnectionTunnelResultOutput) TunnelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.TunnelId }).(pulumi.StringOutput)
}

// The IP address of Oracle's VPN headend.  Example: `129.146.17.50`
func (o GetIpsecConnectionTunnelResultOutput) VpnIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelResult) string { return v.VpnIp }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpsecConnectionTunnelResultOutput{})
}
