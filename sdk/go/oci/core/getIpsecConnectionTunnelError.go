// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Ipsec Connection Tunnel Error resource in Oracle Cloud Infrastructure Core service.
//
// Gets the identified error for the specified IPSec tunnel ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.GetIpsecConnectionTunnelError(ctx, &core.GetIpsecConnectionTunnelErrorArgs{
//				IpsecId:  testIpsec.Id,
//				TunnelId: testTunnel.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetIpsecConnectionTunnelError(ctx *pulumi.Context, args *GetIpsecConnectionTunnelErrorArgs, opts ...pulumi.InvokeOption) (*GetIpsecConnectionTunnelErrorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpsecConnectionTunnelErrorResult
	err := ctx.Invoke("oci:Core/getIpsecConnectionTunnelError:getIpsecConnectionTunnelError", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpsecConnectionTunnelError.
type GetIpsecConnectionTunnelErrorArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
	IpsecId string `pulumi:"ipsecId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
	TunnelId string `pulumi:"tunnelId"`
}

// A collection of values returned by getIpsecConnectionTunnelError.
type GetIpsecConnectionTunnelErrorResult struct {
	// Unique code describes the error type.
	ErrorCode string `pulumi:"errorCode"`
	// A detailed description of the error.
	ErrorDescription string `pulumi:"errorDescription"`
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	IpsecId string `pulumi:"ipsecId"`
	// Link to more Oracle resources or relevant documentation.
	OciResourcesLink string `pulumi:"ociResourcesLink"`
	// Resolution for the error.
	Solution string `pulumi:"solution"`
	// Timestamp when the error occurred.
	Timestamp string `pulumi:"timestamp"`
	TunnelId  string `pulumi:"tunnelId"`
}

func GetIpsecConnectionTunnelErrorOutput(ctx *pulumi.Context, args GetIpsecConnectionTunnelErrorOutputArgs, opts ...pulumi.InvokeOption) GetIpsecConnectionTunnelErrorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIpsecConnectionTunnelErrorResultOutput, error) {
			args := v.(GetIpsecConnectionTunnelErrorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getIpsecConnectionTunnelError:getIpsecConnectionTunnelError", args, GetIpsecConnectionTunnelErrorResultOutput{}, options).(GetIpsecConnectionTunnelErrorResultOutput), nil
		}).(GetIpsecConnectionTunnelErrorResultOutput)
}

// A collection of arguments for invoking getIpsecConnectionTunnelError.
type GetIpsecConnectionTunnelErrorOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
	IpsecId pulumi.StringInput `pulumi:"ipsecId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
	TunnelId pulumi.StringInput `pulumi:"tunnelId"`
}

func (GetIpsecConnectionTunnelErrorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsecConnectionTunnelErrorArgs)(nil)).Elem()
}

// A collection of values returned by getIpsecConnectionTunnelError.
type GetIpsecConnectionTunnelErrorResultOutput struct{ *pulumi.OutputState }

func (GetIpsecConnectionTunnelErrorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsecConnectionTunnelErrorResult)(nil)).Elem()
}

func (o GetIpsecConnectionTunnelErrorResultOutput) ToGetIpsecConnectionTunnelErrorResultOutput() GetIpsecConnectionTunnelErrorResultOutput {
	return o
}

func (o GetIpsecConnectionTunnelErrorResultOutput) ToGetIpsecConnectionTunnelErrorResultOutputWithContext(ctx context.Context) GetIpsecConnectionTunnelErrorResultOutput {
	return o
}

// Unique code describes the error type.
func (o GetIpsecConnectionTunnelErrorResultOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelErrorResult) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// A detailed description of the error.
func (o GetIpsecConnectionTunnelErrorResultOutput) ErrorDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelErrorResult) string { return v.ErrorDescription }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpsecConnectionTunnelErrorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelErrorResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIpsecConnectionTunnelErrorResultOutput) IpsecId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelErrorResult) string { return v.IpsecId }).(pulumi.StringOutput)
}

// Link to more Oracle resources or relevant documentation.
func (o GetIpsecConnectionTunnelErrorResultOutput) OciResourcesLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelErrorResult) string { return v.OciResourcesLink }).(pulumi.StringOutput)
}

// Resolution for the error.
func (o GetIpsecConnectionTunnelErrorResultOutput) Solution() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelErrorResult) string { return v.Solution }).(pulumi.StringOutput)
}

// Timestamp when the error occurred.
func (o GetIpsecConnectionTunnelErrorResultOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelErrorResult) string { return v.Timestamp }).(pulumi.StringOutput)
}

func (o GetIpsecConnectionTunnelErrorResultOutput) TunnelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsecConnectionTunnelErrorResult) string { return v.TunnelId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpsecConnectionTunnelErrorResultOutput{})
}
