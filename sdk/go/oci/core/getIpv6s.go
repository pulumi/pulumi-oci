// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Ipv6s in Oracle Cloud Infrastructure Core service.
//
// Lists the [IPv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Ipv6/) objects based
// on one of these filters:
//
//   - Subnet OCID.
//   - VNIC OCID.
//   - Both IPv6 address and subnet OCID: This lets you get an `Ipv6` object based on its private
//     IPv6 address (for example, 2001:0db8:0123:1111:abcd:ef01:2345:6789) and not its OCID. For comparison,
//     [GetIpv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Ipv6/GetIpv6) requires the OCID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetIpv6s(ctx, &core.GetIpv6sArgs{
//				IpAddress: pulumi.StringRef(_var.Ipv6_ip_address),
//				SubnetId:  pulumi.StringRef(oci_core_subnet.Test_subnet.Id),
//				VnicId:    pulumi.StringRef(oci_core_vnic_attachment.Test_vnic_attachment.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetIpv6s(ctx *pulumi.Context, args *GetIpv6sArgs, opts ...pulumi.InvokeOption) (*GetIpv6sResult, error) {
	var rv GetIpv6sResult
	err := ctx.Invoke("oci:Core/getIpv6s:getIpv6s", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpv6s.
type GetIpv6sArgs struct {
	Filters []GetIpv6sFilter `pulumi:"filters"`
	// An IP address. This could be either IPv4 or IPv6, depending on the resource. Example: `10.0.3.3`
	IpAddress *string `pulumi:"ipAddress"`
	// The OCID of the subnet.
	SubnetId *string `pulumi:"subnetId"`
	// The OCID of the VNIC.
	VnicId *string `pulumi:"vnicId"`
}

// A collection of values returned by getIpv6s.
type GetIpv6sResult struct {
	Filters []GetIpv6sFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The IPv6 address of the `IPv6` object. The address is within the IPv6 CIDR block of the VNIC's subnet (see the `ipv6CidrBlock` attribute for the [Subnet](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Subnet/) object.  Example: `2001:0db8:0123:1111:abcd:ef01:2345:6789`
	IpAddress *string `pulumi:"ipAddress"`
	// The list of ipv6s.
	Ipv6s []GetIpv6sIpv6 `pulumi:"ipv6s"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the VNIC is in.
	SubnetId *string `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC the IPv6 is assigned to. The VNIC and IPv6 must be in the same subnet.
	VnicId *string `pulumi:"vnicId"`
}

func GetIpv6sOutput(ctx *pulumi.Context, args GetIpv6sOutputArgs, opts ...pulumi.InvokeOption) GetIpv6sResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIpv6sResult, error) {
			args := v.(GetIpv6sArgs)
			r, err := GetIpv6s(ctx, &args, opts...)
			var s GetIpv6sResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIpv6sResultOutput)
}

// A collection of arguments for invoking getIpv6s.
type GetIpv6sOutputArgs struct {
	Filters GetIpv6sFilterArrayInput `pulumi:"filters"`
	// An IP address. This could be either IPv4 or IPv6, depending on the resource. Example: `10.0.3.3`
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The OCID of the subnet.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The OCID of the VNIC.
	VnicId pulumi.StringPtrInput `pulumi:"vnicId"`
}

func (GetIpv6sOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6sArgs)(nil)).Elem()
}

// A collection of values returned by getIpv6s.
type GetIpv6sResultOutput struct{ *pulumi.OutputState }

func (GetIpv6sResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6sResult)(nil)).Elem()
}

func (o GetIpv6sResultOutput) ToGetIpv6sResultOutput() GetIpv6sResultOutput {
	return o
}

func (o GetIpv6sResultOutput) ToGetIpv6sResultOutputWithContext(ctx context.Context) GetIpv6sResultOutput {
	return o
}

func (o GetIpv6sResultOutput) Filters() GetIpv6sFilterArrayOutput {
	return o.ApplyT(func(v GetIpv6sResult) []GetIpv6sFilter { return v.Filters }).(GetIpv6sFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpv6sResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6sResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv6 address of the `IPv6` object. The address is within the IPv6 CIDR block of the VNIC's subnet (see the `ipv6CidrBlock` attribute for the [Subnet](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Subnet/) object.  Example: `2001:0db8:0123:1111:abcd:ef01:2345:6789`
func (o GetIpv6sResultOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv6sResult) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The list of ipv6s.
func (o GetIpv6sResultOutput) Ipv6s() GetIpv6sIpv6ArrayOutput {
	return o.ApplyT(func(v GetIpv6sResult) []GetIpv6sIpv6 { return v.Ipv6s }).(GetIpv6sIpv6ArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the VNIC is in.
func (o GetIpv6sResultOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv6sResult) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC the IPv6 is assigned to. The VNIC and IPv6 must be in the same subnet.
func (o GetIpv6sResultOutput) VnicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv6sResult) *string { return v.VnicId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpv6sResultOutput{})
}
