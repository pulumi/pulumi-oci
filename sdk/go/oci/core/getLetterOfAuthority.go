// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Letter Of Authority resource in Oracle Cloud Infrastructure Core service.
//
// Gets the Letter of Authority for the specified cross-connect.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetLetterOfAuthority(ctx, &core.GetLetterOfAuthorityArgs{
//				CrossConnectId: testCrossConnect.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLetterOfAuthority(ctx *pulumi.Context, args *GetLetterOfAuthorityArgs, opts ...pulumi.InvokeOption) (*GetLetterOfAuthorityResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLetterOfAuthorityResult
	err := ctx.Invoke("oci:Core/getLetterOfAuthority:getLetterOfAuthority", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLetterOfAuthority.
type GetLetterOfAuthorityArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect.
	CrossConnectId string `pulumi:"crossConnectId"`
}

// A collection of values returned by getLetterOfAuthority.
type GetLetterOfAuthorityResult struct {
	// The name of the entity authorized by this Letter of Authority.
	AuthorizedEntityName string `pulumi:"authorizedEntityName"`
	// The type of cross-connect fiber, termination, and optical specification.
	CircuitType string `pulumi:"circuitType"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect.
	CrossConnectId string `pulumi:"crossConnectId"`
	// The address of the FastConnect location.
	FacilityLocation string `pulumi:"facilityLocation"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The meet-me room port for this cross-connect.
	PortName string `pulumi:"portName"`
	// The date and time when the Letter of Authority expires, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeExpires string `pulumi:"timeExpires"`
	// The date and time the Letter of Authority was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeIssued string `pulumi:"timeIssued"`
}

func GetLetterOfAuthorityOutput(ctx *pulumi.Context, args GetLetterOfAuthorityOutputArgs, opts ...pulumi.InvokeOption) GetLetterOfAuthorityResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLetterOfAuthorityResultOutput, error) {
			args := v.(GetLetterOfAuthorityArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetLetterOfAuthorityResult
			secret, err := ctx.InvokePackageRaw("oci:Core/getLetterOfAuthority:getLetterOfAuthority", args, &rv, "", opts...)
			if err != nil {
				return GetLetterOfAuthorityResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetLetterOfAuthorityResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetLetterOfAuthorityResultOutput), nil
			}
			return output, nil
		}).(GetLetterOfAuthorityResultOutput)
}

// A collection of arguments for invoking getLetterOfAuthority.
type GetLetterOfAuthorityOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect.
	CrossConnectId pulumi.StringInput `pulumi:"crossConnectId"`
}

func (GetLetterOfAuthorityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLetterOfAuthorityArgs)(nil)).Elem()
}

// A collection of values returned by getLetterOfAuthority.
type GetLetterOfAuthorityResultOutput struct{ *pulumi.OutputState }

func (GetLetterOfAuthorityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLetterOfAuthorityResult)(nil)).Elem()
}

func (o GetLetterOfAuthorityResultOutput) ToGetLetterOfAuthorityResultOutput() GetLetterOfAuthorityResultOutput {
	return o
}

func (o GetLetterOfAuthorityResultOutput) ToGetLetterOfAuthorityResultOutputWithContext(ctx context.Context) GetLetterOfAuthorityResultOutput {
	return o
}

// The name of the entity authorized by this Letter of Authority.
func (o GetLetterOfAuthorityResultOutput) AuthorizedEntityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLetterOfAuthorityResult) string { return v.AuthorizedEntityName }).(pulumi.StringOutput)
}

// The type of cross-connect fiber, termination, and optical specification.
func (o GetLetterOfAuthorityResultOutput) CircuitType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLetterOfAuthorityResult) string { return v.CircuitType }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect.
func (o GetLetterOfAuthorityResultOutput) CrossConnectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLetterOfAuthorityResult) string { return v.CrossConnectId }).(pulumi.StringOutput)
}

// The address of the FastConnect location.
func (o GetLetterOfAuthorityResultOutput) FacilityLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetLetterOfAuthorityResult) string { return v.FacilityLocation }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLetterOfAuthorityResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLetterOfAuthorityResult) string { return v.Id }).(pulumi.StringOutput)
}

// The meet-me room port for this cross-connect.
func (o GetLetterOfAuthorityResultOutput) PortName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLetterOfAuthorityResult) string { return v.PortName }).(pulumi.StringOutput)
}

// The date and time when the Letter of Authority expires, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetLetterOfAuthorityResultOutput) TimeExpires() pulumi.StringOutput {
	return o.ApplyT(func(v GetLetterOfAuthorityResult) string { return v.TimeExpires }).(pulumi.StringOutput)
}

// The date and time the Letter of Authority was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o GetLetterOfAuthorityResultOutput) TimeIssued() pulumi.StringOutput {
	return o.ApplyT(func(v GetLetterOfAuthorityResult) string { return v.TimeIssued }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLetterOfAuthorityResultOutput{})
}
