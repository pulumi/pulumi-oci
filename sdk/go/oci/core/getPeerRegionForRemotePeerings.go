// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Peer Region For Remote Peerings in Oracle Cloud Infrastructure Core service.
//
// Lists the regions that support remote VCN peering (which is peering across regions).
// For more information, see [VCN Peering](https://docs.cloud.oracle.com/iaas/Content/Network/Tasks/VCNpeering.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetPeerRegionForRemotePeerings(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPeerRegionForRemotePeerings(ctx *pulumi.Context, args *GetPeerRegionForRemotePeeringsArgs, opts ...pulumi.InvokeOption) (*GetPeerRegionForRemotePeeringsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPeerRegionForRemotePeeringsResult
	err := ctx.Invoke("oci:Core/getPeerRegionForRemotePeerings:getPeerRegionForRemotePeerings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeerRegionForRemotePeerings.
type GetPeerRegionForRemotePeeringsArgs struct {
	Filters []GetPeerRegionForRemotePeeringsFilter `pulumi:"filters"`
}

// A collection of values returned by getPeerRegionForRemotePeerings.
type GetPeerRegionForRemotePeeringsResult struct {
	Filters []GetPeerRegionForRemotePeeringsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of peer_region_for_remote_peerings.
	PeerRegionForRemotePeerings []GetPeerRegionForRemotePeeringsPeerRegionForRemotePeering `pulumi:"peerRegionForRemotePeerings"`
}

func GetPeerRegionForRemotePeeringsOutput(ctx *pulumi.Context, args GetPeerRegionForRemotePeeringsOutputArgs, opts ...pulumi.InvokeOption) GetPeerRegionForRemotePeeringsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPeerRegionForRemotePeeringsResult, error) {
			args := v.(GetPeerRegionForRemotePeeringsArgs)
			r, err := GetPeerRegionForRemotePeerings(ctx, &args, opts...)
			var s GetPeerRegionForRemotePeeringsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPeerRegionForRemotePeeringsResultOutput)
}

// A collection of arguments for invoking getPeerRegionForRemotePeerings.
type GetPeerRegionForRemotePeeringsOutputArgs struct {
	Filters GetPeerRegionForRemotePeeringsFilterArrayInput `pulumi:"filters"`
}

func (GetPeerRegionForRemotePeeringsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeerRegionForRemotePeeringsArgs)(nil)).Elem()
}

// A collection of values returned by getPeerRegionForRemotePeerings.
type GetPeerRegionForRemotePeeringsResultOutput struct{ *pulumi.OutputState }

func (GetPeerRegionForRemotePeeringsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeerRegionForRemotePeeringsResult)(nil)).Elem()
}

func (o GetPeerRegionForRemotePeeringsResultOutput) ToGetPeerRegionForRemotePeeringsResultOutput() GetPeerRegionForRemotePeeringsResultOutput {
	return o
}

func (o GetPeerRegionForRemotePeeringsResultOutput) ToGetPeerRegionForRemotePeeringsResultOutputWithContext(ctx context.Context) GetPeerRegionForRemotePeeringsResultOutput {
	return o
}

func (o GetPeerRegionForRemotePeeringsResultOutput) Filters() GetPeerRegionForRemotePeeringsFilterArrayOutput {
	return o.ApplyT(func(v GetPeerRegionForRemotePeeringsResult) []GetPeerRegionForRemotePeeringsFilter { return v.Filters }).(GetPeerRegionForRemotePeeringsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPeerRegionForRemotePeeringsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerRegionForRemotePeeringsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of peer_region_for_remote_peerings.
func (o GetPeerRegionForRemotePeeringsResultOutput) PeerRegionForRemotePeerings() GetPeerRegionForRemotePeeringsPeerRegionForRemotePeeringArrayOutput {
	return o.ApplyT(func(v GetPeerRegionForRemotePeeringsResult) []GetPeerRegionForRemotePeeringsPeerRegionForRemotePeering {
		return v.PeerRegionForRemotePeerings
	}).(GetPeerRegionForRemotePeeringsPeerRegionForRemotePeeringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPeerRegionForRemotePeeringsResultOutput{})
}
