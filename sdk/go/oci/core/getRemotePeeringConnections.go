// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Remote Peering Connections in Oracle Cloud Infrastructure Core service.
//
// Lists the remote peering connections (RPCs) for the specified DRG and compartment
// (the RPC's compartment).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetRemotePeeringConnections(ctx, &core.GetRemotePeeringConnectionsArgs{
//				CompartmentId: _var.Compartment_id,
//				DrgId:         pulumi.StringRef(oci_core_drg.Test_drg.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRemotePeeringConnections(ctx *pulumi.Context, args *GetRemotePeeringConnectionsArgs, opts ...pulumi.InvokeOption) (*GetRemotePeeringConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRemotePeeringConnectionsResult
	err := ctx.Invoke("oci:Core/getRemotePeeringConnections:getRemotePeeringConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRemotePeeringConnections.
type GetRemotePeeringConnectionsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId   *string                             `pulumi:"drgId"`
	Filters []GetRemotePeeringConnectionsFilter `pulumi:"filters"`
}

// A collection of values returned by getRemotePeeringConnections.
type GetRemotePeeringConnectionsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the RPC.
	CompartmentId string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG that this RPC belongs to.
	DrgId   *string                             `pulumi:"drgId"`
	Filters []GetRemotePeeringConnectionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The list of remote_peering_connections.
	RemotePeeringConnections []GetRemotePeeringConnectionsRemotePeeringConnection `pulumi:"remotePeeringConnections"`
}

func GetRemotePeeringConnectionsOutput(ctx *pulumi.Context, args GetRemotePeeringConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetRemotePeeringConnectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRemotePeeringConnectionsResult, error) {
			args := v.(GetRemotePeeringConnectionsArgs)
			r, err := GetRemotePeeringConnections(ctx, &args, opts...)
			var s GetRemotePeeringConnectionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRemotePeeringConnectionsResultOutput)
}

// A collection of arguments for invoking getRemotePeeringConnections.
type GetRemotePeeringConnectionsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG.
	DrgId   pulumi.StringPtrInput                       `pulumi:"drgId"`
	Filters GetRemotePeeringConnectionsFilterArrayInput `pulumi:"filters"`
}

func (GetRemotePeeringConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRemotePeeringConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getRemotePeeringConnections.
type GetRemotePeeringConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetRemotePeeringConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRemotePeeringConnectionsResult)(nil)).Elem()
}

func (o GetRemotePeeringConnectionsResultOutput) ToGetRemotePeeringConnectionsResultOutput() GetRemotePeeringConnectionsResultOutput {
	return o
}

func (o GetRemotePeeringConnectionsResultOutput) ToGetRemotePeeringConnectionsResultOutputWithContext(ctx context.Context) GetRemotePeeringConnectionsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the RPC.
func (o GetRemotePeeringConnectionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemotePeeringConnectionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG that this RPC belongs to.
func (o GetRemotePeeringConnectionsResultOutput) DrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRemotePeeringConnectionsResult) *string { return v.DrgId }).(pulumi.StringPtrOutput)
}

func (o GetRemotePeeringConnectionsResultOutput) Filters() GetRemotePeeringConnectionsFilterArrayOutput {
	return o.ApplyT(func(v GetRemotePeeringConnectionsResult) []GetRemotePeeringConnectionsFilter { return v.Filters }).(GetRemotePeeringConnectionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRemotePeeringConnectionsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRemotePeeringConnectionsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of remote_peering_connections.
func (o GetRemotePeeringConnectionsResultOutput) RemotePeeringConnections() GetRemotePeeringConnectionsRemotePeeringConnectionArrayOutput {
	return o.ApplyT(func(v GetRemotePeeringConnectionsResult) []GetRemotePeeringConnectionsRemotePeeringConnection {
		return v.RemotePeeringConnections
	}).(GetRemotePeeringConnectionsRemotePeeringConnectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRemotePeeringConnectionsResultOutput{})
}
