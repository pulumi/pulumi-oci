// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Tunnel Security Associations in Oracle Cloud Infrastructure Core service.
//
// Lists the tunnel security associations information for the specified IPSec tunnel ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.GetTunnelSecurityAssociations(ctx, &core.GetTunnelSecurityAssociationsArgs{
//				IpsecId:  testIpsec.Id,
//				TunnelId: testTunnel.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTunnelSecurityAssociations(ctx *pulumi.Context, args *GetTunnelSecurityAssociationsArgs, opts ...pulumi.InvokeOption) (*GetTunnelSecurityAssociationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTunnelSecurityAssociationsResult
	err := ctx.Invoke("oci:Core/getTunnelSecurityAssociations:getTunnelSecurityAssociations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTunnelSecurityAssociations.
type GetTunnelSecurityAssociationsArgs struct {
	Filters []GetTunnelSecurityAssociationsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
	IpsecId string `pulumi:"ipsecId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
	TunnelId string `pulumi:"tunnelId"`
}

// A collection of values returned by getTunnelSecurityAssociations.
type GetTunnelSecurityAssociationsResult struct {
	Filters []GetTunnelSecurityAssociationsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	IpsecId  string `pulumi:"ipsecId"`
	TunnelId string `pulumi:"tunnelId"`
	// The list of tunnel_security_associations.
	TunnelSecurityAssociations []GetTunnelSecurityAssociationsTunnelSecurityAssociation `pulumi:"tunnelSecurityAssociations"`
}

func GetTunnelSecurityAssociationsOutput(ctx *pulumi.Context, args GetTunnelSecurityAssociationsOutputArgs, opts ...pulumi.InvokeOption) GetTunnelSecurityAssociationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTunnelSecurityAssociationsResultOutput, error) {
			args := v.(GetTunnelSecurityAssociationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getTunnelSecurityAssociations:getTunnelSecurityAssociations", args, GetTunnelSecurityAssociationsResultOutput{}, options).(GetTunnelSecurityAssociationsResultOutput), nil
		}).(GetTunnelSecurityAssociationsResultOutput)
}

// A collection of arguments for invoking getTunnelSecurityAssociations.
type GetTunnelSecurityAssociationsOutputArgs struct {
	Filters GetTunnelSecurityAssociationsFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
	IpsecId pulumi.StringInput `pulumi:"ipsecId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
	TunnelId pulumi.StringInput `pulumi:"tunnelId"`
}

func (GetTunnelSecurityAssociationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTunnelSecurityAssociationsArgs)(nil)).Elem()
}

// A collection of values returned by getTunnelSecurityAssociations.
type GetTunnelSecurityAssociationsResultOutput struct{ *pulumi.OutputState }

func (GetTunnelSecurityAssociationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTunnelSecurityAssociationsResult)(nil)).Elem()
}

func (o GetTunnelSecurityAssociationsResultOutput) ToGetTunnelSecurityAssociationsResultOutput() GetTunnelSecurityAssociationsResultOutput {
	return o
}

func (o GetTunnelSecurityAssociationsResultOutput) ToGetTunnelSecurityAssociationsResultOutputWithContext(ctx context.Context) GetTunnelSecurityAssociationsResultOutput {
	return o
}

func (o GetTunnelSecurityAssociationsResultOutput) Filters() GetTunnelSecurityAssociationsFilterArrayOutput {
	return o.ApplyT(func(v GetTunnelSecurityAssociationsResult) []GetTunnelSecurityAssociationsFilter { return v.Filters }).(GetTunnelSecurityAssociationsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTunnelSecurityAssociationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelSecurityAssociationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTunnelSecurityAssociationsResultOutput) IpsecId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelSecurityAssociationsResult) string { return v.IpsecId }).(pulumi.StringOutput)
}

func (o GetTunnelSecurityAssociationsResultOutput) TunnelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTunnelSecurityAssociationsResult) string { return v.TunnelId }).(pulumi.StringOutput)
}

// The list of tunnel_security_associations.
func (o GetTunnelSecurityAssociationsResultOutput) TunnelSecurityAssociations() GetTunnelSecurityAssociationsTunnelSecurityAssociationArrayOutput {
	return o.ApplyT(func(v GetTunnelSecurityAssociationsResult) []GetTunnelSecurityAssociationsTunnelSecurityAssociation {
		return v.TunnelSecurityAssociations
	}).(GetTunnelSecurityAssociationsTunnelSecurityAssociationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTunnelSecurityAssociationsResultOutput{})
}
