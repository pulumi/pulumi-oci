// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Virtual Circuit Public Prefixes in Oracle Cloud Infrastructure Core service.
//
// Lists the public IP prefixes and their details for the specified
// public virtual circuit.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetVirtualCircuitPublicPrefixes(ctx, &core.GetVirtualCircuitPublicPrefixesArgs{
//				VirtualCircuitId:  oci_core_virtual_circuit.Test_virtual_circuit.Id,
//				VerificationState: pulumi.StringRef(_var.Virtual_circuit_public_prefix_verification_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVirtualCircuitPublicPrefixes(ctx *pulumi.Context, args *GetVirtualCircuitPublicPrefixesArgs, opts ...pulumi.InvokeOption) (*GetVirtualCircuitPublicPrefixesResult, error) {
	var rv GetVirtualCircuitPublicPrefixesResult
	err := ctx.Invoke("oci:Core/getVirtualCircuitPublicPrefixes:getVirtualCircuitPublicPrefixes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualCircuitPublicPrefixes.
type GetVirtualCircuitPublicPrefixesArgs struct {
	Filters []GetVirtualCircuitPublicPrefixesFilter `pulumi:"filters"`
	// A filter to only return resources that match the given verification state.
	VerificationState *string `pulumi:"verificationState"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual circuit.
	VirtualCircuitId string `pulumi:"virtualCircuitId"`
}

// A collection of values returned by getVirtualCircuitPublicPrefixes.
type GetVirtualCircuitPublicPrefixesResult struct {
	Filters []GetVirtualCircuitPublicPrefixesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Oracle must verify that the customer owns the public IP prefix before traffic for that prefix can flow across the virtual circuit. Verification can take a few business days. `IN_PROGRESS` means Oracle is verifying the prefix. `COMPLETED` means verification succeeded. `FAILED` means verification failed and traffic for this prefix will not flow across the connection.
	VerificationState *string `pulumi:"verificationState"`
	VirtualCircuitId  string  `pulumi:"virtualCircuitId"`
	// The list of virtual_circuit_public_prefixes.
	VirtualCircuitPublicPrefixes []GetVirtualCircuitPublicPrefixesVirtualCircuitPublicPrefix `pulumi:"virtualCircuitPublicPrefixes"`
}

func GetVirtualCircuitPublicPrefixesOutput(ctx *pulumi.Context, args GetVirtualCircuitPublicPrefixesOutputArgs, opts ...pulumi.InvokeOption) GetVirtualCircuitPublicPrefixesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVirtualCircuitPublicPrefixesResult, error) {
			args := v.(GetVirtualCircuitPublicPrefixesArgs)
			r, err := GetVirtualCircuitPublicPrefixes(ctx, &args, opts...)
			var s GetVirtualCircuitPublicPrefixesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVirtualCircuitPublicPrefixesResultOutput)
}

// A collection of arguments for invoking getVirtualCircuitPublicPrefixes.
type GetVirtualCircuitPublicPrefixesOutputArgs struct {
	Filters GetVirtualCircuitPublicPrefixesFilterArrayInput `pulumi:"filters"`
	// A filter to only return resources that match the given verification state.
	VerificationState pulumi.StringPtrInput `pulumi:"verificationState"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual circuit.
	VirtualCircuitId pulumi.StringInput `pulumi:"virtualCircuitId"`
}

func (GetVirtualCircuitPublicPrefixesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualCircuitPublicPrefixesArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualCircuitPublicPrefixes.
type GetVirtualCircuitPublicPrefixesResultOutput struct{ *pulumi.OutputState }

func (GetVirtualCircuitPublicPrefixesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualCircuitPublicPrefixesResult)(nil)).Elem()
}

func (o GetVirtualCircuitPublicPrefixesResultOutput) ToGetVirtualCircuitPublicPrefixesResultOutput() GetVirtualCircuitPublicPrefixesResultOutput {
	return o
}

func (o GetVirtualCircuitPublicPrefixesResultOutput) ToGetVirtualCircuitPublicPrefixesResultOutputWithContext(ctx context.Context) GetVirtualCircuitPublicPrefixesResultOutput {
	return o
}

func (o GetVirtualCircuitPublicPrefixesResultOutput) Filters() GetVirtualCircuitPublicPrefixesFilterArrayOutput {
	return o.ApplyT(func(v GetVirtualCircuitPublicPrefixesResult) []GetVirtualCircuitPublicPrefixesFilter {
		return v.Filters
	}).(GetVirtualCircuitPublicPrefixesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVirtualCircuitPublicPrefixesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualCircuitPublicPrefixesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Oracle must verify that the customer owns the public IP prefix before traffic for that prefix can flow across the virtual circuit. Verification can take a few business days. `IN_PROGRESS` means Oracle is verifying the prefix. `COMPLETED` means verification succeeded. `FAILED` means verification failed and traffic for this prefix will not flow across the connection.
func (o GetVirtualCircuitPublicPrefixesResultOutput) VerificationState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualCircuitPublicPrefixesResult) *string { return v.VerificationState }).(pulumi.StringPtrOutput)
}

func (o GetVirtualCircuitPublicPrefixesResultOutput) VirtualCircuitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualCircuitPublicPrefixesResult) string { return v.VirtualCircuitId }).(pulumi.StringOutput)
}

// The list of virtual_circuit_public_prefixes.
func (o GetVirtualCircuitPublicPrefixesResultOutput) VirtualCircuitPublicPrefixes() GetVirtualCircuitPublicPrefixesVirtualCircuitPublicPrefixArrayOutput {
	return o.ApplyT(func(v GetVirtualCircuitPublicPrefixesResult) []GetVirtualCircuitPublicPrefixesVirtualCircuitPublicPrefix {
		return v.VirtualCircuitPublicPrefixes
	}).(GetVirtualCircuitPublicPrefixesVirtualCircuitPublicPrefixArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVirtualCircuitPublicPrefixesResultOutput{})
}
