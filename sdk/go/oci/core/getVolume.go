// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Volume resource in Oracle Cloud Infrastructure Core service.
//
// Gets information for the specified volume.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetVolume(ctx, &core.GetVolumeArgs{
//				VolumeId: oci_core_volume.Test_volume.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVolume(ctx *pulumi.Context, args *LookupVolumeArgs, opts ...pulumi.InvokeOption) (*LookupVolumeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVolumeResult
	err := ctx.Invoke("oci:Core/getVolume:getVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolume.
type LookupVolumeArgs struct {
	// The OCID of the volume.
	VolumeId string `pulumi:"volumeId"`
}

// A collection of values returned by getVolume.
type LookupVolumeResult struct {
	// The number of Volume Performance Units per GB that this volume is effectively tuned to.
	AutoTunedVpusPerGb *string `pulumi:"autoTunedVpusPerGb"`
	// The list of autotune policies enabled for this volume.
	AutotunePolicies []GetVolumeAutotunePolicy `pulumi:"autotunePolicies"`
	// The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId *string `pulumi:"backupPolicyId"`
	// The list of block volume replicas of this volume.
	BlockVolumeReplicas         []GetVolumeBlockVolumeReplica `pulumi:"blockVolumeReplicas"`
	BlockVolumeReplicasDeletion *bool                         `pulumi:"blockVolumeReplicasDeletion"`
	// The OCID of the compartment that contains the volume.
	CompartmentId *string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the block volume replica.
	Id *string `pulumi:"id"`
	// Specifies whether the auto-tune performance is enabled for this volume. This field is deprecated. Use the `DetachedVolumeAutotunePolicy` instead to enable the volume for detached autotune.
	IsAutoTuneEnabled *bool `pulumi:"isAutoTuneEnabled"`
	// Specifies whether the cloned volume's data has finished copying from the source volume or backup.
	IsHydrated *bool `pulumi:"isHydrated"`
	// The OCID of the Vault service key which is the master encryption key for the volume.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The size of the volume in GBs.
	SizeInGbs *string `pulumi:"sizeInGbs"`
	// The size of the volume in MBs. This field is deprecated. Use sizeInGBs instead.
	//
	// Deprecated: The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
	SizeInMbs     *string                 `pulumi:"sizeInMbs"`
	SourceDetails []GetVolumeSourceDetail `pulumi:"sourceDetails"`
	// The current state of a volume.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated    *string `pulumi:"timeCreated"`
	VolumeBackupId *string `pulumi:"volumeBackupId"`
	// The OCID of the source volume group.
	VolumeGroupId *string `pulumi:"volumeGroupId"`
	VolumeId      string  `pulumi:"volumeId"`
	// The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
	VpusPerGb *string `pulumi:"vpusPerGb"`
}

func LookupVolumeOutput(ctx *pulumi.Context, args LookupVolumeOutputArgs, opts ...pulumi.InvokeOption) LookupVolumeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVolumeResult, error) {
			args := v.(LookupVolumeArgs)
			r, err := LookupVolume(ctx, &args, opts...)
			var s LookupVolumeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVolumeResultOutput)
}

// A collection of arguments for invoking getVolume.
type LookupVolumeOutputArgs struct {
	// The OCID of the volume.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
}

func (LookupVolumeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeArgs)(nil)).Elem()
}

// A collection of values returned by getVolume.
type LookupVolumeResultOutput struct{ *pulumi.OutputState }

func (LookupVolumeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeResult)(nil)).Elem()
}

func (o LookupVolumeResultOutput) ToLookupVolumeResultOutput() LookupVolumeResultOutput {
	return o
}

func (o LookupVolumeResultOutput) ToLookupVolumeResultOutputWithContext(ctx context.Context) LookupVolumeResultOutput {
	return o
}

// The number of Volume Performance Units per GB that this volume is effectively tuned to.
func (o LookupVolumeResultOutput) AutoTunedVpusPerGb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.AutoTunedVpusPerGb }).(pulumi.StringPtrOutput)
}

// The list of autotune policies enabled for this volume.
func (o LookupVolumeResultOutput) AutotunePolicies() GetVolumeAutotunePolicyArrayOutput {
	return o.ApplyT(func(v LookupVolumeResult) []GetVolumeAutotunePolicy { return v.AutotunePolicies }).(GetVolumeAutotunePolicyArrayOutput)
}

// The availability domain of the block volume replica.  Example: `Uocm:PHX-AD-1`
func (o LookupVolumeResultOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
func (o LookupVolumeResultOutput) BackupPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.BackupPolicyId }).(pulumi.StringPtrOutput)
}

// The list of block volume replicas of this volume.
func (o LookupVolumeResultOutput) BlockVolumeReplicas() GetVolumeBlockVolumeReplicaArrayOutput {
	return o.ApplyT(func(v LookupVolumeResult) []GetVolumeBlockVolumeReplica { return v.BlockVolumeReplicas }).(GetVolumeBlockVolumeReplicaArrayOutput)
}

func (o LookupVolumeResultOutput) BlockVolumeReplicasDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *bool { return v.BlockVolumeReplicasDeletion }).(pulumi.BoolPtrOutput)
}

// The OCID of the compartment that contains the volume.
func (o LookupVolumeResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupVolumeResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVolumeResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupVolumeResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupVolumeResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVolumeResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the block volume replica.
func (o LookupVolumeResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies whether the auto-tune performance is enabled for this volume. This field is deprecated. Use the `DetachedVolumeAutotunePolicy` instead to enable the volume for detached autotune.
func (o LookupVolumeResultOutput) IsAutoTuneEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *bool { return v.IsAutoTuneEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies whether the cloned volume's data has finished copying from the source volume or backup.
func (o LookupVolumeResultOutput) IsHydrated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *bool { return v.IsHydrated }).(pulumi.BoolPtrOutput)
}

// The OCID of the Vault service key which is the master encryption key for the volume.
func (o LookupVolumeResultOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The size of the volume in GBs.
func (o LookupVolumeResultOutput) SizeInGbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.SizeInGbs }).(pulumi.StringPtrOutput)
}

// The size of the volume in MBs. This field is deprecated. Use sizeInGBs instead.
//
// Deprecated: The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
func (o LookupVolumeResultOutput) SizeInMbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.SizeInMbs }).(pulumi.StringPtrOutput)
}

func (o LookupVolumeResultOutput) SourceDetails() GetVolumeSourceDetailArrayOutput {
	return o.ApplyT(func(v LookupVolumeResult) []GetVolumeSourceDetail { return v.SourceDetails }).(GetVolumeSourceDetailArrayOutput)
}

// The current state of a volume.
func (o LookupVolumeResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupVolumeResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVolumeResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the volume was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o LookupVolumeResultOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

func (o LookupVolumeResultOutput) VolumeBackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.VolumeBackupId }).(pulumi.StringPtrOutput)
}

// The OCID of the source volume group.
func (o LookupVolumeResultOutput) VolumeGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.VolumeGroupId }).(pulumi.StringPtrOutput)
}

func (o LookupVolumeResultOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The number of volume performance units (VPUs) that will be applied to this volume per GB, representing the Block Volume service's elastic performance options. See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
func (o LookupVolumeResultOutput) VpusPerGb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.VpusPerGb }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVolumeResultOutput{})
}
