// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Volume Backup Policy Assignments in Oracle Cloud Infrastructure Core service.
//
// Gets the volume backup policy assignment for the specified volume. The
// `assetId` query parameter is required, and the returned list will contain at most
// one item, since volume can only have one volume backup policy assigned at a time.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.GetVolumeBackupPolicyAssignments(ctx, &core.GetVolumeBackupPolicyAssignmentsArgs{
//				AssetId: testVolume.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVolumeBackupPolicyAssignments(ctx *pulumi.Context, args *GetVolumeBackupPolicyAssignmentsArgs, opts ...pulumi.InvokeOption) (*GetVolumeBackupPolicyAssignmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVolumeBackupPolicyAssignmentsResult
	err := ctx.Invoke("oci:Core/getVolumeBackupPolicyAssignments:getVolumeBackupPolicyAssignments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolumeBackupPolicyAssignments.
type GetVolumeBackupPolicyAssignmentsArgs struct {
	// The OCID of an asset (e.g. a volume).
	AssetId string                                   `pulumi:"assetId"`
	Filters []GetVolumeBackupPolicyAssignmentsFilter `pulumi:"filters"`
}

// A collection of values returned by getVolumeBackupPolicyAssignments.
type GetVolumeBackupPolicyAssignmentsResult struct {
	// The OCID of the volume the policy has been assigned to.
	AssetId string                                   `pulumi:"assetId"`
	Filters []GetVolumeBackupPolicyAssignmentsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of volume_backup_policy_assignments.
	VolumeBackupPolicyAssignments []GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment `pulumi:"volumeBackupPolicyAssignments"`
}

func GetVolumeBackupPolicyAssignmentsOutput(ctx *pulumi.Context, args GetVolumeBackupPolicyAssignmentsOutputArgs, opts ...pulumi.InvokeOption) GetVolumeBackupPolicyAssignmentsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVolumeBackupPolicyAssignmentsResultOutput, error) {
			args := v.(GetVolumeBackupPolicyAssignmentsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getVolumeBackupPolicyAssignments:getVolumeBackupPolicyAssignments", args, GetVolumeBackupPolicyAssignmentsResultOutput{}, options).(GetVolumeBackupPolicyAssignmentsResultOutput), nil
		}).(GetVolumeBackupPolicyAssignmentsResultOutput)
}

// A collection of arguments for invoking getVolumeBackupPolicyAssignments.
type GetVolumeBackupPolicyAssignmentsOutputArgs struct {
	// The OCID of an asset (e.g. a volume).
	AssetId pulumi.StringInput                               `pulumi:"assetId"`
	Filters GetVolumeBackupPolicyAssignmentsFilterArrayInput `pulumi:"filters"`
}

func (GetVolumeBackupPolicyAssignmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeBackupPolicyAssignmentsArgs)(nil)).Elem()
}

// A collection of values returned by getVolumeBackupPolicyAssignments.
type GetVolumeBackupPolicyAssignmentsResultOutput struct{ *pulumi.OutputState }

func (GetVolumeBackupPolicyAssignmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeBackupPolicyAssignmentsResult)(nil)).Elem()
}

func (o GetVolumeBackupPolicyAssignmentsResultOutput) ToGetVolumeBackupPolicyAssignmentsResultOutput() GetVolumeBackupPolicyAssignmentsResultOutput {
	return o
}

func (o GetVolumeBackupPolicyAssignmentsResultOutput) ToGetVolumeBackupPolicyAssignmentsResultOutputWithContext(ctx context.Context) GetVolumeBackupPolicyAssignmentsResultOutput {
	return o
}

// The OCID of the volume the policy has been assigned to.
func (o GetVolumeBackupPolicyAssignmentsResultOutput) AssetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeBackupPolicyAssignmentsResult) string { return v.AssetId }).(pulumi.StringOutput)
}

func (o GetVolumeBackupPolicyAssignmentsResultOutput) Filters() GetVolumeBackupPolicyAssignmentsFilterArrayOutput {
	return o.ApplyT(func(v GetVolumeBackupPolicyAssignmentsResult) []GetVolumeBackupPolicyAssignmentsFilter {
		return v.Filters
	}).(GetVolumeBackupPolicyAssignmentsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVolumeBackupPolicyAssignmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeBackupPolicyAssignmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of volume_backup_policy_assignments.
func (o GetVolumeBackupPolicyAssignmentsResultOutput) VolumeBackupPolicyAssignments() GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignmentArrayOutput {
	return o.ApplyT(func(v GetVolumeBackupPolicyAssignmentsResult) []GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignment {
		return v.VolumeBackupPolicyAssignments
	}).(GetVolumeBackupPolicyAssignmentsVolumeBackupPolicyAssignmentArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVolumeBackupPolicyAssignmentsResultOutput{})
}
