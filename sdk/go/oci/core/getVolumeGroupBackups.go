// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Volume Group Backups in Oracle Cloud Infrastructure Core service.
//
// Lists the volume group backups in the specified compartment. You can filter the results by volume group.
// For more information, see [Volume Groups](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/volumegroups.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.GetVolumeGroupBackups(ctx, &core.GetVolumeGroupBackupsArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(volumeGroupBackupDisplayName),
//				VolumeGroupId: pulumi.StringRef(testVolumeGroup.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVolumeGroupBackups(ctx *pulumi.Context, args *GetVolumeGroupBackupsArgs, opts ...pulumi.InvokeOption) (*GetVolumeGroupBackupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVolumeGroupBackupsResult
	err := ctx.Invoke("oci:Core/getVolumeGroupBackups:getVolumeGroupBackups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolumeGroupBackups.
type GetVolumeGroupBackupsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetVolumeGroupBackupsFilter `pulumi:"filters"`
	// The OCID of the volume group.
	VolumeGroupId *string `pulumi:"volumeGroupId"`
}

// A collection of values returned by getVolumeGroupBackups.
type GetVolumeGroupBackupsResult struct {
	// The OCID of the compartment that contains the volume group backup.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetVolumeGroupBackupsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of volume_group_backups.
	VolumeGroupBackups []GetVolumeGroupBackupsVolumeGroupBackup `pulumi:"volumeGroupBackups"`
	// The OCID of the source volume group.
	VolumeGroupId *string `pulumi:"volumeGroupId"`
}

func GetVolumeGroupBackupsOutput(ctx *pulumi.Context, args GetVolumeGroupBackupsOutputArgs, opts ...pulumi.InvokeOption) GetVolumeGroupBackupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVolumeGroupBackupsResultOutput, error) {
			args := v.(GetVolumeGroupBackupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Core/getVolumeGroupBackups:getVolumeGroupBackups", args, GetVolumeGroupBackupsResultOutput{}, options).(GetVolumeGroupBackupsResultOutput), nil
		}).(GetVolumeGroupBackupsResultOutput)
}

// A collection of arguments for invoking getVolumeGroupBackups.
type GetVolumeGroupBackupsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput                 `pulumi:"displayName"`
	Filters     GetVolumeGroupBackupsFilterArrayInput `pulumi:"filters"`
	// The OCID of the volume group.
	VolumeGroupId pulumi.StringPtrInput `pulumi:"volumeGroupId"`
}

func (GetVolumeGroupBackupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeGroupBackupsArgs)(nil)).Elem()
}

// A collection of values returned by getVolumeGroupBackups.
type GetVolumeGroupBackupsResultOutput struct{ *pulumi.OutputState }

func (GetVolumeGroupBackupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeGroupBackupsResult)(nil)).Elem()
}

func (o GetVolumeGroupBackupsResultOutput) ToGetVolumeGroupBackupsResultOutput() GetVolumeGroupBackupsResultOutput {
	return o
}

func (o GetVolumeGroupBackupsResultOutput) ToGetVolumeGroupBackupsResultOutputWithContext(ctx context.Context) GetVolumeGroupBackupsResultOutput {
	return o
}

// The OCID of the compartment that contains the volume group backup.
func (o GetVolumeGroupBackupsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeGroupBackupsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetVolumeGroupBackupsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumeGroupBackupsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetVolumeGroupBackupsResultOutput) Filters() GetVolumeGroupBackupsFilterArrayOutput {
	return o.ApplyT(func(v GetVolumeGroupBackupsResult) []GetVolumeGroupBackupsFilter { return v.Filters }).(GetVolumeGroupBackupsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVolumeGroupBackupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumeGroupBackupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of volume_group_backups.
func (o GetVolumeGroupBackupsResultOutput) VolumeGroupBackups() GetVolumeGroupBackupsVolumeGroupBackupArrayOutput {
	return o.ApplyT(func(v GetVolumeGroupBackupsResult) []GetVolumeGroupBackupsVolumeGroupBackup {
		return v.VolumeGroupBackups
	}).(GetVolumeGroupBackupsVolumeGroupBackupArrayOutput)
}

// The OCID of the source volume group.
func (o GetVolumeGroupBackupsResultOutput) VolumeGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumeGroupBackupsResult) *string { return v.VolumeGroupId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVolumeGroupBackupsResultOutput{})
}
