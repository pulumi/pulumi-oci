// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Vtap resource in Oracle Cloud Infrastructure Core service.
//
// Gets the specified `Vtap` resource.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.GetVtap(ctx, &core.GetVtapArgs{
//				VtapId: oci_core_vtap.Test_vtap.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupVtap(ctx *pulumi.Context, args *LookupVtapArgs, opts ...pulumi.InvokeOption) (*LookupVtapResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVtapResult
	err := ctx.Invoke("oci:Core/getVtap:getVtap", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVtap.
type LookupVtapArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VTAP.
	VtapId string `pulumi:"vtapId"`
}

// A collection of values returned by getVtap.
type LookupVtapResult struct {
	// The capture filter's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
	CaptureFilterId string `pulumi:"captureFilterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the `Vtap` resource.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Defines an encapsulation header type for the VTAP's mirrored traffic.
	EncapsulationProtocol string `pulumi:"encapsulationProtocol"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The VTAP's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
	Id string `pulumi:"id"`
	// Used to start or stop a `Vtap` resource.
	IsVtapEnabled bool `pulumi:"isVtapEnabled"`
	// The VTAP's current running state.
	LifecycleStateDetails string `pulumi:"lifecycleStateDetails"`
	// The maximum size of the packets to be included in the filter.
	MaxPacketSize int `pulumi:"maxPacketSize"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source point where packets are captured.
	SourceId string `pulumi:"sourceId"`
	// The IP Address of the source private endpoint.
	SourcePrivateEndpointIp string `pulumi:"sourcePrivateEndpointIp"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet that source private endpoint belongs to.
	SourcePrivateEndpointSubnetId string `pulumi:"sourcePrivateEndpointSubnetId"`
	// The source type for the VTAP.
	SourceType string `pulumi:"sourceType"`
	// The VTAP's administrative lifecycle state.
	State string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the destination resource where mirrored packets are sent.
	TargetId string `pulumi:"targetId"`
	// The IP address of the destination resource where mirrored packets are sent.
	TargetIp string `pulumi:"targetIp"`
	// The target type for the VTAP.
	TargetType string `pulumi:"targetType"`
	// The date and time the VTAP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2020-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// Used to control the priority of traffic. It is an optional field. If it not passed, the value is DEFAULT
	TrafficMode string `pulumi:"trafficMode"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN containing the `Vtap` resource.
	VcnId  string `pulumi:"vcnId"`
	VtapId string `pulumi:"vtapId"`
	// The virtual extensible LAN (VXLAN) network identifier (or VXLAN segment ID) that uniquely identifies the VXLAN.
	VxlanNetworkIdentifier string `pulumi:"vxlanNetworkIdentifier"`
}

func LookupVtapOutput(ctx *pulumi.Context, args LookupVtapOutputArgs, opts ...pulumi.InvokeOption) LookupVtapResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVtapResult, error) {
			args := v.(LookupVtapArgs)
			r, err := LookupVtap(ctx, &args, opts...)
			var s LookupVtapResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVtapResultOutput)
}

// A collection of arguments for invoking getVtap.
type LookupVtapOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VTAP.
	VtapId pulumi.StringInput `pulumi:"vtapId"`
}

func (LookupVtapOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVtapArgs)(nil)).Elem()
}

// A collection of values returned by getVtap.
type LookupVtapResultOutput struct{ *pulumi.OutputState }

func (LookupVtapResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVtapResult)(nil)).Elem()
}

func (o LookupVtapResultOutput) ToLookupVtapResultOutput() LookupVtapResultOutput {
	return o
}

func (o LookupVtapResultOutput) ToLookupVtapResultOutputWithContext(ctx context.Context) LookupVtapResultOutput {
	return o
}

// The capture filter's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
func (o LookupVtapResultOutput) CaptureFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.CaptureFilterId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the `Vtap` resource.
func (o LookupVtapResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o LookupVtapResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVtapResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupVtapResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Defines an encapsulation header type for the VTAP's mirrored traffic.
func (o LookupVtapResultOutput) EncapsulationProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.EncapsulationProtocol }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupVtapResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVtapResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The VTAP's Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
func (o LookupVtapResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.Id }).(pulumi.StringOutput)
}

// Used to start or stop a `Vtap` resource.
func (o LookupVtapResultOutput) IsVtapEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtapResult) bool { return v.IsVtapEnabled }).(pulumi.BoolOutput)
}

// The VTAP's current running state.
func (o LookupVtapResultOutput) LifecycleStateDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.LifecycleStateDetails }).(pulumi.StringOutput)
}

// The maximum size of the packets to be included in the filter.
func (o LookupVtapResultOutput) MaxPacketSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVtapResult) int { return v.MaxPacketSize }).(pulumi.IntOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source point where packets are captured.
func (o LookupVtapResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.SourceId }).(pulumi.StringOutput)
}

// The IP Address of the source private endpoint.
func (o LookupVtapResultOutput) SourcePrivateEndpointIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.SourcePrivateEndpointIp }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet that source private endpoint belongs to.
func (o LookupVtapResultOutput) SourcePrivateEndpointSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.SourcePrivateEndpointSubnetId }).(pulumi.StringOutput)
}

// The source type for the VTAP.
func (o LookupVtapResultOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.SourceType }).(pulumi.StringOutput)
}

// The VTAP's administrative lifecycle state.
func (o LookupVtapResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.State }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the destination resource where mirrored packets are sent.
func (o LookupVtapResultOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.TargetId }).(pulumi.StringOutput)
}

// The IP address of the destination resource where mirrored packets are sent.
func (o LookupVtapResultOutput) TargetIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.TargetIp }).(pulumi.StringOutput)
}

// The target type for the VTAP.
func (o LookupVtapResultOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.TargetType }).(pulumi.StringOutput)
}

// The date and time the VTAP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2020-08-25T21:10:29.600Z`
func (o LookupVtapResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Used to control the priority of traffic. It is an optional field. If it not passed, the value is DEFAULT
func (o LookupVtapResultOutput) TrafficMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.TrafficMode }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN containing the `Vtap` resource.
func (o LookupVtapResultOutput) VcnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.VcnId }).(pulumi.StringOutput)
}

func (o LookupVtapResultOutput) VtapId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.VtapId }).(pulumi.StringOutput)
}

// The virtual extensible LAN (VXLAN) network identifier (or VXLAN segment ID) that uniquely identifies the VXLAN.
func (o LookupVtapResultOutput) VxlanNetworkIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtapResult) string { return v.VxlanNetworkIdentifier }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVtapResultOutput{})
}
