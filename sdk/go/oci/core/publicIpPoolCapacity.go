// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.NewPublicIpPoolCapacity(ctx, "testPublicIpPoolCapacity", &Core.PublicIpPoolCapacityArgs{
//				ByoipId:        pulumi.Any(_var.Byoip_id),
//				CidrBlock:      pulumi.Any(_var.Cidr_block),
//				PublicIpPoolId: pulumi.Any(_var.Public_ip_pool_id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// PublicIpPoolCapacity can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Core/publicIpPoolCapacity:PublicIpPoolCapacity test_public_ip_pool_capacity "publicIpPoolId/{publicIpPoolId}/byoipId/{byoipId}/cidrBlock/{cidrBlock}"
//
// ```
type PublicIpPoolCapacity struct {
	pulumi.CustomResourceState

	// The OCID of the Byoip Range Id object to which the cidr block belongs.
	ByoipId pulumi.StringOutput `pulumi:"byoipId"`
	// The CIDR IP address range to be added to the Public Ip Pool. Example: `10.0.1.0/24`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CidrBlock pulumi.StringOutput `pulumi:"cidrBlock"`
	// The OCID of the pool object created by the current tenancy
	PublicIpPoolId pulumi.StringOutput `pulumi:"publicIpPoolId"`
}

// NewPublicIpPoolCapacity registers a new resource with the given unique name, arguments, and options.
func NewPublicIpPoolCapacity(ctx *pulumi.Context,
	name string, args *PublicIpPoolCapacityArgs, opts ...pulumi.ResourceOption) (*PublicIpPoolCapacity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ByoipId == nil {
		return nil, errors.New("invalid value for required argument 'ByoipId'")
	}
	if args.CidrBlock == nil {
		return nil, errors.New("invalid value for required argument 'CidrBlock'")
	}
	if args.PublicIpPoolId == nil {
		return nil, errors.New("invalid value for required argument 'PublicIpPoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PublicIpPoolCapacity
	err := ctx.RegisterResource("oci:Core/publicIpPoolCapacity:PublicIpPoolCapacity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicIpPoolCapacity gets an existing PublicIpPoolCapacity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicIpPoolCapacity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicIpPoolCapacityState, opts ...pulumi.ResourceOption) (*PublicIpPoolCapacity, error) {
	var resource PublicIpPoolCapacity
	err := ctx.ReadResource("oci:Core/publicIpPoolCapacity:PublicIpPoolCapacity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicIpPoolCapacity resources.
type publicIpPoolCapacityState struct {
	// The OCID of the Byoip Range Id object to which the cidr block belongs.
	ByoipId *string `pulumi:"byoipId"`
	// The CIDR IP address range to be added to the Public Ip Pool. Example: `10.0.1.0/24`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CidrBlock *string `pulumi:"cidrBlock"`
	// The OCID of the pool object created by the current tenancy
	PublicIpPoolId *string `pulumi:"publicIpPoolId"`
}

type PublicIpPoolCapacityState struct {
	// The OCID of the Byoip Range Id object to which the cidr block belongs.
	ByoipId pulumi.StringPtrInput
	// The CIDR IP address range to be added to the Public Ip Pool. Example: `10.0.1.0/24`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CidrBlock pulumi.StringPtrInput
	// The OCID of the pool object created by the current tenancy
	PublicIpPoolId pulumi.StringPtrInput
}

func (PublicIpPoolCapacityState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicIpPoolCapacityState)(nil)).Elem()
}

type publicIpPoolCapacityArgs struct {
	// The OCID of the Byoip Range Id object to which the cidr block belongs.
	ByoipId string `pulumi:"byoipId"`
	// The CIDR IP address range to be added to the Public Ip Pool. Example: `10.0.1.0/24`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CidrBlock string `pulumi:"cidrBlock"`
	// The OCID of the pool object created by the current tenancy
	PublicIpPoolId string `pulumi:"publicIpPoolId"`
}

// The set of arguments for constructing a PublicIpPoolCapacity resource.
type PublicIpPoolCapacityArgs struct {
	// The OCID of the Byoip Range Id object to which the cidr block belongs.
	ByoipId pulumi.StringInput
	// The CIDR IP address range to be added to the Public Ip Pool. Example: `10.0.1.0/24`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CidrBlock pulumi.StringInput
	// The OCID of the pool object created by the current tenancy
	PublicIpPoolId pulumi.StringInput
}

func (PublicIpPoolCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicIpPoolCapacityArgs)(nil)).Elem()
}

type PublicIpPoolCapacityInput interface {
	pulumi.Input

	ToPublicIpPoolCapacityOutput() PublicIpPoolCapacityOutput
	ToPublicIpPoolCapacityOutputWithContext(ctx context.Context) PublicIpPoolCapacityOutput
}

func (*PublicIpPoolCapacity) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIpPoolCapacity)(nil)).Elem()
}

func (i *PublicIpPoolCapacity) ToPublicIpPoolCapacityOutput() PublicIpPoolCapacityOutput {
	return i.ToPublicIpPoolCapacityOutputWithContext(context.Background())
}

func (i *PublicIpPoolCapacity) ToPublicIpPoolCapacityOutputWithContext(ctx context.Context) PublicIpPoolCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpPoolCapacityOutput)
}

func (i *PublicIpPoolCapacity) ToOutput(ctx context.Context) pulumix.Output[*PublicIpPoolCapacity] {
	return pulumix.Output[*PublicIpPoolCapacity]{
		OutputState: i.ToPublicIpPoolCapacityOutputWithContext(ctx).OutputState,
	}
}

// PublicIpPoolCapacityArrayInput is an input type that accepts PublicIpPoolCapacityArray and PublicIpPoolCapacityArrayOutput values.
// You can construct a concrete instance of `PublicIpPoolCapacityArrayInput` via:
//
//	PublicIpPoolCapacityArray{ PublicIpPoolCapacityArgs{...} }
type PublicIpPoolCapacityArrayInput interface {
	pulumi.Input

	ToPublicIpPoolCapacityArrayOutput() PublicIpPoolCapacityArrayOutput
	ToPublicIpPoolCapacityArrayOutputWithContext(context.Context) PublicIpPoolCapacityArrayOutput
}

type PublicIpPoolCapacityArray []PublicIpPoolCapacityInput

func (PublicIpPoolCapacityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicIpPoolCapacity)(nil)).Elem()
}

func (i PublicIpPoolCapacityArray) ToPublicIpPoolCapacityArrayOutput() PublicIpPoolCapacityArrayOutput {
	return i.ToPublicIpPoolCapacityArrayOutputWithContext(context.Background())
}

func (i PublicIpPoolCapacityArray) ToPublicIpPoolCapacityArrayOutputWithContext(ctx context.Context) PublicIpPoolCapacityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpPoolCapacityArrayOutput)
}

func (i PublicIpPoolCapacityArray) ToOutput(ctx context.Context) pulumix.Output[[]*PublicIpPoolCapacity] {
	return pulumix.Output[[]*PublicIpPoolCapacity]{
		OutputState: i.ToPublicIpPoolCapacityArrayOutputWithContext(ctx).OutputState,
	}
}

// PublicIpPoolCapacityMapInput is an input type that accepts PublicIpPoolCapacityMap and PublicIpPoolCapacityMapOutput values.
// You can construct a concrete instance of `PublicIpPoolCapacityMapInput` via:
//
//	PublicIpPoolCapacityMap{ "key": PublicIpPoolCapacityArgs{...} }
type PublicIpPoolCapacityMapInput interface {
	pulumi.Input

	ToPublicIpPoolCapacityMapOutput() PublicIpPoolCapacityMapOutput
	ToPublicIpPoolCapacityMapOutputWithContext(context.Context) PublicIpPoolCapacityMapOutput
}

type PublicIpPoolCapacityMap map[string]PublicIpPoolCapacityInput

func (PublicIpPoolCapacityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicIpPoolCapacity)(nil)).Elem()
}

func (i PublicIpPoolCapacityMap) ToPublicIpPoolCapacityMapOutput() PublicIpPoolCapacityMapOutput {
	return i.ToPublicIpPoolCapacityMapOutputWithContext(context.Background())
}

func (i PublicIpPoolCapacityMap) ToPublicIpPoolCapacityMapOutputWithContext(ctx context.Context) PublicIpPoolCapacityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIpPoolCapacityMapOutput)
}

func (i PublicIpPoolCapacityMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*PublicIpPoolCapacity] {
	return pulumix.Output[map[string]*PublicIpPoolCapacity]{
		OutputState: i.ToPublicIpPoolCapacityMapOutputWithContext(ctx).OutputState,
	}
}

type PublicIpPoolCapacityOutput struct{ *pulumi.OutputState }

func (PublicIpPoolCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIpPoolCapacity)(nil)).Elem()
}

func (o PublicIpPoolCapacityOutput) ToPublicIpPoolCapacityOutput() PublicIpPoolCapacityOutput {
	return o
}

func (o PublicIpPoolCapacityOutput) ToPublicIpPoolCapacityOutputWithContext(ctx context.Context) PublicIpPoolCapacityOutput {
	return o
}

func (o PublicIpPoolCapacityOutput) ToOutput(ctx context.Context) pulumix.Output[*PublicIpPoolCapacity] {
	return pulumix.Output[*PublicIpPoolCapacity]{
		OutputState: o.OutputState,
	}
}

// The OCID of the Byoip Range Id object to which the cidr block belongs.
func (o PublicIpPoolCapacityOutput) ByoipId() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicIpPoolCapacity) pulumi.StringOutput { return v.ByoipId }).(pulumi.StringOutput)
}

// The CIDR IP address range to be added to the Public Ip Pool. Example: `10.0.1.0/24`
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o PublicIpPoolCapacityOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicIpPoolCapacity) pulumi.StringOutput { return v.CidrBlock }).(pulumi.StringOutput)
}

// The OCID of the pool object created by the current tenancy
func (o PublicIpPoolCapacityOutput) PublicIpPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicIpPoolCapacity) pulumi.StringOutput { return v.PublicIpPoolId }).(pulumi.StringOutput)
}

type PublicIpPoolCapacityArrayOutput struct{ *pulumi.OutputState }

func (PublicIpPoolCapacityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicIpPoolCapacity)(nil)).Elem()
}

func (o PublicIpPoolCapacityArrayOutput) ToPublicIpPoolCapacityArrayOutput() PublicIpPoolCapacityArrayOutput {
	return o
}

func (o PublicIpPoolCapacityArrayOutput) ToPublicIpPoolCapacityArrayOutputWithContext(ctx context.Context) PublicIpPoolCapacityArrayOutput {
	return o
}

func (o PublicIpPoolCapacityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*PublicIpPoolCapacity] {
	return pulumix.Output[[]*PublicIpPoolCapacity]{
		OutputState: o.OutputState,
	}
}

func (o PublicIpPoolCapacityArrayOutput) Index(i pulumi.IntInput) PublicIpPoolCapacityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PublicIpPoolCapacity {
		return vs[0].([]*PublicIpPoolCapacity)[vs[1].(int)]
	}).(PublicIpPoolCapacityOutput)
}

type PublicIpPoolCapacityMapOutput struct{ *pulumi.OutputState }

func (PublicIpPoolCapacityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicIpPoolCapacity)(nil)).Elem()
}

func (o PublicIpPoolCapacityMapOutput) ToPublicIpPoolCapacityMapOutput() PublicIpPoolCapacityMapOutput {
	return o
}

func (o PublicIpPoolCapacityMapOutput) ToPublicIpPoolCapacityMapOutputWithContext(ctx context.Context) PublicIpPoolCapacityMapOutput {
	return o
}

func (o PublicIpPoolCapacityMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*PublicIpPoolCapacity] {
	return pulumix.Output[map[string]*PublicIpPoolCapacity]{
		OutputState: o.OutputState,
	}
}

func (o PublicIpPoolCapacityMapOutput) MapIndex(k pulumi.StringInput) PublicIpPoolCapacityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PublicIpPoolCapacity {
		return vs[0].(map[string]*PublicIpPoolCapacity)[vs[1].(string)]
	}).(PublicIpPoolCapacityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublicIpPoolCapacityInput)(nil)).Elem(), &PublicIpPoolCapacity{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicIpPoolCapacityArrayInput)(nil)).Elem(), PublicIpPoolCapacityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicIpPoolCapacityMapInput)(nil)).Elem(), PublicIpPoolCapacityMap{})
	pulumi.RegisterOutputType(PublicIpPoolCapacityOutput{})
	pulumi.RegisterOutputType(PublicIpPoolCapacityArrayOutput{})
	pulumi.RegisterOutputType(PublicIpPoolCapacityMapOutput{})
}
