// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Remote Peering Connection resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new remote peering connection (RPC) for the specified DRG.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.NewRemotePeeringConnection(ctx, "test_remote_peering_connection", &Core.RemotePeeringConnectionArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				DrgId:         pulumi.Any(testDrg.Id),
//				DefinedTags: pulumi.Map{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				DisplayName: pulumi.Any(remotePeeringConnectionDisplayName),
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//				PeerId:         pulumi.Any(testRemotePeeringConnection2.Id),
//				PeerRegionName: pulumi.Any(remotePeeringConnectionPeerRegionName),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// RemotePeeringConnections can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Core/remotePeeringConnection:RemotePeeringConnection test_remote_peering_connection "id"
// ```
type RemotePeeringConnection struct {
	pulumi.CustomResourceState

	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the RPC.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG the RPC belongs to.
	DrgId pulumi.StringOutput `pulumi:"drgId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
	IsCrossTenancyPeering pulumi.BoolOutput `pulumi:"isCrossTenancyPeering"`
	// The OCID of the RPC you want to peer with.
	PeerId pulumi.StringOutput `pulumi:"peerId"`
	// The name of the region that contains the RPC you want to peer with.  Example: `us-ashburn-1`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	PeerRegionName pulumi.StringOutput `pulumi:"peerRegionName"`
	// If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC's tenancy.
	PeerTenancyId pulumi.StringOutput `pulumi:"peerTenancyId"`
	// Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the RPC at the other end of the peering has been deleted.
	PeeringStatus pulumi.StringOutput `pulumi:"peeringStatus"`
	// The RPC's current lifecycle state.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewRemotePeeringConnection registers a new resource with the given unique name, arguments, and options.
func NewRemotePeeringConnection(ctx *pulumi.Context,
	name string, args *RemotePeeringConnectionArgs, opts ...pulumi.ResourceOption) (*RemotePeeringConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DrgId == nil {
		return nil, errors.New("invalid value for required argument 'DrgId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RemotePeeringConnection
	err := ctx.RegisterResource("oci:Core/remotePeeringConnection:RemotePeeringConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemotePeeringConnection gets an existing RemotePeeringConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemotePeeringConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemotePeeringConnectionState, opts ...pulumi.ResourceOption) (*RemotePeeringConnection, error) {
	var resource RemotePeeringConnection
	err := ctx.ReadResource("oci:Core/remotePeeringConnection:RemotePeeringConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemotePeeringConnection resources.
type remotePeeringConnectionState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the RPC.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG the RPC belongs to.
	DrgId *string `pulumi:"drgId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
	IsCrossTenancyPeering *bool `pulumi:"isCrossTenancyPeering"`
	// The OCID of the RPC you want to peer with.
	PeerId *string `pulumi:"peerId"`
	// The name of the region that contains the RPC you want to peer with.  Example: `us-ashburn-1`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	PeerRegionName *string `pulumi:"peerRegionName"`
	// If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC's tenancy.
	PeerTenancyId *string `pulumi:"peerTenancyId"`
	// Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the RPC at the other end of the peering has been deleted.
	PeeringStatus *string `pulumi:"peeringStatus"`
	// The RPC's current lifecycle state.
	State *string `pulumi:"state"`
	// The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type RemotePeeringConnectionState struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the RPC.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG the RPC belongs to.
	DrgId pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
	IsCrossTenancyPeering pulumi.BoolPtrInput
	// The OCID of the RPC you want to peer with.
	PeerId pulumi.StringPtrInput
	// The name of the region that contains the RPC you want to peer with.  Example: `us-ashburn-1`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	PeerRegionName pulumi.StringPtrInput
	// If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC's tenancy.
	PeerTenancyId pulumi.StringPtrInput
	// Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the RPC at the other end of the peering has been deleted.
	PeeringStatus pulumi.StringPtrInput
	// The RPC's current lifecycle state.
	State pulumi.StringPtrInput
	// The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (RemotePeeringConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*remotePeeringConnectionState)(nil)).Elem()
}

type remotePeeringConnectionArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the RPC.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG the RPC belongs to.
	DrgId string `pulumi:"drgId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the RPC you want to peer with.
	PeerId *string `pulumi:"peerId"`
	// The name of the region that contains the RPC you want to peer with.  Example: `us-ashburn-1`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	PeerRegionName *string `pulumi:"peerRegionName"`
}

// The set of arguments for constructing a RemotePeeringConnection resource.
type RemotePeeringConnectionArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the RPC.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG the RPC belongs to.
	DrgId pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The OCID of the RPC you want to peer with.
	PeerId pulumi.StringPtrInput
	// The name of the region that contains the RPC you want to peer with.  Example: `us-ashburn-1`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	PeerRegionName pulumi.StringPtrInput
}

func (RemotePeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remotePeeringConnectionArgs)(nil)).Elem()
}

type RemotePeeringConnectionInput interface {
	pulumi.Input

	ToRemotePeeringConnectionOutput() RemotePeeringConnectionOutput
	ToRemotePeeringConnectionOutputWithContext(ctx context.Context) RemotePeeringConnectionOutput
}

func (*RemotePeeringConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**RemotePeeringConnection)(nil)).Elem()
}

func (i *RemotePeeringConnection) ToRemotePeeringConnectionOutput() RemotePeeringConnectionOutput {
	return i.ToRemotePeeringConnectionOutputWithContext(context.Background())
}

func (i *RemotePeeringConnection) ToRemotePeeringConnectionOutputWithContext(ctx context.Context) RemotePeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemotePeeringConnectionOutput)
}

// RemotePeeringConnectionArrayInput is an input type that accepts RemotePeeringConnectionArray and RemotePeeringConnectionArrayOutput values.
// You can construct a concrete instance of `RemotePeeringConnectionArrayInput` via:
//
//	RemotePeeringConnectionArray{ RemotePeeringConnectionArgs{...} }
type RemotePeeringConnectionArrayInput interface {
	pulumi.Input

	ToRemotePeeringConnectionArrayOutput() RemotePeeringConnectionArrayOutput
	ToRemotePeeringConnectionArrayOutputWithContext(context.Context) RemotePeeringConnectionArrayOutput
}

type RemotePeeringConnectionArray []RemotePeeringConnectionInput

func (RemotePeeringConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemotePeeringConnection)(nil)).Elem()
}

func (i RemotePeeringConnectionArray) ToRemotePeeringConnectionArrayOutput() RemotePeeringConnectionArrayOutput {
	return i.ToRemotePeeringConnectionArrayOutputWithContext(context.Background())
}

func (i RemotePeeringConnectionArray) ToRemotePeeringConnectionArrayOutputWithContext(ctx context.Context) RemotePeeringConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemotePeeringConnectionArrayOutput)
}

// RemotePeeringConnectionMapInput is an input type that accepts RemotePeeringConnectionMap and RemotePeeringConnectionMapOutput values.
// You can construct a concrete instance of `RemotePeeringConnectionMapInput` via:
//
//	RemotePeeringConnectionMap{ "key": RemotePeeringConnectionArgs{...} }
type RemotePeeringConnectionMapInput interface {
	pulumi.Input

	ToRemotePeeringConnectionMapOutput() RemotePeeringConnectionMapOutput
	ToRemotePeeringConnectionMapOutputWithContext(context.Context) RemotePeeringConnectionMapOutput
}

type RemotePeeringConnectionMap map[string]RemotePeeringConnectionInput

func (RemotePeeringConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemotePeeringConnection)(nil)).Elem()
}

func (i RemotePeeringConnectionMap) ToRemotePeeringConnectionMapOutput() RemotePeeringConnectionMapOutput {
	return i.ToRemotePeeringConnectionMapOutputWithContext(context.Background())
}

func (i RemotePeeringConnectionMap) ToRemotePeeringConnectionMapOutputWithContext(ctx context.Context) RemotePeeringConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemotePeeringConnectionMapOutput)
}

type RemotePeeringConnectionOutput struct{ *pulumi.OutputState }

func (RemotePeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemotePeeringConnection)(nil)).Elem()
}

func (o RemotePeeringConnectionOutput) ToRemotePeeringConnectionOutput() RemotePeeringConnectionOutput {
	return o
}

func (o RemotePeeringConnectionOutput) ToRemotePeeringConnectionOutputWithContext(ctx context.Context) RemotePeeringConnectionOutput {
	return o
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the RPC.
func (o RemotePeeringConnectionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o RemotePeeringConnectionOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o RemotePeeringConnectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG the RPC belongs to.
func (o RemotePeeringConnectionOutput) DrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.StringOutput { return v.DrgId }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o RemotePeeringConnectionOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
func (o RemotePeeringConnectionOutput) IsCrossTenancyPeering() pulumi.BoolOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.BoolOutput { return v.IsCrossTenancyPeering }).(pulumi.BoolOutput)
}

// The OCID of the RPC you want to peer with.
func (o RemotePeeringConnectionOutput) PeerId() pulumi.StringOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.StringOutput { return v.PeerId }).(pulumi.StringOutput)
}

// The name of the region that contains the RPC you want to peer with.  Example: `us-ashburn-1`
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o RemotePeeringConnectionOutput) PeerRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.StringOutput { return v.PeerRegionName }).(pulumi.StringOutput)
}

// If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC's tenancy.
func (o RemotePeeringConnectionOutput) PeerTenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.StringOutput { return v.PeerTenancyId }).(pulumi.StringOutput)
}

// Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the RPC at the other end of the peering has been deleted.
func (o RemotePeeringConnectionOutput) PeeringStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.StringOutput { return v.PeeringStatus }).(pulumi.StringOutput)
}

// The RPC's current lifecycle state.
func (o RemotePeeringConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o RemotePeeringConnectionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *RemotePeeringConnection) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type RemotePeeringConnectionArrayOutput struct{ *pulumi.OutputState }

func (RemotePeeringConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemotePeeringConnection)(nil)).Elem()
}

func (o RemotePeeringConnectionArrayOutput) ToRemotePeeringConnectionArrayOutput() RemotePeeringConnectionArrayOutput {
	return o
}

func (o RemotePeeringConnectionArrayOutput) ToRemotePeeringConnectionArrayOutputWithContext(ctx context.Context) RemotePeeringConnectionArrayOutput {
	return o
}

func (o RemotePeeringConnectionArrayOutput) Index(i pulumi.IntInput) RemotePeeringConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RemotePeeringConnection {
		return vs[0].([]*RemotePeeringConnection)[vs[1].(int)]
	}).(RemotePeeringConnectionOutput)
}

type RemotePeeringConnectionMapOutput struct{ *pulumi.OutputState }

func (RemotePeeringConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemotePeeringConnection)(nil)).Elem()
}

func (o RemotePeeringConnectionMapOutput) ToRemotePeeringConnectionMapOutput() RemotePeeringConnectionMapOutput {
	return o
}

func (o RemotePeeringConnectionMapOutput) ToRemotePeeringConnectionMapOutputWithContext(ctx context.Context) RemotePeeringConnectionMapOutput {
	return o
}

func (o RemotePeeringConnectionMapOutput) MapIndex(k pulumi.StringInput) RemotePeeringConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RemotePeeringConnection {
		return vs[0].(map[string]*RemotePeeringConnection)[vs[1].(string)]
	}).(RemotePeeringConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RemotePeeringConnectionInput)(nil)).Elem(), &RemotePeeringConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemotePeeringConnectionArrayInput)(nil)).Elem(), RemotePeeringConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemotePeeringConnectionMapInput)(nil)).Elem(), RemotePeeringConnectionMap{})
	pulumi.RegisterOutputType(RemotePeeringConnectionOutput{})
	pulumi.RegisterOutputType(RemotePeeringConnectionArrayOutput{})
	pulumi.RegisterOutputType(RemotePeeringConnectionMapOutput{})
}
