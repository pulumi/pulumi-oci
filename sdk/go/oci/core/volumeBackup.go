// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Volume Backup resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new backup of the specified volume. For general information about volume backups,
// see [Overview of Block Volume Service Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumebackups.htm)
//
// When the request is received, the backup object is in a REQUEST_RECEIVED state.
// When the data is imaged, it goes into a CREATING state.
// After the backup is fully uploaded to the cloud, it goes into an AVAILABLE state.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.NewVolumeBackup(ctx, "testVolumeBackup", &Core.VolumeBackupArgs{
//				VolumeId: pulumi.Any(oci_core_volume.Test_volume.Id),
//				DefinedTags: pulumi.Map{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				DisplayName: pulumi.Any(_var.Volume_backup_display_name),
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//				KmsKeyId: pulumi.Any(oci_kms_key.Test_key.Id),
//				Type:     pulumi.Any(_var.Volume_backup_type),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VolumeBackups can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Core/volumeBackup:VolumeBackup test_volume_backup "id"
//
// ```
type VolumeBackup struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment that contains the volume backup.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
	ExpirationTime pulumi.StringOutput `pulumi:"expirationTime"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// The size of the volume, in GBs.
	SizeInGbs pulumi.StringOutput `pulumi:"sizeInGbs"`
	// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
	//
	// Deprecated: The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
	SizeInMbs pulumi.StringOutput `pulumi:"sizeInMbs"`
	// Details of the volume backup source in the cloud.
	SourceDetails VolumeBackupSourceDetailsPtrOutput `pulumi:"sourceDetails"`
	// Specifies whether the backup was created manually, or via scheduled backup policy.
	SourceType pulumi.StringOutput `pulumi:"sourceType"`
	// The OCID of the source volume backup.
	SourceVolumeBackupId pulumi.StringOutput `pulumi:"sourceVolumeBackupId"`
	// The current state of a volume backup.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
	TimeRequestReceived pulumi.StringOutput `pulumi:"timeRequestReceived"`
	// The type of backup to create. If omitted, defaults to INCREMENTAL. Supported values are 'FULL' or 'INCREMENTAL'.
	Type pulumi.StringOutput `pulumi:"type"`
	// The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
	UniqueSizeInGbs pulumi.StringOutput `pulumi:"uniqueSizeInGbs"`
	// The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
	//
	// Deprecated: The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead.
	UniqueSizeInMbs pulumi.StringOutput `pulumi:"uniqueSizeInMbs"`
	// The OCID of the volume that needs to be backed up.**Note: To create the resource either `volumeId` or `sourceDetails` is required to be set.
	VolumeId pulumi.StringOutput `pulumi:"volumeId"`
}

// NewVolumeBackup registers a new resource with the given unique name, arguments, and options.
func NewVolumeBackup(ctx *pulumi.Context,
	name string, args *VolumeBackupArgs, opts ...pulumi.ResourceOption) (*VolumeBackup, error) {
	if args == nil {
		args = &VolumeBackupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VolumeBackup
	err := ctx.RegisterResource("oci:Core/volumeBackup:VolumeBackup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVolumeBackup gets an existing VolumeBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVolumeBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VolumeBackupState, opts ...pulumi.ResourceOption) (*VolumeBackup, error) {
	var resource VolumeBackup
	err := ctx.ReadResource("oci:Core/volumeBackup:VolumeBackup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VolumeBackup resources.
type volumeBackupState struct {
	// (Updatable) The OCID of the compartment that contains the volume backup.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
	ExpirationTime *string `pulumi:"expirationTime"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The size of the volume, in GBs.
	SizeInGbs *string `pulumi:"sizeInGbs"`
	// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
	//
	// Deprecated: The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
	SizeInMbs *string `pulumi:"sizeInMbs"`
	// Details of the volume backup source in the cloud.
	SourceDetails *VolumeBackupSourceDetails `pulumi:"sourceDetails"`
	// Specifies whether the backup was created manually, or via scheduled backup policy.
	SourceType *string `pulumi:"sourceType"`
	// The OCID of the source volume backup.
	SourceVolumeBackupId *string `pulumi:"sourceVolumeBackupId"`
	// The current state of a volume backup.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
	TimeRequestReceived *string `pulumi:"timeRequestReceived"`
	// The type of backup to create. If omitted, defaults to INCREMENTAL. Supported values are 'FULL' or 'INCREMENTAL'.
	Type *string `pulumi:"type"`
	// The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
	UniqueSizeInGbs *string `pulumi:"uniqueSizeInGbs"`
	// The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
	//
	// Deprecated: The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead.
	UniqueSizeInMbs *string `pulumi:"uniqueSizeInMbs"`
	// The OCID of the volume that needs to be backed up.**Note: To create the resource either `volumeId` or `sourceDetails` is required to be set.
	VolumeId *string `pulumi:"volumeId"`
}

type VolumeBackupState struct {
	// (Updatable) The OCID of the compartment that contains the volume backup.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
	ExpirationTime pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
	KmsKeyId pulumi.StringPtrInput
	// The size of the volume, in GBs.
	SizeInGbs pulumi.StringPtrInput
	// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
	//
	// Deprecated: The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
	SizeInMbs pulumi.StringPtrInput
	// Details of the volume backup source in the cloud.
	SourceDetails VolumeBackupSourceDetailsPtrInput
	// Specifies whether the backup was created manually, or via scheduled backup policy.
	SourceType pulumi.StringPtrInput
	// The OCID of the source volume backup.
	SourceVolumeBackupId pulumi.StringPtrInput
	// The current state of a volume backup.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	SystemTags pulumi.MapInput
	// The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
	TimeRequestReceived pulumi.StringPtrInput
	// The type of backup to create. If omitted, defaults to INCREMENTAL. Supported values are 'FULL' or 'INCREMENTAL'.
	Type pulumi.StringPtrInput
	// The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
	UniqueSizeInGbs pulumi.StringPtrInput
	// The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
	//
	// Deprecated: The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead.
	UniqueSizeInMbs pulumi.StringPtrInput
	// The OCID of the volume that needs to be backed up.**Note: To create the resource either `volumeId` or `sourceDetails` is required to be set.
	VolumeId pulumi.StringPtrInput
}

func (VolumeBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeBackupState)(nil)).Elem()
}

type volumeBackupArgs struct {
	// (Updatable) The OCID of the compartment that contains the volume backup.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Details of the volume backup source in the cloud.
	SourceDetails *VolumeBackupSourceDetails `pulumi:"sourceDetails"`
	// The type of backup to create. If omitted, defaults to INCREMENTAL. Supported values are 'FULL' or 'INCREMENTAL'.
	Type *string `pulumi:"type"`
	// The OCID of the volume that needs to be backed up.**Note: To create the resource either `volumeId` or `sourceDetails` is required to be set.
	VolumeId *string `pulumi:"volumeId"`
}

// The set of arguments for constructing a VolumeBackup resource.
type VolumeBackupArgs struct {
	// (Updatable) The OCID of the compartment that contains the volume backup.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
	KmsKeyId pulumi.StringPtrInput
	// Details of the volume backup source in the cloud.
	SourceDetails VolumeBackupSourceDetailsPtrInput
	// The type of backup to create. If omitted, defaults to INCREMENTAL. Supported values are 'FULL' or 'INCREMENTAL'.
	Type pulumi.StringPtrInput
	// The OCID of the volume that needs to be backed up.**Note: To create the resource either `volumeId` or `sourceDetails` is required to be set.
	VolumeId pulumi.StringPtrInput
}

func (VolumeBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeBackupArgs)(nil)).Elem()
}

type VolumeBackupInput interface {
	pulumi.Input

	ToVolumeBackupOutput() VolumeBackupOutput
	ToVolumeBackupOutputWithContext(ctx context.Context) VolumeBackupOutput
}

func (*VolumeBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeBackup)(nil)).Elem()
}

func (i *VolumeBackup) ToVolumeBackupOutput() VolumeBackupOutput {
	return i.ToVolumeBackupOutputWithContext(context.Background())
}

func (i *VolumeBackup) ToVolumeBackupOutputWithContext(ctx context.Context) VolumeBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeBackupOutput)
}

// VolumeBackupArrayInput is an input type that accepts VolumeBackupArray and VolumeBackupArrayOutput values.
// You can construct a concrete instance of `VolumeBackupArrayInput` via:
//
//	VolumeBackupArray{ VolumeBackupArgs{...} }
type VolumeBackupArrayInput interface {
	pulumi.Input

	ToVolumeBackupArrayOutput() VolumeBackupArrayOutput
	ToVolumeBackupArrayOutputWithContext(context.Context) VolumeBackupArrayOutput
}

type VolumeBackupArray []VolumeBackupInput

func (VolumeBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VolumeBackup)(nil)).Elem()
}

func (i VolumeBackupArray) ToVolumeBackupArrayOutput() VolumeBackupArrayOutput {
	return i.ToVolumeBackupArrayOutputWithContext(context.Background())
}

func (i VolumeBackupArray) ToVolumeBackupArrayOutputWithContext(ctx context.Context) VolumeBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeBackupArrayOutput)
}

// VolumeBackupMapInput is an input type that accepts VolumeBackupMap and VolumeBackupMapOutput values.
// You can construct a concrete instance of `VolumeBackupMapInput` via:
//
//	VolumeBackupMap{ "key": VolumeBackupArgs{...} }
type VolumeBackupMapInput interface {
	pulumi.Input

	ToVolumeBackupMapOutput() VolumeBackupMapOutput
	ToVolumeBackupMapOutputWithContext(context.Context) VolumeBackupMapOutput
}

type VolumeBackupMap map[string]VolumeBackupInput

func (VolumeBackupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VolumeBackup)(nil)).Elem()
}

func (i VolumeBackupMap) ToVolumeBackupMapOutput() VolumeBackupMapOutput {
	return i.ToVolumeBackupMapOutputWithContext(context.Background())
}

func (i VolumeBackupMap) ToVolumeBackupMapOutputWithContext(ctx context.Context) VolumeBackupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeBackupMapOutput)
}

type VolumeBackupOutput struct{ *pulumi.OutputState }

func (VolumeBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeBackup)(nil)).Elem()
}

func (o VolumeBackupOutput) ToVolumeBackupOutput() VolumeBackupOutput {
	return o
}

func (o VolumeBackupOutput) ToVolumeBackupOutputWithContext(ctx context.Context) VolumeBackupOutput {
	return o
}

// (Updatable) The OCID of the compartment that contains the volume backup.
func (o VolumeBackupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o VolumeBackupOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o VolumeBackupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
func (o VolumeBackupOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.ExpirationTime }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o VolumeBackupOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the KMS key in the destination region which will be the master encryption key for the copied volume backup.
func (o VolumeBackupOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The size of the volume, in GBs.
func (o VolumeBackupOutput) SizeInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.SizeInGbs }).(pulumi.StringOutput)
}

// The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
//
// Deprecated: The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
func (o VolumeBackupOutput) SizeInMbs() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.SizeInMbs }).(pulumi.StringOutput)
}

// Details of the volume backup source in the cloud.
func (o VolumeBackupOutput) SourceDetails() VolumeBackupSourceDetailsPtrOutput {
	return o.ApplyT(func(v *VolumeBackup) VolumeBackupSourceDetailsPtrOutput { return v.SourceDetails }).(VolumeBackupSourceDetailsPtrOutput)
}

// Specifies whether the backup was created manually, or via scheduled backup policy.
func (o VolumeBackupOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

// The OCID of the source volume backup.
func (o VolumeBackupOutput) SourceVolumeBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.SourceVolumeBackupId }).(pulumi.StringOutput)
}

// The current state of a volume backup.
func (o VolumeBackupOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o VolumeBackupOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o VolumeBackupOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
func (o VolumeBackupOutput) TimeRequestReceived() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.TimeRequestReceived }).(pulumi.StringOutput)
}

// The type of backup to create. If omitted, defaults to INCREMENTAL. Supported values are 'FULL' or 'INCREMENTAL'.
func (o VolumeBackupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
func (o VolumeBackupOutput) UniqueSizeInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.UniqueSizeInGbs }).(pulumi.StringOutput)
}

// The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
//
// Deprecated: The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead.
func (o VolumeBackupOutput) UniqueSizeInMbs() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.UniqueSizeInMbs }).(pulumi.StringOutput)
}

// The OCID of the volume that needs to be backed up.**Note: To create the resource either `volumeId` or `sourceDetails` is required to be set.
func (o VolumeBackupOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeBackup) pulumi.StringOutput { return v.VolumeId }).(pulumi.StringOutput)
}

type VolumeBackupArrayOutput struct{ *pulumi.OutputState }

func (VolumeBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VolumeBackup)(nil)).Elem()
}

func (o VolumeBackupArrayOutput) ToVolumeBackupArrayOutput() VolumeBackupArrayOutput {
	return o
}

func (o VolumeBackupArrayOutput) ToVolumeBackupArrayOutputWithContext(ctx context.Context) VolumeBackupArrayOutput {
	return o
}

func (o VolumeBackupArrayOutput) Index(i pulumi.IntInput) VolumeBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VolumeBackup {
		return vs[0].([]*VolumeBackup)[vs[1].(int)]
	}).(VolumeBackupOutput)
}

type VolumeBackupMapOutput struct{ *pulumi.OutputState }

func (VolumeBackupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VolumeBackup)(nil)).Elem()
}

func (o VolumeBackupMapOutput) ToVolumeBackupMapOutput() VolumeBackupMapOutput {
	return o
}

func (o VolumeBackupMapOutput) ToVolumeBackupMapOutputWithContext(ctx context.Context) VolumeBackupMapOutput {
	return o
}

func (o VolumeBackupMapOutput) MapIndex(k pulumi.StringInput) VolumeBackupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VolumeBackup {
		return vs[0].(map[string]*VolumeBackup)[vs[1].(string)]
	}).(VolumeBackupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeBackupInput)(nil)).Elem(), &VolumeBackup{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeBackupArrayInput)(nil)).Elem(), VolumeBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeBackupMapInput)(nil)).Elem(), VolumeBackupMap{})
	pulumi.RegisterOutputType(VolumeBackupOutput{})
	pulumi.RegisterOutputType(VolumeBackupArrayOutput{})
	pulumi.RegisterOutputType(VolumeBackupMapOutput{})
}
