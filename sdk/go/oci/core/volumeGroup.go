// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.NewVolumeGroup(ctx, "test_volume_group", &core.VolumeGroupArgs{
//				AvailabilityDomain: pulumi.Any(volumeGroupAvailabilityDomain),
//				CompartmentId:      pulumi.Any(compartmentId),
//				SourceDetails: &core.VolumeGroupSourceDetailsArgs{
//					Type: pulumi.String("volumeIds"),
//					VolumeIds: pulumi.StringArray{
//						volumeGroupSourceId,
//					},
//				},
//				BackupPolicyId:          pulumi.Any(testVolumeBackupPolicies.VolumeBackupPolicies[0].Id),
//				ClusterPlacementGroupId: pulumi.Any(testGroup.Id),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				DisplayName: pulumi.Any(volumeGroupDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				VolumeGroupReplicas: core.VolumeGroupVolumeGroupReplicaArray{
//					&core.VolumeGroupVolumeGroupReplicaArgs{
//						AvailabilityDomain: pulumi.Any(volumeGroupVolumeGroupReplicasAvailabilityDomain),
//						DisplayName:        pulumi.Any(volumeGroupVolumeGroupReplicasDisplayName),
//						XrrKmsKeyId:        pulumi.Any(testKey.Id),
//					},
//				},
//				VolumeIds: pulumi.StringArray{
//					volumeGroupSourceId,
//				},
//				XrcKmsKeyId: pulumi.Any(testKey.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VolumeGroups can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Core/volumeGroup:VolumeGroup test_volume_group "id"
// ```
type VolumeGroup struct {
	pulumi.CustomResourceState

	// The availability domain of the volume group.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
	//
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId pulumi.StringOutput `pulumi:"backupPolicyId"`
	// The clusterPlacementGroup Id of the volume group for volume group placement.
	ClusterPlacementGroupId pulumi.StringOutput `pulumi:"clusterPlacementGroupId"`
	// (Updatable) The OCID of the compartment that contains the volume group.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
	IsHydrated            pulumi.BoolOutput    `pulumi:"isHydrated"`
	PreserveVolumeReplica pulumi.BoolPtrOutput `pulumi:"preserveVolumeReplica"`
	// The aggregate size of the volume group in GBs.
	SizeInGbs pulumi.StringOutput `pulumi:"sizeInGbs"`
	// The aggregate size of the volume group in MBs.
	SizeInMbs pulumi.StringOutput `pulumi:"sizeInMbs"`
	// Specifies the source for a volume group.
	SourceDetails VolumeGroupSourceDetailsOutput `pulumi:"sourceDetails"`
	// The current state of a volume group.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
	VolumeGroupReplicas         VolumeGroupVolumeGroupReplicaArrayOutput `pulumi:"volumeGroupReplicas"`
	VolumeGroupReplicasDeletion pulumi.BoolPtrOutput                     `pulumi:"volumeGroupReplicasDeletion"`
	// (Updatable) Use this for update operation only. This field is not supported during creation. For create use `volumeIds` under `sourceDetails`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VolumeIds pulumi.StringArrayOutput `pulumi:"volumeIds"`
	// The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
	XrcKmsKeyId pulumi.StringOutput `pulumi:"xrcKmsKeyId"`
}

// NewVolumeGroup registers a new resource with the given unique name, arguments, and options.
func NewVolumeGroup(ctx *pulumi.Context,
	name string, args *VolumeGroupArgs, opts ...pulumi.ResourceOption) (*VolumeGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityDomain == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityDomain'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.SourceDetails == nil {
		return nil, errors.New("invalid value for required argument 'SourceDetails'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VolumeGroup
	err := ctx.RegisterResource("oci:Core/volumeGroup:VolumeGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVolumeGroup gets an existing VolumeGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVolumeGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VolumeGroupState, opts ...pulumi.ResourceOption) (*VolumeGroup, error) {
	var resource VolumeGroup
	err := ctx.ReadResource("oci:Core/volumeGroup:VolumeGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VolumeGroup resources.
type volumeGroupState struct {
	// The availability domain of the volume group.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
	//
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId *string `pulumi:"backupPolicyId"`
	// The clusterPlacementGroup Id of the volume group for volume group placement.
	ClusterPlacementGroupId *string `pulumi:"clusterPlacementGroupId"`
	// (Updatable) The OCID of the compartment that contains the volume group.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
	IsHydrated            *bool `pulumi:"isHydrated"`
	PreserveVolumeReplica *bool `pulumi:"preserveVolumeReplica"`
	// The aggregate size of the volume group in GBs.
	SizeInGbs *string `pulumi:"sizeInGbs"`
	// The aggregate size of the volume group in MBs.
	SizeInMbs *string `pulumi:"sizeInMbs"`
	// Specifies the source for a volume group.
	SourceDetails *VolumeGroupSourceDetails `pulumi:"sourceDetails"`
	// The current state of a volume group.
	State *string `pulumi:"state"`
	// The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
	VolumeGroupReplicas         []VolumeGroupVolumeGroupReplica `pulumi:"volumeGroupReplicas"`
	VolumeGroupReplicasDeletion *bool                           `pulumi:"volumeGroupReplicasDeletion"`
	// (Updatable) Use this for update operation only. This field is not supported during creation. For create use `volumeIds` under `sourceDetails`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VolumeIds []string `pulumi:"volumeIds"`
	// The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
	XrcKmsKeyId *string `pulumi:"xrcKmsKeyId"`
}

type VolumeGroupState struct {
	// The availability domain of the volume group.
	AvailabilityDomain pulumi.StringPtrInput
	// If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
	//
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId pulumi.StringPtrInput
	// The clusterPlacementGroup Id of the volume group for volume group placement.
	ClusterPlacementGroupId pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment that contains the volume group.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
	IsHydrated            pulumi.BoolPtrInput
	PreserveVolumeReplica pulumi.BoolPtrInput
	// The aggregate size of the volume group in GBs.
	SizeInGbs pulumi.StringPtrInput
	// The aggregate size of the volume group in MBs.
	SizeInMbs pulumi.StringPtrInput
	// Specifies the source for a volume group.
	SourceDetails VolumeGroupSourceDetailsPtrInput
	// The current state of a volume group.
	State pulumi.StringPtrInput
	// The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
	VolumeGroupReplicas         VolumeGroupVolumeGroupReplicaArrayInput
	VolumeGroupReplicasDeletion pulumi.BoolPtrInput
	// (Updatable) Use this for update operation only. This field is not supported during creation. For create use `volumeIds` under `sourceDetails`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VolumeIds pulumi.StringArrayInput
	// The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
	XrcKmsKeyId pulumi.StringPtrInput
}

func (VolumeGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeGroupState)(nil)).Elem()
}

type volumeGroupArgs struct {
	// The availability domain of the volume group.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
	//
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId *string `pulumi:"backupPolicyId"`
	// The clusterPlacementGroup Id of the volume group for volume group placement.
	ClusterPlacementGroupId *string `pulumi:"clusterPlacementGroupId"`
	// (Updatable) The OCID of the compartment that contains the volume group.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags          map[string]string `pulumi:"freeformTags"`
	PreserveVolumeReplica *bool             `pulumi:"preserveVolumeReplica"`
	// Specifies the source for a volume group.
	SourceDetails VolumeGroupSourceDetails `pulumi:"sourceDetails"`
	// (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
	VolumeGroupReplicas         []VolumeGroupVolumeGroupReplica `pulumi:"volumeGroupReplicas"`
	VolumeGroupReplicasDeletion *bool                           `pulumi:"volumeGroupReplicasDeletion"`
	// (Updatable) Use this for update operation only. This field is not supported during creation. For create use `volumeIds` under `sourceDetails`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VolumeIds []string `pulumi:"volumeIds"`
	// The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
	XrcKmsKeyId *string `pulumi:"xrcKmsKeyId"`
}

// The set of arguments for constructing a VolumeGroup resource.
type VolumeGroupArgs struct {
	// The availability domain of the volume group.
	AvailabilityDomain pulumi.StringInput
	// If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
	//
	// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
	BackupPolicyId pulumi.StringPtrInput
	// The clusterPlacementGroup Id of the volume group for volume group placement.
	ClusterPlacementGroupId pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment that contains the volume group.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags          pulumi.StringMapInput
	PreserveVolumeReplica pulumi.BoolPtrInput
	// Specifies the source for a volume group.
	SourceDetails VolumeGroupSourceDetailsInput
	// (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
	VolumeGroupReplicas         VolumeGroupVolumeGroupReplicaArrayInput
	VolumeGroupReplicasDeletion pulumi.BoolPtrInput
	// (Updatable) Use this for update operation only. This field is not supported during creation. For create use `volumeIds` under `sourceDetails`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VolumeIds pulumi.StringArrayInput
	// The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
	XrcKmsKeyId pulumi.StringPtrInput
}

func (VolumeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeGroupArgs)(nil)).Elem()
}

type VolumeGroupInput interface {
	pulumi.Input

	ToVolumeGroupOutput() VolumeGroupOutput
	ToVolumeGroupOutputWithContext(ctx context.Context) VolumeGroupOutput
}

func (*VolumeGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeGroup)(nil)).Elem()
}

func (i *VolumeGroup) ToVolumeGroupOutput() VolumeGroupOutput {
	return i.ToVolumeGroupOutputWithContext(context.Background())
}

func (i *VolumeGroup) ToVolumeGroupOutputWithContext(ctx context.Context) VolumeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeGroupOutput)
}

// VolumeGroupArrayInput is an input type that accepts VolumeGroupArray and VolumeGroupArrayOutput values.
// You can construct a concrete instance of `VolumeGroupArrayInput` via:
//
//	VolumeGroupArray{ VolumeGroupArgs{...} }
type VolumeGroupArrayInput interface {
	pulumi.Input

	ToVolumeGroupArrayOutput() VolumeGroupArrayOutput
	ToVolumeGroupArrayOutputWithContext(context.Context) VolumeGroupArrayOutput
}

type VolumeGroupArray []VolumeGroupInput

func (VolumeGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VolumeGroup)(nil)).Elem()
}

func (i VolumeGroupArray) ToVolumeGroupArrayOutput() VolumeGroupArrayOutput {
	return i.ToVolumeGroupArrayOutputWithContext(context.Background())
}

func (i VolumeGroupArray) ToVolumeGroupArrayOutputWithContext(ctx context.Context) VolumeGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeGroupArrayOutput)
}

// VolumeGroupMapInput is an input type that accepts VolumeGroupMap and VolumeGroupMapOutput values.
// You can construct a concrete instance of `VolumeGroupMapInput` via:
//
//	VolumeGroupMap{ "key": VolumeGroupArgs{...} }
type VolumeGroupMapInput interface {
	pulumi.Input

	ToVolumeGroupMapOutput() VolumeGroupMapOutput
	ToVolumeGroupMapOutputWithContext(context.Context) VolumeGroupMapOutput
}

type VolumeGroupMap map[string]VolumeGroupInput

func (VolumeGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VolumeGroup)(nil)).Elem()
}

func (i VolumeGroupMap) ToVolumeGroupMapOutput() VolumeGroupMapOutput {
	return i.ToVolumeGroupMapOutputWithContext(context.Background())
}

func (i VolumeGroupMap) ToVolumeGroupMapOutputWithContext(ctx context.Context) VolumeGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeGroupMapOutput)
}

type VolumeGroupOutput struct{ *pulumi.OutputState }

func (VolumeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeGroup)(nil)).Elem()
}

func (o VolumeGroupOutput) ToVolumeGroupOutput() VolumeGroupOutput {
	return o
}

func (o VolumeGroupOutput) ToVolumeGroupOutputWithContext(ctx context.Context) VolumeGroupOutput {
	return o
}

// The availability domain of the volume group.
func (o VolumeGroupOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
//
// Deprecated: The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
func (o VolumeGroupOutput) BackupPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.BackupPolicyId }).(pulumi.StringOutput)
}

// The clusterPlacementGroup Id of the volume group for volume group placement.
func (o VolumeGroupOutput) ClusterPlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.ClusterPlacementGroupId }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the compartment that contains the volume group.
func (o VolumeGroupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o VolumeGroupOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o VolumeGroupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o VolumeGroupOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
func (o VolumeGroupOutput) IsHydrated() pulumi.BoolOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.BoolOutput { return v.IsHydrated }).(pulumi.BoolOutput)
}

func (o VolumeGroupOutput) PreserveVolumeReplica() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.BoolPtrOutput { return v.PreserveVolumeReplica }).(pulumi.BoolPtrOutput)
}

// The aggregate size of the volume group in GBs.
func (o VolumeGroupOutput) SizeInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.SizeInGbs }).(pulumi.StringOutput)
}

// The aggregate size of the volume group in MBs.
func (o VolumeGroupOutput) SizeInMbs() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.SizeInMbs }).(pulumi.StringOutput)
}

// Specifies the source for a volume group.
func (o VolumeGroupOutput) SourceDetails() VolumeGroupSourceDetailsOutput {
	return o.ApplyT(func(v *VolumeGroup) VolumeGroupSourceDetailsOutput { return v.SourceDetails }).(VolumeGroupSourceDetailsOutput)
}

// The current state of a volume group.
func (o VolumeGroupOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o VolumeGroupOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
func (o VolumeGroupOutput) VolumeGroupReplicas() VolumeGroupVolumeGroupReplicaArrayOutput {
	return o.ApplyT(func(v *VolumeGroup) VolumeGroupVolumeGroupReplicaArrayOutput { return v.VolumeGroupReplicas }).(VolumeGroupVolumeGroupReplicaArrayOutput)
}

func (o VolumeGroupOutput) VolumeGroupReplicasDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.BoolPtrOutput { return v.VolumeGroupReplicasDeletion }).(pulumi.BoolPtrOutput)
}

// (Updatable) Use this for update operation only. This field is not supported during creation. For create use `volumeIds` under `sourceDetails`.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o VolumeGroupOutput) VolumeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringArrayOutput { return v.VolumeIds }).(pulumi.StringArrayOutput)
}

// The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
func (o VolumeGroupOutput) XrcKmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroup) pulumi.StringOutput { return v.XrcKmsKeyId }).(pulumi.StringOutput)
}

type VolumeGroupArrayOutput struct{ *pulumi.OutputState }

func (VolumeGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VolumeGroup)(nil)).Elem()
}

func (o VolumeGroupArrayOutput) ToVolumeGroupArrayOutput() VolumeGroupArrayOutput {
	return o
}

func (o VolumeGroupArrayOutput) ToVolumeGroupArrayOutputWithContext(ctx context.Context) VolumeGroupArrayOutput {
	return o
}

func (o VolumeGroupArrayOutput) Index(i pulumi.IntInput) VolumeGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VolumeGroup {
		return vs[0].([]*VolumeGroup)[vs[1].(int)]
	}).(VolumeGroupOutput)
}

type VolumeGroupMapOutput struct{ *pulumi.OutputState }

func (VolumeGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VolumeGroup)(nil)).Elem()
}

func (o VolumeGroupMapOutput) ToVolumeGroupMapOutput() VolumeGroupMapOutput {
	return o
}

func (o VolumeGroupMapOutput) ToVolumeGroupMapOutputWithContext(ctx context.Context) VolumeGroupMapOutput {
	return o
}

func (o VolumeGroupMapOutput) MapIndex(k pulumi.StringInput) VolumeGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VolumeGroup {
		return vs[0].(map[string]*VolumeGroup)[vs[1].(string)]
	}).(VolumeGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeGroupInput)(nil)).Elem(), &VolumeGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeGroupArrayInput)(nil)).Elem(), VolumeGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeGroupMapInput)(nil)).Elem(), VolumeGroupMap{})
	pulumi.RegisterOutputType(VolumeGroupOutput{})
	pulumi.RegisterOutputType(VolumeGroupArrayOutput{})
	pulumi.RegisterOutputType(VolumeGroupMapOutput{})
}
