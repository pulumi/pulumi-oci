// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package core

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Volume Group Backup resource in Oracle Cloud Infrastructure Core service.
//
// Creates a new backup volume group of the specified volume group.
// For more information, see [Volume Groups](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/volumegroups.htm).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Core.NewVolumeGroupBackup(ctx, "testVolumeGroupBackup", &Core.VolumeGroupBackupArgs{
//				VolumeGroupId: pulumi.Any(oci_core_volume_group.Test_volume_group.Id),
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				DefinedTags: pulumi.Map{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				DisplayName: pulumi.Any(_var.Volume_group_backup_display_name),
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//				Type: pulumi.Any(_var.Volume_group_backup_type),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VolumeGroupBackups can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Core/volumeGroupBackup:VolumeGroupBackup test_volume_group_backup "id"
//
// ```
type VolumeGroupBackup struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
	ExpirationTime pulumi.StringOutput `pulumi:"expirationTime"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The aggregate size of the volume group backup, in GBs.
	SizeInGbs pulumi.StringOutput `pulumi:"sizeInGbs"`
	// The aggregate size of the volume group backup, in MBs.
	SizeInMbs pulumi.StringOutput `pulumi:"sizeInMbs"`
	// Details of the volume group backup source in the cloud.
	SourceDetails VolumeGroupBackupSourceDetailsPtrOutput `pulumi:"sourceDetails"`
	// Specifies whether the volume group backup was created manually, or via scheduled backup policy.
	SourceType pulumi.StringOutput `pulumi:"sourceType"`
	// The OCID of the source volume group backup.
	SourceVolumeGroupBackupId pulumi.StringOutput `pulumi:"sourceVolumeGroupBackupId"`
	// The current state of a volume group backup.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeRequestReceived pulumi.StringOutput `pulumi:"timeRequestReceived"`
	// The type of backup to create. If omitted, defaults to incremental.
	// * Allowed values are :
	// * FULL
	// * INCREMENTAL
	Type pulumi.StringOutput `pulumi:"type"`
	// The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `sizeInGbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
	UniqueSizeInGbs pulumi.StringOutput `pulumi:"uniqueSizeInGbs"`
	// The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `sizeInMbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
	UniqueSizeInMbs pulumi.StringOutput `pulumi:"uniqueSizeInMbs"`
	// OCIDs for the volume backups in this volume group backup.
	VolumeBackupIds pulumi.StringArrayOutput `pulumi:"volumeBackupIds"`
	// The OCID of the volume group that needs to be backed up.
	VolumeGroupId pulumi.StringOutput `pulumi:"volumeGroupId"`
}

// NewVolumeGroupBackup registers a new resource with the given unique name, arguments, and options.
func NewVolumeGroupBackup(ctx *pulumi.Context,
	name string, args *VolumeGroupBackupArgs, opts ...pulumi.ResourceOption) (*VolumeGroupBackup, error) {
	if args == nil {
		args = &VolumeGroupBackupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VolumeGroupBackup
	err := ctx.RegisterResource("oci:Core/volumeGroupBackup:VolumeGroupBackup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVolumeGroupBackup gets an existing VolumeGroupBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVolumeGroupBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VolumeGroupBackupState, opts ...pulumi.ResourceOption) (*VolumeGroupBackup, error) {
	var resource VolumeGroupBackup
	err := ctx.ReadResource("oci:Core/volumeGroupBackup:VolumeGroupBackup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VolumeGroupBackup resources.
type volumeGroupBackupState struct {
	// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
	ExpirationTime *string `pulumi:"expirationTime"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The aggregate size of the volume group backup, in GBs.
	SizeInGbs *string `pulumi:"sizeInGbs"`
	// The aggregate size of the volume group backup, in MBs.
	SizeInMbs *string `pulumi:"sizeInMbs"`
	// Details of the volume group backup source in the cloud.
	SourceDetails *VolumeGroupBackupSourceDetails `pulumi:"sourceDetails"`
	// Specifies whether the volume group backup was created manually, or via scheduled backup policy.
	SourceType *string `pulumi:"sourceType"`
	// The OCID of the source volume group backup.
	SourceVolumeGroupBackupId *string `pulumi:"sourceVolumeGroupBackupId"`
	// The current state of a volume group backup.
	State *string `pulumi:"state"`
	// The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeRequestReceived *string `pulumi:"timeRequestReceived"`
	// The type of backup to create. If omitted, defaults to incremental.
	// * Allowed values are :
	// * FULL
	// * INCREMENTAL
	Type *string `pulumi:"type"`
	// The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `sizeInGbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
	UniqueSizeInGbs *string `pulumi:"uniqueSizeInGbs"`
	// The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `sizeInMbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
	UniqueSizeInMbs *string `pulumi:"uniqueSizeInMbs"`
	// OCIDs for the volume backups in this volume group backup.
	VolumeBackupIds []string `pulumi:"volumeBackupIds"`
	// The OCID of the volume group that needs to be backed up.
	VolumeGroupId *string `pulumi:"volumeGroupId"`
}

type VolumeGroupBackupState struct {
	// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
	ExpirationTime pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The aggregate size of the volume group backup, in GBs.
	SizeInGbs pulumi.StringPtrInput
	// The aggregate size of the volume group backup, in MBs.
	SizeInMbs pulumi.StringPtrInput
	// Details of the volume group backup source in the cloud.
	SourceDetails VolumeGroupBackupSourceDetailsPtrInput
	// Specifies whether the volume group backup was created manually, or via scheduled backup policy.
	SourceType pulumi.StringPtrInput
	// The OCID of the source volume group backup.
	SourceVolumeGroupBackupId pulumi.StringPtrInput
	// The current state of a volume group backup.
	State pulumi.StringPtrInput
	// The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeRequestReceived pulumi.StringPtrInput
	// The type of backup to create. If omitted, defaults to incremental.
	// * Allowed values are :
	// * FULL
	// * INCREMENTAL
	Type pulumi.StringPtrInput
	// The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `sizeInGbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
	UniqueSizeInGbs pulumi.StringPtrInput
	// The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `sizeInMbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
	UniqueSizeInMbs pulumi.StringPtrInput
	// OCIDs for the volume backups in this volume group backup.
	VolumeBackupIds pulumi.StringArrayInput
	// The OCID of the volume group that needs to be backed up.
	VolumeGroupId pulumi.StringPtrInput
}

func (VolumeGroupBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeGroupBackupState)(nil)).Elem()
}

type volumeGroupBackupArgs struct {
	// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Details of the volume group backup source in the cloud.
	SourceDetails *VolumeGroupBackupSourceDetails `pulumi:"sourceDetails"`
	// The type of backup to create. If omitted, defaults to incremental.
	// * Allowed values are :
	// * FULL
	// * INCREMENTAL
	Type *string `pulumi:"type"`
	// The OCID of the volume group that needs to be backed up.
	VolumeGroupId *string `pulumi:"volumeGroupId"`
}

// The set of arguments for constructing a VolumeGroupBackup resource.
type VolumeGroupBackupArgs struct {
	// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Details of the volume group backup source in the cloud.
	SourceDetails VolumeGroupBackupSourceDetailsPtrInput
	// The type of backup to create. If omitted, defaults to incremental.
	// * Allowed values are :
	// * FULL
	// * INCREMENTAL
	Type pulumi.StringPtrInput
	// The OCID of the volume group that needs to be backed up.
	VolumeGroupId pulumi.StringPtrInput
}

func (VolumeGroupBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeGroupBackupArgs)(nil)).Elem()
}

type VolumeGroupBackupInput interface {
	pulumi.Input

	ToVolumeGroupBackupOutput() VolumeGroupBackupOutput
	ToVolumeGroupBackupOutputWithContext(ctx context.Context) VolumeGroupBackupOutput
}

func (*VolumeGroupBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeGroupBackup)(nil)).Elem()
}

func (i *VolumeGroupBackup) ToVolumeGroupBackupOutput() VolumeGroupBackupOutput {
	return i.ToVolumeGroupBackupOutputWithContext(context.Background())
}

func (i *VolumeGroupBackup) ToVolumeGroupBackupOutputWithContext(ctx context.Context) VolumeGroupBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeGroupBackupOutput)
}

// VolumeGroupBackupArrayInput is an input type that accepts VolumeGroupBackupArray and VolumeGroupBackupArrayOutput values.
// You can construct a concrete instance of `VolumeGroupBackupArrayInput` via:
//
//	VolumeGroupBackupArray{ VolumeGroupBackupArgs{...} }
type VolumeGroupBackupArrayInput interface {
	pulumi.Input

	ToVolumeGroupBackupArrayOutput() VolumeGroupBackupArrayOutput
	ToVolumeGroupBackupArrayOutputWithContext(context.Context) VolumeGroupBackupArrayOutput
}

type VolumeGroupBackupArray []VolumeGroupBackupInput

func (VolumeGroupBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VolumeGroupBackup)(nil)).Elem()
}

func (i VolumeGroupBackupArray) ToVolumeGroupBackupArrayOutput() VolumeGroupBackupArrayOutput {
	return i.ToVolumeGroupBackupArrayOutputWithContext(context.Background())
}

func (i VolumeGroupBackupArray) ToVolumeGroupBackupArrayOutputWithContext(ctx context.Context) VolumeGroupBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeGroupBackupArrayOutput)
}

// VolumeGroupBackupMapInput is an input type that accepts VolumeGroupBackupMap and VolumeGroupBackupMapOutput values.
// You can construct a concrete instance of `VolumeGroupBackupMapInput` via:
//
//	VolumeGroupBackupMap{ "key": VolumeGroupBackupArgs{...} }
type VolumeGroupBackupMapInput interface {
	pulumi.Input

	ToVolumeGroupBackupMapOutput() VolumeGroupBackupMapOutput
	ToVolumeGroupBackupMapOutputWithContext(context.Context) VolumeGroupBackupMapOutput
}

type VolumeGroupBackupMap map[string]VolumeGroupBackupInput

func (VolumeGroupBackupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VolumeGroupBackup)(nil)).Elem()
}

func (i VolumeGroupBackupMap) ToVolumeGroupBackupMapOutput() VolumeGroupBackupMapOutput {
	return i.ToVolumeGroupBackupMapOutputWithContext(context.Background())
}

func (i VolumeGroupBackupMap) ToVolumeGroupBackupMapOutputWithContext(ctx context.Context) VolumeGroupBackupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeGroupBackupMapOutput)
}

type VolumeGroupBackupOutput struct{ *pulumi.OutputState }

func (VolumeGroupBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeGroupBackup)(nil)).Elem()
}

func (o VolumeGroupBackupOutput) ToVolumeGroupBackupOutput() VolumeGroupBackupOutput {
	return o
}

func (o VolumeGroupBackupOutput) ToVolumeGroupBackupOutputWithContext(ctx context.Context) VolumeGroupBackupOutput {
	return o
}

// (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
func (o VolumeGroupBackupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o VolumeGroupBackupOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o VolumeGroupBackupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
func (o VolumeGroupBackupOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.ExpirationTime }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o VolumeGroupBackupOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The aggregate size of the volume group backup, in GBs.
func (o VolumeGroupBackupOutput) SizeInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.SizeInGbs }).(pulumi.StringOutput)
}

// The aggregate size of the volume group backup, in MBs.
func (o VolumeGroupBackupOutput) SizeInMbs() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.SizeInMbs }).(pulumi.StringOutput)
}

// Details of the volume group backup source in the cloud.
func (o VolumeGroupBackupOutput) SourceDetails() VolumeGroupBackupSourceDetailsPtrOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) VolumeGroupBackupSourceDetailsPtrOutput { return v.SourceDetails }).(VolumeGroupBackupSourceDetailsPtrOutput)
}

// Specifies whether the volume group backup was created manually, or via scheduled backup policy.
func (o VolumeGroupBackupOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

// The OCID of the source volume group backup.
func (o VolumeGroupBackupOutput) SourceVolumeGroupBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.SourceVolumeGroupBackupId }).(pulumi.StringOutput)
}

// The current state of a volume group backup.
func (o VolumeGroupBackupOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o VolumeGroupBackupOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o VolumeGroupBackupOutput) TimeRequestReceived() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.TimeRequestReceived }).(pulumi.StringOutput)
}

// The type of backup to create. If omitted, defaults to incremental.
// * Allowed values are :
// * FULL
// * INCREMENTAL
func (o VolumeGroupBackupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `sizeInGbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
func (o VolumeGroupBackupOutput) UniqueSizeInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.UniqueSizeInGbs }).(pulumi.StringOutput)
}

// The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `sizeInMbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
func (o VolumeGroupBackupOutput) UniqueSizeInMbs() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.UniqueSizeInMbs }).(pulumi.StringOutput)
}

// OCIDs for the volume backups in this volume group backup.
func (o VolumeGroupBackupOutput) VolumeBackupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringArrayOutput { return v.VolumeBackupIds }).(pulumi.StringArrayOutput)
}

// The OCID of the volume group that needs to be backed up.
func (o VolumeGroupBackupOutput) VolumeGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *VolumeGroupBackup) pulumi.StringOutput { return v.VolumeGroupId }).(pulumi.StringOutput)
}

type VolumeGroupBackupArrayOutput struct{ *pulumi.OutputState }

func (VolumeGroupBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VolumeGroupBackup)(nil)).Elem()
}

func (o VolumeGroupBackupArrayOutput) ToVolumeGroupBackupArrayOutput() VolumeGroupBackupArrayOutput {
	return o
}

func (o VolumeGroupBackupArrayOutput) ToVolumeGroupBackupArrayOutputWithContext(ctx context.Context) VolumeGroupBackupArrayOutput {
	return o
}

func (o VolumeGroupBackupArrayOutput) Index(i pulumi.IntInput) VolumeGroupBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VolumeGroupBackup {
		return vs[0].([]*VolumeGroupBackup)[vs[1].(int)]
	}).(VolumeGroupBackupOutput)
}

type VolumeGroupBackupMapOutput struct{ *pulumi.OutputState }

func (VolumeGroupBackupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VolumeGroupBackup)(nil)).Elem()
}

func (o VolumeGroupBackupMapOutput) ToVolumeGroupBackupMapOutput() VolumeGroupBackupMapOutput {
	return o
}

func (o VolumeGroupBackupMapOutput) ToVolumeGroupBackupMapOutputWithContext(ctx context.Context) VolumeGroupBackupMapOutput {
	return o
}

func (o VolumeGroupBackupMapOutput) MapIndex(k pulumi.StringInput) VolumeGroupBackupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VolumeGroupBackup {
		return vs[0].(map[string]*VolumeGroupBackup)[vs[1].(string)]
	}).(VolumeGroupBackupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeGroupBackupInput)(nil)).Elem(), &VolumeGroupBackup{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeGroupBackupArrayInput)(nil)).Elem(), VolumeGroupBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeGroupBackupMapInput)(nil)).Elem(), VolumeGroupBackupMap{})
	pulumi.RegisterOutputType(VolumeGroupBackupOutput{})
	pulumi.RegisterOutputType(VolumeGroupBackupArrayOutput{})
	pulumi.RegisterOutputType(VolumeGroupBackupMapOutput{})
}
