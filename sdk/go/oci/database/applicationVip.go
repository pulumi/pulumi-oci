// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Application Vip resource in Oracle Cloud Infrastructure Database service.
//
// Creates a new application virtual IP (VIP) address in the specified cloud VM cluster based on the request parameters you provide.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.NewApplicationVip(ctx, "testApplicationVip", &Database.ApplicationVipArgs{
//				CloudVmClusterId: pulumi.Any(oci_database_cloud_vm_cluster.Test_cloud_vm_cluster.Id),
//				HostnameLabel:    pulumi.Any(_var.Application_vip_hostname_label),
//				SubnetId:         pulumi.Any(oci_core_subnet.Test_subnet.Id),
//				DbNodeId:         pulumi.Any(oci_database_db_node.Test_db_node.Id),
//				IpAddress:        pulumi.Any(_var.Application_vip_ip_address),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ApplicationVips can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Database/applicationVip:ApplicationVip test_application_vip "id"
//
// ```
type ApplicationVip struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
	CloudVmClusterId pulumi.StringOutput `pulumi:"cloudVmClusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrOutput `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB node associated with the application virtual IP (VIP) address.
	DbNodeId pulumi.StringPtrOutput `pulumi:"dbNodeId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The hostname of the application virtual IP (VIP) address.
	HostnameLabel pulumi.StringOutput `pulumi:"hostnameLabel"`
	// The application virtual IP (VIP) address.
	IpAddress pulumi.StringPtrOutput `pulumi:"ipAddress"`
	// Additional information about the current lifecycle state of the application virtual IP (VIP) address.
	LifecycleDetails pulumi.StringPtrOutput `pulumi:"lifecycleDetails"`
	// The current lifecycle state of the application virtual IP (VIP) address.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the application virtual IP (VIP) address.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// The date and time when the create operation for the application virtual IP (VIP) address completed.
	TimeAssigned pulumi.StringPtrOutput `pulumi:"timeAssigned"`
}

// NewApplicationVip registers a new resource with the given unique name, arguments, and options.
func NewApplicationVip(ctx *pulumi.Context,
	name string, args *ApplicationVipArgs, opts ...pulumi.ResourceOption) (*ApplicationVip, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudVmClusterId == nil {
		return nil, errors.New("invalid value for required argument 'CloudVmClusterId'")
	}
	if args.HostnameLabel == nil {
		return nil, errors.New("invalid value for required argument 'HostnameLabel'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationVip
	err := ctx.RegisterResource("oci:Database/applicationVip:ApplicationVip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationVip gets an existing ApplicationVip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationVip(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationVipState, opts ...pulumi.ResourceOption) (*ApplicationVip, error) {
	var resource ApplicationVip
	err := ctx.ReadResource("oci:Database/applicationVip:ApplicationVip", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationVip resources.
type applicationVipState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
	CloudVmClusterId *string `pulumi:"cloudVmClusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB node associated with the application virtual IP (VIP) address.
	DbNodeId *string `pulumi:"dbNodeId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The hostname of the application virtual IP (VIP) address.
	HostnameLabel *string `pulumi:"hostnameLabel"`
	// The application virtual IP (VIP) address.
	IpAddress *string `pulumi:"ipAddress"`
	// Additional information about the current lifecycle state of the application virtual IP (VIP) address.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The current lifecycle state of the application virtual IP (VIP) address.
	State *string `pulumi:"state"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the application virtual IP (VIP) address.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId *string `pulumi:"subnetId"`
	// The date and time when the create operation for the application virtual IP (VIP) address completed.
	TimeAssigned *string `pulumi:"timeAssigned"`
}

type ApplicationVipState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
	CloudVmClusterId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB node associated with the application virtual IP (VIP) address.
	DbNodeId pulumi.StringPtrInput
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The hostname of the application virtual IP (VIP) address.
	HostnameLabel pulumi.StringPtrInput
	// The application virtual IP (VIP) address.
	IpAddress pulumi.StringPtrInput
	// Additional information about the current lifecycle state of the application virtual IP (VIP) address.
	LifecycleDetails pulumi.StringPtrInput
	// The current lifecycle state of the application virtual IP (VIP) address.
	State pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the application virtual IP (VIP) address.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId pulumi.StringPtrInput
	// The date and time when the create operation for the application virtual IP (VIP) address completed.
	TimeAssigned pulumi.StringPtrInput
}

func (ApplicationVipState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationVipState)(nil)).Elem()
}

type applicationVipArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
	CloudVmClusterId string `pulumi:"cloudVmClusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB node associated with the application virtual IP (VIP) address.
	DbNodeId *string `pulumi:"dbNodeId"`
	// The hostname of the application virtual IP (VIP) address.
	HostnameLabel string `pulumi:"hostnameLabel"`
	// The application virtual IP (VIP) address.
	IpAddress *string `pulumi:"ipAddress"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the application virtual IP (VIP) address.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId string `pulumi:"subnetId"`
}

// The set of arguments for constructing a ApplicationVip resource.
type ApplicationVipArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
	CloudVmClusterId pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB node associated with the application virtual IP (VIP) address.
	DbNodeId pulumi.StringPtrInput
	// The hostname of the application virtual IP (VIP) address.
	HostnameLabel pulumi.StringInput
	// The application virtual IP (VIP) address.
	IpAddress pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the application virtual IP (VIP) address.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SubnetId pulumi.StringInput
}

func (ApplicationVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationVipArgs)(nil)).Elem()
}

type ApplicationVipInput interface {
	pulumi.Input

	ToApplicationVipOutput() ApplicationVipOutput
	ToApplicationVipOutputWithContext(ctx context.Context) ApplicationVipOutput
}

func (*ApplicationVip) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationVip)(nil)).Elem()
}

func (i *ApplicationVip) ToApplicationVipOutput() ApplicationVipOutput {
	return i.ToApplicationVipOutputWithContext(context.Background())
}

func (i *ApplicationVip) ToApplicationVipOutputWithContext(ctx context.Context) ApplicationVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationVipOutput)
}

// ApplicationVipArrayInput is an input type that accepts ApplicationVipArray and ApplicationVipArrayOutput values.
// You can construct a concrete instance of `ApplicationVipArrayInput` via:
//
//	ApplicationVipArray{ ApplicationVipArgs{...} }
type ApplicationVipArrayInput interface {
	pulumi.Input

	ToApplicationVipArrayOutput() ApplicationVipArrayOutput
	ToApplicationVipArrayOutputWithContext(context.Context) ApplicationVipArrayOutput
}

type ApplicationVipArray []ApplicationVipInput

func (ApplicationVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationVip)(nil)).Elem()
}

func (i ApplicationVipArray) ToApplicationVipArrayOutput() ApplicationVipArrayOutput {
	return i.ToApplicationVipArrayOutputWithContext(context.Background())
}

func (i ApplicationVipArray) ToApplicationVipArrayOutputWithContext(ctx context.Context) ApplicationVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationVipArrayOutput)
}

// ApplicationVipMapInput is an input type that accepts ApplicationVipMap and ApplicationVipMapOutput values.
// You can construct a concrete instance of `ApplicationVipMapInput` via:
//
//	ApplicationVipMap{ "key": ApplicationVipArgs{...} }
type ApplicationVipMapInput interface {
	pulumi.Input

	ToApplicationVipMapOutput() ApplicationVipMapOutput
	ToApplicationVipMapOutputWithContext(context.Context) ApplicationVipMapOutput
}

type ApplicationVipMap map[string]ApplicationVipInput

func (ApplicationVipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationVip)(nil)).Elem()
}

func (i ApplicationVipMap) ToApplicationVipMapOutput() ApplicationVipMapOutput {
	return i.ToApplicationVipMapOutputWithContext(context.Background())
}

func (i ApplicationVipMap) ToApplicationVipMapOutputWithContext(ctx context.Context) ApplicationVipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationVipMapOutput)
}

type ApplicationVipOutput struct{ *pulumi.OutputState }

func (ApplicationVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationVip)(nil)).Elem()
}

func (o ApplicationVipOutput) ToApplicationVipOutput() ApplicationVipOutput {
	return o
}

func (o ApplicationVipOutput) ToApplicationVipOutputWithContext(ctx context.Context) ApplicationVipOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
func (o ApplicationVipOutput) CloudVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationVip) pulumi.StringOutput { return v.CloudVmClusterId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o ApplicationVipOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationVip) pulumi.StringPtrOutput { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB node associated with the application virtual IP (VIP) address.
func (o ApplicationVipOutput) DbNodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationVip) pulumi.StringPtrOutput { return v.DbNodeId }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o ApplicationVipOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ApplicationVip) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o ApplicationVipOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ApplicationVip) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The hostname of the application virtual IP (VIP) address.
func (o ApplicationVipOutput) HostnameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationVip) pulumi.StringOutput { return v.HostnameLabel }).(pulumi.StringOutput)
}

// The application virtual IP (VIP) address.
func (o ApplicationVipOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationVip) pulumi.StringPtrOutput { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Additional information about the current lifecycle state of the application virtual IP (VIP) address.
func (o ApplicationVipOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationVip) pulumi.StringPtrOutput { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// The current lifecycle state of the application virtual IP (VIP) address.
func (o ApplicationVipOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationVip) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the application virtual IP (VIP) address.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ApplicationVipOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationVip) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// The date and time when the create operation for the application virtual IP (VIP) address completed.
func (o ApplicationVipOutput) TimeAssigned() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationVip) pulumi.StringPtrOutput { return v.TimeAssigned }).(pulumi.StringPtrOutput)
}

type ApplicationVipArrayOutput struct{ *pulumi.OutputState }

func (ApplicationVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationVip)(nil)).Elem()
}

func (o ApplicationVipArrayOutput) ToApplicationVipArrayOutput() ApplicationVipArrayOutput {
	return o
}

func (o ApplicationVipArrayOutput) ToApplicationVipArrayOutputWithContext(ctx context.Context) ApplicationVipArrayOutput {
	return o
}

func (o ApplicationVipArrayOutput) Index(i pulumi.IntInput) ApplicationVipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationVip {
		return vs[0].([]*ApplicationVip)[vs[1].(int)]
	}).(ApplicationVipOutput)
}

type ApplicationVipMapOutput struct{ *pulumi.OutputState }

func (ApplicationVipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationVip)(nil)).Elem()
}

func (o ApplicationVipMapOutput) ToApplicationVipMapOutput() ApplicationVipMapOutput {
	return o
}

func (o ApplicationVipMapOutput) ToApplicationVipMapOutputWithContext(ctx context.Context) ApplicationVipMapOutput {
	return o
}

func (o ApplicationVipMapOutput) MapIndex(k pulumi.StringInput) ApplicationVipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationVip {
		return vs[0].(map[string]*ApplicationVip)[vs[1].(string)]
	}).(ApplicationVipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationVipInput)(nil)).Elem(), &ApplicationVip{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationVipArrayInput)(nil)).Elem(), ApplicationVipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationVipMapInput)(nil)).Elem(), ApplicationVipMap{})
	pulumi.RegisterOutputType(ApplicationVipOutput{})
	pulumi.RegisterOutputType(ApplicationVipArrayOutput{})
	pulumi.RegisterOutputType(ApplicationVipMapOutput{})
}
