// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Autonomous Container Database Add Standby resource in Oracle Cloud Infrastructure Database service.
//
// Create Standby Autonomous Container Database.
// For more information about changing Autonomous Container Databases Add Standby, see
// [Create Standby Autonomous Container Database](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html#ADBCL-GUID-D3B503F1-0032-4B0D-9F00-ACAE8151AB80) and [Convert Snapshot Standby to Physical Standby](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html#ADBCL-GUID-E8D7E0EE-8244-467D-B33A-1BC6F969A0A4).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.NewAutonomousContainerDatabaseAddStandby(ctx, "test_autonomous_container_database_add_standby", &database.AutonomousContainerDatabaseAddStandbyArgs{
//				AutonomousContainerDatabaseId:      pulumi.Any(testAutonomousContainerDatabase.Id),
//				FastStartFailOverLagLimitInSeconds: pulumi.Any(autonomousContainerDatabaseAddStandbyFastStartFailOverLagLimitInSeconds),
//				IsAutomaticFailoverEnabled:         pulumi.Any(autonomousContainerDatabaseAddStandbyIsAutomaticFailoverEnabled),
//				PeerAutonomousContainerDatabaseBackupConfig: &database.AutonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigArgs{
//					BackupDestinationDetails: database.AutonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailArray{
//						&database.AutonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailArgs{
//							Type:          pulumi.Any(autonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailsType),
//							DbrsPolicyId:  pulumi.Any(testPolicy.Id),
//							Id:            pulumi.Any(autonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailsId),
//							InternetProxy: pulumi.Any(autonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailsInternetProxy),
//							VpcPassword:   pulumi.Any(autonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailsVpcPassword),
//							VpcUser:       pulumi.Any(autonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailsVpcUser),
//						},
//					},
//					RecoveryWindowInDays: pulumi.Any(autonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigRecoveryWindowInDays),
//				},
//				PeerAutonomousContainerDatabaseCompartmentId: pulumi.Any(testCompartment.Id),
//				PeerAutonomousContainerDatabaseDisplayName:   pulumi.Any(autonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseDisplayName),
//				PeerAutonomousVmClusterId:                    pulumi.Any(testAutonomousVmCluster.Id),
//				PeerCloudAutonomousVmClusterId:               pulumi.Any(testCloudAutonomousVmCluster.Id),
//				PeerDbUniqueName:                             pulumi.Any(autonomousContainerDatabaseAddStandbyPeerDbUniqueName),
//				ProtectionMode:                               pulumi.Any(autonomousContainerDatabaseAddStandbyProtectionMode),
//				StandbyMaintenanceBufferInDays:               pulumi.Any(autonomousContainerDatabaseAddStandbyStandbyMaintenanceBufferInDays),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AutonomousContainerDatabaseAddStandby can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Database/autonomousContainerDatabaseAddStandby:AutonomousContainerDatabaseAddStandby test_autonomous_container_database_add_standby "id"
// ```
type AutonomousContainerDatabaseAddStandby struct {
	pulumi.CustomResourceState

	// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousContainerDatabaseId pulumi.StringOutput `pulumi:"autonomousContainerDatabaseId"`
	// **No longer used.** For Autonomous Database on dedicated Exadata infrastructure, the container database is created within a specified `cloudAutonomousVmCluster`.
	AutonomousExadataInfrastructureId pulumi.StringOutput `pulumi:"autonomousExadataInfrastructureId"`
	// The OCID of the Autonomous VM Cluster.
	AutonomousVmClusterId pulumi.StringOutput `pulumi:"autonomousVmClusterId"`
	// The domain of the Autonomous Container Database
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// Sum of CPUs available on the Autonomous VM Cluster + Sum of reclaimable CPUs available in the Autonomous Container Database.
	AvailableCpus pulumi.Float64Output `pulumi:"availableCpus"`
	// Backup options for the Autonomous Container Database.
	BackupConfigs AutonomousContainerDatabaseAddStandbyBackupConfigArrayOutput `pulumi:"backupConfigs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
	CloudAutonomousVmClusterId pulumi.StringOutput `pulumi:"cloudAutonomousVmClusterId"`
	// The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The compute model of the Autonomous Container Database. For Autonomous Database on Dedicated Exadata Infrastructure, the CPU type (ECPUs or OCPUs) is determined by the parent Autonomous Exadata VM Cluster's compute model. ECPU compute model is the recommended model and OCPU compute model is legacy. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
	ComputeModel pulumi.StringOutput `pulumi:"computeModel"`
	// Array of Dg associations.
	DataguardGroupMembers AutonomousContainerDatabaseAddStandbyDataguardGroupMemberArrayOutput `pulumi:"dataguardGroupMembers"`
	// The properties that define Autonomous Container Databases Dataguard.
	Dataguards AutonomousContainerDatabaseAddStandbyDataguardArrayOutput `pulumi:"dataguards"`
	// The Database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, starting with an alphabetic character, followed by 1 to 7 alphanumeric characters.
	DbName pulumi.StringOutput `pulumi:"dbName"`
	// The CPU value beyond which an Autonomous Database will be opened across multiple nodes. The default value of this attribute is 16 for OCPUs and 64 for ECPUs.
	DbSplitThreshold pulumi.IntOutput    `pulumi:"dbSplitThreshold"`
	DbUniqueName     pulumi.StringOutput `pulumi:"dbUniqueName"`
	// Oracle Database version of the Autonomous Container Database.
	DbVersion pulumi.StringOutput `pulumi:"dbVersion"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// The user-provided name for the Autonomous Container Database.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Determines whether an Autonomous Database must be opened across the maximum number of nodes or the least number of nodes. By default, Minimum nodes is selected.
	DistributionAffinity pulumi.StringOutput `pulumi:"distributionAffinity"`
	// DST Time-Zone File version of the Autonomous Container Database.
	DstFileVersion pulumi.StringOutput `pulumi:"dstFileVersion"`
	// The lag time for my preference based on data loss tolerance in seconds.
	FastStartFailOverLagLimitInSeconds pulumi.IntOutput `pulumi:"fastStartFailOverLagLimitInSeconds"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// The infrastructure type this resource belongs to.
	InfrastructureType pulumi.StringOutput `pulumi:"infrastructureType"`
	// Indicates whether Automatic Failover is enabled for Autonomous Container Database Dataguard Association
	IsAutomaticFailoverEnabled pulumi.BoolOutput `pulumi:"isAutomaticFailoverEnabled"`
	// **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
	IsDataGuardEnabled pulumi.BoolOutput `pulumi:"isDataGuardEnabled"`
	// Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
	IsDstFileUpdateEnabled pulumi.BoolOutput `pulumi:"isDstFileUpdateEnabled"`
	// Whether it is multiple standby Autonomous Dataguard
	IsMultipleStandby pulumi.BoolOutput `pulumi:"isMultipleStandby"`
	// Key History Entry.
	KeyHistoryEntries AutonomousContainerDatabaseAddStandbyKeyHistoryEntryArrayOutput `pulumi:"keyHistoryEntries"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
	KeyStoreId pulumi.StringOutput `pulumi:"keyStoreId"`
	// The wallet name for Oracle Key Vault.
	KeyStoreWalletName pulumi.StringOutput `pulumi:"keyStoreWalletName"`
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
	KmsKeyVersionId pulumi.StringOutput `pulumi:"kmsKeyVersionId"`
	// The largest Autonomous Database (CPU) that can be created in a new Autonomous Container Database.
	LargestProvisionableAutonomousDatabaseInCpus pulumi.Float64Output `pulumi:"largestProvisionableAutonomousDatabaseInCpus"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
	LastMaintenanceRunId pulumi.StringOutput `pulumi:"lastMaintenanceRunId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// List of One-Off patches that has been successfully applied to Autonomous Container Database
	ListOneOffPatches pulumi.StringArrayOutput `pulumi:"listOneOffPatches"`
	// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindows AutonomousContainerDatabaseAddStandbyMaintenanceWindowArrayOutput `pulumi:"maintenanceWindows"`
	// The amount of memory (in GBs) enabled per ECPU or OCPU in the Autonomous VM Cluster.
	MemoryPerOracleComputeUnitInGbs pulumi.IntOutput `pulumi:"memoryPerOracleComputeUnitInGbs"`
	// Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
	NetServicesArchitecture pulumi.StringOutput `pulumi:"netServicesArchitecture"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
	NextMaintenanceRunId pulumi.StringOutput `pulumi:"nextMaintenanceRunId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
	PatchId pulumi.StringOutput `pulumi:"patchId"`
	// Database patch model preference.
	PatchModel pulumi.StringOutput `pulumi:"patchModel"`
	// Backup options for the standby Autonomous Container Database.
	PeerAutonomousContainerDatabaseBackupConfig AutonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigOutput `pulumi:"peerAutonomousContainerDatabaseBackupConfig"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the standby Autonomous Container Database will be created.
	PeerAutonomousContainerDatabaseCompartmentId pulumi.StringOutput `pulumi:"peerAutonomousContainerDatabaseCompartmentId"`
	// The display name for the peer Autonomous Container Database.
	PeerAutonomousContainerDatabaseDisplayName pulumi.StringOutput `pulumi:"peerAutonomousContainerDatabaseDisplayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer Autonomous Exadata VM Cluster.
	PeerAutonomousVmClusterId pulumi.StringOutput `pulumi:"peerAutonomousVmClusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
	PeerCloudAutonomousVmClusterId pulumi.StringOutput `pulumi:"peerCloudAutonomousVmClusterId"`
	// Specifies the `DB_UNIQUE_NAME` of the peer database to be created.
	PeerDbUniqueName pulumi.StringOutput `pulumi:"peerDbUniqueName"`
	// The protection mode of this Autonomous Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
	ProtectionMode pulumi.StringOutput `pulumi:"protectionMode"`
	// An array of CPU values that can be used to successfully provision a single Autonomous Database.
	ProvisionableCpuses pulumi.Float64ArrayOutput `pulumi:"provisionableCpuses"`
	// The number of CPUs provisioned in an Autonomous Container Database.
	ProvisionedCpus pulumi.Float64Output `pulumi:"provisionedCpus"`
	// CPUs that continue to be included in the count of CPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available CPUs at its parent Autonomous VM Cluster level by restarting the Autonomous Container Database.
	ReclaimableCpus pulumi.Float64Output `pulumi:"reclaimableCpus"`
	// The number of CPUs reserved in an Autonomous Container Database.
	ReservedCpus pulumi.Float64Output `pulumi:"reservedCpus"`
	// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
	Role pulumi.StringOutput `pulumi:"role"`
	// The service level agreement type of the container database. The default is STANDARD.
	ServiceLevelAgreementType pulumi.StringOutput `pulumi:"serviceLevelAgreementType"`
	// The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StandbyMaintenanceBufferInDays pulumi.IntOutput `pulumi:"standbyMaintenanceBufferInDays"`
	// The current state of the Autonomous Container Database.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the Autonomous Container Database was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The timestamp of last successful backup. Here NULL value represents either there are no successful backups or backups are not configured for this Autonomous Container Database.
	TimeOfLastBackup pulumi.StringOutput `pulumi:"timeOfLastBackup"`
	// The date and time the Autonomous Container Database will be reverted to Standby from Snapshot Standby.
	TimeSnapshotStandbyRevert pulumi.StringOutput `pulumi:"timeSnapshotStandbyRevert"`
	// The number of CPUs allocated to the Autonomous VM cluster.
	TotalCpus pulumi.IntOutput `pulumi:"totalCpus"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
	VaultId pulumi.StringOutput `pulumi:"vaultId"`
	// The next maintenance version preference.
	VersionPreference pulumi.StringOutput `pulumi:"versionPreference"`
	// The percentage of CPUs reserved across nodes to support node failover. Allowed values are 0%, 25%, and 50%, with 50% being the default option.
	VmFailoverReservation pulumi.IntOutput `pulumi:"vmFailoverReservation"`
}

// NewAutonomousContainerDatabaseAddStandby registers a new resource with the given unique name, arguments, and options.
func NewAutonomousContainerDatabaseAddStandby(ctx *pulumi.Context,
	name string, args *AutonomousContainerDatabaseAddStandbyArgs, opts ...pulumi.ResourceOption) (*AutonomousContainerDatabaseAddStandby, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutonomousContainerDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'AutonomousContainerDatabaseId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutonomousContainerDatabaseAddStandby
	err := ctx.RegisterResource("oci:Database/autonomousContainerDatabaseAddStandby:AutonomousContainerDatabaseAddStandby", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutonomousContainerDatabaseAddStandby gets an existing AutonomousContainerDatabaseAddStandby resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutonomousContainerDatabaseAddStandby(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutonomousContainerDatabaseAddStandbyState, opts ...pulumi.ResourceOption) (*AutonomousContainerDatabaseAddStandby, error) {
	var resource AutonomousContainerDatabaseAddStandby
	err := ctx.ReadResource("oci:Database/autonomousContainerDatabaseAddStandby:AutonomousContainerDatabaseAddStandby", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutonomousContainerDatabaseAddStandby resources.
type autonomousContainerDatabaseAddStandbyState struct {
	// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousContainerDatabaseId *string `pulumi:"autonomousContainerDatabaseId"`
	// **No longer used.** For Autonomous Database on dedicated Exadata infrastructure, the container database is created within a specified `cloudAutonomousVmCluster`.
	AutonomousExadataInfrastructureId *string `pulumi:"autonomousExadataInfrastructureId"`
	// The OCID of the Autonomous VM Cluster.
	AutonomousVmClusterId *string `pulumi:"autonomousVmClusterId"`
	// The domain of the Autonomous Container Database
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// Sum of CPUs available on the Autonomous VM Cluster + Sum of reclaimable CPUs available in the Autonomous Container Database.
	AvailableCpus *float64 `pulumi:"availableCpus"`
	// Backup options for the Autonomous Container Database.
	BackupConfigs []AutonomousContainerDatabaseAddStandbyBackupConfig `pulumi:"backupConfigs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
	CloudAutonomousVmClusterId *string `pulumi:"cloudAutonomousVmClusterId"`
	// The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The compute model of the Autonomous Container Database. For Autonomous Database on Dedicated Exadata Infrastructure, the CPU type (ECPUs or OCPUs) is determined by the parent Autonomous Exadata VM Cluster's compute model. ECPU compute model is the recommended model and OCPU compute model is legacy. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
	ComputeModel *string `pulumi:"computeModel"`
	// Array of Dg associations.
	DataguardGroupMembers []AutonomousContainerDatabaseAddStandbyDataguardGroupMember `pulumi:"dataguardGroupMembers"`
	// The properties that define Autonomous Container Databases Dataguard.
	Dataguards []AutonomousContainerDatabaseAddStandbyDataguard `pulumi:"dataguards"`
	// The Database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, starting with an alphabetic character, followed by 1 to 7 alphanumeric characters.
	DbName *string `pulumi:"dbName"`
	// The CPU value beyond which an Autonomous Database will be opened across multiple nodes. The default value of this attribute is 16 for OCPUs and 64 for ECPUs.
	DbSplitThreshold *int    `pulumi:"dbSplitThreshold"`
	DbUniqueName     *string `pulumi:"dbUniqueName"`
	// Oracle Database version of the Autonomous Container Database.
	DbVersion *string `pulumi:"dbVersion"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The user-provided name for the Autonomous Container Database.
	DisplayName *string `pulumi:"displayName"`
	// Determines whether an Autonomous Database must be opened across the maximum number of nodes or the least number of nodes. By default, Minimum nodes is selected.
	DistributionAffinity *string `pulumi:"distributionAffinity"`
	// DST Time-Zone File version of the Autonomous Container Database.
	DstFileVersion *string `pulumi:"dstFileVersion"`
	// The lag time for my preference based on data loss tolerance in seconds.
	FastStartFailOverLagLimitInSeconds *int `pulumi:"fastStartFailOverLagLimitInSeconds"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The infrastructure type this resource belongs to.
	InfrastructureType *string `pulumi:"infrastructureType"`
	// Indicates whether Automatic Failover is enabled for Autonomous Container Database Dataguard Association
	IsAutomaticFailoverEnabled *bool `pulumi:"isAutomaticFailoverEnabled"`
	// **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
	IsDataGuardEnabled *bool `pulumi:"isDataGuardEnabled"`
	// Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
	IsDstFileUpdateEnabled *bool `pulumi:"isDstFileUpdateEnabled"`
	// Whether it is multiple standby Autonomous Dataguard
	IsMultipleStandby *bool `pulumi:"isMultipleStandby"`
	// Key History Entry.
	KeyHistoryEntries []AutonomousContainerDatabaseAddStandbyKeyHistoryEntry `pulumi:"keyHistoryEntries"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
	KeyStoreId *string `pulumi:"keyStoreId"`
	// The wallet name for Oracle Key Vault.
	KeyStoreWalletName *string `pulumi:"keyStoreWalletName"`
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
	KmsKeyVersionId *string `pulumi:"kmsKeyVersionId"`
	// The largest Autonomous Database (CPU) that can be created in a new Autonomous Container Database.
	LargestProvisionableAutonomousDatabaseInCpus *float64 `pulumi:"largestProvisionableAutonomousDatabaseInCpus"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
	LastMaintenanceRunId *string `pulumi:"lastMaintenanceRunId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// List of One-Off patches that has been successfully applied to Autonomous Container Database
	ListOneOffPatches []string `pulumi:"listOneOffPatches"`
	// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindows []AutonomousContainerDatabaseAddStandbyMaintenanceWindow `pulumi:"maintenanceWindows"`
	// The amount of memory (in GBs) enabled per ECPU or OCPU in the Autonomous VM Cluster.
	MemoryPerOracleComputeUnitInGbs *int `pulumi:"memoryPerOracleComputeUnitInGbs"`
	// Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
	NetServicesArchitecture *string `pulumi:"netServicesArchitecture"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
	NextMaintenanceRunId *string `pulumi:"nextMaintenanceRunId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
	PatchId *string `pulumi:"patchId"`
	// Database patch model preference.
	PatchModel *string `pulumi:"patchModel"`
	// Backup options for the standby Autonomous Container Database.
	PeerAutonomousContainerDatabaseBackupConfig *AutonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfig `pulumi:"peerAutonomousContainerDatabaseBackupConfig"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the standby Autonomous Container Database will be created.
	PeerAutonomousContainerDatabaseCompartmentId *string `pulumi:"peerAutonomousContainerDatabaseCompartmentId"`
	// The display name for the peer Autonomous Container Database.
	PeerAutonomousContainerDatabaseDisplayName *string `pulumi:"peerAutonomousContainerDatabaseDisplayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer Autonomous Exadata VM Cluster.
	PeerAutonomousVmClusterId *string `pulumi:"peerAutonomousVmClusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
	PeerCloudAutonomousVmClusterId *string `pulumi:"peerCloudAutonomousVmClusterId"`
	// Specifies the `DB_UNIQUE_NAME` of the peer database to be created.
	PeerDbUniqueName *string `pulumi:"peerDbUniqueName"`
	// The protection mode of this Autonomous Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
	ProtectionMode *string `pulumi:"protectionMode"`
	// An array of CPU values that can be used to successfully provision a single Autonomous Database.
	ProvisionableCpuses []float64 `pulumi:"provisionableCpuses"`
	// The number of CPUs provisioned in an Autonomous Container Database.
	ProvisionedCpus *float64 `pulumi:"provisionedCpus"`
	// CPUs that continue to be included in the count of CPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available CPUs at its parent Autonomous VM Cluster level by restarting the Autonomous Container Database.
	ReclaimableCpus *float64 `pulumi:"reclaimableCpus"`
	// The number of CPUs reserved in an Autonomous Container Database.
	ReservedCpus *float64 `pulumi:"reservedCpus"`
	// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
	Role *string `pulumi:"role"`
	// The service level agreement type of the container database. The default is STANDARD.
	ServiceLevelAgreementType *string `pulumi:"serviceLevelAgreementType"`
	// The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StandbyMaintenanceBufferInDays *int `pulumi:"standbyMaintenanceBufferInDays"`
	// The current state of the Autonomous Container Database.
	State *string `pulumi:"state"`
	// The date and time the Autonomous Container Database was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The timestamp of last successful backup. Here NULL value represents either there are no successful backups or backups are not configured for this Autonomous Container Database.
	TimeOfLastBackup *string `pulumi:"timeOfLastBackup"`
	// The date and time the Autonomous Container Database will be reverted to Standby from Snapshot Standby.
	TimeSnapshotStandbyRevert *string `pulumi:"timeSnapshotStandbyRevert"`
	// The number of CPUs allocated to the Autonomous VM cluster.
	TotalCpus *int `pulumi:"totalCpus"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
	VaultId *string `pulumi:"vaultId"`
	// The next maintenance version preference.
	VersionPreference *string `pulumi:"versionPreference"`
	// The percentage of CPUs reserved across nodes to support node failover. Allowed values are 0%, 25%, and 50%, with 50% being the default option.
	VmFailoverReservation *int `pulumi:"vmFailoverReservation"`
}

type AutonomousContainerDatabaseAddStandbyState struct {
	// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousContainerDatabaseId pulumi.StringPtrInput
	// **No longer used.** For Autonomous Database on dedicated Exadata infrastructure, the container database is created within a specified `cloudAutonomousVmCluster`.
	AutonomousExadataInfrastructureId pulumi.StringPtrInput
	// The OCID of the Autonomous VM Cluster.
	AutonomousVmClusterId pulumi.StringPtrInput
	// The domain of the Autonomous Container Database
	AvailabilityDomain pulumi.StringPtrInput
	// Sum of CPUs available on the Autonomous VM Cluster + Sum of reclaimable CPUs available in the Autonomous Container Database.
	AvailableCpus pulumi.Float64PtrInput
	// Backup options for the Autonomous Container Database.
	BackupConfigs AutonomousContainerDatabaseAddStandbyBackupConfigArrayInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
	CloudAutonomousVmClusterId pulumi.StringPtrInput
	// The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The compute model of the Autonomous Container Database. For Autonomous Database on Dedicated Exadata Infrastructure, the CPU type (ECPUs or OCPUs) is determined by the parent Autonomous Exadata VM Cluster's compute model. ECPU compute model is the recommended model and OCPU compute model is legacy. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
	ComputeModel pulumi.StringPtrInput
	// Array of Dg associations.
	DataguardGroupMembers AutonomousContainerDatabaseAddStandbyDataguardGroupMemberArrayInput
	// The properties that define Autonomous Container Databases Dataguard.
	Dataguards AutonomousContainerDatabaseAddStandbyDataguardArrayInput
	// The Database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, starting with an alphabetic character, followed by 1 to 7 alphanumeric characters.
	DbName pulumi.StringPtrInput
	// The CPU value beyond which an Autonomous Database will be opened across multiple nodes. The default value of this attribute is 16 for OCPUs and 64 for ECPUs.
	DbSplitThreshold pulumi.IntPtrInput
	DbUniqueName     pulumi.StringPtrInput
	// Oracle Database version of the Autonomous Container Database.
	DbVersion pulumi.StringPtrInput
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapInput
	// The user-provided name for the Autonomous Container Database.
	DisplayName pulumi.StringPtrInput
	// Determines whether an Autonomous Database must be opened across the maximum number of nodes or the least number of nodes. By default, Minimum nodes is selected.
	DistributionAffinity pulumi.StringPtrInput
	// DST Time-Zone File version of the Autonomous Container Database.
	DstFileVersion pulumi.StringPtrInput
	// The lag time for my preference based on data loss tolerance in seconds.
	FastStartFailOverLagLimitInSeconds pulumi.IntPtrInput
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// The infrastructure type this resource belongs to.
	InfrastructureType pulumi.StringPtrInput
	// Indicates whether Automatic Failover is enabled for Autonomous Container Database Dataguard Association
	IsAutomaticFailoverEnabled pulumi.BoolPtrInput
	// **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
	IsDataGuardEnabled pulumi.BoolPtrInput
	// Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
	IsDstFileUpdateEnabled pulumi.BoolPtrInput
	// Whether it is multiple standby Autonomous Dataguard
	IsMultipleStandby pulumi.BoolPtrInput
	// Key History Entry.
	KeyHistoryEntries AutonomousContainerDatabaseAddStandbyKeyHistoryEntryArrayInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
	KeyStoreId pulumi.StringPtrInput
	// The wallet name for Oracle Key Vault.
	KeyStoreWalletName pulumi.StringPtrInput
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId pulumi.StringPtrInput
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
	KmsKeyVersionId pulumi.StringPtrInput
	// The largest Autonomous Database (CPU) that can be created in a new Autonomous Container Database.
	LargestProvisionableAutonomousDatabaseInCpus pulumi.Float64PtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
	LastMaintenanceRunId pulumi.StringPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// List of One-Off patches that has been successfully applied to Autonomous Container Database
	ListOneOffPatches pulumi.StringArrayInput
	// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindows AutonomousContainerDatabaseAddStandbyMaintenanceWindowArrayInput
	// The amount of memory (in GBs) enabled per ECPU or OCPU in the Autonomous VM Cluster.
	MemoryPerOracleComputeUnitInGbs pulumi.IntPtrInput
	// Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
	NetServicesArchitecture pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
	NextMaintenanceRunId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
	PatchId pulumi.StringPtrInput
	// Database patch model preference.
	PatchModel pulumi.StringPtrInput
	// Backup options for the standby Autonomous Container Database.
	PeerAutonomousContainerDatabaseBackupConfig AutonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the standby Autonomous Container Database will be created.
	PeerAutonomousContainerDatabaseCompartmentId pulumi.StringPtrInput
	// The display name for the peer Autonomous Container Database.
	PeerAutonomousContainerDatabaseDisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer Autonomous Exadata VM Cluster.
	PeerAutonomousVmClusterId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
	PeerCloudAutonomousVmClusterId pulumi.StringPtrInput
	// Specifies the `DB_UNIQUE_NAME` of the peer database to be created.
	PeerDbUniqueName pulumi.StringPtrInput
	// The protection mode of this Autonomous Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
	ProtectionMode pulumi.StringPtrInput
	// An array of CPU values that can be used to successfully provision a single Autonomous Database.
	ProvisionableCpuses pulumi.Float64ArrayInput
	// The number of CPUs provisioned in an Autonomous Container Database.
	ProvisionedCpus pulumi.Float64PtrInput
	// CPUs that continue to be included in the count of CPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available CPUs at its parent Autonomous VM Cluster level by restarting the Autonomous Container Database.
	ReclaimableCpus pulumi.Float64PtrInput
	// The number of CPUs reserved in an Autonomous Container Database.
	ReservedCpus pulumi.Float64PtrInput
	// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
	Role pulumi.StringPtrInput
	// The service level agreement type of the container database. The default is STANDARD.
	ServiceLevelAgreementType pulumi.StringPtrInput
	// The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StandbyMaintenanceBufferInDays pulumi.IntPtrInput
	// The current state of the Autonomous Container Database.
	State pulumi.StringPtrInput
	// The date and time the Autonomous Container Database was created.
	TimeCreated pulumi.StringPtrInput
	// The timestamp of last successful backup. Here NULL value represents either there are no successful backups or backups are not configured for this Autonomous Container Database.
	TimeOfLastBackup pulumi.StringPtrInput
	// The date and time the Autonomous Container Database will be reverted to Standby from Snapshot Standby.
	TimeSnapshotStandbyRevert pulumi.StringPtrInput
	// The number of CPUs allocated to the Autonomous VM cluster.
	TotalCpus pulumi.IntPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
	VaultId pulumi.StringPtrInput
	// The next maintenance version preference.
	VersionPreference pulumi.StringPtrInput
	// The percentage of CPUs reserved across nodes to support node failover. Allowed values are 0%, 25%, and 50%, with 50% being the default option.
	VmFailoverReservation pulumi.IntPtrInput
}

func (AutonomousContainerDatabaseAddStandbyState) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousContainerDatabaseAddStandbyState)(nil)).Elem()
}

type autonomousContainerDatabaseAddStandbyArgs struct {
	// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousContainerDatabaseId string `pulumi:"autonomousContainerDatabaseId"`
	// The lag time for my preference based on data loss tolerance in seconds.
	FastStartFailOverLagLimitInSeconds *int `pulumi:"fastStartFailOverLagLimitInSeconds"`
	// Indicates whether Automatic Failover is enabled for Autonomous Container Database Dataguard Association
	IsAutomaticFailoverEnabled *bool `pulumi:"isAutomaticFailoverEnabled"`
	// Backup options for the standby Autonomous Container Database.
	PeerAutonomousContainerDatabaseBackupConfig *AutonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfig `pulumi:"peerAutonomousContainerDatabaseBackupConfig"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the standby Autonomous Container Database will be created.
	PeerAutonomousContainerDatabaseCompartmentId *string `pulumi:"peerAutonomousContainerDatabaseCompartmentId"`
	// The display name for the peer Autonomous Container Database.
	PeerAutonomousContainerDatabaseDisplayName *string `pulumi:"peerAutonomousContainerDatabaseDisplayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer Autonomous Exadata VM Cluster.
	PeerAutonomousVmClusterId *string `pulumi:"peerAutonomousVmClusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
	PeerCloudAutonomousVmClusterId *string `pulumi:"peerCloudAutonomousVmClusterId"`
	// Specifies the `DB_UNIQUE_NAME` of the peer database to be created.
	PeerDbUniqueName *string `pulumi:"peerDbUniqueName"`
	// The protection mode of this Autonomous Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
	ProtectionMode *string `pulumi:"protectionMode"`
	// The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StandbyMaintenanceBufferInDays *int `pulumi:"standbyMaintenanceBufferInDays"`
}

// The set of arguments for constructing a AutonomousContainerDatabaseAddStandby resource.
type AutonomousContainerDatabaseAddStandbyArgs struct {
	// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousContainerDatabaseId pulumi.StringInput
	// The lag time for my preference based on data loss tolerance in seconds.
	FastStartFailOverLagLimitInSeconds pulumi.IntPtrInput
	// Indicates whether Automatic Failover is enabled for Autonomous Container Database Dataguard Association
	IsAutomaticFailoverEnabled pulumi.BoolPtrInput
	// Backup options for the standby Autonomous Container Database.
	PeerAutonomousContainerDatabaseBackupConfig AutonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the standby Autonomous Container Database will be created.
	PeerAutonomousContainerDatabaseCompartmentId pulumi.StringPtrInput
	// The display name for the peer Autonomous Container Database.
	PeerAutonomousContainerDatabaseDisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer Autonomous Exadata VM Cluster.
	PeerAutonomousVmClusterId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
	PeerCloudAutonomousVmClusterId pulumi.StringPtrInput
	// Specifies the `DB_UNIQUE_NAME` of the peer database to be created.
	PeerDbUniqueName pulumi.StringPtrInput
	// The protection mode of this Autonomous Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
	ProtectionMode pulumi.StringPtrInput
	// The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StandbyMaintenanceBufferInDays pulumi.IntPtrInput
}

func (AutonomousContainerDatabaseAddStandbyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousContainerDatabaseAddStandbyArgs)(nil)).Elem()
}

type AutonomousContainerDatabaseAddStandbyInput interface {
	pulumi.Input

	ToAutonomousContainerDatabaseAddStandbyOutput() AutonomousContainerDatabaseAddStandbyOutput
	ToAutonomousContainerDatabaseAddStandbyOutputWithContext(ctx context.Context) AutonomousContainerDatabaseAddStandbyOutput
}

func (*AutonomousContainerDatabaseAddStandby) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousContainerDatabaseAddStandby)(nil)).Elem()
}

func (i *AutonomousContainerDatabaseAddStandby) ToAutonomousContainerDatabaseAddStandbyOutput() AutonomousContainerDatabaseAddStandbyOutput {
	return i.ToAutonomousContainerDatabaseAddStandbyOutputWithContext(context.Background())
}

func (i *AutonomousContainerDatabaseAddStandby) ToAutonomousContainerDatabaseAddStandbyOutputWithContext(ctx context.Context) AutonomousContainerDatabaseAddStandbyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousContainerDatabaseAddStandbyOutput)
}

// AutonomousContainerDatabaseAddStandbyArrayInput is an input type that accepts AutonomousContainerDatabaseAddStandbyArray and AutonomousContainerDatabaseAddStandbyArrayOutput values.
// You can construct a concrete instance of `AutonomousContainerDatabaseAddStandbyArrayInput` via:
//
//	AutonomousContainerDatabaseAddStandbyArray{ AutonomousContainerDatabaseAddStandbyArgs{...} }
type AutonomousContainerDatabaseAddStandbyArrayInput interface {
	pulumi.Input

	ToAutonomousContainerDatabaseAddStandbyArrayOutput() AutonomousContainerDatabaseAddStandbyArrayOutput
	ToAutonomousContainerDatabaseAddStandbyArrayOutputWithContext(context.Context) AutonomousContainerDatabaseAddStandbyArrayOutput
}

type AutonomousContainerDatabaseAddStandbyArray []AutonomousContainerDatabaseAddStandbyInput

func (AutonomousContainerDatabaseAddStandbyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousContainerDatabaseAddStandby)(nil)).Elem()
}

func (i AutonomousContainerDatabaseAddStandbyArray) ToAutonomousContainerDatabaseAddStandbyArrayOutput() AutonomousContainerDatabaseAddStandbyArrayOutput {
	return i.ToAutonomousContainerDatabaseAddStandbyArrayOutputWithContext(context.Background())
}

func (i AutonomousContainerDatabaseAddStandbyArray) ToAutonomousContainerDatabaseAddStandbyArrayOutputWithContext(ctx context.Context) AutonomousContainerDatabaseAddStandbyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousContainerDatabaseAddStandbyArrayOutput)
}

// AutonomousContainerDatabaseAddStandbyMapInput is an input type that accepts AutonomousContainerDatabaseAddStandbyMap and AutonomousContainerDatabaseAddStandbyMapOutput values.
// You can construct a concrete instance of `AutonomousContainerDatabaseAddStandbyMapInput` via:
//
//	AutonomousContainerDatabaseAddStandbyMap{ "key": AutonomousContainerDatabaseAddStandbyArgs{...} }
type AutonomousContainerDatabaseAddStandbyMapInput interface {
	pulumi.Input

	ToAutonomousContainerDatabaseAddStandbyMapOutput() AutonomousContainerDatabaseAddStandbyMapOutput
	ToAutonomousContainerDatabaseAddStandbyMapOutputWithContext(context.Context) AutonomousContainerDatabaseAddStandbyMapOutput
}

type AutonomousContainerDatabaseAddStandbyMap map[string]AutonomousContainerDatabaseAddStandbyInput

func (AutonomousContainerDatabaseAddStandbyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousContainerDatabaseAddStandby)(nil)).Elem()
}

func (i AutonomousContainerDatabaseAddStandbyMap) ToAutonomousContainerDatabaseAddStandbyMapOutput() AutonomousContainerDatabaseAddStandbyMapOutput {
	return i.ToAutonomousContainerDatabaseAddStandbyMapOutputWithContext(context.Background())
}

func (i AutonomousContainerDatabaseAddStandbyMap) ToAutonomousContainerDatabaseAddStandbyMapOutputWithContext(ctx context.Context) AutonomousContainerDatabaseAddStandbyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousContainerDatabaseAddStandbyMapOutput)
}

type AutonomousContainerDatabaseAddStandbyOutput struct{ *pulumi.OutputState }

func (AutonomousContainerDatabaseAddStandbyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousContainerDatabaseAddStandby)(nil)).Elem()
}

func (o AutonomousContainerDatabaseAddStandbyOutput) ToAutonomousContainerDatabaseAddStandbyOutput() AutonomousContainerDatabaseAddStandbyOutput {
	return o
}

func (o AutonomousContainerDatabaseAddStandbyOutput) ToAutonomousContainerDatabaseAddStandbyOutputWithContext(ctx context.Context) AutonomousContainerDatabaseAddStandbyOutput {
	return o
}

// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o AutonomousContainerDatabaseAddStandbyOutput) AutonomousContainerDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput {
		return v.AutonomousContainerDatabaseId
	}).(pulumi.StringOutput)
}

// **No longer used.** For Autonomous Database on dedicated Exadata infrastructure, the container database is created within a specified `cloudAutonomousVmCluster`.
func (o AutonomousContainerDatabaseAddStandbyOutput) AutonomousExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput {
		return v.AutonomousExadataInfrastructureId
	}).(pulumi.StringOutput)
}

// The OCID of the Autonomous VM Cluster.
func (o AutonomousContainerDatabaseAddStandbyOutput) AutonomousVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.AutonomousVmClusterId }).(pulumi.StringOutput)
}

// The domain of the Autonomous Container Database
func (o AutonomousContainerDatabaseAddStandbyOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// Sum of CPUs available on the Autonomous VM Cluster + Sum of reclaimable CPUs available in the Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) AvailableCpus() pulumi.Float64Output {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.Float64Output { return v.AvailableCpus }).(pulumi.Float64Output)
}

// Backup options for the Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) BackupConfigs() AutonomousContainerDatabaseAddStandbyBackupConfigArrayOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) AutonomousContainerDatabaseAddStandbyBackupConfigArrayOutput {
		return v.BackupConfigs
	}).(AutonomousContainerDatabaseAddStandbyBackupConfigArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
func (o AutonomousContainerDatabaseAddStandbyOutput) CloudAutonomousVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput {
		return v.CloudAutonomousVmClusterId
	}).(pulumi.StringOutput)
}

// The OCID of the compartment.
func (o AutonomousContainerDatabaseAddStandbyOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The compute model of the Autonomous Container Database. For Autonomous Database on Dedicated Exadata Infrastructure, the CPU type (ECPUs or OCPUs) is determined by the parent Autonomous Exadata VM Cluster's compute model. ECPU compute model is the recommended model and OCPU compute model is legacy. See [Compute Models in Autonomous Database on Dedicated Exadata Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
func (o AutonomousContainerDatabaseAddStandbyOutput) ComputeModel() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.ComputeModel }).(pulumi.StringOutput)
}

// Array of Dg associations.
func (o AutonomousContainerDatabaseAddStandbyOutput) DataguardGroupMembers() AutonomousContainerDatabaseAddStandbyDataguardGroupMemberArrayOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) AutonomousContainerDatabaseAddStandbyDataguardGroupMemberArrayOutput {
		return v.DataguardGroupMembers
	}).(AutonomousContainerDatabaseAddStandbyDataguardGroupMemberArrayOutput)
}

// The properties that define Autonomous Container Databases Dataguard.
func (o AutonomousContainerDatabaseAddStandbyOutput) Dataguards() AutonomousContainerDatabaseAddStandbyDataguardArrayOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) AutonomousContainerDatabaseAddStandbyDataguardArrayOutput {
		return v.Dataguards
	}).(AutonomousContainerDatabaseAddStandbyDataguardArrayOutput)
}

// The Database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, starting with an alphabetic character, followed by 1 to 7 alphanumeric characters.
func (o AutonomousContainerDatabaseAddStandbyOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.DbName }).(pulumi.StringOutput)
}

// The CPU value beyond which an Autonomous Database will be opened across multiple nodes. The default value of this attribute is 16 for OCPUs and 64 for ECPUs.
func (o AutonomousContainerDatabaseAddStandbyOutput) DbSplitThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.IntOutput { return v.DbSplitThreshold }).(pulumi.IntOutput)
}

func (o AutonomousContainerDatabaseAddStandbyOutput) DbUniqueName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.DbUniqueName }).(pulumi.StringOutput)
}

// Oracle Database version of the Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.DbVersion }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o AutonomousContainerDatabaseAddStandbyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The user-provided name for the Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Determines whether an Autonomous Database must be opened across the maximum number of nodes or the least number of nodes. By default, Minimum nodes is selected.
func (o AutonomousContainerDatabaseAddStandbyOutput) DistributionAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.DistributionAffinity }).(pulumi.StringOutput)
}

// DST Time-Zone File version of the Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) DstFileVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.DstFileVersion }).(pulumi.StringOutput)
}

// The lag time for my preference based on data loss tolerance in seconds.
func (o AutonomousContainerDatabaseAddStandbyOutput) FastStartFailOverLagLimitInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.IntOutput {
		return v.FastStartFailOverLagLimitInSeconds
	}).(pulumi.IntOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o AutonomousContainerDatabaseAddStandbyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The infrastructure type this resource belongs to.
func (o AutonomousContainerDatabaseAddStandbyOutput) InfrastructureType() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.InfrastructureType }).(pulumi.StringOutput)
}

// Indicates whether Automatic Failover is enabled for Autonomous Container Database Dataguard Association
func (o AutonomousContainerDatabaseAddStandbyOutput) IsAutomaticFailoverEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.BoolOutput { return v.IsAutomaticFailoverEnabled }).(pulumi.BoolOutput)
}

// **Deprecated.** Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
func (o AutonomousContainerDatabaseAddStandbyOutput) IsDataGuardEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.BoolOutput { return v.IsDataGuardEnabled }).(pulumi.BoolOutput)
}

// Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
func (o AutonomousContainerDatabaseAddStandbyOutput) IsDstFileUpdateEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.BoolOutput { return v.IsDstFileUpdateEnabled }).(pulumi.BoolOutput)
}

// Whether it is multiple standby Autonomous Dataguard
func (o AutonomousContainerDatabaseAddStandbyOutput) IsMultipleStandby() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.BoolOutput { return v.IsMultipleStandby }).(pulumi.BoolOutput)
}

// Key History Entry.
func (o AutonomousContainerDatabaseAddStandbyOutput) KeyHistoryEntries() AutonomousContainerDatabaseAddStandbyKeyHistoryEntryArrayOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) AutonomousContainerDatabaseAddStandbyKeyHistoryEntryArrayOutput {
		return v.KeyHistoryEntries
	}).(AutonomousContainerDatabaseAddStandbyKeyHistoryEntryArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
func (o AutonomousContainerDatabaseAddStandbyOutput) KeyStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.KeyStoreId }).(pulumi.StringOutput)
}

// The wallet name for Oracle Key Vault.
func (o AutonomousContainerDatabaseAddStandbyOutput) KeyStoreWalletName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.KeyStoreWalletName }).(pulumi.StringOutput)
}

// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
func (o AutonomousContainerDatabaseAddStandbyOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
func (o AutonomousContainerDatabaseAddStandbyOutput) KmsKeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.KmsKeyVersionId }).(pulumi.StringOutput)
}

// The largest Autonomous Database (CPU) that can be created in a new Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) LargestProvisionableAutonomousDatabaseInCpus() pulumi.Float64Output {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.Float64Output {
		return v.LargestProvisionableAutonomousDatabaseInCpus
	}).(pulumi.Float64Output)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
func (o AutonomousContainerDatabaseAddStandbyOutput) LastMaintenanceRunId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.LastMaintenanceRunId }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o AutonomousContainerDatabaseAddStandbyOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// List of One-Off patches that has been successfully applied to Autonomous Container Database
func (o AutonomousContainerDatabaseAddStandbyOutput) ListOneOffPatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringArrayOutput { return v.ListOneOffPatches }).(pulumi.StringArrayOutput)
}

// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
func (o AutonomousContainerDatabaseAddStandbyOutput) MaintenanceWindows() AutonomousContainerDatabaseAddStandbyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) AutonomousContainerDatabaseAddStandbyMaintenanceWindowArrayOutput {
		return v.MaintenanceWindows
	}).(AutonomousContainerDatabaseAddStandbyMaintenanceWindowArrayOutput)
}

// The amount of memory (in GBs) enabled per ECPU or OCPU in the Autonomous VM Cluster.
func (o AutonomousContainerDatabaseAddStandbyOutput) MemoryPerOracleComputeUnitInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.IntOutput {
		return v.MemoryPerOracleComputeUnitInGbs
	}).(pulumi.IntOutput)
}

// Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
func (o AutonomousContainerDatabaseAddStandbyOutput) NetServicesArchitecture() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.NetServicesArchitecture }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
func (o AutonomousContainerDatabaseAddStandbyOutput) NextMaintenanceRunId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.NextMaintenanceRunId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
func (o AutonomousContainerDatabaseAddStandbyOutput) PatchId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.PatchId }).(pulumi.StringOutput)
}

// Database patch model preference.
func (o AutonomousContainerDatabaseAddStandbyOutput) PatchModel() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.PatchModel }).(pulumi.StringOutput)
}

// Backup options for the standby Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) PeerAutonomousContainerDatabaseBackupConfig() AutonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) AutonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigOutput {
		return v.PeerAutonomousContainerDatabaseBackupConfig
	}).(AutonomousContainerDatabaseAddStandbyPeerAutonomousContainerDatabaseBackupConfigOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the standby Autonomous Container Database will be created.
func (o AutonomousContainerDatabaseAddStandbyOutput) PeerAutonomousContainerDatabaseCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput {
		return v.PeerAutonomousContainerDatabaseCompartmentId
	}).(pulumi.StringOutput)
}

// The display name for the peer Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) PeerAutonomousContainerDatabaseDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput {
		return v.PeerAutonomousContainerDatabaseDisplayName
	}).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer Autonomous Exadata VM Cluster.
func (o AutonomousContainerDatabaseAddStandbyOutput) PeerAutonomousVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.PeerAutonomousVmClusterId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
func (o AutonomousContainerDatabaseAddStandbyOutput) PeerCloudAutonomousVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput {
		return v.PeerCloudAutonomousVmClusterId
	}).(pulumi.StringOutput)
}

// Specifies the `DB_UNIQUE_NAME` of the peer database to be created.
func (o AutonomousContainerDatabaseAddStandbyOutput) PeerDbUniqueName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.PeerDbUniqueName }).(pulumi.StringOutput)
}

// The protection mode of this Autonomous Data Guard association. For more information, see [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000) in the Oracle Data Guard documentation.
func (o AutonomousContainerDatabaseAddStandbyOutput) ProtectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.ProtectionMode }).(pulumi.StringOutput)
}

// An array of CPU values that can be used to successfully provision a single Autonomous Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) ProvisionableCpuses() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.Float64ArrayOutput { return v.ProvisionableCpuses }).(pulumi.Float64ArrayOutput)
}

// The number of CPUs provisioned in an Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) ProvisionedCpus() pulumi.Float64Output {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.Float64Output { return v.ProvisionedCpus }).(pulumi.Float64Output)
}

// CPUs that continue to be included in the count of CPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available CPUs at its parent Autonomous VM Cluster level by restarting the Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) ReclaimableCpus() pulumi.Float64Output {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.Float64Output { return v.ReclaimableCpus }).(pulumi.Float64Output)
}

// The number of CPUs reserved in an Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) ReservedCpus() pulumi.Float64Output {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.Float64Output { return v.ReservedCpus }).(pulumi.Float64Output)
}

// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
func (o AutonomousContainerDatabaseAddStandbyOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// The service level agreement type of the container database. The default is STANDARD.
func (o AutonomousContainerDatabaseAddStandbyOutput) ServiceLevelAgreementType() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.ServiceLevelAgreementType }).(pulumi.StringOutput)
}

// The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o AutonomousContainerDatabaseAddStandbyOutput) StandbyMaintenanceBufferInDays() pulumi.IntOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.IntOutput {
		return v.StandbyMaintenanceBufferInDays
	}).(pulumi.IntOutput)
}

// The current state of the Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the Autonomous Container Database was created.
func (o AutonomousContainerDatabaseAddStandbyOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The timestamp of last successful backup. Here NULL value represents either there are no successful backups or backups are not configured for this Autonomous Container Database.
func (o AutonomousContainerDatabaseAddStandbyOutput) TimeOfLastBackup() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.TimeOfLastBackup }).(pulumi.StringOutput)
}

// The date and time the Autonomous Container Database will be reverted to Standby from Snapshot Standby.
func (o AutonomousContainerDatabaseAddStandbyOutput) TimeSnapshotStandbyRevert() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.TimeSnapshotStandbyRevert }).(pulumi.StringOutput)
}

// The number of CPUs allocated to the Autonomous VM cluster.
func (o AutonomousContainerDatabaseAddStandbyOutput) TotalCpus() pulumi.IntOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.IntOutput { return v.TotalCpus }).(pulumi.IntOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
func (o AutonomousContainerDatabaseAddStandbyOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.VaultId }).(pulumi.StringOutput)
}

// The next maintenance version preference.
func (o AutonomousContainerDatabaseAddStandbyOutput) VersionPreference() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.StringOutput { return v.VersionPreference }).(pulumi.StringOutput)
}

// The percentage of CPUs reserved across nodes to support node failover. Allowed values are 0%, 25%, and 50%, with 50% being the default option.
func (o AutonomousContainerDatabaseAddStandbyOutput) VmFailoverReservation() pulumi.IntOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseAddStandby) pulumi.IntOutput { return v.VmFailoverReservation }).(pulumi.IntOutput)
}

type AutonomousContainerDatabaseAddStandbyArrayOutput struct{ *pulumi.OutputState }

func (AutonomousContainerDatabaseAddStandbyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousContainerDatabaseAddStandby)(nil)).Elem()
}

func (o AutonomousContainerDatabaseAddStandbyArrayOutput) ToAutonomousContainerDatabaseAddStandbyArrayOutput() AutonomousContainerDatabaseAddStandbyArrayOutput {
	return o
}

func (o AutonomousContainerDatabaseAddStandbyArrayOutput) ToAutonomousContainerDatabaseAddStandbyArrayOutputWithContext(ctx context.Context) AutonomousContainerDatabaseAddStandbyArrayOutput {
	return o
}

func (o AutonomousContainerDatabaseAddStandbyArrayOutput) Index(i pulumi.IntInput) AutonomousContainerDatabaseAddStandbyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutonomousContainerDatabaseAddStandby {
		return vs[0].([]*AutonomousContainerDatabaseAddStandby)[vs[1].(int)]
	}).(AutonomousContainerDatabaseAddStandbyOutput)
}

type AutonomousContainerDatabaseAddStandbyMapOutput struct{ *pulumi.OutputState }

func (AutonomousContainerDatabaseAddStandbyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousContainerDatabaseAddStandby)(nil)).Elem()
}

func (o AutonomousContainerDatabaseAddStandbyMapOutput) ToAutonomousContainerDatabaseAddStandbyMapOutput() AutonomousContainerDatabaseAddStandbyMapOutput {
	return o
}

func (o AutonomousContainerDatabaseAddStandbyMapOutput) ToAutonomousContainerDatabaseAddStandbyMapOutputWithContext(ctx context.Context) AutonomousContainerDatabaseAddStandbyMapOutput {
	return o
}

func (o AutonomousContainerDatabaseAddStandbyMapOutput) MapIndex(k pulumi.StringInput) AutonomousContainerDatabaseAddStandbyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutonomousContainerDatabaseAddStandby {
		return vs[0].(map[string]*AutonomousContainerDatabaseAddStandby)[vs[1].(string)]
	}).(AutonomousContainerDatabaseAddStandbyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousContainerDatabaseAddStandbyInput)(nil)).Elem(), &AutonomousContainerDatabaseAddStandby{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousContainerDatabaseAddStandbyArrayInput)(nil)).Elem(), AutonomousContainerDatabaseAddStandbyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousContainerDatabaseAddStandbyMapInput)(nil)).Elem(), AutonomousContainerDatabaseAddStandbyMap{})
	pulumi.RegisterOutputType(AutonomousContainerDatabaseAddStandbyOutput{})
	pulumi.RegisterOutputType(AutonomousContainerDatabaseAddStandbyArrayOutput{})
	pulumi.RegisterOutputType(AutonomousContainerDatabaseAddStandbyMapOutput{})
}
