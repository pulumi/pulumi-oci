// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Autonomous Container Database Snapshot Standby resource in Oracle Cloud Infrastructure Database service.
//
// Convert the standby Autonomous Container Database (ACD) between physical standby and snapshot standby ACD. For more information about converting standby ACDs, see
// [Convert Physical Standby to Snapshot Standby](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html#ADBCL-GUID-D3B503F1-0032-4B0D-9F00-ACAE8151AB80) and [Convert Snapshot Standby to Physical Standby](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html#ADBCL-GUID-E8D7E0EE-8244-467D-B33A-1BC6F969A0A4).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.NewAutonomousContainerDatabaseSnapshotStandby(ctx, "test_autonomous_container_database_snapshot_standby", &database.AutonomousContainerDatabaseSnapshotStandbyArgs{
//				AutonomousContainerDatabaseId: pulumi.Any(testAutonomousContainerDatabase.Id),
//				Role:                          pulumi.Any(autonomousContainerDatabaseSnapshotStandbyRole),
//				ConnectionStringsType:         pulumi.Any(autonomousContainerDatabaseSnapshotStandbyConnectionStringsType),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AutonomousContainerDatabaseSnapshotStandby can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Database/autonomousContainerDatabaseSnapshotStandby:AutonomousContainerDatabaseSnapshotStandby test_autonomous_container_database_snapshot_standby "id"
// ```
type AutonomousContainerDatabaseSnapshotStandby struct {
	pulumi.CustomResourceState

	// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousContainerDatabaseId pulumi.StringOutput `pulumi:"autonomousContainerDatabaseId"`
	// type of connection strings when converting database to snapshot mode
	ConnectionStringsType pulumi.StringOutput `pulumi:"connectionStringsType"`
	// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Role pulumi.StringOutput `pulumi:"role"`
}

// NewAutonomousContainerDatabaseSnapshotStandby registers a new resource with the given unique name, arguments, and options.
func NewAutonomousContainerDatabaseSnapshotStandby(ctx *pulumi.Context,
	name string, args *AutonomousContainerDatabaseSnapshotStandbyArgs, opts ...pulumi.ResourceOption) (*AutonomousContainerDatabaseSnapshotStandby, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutonomousContainerDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'AutonomousContainerDatabaseId'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutonomousContainerDatabaseSnapshotStandby
	err := ctx.RegisterResource("oci:Database/autonomousContainerDatabaseSnapshotStandby:AutonomousContainerDatabaseSnapshotStandby", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutonomousContainerDatabaseSnapshotStandby gets an existing AutonomousContainerDatabaseSnapshotStandby resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutonomousContainerDatabaseSnapshotStandby(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutonomousContainerDatabaseSnapshotStandbyState, opts ...pulumi.ResourceOption) (*AutonomousContainerDatabaseSnapshotStandby, error) {
	var resource AutonomousContainerDatabaseSnapshotStandby
	err := ctx.ReadResource("oci:Database/autonomousContainerDatabaseSnapshotStandby:AutonomousContainerDatabaseSnapshotStandby", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutonomousContainerDatabaseSnapshotStandby resources.
type autonomousContainerDatabaseSnapshotStandbyState struct {
	// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousContainerDatabaseId *string `pulumi:"autonomousContainerDatabaseId"`
	// type of connection strings when converting database to snapshot mode
	ConnectionStringsType *string `pulumi:"connectionStringsType"`
	// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Role *string `pulumi:"role"`
}

type AutonomousContainerDatabaseSnapshotStandbyState struct {
	// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousContainerDatabaseId pulumi.StringPtrInput
	// type of connection strings when converting database to snapshot mode
	ConnectionStringsType pulumi.StringPtrInput
	// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Role pulumi.StringPtrInput
}

func (AutonomousContainerDatabaseSnapshotStandbyState) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousContainerDatabaseSnapshotStandbyState)(nil)).Elem()
}

type autonomousContainerDatabaseSnapshotStandbyArgs struct {
	// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousContainerDatabaseId string `pulumi:"autonomousContainerDatabaseId"`
	// type of connection strings when converting database to snapshot mode
	ConnectionStringsType *string `pulumi:"connectionStringsType"`
	// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Role string `pulumi:"role"`
}

// The set of arguments for constructing a AutonomousContainerDatabaseSnapshotStandby resource.
type AutonomousContainerDatabaseSnapshotStandbyArgs struct {
	// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousContainerDatabaseId pulumi.StringInput
	// type of connection strings when converting database to snapshot mode
	ConnectionStringsType pulumi.StringPtrInput
	// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Role pulumi.StringInput
}

func (AutonomousContainerDatabaseSnapshotStandbyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousContainerDatabaseSnapshotStandbyArgs)(nil)).Elem()
}

type AutonomousContainerDatabaseSnapshotStandbyInput interface {
	pulumi.Input

	ToAutonomousContainerDatabaseSnapshotStandbyOutput() AutonomousContainerDatabaseSnapshotStandbyOutput
	ToAutonomousContainerDatabaseSnapshotStandbyOutputWithContext(ctx context.Context) AutonomousContainerDatabaseSnapshotStandbyOutput
}

func (*AutonomousContainerDatabaseSnapshotStandby) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousContainerDatabaseSnapshotStandby)(nil)).Elem()
}

func (i *AutonomousContainerDatabaseSnapshotStandby) ToAutonomousContainerDatabaseSnapshotStandbyOutput() AutonomousContainerDatabaseSnapshotStandbyOutput {
	return i.ToAutonomousContainerDatabaseSnapshotStandbyOutputWithContext(context.Background())
}

func (i *AutonomousContainerDatabaseSnapshotStandby) ToAutonomousContainerDatabaseSnapshotStandbyOutputWithContext(ctx context.Context) AutonomousContainerDatabaseSnapshotStandbyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousContainerDatabaseSnapshotStandbyOutput)
}

// AutonomousContainerDatabaseSnapshotStandbyArrayInput is an input type that accepts AutonomousContainerDatabaseSnapshotStandbyArray and AutonomousContainerDatabaseSnapshotStandbyArrayOutput values.
// You can construct a concrete instance of `AutonomousContainerDatabaseSnapshotStandbyArrayInput` via:
//
//	AutonomousContainerDatabaseSnapshotStandbyArray{ AutonomousContainerDatabaseSnapshotStandbyArgs{...} }
type AutonomousContainerDatabaseSnapshotStandbyArrayInput interface {
	pulumi.Input

	ToAutonomousContainerDatabaseSnapshotStandbyArrayOutput() AutonomousContainerDatabaseSnapshotStandbyArrayOutput
	ToAutonomousContainerDatabaseSnapshotStandbyArrayOutputWithContext(context.Context) AutonomousContainerDatabaseSnapshotStandbyArrayOutput
}

type AutonomousContainerDatabaseSnapshotStandbyArray []AutonomousContainerDatabaseSnapshotStandbyInput

func (AutonomousContainerDatabaseSnapshotStandbyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousContainerDatabaseSnapshotStandby)(nil)).Elem()
}

func (i AutonomousContainerDatabaseSnapshotStandbyArray) ToAutonomousContainerDatabaseSnapshotStandbyArrayOutput() AutonomousContainerDatabaseSnapshotStandbyArrayOutput {
	return i.ToAutonomousContainerDatabaseSnapshotStandbyArrayOutputWithContext(context.Background())
}

func (i AutonomousContainerDatabaseSnapshotStandbyArray) ToAutonomousContainerDatabaseSnapshotStandbyArrayOutputWithContext(ctx context.Context) AutonomousContainerDatabaseSnapshotStandbyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousContainerDatabaseSnapshotStandbyArrayOutput)
}

// AutonomousContainerDatabaseSnapshotStandbyMapInput is an input type that accepts AutonomousContainerDatabaseSnapshotStandbyMap and AutonomousContainerDatabaseSnapshotStandbyMapOutput values.
// You can construct a concrete instance of `AutonomousContainerDatabaseSnapshotStandbyMapInput` via:
//
//	AutonomousContainerDatabaseSnapshotStandbyMap{ "key": AutonomousContainerDatabaseSnapshotStandbyArgs{...} }
type AutonomousContainerDatabaseSnapshotStandbyMapInput interface {
	pulumi.Input

	ToAutonomousContainerDatabaseSnapshotStandbyMapOutput() AutonomousContainerDatabaseSnapshotStandbyMapOutput
	ToAutonomousContainerDatabaseSnapshotStandbyMapOutputWithContext(context.Context) AutonomousContainerDatabaseSnapshotStandbyMapOutput
}

type AutonomousContainerDatabaseSnapshotStandbyMap map[string]AutonomousContainerDatabaseSnapshotStandbyInput

func (AutonomousContainerDatabaseSnapshotStandbyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousContainerDatabaseSnapshotStandby)(nil)).Elem()
}

func (i AutonomousContainerDatabaseSnapshotStandbyMap) ToAutonomousContainerDatabaseSnapshotStandbyMapOutput() AutonomousContainerDatabaseSnapshotStandbyMapOutput {
	return i.ToAutonomousContainerDatabaseSnapshotStandbyMapOutputWithContext(context.Background())
}

func (i AutonomousContainerDatabaseSnapshotStandbyMap) ToAutonomousContainerDatabaseSnapshotStandbyMapOutputWithContext(ctx context.Context) AutonomousContainerDatabaseSnapshotStandbyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousContainerDatabaseSnapshotStandbyMapOutput)
}

type AutonomousContainerDatabaseSnapshotStandbyOutput struct{ *pulumi.OutputState }

func (AutonomousContainerDatabaseSnapshotStandbyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousContainerDatabaseSnapshotStandby)(nil)).Elem()
}

func (o AutonomousContainerDatabaseSnapshotStandbyOutput) ToAutonomousContainerDatabaseSnapshotStandbyOutput() AutonomousContainerDatabaseSnapshotStandbyOutput {
	return o
}

func (o AutonomousContainerDatabaseSnapshotStandbyOutput) ToAutonomousContainerDatabaseSnapshotStandbyOutputWithContext(ctx context.Context) AutonomousContainerDatabaseSnapshotStandbyOutput {
	return o
}

// The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o AutonomousContainerDatabaseSnapshotStandbyOutput) AutonomousContainerDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseSnapshotStandby) pulumi.StringOutput {
		return v.AutonomousContainerDatabaseId
	}).(pulumi.StringOutput)
}

// type of connection strings when converting database to snapshot mode
func (o AutonomousContainerDatabaseSnapshotStandbyOutput) ConnectionStringsType() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseSnapshotStandby) pulumi.StringOutput {
		return v.ConnectionStringsType
	}).(pulumi.StringOutput)
}

// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o AutonomousContainerDatabaseSnapshotStandbyOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousContainerDatabaseSnapshotStandby) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

type AutonomousContainerDatabaseSnapshotStandbyArrayOutput struct{ *pulumi.OutputState }

func (AutonomousContainerDatabaseSnapshotStandbyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousContainerDatabaseSnapshotStandby)(nil)).Elem()
}

func (o AutonomousContainerDatabaseSnapshotStandbyArrayOutput) ToAutonomousContainerDatabaseSnapshotStandbyArrayOutput() AutonomousContainerDatabaseSnapshotStandbyArrayOutput {
	return o
}

func (o AutonomousContainerDatabaseSnapshotStandbyArrayOutput) ToAutonomousContainerDatabaseSnapshotStandbyArrayOutputWithContext(ctx context.Context) AutonomousContainerDatabaseSnapshotStandbyArrayOutput {
	return o
}

func (o AutonomousContainerDatabaseSnapshotStandbyArrayOutput) Index(i pulumi.IntInput) AutonomousContainerDatabaseSnapshotStandbyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutonomousContainerDatabaseSnapshotStandby {
		return vs[0].([]*AutonomousContainerDatabaseSnapshotStandby)[vs[1].(int)]
	}).(AutonomousContainerDatabaseSnapshotStandbyOutput)
}

type AutonomousContainerDatabaseSnapshotStandbyMapOutput struct{ *pulumi.OutputState }

func (AutonomousContainerDatabaseSnapshotStandbyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousContainerDatabaseSnapshotStandby)(nil)).Elem()
}

func (o AutonomousContainerDatabaseSnapshotStandbyMapOutput) ToAutonomousContainerDatabaseSnapshotStandbyMapOutput() AutonomousContainerDatabaseSnapshotStandbyMapOutput {
	return o
}

func (o AutonomousContainerDatabaseSnapshotStandbyMapOutput) ToAutonomousContainerDatabaseSnapshotStandbyMapOutputWithContext(ctx context.Context) AutonomousContainerDatabaseSnapshotStandbyMapOutput {
	return o
}

func (o AutonomousContainerDatabaseSnapshotStandbyMapOutput) MapIndex(k pulumi.StringInput) AutonomousContainerDatabaseSnapshotStandbyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutonomousContainerDatabaseSnapshotStandby {
		return vs[0].(map[string]*AutonomousContainerDatabaseSnapshotStandby)[vs[1].(string)]
	}).(AutonomousContainerDatabaseSnapshotStandbyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousContainerDatabaseSnapshotStandbyInput)(nil)).Elem(), &AutonomousContainerDatabaseSnapshotStandby{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousContainerDatabaseSnapshotStandbyArrayInput)(nil)).Elem(), AutonomousContainerDatabaseSnapshotStandbyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousContainerDatabaseSnapshotStandbyMapInput)(nil)).Elem(), AutonomousContainerDatabaseSnapshotStandbyMap{})
	pulumi.RegisterOutputType(AutonomousContainerDatabaseSnapshotStandbyOutput{})
	pulumi.RegisterOutputType(AutonomousContainerDatabaseSnapshotStandbyArrayOutput{})
	pulumi.RegisterOutputType(AutonomousContainerDatabaseSnapshotStandbyMapOutput{})
}
