// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Autonomous Database Backup resource in Oracle Cloud Infrastructure Database service.
//
// Creates a new Autonomous Database backup for the specified database based on the provided request parameters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.NewAutonomousDatabaseBackup(ctx, "test_autonomous_database_backup", &database.AutonomousDatabaseBackupArgs{
//				AutonomousDatabaseId:  pulumi.Any(testAutonomousDatabase.Id),
//				DisplayName:           pulumi.Any(autonomousDatabaseBackupDisplayName),
//				IsLongTermBackup:      pulumi.Any(autonomousDatabaseBackupIsLongTermBackup),
//				RetentionPeriodInDays: pulumi.Any(autonomousDatabaseBackupRetentionPeriodInDays),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AutonomousDatabaseBackups can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Database/autonomousDatabaseBackup:AutonomousDatabaseBackup test_autonomous_database_backup "id"
// ```
type AutonomousDatabaseBackup struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
	AutonomousDatabaseId pulumi.StringOutput `pulumi:"autonomousDatabaseId"`
	// Backup destination details
	BackupDestinationDetails AutonomousDatabaseBackupBackupDestinationDetailsOutput `pulumi:"backupDestinationDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The size of the database in terabytes at the time the backup was taken.
	DatabaseSizeInTbs pulumi.Float64Output `pulumi:"databaseSizeInTbs"`
	// A valid Oracle Database version for Autonomous Database.
	DbVersion pulumi.StringOutput `pulumi:"dbVersion"`
	// The user-friendly name for the backup. The name does not have to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Indicates whether the backup is user-initiated or automatic.
	IsAutomatic pulumi.BoolOutput `pulumi:"isAutomatic"`
	// Indicates whether the backup is long-term
	IsLongTermBackup pulumi.BoolOutput `pulumi:"isLongTermBackup"`
	// Indicates whether the backup can be used to restore the associated Autonomous Database.
	IsRestorable pulumi.BoolOutput `pulumi:"isRestorable"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
	KeyStoreId pulumi.StringOutput `pulumi:"keyStoreId"`
	// The wallet name for Oracle Key Vault.
	KeyStoreWalletName pulumi.StringOutput `pulumi:"keyStoreWalletName"`
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
	KmsKeyVersionId pulumi.StringOutput `pulumi:"kmsKeyVersionId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) Retention period, in days, for long-term backups
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RetentionPeriodInDays pulumi.IntOutput `pulumi:"retentionPeriodInDays"`
	// The backup size in terrabytes (TB).
	SizeInTbs pulumi.Float64Output `pulumi:"sizeInTbs"`
	// The current state of the backup.
	State pulumi.StringOutput `pulumi:"state"`
	// Timestamp until when the backup will be available
	TimeAvailableTill pulumi.StringOutput `pulumi:"timeAvailableTill"`
	// The date and time the backup completed.
	TimeEnded pulumi.StringOutput `pulumi:"timeEnded"`
	// The date and time the backup started.
	TimeStarted pulumi.StringOutput `pulumi:"timeStarted"`
	// The type of backup.
	Type pulumi.StringOutput `pulumi:"type"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
	VaultId pulumi.StringOutput `pulumi:"vaultId"`
}

// NewAutonomousDatabaseBackup registers a new resource with the given unique name, arguments, and options.
func NewAutonomousDatabaseBackup(ctx *pulumi.Context,
	name string, args *AutonomousDatabaseBackupArgs, opts ...pulumi.ResourceOption) (*AutonomousDatabaseBackup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutonomousDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'AutonomousDatabaseId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutonomousDatabaseBackup
	err := ctx.RegisterResource("oci:Database/autonomousDatabaseBackup:AutonomousDatabaseBackup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutonomousDatabaseBackup gets an existing AutonomousDatabaseBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutonomousDatabaseBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutonomousDatabaseBackupState, opts ...pulumi.ResourceOption) (*AutonomousDatabaseBackup, error) {
	var resource AutonomousDatabaseBackup
	err := ctx.ReadResource("oci:Database/autonomousDatabaseBackup:AutonomousDatabaseBackup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutonomousDatabaseBackup resources.
type autonomousDatabaseBackupState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
	AutonomousDatabaseId *string `pulumi:"autonomousDatabaseId"`
	// Backup destination details
	BackupDestinationDetails *AutonomousDatabaseBackupBackupDestinationDetails `pulumi:"backupDestinationDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The size of the database in terabytes at the time the backup was taken.
	DatabaseSizeInTbs *float64 `pulumi:"databaseSizeInTbs"`
	// A valid Oracle Database version for Autonomous Database.
	DbVersion *string `pulumi:"dbVersion"`
	// The user-friendly name for the backup. The name does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// Indicates whether the backup is user-initiated or automatic.
	IsAutomatic *bool `pulumi:"isAutomatic"`
	// Indicates whether the backup is long-term
	IsLongTermBackup *bool `pulumi:"isLongTermBackup"`
	// Indicates whether the backup can be used to restore the associated Autonomous Database.
	IsRestorable *bool `pulumi:"isRestorable"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
	KeyStoreId *string `pulumi:"keyStoreId"`
	// The wallet name for Oracle Key Vault.
	KeyStoreWalletName *string `pulumi:"keyStoreWalletName"`
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
	KmsKeyVersionId *string `pulumi:"kmsKeyVersionId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) Retention period, in days, for long-term backups
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RetentionPeriodInDays *int `pulumi:"retentionPeriodInDays"`
	// The backup size in terrabytes (TB).
	SizeInTbs *float64 `pulumi:"sizeInTbs"`
	// The current state of the backup.
	State *string `pulumi:"state"`
	// Timestamp until when the backup will be available
	TimeAvailableTill *string `pulumi:"timeAvailableTill"`
	// The date and time the backup completed.
	TimeEnded *string `pulumi:"timeEnded"`
	// The date and time the backup started.
	TimeStarted *string `pulumi:"timeStarted"`
	// The type of backup.
	Type *string `pulumi:"type"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
	VaultId *string `pulumi:"vaultId"`
}

type AutonomousDatabaseBackupState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
	AutonomousDatabaseId pulumi.StringPtrInput
	// Backup destination details
	BackupDestinationDetails AutonomousDatabaseBackupBackupDestinationDetailsPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The size of the database in terabytes at the time the backup was taken.
	DatabaseSizeInTbs pulumi.Float64PtrInput
	// A valid Oracle Database version for Autonomous Database.
	DbVersion pulumi.StringPtrInput
	// The user-friendly name for the backup. The name does not have to be unique.
	DisplayName pulumi.StringPtrInput
	// Indicates whether the backup is user-initiated or automatic.
	IsAutomatic pulumi.BoolPtrInput
	// Indicates whether the backup is long-term
	IsLongTermBackup pulumi.BoolPtrInput
	// Indicates whether the backup can be used to restore the associated Autonomous Database.
	IsRestorable pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
	KeyStoreId pulumi.StringPtrInput
	// The wallet name for Oracle Key Vault.
	KeyStoreWalletName pulumi.StringPtrInput
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId pulumi.StringPtrInput
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
	KmsKeyVersionId pulumi.StringPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) Retention period, in days, for long-term backups
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RetentionPeriodInDays pulumi.IntPtrInput
	// The backup size in terrabytes (TB).
	SizeInTbs pulumi.Float64PtrInput
	// The current state of the backup.
	State pulumi.StringPtrInput
	// Timestamp until when the backup will be available
	TimeAvailableTill pulumi.StringPtrInput
	// The date and time the backup completed.
	TimeEnded pulumi.StringPtrInput
	// The date and time the backup started.
	TimeStarted pulumi.StringPtrInput
	// The type of backup.
	Type pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
	VaultId pulumi.StringPtrInput
}

func (AutonomousDatabaseBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseBackupState)(nil)).Elem()
}

type autonomousDatabaseBackupArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
	AutonomousDatabaseId string `pulumi:"autonomousDatabaseId"`
	// Backup destination details
	BackupDestinationDetails *AutonomousDatabaseBackupBackupDestinationDetails `pulumi:"backupDestinationDetails"`
	// The user-friendly name for the backup. The name does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// Indicates whether the backup is long-term
	IsLongTermBackup *bool `pulumi:"isLongTermBackup"`
	// (Updatable) Retention period, in days, for long-term backups
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RetentionPeriodInDays *int `pulumi:"retentionPeriodInDays"`
}

// The set of arguments for constructing a AutonomousDatabaseBackup resource.
type AutonomousDatabaseBackupArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
	AutonomousDatabaseId pulumi.StringInput
	// Backup destination details
	BackupDestinationDetails AutonomousDatabaseBackupBackupDestinationDetailsPtrInput
	// The user-friendly name for the backup. The name does not have to be unique.
	DisplayName pulumi.StringPtrInput
	// Indicates whether the backup is long-term
	IsLongTermBackup pulumi.BoolPtrInput
	// (Updatable) Retention period, in days, for long-term backups
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RetentionPeriodInDays pulumi.IntPtrInput
}

func (AutonomousDatabaseBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseBackupArgs)(nil)).Elem()
}

type AutonomousDatabaseBackupInput interface {
	pulumi.Input

	ToAutonomousDatabaseBackupOutput() AutonomousDatabaseBackupOutput
	ToAutonomousDatabaseBackupOutputWithContext(ctx context.Context) AutonomousDatabaseBackupOutput
}

func (*AutonomousDatabaseBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabaseBackup)(nil)).Elem()
}

func (i *AutonomousDatabaseBackup) ToAutonomousDatabaseBackupOutput() AutonomousDatabaseBackupOutput {
	return i.ToAutonomousDatabaseBackupOutputWithContext(context.Background())
}

func (i *AutonomousDatabaseBackup) ToAutonomousDatabaseBackupOutputWithContext(ctx context.Context) AutonomousDatabaseBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseBackupOutput)
}

// AutonomousDatabaseBackupArrayInput is an input type that accepts AutonomousDatabaseBackupArray and AutonomousDatabaseBackupArrayOutput values.
// You can construct a concrete instance of `AutonomousDatabaseBackupArrayInput` via:
//
//	AutonomousDatabaseBackupArray{ AutonomousDatabaseBackupArgs{...} }
type AutonomousDatabaseBackupArrayInput interface {
	pulumi.Input

	ToAutonomousDatabaseBackupArrayOutput() AutonomousDatabaseBackupArrayOutput
	ToAutonomousDatabaseBackupArrayOutputWithContext(context.Context) AutonomousDatabaseBackupArrayOutput
}

type AutonomousDatabaseBackupArray []AutonomousDatabaseBackupInput

func (AutonomousDatabaseBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousDatabaseBackup)(nil)).Elem()
}

func (i AutonomousDatabaseBackupArray) ToAutonomousDatabaseBackupArrayOutput() AutonomousDatabaseBackupArrayOutput {
	return i.ToAutonomousDatabaseBackupArrayOutputWithContext(context.Background())
}

func (i AutonomousDatabaseBackupArray) ToAutonomousDatabaseBackupArrayOutputWithContext(ctx context.Context) AutonomousDatabaseBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseBackupArrayOutput)
}

// AutonomousDatabaseBackupMapInput is an input type that accepts AutonomousDatabaseBackupMap and AutonomousDatabaseBackupMapOutput values.
// You can construct a concrete instance of `AutonomousDatabaseBackupMapInput` via:
//
//	AutonomousDatabaseBackupMap{ "key": AutonomousDatabaseBackupArgs{...} }
type AutonomousDatabaseBackupMapInput interface {
	pulumi.Input

	ToAutonomousDatabaseBackupMapOutput() AutonomousDatabaseBackupMapOutput
	ToAutonomousDatabaseBackupMapOutputWithContext(context.Context) AutonomousDatabaseBackupMapOutput
}

type AutonomousDatabaseBackupMap map[string]AutonomousDatabaseBackupInput

func (AutonomousDatabaseBackupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousDatabaseBackup)(nil)).Elem()
}

func (i AutonomousDatabaseBackupMap) ToAutonomousDatabaseBackupMapOutput() AutonomousDatabaseBackupMapOutput {
	return i.ToAutonomousDatabaseBackupMapOutputWithContext(context.Background())
}

func (i AutonomousDatabaseBackupMap) ToAutonomousDatabaseBackupMapOutputWithContext(ctx context.Context) AutonomousDatabaseBackupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseBackupMapOutput)
}

type AutonomousDatabaseBackupOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabaseBackup)(nil)).Elem()
}

func (o AutonomousDatabaseBackupOutput) ToAutonomousDatabaseBackupOutput() AutonomousDatabaseBackupOutput {
	return o
}

func (o AutonomousDatabaseBackupOutput) ToAutonomousDatabaseBackupOutputWithContext(ctx context.Context) AutonomousDatabaseBackupOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
func (o AutonomousDatabaseBackupOutput) AutonomousDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.AutonomousDatabaseId }).(pulumi.StringOutput)
}

// Backup destination details
func (o AutonomousDatabaseBackupOutput) BackupDestinationDetails() AutonomousDatabaseBackupBackupDestinationDetailsOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) AutonomousDatabaseBackupBackupDestinationDetailsOutput {
		return v.BackupDestinationDetails
	}).(AutonomousDatabaseBackupBackupDestinationDetailsOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o AutonomousDatabaseBackupOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The size of the database in terabytes at the time the backup was taken.
func (o AutonomousDatabaseBackupOutput) DatabaseSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.Float64Output { return v.DatabaseSizeInTbs }).(pulumi.Float64Output)
}

// A valid Oracle Database version for Autonomous Database.
func (o AutonomousDatabaseBackupOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.DbVersion }).(pulumi.StringOutput)
}

// The user-friendly name for the backup. The name does not have to be unique.
func (o AutonomousDatabaseBackupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Indicates whether the backup is user-initiated or automatic.
func (o AutonomousDatabaseBackupOutput) IsAutomatic() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.BoolOutput { return v.IsAutomatic }).(pulumi.BoolOutput)
}

// Indicates whether the backup is long-term
func (o AutonomousDatabaseBackupOutput) IsLongTermBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.BoolOutput { return v.IsLongTermBackup }).(pulumi.BoolOutput)
}

// Indicates whether the backup can be used to restore the associated Autonomous Database.
func (o AutonomousDatabaseBackupOutput) IsRestorable() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.BoolOutput { return v.IsRestorable }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
func (o AutonomousDatabaseBackupOutput) KeyStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.KeyStoreId }).(pulumi.StringOutput)
}

// The wallet name for Oracle Key Vault.
func (o AutonomousDatabaseBackupOutput) KeyStoreWalletName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.KeyStoreWalletName }).(pulumi.StringOutput)
}

// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
func (o AutonomousDatabaseBackupOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
func (o AutonomousDatabaseBackupOutput) KmsKeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.KmsKeyVersionId }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o AutonomousDatabaseBackupOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) Retention period, in days, for long-term backups
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o AutonomousDatabaseBackupOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.IntOutput { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// The backup size in terrabytes (TB).
func (o AutonomousDatabaseBackupOutput) SizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.Float64Output { return v.SizeInTbs }).(pulumi.Float64Output)
}

// The current state of the backup.
func (o AutonomousDatabaseBackupOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Timestamp until when the backup will be available
func (o AutonomousDatabaseBackupOutput) TimeAvailableTill() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.TimeAvailableTill }).(pulumi.StringOutput)
}

// The date and time the backup completed.
func (o AutonomousDatabaseBackupOutput) TimeEnded() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.TimeEnded }).(pulumi.StringOutput)
}

// The date and time the backup started.
func (o AutonomousDatabaseBackupOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.TimeStarted }).(pulumi.StringOutput)
}

// The type of backup.
func (o AutonomousDatabaseBackupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
func (o AutonomousDatabaseBackupOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.VaultId }).(pulumi.StringOutput)
}

type AutonomousDatabaseBackupArrayOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousDatabaseBackup)(nil)).Elem()
}

func (o AutonomousDatabaseBackupArrayOutput) ToAutonomousDatabaseBackupArrayOutput() AutonomousDatabaseBackupArrayOutput {
	return o
}

func (o AutonomousDatabaseBackupArrayOutput) ToAutonomousDatabaseBackupArrayOutputWithContext(ctx context.Context) AutonomousDatabaseBackupArrayOutput {
	return o
}

func (o AutonomousDatabaseBackupArrayOutput) Index(i pulumi.IntInput) AutonomousDatabaseBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutonomousDatabaseBackup {
		return vs[0].([]*AutonomousDatabaseBackup)[vs[1].(int)]
	}).(AutonomousDatabaseBackupOutput)
}

type AutonomousDatabaseBackupMapOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseBackupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousDatabaseBackup)(nil)).Elem()
}

func (o AutonomousDatabaseBackupMapOutput) ToAutonomousDatabaseBackupMapOutput() AutonomousDatabaseBackupMapOutput {
	return o
}

func (o AutonomousDatabaseBackupMapOutput) ToAutonomousDatabaseBackupMapOutputWithContext(ctx context.Context) AutonomousDatabaseBackupMapOutput {
	return o
}

func (o AutonomousDatabaseBackupMapOutput) MapIndex(k pulumi.StringInput) AutonomousDatabaseBackupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutonomousDatabaseBackup {
		return vs[0].(map[string]*AutonomousDatabaseBackup)[vs[1].(string)]
	}).(AutonomousDatabaseBackupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseBackupInput)(nil)).Elem(), &AutonomousDatabaseBackup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseBackupArrayInput)(nil)).Elem(), AutonomousDatabaseBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseBackupMapInput)(nil)).Elem(), AutonomousDatabaseBackupMap{})
	pulumi.RegisterOutputType(AutonomousDatabaseBackupOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseBackupArrayOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseBackupMapOutput{})
}
