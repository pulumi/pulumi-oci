// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource creates and enables the Autonomous Database administrative user account in Oracle Cloud Infrastructure Database service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.NewAutonomousDatabaseSaasAdminUser(ctx, "test_autonomous_database_saas_admin_user", &Database.AutonomousDatabaseSaasAdminUserArgs{
//				AutonomousDatabaseId: pulumi.Any(testAutonomousDatabase.Id),
//				Password:             pulumi.Any(autonomousDatabaseSaasAdminUserPassword),
//				AccessType:           pulumi.Any(autonomousDatabaseSaasAdminUserAccessType),
//				Duration:             pulumi.Any(autonomousDatabaseSaasAdminUserDuration),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type AutonomousDatabaseSaasAdminUser struct {
	pulumi.CustomResourceState

	// The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
	AccessType pulumi.StringPtrOutput `pulumi:"accessType"`
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringOutput `pulumi:"autonomousDatabaseId"`
	// How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
	Duration pulumi.IntPtrOutput `pulumi:"duration"`
	// A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if "secretId" is not present.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if "password" is not present.
	SecretId pulumi.StringPtrOutput `pulumi:"secretId"`
	// The version of the vault secret. If no version is specified, the latest version will be used.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecretVersionNumber      pulumi.IntPtrOutput `pulumi:"secretVersionNumber"`
	TimeSaasAdminUserEnabled pulumi.StringOutput `pulumi:"timeSaasAdminUserEnabled"`
}

// NewAutonomousDatabaseSaasAdminUser registers a new resource with the given unique name, arguments, and options.
func NewAutonomousDatabaseSaasAdminUser(ctx *pulumi.Context,
	name string, args *AutonomousDatabaseSaasAdminUserArgs, opts ...pulumi.ResourceOption) (*AutonomousDatabaseSaasAdminUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutonomousDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'AutonomousDatabaseId'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutonomousDatabaseSaasAdminUser
	err := ctx.RegisterResource("oci:Database/autonomousDatabaseSaasAdminUser:AutonomousDatabaseSaasAdminUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutonomousDatabaseSaasAdminUser gets an existing AutonomousDatabaseSaasAdminUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutonomousDatabaseSaasAdminUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutonomousDatabaseSaasAdminUserState, opts ...pulumi.ResourceOption) (*AutonomousDatabaseSaasAdminUser, error) {
	var resource AutonomousDatabaseSaasAdminUser
	err := ctx.ReadResource("oci:Database/autonomousDatabaseSaasAdminUser:AutonomousDatabaseSaasAdminUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutonomousDatabaseSaasAdminUser resources.
type autonomousDatabaseSaasAdminUserState struct {
	// The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
	AccessType *string `pulumi:"accessType"`
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId *string `pulumi:"autonomousDatabaseId"`
	// How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
	Duration *int `pulumi:"duration"`
	// A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if "secretId" is not present.
	Password *string `pulumi:"password"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if "password" is not present.
	SecretId *string `pulumi:"secretId"`
	// The version of the vault secret. If no version is specified, the latest version will be used.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecretVersionNumber      *int    `pulumi:"secretVersionNumber"`
	TimeSaasAdminUserEnabled *string `pulumi:"timeSaasAdminUserEnabled"`
}

type AutonomousDatabaseSaasAdminUserState struct {
	// The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
	AccessType pulumi.StringPtrInput
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringPtrInput
	// How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
	Duration pulumi.IntPtrInput
	// A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if "secretId" is not present.
	Password pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if "password" is not present.
	SecretId pulumi.StringPtrInput
	// The version of the vault secret. If no version is specified, the latest version will be used.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecretVersionNumber      pulumi.IntPtrInput
	TimeSaasAdminUserEnabled pulumi.StringPtrInput
}

func (AutonomousDatabaseSaasAdminUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseSaasAdminUserState)(nil)).Elem()
}

type autonomousDatabaseSaasAdminUserArgs struct {
	// The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
	AccessType *string `pulumi:"accessType"`
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId string `pulumi:"autonomousDatabaseId"`
	// How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
	Duration *int `pulumi:"duration"`
	// A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if "secretId" is not present.
	Password *string `pulumi:"password"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if "password" is not present.
	SecretId *string `pulumi:"secretId"`
	// The version of the vault secret. If no version is specified, the latest version will be used.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecretVersionNumber      *int    `pulumi:"secretVersionNumber"`
	TimeSaasAdminUserEnabled *string `pulumi:"timeSaasAdminUserEnabled"`
}

// The set of arguments for constructing a AutonomousDatabaseSaasAdminUser resource.
type AutonomousDatabaseSaasAdminUserArgs struct {
	// The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
	AccessType pulumi.StringPtrInput
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringInput
	// How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
	Duration pulumi.IntPtrInput
	// A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if "secretId" is not present.
	Password pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if "password" is not present.
	SecretId pulumi.StringPtrInput
	// The version of the vault secret. If no version is specified, the latest version will be used.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecretVersionNumber      pulumi.IntPtrInput
	TimeSaasAdminUserEnabled pulumi.StringPtrInput
}

func (AutonomousDatabaseSaasAdminUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseSaasAdminUserArgs)(nil)).Elem()
}

type AutonomousDatabaseSaasAdminUserInput interface {
	pulumi.Input

	ToAutonomousDatabaseSaasAdminUserOutput() AutonomousDatabaseSaasAdminUserOutput
	ToAutonomousDatabaseSaasAdminUserOutputWithContext(ctx context.Context) AutonomousDatabaseSaasAdminUserOutput
}

func (*AutonomousDatabaseSaasAdminUser) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabaseSaasAdminUser)(nil)).Elem()
}

func (i *AutonomousDatabaseSaasAdminUser) ToAutonomousDatabaseSaasAdminUserOutput() AutonomousDatabaseSaasAdminUserOutput {
	return i.ToAutonomousDatabaseSaasAdminUserOutputWithContext(context.Background())
}

func (i *AutonomousDatabaseSaasAdminUser) ToAutonomousDatabaseSaasAdminUserOutputWithContext(ctx context.Context) AutonomousDatabaseSaasAdminUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseSaasAdminUserOutput)
}

// AutonomousDatabaseSaasAdminUserArrayInput is an input type that accepts AutonomousDatabaseSaasAdminUserArray and AutonomousDatabaseSaasAdminUserArrayOutput values.
// You can construct a concrete instance of `AutonomousDatabaseSaasAdminUserArrayInput` via:
//
//	AutonomousDatabaseSaasAdminUserArray{ AutonomousDatabaseSaasAdminUserArgs{...} }
type AutonomousDatabaseSaasAdminUserArrayInput interface {
	pulumi.Input

	ToAutonomousDatabaseSaasAdminUserArrayOutput() AutonomousDatabaseSaasAdminUserArrayOutput
	ToAutonomousDatabaseSaasAdminUserArrayOutputWithContext(context.Context) AutonomousDatabaseSaasAdminUserArrayOutput
}

type AutonomousDatabaseSaasAdminUserArray []AutonomousDatabaseSaasAdminUserInput

func (AutonomousDatabaseSaasAdminUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousDatabaseSaasAdminUser)(nil)).Elem()
}

func (i AutonomousDatabaseSaasAdminUserArray) ToAutonomousDatabaseSaasAdminUserArrayOutput() AutonomousDatabaseSaasAdminUserArrayOutput {
	return i.ToAutonomousDatabaseSaasAdminUserArrayOutputWithContext(context.Background())
}

func (i AutonomousDatabaseSaasAdminUserArray) ToAutonomousDatabaseSaasAdminUserArrayOutputWithContext(ctx context.Context) AutonomousDatabaseSaasAdminUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseSaasAdminUserArrayOutput)
}

// AutonomousDatabaseSaasAdminUserMapInput is an input type that accepts AutonomousDatabaseSaasAdminUserMap and AutonomousDatabaseSaasAdminUserMapOutput values.
// You can construct a concrete instance of `AutonomousDatabaseSaasAdminUserMapInput` via:
//
//	AutonomousDatabaseSaasAdminUserMap{ "key": AutonomousDatabaseSaasAdminUserArgs{...} }
type AutonomousDatabaseSaasAdminUserMapInput interface {
	pulumi.Input

	ToAutonomousDatabaseSaasAdminUserMapOutput() AutonomousDatabaseSaasAdminUserMapOutput
	ToAutonomousDatabaseSaasAdminUserMapOutputWithContext(context.Context) AutonomousDatabaseSaasAdminUserMapOutput
}

type AutonomousDatabaseSaasAdminUserMap map[string]AutonomousDatabaseSaasAdminUserInput

func (AutonomousDatabaseSaasAdminUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousDatabaseSaasAdminUser)(nil)).Elem()
}

func (i AutonomousDatabaseSaasAdminUserMap) ToAutonomousDatabaseSaasAdminUserMapOutput() AutonomousDatabaseSaasAdminUserMapOutput {
	return i.ToAutonomousDatabaseSaasAdminUserMapOutputWithContext(context.Background())
}

func (i AutonomousDatabaseSaasAdminUserMap) ToAutonomousDatabaseSaasAdminUserMapOutputWithContext(ctx context.Context) AutonomousDatabaseSaasAdminUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseSaasAdminUserMapOutput)
}

type AutonomousDatabaseSaasAdminUserOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseSaasAdminUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabaseSaasAdminUser)(nil)).Elem()
}

func (o AutonomousDatabaseSaasAdminUserOutput) ToAutonomousDatabaseSaasAdminUserOutput() AutonomousDatabaseSaasAdminUserOutput {
	return o
}

func (o AutonomousDatabaseSaasAdminUserOutput) ToAutonomousDatabaseSaasAdminUserOutputWithContext(ctx context.Context) AutonomousDatabaseSaasAdminUserOutput {
	return o
}

// The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
func (o AutonomousDatabaseSaasAdminUserOutput) AccessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutonomousDatabaseSaasAdminUser) pulumi.StringPtrOutput { return v.AccessType }).(pulumi.StringPtrOutput)
}

// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o AutonomousDatabaseSaasAdminUserOutput) AutonomousDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseSaasAdminUser) pulumi.StringOutput { return v.AutonomousDatabaseId }).(pulumi.StringOutput)
}

// How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
func (o AutonomousDatabaseSaasAdminUserOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutonomousDatabaseSaasAdminUser) pulumi.IntPtrOutput { return v.Duration }).(pulumi.IntPtrOutput)
}

// A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \# (hashtag), or - (dash). The password is mandatory if "secretId" is not present.
func (o AutonomousDatabaseSaasAdminUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutonomousDatabaseSaasAdminUser) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). The secret is mandatory if "password" is not present.
func (o AutonomousDatabaseSaasAdminUserOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutonomousDatabaseSaasAdminUser) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

// The version of the vault secret. If no version is specified, the latest version will be used.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o AutonomousDatabaseSaasAdminUserOutput) SecretVersionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutonomousDatabaseSaasAdminUser) pulumi.IntPtrOutput { return v.SecretVersionNumber }).(pulumi.IntPtrOutput)
}

func (o AutonomousDatabaseSaasAdminUserOutput) TimeSaasAdminUserEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseSaasAdminUser) pulumi.StringOutput { return v.TimeSaasAdminUserEnabled }).(pulumi.StringOutput)
}

type AutonomousDatabaseSaasAdminUserArrayOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseSaasAdminUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousDatabaseSaasAdminUser)(nil)).Elem()
}

func (o AutonomousDatabaseSaasAdminUserArrayOutput) ToAutonomousDatabaseSaasAdminUserArrayOutput() AutonomousDatabaseSaasAdminUserArrayOutput {
	return o
}

func (o AutonomousDatabaseSaasAdminUserArrayOutput) ToAutonomousDatabaseSaasAdminUserArrayOutputWithContext(ctx context.Context) AutonomousDatabaseSaasAdminUserArrayOutput {
	return o
}

func (o AutonomousDatabaseSaasAdminUserArrayOutput) Index(i pulumi.IntInput) AutonomousDatabaseSaasAdminUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutonomousDatabaseSaasAdminUser {
		return vs[0].([]*AutonomousDatabaseSaasAdminUser)[vs[1].(int)]
	}).(AutonomousDatabaseSaasAdminUserOutput)
}

type AutonomousDatabaseSaasAdminUserMapOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseSaasAdminUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousDatabaseSaasAdminUser)(nil)).Elem()
}

func (o AutonomousDatabaseSaasAdminUserMapOutput) ToAutonomousDatabaseSaasAdminUserMapOutput() AutonomousDatabaseSaasAdminUserMapOutput {
	return o
}

func (o AutonomousDatabaseSaasAdminUserMapOutput) ToAutonomousDatabaseSaasAdminUserMapOutputWithContext(ctx context.Context) AutonomousDatabaseSaasAdminUserMapOutput {
	return o
}

func (o AutonomousDatabaseSaasAdminUserMapOutput) MapIndex(k pulumi.StringInput) AutonomousDatabaseSaasAdminUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutonomousDatabaseSaasAdminUser {
		return vs[0].(map[string]*AutonomousDatabaseSaasAdminUser)[vs[1].(string)]
	}).(AutonomousDatabaseSaasAdminUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseSaasAdminUserInput)(nil)).Elem(), &AutonomousDatabaseSaasAdminUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseSaasAdminUserArrayInput)(nil)).Elem(), AutonomousDatabaseSaasAdminUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseSaasAdminUserMapInput)(nil)).Elem(), AutonomousDatabaseSaasAdminUserMap{})
	pulumi.RegisterOutputType(AutonomousDatabaseSaasAdminUserOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseSaasAdminUserArrayOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseSaasAdminUserMapOutput{})
}
