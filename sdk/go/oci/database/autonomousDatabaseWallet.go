// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.NewAutonomousDatabaseWallet(ctx, "testAutonomousDatabaseWallet", &Database.AutonomousDatabaseWalletArgs{
//				AutonomousDatabaseId: pulumi.Any(oci_database_autonomous_database.Test_autonomous_database.Id),
//				Password:             pulumi.Any(_var.Autonomous_database_wallet_password),
//				Base64EncodeContent:  pulumi.Bool(false),
//				GenerateType:         pulumi.Any(_var.Autonomous_database_wallet_generate_type),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type AutonomousDatabaseWallet struct {
	pulumi.CustomResourceState

	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringOutput  `pulumi:"autonomousDatabaseId"`
	Base64EncodeContent  pulumi.BoolPtrOutput `pulumi:"base64EncodeContent"`
	// content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content pulumi.StringPtrOutput `pulumi:"content"`
	// The type of wallet to generate.
	//
	// **Serverless instance usage:**
	GenerateType pulumi.StringPtrOutput `pulumi:"generateType"`
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Password pulumi.StringOutput `pulumi:"password"`
}

// NewAutonomousDatabaseWallet registers a new resource with the given unique name, arguments, and options.
func NewAutonomousDatabaseWallet(ctx *pulumi.Context,
	name string, args *AutonomousDatabaseWalletArgs, opts ...pulumi.ResourceOption) (*AutonomousDatabaseWallet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutonomousDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'AutonomousDatabaseId'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutonomousDatabaseWallet
	err := ctx.RegisterResource("oci:Database/autonomousDatabaseWallet:AutonomousDatabaseWallet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutonomousDatabaseWallet gets an existing AutonomousDatabaseWallet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutonomousDatabaseWallet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutonomousDatabaseWalletState, opts ...pulumi.ResourceOption) (*AutonomousDatabaseWallet, error) {
	var resource AutonomousDatabaseWallet
	err := ctx.ReadResource("oci:Database/autonomousDatabaseWallet:AutonomousDatabaseWallet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutonomousDatabaseWallet resources.
type autonomousDatabaseWalletState struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId *string `pulumi:"autonomousDatabaseId"`
	Base64EncodeContent  *bool   `pulumi:"base64EncodeContent"`
	// content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content *string `pulumi:"content"`
	// The type of wallet to generate.
	//
	// **Serverless instance usage:**
	GenerateType *string `pulumi:"generateType"`
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Password *string `pulumi:"password"`
}

type AutonomousDatabaseWalletState struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringPtrInput
	Base64EncodeContent  pulumi.BoolPtrInput
	// content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content pulumi.StringPtrInput
	// The type of wallet to generate.
	//
	// **Serverless instance usage:**
	GenerateType pulumi.StringPtrInput
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Password pulumi.StringPtrInput
}

func (AutonomousDatabaseWalletState) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseWalletState)(nil)).Elem()
}

type autonomousDatabaseWalletArgs struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId string `pulumi:"autonomousDatabaseId"`
	Base64EncodeContent  *bool  `pulumi:"base64EncodeContent"`
	// The type of wallet to generate.
	//
	// **Serverless instance usage:**
	GenerateType *string `pulumi:"generateType"`
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Password string `pulumi:"password"`
}

// The set of arguments for constructing a AutonomousDatabaseWallet resource.
type AutonomousDatabaseWalletArgs struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	AutonomousDatabaseId pulumi.StringInput
	Base64EncodeContent  pulumi.BoolPtrInput
	// The type of wallet to generate.
	//
	// **Serverless instance usage:**
	GenerateType pulumi.StringPtrInput
	// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Password pulumi.StringInput
}

func (AutonomousDatabaseWalletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseWalletArgs)(nil)).Elem()
}

type AutonomousDatabaseWalletInput interface {
	pulumi.Input

	ToAutonomousDatabaseWalletOutput() AutonomousDatabaseWalletOutput
	ToAutonomousDatabaseWalletOutputWithContext(ctx context.Context) AutonomousDatabaseWalletOutput
}

func (*AutonomousDatabaseWallet) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabaseWallet)(nil)).Elem()
}

func (i *AutonomousDatabaseWallet) ToAutonomousDatabaseWalletOutput() AutonomousDatabaseWalletOutput {
	return i.ToAutonomousDatabaseWalletOutputWithContext(context.Background())
}

func (i *AutonomousDatabaseWallet) ToAutonomousDatabaseWalletOutputWithContext(ctx context.Context) AutonomousDatabaseWalletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseWalletOutput)
}

// AutonomousDatabaseWalletArrayInput is an input type that accepts AutonomousDatabaseWalletArray and AutonomousDatabaseWalletArrayOutput values.
// You can construct a concrete instance of `AutonomousDatabaseWalletArrayInput` via:
//
//	AutonomousDatabaseWalletArray{ AutonomousDatabaseWalletArgs{...} }
type AutonomousDatabaseWalletArrayInput interface {
	pulumi.Input

	ToAutonomousDatabaseWalletArrayOutput() AutonomousDatabaseWalletArrayOutput
	ToAutonomousDatabaseWalletArrayOutputWithContext(context.Context) AutonomousDatabaseWalletArrayOutput
}

type AutonomousDatabaseWalletArray []AutonomousDatabaseWalletInput

func (AutonomousDatabaseWalletArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousDatabaseWallet)(nil)).Elem()
}

func (i AutonomousDatabaseWalletArray) ToAutonomousDatabaseWalletArrayOutput() AutonomousDatabaseWalletArrayOutput {
	return i.ToAutonomousDatabaseWalletArrayOutputWithContext(context.Background())
}

func (i AutonomousDatabaseWalletArray) ToAutonomousDatabaseWalletArrayOutputWithContext(ctx context.Context) AutonomousDatabaseWalletArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseWalletArrayOutput)
}

// AutonomousDatabaseWalletMapInput is an input type that accepts AutonomousDatabaseWalletMap and AutonomousDatabaseWalletMapOutput values.
// You can construct a concrete instance of `AutonomousDatabaseWalletMapInput` via:
//
//	AutonomousDatabaseWalletMap{ "key": AutonomousDatabaseWalletArgs{...} }
type AutonomousDatabaseWalletMapInput interface {
	pulumi.Input

	ToAutonomousDatabaseWalletMapOutput() AutonomousDatabaseWalletMapOutput
	ToAutonomousDatabaseWalletMapOutputWithContext(context.Context) AutonomousDatabaseWalletMapOutput
}

type AutonomousDatabaseWalletMap map[string]AutonomousDatabaseWalletInput

func (AutonomousDatabaseWalletMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousDatabaseWallet)(nil)).Elem()
}

func (i AutonomousDatabaseWalletMap) ToAutonomousDatabaseWalletMapOutput() AutonomousDatabaseWalletMapOutput {
	return i.ToAutonomousDatabaseWalletMapOutputWithContext(context.Background())
}

func (i AutonomousDatabaseWalletMap) ToAutonomousDatabaseWalletMapOutputWithContext(ctx context.Context) AutonomousDatabaseWalletMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseWalletMapOutput)
}

type AutonomousDatabaseWalletOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseWalletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabaseWallet)(nil)).Elem()
}

func (o AutonomousDatabaseWalletOutput) ToAutonomousDatabaseWalletOutput() AutonomousDatabaseWalletOutput {
	return o
}

func (o AutonomousDatabaseWalletOutput) ToAutonomousDatabaseWalletOutputWithContext(ctx context.Context) AutonomousDatabaseWalletOutput {
	return o
}

// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o AutonomousDatabaseWalletOutput) AutonomousDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseWallet) pulumi.StringOutput { return v.AutonomousDatabaseId }).(pulumi.StringOutput)
}

func (o AutonomousDatabaseWalletOutput) Base64EncodeContent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutonomousDatabaseWallet) pulumi.BoolPtrOutput { return v.Base64EncodeContent }).(pulumi.BoolPtrOutput)
}

// content of the downloaded zipped wallet for the Autonomous Database. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
func (o AutonomousDatabaseWalletOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutonomousDatabaseWallet) pulumi.StringPtrOutput { return v.Content }).(pulumi.StringPtrOutput)
}

// The type of wallet to generate.
//
// **Serverless instance usage:**
func (o AutonomousDatabaseWalletOutput) GenerateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutonomousDatabaseWallet) pulumi.StringPtrOutput { return v.GenerateType }).(pulumi.StringPtrOutput)
}

// The password to encrypt the keys inside the wallet. The password must be at least 8 characters long and must include at least 1 letter and either 1 numeric character or 1 special character.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o AutonomousDatabaseWalletOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseWallet) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

type AutonomousDatabaseWalletArrayOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseWalletArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousDatabaseWallet)(nil)).Elem()
}

func (o AutonomousDatabaseWalletArrayOutput) ToAutonomousDatabaseWalletArrayOutput() AutonomousDatabaseWalletArrayOutput {
	return o
}

func (o AutonomousDatabaseWalletArrayOutput) ToAutonomousDatabaseWalletArrayOutputWithContext(ctx context.Context) AutonomousDatabaseWalletArrayOutput {
	return o
}

func (o AutonomousDatabaseWalletArrayOutput) Index(i pulumi.IntInput) AutonomousDatabaseWalletOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutonomousDatabaseWallet {
		return vs[0].([]*AutonomousDatabaseWallet)[vs[1].(int)]
	}).(AutonomousDatabaseWalletOutput)
}

type AutonomousDatabaseWalletMapOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseWalletMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousDatabaseWallet)(nil)).Elem()
}

func (o AutonomousDatabaseWalletMapOutput) ToAutonomousDatabaseWalletMapOutput() AutonomousDatabaseWalletMapOutput {
	return o
}

func (o AutonomousDatabaseWalletMapOutput) ToAutonomousDatabaseWalletMapOutputWithContext(ctx context.Context) AutonomousDatabaseWalletMapOutput {
	return o
}

func (o AutonomousDatabaseWalletMapOutput) MapIndex(k pulumi.StringInput) AutonomousDatabaseWalletOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutonomousDatabaseWallet {
		return vs[0].(map[string]*AutonomousDatabaseWallet)[vs[1].(string)]
	}).(AutonomousDatabaseWalletOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseWalletInput)(nil)).Elem(), &AutonomousDatabaseWallet{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseWalletArrayInput)(nil)).Elem(), AutonomousDatabaseWalletArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseWalletMapInput)(nil)).Elem(), AutonomousDatabaseWalletMap{})
	pulumi.RegisterOutputType(AutonomousDatabaseWalletOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseWalletArrayOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseWalletMapOutput{})
}
