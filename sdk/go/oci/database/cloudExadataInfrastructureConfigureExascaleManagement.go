// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Cloud Exadata Infrastructure Configure Exascale Management resource in Oracle Cloud Infrastructure Database service.
//
// Configures Exascale on Cloud exadata infrastructure resource. Applies to Exadata Cloud Service instances only.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.NewCloudExadataInfrastructureConfigureExascaleManagement(ctx, "test_cloud_exadata_infrastructure_configure_exascale_management", &database.CloudExadataInfrastructureConfigureExascaleManagementArgs{
//				CloudExadataInfrastructureId: pulumi.Any(testCloudExadataInfrastructure.Id),
//				TotalStorageInGbs:            pulumi.Any(cloudExadataInfrastructureConfigureExascaleManagementTotalStorageInGbs),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CloudExadataInfrastructureConfigureExascaleManagement can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Database/cloudExadataInfrastructureConfigureExascaleManagement:CloudExadataInfrastructureConfigureExascaleManagement test_cloud_exadata_infrastructure_configure_exascale_management "id"
// ```
type CloudExadataInfrastructureConfigureExascaleManagement struct {
	pulumi.CustomResourceState

	// The requested number of additional storage servers activated for the Exadata infrastructure.
	ActivatedStorageCount pulumi.IntOutput `pulumi:"activatedStorageCount"`
	// The requested number of additional storage servers for the Exadata infrastructure.
	AdditionalStorageCount pulumi.IntOutput `pulumi:"additionalStorageCount"`
	// The name of the availability domain that the cloud Exadata infrastructure resource is located in.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
	AvailableStorageSizeInGbs pulumi.IntOutput `pulumi:"availableStorageSizeInGbs"`
	// The cloud Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudExadataInfrastructureId pulumi.StringOutput `pulumi:"cloudExadataInfrastructureId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Exadata Infrastructure.
	ClusterPlacementGroupId pulumi.StringOutput `pulumi:"clusterPlacementGroupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The number of compute servers for the cloud Exadata infrastructure.
	ComputeCount pulumi.IntOutput `pulumi:"computeCount"`
	// The total number of CPU cores allocated.
	CpuCount pulumi.IntOutput `pulumi:"cpuCount"`
	// The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
	CustomerContacts CloudExadataInfrastructureConfigureExascaleManagementCustomerContactArrayOutput `pulumi:"customerContacts"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs pulumi.Float64Output `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"dbNodeStorageSizeInGbs"`
	// The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
	DbServerVersion pulumi.StringOutput `pulumi:"dbServerVersion"`
	// Details of the file system configuration of the Exadata infrastructure.
	DefinedFileSystemConfigurations CloudExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfigurationArrayOutput `pulumi:"definedFileSystemConfigurations"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The exascale config response details for the Exadata Cloud@Customer infrastructure or cloud Exadata infrastructure . Applies to both Exadata Cloud@Customer instances and Exadata Cloud Service instances.
	ExascaleConfigs CloudExadataInfrastructureConfigureExascaleManagementExascaleConfigArrayOutput `pulumi:"exascaleConfigs"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// If true, the infrastructure is using granular maintenance scheduling preference.
	IsSchedulingPolicyAssociated pulumi.BoolOutput `pulumi:"isSchedulingPolicyAssociated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
	LastMaintenanceRunId pulumi.StringOutput `pulumi:"lastMaintenanceRunId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindows CloudExadataInfrastructureConfigureExascaleManagementMaintenanceWindowArrayOutput `pulumi:"maintenanceWindows"`
	// The total number of CPU cores available.
	MaxCpuCount pulumi.IntOutput `pulumi:"maxCpuCount"`
	// The total available DATA disk group size.
	MaxDataStorageInTbs pulumi.Float64Output `pulumi:"maxDataStorageInTbs"`
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs pulumi.IntOutput `pulumi:"maxDbNodeStorageInGbs"`
	// The total memory available in GBs.
	MaxMemoryInGbs pulumi.IntOutput `pulumi:"maxMemoryInGbs"`
	// The memory allocated in GBs.
	MemorySizeInGbs pulumi.IntOutput `pulumi:"memorySizeInGbs"`
	// The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
	MonthlyDbServerVersion pulumi.StringOutput `pulumi:"monthlyDbServerVersion"`
	// The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
	MonthlyStorageServerVersion pulumi.StringOutput `pulumi:"monthlyStorageServerVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
	NextMaintenanceRunId pulumi.StringOutput `pulumi:"nextMaintenanceRunId"`
	// The model name of the cloud Exadata infrastructure resource.
	Shape pulumi.StringOutput `pulumi:"shape"`
	// The current lifecycle state of the cloud Exadata infrastructure resource.
	State pulumi.StringOutput `pulumi:"state"`
	// The number of storage servers for the cloud Exadata infrastructure.
	StorageCount pulumi.IntOutput `pulumi:"storageCount"`
	// The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
	StorageServerVersion pulumi.StringOutput `pulumi:"storageServerVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the cloud Exadata infrastructure resource was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Storage size needed for Exascale in GBs.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TotalStorageInGbs pulumi.IntOutput `pulumi:"totalStorageInGbs"`
	// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
	TotalStorageSizeInGbs pulumi.IntOutput `pulumi:"totalStorageSizeInGbs"`
}

// NewCloudExadataInfrastructureConfigureExascaleManagement registers a new resource with the given unique name, arguments, and options.
func NewCloudExadataInfrastructureConfigureExascaleManagement(ctx *pulumi.Context,
	name string, args *CloudExadataInfrastructureConfigureExascaleManagementArgs, opts ...pulumi.ResourceOption) (*CloudExadataInfrastructureConfigureExascaleManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudExadataInfrastructureId == nil {
		return nil, errors.New("invalid value for required argument 'CloudExadataInfrastructureId'")
	}
	if args.TotalStorageInGbs == nil {
		return nil, errors.New("invalid value for required argument 'TotalStorageInGbs'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudExadataInfrastructureConfigureExascaleManagement
	err := ctx.RegisterResource("oci:Database/cloudExadataInfrastructureConfigureExascaleManagement:CloudExadataInfrastructureConfigureExascaleManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudExadataInfrastructureConfigureExascaleManagement gets an existing CloudExadataInfrastructureConfigureExascaleManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudExadataInfrastructureConfigureExascaleManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudExadataInfrastructureConfigureExascaleManagementState, opts ...pulumi.ResourceOption) (*CloudExadataInfrastructureConfigureExascaleManagement, error) {
	var resource CloudExadataInfrastructureConfigureExascaleManagement
	err := ctx.ReadResource("oci:Database/cloudExadataInfrastructureConfigureExascaleManagement:CloudExadataInfrastructureConfigureExascaleManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudExadataInfrastructureConfigureExascaleManagement resources.
type cloudExadataInfrastructureConfigureExascaleManagementState struct {
	// The requested number of additional storage servers activated for the Exadata infrastructure.
	ActivatedStorageCount *int `pulumi:"activatedStorageCount"`
	// The requested number of additional storage servers for the Exadata infrastructure.
	AdditionalStorageCount *int `pulumi:"additionalStorageCount"`
	// The name of the availability domain that the cloud Exadata infrastructure resource is located in.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
	AvailableStorageSizeInGbs *int `pulumi:"availableStorageSizeInGbs"`
	// The cloud Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudExadataInfrastructureId *string `pulumi:"cloudExadataInfrastructureId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Exadata Infrastructure.
	ClusterPlacementGroupId *string `pulumi:"clusterPlacementGroupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The number of compute servers for the cloud Exadata infrastructure.
	ComputeCount *int `pulumi:"computeCount"`
	// The total number of CPU cores allocated.
	CpuCount *int `pulumi:"cpuCount"`
	// The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
	CustomerContacts []CloudExadataInfrastructureConfigureExascaleManagementCustomerContact `pulumi:"customerContacts"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs *float64 `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs *int `pulumi:"dbNodeStorageSizeInGbs"`
	// The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
	DbServerVersion *string `pulumi:"dbServerVersion"`
	// Details of the file system configuration of the Exadata infrastructure.
	DefinedFileSystemConfigurations []CloudExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfiguration `pulumi:"definedFileSystemConfigurations"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The exascale config response details for the Exadata Cloud@Customer infrastructure or cloud Exadata infrastructure . Applies to both Exadata Cloud@Customer instances and Exadata Cloud Service instances.
	ExascaleConfigs []CloudExadataInfrastructureConfigureExascaleManagementExascaleConfig `pulumi:"exascaleConfigs"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// If true, the infrastructure is using granular maintenance scheduling preference.
	IsSchedulingPolicyAssociated *bool `pulumi:"isSchedulingPolicyAssociated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
	LastMaintenanceRunId *string `pulumi:"lastMaintenanceRunId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindows []CloudExadataInfrastructureConfigureExascaleManagementMaintenanceWindow `pulumi:"maintenanceWindows"`
	// The total number of CPU cores available.
	MaxCpuCount *int `pulumi:"maxCpuCount"`
	// The total available DATA disk group size.
	MaxDataStorageInTbs *float64 `pulumi:"maxDataStorageInTbs"`
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs *int `pulumi:"maxDbNodeStorageInGbs"`
	// The total memory available in GBs.
	MaxMemoryInGbs *int `pulumi:"maxMemoryInGbs"`
	// The memory allocated in GBs.
	MemorySizeInGbs *int `pulumi:"memorySizeInGbs"`
	// The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
	MonthlyDbServerVersion *string `pulumi:"monthlyDbServerVersion"`
	// The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
	MonthlyStorageServerVersion *string `pulumi:"monthlyStorageServerVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
	NextMaintenanceRunId *string `pulumi:"nextMaintenanceRunId"`
	// The model name of the cloud Exadata infrastructure resource.
	Shape *string `pulumi:"shape"`
	// The current lifecycle state of the cloud Exadata infrastructure resource.
	State *string `pulumi:"state"`
	// The number of storage servers for the cloud Exadata infrastructure.
	StorageCount *int `pulumi:"storageCount"`
	// The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
	StorageServerVersion *string `pulumi:"storageServerVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the cloud Exadata infrastructure resource was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// Storage size needed for Exascale in GBs.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TotalStorageInGbs *int `pulumi:"totalStorageInGbs"`
	// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
	TotalStorageSizeInGbs *int `pulumi:"totalStorageSizeInGbs"`
}

type CloudExadataInfrastructureConfigureExascaleManagementState struct {
	// The requested number of additional storage servers activated for the Exadata infrastructure.
	ActivatedStorageCount pulumi.IntPtrInput
	// The requested number of additional storage servers for the Exadata infrastructure.
	AdditionalStorageCount pulumi.IntPtrInput
	// The name of the availability domain that the cloud Exadata infrastructure resource is located in.
	AvailabilityDomain pulumi.StringPtrInput
	// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
	AvailableStorageSizeInGbs pulumi.IntPtrInput
	// The cloud Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudExadataInfrastructureId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Exadata Infrastructure.
	ClusterPlacementGroupId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The number of compute servers for the cloud Exadata infrastructure.
	ComputeCount pulumi.IntPtrInput
	// The total number of CPU cores allocated.
	CpuCount pulumi.IntPtrInput
	// The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
	CustomerContacts CloudExadataInfrastructureConfigureExascaleManagementCustomerContactArrayInput
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs pulumi.Float64PtrInput
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntPtrInput
	// The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
	DbServerVersion pulumi.StringPtrInput
	// Details of the file system configuration of the Exadata infrastructure.
	DefinedFileSystemConfigurations CloudExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfigurationArrayInput
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapInput
	// The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// The exascale config response details for the Exadata Cloud@Customer infrastructure or cloud Exadata infrastructure . Applies to both Exadata Cloud@Customer instances and Exadata Cloud Service instances.
	ExascaleConfigs CloudExadataInfrastructureConfigureExascaleManagementExascaleConfigArrayInput
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// If true, the infrastructure is using granular maintenance scheduling preference.
	IsSchedulingPolicyAssociated pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
	LastMaintenanceRunId pulumi.StringPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindows CloudExadataInfrastructureConfigureExascaleManagementMaintenanceWindowArrayInput
	// The total number of CPU cores available.
	MaxCpuCount pulumi.IntPtrInput
	// The total available DATA disk group size.
	MaxDataStorageInTbs pulumi.Float64PtrInput
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs pulumi.IntPtrInput
	// The total memory available in GBs.
	MaxMemoryInGbs pulumi.IntPtrInput
	// The memory allocated in GBs.
	MemorySizeInGbs pulumi.IntPtrInput
	// The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
	MonthlyDbServerVersion pulumi.StringPtrInput
	// The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
	MonthlyStorageServerVersion pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
	NextMaintenanceRunId pulumi.StringPtrInput
	// The model name of the cloud Exadata infrastructure resource.
	Shape pulumi.StringPtrInput
	// The current lifecycle state of the cloud Exadata infrastructure resource.
	State pulumi.StringPtrInput
	// The number of storage servers for the cloud Exadata infrastructure.
	StorageCount pulumi.IntPtrInput
	// The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
	StorageServerVersion pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
	SubscriptionId pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	SystemTags pulumi.StringMapInput
	// The date and time the cloud Exadata infrastructure resource was created.
	TimeCreated pulumi.StringPtrInput
	// Storage size needed for Exascale in GBs.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TotalStorageInGbs pulumi.IntPtrInput
	// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
	TotalStorageSizeInGbs pulumi.IntPtrInput
}

func (CloudExadataInfrastructureConfigureExascaleManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudExadataInfrastructureConfigureExascaleManagementState)(nil)).Elem()
}

type cloudExadataInfrastructureConfigureExascaleManagementArgs struct {
	// The cloud Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudExadataInfrastructureId string `pulumi:"cloudExadataInfrastructureId"`
	// Storage size needed for Exascale in GBs.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TotalStorageInGbs int `pulumi:"totalStorageInGbs"`
}

// The set of arguments for constructing a CloudExadataInfrastructureConfigureExascaleManagement resource.
type CloudExadataInfrastructureConfigureExascaleManagementArgs struct {
	// The cloud Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudExadataInfrastructureId pulumi.StringInput
	// Storage size needed for Exascale in GBs.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TotalStorageInGbs pulumi.IntInput
}

func (CloudExadataInfrastructureConfigureExascaleManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudExadataInfrastructureConfigureExascaleManagementArgs)(nil)).Elem()
}

type CloudExadataInfrastructureConfigureExascaleManagementInput interface {
	pulumi.Input

	ToCloudExadataInfrastructureConfigureExascaleManagementOutput() CloudExadataInfrastructureConfigureExascaleManagementOutput
	ToCloudExadataInfrastructureConfigureExascaleManagementOutputWithContext(ctx context.Context) CloudExadataInfrastructureConfigureExascaleManagementOutput
}

func (*CloudExadataInfrastructureConfigureExascaleManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudExadataInfrastructureConfigureExascaleManagement)(nil)).Elem()
}

func (i *CloudExadataInfrastructureConfigureExascaleManagement) ToCloudExadataInfrastructureConfigureExascaleManagementOutput() CloudExadataInfrastructureConfigureExascaleManagementOutput {
	return i.ToCloudExadataInfrastructureConfigureExascaleManagementOutputWithContext(context.Background())
}

func (i *CloudExadataInfrastructureConfigureExascaleManagement) ToCloudExadataInfrastructureConfigureExascaleManagementOutputWithContext(ctx context.Context) CloudExadataInfrastructureConfigureExascaleManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudExadataInfrastructureConfigureExascaleManagementOutput)
}

// CloudExadataInfrastructureConfigureExascaleManagementArrayInput is an input type that accepts CloudExadataInfrastructureConfigureExascaleManagementArray and CloudExadataInfrastructureConfigureExascaleManagementArrayOutput values.
// You can construct a concrete instance of `CloudExadataInfrastructureConfigureExascaleManagementArrayInput` via:
//
//	CloudExadataInfrastructureConfigureExascaleManagementArray{ CloudExadataInfrastructureConfigureExascaleManagementArgs{...} }
type CloudExadataInfrastructureConfigureExascaleManagementArrayInput interface {
	pulumi.Input

	ToCloudExadataInfrastructureConfigureExascaleManagementArrayOutput() CloudExadataInfrastructureConfigureExascaleManagementArrayOutput
	ToCloudExadataInfrastructureConfigureExascaleManagementArrayOutputWithContext(context.Context) CloudExadataInfrastructureConfigureExascaleManagementArrayOutput
}

type CloudExadataInfrastructureConfigureExascaleManagementArray []CloudExadataInfrastructureConfigureExascaleManagementInput

func (CloudExadataInfrastructureConfigureExascaleManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudExadataInfrastructureConfigureExascaleManagement)(nil)).Elem()
}

func (i CloudExadataInfrastructureConfigureExascaleManagementArray) ToCloudExadataInfrastructureConfigureExascaleManagementArrayOutput() CloudExadataInfrastructureConfigureExascaleManagementArrayOutput {
	return i.ToCloudExadataInfrastructureConfigureExascaleManagementArrayOutputWithContext(context.Background())
}

func (i CloudExadataInfrastructureConfigureExascaleManagementArray) ToCloudExadataInfrastructureConfigureExascaleManagementArrayOutputWithContext(ctx context.Context) CloudExadataInfrastructureConfigureExascaleManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudExadataInfrastructureConfigureExascaleManagementArrayOutput)
}

// CloudExadataInfrastructureConfigureExascaleManagementMapInput is an input type that accepts CloudExadataInfrastructureConfigureExascaleManagementMap and CloudExadataInfrastructureConfigureExascaleManagementMapOutput values.
// You can construct a concrete instance of `CloudExadataInfrastructureConfigureExascaleManagementMapInput` via:
//
//	CloudExadataInfrastructureConfigureExascaleManagementMap{ "key": CloudExadataInfrastructureConfigureExascaleManagementArgs{...} }
type CloudExadataInfrastructureConfigureExascaleManagementMapInput interface {
	pulumi.Input

	ToCloudExadataInfrastructureConfigureExascaleManagementMapOutput() CloudExadataInfrastructureConfigureExascaleManagementMapOutput
	ToCloudExadataInfrastructureConfigureExascaleManagementMapOutputWithContext(context.Context) CloudExadataInfrastructureConfigureExascaleManagementMapOutput
}

type CloudExadataInfrastructureConfigureExascaleManagementMap map[string]CloudExadataInfrastructureConfigureExascaleManagementInput

func (CloudExadataInfrastructureConfigureExascaleManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudExadataInfrastructureConfigureExascaleManagement)(nil)).Elem()
}

func (i CloudExadataInfrastructureConfigureExascaleManagementMap) ToCloudExadataInfrastructureConfigureExascaleManagementMapOutput() CloudExadataInfrastructureConfigureExascaleManagementMapOutput {
	return i.ToCloudExadataInfrastructureConfigureExascaleManagementMapOutputWithContext(context.Background())
}

func (i CloudExadataInfrastructureConfigureExascaleManagementMap) ToCloudExadataInfrastructureConfigureExascaleManagementMapOutputWithContext(ctx context.Context) CloudExadataInfrastructureConfigureExascaleManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudExadataInfrastructureConfigureExascaleManagementMapOutput)
}

type CloudExadataInfrastructureConfigureExascaleManagementOutput struct{ *pulumi.OutputState }

func (CloudExadataInfrastructureConfigureExascaleManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudExadataInfrastructureConfigureExascaleManagement)(nil)).Elem()
}

func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) ToCloudExadataInfrastructureConfigureExascaleManagementOutput() CloudExadataInfrastructureConfigureExascaleManagementOutput {
	return o
}

func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) ToCloudExadataInfrastructureConfigureExascaleManagementOutputWithContext(ctx context.Context) CloudExadataInfrastructureConfigureExascaleManagementOutput {
	return o
}

// The requested number of additional storage servers activated for the Exadata infrastructure.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) ActivatedStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput {
		return v.ActivatedStorageCount
	}).(pulumi.IntOutput)
}

// The requested number of additional storage servers for the Exadata infrastructure.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) AdditionalStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput {
		return v.AdditionalStorageCount
	}).(pulumi.IntOutput)
}

// The name of the availability domain that the cloud Exadata infrastructure resource is located in.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.AvailabilityDomain
	}).(pulumi.StringOutput)
}

// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) AvailableStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput {
		return v.AvailableStorageSizeInGbs
	}).(pulumi.IntOutput)
}

// The cloud Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) CloudExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.CloudExadataInfrastructureId
	}).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Exadata Infrastructure.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) ClusterPlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.ClusterPlacementGroupId
	}).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// The number of compute servers for the cloud Exadata infrastructure.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) ComputeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput { return v.ComputeCount }).(pulumi.IntOutput)
}

// The total number of CPU cores allocated.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput { return v.CpuCount }).(pulumi.IntOutput)
}

// The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) CustomerContacts() CloudExadataInfrastructureConfigureExascaleManagementCustomerContactArrayOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) CloudExadataInfrastructureConfigureExascaleManagementCustomerContactArrayOutput {
		return v.CustomerContacts
	}).(CloudExadataInfrastructureConfigureExascaleManagementCustomerContactArrayOutput)
}

// Size, in terabytes, of the DATA disk group.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.Float64Output {
		return v.DataStorageSizeInTbs
	}).(pulumi.Float64Output)
}

// The local node storage allocated in GBs.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput {
		return v.DbNodeStorageSizeInGbs
	}).(pulumi.IntOutput)
}

// The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) DbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.DbServerVersion
	}).(pulumi.StringOutput)
}

// Details of the file system configuration of the Exadata infrastructure.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) DefinedFileSystemConfigurations() CloudExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfigurationArrayOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) CloudExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfigurationArrayOutput {
		return v.DefinedFileSystemConfigurations
	}).(CloudExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfigurationArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringMapOutput {
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// The exascale config response details for the Exadata Cloud@Customer infrastructure or cloud Exadata infrastructure . Applies to both Exadata Cloud@Customer instances and Exadata Cloud Service instances.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) ExascaleConfigs() CloudExadataInfrastructureConfigureExascaleManagementExascaleConfigArrayOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) CloudExadataInfrastructureConfigureExascaleManagementExascaleConfigArrayOutput {
		return v.ExascaleConfigs
	}).(CloudExadataInfrastructureConfigureExascaleManagementExascaleConfigArrayOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringMapOutput {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// If true, the infrastructure is using granular maintenance scheduling preference.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) IsSchedulingPolicyAssociated() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.BoolOutput {
		return v.IsSchedulingPolicyAssociated
	}).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) LastMaintenanceRunId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.LastMaintenanceRunId
	}).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) MaintenanceWindows() CloudExadataInfrastructureConfigureExascaleManagementMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) CloudExadataInfrastructureConfigureExascaleManagementMaintenanceWindowArrayOutput {
		return v.MaintenanceWindows
	}).(CloudExadataInfrastructureConfigureExascaleManagementMaintenanceWindowArrayOutput)
}

// The total number of CPU cores available.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) MaxCpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput { return v.MaxCpuCount }).(pulumi.IntOutput)
}

// The total available DATA disk group size.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) MaxDataStorageInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.Float64Output {
		return v.MaxDataStorageInTbs
	}).(pulumi.Float64Output)
}

// The total local node storage available in GBs.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) MaxDbNodeStorageInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput {
		return v.MaxDbNodeStorageInGbs
	}).(pulumi.IntOutput)
}

// The total memory available in GBs.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) MaxMemoryInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput {
		return v.MaxMemoryInGbs
	}).(pulumi.IntOutput)
}

// The memory allocated in GBs.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput {
		return v.MemorySizeInGbs
	}).(pulumi.IntOutput)
}

// The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) MonthlyDbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.MonthlyDbServerVersion
	}).(pulumi.StringOutput)
}

// The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) MonthlyStorageServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.MonthlyStorageServerVersion
	}).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) NextMaintenanceRunId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.NextMaintenanceRunId
	}).(pulumi.StringOutput)
}

// The model name of the cloud Exadata infrastructure resource.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput { return v.Shape }).(pulumi.StringOutput)
}

// The current lifecycle state of the cloud Exadata infrastructure resource.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The number of storage servers for the cloud Exadata infrastructure.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) StorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput { return v.StorageCount }).(pulumi.IntOutput)
}

// The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) StorageServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.StorageServerVersion
	}).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.SubscriptionId
	}).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringMapOutput {
		return v.SystemTags
	}).(pulumi.StringMapOutput)
}

// The date and time the cloud Exadata infrastructure resource was created.
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.StringOutput {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// Storage size needed for Exascale in GBs.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) TotalStorageInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput {
		return v.TotalStorageInGbs
	}).(pulumi.IntOutput)
}

// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
func (o CloudExadataInfrastructureConfigureExascaleManagementOutput) TotalStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructureConfigureExascaleManagement) pulumi.IntOutput {
		return v.TotalStorageSizeInGbs
	}).(pulumi.IntOutput)
}

type CloudExadataInfrastructureConfigureExascaleManagementArrayOutput struct{ *pulumi.OutputState }

func (CloudExadataInfrastructureConfigureExascaleManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudExadataInfrastructureConfigureExascaleManagement)(nil)).Elem()
}

func (o CloudExadataInfrastructureConfigureExascaleManagementArrayOutput) ToCloudExadataInfrastructureConfigureExascaleManagementArrayOutput() CloudExadataInfrastructureConfigureExascaleManagementArrayOutput {
	return o
}

func (o CloudExadataInfrastructureConfigureExascaleManagementArrayOutput) ToCloudExadataInfrastructureConfigureExascaleManagementArrayOutputWithContext(ctx context.Context) CloudExadataInfrastructureConfigureExascaleManagementArrayOutput {
	return o
}

func (o CloudExadataInfrastructureConfigureExascaleManagementArrayOutput) Index(i pulumi.IntInput) CloudExadataInfrastructureConfigureExascaleManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudExadataInfrastructureConfigureExascaleManagement {
		return vs[0].([]*CloudExadataInfrastructureConfigureExascaleManagement)[vs[1].(int)]
	}).(CloudExadataInfrastructureConfigureExascaleManagementOutput)
}

type CloudExadataInfrastructureConfigureExascaleManagementMapOutput struct{ *pulumi.OutputState }

func (CloudExadataInfrastructureConfigureExascaleManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudExadataInfrastructureConfigureExascaleManagement)(nil)).Elem()
}

func (o CloudExadataInfrastructureConfigureExascaleManagementMapOutput) ToCloudExadataInfrastructureConfigureExascaleManagementMapOutput() CloudExadataInfrastructureConfigureExascaleManagementMapOutput {
	return o
}

func (o CloudExadataInfrastructureConfigureExascaleManagementMapOutput) ToCloudExadataInfrastructureConfigureExascaleManagementMapOutputWithContext(ctx context.Context) CloudExadataInfrastructureConfigureExascaleManagementMapOutput {
	return o
}

func (o CloudExadataInfrastructureConfigureExascaleManagementMapOutput) MapIndex(k pulumi.StringInput) CloudExadataInfrastructureConfigureExascaleManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudExadataInfrastructureConfigureExascaleManagement {
		return vs[0].(map[string]*CloudExadataInfrastructureConfigureExascaleManagement)[vs[1].(string)]
	}).(CloudExadataInfrastructureConfigureExascaleManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudExadataInfrastructureConfigureExascaleManagementInput)(nil)).Elem(), &CloudExadataInfrastructureConfigureExascaleManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudExadataInfrastructureConfigureExascaleManagementArrayInput)(nil)).Elem(), CloudExadataInfrastructureConfigureExascaleManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudExadataInfrastructureConfigureExascaleManagementMapInput)(nil)).Elem(), CloudExadataInfrastructureConfigureExascaleManagementMap{})
	pulumi.RegisterOutputType(CloudExadataInfrastructureConfigureExascaleManagementOutput{})
	pulumi.RegisterOutputType(CloudExadataInfrastructureConfigureExascaleManagementArrayOutput{})
	pulumi.RegisterOutputType(CloudExadataInfrastructureConfigureExascaleManagementMapOutput{})
}
