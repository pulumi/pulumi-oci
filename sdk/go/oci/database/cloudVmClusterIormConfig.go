// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Cloud Vm Cluster Iorm Config resource in Oracle Cloud Infrastructure Database service.
//
// Updates IORM settings for the specified Cloud Vm Cluster.
//
// The [UpdateCloudVmClusterIormConfig](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/UpdateCloudVmClusterIormConfig/) API is used for Cloud Vm Cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.NewCloudVmClusterIormConfig(ctx, "test_cloud_vm_cluster_iorm_config", &Database.CloudVmClusterIormConfigArgs{
//				DbPlans: database.CloudVmClusterIormConfigDbPlanArray{
//					&database.CloudVmClusterIormConfigDbPlanArgs{
//						DbName: pulumi.Any(cloudVmClusterIormConfigDbPlansDbName),
//						Share:  pulumi.Any(cloudVmClusterIormConfigDbPlansShare),
//					},
//				},
//				CloudVmClusterId: pulumi.Any(testCloudVmCluster.Id),
//				Objective:        pulumi.String("AUTO"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CloudVmClusterIormConfigs can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Database/cloudVmClusterIormConfig:CloudVmClusterIormConfig test_cloud_vm_cluster_iorm_config "cloudVmClusters/{cloudVmClusterId}/CloudVmClusterIormConfig"
// ```
type CloudVmClusterIormConfig struct {
	pulumi.CustomResourceState

	// The Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudVmClusterId pulumi.StringOutput `pulumi:"cloudVmClusterId"`
	// (Updatable) Array of IORM Setting for all the database in this Cloud Vm Cluster
	DbPlans CloudVmClusterIormConfigDbPlanArrayOutput `pulumi:"dbPlans"`
	// Additional information about the current `lifecycleState`.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) Value for the IORM objective Default is "Auto"
	Objective pulumi.StringOutput `pulumi:"objective"`
	// The current state of IORM configuration for the Exadata DB system.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewCloudVmClusterIormConfig registers a new resource with the given unique name, arguments, and options.
func NewCloudVmClusterIormConfig(ctx *pulumi.Context,
	name string, args *CloudVmClusterIormConfigArgs, opts ...pulumi.ResourceOption) (*CloudVmClusterIormConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudVmClusterId == nil {
		return nil, errors.New("invalid value for required argument 'CloudVmClusterId'")
	}
	if args.DbPlans == nil {
		return nil, errors.New("invalid value for required argument 'DbPlans'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudVmClusterIormConfig
	err := ctx.RegisterResource("oci:Database/cloudVmClusterIormConfig:CloudVmClusterIormConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudVmClusterIormConfig gets an existing CloudVmClusterIormConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudVmClusterIormConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudVmClusterIormConfigState, opts ...pulumi.ResourceOption) (*CloudVmClusterIormConfig, error) {
	var resource CloudVmClusterIormConfig
	err := ctx.ReadResource("oci:Database/cloudVmClusterIormConfig:CloudVmClusterIormConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudVmClusterIormConfig resources.
type cloudVmClusterIormConfigState struct {
	// The Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudVmClusterId *string `pulumi:"cloudVmClusterId"`
	// (Updatable) Array of IORM Setting for all the database in this Cloud Vm Cluster
	DbPlans []CloudVmClusterIormConfigDbPlan `pulumi:"dbPlans"`
	// Additional information about the current `lifecycleState`.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) Value for the IORM objective Default is "Auto"
	Objective *string `pulumi:"objective"`
	// The current state of IORM configuration for the Exadata DB system.
	State *string `pulumi:"state"`
}

type CloudVmClusterIormConfigState struct {
	// The Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudVmClusterId pulumi.StringPtrInput
	// (Updatable) Array of IORM Setting for all the database in this Cloud Vm Cluster
	DbPlans CloudVmClusterIormConfigDbPlanArrayInput
	// Additional information about the current `lifecycleState`.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) Value for the IORM objective Default is "Auto"
	Objective pulumi.StringPtrInput
	// The current state of IORM configuration for the Exadata DB system.
	State pulumi.StringPtrInput
}

func (CloudVmClusterIormConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudVmClusterIormConfigState)(nil)).Elem()
}

type cloudVmClusterIormConfigArgs struct {
	// The Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudVmClusterId string `pulumi:"cloudVmClusterId"`
	// (Updatable) Array of IORM Setting for all the database in this Cloud Vm Cluster
	DbPlans []CloudVmClusterIormConfigDbPlan `pulumi:"dbPlans"`
	// (Updatable) Value for the IORM objective Default is "Auto"
	Objective *string `pulumi:"objective"`
}

// The set of arguments for constructing a CloudVmClusterIormConfig resource.
type CloudVmClusterIormConfigArgs struct {
	// The Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudVmClusterId pulumi.StringInput
	// (Updatable) Array of IORM Setting for all the database in this Cloud Vm Cluster
	DbPlans CloudVmClusterIormConfigDbPlanArrayInput
	// (Updatable) Value for the IORM objective Default is "Auto"
	Objective pulumi.StringPtrInput
}

func (CloudVmClusterIormConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudVmClusterIormConfigArgs)(nil)).Elem()
}

type CloudVmClusterIormConfigInput interface {
	pulumi.Input

	ToCloudVmClusterIormConfigOutput() CloudVmClusterIormConfigOutput
	ToCloudVmClusterIormConfigOutputWithContext(ctx context.Context) CloudVmClusterIormConfigOutput
}

func (*CloudVmClusterIormConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudVmClusterIormConfig)(nil)).Elem()
}

func (i *CloudVmClusterIormConfig) ToCloudVmClusterIormConfigOutput() CloudVmClusterIormConfigOutput {
	return i.ToCloudVmClusterIormConfigOutputWithContext(context.Background())
}

func (i *CloudVmClusterIormConfig) ToCloudVmClusterIormConfigOutputWithContext(ctx context.Context) CloudVmClusterIormConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudVmClusterIormConfigOutput)
}

// CloudVmClusterIormConfigArrayInput is an input type that accepts CloudVmClusterIormConfigArray and CloudVmClusterIormConfigArrayOutput values.
// You can construct a concrete instance of `CloudVmClusterIormConfigArrayInput` via:
//
//	CloudVmClusterIormConfigArray{ CloudVmClusterIormConfigArgs{...} }
type CloudVmClusterIormConfigArrayInput interface {
	pulumi.Input

	ToCloudVmClusterIormConfigArrayOutput() CloudVmClusterIormConfigArrayOutput
	ToCloudVmClusterIormConfigArrayOutputWithContext(context.Context) CloudVmClusterIormConfigArrayOutput
}

type CloudVmClusterIormConfigArray []CloudVmClusterIormConfigInput

func (CloudVmClusterIormConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudVmClusterIormConfig)(nil)).Elem()
}

func (i CloudVmClusterIormConfigArray) ToCloudVmClusterIormConfigArrayOutput() CloudVmClusterIormConfigArrayOutput {
	return i.ToCloudVmClusterIormConfigArrayOutputWithContext(context.Background())
}

func (i CloudVmClusterIormConfigArray) ToCloudVmClusterIormConfigArrayOutputWithContext(ctx context.Context) CloudVmClusterIormConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudVmClusterIormConfigArrayOutput)
}

// CloudVmClusterIormConfigMapInput is an input type that accepts CloudVmClusterIormConfigMap and CloudVmClusterIormConfigMapOutput values.
// You can construct a concrete instance of `CloudVmClusterIormConfigMapInput` via:
//
//	CloudVmClusterIormConfigMap{ "key": CloudVmClusterIormConfigArgs{...} }
type CloudVmClusterIormConfigMapInput interface {
	pulumi.Input

	ToCloudVmClusterIormConfigMapOutput() CloudVmClusterIormConfigMapOutput
	ToCloudVmClusterIormConfigMapOutputWithContext(context.Context) CloudVmClusterIormConfigMapOutput
}

type CloudVmClusterIormConfigMap map[string]CloudVmClusterIormConfigInput

func (CloudVmClusterIormConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudVmClusterIormConfig)(nil)).Elem()
}

func (i CloudVmClusterIormConfigMap) ToCloudVmClusterIormConfigMapOutput() CloudVmClusterIormConfigMapOutput {
	return i.ToCloudVmClusterIormConfigMapOutputWithContext(context.Background())
}

func (i CloudVmClusterIormConfigMap) ToCloudVmClusterIormConfigMapOutputWithContext(ctx context.Context) CloudVmClusterIormConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudVmClusterIormConfigMapOutput)
}

type CloudVmClusterIormConfigOutput struct{ *pulumi.OutputState }

func (CloudVmClusterIormConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudVmClusterIormConfig)(nil)).Elem()
}

func (o CloudVmClusterIormConfigOutput) ToCloudVmClusterIormConfigOutput() CloudVmClusterIormConfigOutput {
	return o
}

func (o CloudVmClusterIormConfigOutput) ToCloudVmClusterIormConfigOutputWithContext(ctx context.Context) CloudVmClusterIormConfigOutput {
	return o
}

// The Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o CloudVmClusterIormConfigOutput) CloudVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmClusterIormConfig) pulumi.StringOutput { return v.CloudVmClusterId }).(pulumi.StringOutput)
}

// (Updatable) Array of IORM Setting for all the database in this Cloud Vm Cluster
func (o CloudVmClusterIormConfigOutput) DbPlans() CloudVmClusterIormConfigDbPlanArrayOutput {
	return o.ApplyT(func(v *CloudVmClusterIormConfig) CloudVmClusterIormConfigDbPlanArrayOutput { return v.DbPlans }).(CloudVmClusterIormConfigDbPlanArrayOutput)
}

// Additional information about the current `lifecycleState`.
func (o CloudVmClusterIormConfigOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmClusterIormConfig) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) Value for the IORM objective Default is "Auto"
func (o CloudVmClusterIormConfigOutput) Objective() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmClusterIormConfig) pulumi.StringOutput { return v.Objective }).(pulumi.StringOutput)
}

// The current state of IORM configuration for the Exadata DB system.
func (o CloudVmClusterIormConfigOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudVmClusterIormConfig) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type CloudVmClusterIormConfigArrayOutput struct{ *pulumi.OutputState }

func (CloudVmClusterIormConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudVmClusterIormConfig)(nil)).Elem()
}

func (o CloudVmClusterIormConfigArrayOutput) ToCloudVmClusterIormConfigArrayOutput() CloudVmClusterIormConfigArrayOutput {
	return o
}

func (o CloudVmClusterIormConfigArrayOutput) ToCloudVmClusterIormConfigArrayOutputWithContext(ctx context.Context) CloudVmClusterIormConfigArrayOutput {
	return o
}

func (o CloudVmClusterIormConfigArrayOutput) Index(i pulumi.IntInput) CloudVmClusterIormConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudVmClusterIormConfig {
		return vs[0].([]*CloudVmClusterIormConfig)[vs[1].(int)]
	}).(CloudVmClusterIormConfigOutput)
}

type CloudVmClusterIormConfigMapOutput struct{ *pulumi.OutputState }

func (CloudVmClusterIormConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudVmClusterIormConfig)(nil)).Elem()
}

func (o CloudVmClusterIormConfigMapOutput) ToCloudVmClusterIormConfigMapOutput() CloudVmClusterIormConfigMapOutput {
	return o
}

func (o CloudVmClusterIormConfigMapOutput) ToCloudVmClusterIormConfigMapOutputWithContext(ctx context.Context) CloudVmClusterIormConfigMapOutput {
	return o
}

func (o CloudVmClusterIormConfigMapOutput) MapIndex(k pulumi.StringInput) CloudVmClusterIormConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudVmClusterIormConfig {
		return vs[0].(map[string]*CloudVmClusterIormConfig)[vs[1].(string)]
	}).(CloudVmClusterIormConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudVmClusterIormConfigInput)(nil)).Elem(), &CloudVmClusterIormConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudVmClusterIormConfigArrayInput)(nil)).Elem(), CloudVmClusterIormConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudVmClusterIormConfigMapInput)(nil)).Elem(), CloudVmClusterIormConfigMap{})
	pulumi.RegisterOutputType(CloudVmClusterIormConfigOutput{})
	pulumi.RegisterOutputType(CloudVmClusterIormConfigArrayOutput{})
	pulumi.RegisterOutputType(CloudVmClusterIormConfigMapOutput{})
}
