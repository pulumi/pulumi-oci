// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Database resource in Oracle Cloud Infrastructure Database service.
//
// Creates a new database in the specified Database Home. If the database version is provided, it must match the version of the Database Home. Applies only to Exadata systems.
//
// **Important:** When `autoBackupEnabled` is not present in the configuration or set to true, the `autoBackupWindow` and `autoFullBackupWindow` will be ignored
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.NewDatabase(ctx, "testDatabase", &Database.DatabaseArgs{
//				Database: &database.DatabaseDatabaseArgs{
//					AdminPassword:           pulumi.Any(_var.Database_database_admin_password),
//					DbName:                  pulumi.Any(_var.Database_database_db_name),
//					BackupId:                pulumi.Any(oci_database_backup.Test_backup.Id),
//					BackupTdePassword:       pulumi.Any(_var.Database_database_backup_tde_password),
//					CharacterSet:            pulumi.Any(_var.Database_database_character_set),
//					DatabaseSoftwareImageId: pulumi.Any(oci_database_database_software_image.Test_database_software_image.Id),
//					DbBackupConfig: &database.DatabaseDatabaseDbBackupConfigArgs{
//						AutoBackupEnabled:    pulumi.Any(_var.Database_database_db_backup_config_auto_backup_enabled),
//						AutoBackupWindow:     pulumi.Any(_var.Database_database_db_backup_config_auto_backup_window),
//						AutoFullBackupDay:    pulumi.Any(_var.Database_database_db_backup_config_auto_full_backup_day),
//						AutoFullBackupWindow: pulumi.Any(_var.Database_database_db_backup_config_auto_full_backup_window),
//						BackupDeletionPolicy: pulumi.Any(_var.Database_database_db_backup_config_backup_deletion_policy),
//						BackupDestinationDetails: database.DatabaseDatabaseDbBackupConfigBackupDestinationDetailArray{
//							&database.DatabaseDatabaseDbBackupConfigBackupDestinationDetailArgs{
//								DbrsPolicyId: pulumi.Any(oci_identity_policy.Test_policy.Id),
//								Id:           pulumi.Any(_var.Database_database_db_backup_config_backup_destination_details_id),
//								Type:         pulumi.Any(_var.Database_database_db_backup_config_backup_destination_details_type),
//							},
//						},
//						RecoveryWindowInDays:   pulumi.Any(_var.Database_database_db_backup_config_recovery_window_in_days),
//						RunImmediateFullBackup: pulumi.Any(_var.Database_database_db_backup_config_run_immediate_full_backup),
//					},
//					DbUniqueName:       pulumi.Any(_var.Database_database_db_unique_name),
//					DbWorkload:         pulumi.Any(_var.Database_database_db_workload),
//					DefinedTags:        pulumi.Any(_var.Database_database_defined_tags),
//					FreeformTags:       pulumi.Any(_var.Database_database_freeform_tags),
//					KmsKeyId:           pulumi.Any(oci_kms_key.Test_key.Id),
//					KmsKeyVersionId:    pulumi.Any(oci_kms_key_version.Test_key_version.Id),
//					NcharacterSet:      pulumi.Any(_var.Database_database_ncharacter_set),
//					PdbName:            pulumi.Any(_var.Database_database_pdb_name),
//					PluggableDatabases: pulumi.Any(_var.Database_database_pluggable_databases),
//					SidPrefix:          pulumi.Any(_var.Database_database_sid_prefix),
//					TdeWalletPassword:  pulumi.Any(_var.Database_database_tde_wallet_password),
//					VaultId:            pulumi.Any(oci_kms_vault.Test_vault.Id),
//				},
//				DbHomeId:        pulumi.Any(oci_database_db_home.Test_db_home.Id),
//				Source:          pulumi.Any(_var.Database_source),
//				DbVersion:       pulumi.Any(_var.Database_db_version),
//				KmsKeyId:        pulumi.Any(oci_kms_key.Test_key.Id),
//				KmsKeyVersionId: pulumi.Any(oci_kms_key_version.Test_key_version.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Databases can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Database/database:Database test_database "id"
// ```
type Database struct {
	pulumi.CustomResourceState

	// The character set for the database.  The default is AL32UTF8. Allowed values are:
	//
	// AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
	CharacterSet pulumi.StringOutput `pulumi:"characterSet"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The Connection strings used to connect to the Oracle Database.
	ConnectionStrings DatabaseConnectionStringArrayOutput `pulumi:"connectionStrings"`
	// (Updatable) Details for creating a database.
	//
	// **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
	Database DatabaseDatabaseOutput `pulumi:"database"`
	// The configuration of the Database Management service.
	DatabaseManagementConfigs DatabaseDatabaseManagementConfigArrayOutput `pulumi:"databaseManagementConfigs"`
	// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	DatabaseSoftwareImageId pulumi.StringOutput `pulumi:"databaseSoftwareImageId"`
	// (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
	DbBackupConfigs DatabaseDbBackupConfigArrayOutput `pulumi:"dbBackupConfigs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
	DbHomeId pulumi.StringOutput `pulumi:"dbHomeId"`
	// The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
	DbName pulumi.StringOutput `pulumi:"dbName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId pulumi.StringOutput `pulumi:"dbSystemId"`
	// The `DB_UNIQUE_NAME` of the Oracle Database being backed up.
	DbUniqueName pulumi.StringOutput `pulumi:"dbUniqueName"`
	// A valid Oracle Database version. For a list of supported versions, use the ListDbVersions operation.
	//
	// This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
	DbVersion pulumi.StringOutput `pulumi:"dbVersion"`
	// **Deprecated.** The dbWorkload field has been deprecated for Exadata Database Service on Dedicated Infrastructure, Exadata Database Service on Cloud@Customer, and Base Database Service. Support for this attribute will end in November 2023. You may choose to update your custom scripts to exclude the dbWorkload attribute. After November 2023 if you pass a value to the dbWorkload attribute, it will be ignored.
	//
	// The database workload type.
	DbWorkload pulumi.StringOutput `pulumi:"dbWorkload"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// True if the database is a container database.
	IsCdb pulumi.BoolOutput `pulumi:"isCdb"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
	KeyStoreId pulumi.StringOutput `pulumi:"keyStoreId"`
	// The wallet name for Oracle Key Vault.
	KeyStoreWalletName pulumi.StringOutput `pulumi:"keyStoreWalletName"`
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// The value to migrate to the kms version from none. Can only use once by setting value to true. You can not switch back to non-kms once you created or migrated.(https://www.oracle.com/security/cloud-security/key-management/faq/)
	KmsKeyMigration pulumi.BoolPtrOutput `pulumi:"kmsKeyMigration"`
	// The value to rotate the key version of current kms_key. Just change this value will trigger the rotation.
	KmsKeyRotation pulumi.IntPtrOutput `pulumi:"kmsKeyRotation"`
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
	KmsKeyVersionId pulumi.StringOutput `pulumi:"kmsKeyVersionId"`
	// The duration when the latest database backup created.
	LastBackupDurationInSeconds pulumi.IntOutput `pulumi:"lastBackupDurationInSeconds"`
	// The date and time when the latest database backup was created.
	LastBackupTimestamp pulumi.StringOutput `pulumi:"lastBackupTimestamp"`
	// The date and time when the latest database backup failed.
	LastFailedBackupTimestamp pulumi.StringOutput `pulumi:"lastFailedBackupTimestamp"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
	NcharacterSet pulumi.StringOutput `pulumi:"ncharacterSet"`
	// The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
	PdbName pulumi.StringOutput `pulumi:"pdbName"`
	// Specifies a prefix for the `Oracle SID` of the database to be created.
	SidPrefix pulumi.StringOutput `pulumi:"sidPrefix"`
	// The source of the database: Use `NONE` for creating a new database. Use `DB_BACKUP` for creating a new database by restoring from a backup. The default is `NONE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Source pulumi.StringOutput `pulumi:"source"`
	// Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	SourceDatabasePointInTimeRecoveryTimestamp pulumi.StringOutput `pulumi:"sourceDatabasePointInTimeRecoveryTimestamp"`
	// The current state of the database.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
	VaultId pulumi.StringOutput `pulumi:"vaultId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	VmClusterId pulumi.StringOutput `pulumi:"vmClusterId"`
}

// NewDatabase registers a new resource with the given unique name, arguments, and options.
func NewDatabase(ctx *pulumi.Context,
	name string, args *DatabaseArgs, opts ...pulumi.ResourceOption) (*Database, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Database == nil {
		return nil, errors.New("invalid value for required argument 'Database'")
	}
	if args.DbHomeId == nil {
		return nil, errors.New("invalid value for required argument 'DbHomeId'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Database
	err := ctx.RegisterResource("oci:Database/database:Database", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabase gets an existing Database resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseState, opts ...pulumi.ResourceOption) (*Database, error) {
	var resource Database
	err := ctx.ReadResource("oci:Database/database:Database", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Database resources.
type databaseState struct {
	// The character set for the database.  The default is AL32UTF8. Allowed values are:
	//
	// AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
	CharacterSet *string `pulumi:"characterSet"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The Connection strings used to connect to the Oracle Database.
	ConnectionStrings []DatabaseConnectionString `pulumi:"connectionStrings"`
	// (Updatable) Details for creating a database.
	//
	// **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
	Database *DatabaseDatabase `pulumi:"database"`
	// The configuration of the Database Management service.
	DatabaseManagementConfigs []DatabaseDatabaseManagementConfig `pulumi:"databaseManagementConfigs"`
	// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	DatabaseSoftwareImageId *string `pulumi:"databaseSoftwareImageId"`
	// (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
	DbBackupConfigs []DatabaseDbBackupConfig `pulumi:"dbBackupConfigs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
	DbHomeId *string `pulumi:"dbHomeId"`
	// The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
	DbName *string `pulumi:"dbName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId *string `pulumi:"dbSystemId"`
	// The `DB_UNIQUE_NAME` of the Oracle Database being backed up.
	DbUniqueName *string `pulumi:"dbUniqueName"`
	// A valid Oracle Database version. For a list of supported versions, use the ListDbVersions operation.
	//
	// This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
	DbVersion *string `pulumi:"dbVersion"`
	// **Deprecated.** The dbWorkload field has been deprecated for Exadata Database Service on Dedicated Infrastructure, Exadata Database Service on Cloud@Customer, and Base Database Service. Support for this attribute will end in November 2023. You may choose to update your custom scripts to exclude the dbWorkload attribute. After November 2023 if you pass a value to the dbWorkload attribute, it will be ignored.
	//
	// The database workload type.
	DbWorkload *string `pulumi:"dbWorkload"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// True if the database is a container database.
	IsCdb *bool `pulumi:"isCdb"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
	KeyStoreId *string `pulumi:"keyStoreId"`
	// The wallet name for Oracle Key Vault.
	KeyStoreWalletName *string `pulumi:"keyStoreWalletName"`
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The value to migrate to the kms version from none. Can only use once by setting value to true. You can not switch back to non-kms once you created or migrated.(https://www.oracle.com/security/cloud-security/key-management/faq/)
	KmsKeyMigration *bool `pulumi:"kmsKeyMigration"`
	// The value to rotate the key version of current kms_key. Just change this value will trigger the rotation.
	KmsKeyRotation *int `pulumi:"kmsKeyRotation"`
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
	KmsKeyVersionId *string `pulumi:"kmsKeyVersionId"`
	// The duration when the latest database backup created.
	LastBackupDurationInSeconds *int `pulumi:"lastBackupDurationInSeconds"`
	// The date and time when the latest database backup was created.
	LastBackupTimestamp *string `pulumi:"lastBackupTimestamp"`
	// The date and time when the latest database backup failed.
	LastFailedBackupTimestamp *string `pulumi:"lastFailedBackupTimestamp"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
	NcharacterSet *string `pulumi:"ncharacterSet"`
	// The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
	PdbName *string `pulumi:"pdbName"`
	// Specifies a prefix for the `Oracle SID` of the database to be created.
	SidPrefix *string `pulumi:"sidPrefix"`
	// The source of the database: Use `NONE` for creating a new database. Use `DB_BACKUP` for creating a new database by restoring from a backup. The default is `NONE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Source *string `pulumi:"source"`
	// Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	SourceDatabasePointInTimeRecoveryTimestamp *string `pulumi:"sourceDatabasePointInTimeRecoveryTimestamp"`
	// The current state of the database.
	State *string `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
	VaultId *string `pulumi:"vaultId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	VmClusterId *string `pulumi:"vmClusterId"`
}

type DatabaseState struct {
	// The character set for the database.  The default is AL32UTF8. Allowed values are:
	//
	// AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
	CharacterSet pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The Connection strings used to connect to the Oracle Database.
	ConnectionStrings DatabaseConnectionStringArrayInput
	// (Updatable) Details for creating a database.
	//
	// **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
	Database DatabaseDatabasePtrInput
	// The configuration of the Database Management service.
	DatabaseManagementConfigs DatabaseDatabaseManagementConfigArrayInput
	// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
	DatabaseSoftwareImageId pulumi.StringPtrInput
	// (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
	DbBackupConfigs DatabaseDbBackupConfigArrayInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
	DbHomeId pulumi.StringPtrInput
	// The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
	DbName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId pulumi.StringPtrInput
	// The `DB_UNIQUE_NAME` of the Oracle Database being backed up.
	DbUniqueName pulumi.StringPtrInput
	// A valid Oracle Database version. For a list of supported versions, use the ListDbVersions operation.
	//
	// This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
	DbVersion pulumi.StringPtrInput
	// **Deprecated.** The dbWorkload field has been deprecated for Exadata Database Service on Dedicated Infrastructure, Exadata Database Service on Cloud@Customer, and Base Database Service. Support for this attribute will end in November 2023. You may choose to update your custom scripts to exclude the dbWorkload attribute. After November 2023 if you pass a value to the dbWorkload attribute, it will be ignored.
	//
	// The database workload type.
	DbWorkload pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// True if the database is a container database.
	IsCdb pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
	KeyStoreId pulumi.StringPtrInput
	// The wallet name for Oracle Key Vault.
	KeyStoreWalletName pulumi.StringPtrInput
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId pulumi.StringPtrInput
	// The value to migrate to the kms version from none. Can only use once by setting value to true. You can not switch back to non-kms once you created or migrated.(https://www.oracle.com/security/cloud-security/key-management/faq/)
	KmsKeyMigration pulumi.BoolPtrInput
	// The value to rotate the key version of current kms_key. Just change this value will trigger the rotation.
	KmsKeyRotation pulumi.IntPtrInput
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
	KmsKeyVersionId pulumi.StringPtrInput
	// The duration when the latest database backup created.
	LastBackupDurationInSeconds pulumi.IntPtrInput
	// The date and time when the latest database backup was created.
	LastBackupTimestamp pulumi.StringPtrInput
	// The date and time when the latest database backup failed.
	LastFailedBackupTimestamp pulumi.StringPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
	NcharacterSet pulumi.StringPtrInput
	// The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
	PdbName pulumi.StringPtrInput
	// Specifies a prefix for the `Oracle SID` of the database to be created.
	SidPrefix pulumi.StringPtrInput
	// The source of the database: Use `NONE` for creating a new database. Use `DB_BACKUP` for creating a new database by restoring from a backup. The default is `NONE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Source pulumi.StringPtrInput
	// Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
	SourceDatabasePointInTimeRecoveryTimestamp pulumi.StringPtrInput
	// The current state of the database.
	State pulumi.StringPtrInput
	// The date and time the database was created.
	TimeCreated pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
	VaultId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	VmClusterId pulumi.StringPtrInput
}

func (DatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseState)(nil)).Elem()
}

type databaseArgs struct {
	// (Updatable) Details for creating a database.
	//
	// **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
	Database DatabaseDatabase `pulumi:"database"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
	DbHomeId string `pulumi:"dbHomeId"`
	// A valid Oracle Database version. For a list of supported versions, use the ListDbVersions operation.
	//
	// This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
	DbVersion *string `pulumi:"dbVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
	KeyStoreId *string `pulumi:"keyStoreId"`
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The value to migrate to the kms version from none. Can only use once by setting value to true. You can not switch back to non-kms once you created or migrated.(https://www.oracle.com/security/cloud-security/key-management/faq/)
	KmsKeyMigration *bool `pulumi:"kmsKeyMigration"`
	// The value to rotate the key version of current kms_key. Just change this value will trigger the rotation.
	KmsKeyRotation *int `pulumi:"kmsKeyRotation"`
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
	KmsKeyVersionId *string `pulumi:"kmsKeyVersionId"`
	// The source of the database: Use `NONE` for creating a new database. Use `DB_BACKUP` for creating a new database by restoring from a backup. The default is `NONE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Source string `pulumi:"source"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
	VaultId *string `pulumi:"vaultId"`
}

// The set of arguments for constructing a Database resource.
type DatabaseArgs struct {
	// (Updatable) Details for creating a database.
	//
	// **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
	Database DatabaseDatabaseInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
	DbHomeId pulumi.StringInput
	// A valid Oracle Database version. For a list of supported versions, use the ListDbVersions operation.
	//
	// This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
	DbVersion pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
	KeyStoreId pulumi.StringPtrInput
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId pulumi.StringPtrInput
	// The value to migrate to the kms version from none. Can only use once by setting value to true. You can not switch back to non-kms once you created or migrated.(https://www.oracle.com/security/cloud-security/key-management/faq/)
	KmsKeyMigration pulumi.BoolPtrInput
	// The value to rotate the key version of current kms_key. Just change this value will trigger the rotation.
	KmsKeyRotation pulumi.IntPtrInput
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
	KmsKeyVersionId pulumi.StringPtrInput
	// The source of the database: Use `NONE` for creating a new database. Use `DB_BACKUP` for creating a new database by restoring from a backup. The default is `NONE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Source pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
	VaultId pulumi.StringPtrInput
}

func (DatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseArgs)(nil)).Elem()
}

type DatabaseInput interface {
	pulumi.Input

	ToDatabaseOutput() DatabaseOutput
	ToDatabaseOutputWithContext(ctx context.Context) DatabaseOutput
}

func (*Database) ElementType() reflect.Type {
	return reflect.TypeOf((**Database)(nil)).Elem()
}

func (i *Database) ToDatabaseOutput() DatabaseOutput {
	return i.ToDatabaseOutputWithContext(context.Background())
}

func (i *Database) ToDatabaseOutputWithContext(ctx context.Context) DatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOutput)
}

// DatabaseArrayInput is an input type that accepts DatabaseArray and DatabaseArrayOutput values.
// You can construct a concrete instance of `DatabaseArrayInput` via:
//
//	DatabaseArray{ DatabaseArgs{...} }
type DatabaseArrayInput interface {
	pulumi.Input

	ToDatabaseArrayOutput() DatabaseArrayOutput
	ToDatabaseArrayOutputWithContext(context.Context) DatabaseArrayOutput
}

type DatabaseArray []DatabaseInput

func (DatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Database)(nil)).Elem()
}

func (i DatabaseArray) ToDatabaseArrayOutput() DatabaseArrayOutput {
	return i.ToDatabaseArrayOutputWithContext(context.Background())
}

func (i DatabaseArray) ToDatabaseArrayOutputWithContext(ctx context.Context) DatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseArrayOutput)
}

// DatabaseMapInput is an input type that accepts DatabaseMap and DatabaseMapOutput values.
// You can construct a concrete instance of `DatabaseMapInput` via:
//
//	DatabaseMap{ "key": DatabaseArgs{...} }
type DatabaseMapInput interface {
	pulumi.Input

	ToDatabaseMapOutput() DatabaseMapOutput
	ToDatabaseMapOutputWithContext(context.Context) DatabaseMapOutput
}

type DatabaseMap map[string]DatabaseInput

func (DatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Database)(nil)).Elem()
}

func (i DatabaseMap) ToDatabaseMapOutput() DatabaseMapOutput {
	return i.ToDatabaseMapOutputWithContext(context.Background())
}

func (i DatabaseMap) ToDatabaseMapOutputWithContext(ctx context.Context) DatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMapOutput)
}

type DatabaseOutput struct{ *pulumi.OutputState }

func (DatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Database)(nil)).Elem()
}

func (o DatabaseOutput) ToDatabaseOutput() DatabaseOutput {
	return o
}

func (o DatabaseOutput) ToDatabaseOutputWithContext(ctx context.Context) DatabaseOutput {
	return o
}

// The character set for the database.  The default is AL32UTF8. Allowed values are:
//
// AL32UTF8, AR8ADOS710, AR8ADOS720, AR8APTEC715, AR8ARABICMACS, AR8ASMO8X, AR8ISO8859P6, AR8MSWIN1256, AR8MUSSAD768, AR8NAFITHA711, AR8NAFITHA721, AR8SAKHR706, AR8SAKHR707, AZ8ISO8859P9E, BG8MSWIN, BG8PC437S, BLT8CP921, BLT8ISO8859P13, BLT8MSWIN1257, BLT8PC775, BN8BSCII, CDN8PC863, CEL8ISO8859P14, CL8ISO8859P5, CL8ISOIR111, CL8KOI8R, CL8KOI8U, CL8MACCYRILLICS, CL8MSWIN1251, EE8ISO8859P2, EE8MACCES, EE8MACCROATIANS, EE8MSWIN1250, EE8PC852, EL8DEC, EL8ISO8859P7, EL8MACGREEKS, EL8MSWIN1253, EL8PC437S, EL8PC851, EL8PC869, ET8MSWIN923, HU8ABMOD, HU8CWI2, IN8ISCII, IS8PC861, IW8ISO8859P8, IW8MACHEBREWS, IW8MSWIN1255, IW8PC1507, JA16EUC, JA16EUCTILDE, JA16SJIS, JA16SJISTILDE, JA16VMS, KO16KSC5601, KO16KSCCS, KO16MSWIN949, LA8ISO6937, LA8PASSPORT, LT8MSWIN921, LT8PC772, LT8PC774, LV8PC1117, LV8PC8LR, LV8RST104090, N8PC865, NE8ISO8859P10, NEE8ISO8859P4, RU8BESTA, RU8PC855, RU8PC866, SE8ISO8859P3, TH8MACTHAIS, TH8TISASCII, TR8DEC, TR8MACTURKISHS, TR8MSWIN1254, TR8PC857, US7ASCII, US8PC437, UTF8, VN8MSWIN1258, VN8VN3, WE8DEC, WE8DG, WE8ISO8859P1, WE8ISO8859P15, WE8ISO8859P9, WE8MACROMAN8S, WE8MSWIN1252, WE8NCR4970, WE8NEXTSTEP, WE8PC850, WE8PC858, WE8PC860, WE8ROMAN8, ZHS16CGB231280, ZHS16GBK, ZHT16BIG5, ZHT16CCDC, ZHT16DBT, ZHT16HKSCS, ZHT16MSWIN950, ZHT32EUC, ZHT32SOPS, ZHT32TRIS
func (o DatabaseOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.CharacterSet }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o DatabaseOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The Connection strings used to connect to the Oracle Database.
func (o DatabaseOutput) ConnectionStrings() DatabaseConnectionStringArrayOutput {
	return o.ApplyT(func(v *Database) DatabaseConnectionStringArrayOutput { return v.ConnectionStrings }).(DatabaseConnectionStringArrayOutput)
}

// (Updatable) Details for creating a database.
//
// **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
func (o DatabaseOutput) Database() DatabaseDatabaseOutput {
	return o.ApplyT(func(v *Database) DatabaseDatabaseOutput { return v.Database }).(DatabaseDatabaseOutput)
}

// The configuration of the Database Management service.
func (o DatabaseOutput) DatabaseManagementConfigs() DatabaseDatabaseManagementConfigArrayOutput {
	return o.ApplyT(func(v *Database) DatabaseDatabaseManagementConfigArrayOutput { return v.DatabaseManagementConfigs }).(DatabaseDatabaseManagementConfigArrayOutput)
}

// The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
func (o DatabaseOutput) DatabaseSoftwareImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.DatabaseSoftwareImageId }).(pulumi.StringOutput)
}

// (Updatable) Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
func (o DatabaseOutput) DbBackupConfigs() DatabaseDbBackupConfigArrayOutput {
	return o.ApplyT(func(v *Database) DatabaseDbBackupConfigArrayOutput { return v.DbBackupConfigs }).(DatabaseDbBackupConfigArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
func (o DatabaseOutput) DbHomeId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.DbHomeId }).(pulumi.StringOutput)
}

// The display name of the database to be created from the backup. It must begin with an alphabetic character and can contain a maximum of eight alphanumeric characters. Special characters are not permitted.
func (o DatabaseOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.DbName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
func (o DatabaseOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.DbSystemId }).(pulumi.StringOutput)
}

// The `DB_UNIQUE_NAME` of the Oracle Database being backed up.
func (o DatabaseOutput) DbUniqueName() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.DbUniqueName }).(pulumi.StringOutput)
}

// A valid Oracle Database version. For a list of supported versions, use the ListDbVersions operation.
//
// This cannot be updated in parallel with any of the following: licenseModel, dbEdition, cpuCoreCount, computeCount, computeModel, adminPassword, whitelistedIps, isMTLSConnectionRequired, openMode, permissionLevel, dbWorkload, privateEndpointLabel, nsgIds, isRefreshable, dbName, scheduledOperations, dbToolsDetails, isLocalDataGuardEnabled, or isFreeTier.
func (o DatabaseOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.DbVersion }).(pulumi.StringOutput)
}

// **Deprecated.** The dbWorkload field has been deprecated for Exadata Database Service on Dedicated Infrastructure, Exadata Database Service on Cloud@Customer, and Base Database Service. Support for this attribute will end in November 2023. You may choose to update your custom scripts to exclude the dbWorkload attribute. After November 2023 if you pass a value to the dbWorkload attribute, it will be ignored.
//
// The database workload type.
func (o DatabaseOutput) DbWorkload() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.DbWorkload }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o DatabaseOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Database) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o DatabaseOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Database) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// True if the database is a container database.
func (o DatabaseOutput) IsCdb() pulumi.BoolOutput {
	return o.ApplyT(func(v *Database) pulumi.BoolOutput { return v.IsCdb }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
func (o DatabaseOutput) KeyStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.KeyStoreId }).(pulumi.StringOutput)
}

// The wallet name for Oracle Key Vault.
func (o DatabaseOutput) KeyStoreWalletName() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.KeyStoreWalletName }).(pulumi.StringOutput)
}

// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
func (o DatabaseOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The value to migrate to the kms version from none. Can only use once by setting value to true. You can not switch back to non-kms once you created or migrated.(https://www.oracle.com/security/cloud-security/key-management/faq/)
func (o DatabaseOutput) KmsKeyMigration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Database) pulumi.BoolPtrOutput { return v.KmsKeyMigration }).(pulumi.BoolPtrOutput)
}

// The value to rotate the key version of current kms_key. Just change this value will trigger the rotation.
func (o DatabaseOutput) KmsKeyRotation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Database) pulumi.IntPtrOutput { return v.KmsKeyRotation }).(pulumi.IntPtrOutput)
}

// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
func (o DatabaseOutput) KmsKeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.KmsKeyVersionId }).(pulumi.StringOutput)
}

// The duration when the latest database backup created.
func (o DatabaseOutput) LastBackupDurationInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *Database) pulumi.IntOutput { return v.LastBackupDurationInSeconds }).(pulumi.IntOutput)
}

// The date and time when the latest database backup was created.
func (o DatabaseOutput) LastBackupTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.LastBackupTimestamp }).(pulumi.StringOutput)
}

// The date and time when the latest database backup failed.
func (o DatabaseOutput) LastFailedBackupTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.LastFailedBackupTimestamp }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o DatabaseOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The national character set for the database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
func (o DatabaseOutput) NcharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.NcharacterSet }).(pulumi.StringOutput)
}

// The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
func (o DatabaseOutput) PdbName() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.PdbName }).(pulumi.StringOutput)
}

// Specifies a prefix for the `Oracle SID` of the database to be created.
func (o DatabaseOutput) SidPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.SidPrefix }).(pulumi.StringOutput)
}

// The source of the database: Use `NONE` for creating a new database. Use `DB_BACKUP` for creating a new database by restoring from a backup. The default is `NONE`.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DatabaseOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
func (o DatabaseOutput) SourceDatabasePointInTimeRecoveryTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.SourceDatabasePointInTimeRecoveryTimestamp }).(pulumi.StringOutput)
}

// The current state of the database.
func (o DatabaseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the database was created.
func (o DatabaseOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
func (o DatabaseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.VaultId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
func (o DatabaseOutput) VmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.VmClusterId }).(pulumi.StringOutput)
}

type DatabaseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Database)(nil)).Elem()
}

func (o DatabaseArrayOutput) ToDatabaseArrayOutput() DatabaseArrayOutput {
	return o
}

func (o DatabaseArrayOutput) ToDatabaseArrayOutputWithContext(ctx context.Context) DatabaseArrayOutput {
	return o
}

func (o DatabaseArrayOutput) Index(i pulumi.IntInput) DatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Database {
		return vs[0].([]*Database)[vs[1].(int)]
	}).(DatabaseOutput)
}

type DatabaseMapOutput struct{ *pulumi.OutputState }

func (DatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Database)(nil)).Elem()
}

func (o DatabaseMapOutput) ToDatabaseMapOutput() DatabaseMapOutput {
	return o
}

func (o DatabaseMapOutput) ToDatabaseMapOutputWithContext(ctx context.Context) DatabaseMapOutput {
	return o
}

func (o DatabaseMapOutput) MapIndex(k pulumi.StringInput) DatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Database {
		return vs[0].(map[string]*Database)[vs[1].(string)]
	}).(DatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseInput)(nil)).Elem(), &Database{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseArrayInput)(nil)).Elem(), DatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseMapInput)(nil)).Elem(), DatabaseMap{})
	pulumi.RegisterOutputType(DatabaseOutput{})
	pulumi.RegisterOutputType(DatabaseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseMapOutput{})
}
