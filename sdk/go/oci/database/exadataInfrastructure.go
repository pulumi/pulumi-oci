// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource provides the Exadata Infrastructure resource in Oracle Cloud Infrastructure Database service.
//
// Creates an Exadata infrastructure resource. Applies to Exadata Cloud@Customer instances only.
// To create an Exadata Cloud Service infrastructure resource, use the  [CreateCloudExadataInfrastructure](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudExadataInfrastructure/CreateCloudExadataInfrastructure) operation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.NewExadataInfrastructure(ctx, "testExadataInfrastructure", &Database.ExadataInfrastructureArgs{
//				AdminNetworkCidr:         pulumi.Any(_var.Exadata_infrastructure_admin_network_cidr),
//				CloudControlPlaneServer1: pulumi.Any(_var.Exadata_infrastructure_cloud_control_plane_server1),
//				CloudControlPlaneServer2: pulumi.Any(_var.Exadata_infrastructure_cloud_control_plane_server2),
//				CompartmentId:            pulumi.Any(_var.Compartment_id),
//				DisplayName:              pulumi.Any(_var.Exadata_infrastructure_display_name),
//				DnsServers:               pulumi.Any(_var.Exadata_infrastructure_dns_server),
//				Gateway:                  pulumi.Any(_var.Exadata_infrastructure_gateway),
//				InfiniBandNetworkCidr:    pulumi.Any(_var.Exadata_infrastructure_infini_band_network_cidr),
//				Netmask:                  pulumi.Any(_var.Exadata_infrastructure_netmask),
//				NtpServers:               pulumi.Any(_var.Exadata_infrastructure_ntp_server),
//				Shape:                    pulumi.Any(_var.Exadata_infrastructure_shape),
//				TimeZone:                 pulumi.Any(_var.Exadata_infrastructure_time_zone),
//				ActivationFile:           pulumi.Any(_var.Exadata_infrastructure_activation_file),
//				ComputeCount:             pulumi.Any(_var.Exadata_infrastructure_compute_count),
//				Contacts: database.ExadataInfrastructureContactArray{
//					&database.ExadataInfrastructureContactArgs{
//						Email:                 pulumi.Any(_var.Exadata_infrastructure_contacts_email),
//						IsPrimary:             pulumi.Any(_var.Exadata_infrastructure_contacts_is_primary),
//						Name:                  pulumi.Any(_var.Exadata_infrastructure_contacts_name),
//						IsContactMosValidated: pulumi.Any(_var.Exadata_infrastructure_contacts_is_contact_mos_validated),
//						PhoneNumber:           pulumi.Any(_var.Exadata_infrastructure_contacts_phone_number),
//					},
//				},
//				CorporateProxy: pulumi.Any(_var.Exadata_infrastructure_corporate_proxy),
//				DefinedTags:    pulumi.Any(_var.Exadata_infrastructure_defined_tags),
//				FreeformTags: pulumi.AnyMap{
//					"Department": pulumi.Any("Finance"),
//				},
//				IsCpsOfflineReportEnabled: pulumi.Any(_var.Exadata_infrastructure_is_cps_offline_report_enabled),
//				IsMultiRackDeployment:     pulumi.Any(_var.Exadata_infrastructure_is_multi_rack_deployment),
//				MaintenanceWindow: &database.ExadataInfrastructureMaintenanceWindowArgs{
//					CustomActionTimeoutInMins: pulumi.Any(_var.Exadata_infrastructure_maintenance_window_custom_action_timeout_in_mins),
//					DaysOfWeeks: database.ExadataInfrastructureMaintenanceWindowDaysOfWeekArray{
//						&database.ExadataInfrastructureMaintenanceWindowDaysOfWeekArgs{
//							Name: pulumi.Any(_var.Exadata_infrastructure_maintenance_window_days_of_week_name),
//						},
//					},
//					HoursOfDays:                  pulumi.Any(_var.Exadata_infrastructure_maintenance_window_hours_of_day),
//					IsCustomActionTimeoutEnabled: pulumi.Any(_var.Exadata_infrastructure_maintenance_window_is_custom_action_timeout_enabled),
//					IsMonthlyPatchingEnabled:     pulumi.Any(_var.Exadata_infrastructure_maintenance_window_is_monthly_patching_enabled),
//					LeadTimeInWeeks:              pulumi.Any(_var.Exadata_infrastructure_maintenance_window_lead_time_in_weeks),
//					Months: database.ExadataInfrastructureMaintenanceWindowMonthArray{
//						&database.ExadataInfrastructureMaintenanceWindowMonthArgs{
//							Name: pulumi.Any(_var.Exadata_infrastructure_maintenance_window_months_name),
//						},
//					},
//					PatchingMode:  pulumi.Any(_var.Exadata_infrastructure_maintenance_window_patching_mode),
//					Preference:    pulumi.Any(_var.Exadata_infrastructure_maintenance_window_preference),
//					WeeksOfMonths: pulumi.Any(_var.Exadata_infrastructure_maintenance_window_weeks_of_month),
//				},
//				MultiRackConfigurationFile: pulumi.Any(_var.Exadata_infrastructure_multi_rack_configuration_file),
//				NetworkBondingModeDetails: &database.ExadataInfrastructureNetworkBondingModeDetailsArgs{
//					BackupNetworkBondingMode: pulumi.Any(_var.Exadata_infrastructure_network_bonding_mode_details_backup_network_bonding_mode),
//					ClientNetworkBondingMode: pulumi.Any(_var.Exadata_infrastructure_network_bonding_mode_details_client_network_bonding_mode),
//					DrNetworkBondingMode:     pulumi.Any(_var.Exadata_infrastructure_network_bonding_mode_details_dr_network_bonding_mode),
//				},
//				StorageCount: pulumi.Any(_var.Exadata_infrastructure_storage_count),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ExadataInfrastructures can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Database/exadataInfrastructure:ExadataInfrastructure test_exadata_infrastructure "id"
//
// ```
type ExadataInfrastructure struct {
	pulumi.CustomResourceState

	// The requested number of additional storage servers activated for the Exadata infrastructure.
	ActivatedStorageCount pulumi.IntOutput `pulumi:"activatedStorageCount"`
	// (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
	ActivationFile pulumi.StringPtrOutput `pulumi:"activationFile"`
	// The requested number of additional compute servers for the Exadata infrastructure.
	AdditionalComputeCount pulumi.IntOutput `pulumi:"additionalComputeCount"`
	// Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
	AdditionalComputeSystemModel pulumi.StringOutput `pulumi:"additionalComputeSystemModel"`
	// The requested number of additional storage servers for the Exadata infrastructure.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	AdditionalStorageCount pulumi.IntOutput `pulumi:"additionalStorageCount"`
	// (Updatable) The CIDR block for the Exadata administration network.
	AdminNetworkCidr pulumi.StringOutput `pulumi:"adminNetworkCidr"`
	// The name of the availability domain that the Exadata infrastructure is located in.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// (Updatable) The IP address for the first control plane server.
	CloudControlPlaneServer1 pulumi.StringOutput `pulumi:"cloudControlPlaneServer1"`
	// (Updatable) The IP address for the second control plane server.
	CloudControlPlaneServer2 pulumi.StringOutput `pulumi:"cloudControlPlaneServer2"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The number of compute servers for the Exadata infrastructure.
	ComputeCount pulumi.IntOutput `pulumi:"computeCount"`
	// (Updatable) The list of contacts for the Exadata infrastructure.
	Contacts ExadataInfrastructureContactArrayOutput `pulumi:"contacts"`
	// (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
	CorporateProxy pulumi.StringOutput `pulumi:"corporateProxy"`
	// The number of enabled CPU cores.
	CpusEnabled pulumi.IntOutput     `pulumi:"cpusEnabled"`
	CreateAsync pulumi.BoolPtrOutput `pulumi:"createAsync"`
	// The CSI Number of the Exadata infrastructure.
	CsiNumber pulumi.StringOutput `pulumi:"csiNumber"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs pulumi.Float64Output `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"dbNodeStorageSizeInGbs"`
	// The software version of the database servers (dom0) in the Exadata infrastructure.
	DbServerVersion pulumi.StringOutput `pulumi:"dbServerVersion"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
	DnsServers pulumi.StringArrayOutput `pulumi:"dnsServers"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) The gateway for the control plane network.
	Gateway pulumi.StringOutput `pulumi:"gateway"`
	// (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
	InfiniBandNetworkCidr pulumi.StringOutput `pulumi:"infiniBandNetworkCidr"`
	// (Updatable) Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
	IsCpsOfflineReportEnabled pulumi.BoolOutput `pulumi:"isCpsOfflineReportEnabled"`
	// (Updatable) Indicates if deployment is Multi-Rack or not.
	IsMultiRackDeployment pulumi.BoolOutput `pulumi:"isMultiRackDeployment"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
	MaintenanceSloStatus pulumi.StringOutput `pulumi:"maintenanceSloStatus"`
	// (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindow ExadataInfrastructureMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	// The total number of CPU cores available.
	MaxCpuCount pulumi.IntOutput `pulumi:"maxCpuCount"`
	// The total available DATA disk group size.
	MaxDataStorageInTbs pulumi.Float64Output `pulumi:"maxDataStorageInTbs"`
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs pulumi.IntOutput `pulumi:"maxDbNodeStorageInGbs"`
	// The total memory available in GBs.
	MaxMemoryInGbs pulumi.IntOutput `pulumi:"maxMemoryInGbs"`
	// The memory allocated in GBs.
	MemorySizeInGbs pulumi.IntOutput `pulumi:"memorySizeInGbs"`
	// The monthly software version of the database servers (dom0) in the Exadata infrastructure.
	MonthlyDbServerVersion pulumi.StringOutput `pulumi:"monthlyDbServerVersion"`
	// (Updatable) The base64 encoded Multi-Rack configuration json file.
	MultiRackConfigurationFile pulumi.StringPtrOutput `pulumi:"multiRackConfigurationFile"`
	// (Updatable) The netmask for the control plane network.
	Netmask pulumi.StringOutput `pulumi:"netmask"`
	// (Updatable) Details of bonding mode for Client and Backup and DR networks of an Exadata infrastructure.
	NetworkBondingModeDetails ExadataInfrastructureNetworkBondingModeDetailsOutput `pulumi:"networkBondingModeDetails"`
	// (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
	NtpServers pulumi.StringArrayOutput `pulumi:"ntpServers"`
	// The serial number for the Exadata infrastructure.
	RackSerialNumber pulumi.StringOutput `pulumi:"rackSerialNumber"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringOutput `pulumi:"shape"`
	// The current lifecycle state of the Exadata infrastructure.
	State pulumi.StringOutput `pulumi:"state"`
	// The number of storage servers for the Exadata infrastructure.
	StorageCount pulumi.IntOutput `pulumi:"storageCount"`
	// The software version of the storage servers (cells) in the Exadata infrastructure.
	StorageServerVersion pulumi.StringOutput `pulumi:"storageServerVersion"`
	// The date and time the Exadata infrastructure was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
}

// NewExadataInfrastructure registers a new resource with the given unique name, arguments, and options.
func NewExadataInfrastructure(ctx *pulumi.Context,
	name string, args *ExadataInfrastructureArgs, opts ...pulumi.ResourceOption) (*ExadataInfrastructure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminNetworkCidr == nil {
		return nil, errors.New("invalid value for required argument 'AdminNetworkCidr'")
	}
	if args.CloudControlPlaneServer1 == nil {
		return nil, errors.New("invalid value for required argument 'CloudControlPlaneServer1'")
	}
	if args.CloudControlPlaneServer2 == nil {
		return nil, errors.New("invalid value for required argument 'CloudControlPlaneServer2'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.DnsServers == nil {
		return nil, errors.New("invalid value for required argument 'DnsServers'")
	}
	if args.Gateway == nil {
		return nil, errors.New("invalid value for required argument 'Gateway'")
	}
	if args.InfiniBandNetworkCidr == nil {
		return nil, errors.New("invalid value for required argument 'InfiniBandNetworkCidr'")
	}
	if args.Netmask == nil {
		return nil, errors.New("invalid value for required argument 'Netmask'")
	}
	if args.NtpServers == nil {
		return nil, errors.New("invalid value for required argument 'NtpServers'")
	}
	if args.Shape == nil {
		return nil, errors.New("invalid value for required argument 'Shape'")
	}
	if args.TimeZone == nil {
		return nil, errors.New("invalid value for required argument 'TimeZone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExadataInfrastructure
	err := ctx.RegisterResource("oci:Database/exadataInfrastructure:ExadataInfrastructure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExadataInfrastructure gets an existing ExadataInfrastructure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExadataInfrastructure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExadataInfrastructureState, opts ...pulumi.ResourceOption) (*ExadataInfrastructure, error) {
	var resource ExadataInfrastructure
	err := ctx.ReadResource("oci:Database/exadataInfrastructure:ExadataInfrastructure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExadataInfrastructure resources.
type exadataInfrastructureState struct {
	// The requested number of additional storage servers activated for the Exadata infrastructure.
	ActivatedStorageCount *int `pulumi:"activatedStorageCount"`
	// (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
	ActivationFile *string `pulumi:"activationFile"`
	// The requested number of additional compute servers for the Exadata infrastructure.
	AdditionalComputeCount *int `pulumi:"additionalComputeCount"`
	// Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
	AdditionalComputeSystemModel *string `pulumi:"additionalComputeSystemModel"`
	// The requested number of additional storage servers for the Exadata infrastructure.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	AdditionalStorageCount *int `pulumi:"additionalStorageCount"`
	// (Updatable) The CIDR block for the Exadata administration network.
	AdminNetworkCidr *string `pulumi:"adminNetworkCidr"`
	// The name of the availability domain that the Exadata infrastructure is located in.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// (Updatable) The IP address for the first control plane server.
	CloudControlPlaneServer1 *string `pulumi:"cloudControlPlaneServer1"`
	// (Updatable) The IP address for the second control plane server.
	CloudControlPlaneServer2 *string `pulumi:"cloudControlPlaneServer2"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The number of compute servers for the Exadata infrastructure.
	ComputeCount *int `pulumi:"computeCount"`
	// (Updatable) The list of contacts for the Exadata infrastructure.
	Contacts []ExadataInfrastructureContact `pulumi:"contacts"`
	// (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
	CorporateProxy *string `pulumi:"corporateProxy"`
	// The number of enabled CPU cores.
	CpusEnabled *int  `pulumi:"cpusEnabled"`
	CreateAsync *bool `pulumi:"createAsync"`
	// The CSI Number of the Exadata infrastructure.
	CsiNumber *string `pulumi:"csiNumber"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs *float64 `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs *int `pulumi:"dbNodeStorageSizeInGbs"`
	// The software version of the database servers (dom0) in the Exadata infrastructure.
	DbServerVersion *string `pulumi:"dbServerVersion"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
	DnsServers []string `pulumi:"dnsServers"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The gateway for the control plane network.
	Gateway *string `pulumi:"gateway"`
	// (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
	InfiniBandNetworkCidr *string `pulumi:"infiniBandNetworkCidr"`
	// (Updatable) Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
	IsCpsOfflineReportEnabled *bool `pulumi:"isCpsOfflineReportEnabled"`
	// (Updatable) Indicates if deployment is Multi-Rack or not.
	IsMultiRackDeployment *bool `pulumi:"isMultiRackDeployment"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
	MaintenanceSloStatus *string `pulumi:"maintenanceSloStatus"`
	// (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindow *ExadataInfrastructureMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The total number of CPU cores available.
	MaxCpuCount *int `pulumi:"maxCpuCount"`
	// The total available DATA disk group size.
	MaxDataStorageInTbs *float64 `pulumi:"maxDataStorageInTbs"`
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs *int `pulumi:"maxDbNodeStorageInGbs"`
	// The total memory available in GBs.
	MaxMemoryInGbs *int `pulumi:"maxMemoryInGbs"`
	// The memory allocated in GBs.
	MemorySizeInGbs *int `pulumi:"memorySizeInGbs"`
	// The monthly software version of the database servers (dom0) in the Exadata infrastructure.
	MonthlyDbServerVersion *string `pulumi:"monthlyDbServerVersion"`
	// (Updatable) The base64 encoded Multi-Rack configuration json file.
	MultiRackConfigurationFile *string `pulumi:"multiRackConfigurationFile"`
	// (Updatable) The netmask for the control plane network.
	Netmask *string `pulumi:"netmask"`
	// (Updatable) Details of bonding mode for Client and Backup and DR networks of an Exadata infrastructure.
	NetworkBondingModeDetails *ExadataInfrastructureNetworkBondingModeDetails `pulumi:"networkBondingModeDetails"`
	// (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
	NtpServers []string `pulumi:"ntpServers"`
	// The serial number for the Exadata infrastructure.
	RackSerialNumber *string `pulumi:"rackSerialNumber"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape *string `pulumi:"shape"`
	// The current lifecycle state of the Exadata infrastructure.
	State *string `pulumi:"state"`
	// The number of storage servers for the Exadata infrastructure.
	StorageCount *int `pulumi:"storageCount"`
	// The software version of the storage servers (cells) in the Exadata infrastructure.
	StorageServerVersion *string `pulumi:"storageServerVersion"`
	// The date and time the Exadata infrastructure was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone *string `pulumi:"timeZone"`
}

type ExadataInfrastructureState struct {
	// The requested number of additional storage servers activated for the Exadata infrastructure.
	ActivatedStorageCount pulumi.IntPtrInput
	// (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
	ActivationFile pulumi.StringPtrInput
	// The requested number of additional compute servers for the Exadata infrastructure.
	AdditionalComputeCount pulumi.IntPtrInput
	// Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
	AdditionalComputeSystemModel pulumi.StringPtrInput
	// The requested number of additional storage servers for the Exadata infrastructure.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	AdditionalStorageCount pulumi.IntPtrInput
	// (Updatable) The CIDR block for the Exadata administration network.
	AdminNetworkCidr pulumi.StringPtrInput
	// The name of the availability domain that the Exadata infrastructure is located in.
	AvailabilityDomain pulumi.StringPtrInput
	// (Updatable) The IP address for the first control plane server.
	CloudControlPlaneServer1 pulumi.StringPtrInput
	// (Updatable) The IP address for the second control plane server.
	CloudControlPlaneServer2 pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The number of compute servers for the Exadata infrastructure.
	ComputeCount pulumi.IntPtrInput
	// (Updatable) The list of contacts for the Exadata infrastructure.
	Contacts ExadataInfrastructureContactArrayInput
	// (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
	CorporateProxy pulumi.StringPtrInput
	// The number of enabled CPU cores.
	CpusEnabled pulumi.IntPtrInput
	CreateAsync pulumi.BoolPtrInput
	// The CSI Number of the Exadata infrastructure.
	CsiNumber pulumi.StringPtrInput
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs pulumi.Float64PtrInput
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntPtrInput
	// The software version of the database servers (dom0) in the Exadata infrastructure.
	DbServerVersion pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
	DnsServers pulumi.StringArrayInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The gateway for the control plane network.
	Gateway pulumi.StringPtrInput
	// (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
	InfiniBandNetworkCidr pulumi.StringPtrInput
	// (Updatable) Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
	IsCpsOfflineReportEnabled pulumi.BoolPtrInput
	// (Updatable) Indicates if deployment is Multi-Rack or not.
	IsMultiRackDeployment pulumi.BoolPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
	MaintenanceSloStatus pulumi.StringPtrInput
	// (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindow ExadataInfrastructureMaintenanceWindowPtrInput
	// The total number of CPU cores available.
	MaxCpuCount pulumi.IntPtrInput
	// The total available DATA disk group size.
	MaxDataStorageInTbs pulumi.Float64PtrInput
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs pulumi.IntPtrInput
	// The total memory available in GBs.
	MaxMemoryInGbs pulumi.IntPtrInput
	// The memory allocated in GBs.
	MemorySizeInGbs pulumi.IntPtrInput
	// The monthly software version of the database servers (dom0) in the Exadata infrastructure.
	MonthlyDbServerVersion pulumi.StringPtrInput
	// (Updatable) The base64 encoded Multi-Rack configuration json file.
	MultiRackConfigurationFile pulumi.StringPtrInput
	// (Updatable) The netmask for the control plane network.
	Netmask pulumi.StringPtrInput
	// (Updatable) Details of bonding mode for Client and Backup and DR networks of an Exadata infrastructure.
	NetworkBondingModeDetails ExadataInfrastructureNetworkBondingModeDetailsPtrInput
	// (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
	NtpServers pulumi.StringArrayInput
	// The serial number for the Exadata infrastructure.
	RackSerialNumber pulumi.StringPtrInput
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringPtrInput
	// The current lifecycle state of the Exadata infrastructure.
	State pulumi.StringPtrInput
	// The number of storage servers for the Exadata infrastructure.
	StorageCount pulumi.IntPtrInput
	// The software version of the storage servers (cells) in the Exadata infrastructure.
	StorageServerVersion pulumi.StringPtrInput
	// The date and time the Exadata infrastructure was created.
	TimeCreated pulumi.StringPtrInput
	// (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringPtrInput
}

func (ExadataInfrastructureState) ElementType() reflect.Type {
	return reflect.TypeOf((*exadataInfrastructureState)(nil)).Elem()
}

type exadataInfrastructureArgs struct {
	// (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
	ActivationFile *string `pulumi:"activationFile"`
	// The requested number of additional storage servers for the Exadata infrastructure.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	AdditionalStorageCount *int `pulumi:"additionalStorageCount"`
	// (Updatable) The CIDR block for the Exadata administration network.
	AdminNetworkCidr string `pulumi:"adminNetworkCidr"`
	// (Updatable) The IP address for the first control plane server.
	CloudControlPlaneServer1 string `pulumi:"cloudControlPlaneServer1"`
	// (Updatable) The IP address for the second control plane server.
	CloudControlPlaneServer2 string `pulumi:"cloudControlPlaneServer2"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The number of compute servers for the Exadata infrastructure.
	ComputeCount *int `pulumi:"computeCount"`
	// (Updatable) The list of contacts for the Exadata infrastructure.
	Contacts []ExadataInfrastructureContact `pulumi:"contacts"`
	// (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
	CorporateProxy *string `pulumi:"corporateProxy"`
	CreateAsync    *bool   `pulumi:"createAsync"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
	DnsServers []string `pulumi:"dnsServers"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The gateway for the control plane network.
	Gateway string `pulumi:"gateway"`
	// (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
	InfiniBandNetworkCidr string `pulumi:"infiniBandNetworkCidr"`
	// (Updatable) Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
	IsCpsOfflineReportEnabled *bool `pulumi:"isCpsOfflineReportEnabled"`
	// (Updatable) Indicates if deployment is Multi-Rack or not.
	IsMultiRackDeployment *bool `pulumi:"isMultiRackDeployment"`
	// (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindow *ExadataInfrastructureMaintenanceWindow `pulumi:"maintenanceWindow"`
	// (Updatable) The base64 encoded Multi-Rack configuration json file.
	MultiRackConfigurationFile *string `pulumi:"multiRackConfigurationFile"`
	// (Updatable) The netmask for the control plane network.
	Netmask string `pulumi:"netmask"`
	// (Updatable) Details of bonding mode for Client and Backup and DR networks of an Exadata infrastructure.
	NetworkBondingModeDetails *ExadataInfrastructureNetworkBondingModeDetails `pulumi:"networkBondingModeDetails"`
	// (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
	NtpServers []string `pulumi:"ntpServers"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape string `pulumi:"shape"`
	// The number of storage servers for the Exadata infrastructure.
	StorageCount *int `pulumi:"storageCount"`
	// (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone string `pulumi:"timeZone"`
}

// The set of arguments for constructing a ExadataInfrastructure resource.
type ExadataInfrastructureArgs struct {
	// (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
	ActivationFile pulumi.StringPtrInput
	// The requested number of additional storage servers for the Exadata infrastructure.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	AdditionalStorageCount pulumi.IntPtrInput
	// (Updatable) The CIDR block for the Exadata administration network.
	AdminNetworkCidr pulumi.StringInput
	// (Updatable) The IP address for the first control plane server.
	CloudControlPlaneServer1 pulumi.StringInput
	// (Updatable) The IP address for the second control plane server.
	CloudControlPlaneServer2 pulumi.StringInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	// The number of compute servers for the Exadata infrastructure.
	ComputeCount pulumi.IntPtrInput
	// (Updatable) The list of contacts for the Exadata infrastructure.
	Contacts ExadataInfrastructureContactArrayInput
	// (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
	CorporateProxy pulumi.StringPtrInput
	CreateAsync    pulumi.BoolPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
	DisplayName pulumi.StringInput
	// (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
	DnsServers pulumi.StringArrayInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The gateway for the control plane network.
	Gateway pulumi.StringInput
	// (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
	InfiniBandNetworkCidr pulumi.StringInput
	// (Updatable) Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
	IsCpsOfflineReportEnabled pulumi.BoolPtrInput
	// (Updatable) Indicates if deployment is Multi-Rack or not.
	IsMultiRackDeployment pulumi.BoolPtrInput
	// (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindow ExadataInfrastructureMaintenanceWindowPtrInput
	// (Updatable) The base64 encoded Multi-Rack configuration json file.
	MultiRackConfigurationFile pulumi.StringPtrInput
	// (Updatable) The netmask for the control plane network.
	Netmask pulumi.StringInput
	// (Updatable) Details of bonding mode for Client and Backup and DR networks of an Exadata infrastructure.
	NetworkBondingModeDetails ExadataInfrastructureNetworkBondingModeDetailsPtrInput
	// (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
	NtpServers pulumi.StringArrayInput
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringInput
	// The number of storage servers for the Exadata infrastructure.
	StorageCount pulumi.IntPtrInput
	// (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringInput
}

func (ExadataInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*exadataInfrastructureArgs)(nil)).Elem()
}

type ExadataInfrastructureInput interface {
	pulumi.Input

	ToExadataInfrastructureOutput() ExadataInfrastructureOutput
	ToExadataInfrastructureOutputWithContext(ctx context.Context) ExadataInfrastructureOutput
}

func (*ExadataInfrastructure) ElementType() reflect.Type {
	return reflect.TypeOf((**ExadataInfrastructure)(nil)).Elem()
}

func (i *ExadataInfrastructure) ToExadataInfrastructureOutput() ExadataInfrastructureOutput {
	return i.ToExadataInfrastructureOutputWithContext(context.Background())
}

func (i *ExadataInfrastructure) ToExadataInfrastructureOutputWithContext(ctx context.Context) ExadataInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataInfrastructureOutput)
}

func (i *ExadataInfrastructure) ToOutput(ctx context.Context) pulumix.Output[*ExadataInfrastructure] {
	return pulumix.Output[*ExadataInfrastructure]{
		OutputState: i.ToExadataInfrastructureOutputWithContext(ctx).OutputState,
	}
}

// ExadataInfrastructureArrayInput is an input type that accepts ExadataInfrastructureArray and ExadataInfrastructureArrayOutput values.
// You can construct a concrete instance of `ExadataInfrastructureArrayInput` via:
//
//	ExadataInfrastructureArray{ ExadataInfrastructureArgs{...} }
type ExadataInfrastructureArrayInput interface {
	pulumi.Input

	ToExadataInfrastructureArrayOutput() ExadataInfrastructureArrayOutput
	ToExadataInfrastructureArrayOutputWithContext(context.Context) ExadataInfrastructureArrayOutput
}

type ExadataInfrastructureArray []ExadataInfrastructureInput

func (ExadataInfrastructureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExadataInfrastructure)(nil)).Elem()
}

func (i ExadataInfrastructureArray) ToExadataInfrastructureArrayOutput() ExadataInfrastructureArrayOutput {
	return i.ToExadataInfrastructureArrayOutputWithContext(context.Background())
}

func (i ExadataInfrastructureArray) ToExadataInfrastructureArrayOutputWithContext(ctx context.Context) ExadataInfrastructureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataInfrastructureArrayOutput)
}

func (i ExadataInfrastructureArray) ToOutput(ctx context.Context) pulumix.Output[[]*ExadataInfrastructure] {
	return pulumix.Output[[]*ExadataInfrastructure]{
		OutputState: i.ToExadataInfrastructureArrayOutputWithContext(ctx).OutputState,
	}
}

// ExadataInfrastructureMapInput is an input type that accepts ExadataInfrastructureMap and ExadataInfrastructureMapOutput values.
// You can construct a concrete instance of `ExadataInfrastructureMapInput` via:
//
//	ExadataInfrastructureMap{ "key": ExadataInfrastructureArgs{...} }
type ExadataInfrastructureMapInput interface {
	pulumi.Input

	ToExadataInfrastructureMapOutput() ExadataInfrastructureMapOutput
	ToExadataInfrastructureMapOutputWithContext(context.Context) ExadataInfrastructureMapOutput
}

type ExadataInfrastructureMap map[string]ExadataInfrastructureInput

func (ExadataInfrastructureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExadataInfrastructure)(nil)).Elem()
}

func (i ExadataInfrastructureMap) ToExadataInfrastructureMapOutput() ExadataInfrastructureMapOutput {
	return i.ToExadataInfrastructureMapOutputWithContext(context.Background())
}

func (i ExadataInfrastructureMap) ToExadataInfrastructureMapOutputWithContext(ctx context.Context) ExadataInfrastructureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataInfrastructureMapOutput)
}

func (i ExadataInfrastructureMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ExadataInfrastructure] {
	return pulumix.Output[map[string]*ExadataInfrastructure]{
		OutputState: i.ToExadataInfrastructureMapOutputWithContext(ctx).OutputState,
	}
}

type ExadataInfrastructureOutput struct{ *pulumi.OutputState }

func (ExadataInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExadataInfrastructure)(nil)).Elem()
}

func (o ExadataInfrastructureOutput) ToExadataInfrastructureOutput() ExadataInfrastructureOutput {
	return o
}

func (o ExadataInfrastructureOutput) ToExadataInfrastructureOutputWithContext(ctx context.Context) ExadataInfrastructureOutput {
	return o
}

func (o ExadataInfrastructureOutput) ToOutput(ctx context.Context) pulumix.Output[*ExadataInfrastructure] {
	return pulumix.Output[*ExadataInfrastructure]{
		OutputState: o.OutputState,
	}
}

// The requested number of additional storage servers activated for the Exadata infrastructure.
func (o ExadataInfrastructureOutput) ActivatedStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.IntOutput { return v.ActivatedStorageCount }).(pulumi.IntOutput)
}

// (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
func (o ExadataInfrastructureOutput) ActivationFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringPtrOutput { return v.ActivationFile }).(pulumi.StringPtrOutput)
}

// The requested number of additional compute servers for the Exadata infrastructure.
func (o ExadataInfrastructureOutput) AdditionalComputeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.IntOutput { return v.AdditionalComputeCount }).(pulumi.IntOutput)
}

// Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
func (o ExadataInfrastructureOutput) AdditionalComputeSystemModel() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.AdditionalComputeSystemModel }).(pulumi.StringOutput)
}

// The requested number of additional storage servers for the Exadata infrastructure.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ExadataInfrastructureOutput) AdditionalStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.IntOutput { return v.AdditionalStorageCount }).(pulumi.IntOutput)
}

// (Updatable) The CIDR block for the Exadata administration network.
func (o ExadataInfrastructureOutput) AdminNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.AdminNetworkCidr }).(pulumi.StringOutput)
}

// The name of the availability domain that the Exadata infrastructure is located in.
func (o ExadataInfrastructureOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// (Updatable) The IP address for the first control plane server.
func (o ExadataInfrastructureOutput) CloudControlPlaneServer1() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.CloudControlPlaneServer1 }).(pulumi.StringOutput)
}

// (Updatable) The IP address for the second control plane server.
func (o ExadataInfrastructureOutput) CloudControlPlaneServer2() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.CloudControlPlaneServer2 }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o ExadataInfrastructureOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The number of compute servers for the Exadata infrastructure.
func (o ExadataInfrastructureOutput) ComputeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.IntOutput { return v.ComputeCount }).(pulumi.IntOutput)
}

// (Updatable) The list of contacts for the Exadata infrastructure.
func (o ExadataInfrastructureOutput) Contacts() ExadataInfrastructureContactArrayOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) ExadataInfrastructureContactArrayOutput { return v.Contacts }).(ExadataInfrastructureContactArrayOutput)
}

// (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
func (o ExadataInfrastructureOutput) CorporateProxy() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.CorporateProxy }).(pulumi.StringOutput)
}

// The number of enabled CPU cores.
func (o ExadataInfrastructureOutput) CpusEnabled() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.IntOutput { return v.CpusEnabled }).(pulumi.IntOutput)
}

func (o ExadataInfrastructureOutput) CreateAsync() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.BoolPtrOutput { return v.CreateAsync }).(pulumi.BoolPtrOutput)
}

// The CSI Number of the Exadata infrastructure.
func (o ExadataInfrastructureOutput) CsiNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.CsiNumber }).(pulumi.StringOutput)
}

// Size, in terabytes, of the DATA disk group.
func (o ExadataInfrastructureOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.Float64Output { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The local node storage allocated in GBs.
func (o ExadataInfrastructureOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.IntOutput { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The software version of the database servers (dom0) in the Exadata infrastructure.
func (o ExadataInfrastructureOutput) DbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.DbServerVersion }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o ExadataInfrastructureOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
func (o ExadataInfrastructureOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
func (o ExadataInfrastructureOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringArrayOutput { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o ExadataInfrastructureOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) The gateway for the control plane network.
func (o ExadataInfrastructureOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.Gateway }).(pulumi.StringOutput)
}

// (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
func (o ExadataInfrastructureOutput) InfiniBandNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.InfiniBandNetworkCidr }).(pulumi.StringOutput)
}

// (Updatable) Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
func (o ExadataInfrastructureOutput) IsCpsOfflineReportEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.BoolOutput { return v.IsCpsOfflineReportEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Indicates if deployment is Multi-Rack or not.
func (o ExadataInfrastructureOutput) IsMultiRackDeployment() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.BoolOutput { return v.IsMultiRackDeployment }).(pulumi.BoolOutput)
}

// Additional information about the current lifecycle state.
func (o ExadataInfrastructureOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
func (o ExadataInfrastructureOutput) MaintenanceSloStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.MaintenanceSloStatus }).(pulumi.StringOutput)
}

// (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
func (o ExadataInfrastructureOutput) MaintenanceWindow() ExadataInfrastructureMaintenanceWindowOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) ExadataInfrastructureMaintenanceWindowOutput {
		return v.MaintenanceWindow
	}).(ExadataInfrastructureMaintenanceWindowOutput)
}

// The total number of CPU cores available.
func (o ExadataInfrastructureOutput) MaxCpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.IntOutput { return v.MaxCpuCount }).(pulumi.IntOutput)
}

// The total available DATA disk group size.
func (o ExadataInfrastructureOutput) MaxDataStorageInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.Float64Output { return v.MaxDataStorageInTbs }).(pulumi.Float64Output)
}

// The total local node storage available in GBs.
func (o ExadataInfrastructureOutput) MaxDbNodeStorageInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.IntOutput { return v.MaxDbNodeStorageInGbs }).(pulumi.IntOutput)
}

// The total memory available in GBs.
func (o ExadataInfrastructureOutput) MaxMemoryInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.IntOutput { return v.MaxMemoryInGbs }).(pulumi.IntOutput)
}

// The memory allocated in GBs.
func (o ExadataInfrastructureOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.IntOutput { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// The monthly software version of the database servers (dom0) in the Exadata infrastructure.
func (o ExadataInfrastructureOutput) MonthlyDbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.MonthlyDbServerVersion }).(pulumi.StringOutput)
}

// (Updatable) The base64 encoded Multi-Rack configuration json file.
func (o ExadataInfrastructureOutput) MultiRackConfigurationFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringPtrOutput { return v.MultiRackConfigurationFile }).(pulumi.StringPtrOutput)
}

// (Updatable) The netmask for the control plane network.
func (o ExadataInfrastructureOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.Netmask }).(pulumi.StringOutput)
}

// (Updatable) Details of bonding mode for Client and Backup and DR networks of an Exadata infrastructure.
func (o ExadataInfrastructureOutput) NetworkBondingModeDetails() ExadataInfrastructureNetworkBondingModeDetailsOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) ExadataInfrastructureNetworkBondingModeDetailsOutput {
		return v.NetworkBondingModeDetails
	}).(ExadataInfrastructureNetworkBondingModeDetailsOutput)
}

// (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
func (o ExadataInfrastructureOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringArrayOutput { return v.NtpServers }).(pulumi.StringArrayOutput)
}

// The serial number for the Exadata infrastructure.
func (o ExadataInfrastructureOutput) RackSerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.RackSerialNumber }).(pulumi.StringOutput)
}

// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
func (o ExadataInfrastructureOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.Shape }).(pulumi.StringOutput)
}

// The current lifecycle state of the Exadata infrastructure.
func (o ExadataInfrastructureOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The number of storage servers for the Exadata infrastructure.
func (o ExadataInfrastructureOutput) StorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.IntOutput { return v.StorageCount }).(pulumi.IntOutput)
}

// The software version of the storage servers (cells) in the Exadata infrastructure.
func (o ExadataInfrastructureOutput) StorageServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.StorageServerVersion }).(pulumi.StringOutput)
}

// The date and time the Exadata infrastructure was created.
func (o ExadataInfrastructureOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
func (o ExadataInfrastructureOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructure) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

type ExadataInfrastructureArrayOutput struct{ *pulumi.OutputState }

func (ExadataInfrastructureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExadataInfrastructure)(nil)).Elem()
}

func (o ExadataInfrastructureArrayOutput) ToExadataInfrastructureArrayOutput() ExadataInfrastructureArrayOutput {
	return o
}

func (o ExadataInfrastructureArrayOutput) ToExadataInfrastructureArrayOutputWithContext(ctx context.Context) ExadataInfrastructureArrayOutput {
	return o
}

func (o ExadataInfrastructureArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ExadataInfrastructure] {
	return pulumix.Output[[]*ExadataInfrastructure]{
		OutputState: o.OutputState,
	}
}

func (o ExadataInfrastructureArrayOutput) Index(i pulumi.IntInput) ExadataInfrastructureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExadataInfrastructure {
		return vs[0].([]*ExadataInfrastructure)[vs[1].(int)]
	}).(ExadataInfrastructureOutput)
}

type ExadataInfrastructureMapOutput struct{ *pulumi.OutputState }

func (ExadataInfrastructureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExadataInfrastructure)(nil)).Elem()
}

func (o ExadataInfrastructureMapOutput) ToExadataInfrastructureMapOutput() ExadataInfrastructureMapOutput {
	return o
}

func (o ExadataInfrastructureMapOutput) ToExadataInfrastructureMapOutputWithContext(ctx context.Context) ExadataInfrastructureMapOutput {
	return o
}

func (o ExadataInfrastructureMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ExadataInfrastructure] {
	return pulumix.Output[map[string]*ExadataInfrastructure]{
		OutputState: o.OutputState,
	}
}

func (o ExadataInfrastructureMapOutput) MapIndex(k pulumi.StringInput) ExadataInfrastructureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExadataInfrastructure {
		return vs[0].(map[string]*ExadataInfrastructure)[vs[1].(string)]
	}).(ExadataInfrastructureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataInfrastructureInput)(nil)).Elem(), &ExadataInfrastructure{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataInfrastructureArrayInput)(nil)).Elem(), ExadataInfrastructureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataInfrastructureMapInput)(nil)).Elem(), ExadataInfrastructureMap{})
	pulumi.RegisterOutputType(ExadataInfrastructureOutput{})
	pulumi.RegisterOutputType(ExadataInfrastructureArrayOutput{})
	pulumi.RegisterOutputType(ExadataInfrastructureMapOutput{})
}
