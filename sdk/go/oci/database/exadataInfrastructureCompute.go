// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Exadata Infrastructure compute managed resource in Oracle Cloud Infrastructure Database service.
//
// Gets information about the specified Exadata infrastructure. Applies to Exadata Cloud@Customer instances only.
// To get information on an Exadata Cloud Service infrastructure resource, use the  [GetCloudExadataInfrastructure](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudExadataInfrastructure/GetCloudExadataInfrastructure) operation.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetExadataInfrastructure(ctx, &database.GetExadataInfrastructureArgs{
//				ExadataInfrastructureId: testExadataInfrastructureOciDatabaseExadataInfrastructure.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
type ExadataInfrastructureCompute struct {
	pulumi.CustomResourceState

	// The requested number of additional storage servers activated for the Exadata infrastructure.
	ActivatedStorageCount pulumi.IntOutput       `pulumi:"activatedStorageCount"`
	ActivationFile        pulumi.StringPtrOutput `pulumi:"activationFile"`
	// The number of additional compute servers for the Exadata infrastructure.
	AdditionalComputeCount                       pulumi.IntOutput    `pulumi:"additionalComputeCount"`
	AdditionalComputeCountComputeManagedResource pulumi.IntPtrOutput `pulumi:"additionalComputeCountComputeManagedResource"`
	// Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
	AdditionalComputeSystemModel                       pulumi.StringOutput    `pulumi:"additionalComputeSystemModel"`
	AdditionalComputeSystemModelComputeManagedResource pulumi.StringPtrOutput `pulumi:"additionalComputeSystemModelComputeManagedResource"`
	// The requested number of additional storage servers for the Exadata infrastructure.
	AdditionalStorageCount pulumi.IntOutput `pulumi:"additionalStorageCount"`
	// The CIDR block for the Exadata administration network.
	AdminNetworkCidr pulumi.StringOutput `pulumi:"adminNetworkCidr"`
	// The IP address for the first control plane server.
	CloudControlPlaneServer1 pulumi.StringOutput `pulumi:"cloudControlPlaneServer1"`
	// The IP address for the second control plane server.
	CloudControlPlaneServer2 pulumi.StringOutput `pulumi:"cloudControlPlaneServer2"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The number of compute servers for the Exadata infrastructure.
	ComputeCount pulumi.IntOutput `pulumi:"computeCount"`
	// The list of contacts for the Exadata infrastructure.
	Contacts ExadataInfrastructureComputeContactArrayOutput `pulumi:"contacts"`
	// The corporate network proxy for access to the control plane network.
	CorporateProxy pulumi.StringOutput `pulumi:"corporateProxy"`
	// The number of enabled CPU cores.
	CpusEnabled pulumi.IntOutput  `pulumi:"cpusEnabled"`
	CreateAsync pulumi.BoolOutput `pulumi:"createAsync"`
	// The CSI Number of the Exadata infrastructure.
	CsiNumber pulumi.StringOutput `pulumi:"csiNumber"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs pulumi.Float64Output `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"dbNodeStorageSizeInGbs"`
	// The software version of the database servers (dom0) in the Exadata infrastructure.
	DbServerVersion pulumi.StringOutput `pulumi:"dbServerVersion"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The user-friendly name for the Exadata Cloud@Customer infrastructure. The name does not need to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The list of DNS server IP addresses. Maximum of 3 allowed.
	DnsServers pulumi.StringArrayOutput `pulumi:"dnsServers"`
	// The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExadataInfrastructureId pulumi.StringOutput `pulumi:"exadataInfrastructureId"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The gateway for the control plane network.
	Gateway pulumi.StringOutput `pulumi:"gateway"`
	// The CIDR block for the Exadata InfiniBand interconnect.
	InfiniBandNetworkCidr pulumi.StringOutput `pulumi:"infiniBandNetworkCidr"`
	// Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
	IsCpsOfflineReportEnabled pulumi.BoolOutput `pulumi:"isCpsOfflineReportEnabled"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
	MaintenanceSloStatus pulumi.StringOutput `pulumi:"maintenanceSloStatus"`
	// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindows ExadataInfrastructureComputeMaintenanceWindowArrayOutput `pulumi:"maintenanceWindows"`
	// The total number of CPU cores available.
	MaxCpuCount pulumi.IntOutput `pulumi:"maxCpuCount"`
	// The total available DATA disk group size.
	MaxDataStorageInTbs pulumi.Float64Output `pulumi:"maxDataStorageInTbs"`
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs pulumi.IntOutput `pulumi:"maxDbNodeStorageInGbs"`
	// The total memory available in GBs.
	MaxMemoryInGbs pulumi.IntOutput `pulumi:"maxMemoryInGbs"`
	// The memory allocated in GBs.
	MemorySizeInGbs pulumi.IntOutput `pulumi:"memorySizeInGbs"`
	// The monthly software version of the database servers (dom0) in the Exadata infrastructure.
	MonthlyDbServerVersion pulumi.StringOutput `pulumi:"monthlyDbServerVersion"`
	// The netmask for the control plane network.
	Netmask pulumi.StringOutput `pulumi:"netmask"`
	// The list of NTP server IP addresses. Maximum of 3 allowed.
	NtpServers pulumi.StringArrayOutput `pulumi:"ntpServers"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringOutput `pulumi:"shape"`
	// The current lifecycle state of the Exadata infrastructure.
	State pulumi.StringOutput `pulumi:"state"`
	// The number of Exadata storage servers for the Exadata infrastructure.
	StorageCount pulumi.IntOutput `pulumi:"storageCount"`
	// The software version of the storage servers (cells) in the Exadata infrastructure.
	StorageServerVersion pulumi.StringOutput `pulumi:"storageServerVersion"`
	// The date and time the Exadata infrastructure was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
}

// NewExadataInfrastructureCompute registers a new resource with the given unique name, arguments, and options.
func NewExadataInfrastructureCompute(ctx *pulumi.Context,
	name string, args *ExadataInfrastructureComputeArgs, opts ...pulumi.ResourceOption) (*ExadataInfrastructureCompute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExadataInfrastructureId == nil {
		return nil, errors.New("invalid value for required argument 'ExadataInfrastructureId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExadataInfrastructureCompute
	err := ctx.RegisterResource("oci:Database/exadataInfrastructureCompute:ExadataInfrastructureCompute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExadataInfrastructureCompute gets an existing ExadataInfrastructureCompute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExadataInfrastructureCompute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExadataInfrastructureComputeState, opts ...pulumi.ResourceOption) (*ExadataInfrastructureCompute, error) {
	var resource ExadataInfrastructureCompute
	err := ctx.ReadResource("oci:Database/exadataInfrastructureCompute:ExadataInfrastructureCompute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExadataInfrastructureCompute resources.
type exadataInfrastructureComputeState struct {
	// The requested number of additional storage servers activated for the Exadata infrastructure.
	ActivatedStorageCount *int    `pulumi:"activatedStorageCount"`
	ActivationFile        *string `pulumi:"activationFile"`
	// The number of additional compute servers for the Exadata infrastructure.
	AdditionalComputeCount                       *int `pulumi:"additionalComputeCount"`
	AdditionalComputeCountComputeManagedResource *int `pulumi:"additionalComputeCountComputeManagedResource"`
	// Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
	AdditionalComputeSystemModel                       *string `pulumi:"additionalComputeSystemModel"`
	AdditionalComputeSystemModelComputeManagedResource *string `pulumi:"additionalComputeSystemModelComputeManagedResource"`
	// The requested number of additional storage servers for the Exadata infrastructure.
	AdditionalStorageCount *int `pulumi:"additionalStorageCount"`
	// The CIDR block for the Exadata administration network.
	AdminNetworkCidr *string `pulumi:"adminNetworkCidr"`
	// The IP address for the first control plane server.
	CloudControlPlaneServer1 *string `pulumi:"cloudControlPlaneServer1"`
	// The IP address for the second control plane server.
	CloudControlPlaneServer2 *string `pulumi:"cloudControlPlaneServer2"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The number of compute servers for the Exadata infrastructure.
	ComputeCount *int `pulumi:"computeCount"`
	// The list of contacts for the Exadata infrastructure.
	Contacts []ExadataInfrastructureComputeContact `pulumi:"contacts"`
	// The corporate network proxy for access to the control plane network.
	CorporateProxy *string `pulumi:"corporateProxy"`
	// The number of enabled CPU cores.
	CpusEnabled *int  `pulumi:"cpusEnabled"`
	CreateAsync *bool `pulumi:"createAsync"`
	// The CSI Number of the Exadata infrastructure.
	CsiNumber *string `pulumi:"csiNumber"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs *float64 `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs *int `pulumi:"dbNodeStorageSizeInGbs"`
	// The software version of the database servers (dom0) in the Exadata infrastructure.
	DbServerVersion *string `pulumi:"dbServerVersion"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-friendly name for the Exadata Cloud@Customer infrastructure. The name does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The list of DNS server IP addresses. Maximum of 3 allowed.
	DnsServers []string `pulumi:"dnsServers"`
	// The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExadataInfrastructureId *string `pulumi:"exadataInfrastructureId"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The gateway for the control plane network.
	Gateway *string `pulumi:"gateway"`
	// The CIDR block for the Exadata InfiniBand interconnect.
	InfiniBandNetworkCidr *string `pulumi:"infiniBandNetworkCidr"`
	// Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
	IsCpsOfflineReportEnabled *bool `pulumi:"isCpsOfflineReportEnabled"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
	MaintenanceSloStatus *string `pulumi:"maintenanceSloStatus"`
	// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindows []ExadataInfrastructureComputeMaintenanceWindow `pulumi:"maintenanceWindows"`
	// The total number of CPU cores available.
	MaxCpuCount *int `pulumi:"maxCpuCount"`
	// The total available DATA disk group size.
	MaxDataStorageInTbs *float64 `pulumi:"maxDataStorageInTbs"`
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs *int `pulumi:"maxDbNodeStorageInGbs"`
	// The total memory available in GBs.
	MaxMemoryInGbs *int `pulumi:"maxMemoryInGbs"`
	// The memory allocated in GBs.
	MemorySizeInGbs *int `pulumi:"memorySizeInGbs"`
	// The monthly software version of the database servers (dom0) in the Exadata infrastructure.
	MonthlyDbServerVersion *string `pulumi:"monthlyDbServerVersion"`
	// The netmask for the control plane network.
	Netmask *string `pulumi:"netmask"`
	// The list of NTP server IP addresses. Maximum of 3 allowed.
	NtpServers []string `pulumi:"ntpServers"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape *string `pulumi:"shape"`
	// The current lifecycle state of the Exadata infrastructure.
	State *string `pulumi:"state"`
	// The number of Exadata storage servers for the Exadata infrastructure.
	StorageCount *int `pulumi:"storageCount"`
	// The software version of the storage servers (cells) in the Exadata infrastructure.
	StorageServerVersion *string `pulumi:"storageServerVersion"`
	// The date and time the Exadata infrastructure was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone *string `pulumi:"timeZone"`
}

type ExadataInfrastructureComputeState struct {
	// The requested number of additional storage servers activated for the Exadata infrastructure.
	ActivatedStorageCount pulumi.IntPtrInput
	ActivationFile        pulumi.StringPtrInput
	// The number of additional compute servers for the Exadata infrastructure.
	AdditionalComputeCount                       pulumi.IntPtrInput
	AdditionalComputeCountComputeManagedResource pulumi.IntPtrInput
	// Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
	AdditionalComputeSystemModel                       pulumi.StringPtrInput
	AdditionalComputeSystemModelComputeManagedResource pulumi.StringPtrInput
	// The requested number of additional storage servers for the Exadata infrastructure.
	AdditionalStorageCount pulumi.IntPtrInput
	// The CIDR block for the Exadata administration network.
	AdminNetworkCidr pulumi.StringPtrInput
	// The IP address for the first control plane server.
	CloudControlPlaneServer1 pulumi.StringPtrInput
	// The IP address for the second control plane server.
	CloudControlPlaneServer2 pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The number of compute servers for the Exadata infrastructure.
	ComputeCount pulumi.IntPtrInput
	// The list of contacts for the Exadata infrastructure.
	Contacts ExadataInfrastructureComputeContactArrayInput
	// The corporate network proxy for access to the control plane network.
	CorporateProxy pulumi.StringPtrInput
	// The number of enabled CPU cores.
	CpusEnabled pulumi.IntPtrInput
	CreateAsync pulumi.BoolPtrInput
	// The CSI Number of the Exadata infrastructure.
	CsiNumber pulumi.StringPtrInput
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs pulumi.Float64PtrInput
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntPtrInput
	// The software version of the database servers (dom0) in the Exadata infrastructure.
	DbServerVersion pulumi.StringPtrInput
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// The user-friendly name for the Exadata Cloud@Customer infrastructure. The name does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// The list of DNS server IP addresses. Maximum of 3 allowed.
	DnsServers pulumi.StringArrayInput
	// The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExadataInfrastructureId pulumi.StringPtrInput
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The gateway for the control plane network.
	Gateway pulumi.StringPtrInput
	// The CIDR block for the Exadata InfiniBand interconnect.
	InfiniBandNetworkCidr pulumi.StringPtrInput
	// Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
	IsCpsOfflineReportEnabled pulumi.BoolPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
	MaintenanceSloStatus pulumi.StringPtrInput
	// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindows ExadataInfrastructureComputeMaintenanceWindowArrayInput
	// The total number of CPU cores available.
	MaxCpuCount pulumi.IntPtrInput
	// The total available DATA disk group size.
	MaxDataStorageInTbs pulumi.Float64PtrInput
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs pulumi.IntPtrInput
	// The total memory available in GBs.
	MaxMemoryInGbs pulumi.IntPtrInput
	// The memory allocated in GBs.
	MemorySizeInGbs pulumi.IntPtrInput
	// The monthly software version of the database servers (dom0) in the Exadata infrastructure.
	MonthlyDbServerVersion pulumi.StringPtrInput
	// The netmask for the control plane network.
	Netmask pulumi.StringPtrInput
	// The list of NTP server IP addresses. Maximum of 3 allowed.
	NtpServers pulumi.StringArrayInput
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringPtrInput
	// The current lifecycle state of the Exadata infrastructure.
	State pulumi.StringPtrInput
	// The number of Exadata storage servers for the Exadata infrastructure.
	StorageCount pulumi.IntPtrInput
	// The software version of the storage servers (cells) in the Exadata infrastructure.
	StorageServerVersion pulumi.StringPtrInput
	// The date and time the Exadata infrastructure was created.
	TimeCreated pulumi.StringPtrInput
	// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringPtrInput
}

func (ExadataInfrastructureComputeState) ElementType() reflect.Type {
	return reflect.TypeOf((*exadataInfrastructureComputeState)(nil)).Elem()
}

type exadataInfrastructureComputeArgs struct {
	ActivationFile                                     *string `pulumi:"activationFile"`
	AdditionalComputeCountComputeManagedResource       *int    `pulumi:"additionalComputeCountComputeManagedResource"`
	AdditionalComputeSystemModelComputeManagedResource *string `pulumi:"additionalComputeSystemModelComputeManagedResource"`
	// The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExadataInfrastructureId string `pulumi:"exadataInfrastructureId"`
}

// The set of arguments for constructing a ExadataInfrastructureCompute resource.
type ExadataInfrastructureComputeArgs struct {
	ActivationFile                                     pulumi.StringPtrInput
	AdditionalComputeCountComputeManagedResource       pulumi.IntPtrInput
	AdditionalComputeSystemModelComputeManagedResource pulumi.StringPtrInput
	// The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExadataInfrastructureId pulumi.StringInput
}

func (ExadataInfrastructureComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*exadataInfrastructureComputeArgs)(nil)).Elem()
}

type ExadataInfrastructureComputeInput interface {
	pulumi.Input

	ToExadataInfrastructureComputeOutput() ExadataInfrastructureComputeOutput
	ToExadataInfrastructureComputeOutputWithContext(ctx context.Context) ExadataInfrastructureComputeOutput
}

func (*ExadataInfrastructureCompute) ElementType() reflect.Type {
	return reflect.TypeOf((**ExadataInfrastructureCompute)(nil)).Elem()
}

func (i *ExadataInfrastructureCompute) ToExadataInfrastructureComputeOutput() ExadataInfrastructureComputeOutput {
	return i.ToExadataInfrastructureComputeOutputWithContext(context.Background())
}

func (i *ExadataInfrastructureCompute) ToExadataInfrastructureComputeOutputWithContext(ctx context.Context) ExadataInfrastructureComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataInfrastructureComputeOutput)
}

// ExadataInfrastructureComputeArrayInput is an input type that accepts ExadataInfrastructureComputeArray and ExadataInfrastructureComputeArrayOutput values.
// You can construct a concrete instance of `ExadataInfrastructureComputeArrayInput` via:
//
//	ExadataInfrastructureComputeArray{ ExadataInfrastructureComputeArgs{...} }
type ExadataInfrastructureComputeArrayInput interface {
	pulumi.Input

	ToExadataInfrastructureComputeArrayOutput() ExadataInfrastructureComputeArrayOutput
	ToExadataInfrastructureComputeArrayOutputWithContext(context.Context) ExadataInfrastructureComputeArrayOutput
}

type ExadataInfrastructureComputeArray []ExadataInfrastructureComputeInput

func (ExadataInfrastructureComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExadataInfrastructureCompute)(nil)).Elem()
}

func (i ExadataInfrastructureComputeArray) ToExadataInfrastructureComputeArrayOutput() ExadataInfrastructureComputeArrayOutput {
	return i.ToExadataInfrastructureComputeArrayOutputWithContext(context.Background())
}

func (i ExadataInfrastructureComputeArray) ToExadataInfrastructureComputeArrayOutputWithContext(ctx context.Context) ExadataInfrastructureComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataInfrastructureComputeArrayOutput)
}

// ExadataInfrastructureComputeMapInput is an input type that accepts ExadataInfrastructureComputeMap and ExadataInfrastructureComputeMapOutput values.
// You can construct a concrete instance of `ExadataInfrastructureComputeMapInput` via:
//
//	ExadataInfrastructureComputeMap{ "key": ExadataInfrastructureComputeArgs{...} }
type ExadataInfrastructureComputeMapInput interface {
	pulumi.Input

	ToExadataInfrastructureComputeMapOutput() ExadataInfrastructureComputeMapOutput
	ToExadataInfrastructureComputeMapOutputWithContext(context.Context) ExadataInfrastructureComputeMapOutput
}

type ExadataInfrastructureComputeMap map[string]ExadataInfrastructureComputeInput

func (ExadataInfrastructureComputeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExadataInfrastructureCompute)(nil)).Elem()
}

func (i ExadataInfrastructureComputeMap) ToExadataInfrastructureComputeMapOutput() ExadataInfrastructureComputeMapOutput {
	return i.ToExadataInfrastructureComputeMapOutputWithContext(context.Background())
}

func (i ExadataInfrastructureComputeMap) ToExadataInfrastructureComputeMapOutputWithContext(ctx context.Context) ExadataInfrastructureComputeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataInfrastructureComputeMapOutput)
}

type ExadataInfrastructureComputeOutput struct{ *pulumi.OutputState }

func (ExadataInfrastructureComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExadataInfrastructureCompute)(nil)).Elem()
}

func (o ExadataInfrastructureComputeOutput) ToExadataInfrastructureComputeOutput() ExadataInfrastructureComputeOutput {
	return o
}

func (o ExadataInfrastructureComputeOutput) ToExadataInfrastructureComputeOutputWithContext(ctx context.Context) ExadataInfrastructureComputeOutput {
	return o
}

// The requested number of additional storage servers activated for the Exadata infrastructure.
func (o ExadataInfrastructureComputeOutput) ActivatedStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntOutput { return v.ActivatedStorageCount }).(pulumi.IntOutput)
}

func (o ExadataInfrastructureComputeOutput) ActivationFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringPtrOutput { return v.ActivationFile }).(pulumi.StringPtrOutput)
}

// The number of additional compute servers for the Exadata infrastructure.
func (o ExadataInfrastructureComputeOutput) AdditionalComputeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntOutput { return v.AdditionalComputeCount }).(pulumi.IntOutput)
}

func (o ExadataInfrastructureComputeOutput) AdditionalComputeCountComputeManagedResource() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntPtrOutput {
		return v.AdditionalComputeCountComputeManagedResource
	}).(pulumi.IntPtrOutput)
}

// Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
func (o ExadataInfrastructureComputeOutput) AdditionalComputeSystemModel() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.AdditionalComputeSystemModel }).(pulumi.StringOutput)
}

func (o ExadataInfrastructureComputeOutput) AdditionalComputeSystemModelComputeManagedResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringPtrOutput {
		return v.AdditionalComputeSystemModelComputeManagedResource
	}).(pulumi.StringPtrOutput)
}

// The requested number of additional storage servers for the Exadata infrastructure.
func (o ExadataInfrastructureComputeOutput) AdditionalStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntOutput { return v.AdditionalStorageCount }).(pulumi.IntOutput)
}

// The CIDR block for the Exadata administration network.
func (o ExadataInfrastructureComputeOutput) AdminNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.AdminNetworkCidr }).(pulumi.StringOutput)
}

// The IP address for the first control plane server.
func (o ExadataInfrastructureComputeOutput) CloudControlPlaneServer1() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.CloudControlPlaneServer1 }).(pulumi.StringOutput)
}

// The IP address for the second control plane server.
func (o ExadataInfrastructureComputeOutput) CloudControlPlaneServer2() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.CloudControlPlaneServer2 }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o ExadataInfrastructureComputeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The number of compute servers for the Exadata infrastructure.
func (o ExadataInfrastructureComputeOutput) ComputeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntOutput { return v.ComputeCount }).(pulumi.IntOutput)
}

// The list of contacts for the Exadata infrastructure.
func (o ExadataInfrastructureComputeOutput) Contacts() ExadataInfrastructureComputeContactArrayOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) ExadataInfrastructureComputeContactArrayOutput {
		return v.Contacts
	}).(ExadataInfrastructureComputeContactArrayOutput)
}

// The corporate network proxy for access to the control plane network.
func (o ExadataInfrastructureComputeOutput) CorporateProxy() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.CorporateProxy }).(pulumi.StringOutput)
}

// The number of enabled CPU cores.
func (o ExadataInfrastructureComputeOutput) CpusEnabled() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntOutput { return v.CpusEnabled }).(pulumi.IntOutput)
}

func (o ExadataInfrastructureComputeOutput) CreateAsync() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.BoolOutput { return v.CreateAsync }).(pulumi.BoolOutput)
}

// The CSI Number of the Exadata infrastructure.
func (o ExadataInfrastructureComputeOutput) CsiNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.CsiNumber }).(pulumi.StringOutput)
}

// Size, in terabytes, of the DATA disk group.
func (o ExadataInfrastructureComputeOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.Float64Output { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The local node storage allocated in GBs.
func (o ExadataInfrastructureComputeOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntOutput { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The software version of the database servers (dom0) in the Exadata infrastructure.
func (o ExadataInfrastructureComputeOutput) DbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.DbServerVersion }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o ExadataInfrastructureComputeOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// The user-friendly name for the Exadata Cloud@Customer infrastructure. The name does not need to be unique.
func (o ExadataInfrastructureComputeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The list of DNS server IP addresses. Maximum of 3 allowed.
func (o ExadataInfrastructureComputeOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringArrayOutput { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o ExadataInfrastructureComputeOutput) ExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.ExadataInfrastructureId }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o ExadataInfrastructureComputeOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The gateway for the control plane network.
func (o ExadataInfrastructureComputeOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.Gateway }).(pulumi.StringOutput)
}

// The CIDR block for the Exadata InfiniBand interconnect.
func (o ExadataInfrastructureComputeOutput) InfiniBandNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.InfiniBandNetworkCidr }).(pulumi.StringOutput)
}

// Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
func (o ExadataInfrastructureComputeOutput) IsCpsOfflineReportEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.BoolOutput { return v.IsCpsOfflineReportEnabled }).(pulumi.BoolOutput)
}

// Additional information about the current lifecycle state.
func (o ExadataInfrastructureComputeOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
func (o ExadataInfrastructureComputeOutput) MaintenanceSloStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.MaintenanceSloStatus }).(pulumi.StringOutput)
}

// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
func (o ExadataInfrastructureComputeOutput) MaintenanceWindows() ExadataInfrastructureComputeMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) ExadataInfrastructureComputeMaintenanceWindowArrayOutput {
		return v.MaintenanceWindows
	}).(ExadataInfrastructureComputeMaintenanceWindowArrayOutput)
}

// The total number of CPU cores available.
func (o ExadataInfrastructureComputeOutput) MaxCpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntOutput { return v.MaxCpuCount }).(pulumi.IntOutput)
}

// The total available DATA disk group size.
func (o ExadataInfrastructureComputeOutput) MaxDataStorageInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.Float64Output { return v.MaxDataStorageInTbs }).(pulumi.Float64Output)
}

// The total local node storage available in GBs.
func (o ExadataInfrastructureComputeOutput) MaxDbNodeStorageInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntOutput { return v.MaxDbNodeStorageInGbs }).(pulumi.IntOutput)
}

// The total memory available in GBs.
func (o ExadataInfrastructureComputeOutput) MaxMemoryInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntOutput { return v.MaxMemoryInGbs }).(pulumi.IntOutput)
}

// The memory allocated in GBs.
func (o ExadataInfrastructureComputeOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntOutput { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// The monthly software version of the database servers (dom0) in the Exadata infrastructure.
func (o ExadataInfrastructureComputeOutput) MonthlyDbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.MonthlyDbServerVersion }).(pulumi.StringOutput)
}

// The netmask for the control plane network.
func (o ExadataInfrastructureComputeOutput) Netmask() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.Netmask }).(pulumi.StringOutput)
}

// The list of NTP server IP addresses. Maximum of 3 allowed.
func (o ExadataInfrastructureComputeOutput) NtpServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringArrayOutput { return v.NtpServers }).(pulumi.StringArrayOutput)
}

// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
func (o ExadataInfrastructureComputeOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.Shape }).(pulumi.StringOutput)
}

// The current lifecycle state of the Exadata infrastructure.
func (o ExadataInfrastructureComputeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The number of Exadata storage servers for the Exadata infrastructure.
func (o ExadataInfrastructureComputeOutput) StorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.IntOutput { return v.StorageCount }).(pulumi.IntOutput)
}

// The software version of the storage servers (cells) in the Exadata infrastructure.
func (o ExadataInfrastructureComputeOutput) StorageServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.StorageServerVersion }).(pulumi.StringOutput)
}

// The date and time the Exadata infrastructure was created.
func (o ExadataInfrastructureComputeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
func (o ExadataInfrastructureComputeOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataInfrastructureCompute) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

type ExadataInfrastructureComputeArrayOutput struct{ *pulumi.OutputState }

func (ExadataInfrastructureComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExadataInfrastructureCompute)(nil)).Elem()
}

func (o ExadataInfrastructureComputeArrayOutput) ToExadataInfrastructureComputeArrayOutput() ExadataInfrastructureComputeArrayOutput {
	return o
}

func (o ExadataInfrastructureComputeArrayOutput) ToExadataInfrastructureComputeArrayOutputWithContext(ctx context.Context) ExadataInfrastructureComputeArrayOutput {
	return o
}

func (o ExadataInfrastructureComputeArrayOutput) Index(i pulumi.IntInput) ExadataInfrastructureComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExadataInfrastructureCompute {
		return vs[0].([]*ExadataInfrastructureCompute)[vs[1].(int)]
	}).(ExadataInfrastructureComputeOutput)
}

type ExadataInfrastructureComputeMapOutput struct{ *pulumi.OutputState }

func (ExadataInfrastructureComputeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExadataInfrastructureCompute)(nil)).Elem()
}

func (o ExadataInfrastructureComputeMapOutput) ToExadataInfrastructureComputeMapOutput() ExadataInfrastructureComputeMapOutput {
	return o
}

func (o ExadataInfrastructureComputeMapOutput) ToExadataInfrastructureComputeMapOutputWithContext(ctx context.Context) ExadataInfrastructureComputeMapOutput {
	return o
}

func (o ExadataInfrastructureComputeMapOutput) MapIndex(k pulumi.StringInput) ExadataInfrastructureComputeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExadataInfrastructureCompute {
		return vs[0].(map[string]*ExadataInfrastructureCompute)[vs[1].(string)]
	}).(ExadataInfrastructureComputeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataInfrastructureComputeInput)(nil)).Elem(), &ExadataInfrastructureCompute{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataInfrastructureComputeArrayInput)(nil)).Elem(), ExadataInfrastructureComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataInfrastructureComputeMapInput)(nil)).Elem(), ExadataInfrastructureComputeMap{})
	pulumi.RegisterOutputType(ExadataInfrastructureComputeOutput{})
	pulumi.RegisterOutputType(ExadataInfrastructureComputeArrayOutput{})
	pulumi.RegisterOutputType(ExadataInfrastructureComputeMapOutput{})
}
