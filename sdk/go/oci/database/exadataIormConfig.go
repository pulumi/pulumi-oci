// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource provides the Exadata Iorm Config resource in Oracle Cloud Infrastructure Database service.
//
// Updates IORM settings for the specified Exadata DB system.
//
// **Note:** Deprecated for Exadata Cloud Service systems. Use the [new resource model APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem.htm#exaflexsystem_topic-resource_model) instead.
//
// For Exadata Cloud Service instances, support for this API will end on May 15th, 2021. See [Switching an Exadata DB System to the New Resource Model and APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem_topic-resource_model_conversion.htm) for details on converting existing Exadata DB systems to the new resource model.
//
// The [UpdateCloudVmClusterIormConfig](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/UpdateCloudVmClusterIormConfig/) API is used for Exadata systems using the
// new resource model.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.NewExadataIormConfig(ctx, "testExadataIormConfig", &Database.ExadataIormConfigArgs{
//				DbPlans: database.ExadataIormConfigDbPlanArray{
//					&database.ExadataIormConfigDbPlanArgs{
//						DbName: pulumi.Any(_var.Exadata_iorm_config_db_plans_db_name),
//						Share:  pulumi.Any(_var.Exadata_iorm_config_db_plans_share),
//					},
//				},
//				DbSystemId: pulumi.Any(oci_database_db_system.Test_db_system.Id),
//				Objective:  pulumi.String("AUTO"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type ExadataIormConfig struct {
	pulumi.CustomResourceState

	// (Updatable) Array of IORM Setting for all the database in this Exadata DB System
	DbPlans ExadataIormConfigDbPlanArrayOutput `pulumi:"dbPlans"`
	// (Updatable) The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringOutput `pulumi:"dbSystemId"`
	// Additional information about the current `lifecycleState`.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) Value for the IORM objective Default is "Auto"
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Objective pulumi.StringOutput `pulumi:"objective"`
	// The current state of IORM configuration for the Exadata DB system.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewExadataIormConfig registers a new resource with the given unique name, arguments, and options.
func NewExadataIormConfig(ctx *pulumi.Context,
	name string, args *ExadataIormConfigArgs, opts ...pulumi.ResourceOption) (*ExadataIormConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbPlans == nil {
		return nil, errors.New("invalid value for required argument 'DbPlans'")
	}
	if args.DbSystemId == nil {
		return nil, errors.New("invalid value for required argument 'DbSystemId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExadataIormConfig
	err := ctx.RegisterResource("oci:Database/exadataIormConfig:ExadataIormConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExadataIormConfig gets an existing ExadataIormConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExadataIormConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExadataIormConfigState, opts ...pulumi.ResourceOption) (*ExadataIormConfig, error) {
	var resource ExadataIormConfig
	err := ctx.ReadResource("oci:Database/exadataIormConfig:ExadataIormConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExadataIormConfig resources.
type exadataIormConfigState struct {
	// (Updatable) Array of IORM Setting for all the database in this Exadata DB System
	DbPlans []ExadataIormConfigDbPlan `pulumi:"dbPlans"`
	// (Updatable) The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId *string `pulumi:"dbSystemId"`
	// Additional information about the current `lifecycleState`.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) Value for the IORM objective Default is "Auto"
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Objective *string `pulumi:"objective"`
	// The current state of IORM configuration for the Exadata DB system.
	State *string `pulumi:"state"`
}

type ExadataIormConfigState struct {
	// (Updatable) Array of IORM Setting for all the database in this Exadata DB System
	DbPlans ExadataIormConfigDbPlanArrayInput
	// (Updatable) The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringPtrInput
	// Additional information about the current `lifecycleState`.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) Value for the IORM objective Default is "Auto"
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Objective pulumi.StringPtrInput
	// The current state of IORM configuration for the Exadata DB system.
	State pulumi.StringPtrInput
}

func (ExadataIormConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*exadataIormConfigState)(nil)).Elem()
}

type exadataIormConfigArgs struct {
	// (Updatable) Array of IORM Setting for all the database in this Exadata DB System
	DbPlans []ExadataIormConfigDbPlan `pulumi:"dbPlans"`
	// (Updatable) The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
	// (Updatable) Value for the IORM objective Default is "Auto"
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Objective *string `pulumi:"objective"`
}

// The set of arguments for constructing a ExadataIormConfig resource.
type ExadataIormConfigArgs struct {
	// (Updatable) Array of IORM Setting for all the database in this Exadata DB System
	DbPlans ExadataIormConfigDbPlanArrayInput
	// (Updatable) The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput
	// (Updatable) Value for the IORM objective Default is "Auto"
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Objective pulumi.StringPtrInput
}

func (ExadataIormConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*exadataIormConfigArgs)(nil)).Elem()
}

type ExadataIormConfigInput interface {
	pulumi.Input

	ToExadataIormConfigOutput() ExadataIormConfigOutput
	ToExadataIormConfigOutputWithContext(ctx context.Context) ExadataIormConfigOutput
}

func (*ExadataIormConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ExadataIormConfig)(nil)).Elem()
}

func (i *ExadataIormConfig) ToExadataIormConfigOutput() ExadataIormConfigOutput {
	return i.ToExadataIormConfigOutputWithContext(context.Background())
}

func (i *ExadataIormConfig) ToExadataIormConfigOutputWithContext(ctx context.Context) ExadataIormConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataIormConfigOutput)
}

func (i *ExadataIormConfig) ToOutput(ctx context.Context) pulumix.Output[*ExadataIormConfig] {
	return pulumix.Output[*ExadataIormConfig]{
		OutputState: i.ToExadataIormConfigOutputWithContext(ctx).OutputState,
	}
}

// ExadataIormConfigArrayInput is an input type that accepts ExadataIormConfigArray and ExadataIormConfigArrayOutput values.
// You can construct a concrete instance of `ExadataIormConfigArrayInput` via:
//
//	ExadataIormConfigArray{ ExadataIormConfigArgs{...} }
type ExadataIormConfigArrayInput interface {
	pulumi.Input

	ToExadataIormConfigArrayOutput() ExadataIormConfigArrayOutput
	ToExadataIormConfigArrayOutputWithContext(context.Context) ExadataIormConfigArrayOutput
}

type ExadataIormConfigArray []ExadataIormConfigInput

func (ExadataIormConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExadataIormConfig)(nil)).Elem()
}

func (i ExadataIormConfigArray) ToExadataIormConfigArrayOutput() ExadataIormConfigArrayOutput {
	return i.ToExadataIormConfigArrayOutputWithContext(context.Background())
}

func (i ExadataIormConfigArray) ToExadataIormConfigArrayOutputWithContext(ctx context.Context) ExadataIormConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataIormConfigArrayOutput)
}

func (i ExadataIormConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]*ExadataIormConfig] {
	return pulumix.Output[[]*ExadataIormConfig]{
		OutputState: i.ToExadataIormConfigArrayOutputWithContext(ctx).OutputState,
	}
}

// ExadataIormConfigMapInput is an input type that accepts ExadataIormConfigMap and ExadataIormConfigMapOutput values.
// You can construct a concrete instance of `ExadataIormConfigMapInput` via:
//
//	ExadataIormConfigMap{ "key": ExadataIormConfigArgs{...} }
type ExadataIormConfigMapInput interface {
	pulumi.Input

	ToExadataIormConfigMapOutput() ExadataIormConfigMapOutput
	ToExadataIormConfigMapOutputWithContext(context.Context) ExadataIormConfigMapOutput
}

type ExadataIormConfigMap map[string]ExadataIormConfigInput

func (ExadataIormConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExadataIormConfig)(nil)).Elem()
}

func (i ExadataIormConfigMap) ToExadataIormConfigMapOutput() ExadataIormConfigMapOutput {
	return i.ToExadataIormConfigMapOutputWithContext(context.Background())
}

func (i ExadataIormConfigMap) ToExadataIormConfigMapOutputWithContext(ctx context.Context) ExadataIormConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataIormConfigMapOutput)
}

func (i ExadataIormConfigMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ExadataIormConfig] {
	return pulumix.Output[map[string]*ExadataIormConfig]{
		OutputState: i.ToExadataIormConfigMapOutputWithContext(ctx).OutputState,
	}
}

type ExadataIormConfigOutput struct{ *pulumi.OutputState }

func (ExadataIormConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExadataIormConfig)(nil)).Elem()
}

func (o ExadataIormConfigOutput) ToExadataIormConfigOutput() ExadataIormConfigOutput {
	return o
}

func (o ExadataIormConfigOutput) ToExadataIormConfigOutputWithContext(ctx context.Context) ExadataIormConfigOutput {
	return o
}

func (o ExadataIormConfigOutput) ToOutput(ctx context.Context) pulumix.Output[*ExadataIormConfig] {
	return pulumix.Output[*ExadataIormConfig]{
		OutputState: o.OutputState,
	}
}

// (Updatable) Array of IORM Setting for all the database in this Exadata DB System
func (o ExadataIormConfigOutput) DbPlans() ExadataIormConfigDbPlanArrayOutput {
	return o.ApplyT(func(v *ExadataIormConfig) ExadataIormConfigDbPlanArrayOutput { return v.DbPlans }).(ExadataIormConfigDbPlanArrayOutput)
}

// (Updatable) The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o ExadataIormConfigOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataIormConfig) pulumi.StringOutput { return v.DbSystemId }).(pulumi.StringOutput)
}

// Additional information about the current `lifecycleState`.
func (o ExadataIormConfigOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataIormConfig) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) Value for the IORM objective Default is "Auto"
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ExadataIormConfigOutput) Objective() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataIormConfig) pulumi.StringOutput { return v.Objective }).(pulumi.StringOutput)
}

// The current state of IORM configuration for the Exadata DB system.
func (o ExadataIormConfigOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ExadataIormConfig) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type ExadataIormConfigArrayOutput struct{ *pulumi.OutputState }

func (ExadataIormConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExadataIormConfig)(nil)).Elem()
}

func (o ExadataIormConfigArrayOutput) ToExadataIormConfigArrayOutput() ExadataIormConfigArrayOutput {
	return o
}

func (o ExadataIormConfigArrayOutput) ToExadataIormConfigArrayOutputWithContext(ctx context.Context) ExadataIormConfigArrayOutput {
	return o
}

func (o ExadataIormConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ExadataIormConfig] {
	return pulumix.Output[[]*ExadataIormConfig]{
		OutputState: o.OutputState,
	}
}

func (o ExadataIormConfigArrayOutput) Index(i pulumi.IntInput) ExadataIormConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExadataIormConfig {
		return vs[0].([]*ExadataIormConfig)[vs[1].(int)]
	}).(ExadataIormConfigOutput)
}

type ExadataIormConfigMapOutput struct{ *pulumi.OutputState }

func (ExadataIormConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExadataIormConfig)(nil)).Elem()
}

func (o ExadataIormConfigMapOutput) ToExadataIormConfigMapOutput() ExadataIormConfigMapOutput {
	return o
}

func (o ExadataIormConfigMapOutput) ToExadataIormConfigMapOutputWithContext(ctx context.Context) ExadataIormConfigMapOutput {
	return o
}

func (o ExadataIormConfigMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ExadataIormConfig] {
	return pulumix.Output[map[string]*ExadataIormConfig]{
		OutputState: o.OutputState,
	}
}

func (o ExadataIormConfigMapOutput) MapIndex(k pulumi.StringInput) ExadataIormConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExadataIormConfig {
		return vs[0].(map[string]*ExadataIormConfig)[vs[1].(string)]
	}).(ExadataIormConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataIormConfigInput)(nil)).Elem(), &ExadataIormConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataIormConfigArrayInput)(nil)).Elem(), ExadataIormConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataIormConfigMapInput)(nil)).Elem(), ExadataIormConfigMap{})
	pulumi.RegisterOutputType(ExadataIormConfigOutput{})
	pulumi.RegisterOutputType(ExadataIormConfigArrayOutput{})
	pulumi.RegisterOutputType(ExadataIormConfigMapOutput{})
}
