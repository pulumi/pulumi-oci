// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the External Container Database resource in Oracle Cloud Infrastructure Database service.
//
// Creates a new external container database resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.NewExternalContainerDatabase(ctx, "test_external_container_database", &database.ExternalContainerDatabaseArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				DisplayName:   pulumi.Any(externalContainerDatabaseDisplayName),
//				DefinedTags:   pulumi.Any(externalContainerDatabaseDefinedTags),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ExternalContainerDatabases can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Database/externalContainerDatabase:ExternalContainerDatabase test_external_container_database "id"
// ```
type ExternalContainerDatabase struct {
	pulumi.CustomResourceState

	// The character set of the external database.
	CharacterSet pulumi.StringOutput `pulumi:"characterSet"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The Oracle Database configuration
	DatabaseConfiguration pulumi.StringOutput `pulumi:"databaseConfiguration"`
	// The Oracle Database Edition that applies to all the databases on the DB system. Exadata DB systems and 2-node RAC DB systems require ENTERPRISE_EDITION_EXTREME_PERFORMANCE.
	DatabaseEdition pulumi.StringOutput `pulumi:"databaseEdition"`
	// The configuration of the Database Management service.
	DatabaseManagementConfigs ExternalContainerDatabaseDatabaseManagementConfigArrayOutput `pulumi:"databaseManagementConfigs"`
	// The Oracle Database version.
	DatabaseVersion pulumi.StringOutput `pulumi:"databaseVersion"`
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId pulumi.StringOutput `pulumi:"dbId"`
	// The database packs licensed for the external Oracle Database.
	DbPacks pulumi.StringOutput `pulumi:"dbPacks"`
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName pulumi.StringOutput `pulumi:"dbUniqueName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The national character of the external database.
	NcharacterSet pulumi.StringOutput `pulumi:"ncharacterSet"`
	// The configuration of Stack Monitoring for the external database.
	StackMonitoringConfigs ExternalContainerDatabaseStackMonitoringConfigArrayOutput `pulumi:"stackMonitoringConfigs"`
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
}

// NewExternalContainerDatabase registers a new resource with the given unique name, arguments, and options.
func NewExternalContainerDatabase(ctx *pulumi.Context,
	name string, args *ExternalContainerDatabaseArgs, opts ...pulumi.ResourceOption) (*ExternalContainerDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalContainerDatabase
	err := ctx.RegisterResource("oci:Database/externalContainerDatabase:ExternalContainerDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalContainerDatabase gets an existing ExternalContainerDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalContainerDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalContainerDatabaseState, opts ...pulumi.ResourceOption) (*ExternalContainerDatabase, error) {
	var resource ExternalContainerDatabase
	err := ctx.ReadResource("oci:Database/externalContainerDatabase:ExternalContainerDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalContainerDatabase resources.
type externalContainerDatabaseState struct {
	// The character set of the external database.
	CharacterSet *string `pulumi:"characterSet"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The Oracle Database configuration
	DatabaseConfiguration *string `pulumi:"databaseConfiguration"`
	// The Oracle Database Edition that applies to all the databases on the DB system. Exadata DB systems and 2-node RAC DB systems require ENTERPRISE_EDITION_EXTREME_PERFORMANCE.
	DatabaseEdition *string `pulumi:"databaseEdition"`
	// The configuration of the Database Management service.
	DatabaseManagementConfigs []ExternalContainerDatabaseDatabaseManagementConfig `pulumi:"databaseManagementConfigs"`
	// The Oracle Database version.
	DatabaseVersion *string `pulumi:"databaseVersion"`
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId *string `pulumi:"dbId"`
	// The database packs licensed for the external Oracle Database.
	DbPacks *string `pulumi:"dbPacks"`
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName *string `pulumi:"dbUniqueName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The national character of the external database.
	NcharacterSet *string `pulumi:"ncharacterSet"`
	// The configuration of Stack Monitoring for the external database.
	StackMonitoringConfigs []ExternalContainerDatabaseStackMonitoringConfig `pulumi:"stackMonitoringConfigs"`
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State *string `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone *string `pulumi:"timeZone"`
}

type ExternalContainerDatabaseState struct {
	// The character set of the external database.
	CharacterSet pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The Oracle Database configuration
	DatabaseConfiguration pulumi.StringPtrInput
	// The Oracle Database Edition that applies to all the databases on the DB system. Exadata DB systems and 2-node RAC DB systems require ENTERPRISE_EDITION_EXTREME_PERFORMANCE.
	DatabaseEdition pulumi.StringPtrInput
	// The configuration of the Database Management service.
	DatabaseManagementConfigs ExternalContainerDatabaseDatabaseManagementConfigArrayInput
	// The Oracle Database version.
	DatabaseVersion pulumi.StringPtrInput
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId pulumi.StringPtrInput
	// The database packs licensed for the external Oracle Database.
	DbPacks pulumi.StringPtrInput
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapInput
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.StringMapInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// The national character of the external database.
	NcharacterSet pulumi.StringPtrInput
	// The configuration of Stack Monitoring for the external database.
	StackMonitoringConfigs ExternalContainerDatabaseStackMonitoringConfigArrayInput
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State pulumi.StringPtrInput
	// The date and time the database was created.
	TimeCreated pulumi.StringPtrInput
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone pulumi.StringPtrInput
}

func (ExternalContainerDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalContainerDatabaseState)(nil)).Elem()
}

type externalContainerDatabaseArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]string `pulumi:"freeformTags"`
}

// The set of arguments for constructing a ExternalContainerDatabase resource.
type ExternalContainerDatabaseArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapInput
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.StringMapInput
}

func (ExternalContainerDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalContainerDatabaseArgs)(nil)).Elem()
}

type ExternalContainerDatabaseInput interface {
	pulumi.Input

	ToExternalContainerDatabaseOutput() ExternalContainerDatabaseOutput
	ToExternalContainerDatabaseOutputWithContext(ctx context.Context) ExternalContainerDatabaseOutput
}

func (*ExternalContainerDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalContainerDatabase)(nil)).Elem()
}

func (i *ExternalContainerDatabase) ToExternalContainerDatabaseOutput() ExternalContainerDatabaseOutput {
	return i.ToExternalContainerDatabaseOutputWithContext(context.Background())
}

func (i *ExternalContainerDatabase) ToExternalContainerDatabaseOutputWithContext(ctx context.Context) ExternalContainerDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalContainerDatabaseOutput)
}

// ExternalContainerDatabaseArrayInput is an input type that accepts ExternalContainerDatabaseArray and ExternalContainerDatabaseArrayOutput values.
// You can construct a concrete instance of `ExternalContainerDatabaseArrayInput` via:
//
//	ExternalContainerDatabaseArray{ ExternalContainerDatabaseArgs{...} }
type ExternalContainerDatabaseArrayInput interface {
	pulumi.Input

	ToExternalContainerDatabaseArrayOutput() ExternalContainerDatabaseArrayOutput
	ToExternalContainerDatabaseArrayOutputWithContext(context.Context) ExternalContainerDatabaseArrayOutput
}

type ExternalContainerDatabaseArray []ExternalContainerDatabaseInput

func (ExternalContainerDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalContainerDatabase)(nil)).Elem()
}

func (i ExternalContainerDatabaseArray) ToExternalContainerDatabaseArrayOutput() ExternalContainerDatabaseArrayOutput {
	return i.ToExternalContainerDatabaseArrayOutputWithContext(context.Background())
}

func (i ExternalContainerDatabaseArray) ToExternalContainerDatabaseArrayOutputWithContext(ctx context.Context) ExternalContainerDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalContainerDatabaseArrayOutput)
}

// ExternalContainerDatabaseMapInput is an input type that accepts ExternalContainerDatabaseMap and ExternalContainerDatabaseMapOutput values.
// You can construct a concrete instance of `ExternalContainerDatabaseMapInput` via:
//
//	ExternalContainerDatabaseMap{ "key": ExternalContainerDatabaseArgs{...} }
type ExternalContainerDatabaseMapInput interface {
	pulumi.Input

	ToExternalContainerDatabaseMapOutput() ExternalContainerDatabaseMapOutput
	ToExternalContainerDatabaseMapOutputWithContext(context.Context) ExternalContainerDatabaseMapOutput
}

type ExternalContainerDatabaseMap map[string]ExternalContainerDatabaseInput

func (ExternalContainerDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalContainerDatabase)(nil)).Elem()
}

func (i ExternalContainerDatabaseMap) ToExternalContainerDatabaseMapOutput() ExternalContainerDatabaseMapOutput {
	return i.ToExternalContainerDatabaseMapOutputWithContext(context.Background())
}

func (i ExternalContainerDatabaseMap) ToExternalContainerDatabaseMapOutputWithContext(ctx context.Context) ExternalContainerDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalContainerDatabaseMapOutput)
}

type ExternalContainerDatabaseOutput struct{ *pulumi.OutputState }

func (ExternalContainerDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalContainerDatabase)(nil)).Elem()
}

func (o ExternalContainerDatabaseOutput) ToExternalContainerDatabaseOutput() ExternalContainerDatabaseOutput {
	return o
}

func (o ExternalContainerDatabaseOutput) ToExternalContainerDatabaseOutputWithContext(ctx context.Context) ExternalContainerDatabaseOutput {
	return o
}

// The character set of the external database.
func (o ExternalContainerDatabaseOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.CharacterSet }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o ExternalContainerDatabaseOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The Oracle Database configuration
func (o ExternalContainerDatabaseOutput) DatabaseConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.DatabaseConfiguration }).(pulumi.StringOutput)
}

// The Oracle Database Edition that applies to all the databases on the DB system. Exadata DB systems and 2-node RAC DB systems require ENTERPRISE_EDITION_EXTREME_PERFORMANCE.
func (o ExternalContainerDatabaseOutput) DatabaseEdition() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.DatabaseEdition }).(pulumi.StringOutput)
}

// The configuration of the Database Management service.
func (o ExternalContainerDatabaseOutput) DatabaseManagementConfigs() ExternalContainerDatabaseDatabaseManagementConfigArrayOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) ExternalContainerDatabaseDatabaseManagementConfigArrayOutput {
		return v.DatabaseManagementConfigs
	}).(ExternalContainerDatabaseDatabaseManagementConfigArrayOutput)
}

// The Oracle Database version.
func (o ExternalContainerDatabaseOutput) DatabaseVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.DatabaseVersion }).(pulumi.StringOutput)
}

// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
func (o ExternalContainerDatabaseOutput) DbId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.DbId }).(pulumi.StringOutput)
}

// The database packs licensed for the external Oracle Database.
func (o ExternalContainerDatabaseOutput) DbPacks() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.DbPacks }).(pulumi.StringOutput)
}

// The `DB_UNIQUE_NAME` of the external database.
func (o ExternalContainerDatabaseOutput) DbUniqueName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.DbUniqueName }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o ExternalContainerDatabaseOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
func (o ExternalContainerDatabaseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ExternalContainerDatabaseOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Additional information about the current lifecycle state.
func (o ExternalContainerDatabaseOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The national character of the external database.
func (o ExternalContainerDatabaseOutput) NcharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.NcharacterSet }).(pulumi.StringOutput)
}

// The configuration of Stack Monitoring for the external database.
func (o ExternalContainerDatabaseOutput) StackMonitoringConfigs() ExternalContainerDatabaseStackMonitoringConfigArrayOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) ExternalContainerDatabaseStackMonitoringConfigArrayOutput {
		return v.StackMonitoringConfigs
	}).(ExternalContainerDatabaseStackMonitoringConfigArrayOutput)
}

// The current state of the Oracle Cloud Infrastructure external database resource.
func (o ExternalContainerDatabaseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the database was created.
func (o ExternalContainerDatabaseOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
func (o ExternalContainerDatabaseOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabase) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

type ExternalContainerDatabaseArrayOutput struct{ *pulumi.OutputState }

func (ExternalContainerDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalContainerDatabase)(nil)).Elem()
}

func (o ExternalContainerDatabaseArrayOutput) ToExternalContainerDatabaseArrayOutput() ExternalContainerDatabaseArrayOutput {
	return o
}

func (o ExternalContainerDatabaseArrayOutput) ToExternalContainerDatabaseArrayOutputWithContext(ctx context.Context) ExternalContainerDatabaseArrayOutput {
	return o
}

func (o ExternalContainerDatabaseArrayOutput) Index(i pulumi.IntInput) ExternalContainerDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalContainerDatabase {
		return vs[0].([]*ExternalContainerDatabase)[vs[1].(int)]
	}).(ExternalContainerDatabaseOutput)
}

type ExternalContainerDatabaseMapOutput struct{ *pulumi.OutputState }

func (ExternalContainerDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalContainerDatabase)(nil)).Elem()
}

func (o ExternalContainerDatabaseMapOutput) ToExternalContainerDatabaseMapOutput() ExternalContainerDatabaseMapOutput {
	return o
}

func (o ExternalContainerDatabaseMapOutput) ToExternalContainerDatabaseMapOutputWithContext(ctx context.Context) ExternalContainerDatabaseMapOutput {
	return o
}

func (o ExternalContainerDatabaseMapOutput) MapIndex(k pulumi.StringInput) ExternalContainerDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalContainerDatabase {
		return vs[0].(map[string]*ExternalContainerDatabase)[vs[1].(string)]
	}).(ExternalContainerDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalContainerDatabaseInput)(nil)).Elem(), &ExternalContainerDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalContainerDatabaseArrayInput)(nil)).Elem(), ExternalContainerDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalContainerDatabaseMapInput)(nil)).Elem(), ExternalContainerDatabaseMap{})
	pulumi.RegisterOutputType(ExternalContainerDatabaseOutput{})
	pulumi.RegisterOutputType(ExternalContainerDatabaseArrayOutput{})
	pulumi.RegisterOutputType(ExternalContainerDatabaseMapOutput{})
}
