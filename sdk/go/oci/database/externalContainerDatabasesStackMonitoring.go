// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Externalcontainerdatabases Stack Monitoring resource in Oracle Cloud Infrastructure Database service.
//
// Enable Stack Monitoring for the external container database.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.NewExternalContainerDatabasesStackMonitoring(ctx, "testExternalcontainerdatabasesStackMonitoring", &Database.ExternalContainerDatabasesStackMonitoringArgs{
//				ExternalContainerDatabaseId: pulumi.Any(oci_database_external_container_database.Test_external_container_database.Id),
//				ExternalDatabaseConnectorId: pulumi.Any(oci_database_external_database_connector.Test_external_database_connector.Id),
//				EnableStackMonitoring:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Import is not supported for this resource.
type ExternalContainerDatabasesStackMonitoring struct {
	pulumi.CustomResourceState

	// (Updatable) Enabling Stack Monitoring on External Container Databases . Requires boolean value "true" or "false".
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableStackMonitoring pulumi.BoolOutput `pulumi:"enableStackMonitoring"`
	// The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalContainerDatabaseId pulumi.StringOutput `pulumi:"externalContainerDatabaseId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
	ExternalDatabaseConnectorId pulumi.StringOutput `pulumi:"externalDatabaseConnectorId"`
}

// NewExternalContainerDatabasesStackMonitoring registers a new resource with the given unique name, arguments, and options.
func NewExternalContainerDatabasesStackMonitoring(ctx *pulumi.Context,
	name string, args *ExternalContainerDatabasesStackMonitoringArgs, opts ...pulumi.ResourceOption) (*ExternalContainerDatabasesStackMonitoring, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableStackMonitoring == nil {
		return nil, errors.New("invalid value for required argument 'EnableStackMonitoring'")
	}
	if args.ExternalContainerDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalContainerDatabaseId'")
	}
	if args.ExternalDatabaseConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalDatabaseConnectorId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalContainerDatabasesStackMonitoring
	err := ctx.RegisterResource("oci:Database/externalContainerDatabasesStackMonitoring:ExternalContainerDatabasesStackMonitoring", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalContainerDatabasesStackMonitoring gets an existing ExternalContainerDatabasesStackMonitoring resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalContainerDatabasesStackMonitoring(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalContainerDatabasesStackMonitoringState, opts ...pulumi.ResourceOption) (*ExternalContainerDatabasesStackMonitoring, error) {
	var resource ExternalContainerDatabasesStackMonitoring
	err := ctx.ReadResource("oci:Database/externalContainerDatabasesStackMonitoring:ExternalContainerDatabasesStackMonitoring", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalContainerDatabasesStackMonitoring resources.
type externalContainerDatabasesStackMonitoringState struct {
	// (Updatable) Enabling Stack Monitoring on External Container Databases . Requires boolean value "true" or "false".
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableStackMonitoring *bool `pulumi:"enableStackMonitoring"`
	// The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalContainerDatabaseId *string `pulumi:"externalContainerDatabaseId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
	ExternalDatabaseConnectorId *string `pulumi:"externalDatabaseConnectorId"`
}

type ExternalContainerDatabasesStackMonitoringState struct {
	// (Updatable) Enabling Stack Monitoring on External Container Databases . Requires boolean value "true" or "false".
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableStackMonitoring pulumi.BoolPtrInput
	// The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalContainerDatabaseId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
	ExternalDatabaseConnectorId pulumi.StringPtrInput
}

func (ExternalContainerDatabasesStackMonitoringState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalContainerDatabasesStackMonitoringState)(nil)).Elem()
}

type externalContainerDatabasesStackMonitoringArgs struct {
	// (Updatable) Enabling Stack Monitoring on External Container Databases . Requires boolean value "true" or "false".
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableStackMonitoring bool `pulumi:"enableStackMonitoring"`
	// The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalContainerDatabaseId string `pulumi:"externalContainerDatabaseId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
	ExternalDatabaseConnectorId string `pulumi:"externalDatabaseConnectorId"`
}

// The set of arguments for constructing a ExternalContainerDatabasesStackMonitoring resource.
type ExternalContainerDatabasesStackMonitoringArgs struct {
	// (Updatable) Enabling Stack Monitoring on External Container Databases . Requires boolean value "true" or "false".
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableStackMonitoring pulumi.BoolInput
	// The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalContainerDatabaseId pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
	ExternalDatabaseConnectorId pulumi.StringInput
}

func (ExternalContainerDatabasesStackMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalContainerDatabasesStackMonitoringArgs)(nil)).Elem()
}

type ExternalContainerDatabasesStackMonitoringInput interface {
	pulumi.Input

	ToExternalContainerDatabasesStackMonitoringOutput() ExternalContainerDatabasesStackMonitoringOutput
	ToExternalContainerDatabasesStackMonitoringOutputWithContext(ctx context.Context) ExternalContainerDatabasesStackMonitoringOutput
}

func (*ExternalContainerDatabasesStackMonitoring) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalContainerDatabasesStackMonitoring)(nil)).Elem()
}

func (i *ExternalContainerDatabasesStackMonitoring) ToExternalContainerDatabasesStackMonitoringOutput() ExternalContainerDatabasesStackMonitoringOutput {
	return i.ToExternalContainerDatabasesStackMonitoringOutputWithContext(context.Background())
}

func (i *ExternalContainerDatabasesStackMonitoring) ToExternalContainerDatabasesStackMonitoringOutputWithContext(ctx context.Context) ExternalContainerDatabasesStackMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalContainerDatabasesStackMonitoringOutput)
}

// ExternalContainerDatabasesStackMonitoringArrayInput is an input type that accepts ExternalContainerDatabasesStackMonitoringArray and ExternalContainerDatabasesStackMonitoringArrayOutput values.
// You can construct a concrete instance of `ExternalContainerDatabasesStackMonitoringArrayInput` via:
//
//	ExternalContainerDatabasesStackMonitoringArray{ ExternalContainerDatabasesStackMonitoringArgs{...} }
type ExternalContainerDatabasesStackMonitoringArrayInput interface {
	pulumi.Input

	ToExternalContainerDatabasesStackMonitoringArrayOutput() ExternalContainerDatabasesStackMonitoringArrayOutput
	ToExternalContainerDatabasesStackMonitoringArrayOutputWithContext(context.Context) ExternalContainerDatabasesStackMonitoringArrayOutput
}

type ExternalContainerDatabasesStackMonitoringArray []ExternalContainerDatabasesStackMonitoringInput

func (ExternalContainerDatabasesStackMonitoringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalContainerDatabasesStackMonitoring)(nil)).Elem()
}

func (i ExternalContainerDatabasesStackMonitoringArray) ToExternalContainerDatabasesStackMonitoringArrayOutput() ExternalContainerDatabasesStackMonitoringArrayOutput {
	return i.ToExternalContainerDatabasesStackMonitoringArrayOutputWithContext(context.Background())
}

func (i ExternalContainerDatabasesStackMonitoringArray) ToExternalContainerDatabasesStackMonitoringArrayOutputWithContext(ctx context.Context) ExternalContainerDatabasesStackMonitoringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalContainerDatabasesStackMonitoringArrayOutput)
}

// ExternalContainerDatabasesStackMonitoringMapInput is an input type that accepts ExternalContainerDatabasesStackMonitoringMap and ExternalContainerDatabasesStackMonitoringMapOutput values.
// You can construct a concrete instance of `ExternalContainerDatabasesStackMonitoringMapInput` via:
//
//	ExternalContainerDatabasesStackMonitoringMap{ "key": ExternalContainerDatabasesStackMonitoringArgs{...} }
type ExternalContainerDatabasesStackMonitoringMapInput interface {
	pulumi.Input

	ToExternalContainerDatabasesStackMonitoringMapOutput() ExternalContainerDatabasesStackMonitoringMapOutput
	ToExternalContainerDatabasesStackMonitoringMapOutputWithContext(context.Context) ExternalContainerDatabasesStackMonitoringMapOutput
}

type ExternalContainerDatabasesStackMonitoringMap map[string]ExternalContainerDatabasesStackMonitoringInput

func (ExternalContainerDatabasesStackMonitoringMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalContainerDatabasesStackMonitoring)(nil)).Elem()
}

func (i ExternalContainerDatabasesStackMonitoringMap) ToExternalContainerDatabasesStackMonitoringMapOutput() ExternalContainerDatabasesStackMonitoringMapOutput {
	return i.ToExternalContainerDatabasesStackMonitoringMapOutputWithContext(context.Background())
}

func (i ExternalContainerDatabasesStackMonitoringMap) ToExternalContainerDatabasesStackMonitoringMapOutputWithContext(ctx context.Context) ExternalContainerDatabasesStackMonitoringMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalContainerDatabasesStackMonitoringMapOutput)
}

type ExternalContainerDatabasesStackMonitoringOutput struct{ *pulumi.OutputState }

func (ExternalContainerDatabasesStackMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalContainerDatabasesStackMonitoring)(nil)).Elem()
}

func (o ExternalContainerDatabasesStackMonitoringOutput) ToExternalContainerDatabasesStackMonitoringOutput() ExternalContainerDatabasesStackMonitoringOutput {
	return o
}

func (o ExternalContainerDatabasesStackMonitoringOutput) ToExternalContainerDatabasesStackMonitoringOutputWithContext(ctx context.Context) ExternalContainerDatabasesStackMonitoringOutput {
	return o
}

// (Updatable) Enabling Stack Monitoring on External Container Databases . Requires boolean value "true" or "false".
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ExternalContainerDatabasesStackMonitoringOutput) EnableStackMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExternalContainerDatabasesStackMonitoring) pulumi.BoolOutput { return v.EnableStackMonitoring }).(pulumi.BoolOutput)
}

// The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o ExternalContainerDatabasesStackMonitoringOutput) ExternalContainerDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabasesStackMonitoring) pulumi.StringOutput {
		return v.ExternalContainerDatabaseId
	}).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
func (o ExternalContainerDatabasesStackMonitoringOutput) ExternalDatabaseConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalContainerDatabasesStackMonitoring) pulumi.StringOutput {
		return v.ExternalDatabaseConnectorId
	}).(pulumi.StringOutput)
}

type ExternalContainerDatabasesStackMonitoringArrayOutput struct{ *pulumi.OutputState }

func (ExternalContainerDatabasesStackMonitoringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalContainerDatabasesStackMonitoring)(nil)).Elem()
}

func (o ExternalContainerDatabasesStackMonitoringArrayOutput) ToExternalContainerDatabasesStackMonitoringArrayOutput() ExternalContainerDatabasesStackMonitoringArrayOutput {
	return o
}

func (o ExternalContainerDatabasesStackMonitoringArrayOutput) ToExternalContainerDatabasesStackMonitoringArrayOutputWithContext(ctx context.Context) ExternalContainerDatabasesStackMonitoringArrayOutput {
	return o
}

func (o ExternalContainerDatabasesStackMonitoringArrayOutput) Index(i pulumi.IntInput) ExternalContainerDatabasesStackMonitoringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalContainerDatabasesStackMonitoring {
		return vs[0].([]*ExternalContainerDatabasesStackMonitoring)[vs[1].(int)]
	}).(ExternalContainerDatabasesStackMonitoringOutput)
}

type ExternalContainerDatabasesStackMonitoringMapOutput struct{ *pulumi.OutputState }

func (ExternalContainerDatabasesStackMonitoringMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalContainerDatabasesStackMonitoring)(nil)).Elem()
}

func (o ExternalContainerDatabasesStackMonitoringMapOutput) ToExternalContainerDatabasesStackMonitoringMapOutput() ExternalContainerDatabasesStackMonitoringMapOutput {
	return o
}

func (o ExternalContainerDatabasesStackMonitoringMapOutput) ToExternalContainerDatabasesStackMonitoringMapOutputWithContext(ctx context.Context) ExternalContainerDatabasesStackMonitoringMapOutput {
	return o
}

func (o ExternalContainerDatabasesStackMonitoringMapOutput) MapIndex(k pulumi.StringInput) ExternalContainerDatabasesStackMonitoringOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalContainerDatabasesStackMonitoring {
		return vs[0].(map[string]*ExternalContainerDatabasesStackMonitoring)[vs[1].(string)]
	}).(ExternalContainerDatabasesStackMonitoringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalContainerDatabasesStackMonitoringInput)(nil)).Elem(), &ExternalContainerDatabasesStackMonitoring{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalContainerDatabasesStackMonitoringArrayInput)(nil)).Elem(), ExternalContainerDatabasesStackMonitoringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalContainerDatabasesStackMonitoringMapInput)(nil)).Elem(), ExternalContainerDatabasesStackMonitoringMap{})
	pulumi.RegisterOutputType(ExternalContainerDatabasesStackMonitoringOutput{})
	pulumi.RegisterOutputType(ExternalContainerDatabasesStackMonitoringArrayOutput{})
	pulumi.RegisterOutputType(ExternalContainerDatabasesStackMonitoringMapOutput{})
}
