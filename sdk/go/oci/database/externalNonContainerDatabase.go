// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the External Non Container Database resource in Oracle Cloud Infrastructure Database service.
//
// # Creates a new ExternalNonContainerDatabase resource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.NewExternalNonContainerDatabase(ctx, "testExternalNonContainerDatabase", &Database.ExternalNonContainerDatabaseArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				DisplayName:   pulumi.Any(_var.External_non_container_database_display_name),
//				DefinedTags:   pulumi.Any(_var.External_non_container_database_defined_tags),
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ExternalNonContainerDatabases can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Database/externalNonContainerDatabase:ExternalNonContainerDatabase test_external_non_container_database "id"
//
// ```
type ExternalNonContainerDatabase struct {
	pulumi.CustomResourceState

	// The character set of the external database.
	CharacterSet pulumi.StringPtrOutput `pulumi:"characterSet"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The Oracle Database configuration
	DatabaseConfiguration pulumi.StringPtrOutput `pulumi:"databaseConfiguration"`
	// The Oracle Database edition.
	DatabaseEdition pulumi.StringPtrOutput `pulumi:"databaseEdition"`
	// The configuration of the Database Management service.
	DatabaseManagementConfigs ExternalNonContainerDatabaseDatabaseManagementConfigArrayOutput `pulumi:"databaseManagementConfigs"`
	// The Oracle Database version.
	DatabaseVersion pulumi.StringPtrOutput `pulumi:"databaseVersion"`
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId pulumi.StringPtrOutput `pulumi:"dbId"`
	// The database packs licensed for the external Oracle Database.
	DbPacks pulumi.StringPtrOutput `pulumi:"dbPacks"`
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName pulumi.StringPtrOutput `pulumi:"dbUniqueName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrOutput `pulumi:"lifecycleDetails"`
	// The national character of the external database.
	NcharacterSet pulumi.StringPtrOutput `pulumi:"ncharacterSet"`
	// The configuration of Operations Insights for the external database
	OperationsInsightsConfigs ExternalNonContainerDatabaseOperationsInsightsConfigArrayOutput `pulumi:"operationsInsightsConfigs"`
	// The configuration of Stack Monitoring for the external database.
	StackMonitoringConfigs ExternalNonContainerDatabaseStackMonitoringConfigArrayOutput `pulumi:"stackMonitoringConfigs"`
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated pulumi.StringPtrOutput `pulumi:"timeCreated"`
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
}

// NewExternalNonContainerDatabase registers a new resource with the given unique name, arguments, and options.
func NewExternalNonContainerDatabase(ctx *pulumi.Context,
	name string, args *ExternalNonContainerDatabaseArgs, opts ...pulumi.ResourceOption) (*ExternalNonContainerDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalNonContainerDatabase
	err := ctx.RegisterResource("oci:Database/externalNonContainerDatabase:ExternalNonContainerDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalNonContainerDatabase gets an existing ExternalNonContainerDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalNonContainerDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalNonContainerDatabaseState, opts ...pulumi.ResourceOption) (*ExternalNonContainerDatabase, error) {
	var resource ExternalNonContainerDatabase
	err := ctx.ReadResource("oci:Database/externalNonContainerDatabase:ExternalNonContainerDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalNonContainerDatabase resources.
type externalNonContainerDatabaseState struct {
	// The character set of the external database.
	CharacterSet *string `pulumi:"characterSet"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The Oracle Database configuration
	DatabaseConfiguration *string `pulumi:"databaseConfiguration"`
	// The Oracle Database edition.
	DatabaseEdition *string `pulumi:"databaseEdition"`
	// The configuration of the Database Management service.
	DatabaseManagementConfigs []ExternalNonContainerDatabaseDatabaseManagementConfig `pulumi:"databaseManagementConfigs"`
	// The Oracle Database version.
	DatabaseVersion *string `pulumi:"databaseVersion"`
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId *string `pulumi:"dbId"`
	// The database packs licensed for the external Oracle Database.
	DbPacks *string `pulumi:"dbPacks"`
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName *string `pulumi:"dbUniqueName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The national character of the external database.
	NcharacterSet *string `pulumi:"ncharacterSet"`
	// The configuration of Operations Insights for the external database
	OperationsInsightsConfigs []ExternalNonContainerDatabaseOperationsInsightsConfig `pulumi:"operationsInsightsConfigs"`
	// The configuration of Stack Monitoring for the external database.
	StackMonitoringConfigs []ExternalNonContainerDatabaseStackMonitoringConfig `pulumi:"stackMonitoringConfigs"`
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State *string `pulumi:"state"`
	// The date and time the database was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone *string `pulumi:"timeZone"`
}

type ExternalNonContainerDatabaseState struct {
	// The character set of the external database.
	CharacterSet pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The Oracle Database configuration
	DatabaseConfiguration pulumi.StringPtrInput
	// The Oracle Database edition.
	DatabaseEdition pulumi.StringPtrInput
	// The configuration of the Database Management service.
	DatabaseManagementConfigs ExternalNonContainerDatabaseDatabaseManagementConfigArrayInput
	// The Oracle Database version.
	DatabaseVersion pulumi.StringPtrInput
	// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
	DbId pulumi.StringPtrInput
	// The database packs licensed for the external Oracle Database.
	DbPacks pulumi.StringPtrInput
	// The `DB_UNIQUE_NAME` of the external database.
	DbUniqueName pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// The national character of the external database.
	NcharacterSet pulumi.StringPtrInput
	// The configuration of Operations Insights for the external database
	OperationsInsightsConfigs ExternalNonContainerDatabaseOperationsInsightsConfigArrayInput
	// The configuration of Stack Monitoring for the external database.
	StackMonitoringConfigs ExternalNonContainerDatabaseStackMonitoringConfigArrayInput
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State pulumi.StringPtrInput
	// The date and time the database was created.
	TimeCreated pulumi.StringPtrInput
	// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
	TimeZone pulumi.StringPtrInput
}

func (ExternalNonContainerDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalNonContainerDatabaseState)(nil)).Elem()
}

type externalNonContainerDatabaseArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a ExternalNonContainerDatabase resource.
type ExternalNonContainerDatabaseArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapInput
}

func (ExternalNonContainerDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalNonContainerDatabaseArgs)(nil)).Elem()
}

type ExternalNonContainerDatabaseInput interface {
	pulumi.Input

	ToExternalNonContainerDatabaseOutput() ExternalNonContainerDatabaseOutput
	ToExternalNonContainerDatabaseOutputWithContext(ctx context.Context) ExternalNonContainerDatabaseOutput
}

func (*ExternalNonContainerDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNonContainerDatabase)(nil)).Elem()
}

func (i *ExternalNonContainerDatabase) ToExternalNonContainerDatabaseOutput() ExternalNonContainerDatabaseOutput {
	return i.ToExternalNonContainerDatabaseOutputWithContext(context.Background())
}

func (i *ExternalNonContainerDatabase) ToExternalNonContainerDatabaseOutputWithContext(ctx context.Context) ExternalNonContainerDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNonContainerDatabaseOutput)
}

// ExternalNonContainerDatabaseArrayInput is an input type that accepts ExternalNonContainerDatabaseArray and ExternalNonContainerDatabaseArrayOutput values.
// You can construct a concrete instance of `ExternalNonContainerDatabaseArrayInput` via:
//
//	ExternalNonContainerDatabaseArray{ ExternalNonContainerDatabaseArgs{...} }
type ExternalNonContainerDatabaseArrayInput interface {
	pulumi.Input

	ToExternalNonContainerDatabaseArrayOutput() ExternalNonContainerDatabaseArrayOutput
	ToExternalNonContainerDatabaseArrayOutputWithContext(context.Context) ExternalNonContainerDatabaseArrayOutput
}

type ExternalNonContainerDatabaseArray []ExternalNonContainerDatabaseInput

func (ExternalNonContainerDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalNonContainerDatabase)(nil)).Elem()
}

func (i ExternalNonContainerDatabaseArray) ToExternalNonContainerDatabaseArrayOutput() ExternalNonContainerDatabaseArrayOutput {
	return i.ToExternalNonContainerDatabaseArrayOutputWithContext(context.Background())
}

func (i ExternalNonContainerDatabaseArray) ToExternalNonContainerDatabaseArrayOutputWithContext(ctx context.Context) ExternalNonContainerDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNonContainerDatabaseArrayOutput)
}

// ExternalNonContainerDatabaseMapInput is an input type that accepts ExternalNonContainerDatabaseMap and ExternalNonContainerDatabaseMapOutput values.
// You can construct a concrete instance of `ExternalNonContainerDatabaseMapInput` via:
//
//	ExternalNonContainerDatabaseMap{ "key": ExternalNonContainerDatabaseArgs{...} }
type ExternalNonContainerDatabaseMapInput interface {
	pulumi.Input

	ToExternalNonContainerDatabaseMapOutput() ExternalNonContainerDatabaseMapOutput
	ToExternalNonContainerDatabaseMapOutputWithContext(context.Context) ExternalNonContainerDatabaseMapOutput
}

type ExternalNonContainerDatabaseMap map[string]ExternalNonContainerDatabaseInput

func (ExternalNonContainerDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalNonContainerDatabase)(nil)).Elem()
}

func (i ExternalNonContainerDatabaseMap) ToExternalNonContainerDatabaseMapOutput() ExternalNonContainerDatabaseMapOutput {
	return i.ToExternalNonContainerDatabaseMapOutputWithContext(context.Background())
}

func (i ExternalNonContainerDatabaseMap) ToExternalNonContainerDatabaseMapOutputWithContext(ctx context.Context) ExternalNonContainerDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNonContainerDatabaseMapOutput)
}

type ExternalNonContainerDatabaseOutput struct{ *pulumi.OutputState }

func (ExternalNonContainerDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNonContainerDatabase)(nil)).Elem()
}

func (o ExternalNonContainerDatabaseOutput) ToExternalNonContainerDatabaseOutput() ExternalNonContainerDatabaseOutput {
	return o
}

func (o ExternalNonContainerDatabaseOutput) ToExternalNonContainerDatabaseOutputWithContext(ctx context.Context) ExternalNonContainerDatabaseOutput {
	return o
}

// The character set of the external database.
func (o ExternalNonContainerDatabaseOutput) CharacterSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.CharacterSet }).(pulumi.StringPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o ExternalNonContainerDatabaseOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The Oracle Database configuration
func (o ExternalNonContainerDatabaseOutput) DatabaseConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.DatabaseConfiguration }).(pulumi.StringPtrOutput)
}

// The Oracle Database edition.
func (o ExternalNonContainerDatabaseOutput) DatabaseEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.DatabaseEdition }).(pulumi.StringPtrOutput)
}

// The configuration of the Database Management service.
func (o ExternalNonContainerDatabaseOutput) DatabaseManagementConfigs() ExternalNonContainerDatabaseDatabaseManagementConfigArrayOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) ExternalNonContainerDatabaseDatabaseManagementConfigArrayOutput {
		return v.DatabaseManagementConfigs
	}).(ExternalNonContainerDatabaseDatabaseManagementConfigArrayOutput)
}

// The Oracle Database version.
func (o ExternalNonContainerDatabaseOutput) DatabaseVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.DatabaseVersion }).(pulumi.StringPtrOutput)
}

// The Oracle Database ID, which identifies an Oracle Database located outside of Oracle Cloud.
func (o ExternalNonContainerDatabaseOutput) DbId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.DbId }).(pulumi.StringPtrOutput)
}

// The database packs licensed for the external Oracle Database.
func (o ExternalNonContainerDatabaseOutput) DbPacks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.DbPacks }).(pulumi.StringPtrOutput)
}

// The `DB_UNIQUE_NAME` of the external database.
func (o ExternalNonContainerDatabaseOutput) DbUniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.DbUniqueName }).(pulumi.StringPtrOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o ExternalNonContainerDatabaseOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) The user-friendly name for the external database. The name does not have to be unique.
func (o ExternalNonContainerDatabaseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ExternalNonContainerDatabaseOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// Additional information about the current lifecycle state.
func (o ExternalNonContainerDatabaseOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// The national character of the external database.
func (o ExternalNonContainerDatabaseOutput) NcharacterSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.NcharacterSet }).(pulumi.StringPtrOutput)
}

// The configuration of Operations Insights for the external database
func (o ExternalNonContainerDatabaseOutput) OperationsInsightsConfigs() ExternalNonContainerDatabaseOperationsInsightsConfigArrayOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) ExternalNonContainerDatabaseOperationsInsightsConfigArrayOutput {
		return v.OperationsInsightsConfigs
	}).(ExternalNonContainerDatabaseOperationsInsightsConfigArrayOutput)
}

// The configuration of Stack Monitoring for the external database.
func (o ExternalNonContainerDatabaseOutput) StackMonitoringConfigs() ExternalNonContainerDatabaseStackMonitoringConfigArrayOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) ExternalNonContainerDatabaseStackMonitoringConfigArrayOutput {
		return v.StackMonitoringConfigs
	}).(ExternalNonContainerDatabaseStackMonitoringConfigArrayOutput)
}

// The current state of the Oracle Cloud Infrastructure external database resource.
func (o ExternalNonContainerDatabaseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the database was created.
func (o ExternalNonContainerDatabaseOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The time zone of the external database. It is a time zone offset (a character type in the format '[+|-]TZH:TZM') or a time zone region name, depending on how the time zone value was specified when the database was created / last altered.
func (o ExternalNonContainerDatabaseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalNonContainerDatabase) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type ExternalNonContainerDatabaseArrayOutput struct{ *pulumi.OutputState }

func (ExternalNonContainerDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalNonContainerDatabase)(nil)).Elem()
}

func (o ExternalNonContainerDatabaseArrayOutput) ToExternalNonContainerDatabaseArrayOutput() ExternalNonContainerDatabaseArrayOutput {
	return o
}

func (o ExternalNonContainerDatabaseArrayOutput) ToExternalNonContainerDatabaseArrayOutputWithContext(ctx context.Context) ExternalNonContainerDatabaseArrayOutput {
	return o
}

func (o ExternalNonContainerDatabaseArrayOutput) Index(i pulumi.IntInput) ExternalNonContainerDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalNonContainerDatabase {
		return vs[0].([]*ExternalNonContainerDatabase)[vs[1].(int)]
	}).(ExternalNonContainerDatabaseOutput)
}

type ExternalNonContainerDatabaseMapOutput struct{ *pulumi.OutputState }

func (ExternalNonContainerDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalNonContainerDatabase)(nil)).Elem()
}

func (o ExternalNonContainerDatabaseMapOutput) ToExternalNonContainerDatabaseMapOutput() ExternalNonContainerDatabaseMapOutput {
	return o
}

func (o ExternalNonContainerDatabaseMapOutput) ToExternalNonContainerDatabaseMapOutputWithContext(ctx context.Context) ExternalNonContainerDatabaseMapOutput {
	return o
}

func (o ExternalNonContainerDatabaseMapOutput) MapIndex(k pulumi.StringInput) ExternalNonContainerDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalNonContainerDatabase {
		return vs[0].(map[string]*ExternalNonContainerDatabase)[vs[1].(string)]
	}).(ExternalNonContainerDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNonContainerDatabaseInput)(nil)).Elem(), &ExternalNonContainerDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNonContainerDatabaseArrayInput)(nil)).Elem(), ExternalNonContainerDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNonContainerDatabaseMapInput)(nil)).Elem(), ExternalNonContainerDatabaseMap{})
	pulumi.RegisterOutputType(ExternalNonContainerDatabaseOutput{})
	pulumi.RegisterOutputType(ExternalNonContainerDatabaseArrayOutput{})
	pulumi.RegisterOutputType(ExternalNonContainerDatabaseMapOutput{})
}
