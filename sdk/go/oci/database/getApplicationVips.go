// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Application Vips in Oracle Cloud Infrastructure Database service.
//
// Gets a list of application virtual IP (VIP) addresses on a cloud VM cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetApplicationVips(ctx, &database.GetApplicationVipsArgs{
//				CloudVmClusterId: testCloudVmCluster.Id,
//				CompartmentId:    compartmentId,
//				State:            pulumi.StringRef(applicationVipState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetApplicationVips(ctx *pulumi.Context, args *GetApplicationVipsArgs, opts ...pulumi.InvokeOption) (*GetApplicationVipsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetApplicationVipsResult
	err := ctx.Invoke("oci:Database/getApplicationVips:getApplicationVips", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplicationVips.
type GetApplicationVipsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
	CloudVmClusterId string `pulumi:"cloudVmClusterId"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string                     `pulumi:"compartmentId"`
	Filters       []GetApplicationVipsFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getApplicationVips.
type GetApplicationVipsResult struct {
	// The list of application_vips.
	ApplicationVips []GetApplicationVipsApplicationVip `pulumi:"applicationVips"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
	CloudVmClusterId string `pulumi:"cloudVmClusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string                     `pulumi:"compartmentId"`
	Filters       []GetApplicationVipsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current lifecycle state of the application virtual IP (VIP) address.
	State *string `pulumi:"state"`
}

func GetApplicationVipsOutput(ctx *pulumi.Context, args GetApplicationVipsOutputArgs, opts ...pulumi.InvokeOption) GetApplicationVipsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetApplicationVipsResultOutput, error) {
			args := v.(GetApplicationVipsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getApplicationVips:getApplicationVips", args, GetApplicationVipsResultOutput{}, options).(GetApplicationVipsResultOutput), nil
		}).(GetApplicationVipsResultOutput)
}

// A collection of arguments for invoking getApplicationVips.
type GetApplicationVipsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
	CloudVmClusterId pulumi.StringInput `pulumi:"cloudVmClusterId"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput                 `pulumi:"compartmentId"`
	Filters       GetApplicationVipsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetApplicationVipsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationVipsArgs)(nil)).Elem()
}

// A collection of values returned by getApplicationVips.
type GetApplicationVipsResultOutput struct{ *pulumi.OutputState }

func (GetApplicationVipsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationVipsResult)(nil)).Elem()
}

func (o GetApplicationVipsResultOutput) ToGetApplicationVipsResultOutput() GetApplicationVipsResultOutput {
	return o
}

func (o GetApplicationVipsResultOutput) ToGetApplicationVipsResultOutputWithContext(ctx context.Context) GetApplicationVipsResultOutput {
	return o
}

// The list of application_vips.
func (o GetApplicationVipsResultOutput) ApplicationVips() GetApplicationVipsApplicationVipArrayOutput {
	return o.ApplyT(func(v GetApplicationVipsResult) []GetApplicationVipsApplicationVip { return v.ApplicationVips }).(GetApplicationVipsApplicationVipArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud VM cluster associated with the application virtual IP (VIP) address.
func (o GetApplicationVipsResultOutput) CloudVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationVipsResult) string { return v.CloudVmClusterId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetApplicationVipsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationVipsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetApplicationVipsResultOutput) Filters() GetApplicationVipsFilterArrayOutput {
	return o.ApplyT(func(v GetApplicationVipsResult) []GetApplicationVipsFilter { return v.Filters }).(GetApplicationVipsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetApplicationVipsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationVipsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current lifecycle state of the application virtual IP (VIP) address.
func (o GetApplicationVipsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationVipsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetApplicationVipsResultOutput{})
}
