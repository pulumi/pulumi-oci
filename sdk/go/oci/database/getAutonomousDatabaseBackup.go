// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Autonomous Database Backup resource in Oracle Cloud Infrastructure Database service.
//
// Gets information about the specified Autonomous Database backup.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetAutonomousDatabaseBackup(ctx, &database.GetAutonomousDatabaseBackupArgs{
//				AutonomousDatabaseBackupId: testAutonomousDatabaseBackupOciDatabaseAutonomousDatabaseBackup.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAutonomousDatabaseBackup(ctx *pulumi.Context, args *LookupAutonomousDatabaseBackupArgs, opts ...pulumi.InvokeOption) (*LookupAutonomousDatabaseBackupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAutonomousDatabaseBackupResult
	err := ctx.Invoke("oci:Database/getAutonomousDatabaseBackup:getAutonomousDatabaseBackup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAutonomousDatabaseBackup.
type LookupAutonomousDatabaseBackupArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
	AutonomousDatabaseBackupId string `pulumi:"autonomousDatabaseBackupId"`
}

// A collection of values returned by getAutonomousDatabaseBackup.
type LookupAutonomousDatabaseBackupResult struct {
	AutonomousDatabaseBackupId string `pulumi:"autonomousDatabaseBackupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database.
	AutonomousDatabaseId string `pulumi:"autonomousDatabaseId"`
	// Backup destination details
	BackupDestinationDetails []GetAutonomousDatabaseBackupBackupDestinationDetail `pulumi:"backupDestinationDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The size of the database in terabytes at the time the backup was taken.
	DatabaseSizeInTbs float64 `pulumi:"databaseSizeInTbs"`
	// A valid Oracle Database version for Autonomous Database.
	DbVersion string `pulumi:"dbVersion"`
	// The user-friendly name for the backup. The name does not have to be unique.
	DisplayName string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
	Id string `pulumi:"id"`
	// Indicates whether the backup is user-initiated or automatic.
	IsAutomatic      bool `pulumi:"isAutomatic"`
	IsLongTermBackup bool `pulumi:"isLongTermBackup"`
	// Indicates whether the backup can be used to restore the associated Autonomous Database.
	IsRestorable bool `pulumi:"isRestorable"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
	KeyStoreId string `pulumi:"keyStoreId"`
	// The wallet name for Oracle Key Vault.
	KeyStoreWalletName string `pulumi:"keyStoreWalletName"`
	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
	KmsKeyVersionId string `pulumi:"kmsKeyVersionId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Retention period, in days, for long-term backups
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
	// The backup size in terrabytes (TB).
	SizeInTbs float64 `pulumi:"sizeInTbs"`
	// The current state of the backup.
	State string `pulumi:"state"`
	// Timestamp until when the backup will be available
	TimeAvailableTill string `pulumi:"timeAvailableTill"`
	// The date and time the backup completed.
	TimeEnded string `pulumi:"timeEnded"`
	// The date and time the backup started.
	TimeStarted string `pulumi:"timeStarted"`
	// The type of backup.
	Type string `pulumi:"type"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
	VaultId string `pulumi:"vaultId"`
}

func LookupAutonomousDatabaseBackupOutput(ctx *pulumi.Context, args LookupAutonomousDatabaseBackupOutputArgs, opts ...pulumi.InvokeOption) LookupAutonomousDatabaseBackupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAutonomousDatabaseBackupResultOutput, error) {
			args := v.(LookupAutonomousDatabaseBackupArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupAutonomousDatabaseBackupResult
			secret, err := ctx.InvokePackageRaw("oci:Database/getAutonomousDatabaseBackup:getAutonomousDatabaseBackup", args, &rv, "", opts...)
			if err != nil {
				return LookupAutonomousDatabaseBackupResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupAutonomousDatabaseBackupResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupAutonomousDatabaseBackupResultOutput), nil
			}
			return output, nil
		}).(LookupAutonomousDatabaseBackupResultOutput)
}

// A collection of arguments for invoking getAutonomousDatabaseBackup.
type LookupAutonomousDatabaseBackupOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
	AutonomousDatabaseBackupId pulumi.StringInput `pulumi:"autonomousDatabaseBackupId"`
}

func (LookupAutonomousDatabaseBackupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutonomousDatabaseBackupArgs)(nil)).Elem()
}

// A collection of values returned by getAutonomousDatabaseBackup.
type LookupAutonomousDatabaseBackupResultOutput struct{ *pulumi.OutputState }

func (LookupAutonomousDatabaseBackupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutonomousDatabaseBackupResult)(nil)).Elem()
}

func (o LookupAutonomousDatabaseBackupResultOutput) ToLookupAutonomousDatabaseBackupResultOutput() LookupAutonomousDatabaseBackupResultOutput {
	return o
}

func (o LookupAutonomousDatabaseBackupResultOutput) ToLookupAutonomousDatabaseBackupResultOutputWithContext(ctx context.Context) LookupAutonomousDatabaseBackupResultOutput {
	return o
}

func (o LookupAutonomousDatabaseBackupResultOutput) AutonomousDatabaseBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.AutonomousDatabaseBackupId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database.
func (o LookupAutonomousDatabaseBackupResultOutput) AutonomousDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.AutonomousDatabaseId }).(pulumi.StringOutput)
}

// Backup destination details
func (o LookupAutonomousDatabaseBackupResultOutput) BackupDestinationDetails() GetAutonomousDatabaseBackupBackupDestinationDetailArrayOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) []GetAutonomousDatabaseBackupBackupDestinationDetail {
		return v.BackupDestinationDetails
	}).(GetAutonomousDatabaseBackupBackupDestinationDetailArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupAutonomousDatabaseBackupResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The size of the database in terabytes at the time the backup was taken.
func (o LookupAutonomousDatabaseBackupResultOutput) DatabaseSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) float64 { return v.DatabaseSizeInTbs }).(pulumi.Float64Output)
}

// A valid Oracle Database version for Autonomous Database.
func (o LookupAutonomousDatabaseBackupResultOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.DbVersion }).(pulumi.StringOutput)
}

// The user-friendly name for the backup. The name does not have to be unique.
func (o LookupAutonomousDatabaseBackupResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
func (o LookupAutonomousDatabaseBackupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the backup is user-initiated or automatic.
func (o LookupAutonomousDatabaseBackupResultOutput) IsAutomatic() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) bool { return v.IsAutomatic }).(pulumi.BoolOutput)
}

func (o LookupAutonomousDatabaseBackupResultOutput) IsLongTermBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) bool { return v.IsLongTermBackup }).(pulumi.BoolOutput)
}

// Indicates whether the backup can be used to restore the associated Autonomous Database.
func (o LookupAutonomousDatabaseBackupResultOutput) IsRestorable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) bool { return v.IsRestorable }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
func (o LookupAutonomousDatabaseBackupResultOutput) KeyStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.KeyStoreId }).(pulumi.StringOutput)
}

// The wallet name for Oracle Key Vault.
func (o LookupAutonomousDatabaseBackupResultOutput) KeyStoreWalletName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.KeyStoreWalletName }).(pulumi.StringOutput)
}

// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
func (o LookupAutonomousDatabaseBackupResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
func (o LookupAutonomousDatabaseBackupResultOutput) KmsKeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.KmsKeyVersionId }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o LookupAutonomousDatabaseBackupResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Retention period, in days, for long-term backups
func (o LookupAutonomousDatabaseBackupResultOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) int { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// The backup size in terrabytes (TB).
func (o LookupAutonomousDatabaseBackupResultOutput) SizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) float64 { return v.SizeInTbs }).(pulumi.Float64Output)
}

// The current state of the backup.
func (o LookupAutonomousDatabaseBackupResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.State }).(pulumi.StringOutput)
}

// Timestamp until when the backup will be available
func (o LookupAutonomousDatabaseBackupResultOutput) TimeAvailableTill() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.TimeAvailableTill }).(pulumi.StringOutput)
}

// The date and time the backup completed.
func (o LookupAutonomousDatabaseBackupResultOutput) TimeEnded() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.TimeEnded }).(pulumi.StringOutput)
}

// The date and time the backup started.
func (o LookupAutonomousDatabaseBackupResultOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.TimeStarted }).(pulumi.StringOutput)
}

// The type of backup.
func (o LookupAutonomousDatabaseBackupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.Type }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
func (o LookupAutonomousDatabaseBackupResultOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseBackupResult) string { return v.VaultId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAutonomousDatabaseBackupResultOutput{})
}
