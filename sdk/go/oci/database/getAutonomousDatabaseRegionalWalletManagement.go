// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Autonomous Database Regional Wallet Management resource in Oracle Cloud Infrastructure Database service.
//
// Gets the Autonomous Database regional wallet details.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetAutonomousDatabaseRegionalWalletManagement(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAutonomousDatabaseRegionalWalletManagement(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*LookupAutonomousDatabaseRegionalWalletManagementResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAutonomousDatabaseRegionalWalletManagementResult
	err := ctx.Invoke("oci:Database/getAutonomousDatabaseRegionalWalletManagement:getAutonomousDatabaseRegionalWalletManagement", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getAutonomousDatabaseRegionalWalletManagement.
type LookupAutonomousDatabaseRegionalWalletManagementResult struct {
	GracePeriod  int    `pulumi:"gracePeriod"`
	Id           string `pulumi:"id"`
	ShouldRotate bool   `pulumi:"shouldRotate"`
	// The current lifecycle state of the Autonomous Database wallet.
	State string `pulumi:"state"`
	// The date and time the wallet was last rotated.
	TimeRotated string `pulumi:"timeRotated"`
}

func LookupAutonomousDatabaseRegionalWalletManagementOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) LookupAutonomousDatabaseRegionalWalletManagementResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (LookupAutonomousDatabaseRegionalWalletManagementResultOutput, error) {
		opts = internal.PkgInvokeDefaultOpts(opts)
		var rv LookupAutonomousDatabaseRegionalWalletManagementResult
		secret, err := ctx.InvokePackageRaw("oci:Database/getAutonomousDatabaseRegionalWalletManagement:getAutonomousDatabaseRegionalWalletManagement", nil, &rv, "", opts...)
		if err != nil {
			return LookupAutonomousDatabaseRegionalWalletManagementResultOutput{}, err
		}

		output := pulumi.ToOutput(rv).(LookupAutonomousDatabaseRegionalWalletManagementResultOutput)
		if secret {
			return pulumi.ToSecret(output).(LookupAutonomousDatabaseRegionalWalletManagementResultOutput), nil
		}
		return output, nil
	}).(LookupAutonomousDatabaseRegionalWalletManagementResultOutput)
}

// A collection of values returned by getAutonomousDatabaseRegionalWalletManagement.
type LookupAutonomousDatabaseRegionalWalletManagementResultOutput struct{ *pulumi.OutputState }

func (LookupAutonomousDatabaseRegionalWalletManagementResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutonomousDatabaseRegionalWalletManagementResult)(nil)).Elem()
}

func (o LookupAutonomousDatabaseRegionalWalletManagementResultOutput) ToLookupAutonomousDatabaseRegionalWalletManagementResultOutput() LookupAutonomousDatabaseRegionalWalletManagementResultOutput {
	return o
}

func (o LookupAutonomousDatabaseRegionalWalletManagementResultOutput) ToLookupAutonomousDatabaseRegionalWalletManagementResultOutputWithContext(ctx context.Context) LookupAutonomousDatabaseRegionalWalletManagementResultOutput {
	return o
}

func (o LookupAutonomousDatabaseRegionalWalletManagementResultOutput) GracePeriod() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseRegionalWalletManagementResult) int { return v.GracePeriod }).(pulumi.IntOutput)
}

func (o LookupAutonomousDatabaseRegionalWalletManagementResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseRegionalWalletManagementResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAutonomousDatabaseRegionalWalletManagementResultOutput) ShouldRotate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseRegionalWalletManagementResult) bool { return v.ShouldRotate }).(pulumi.BoolOutput)
}

// The current lifecycle state of the Autonomous Database wallet.
func (o LookupAutonomousDatabaseRegionalWalletManagementResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseRegionalWalletManagementResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the wallet was last rotated.
func (o LookupAutonomousDatabaseRegionalWalletManagementResultOutput) TimeRotated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutonomousDatabaseRegionalWalletManagementResult) string { return v.TimeRotated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAutonomousDatabaseRegionalWalletManagementResultOutput{})
}
