// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Cloud Exadata Infrastructure resource in Oracle Cloud Infrastructure Database service.
//
// Gets information about the specified cloud Exadata infrastructure resource. Applies to Exadata Cloud Service instances and Autonomous Database on dedicated Exadata infrastructure only.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetCloudExadataInfrastructure(ctx, &database.GetCloudExadataInfrastructureArgs{
//				CloudExadataInfrastructureId: testCloudExadataInfrastructureOciDatabaseCloudExadataInfrastructure.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCloudExadataInfrastructure(ctx *pulumi.Context, args *LookupCloudExadataInfrastructureArgs, opts ...pulumi.InvokeOption) (*LookupCloudExadataInfrastructureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCloudExadataInfrastructureResult
	err := ctx.Invoke("oci:Database/getCloudExadataInfrastructure:getCloudExadataInfrastructure", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudExadataInfrastructure.
type LookupCloudExadataInfrastructureArgs struct {
	// The cloud Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudExadataInfrastructureId string `pulumi:"cloudExadataInfrastructureId"`
}

// A collection of values returned by getCloudExadataInfrastructure.
type LookupCloudExadataInfrastructureResult struct {
	// The requested number of additional storage servers activated for the Exadata infrastructure.
	ActivatedStorageCount int `pulumi:"activatedStorageCount"`
	// The requested number of additional storage servers for the Exadata infrastructure.
	AdditionalStorageCount int `pulumi:"additionalStorageCount"`
	// The name of the availability domain that the cloud Exadata infrastructure resource is located in.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
	AvailableStorageSizeInGbs    int    `pulumi:"availableStorageSizeInGbs"`
	CloudExadataInfrastructureId string `pulumi:"cloudExadataInfrastructureId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Exadata Infrastructure.
	ClusterPlacementGroupId string `pulumi:"clusterPlacementGroupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The number of compute servers for the cloud Exadata infrastructure.
	ComputeCount int `pulumi:"computeCount"`
	// The total number of CPU cores allocated.
	CpuCount int `pulumi:"cpuCount"`
	// The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
	CustomerContacts []GetCloudExadataInfrastructureCustomerContact `pulumi:"customerContacts"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs float64 `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs int `pulumi:"dbNodeStorageSizeInGbs"`
	// The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
	DbServerVersion string `pulumi:"dbServerVersion"`
	// Details of the file system configuration of the Exadata infrastructure.
	DefinedFileSystemConfigurations []GetCloudExadataInfrastructureDefinedFileSystemConfiguration `pulumi:"definedFileSystemConfigurations"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure resource.
	Id string `pulumi:"id"`
	// If true, the infrastructure is using granular maintenance scheduling preference.
	IsSchedulingPolicyAssociated bool `pulumi:"isSchedulingPolicyAssociated"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
	LastMaintenanceRunId string `pulumi:"lastMaintenanceRunId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindows []GetCloudExadataInfrastructureMaintenanceWindow `pulumi:"maintenanceWindows"`
	// The total number of CPU cores available.
	MaxCpuCount int `pulumi:"maxCpuCount"`
	// The total available DATA disk group size.
	MaxDataStorageInTbs float64 `pulumi:"maxDataStorageInTbs"`
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs int `pulumi:"maxDbNodeStorageInGbs"`
	// The total memory available in GBs.
	MaxMemoryInGbs int `pulumi:"maxMemoryInGbs"`
	// The memory allocated in GBs.
	MemorySizeInGbs int `pulumi:"memorySizeInGbs"`
	// The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
	MonthlyDbServerVersion string `pulumi:"monthlyDbServerVersion"`
	// The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
	MonthlyStorageServerVersion string `pulumi:"monthlyStorageServerVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
	NextMaintenanceRunId string `pulumi:"nextMaintenanceRunId"`
	// The model name of the cloud Exadata infrastructure resource.
	Shape string `pulumi:"shape"`
	// The current lifecycle state of the cloud Exadata infrastructure resource.
	State string `pulumi:"state"`
	// The number of storage servers for the cloud Exadata infrastructure.
	StorageCount int `pulumi:"storageCount"`
	// The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
	StorageServerVersion string `pulumi:"storageServerVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
	SubscriptionId string `pulumi:"subscriptionId"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the cloud Exadata infrastructure resource was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
	TotalStorageSizeInGbs int `pulumi:"totalStorageSizeInGbs"`
}

func LookupCloudExadataInfrastructureOutput(ctx *pulumi.Context, args LookupCloudExadataInfrastructureOutputArgs, opts ...pulumi.InvokeOption) LookupCloudExadataInfrastructureResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCloudExadataInfrastructureResultOutput, error) {
			args := v.(LookupCloudExadataInfrastructureArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getCloudExadataInfrastructure:getCloudExadataInfrastructure", args, LookupCloudExadataInfrastructureResultOutput{}, options).(LookupCloudExadataInfrastructureResultOutput), nil
		}).(LookupCloudExadataInfrastructureResultOutput)
}

// A collection of arguments for invoking getCloudExadataInfrastructure.
type LookupCloudExadataInfrastructureOutputArgs struct {
	// The cloud Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CloudExadataInfrastructureId pulumi.StringInput `pulumi:"cloudExadataInfrastructureId"`
}

func (LookupCloudExadataInfrastructureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudExadataInfrastructureArgs)(nil)).Elem()
}

// A collection of values returned by getCloudExadataInfrastructure.
type LookupCloudExadataInfrastructureResultOutput struct{ *pulumi.OutputState }

func (LookupCloudExadataInfrastructureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudExadataInfrastructureResult)(nil)).Elem()
}

func (o LookupCloudExadataInfrastructureResultOutput) ToLookupCloudExadataInfrastructureResultOutput() LookupCloudExadataInfrastructureResultOutput {
	return o
}

func (o LookupCloudExadataInfrastructureResultOutput) ToLookupCloudExadataInfrastructureResultOutputWithContext(ctx context.Context) LookupCloudExadataInfrastructureResultOutput {
	return o
}

// The requested number of additional storage servers activated for the Exadata infrastructure.
func (o LookupCloudExadataInfrastructureResultOutput) ActivatedStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.ActivatedStorageCount }).(pulumi.IntOutput)
}

// The requested number of additional storage servers for the Exadata infrastructure.
func (o LookupCloudExadataInfrastructureResultOutput) AdditionalStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.AdditionalStorageCount }).(pulumi.IntOutput)
}

// The name of the availability domain that the cloud Exadata infrastructure resource is located in.
func (o LookupCloudExadataInfrastructureResultOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
func (o LookupCloudExadataInfrastructureResultOutput) AvailableStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.AvailableStorageSizeInGbs }).(pulumi.IntOutput)
}

func (o LookupCloudExadataInfrastructureResultOutput) CloudExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.CloudExadataInfrastructureId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Exadata Infrastructure.
func (o LookupCloudExadataInfrastructureResultOutput) ClusterPlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.ClusterPlacementGroupId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupCloudExadataInfrastructureResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The number of compute servers for the cloud Exadata infrastructure.
func (o LookupCloudExadataInfrastructureResultOutput) ComputeCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.ComputeCount }).(pulumi.IntOutput)
}

// The total number of CPU cores allocated.
func (o LookupCloudExadataInfrastructureResultOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.CpuCount }).(pulumi.IntOutput)
}

// The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
func (o LookupCloudExadataInfrastructureResultOutput) CustomerContacts() GetCloudExadataInfrastructureCustomerContactArrayOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) []GetCloudExadataInfrastructureCustomerContact {
		return v.CustomerContacts
	}).(GetCloudExadataInfrastructureCustomerContactArrayOutput)
}

// Size, in terabytes, of the DATA disk group.
func (o LookupCloudExadataInfrastructureResultOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) float64 { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The local node storage allocated in GBs.
func (o LookupCloudExadataInfrastructureResultOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
func (o LookupCloudExadataInfrastructureResultOutput) DbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.DbServerVersion }).(pulumi.StringOutput)
}

// Details of the file system configuration of the Exadata infrastructure.
func (o LookupCloudExadataInfrastructureResultOutput) DefinedFileSystemConfigurations() GetCloudExadataInfrastructureDefinedFileSystemConfigurationArrayOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) []GetCloudExadataInfrastructureDefinedFileSystemConfiguration {
		return v.DefinedFileSystemConfigurations
	}).(GetCloudExadataInfrastructureDefinedFileSystemConfigurationArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o LookupCloudExadataInfrastructureResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
func (o LookupCloudExadataInfrastructureResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupCloudExadataInfrastructureResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure resource.
func (o LookupCloudExadataInfrastructureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.Id }).(pulumi.StringOutput)
}

// If true, the infrastructure is using granular maintenance scheduling preference.
func (o LookupCloudExadataInfrastructureResultOutput) IsSchedulingPolicyAssociated() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) bool { return v.IsSchedulingPolicyAssociated }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
func (o LookupCloudExadataInfrastructureResultOutput) LastMaintenanceRunId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.LastMaintenanceRunId }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o LookupCloudExadataInfrastructureResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
func (o LookupCloudExadataInfrastructureResultOutput) MaintenanceWindows() GetCloudExadataInfrastructureMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) []GetCloudExadataInfrastructureMaintenanceWindow {
		return v.MaintenanceWindows
	}).(GetCloudExadataInfrastructureMaintenanceWindowArrayOutput)
}

// The total number of CPU cores available.
func (o LookupCloudExadataInfrastructureResultOutput) MaxCpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.MaxCpuCount }).(pulumi.IntOutput)
}

// The total available DATA disk group size.
func (o LookupCloudExadataInfrastructureResultOutput) MaxDataStorageInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) float64 { return v.MaxDataStorageInTbs }).(pulumi.Float64Output)
}

// The total local node storage available in GBs.
func (o LookupCloudExadataInfrastructureResultOutput) MaxDbNodeStorageInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.MaxDbNodeStorageInGbs }).(pulumi.IntOutput)
}

// The total memory available in GBs.
func (o LookupCloudExadataInfrastructureResultOutput) MaxMemoryInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.MaxMemoryInGbs }).(pulumi.IntOutput)
}

// The memory allocated in GBs.
func (o LookupCloudExadataInfrastructureResultOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
func (o LookupCloudExadataInfrastructureResultOutput) MonthlyDbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.MonthlyDbServerVersion }).(pulumi.StringOutput)
}

// The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
func (o LookupCloudExadataInfrastructureResultOutput) MonthlyStorageServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.MonthlyStorageServerVersion }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
func (o LookupCloudExadataInfrastructureResultOutput) NextMaintenanceRunId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.NextMaintenanceRunId }).(pulumi.StringOutput)
}

// The model name of the cloud Exadata infrastructure resource.
func (o LookupCloudExadataInfrastructureResultOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.Shape }).(pulumi.StringOutput)
}

// The current lifecycle state of the cloud Exadata infrastructure resource.
func (o LookupCloudExadataInfrastructureResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.State }).(pulumi.StringOutput)
}

// The number of storage servers for the cloud Exadata infrastructure.
func (o LookupCloudExadataInfrastructureResultOutput) StorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.StorageCount }).(pulumi.IntOutput)
}

// The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
func (o LookupCloudExadataInfrastructureResultOutput) StorageServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.StorageServerVersion }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
func (o LookupCloudExadataInfrastructureResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o LookupCloudExadataInfrastructureResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the cloud Exadata infrastructure resource was created.
func (o LookupCloudExadataInfrastructureResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
func (o LookupCloudExadataInfrastructureResultOutput) TotalStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudExadataInfrastructureResult) int { return v.TotalStorageSizeInGbs }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudExadataInfrastructureResultOutput{})
}
