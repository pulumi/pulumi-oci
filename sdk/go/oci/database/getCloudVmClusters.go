// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Cloud Vm Clusters in Oracle Cloud Infrastructure Database service.
//
// Gets a list of the cloud VM clusters in the specified compartment. Applies to Exadata Cloud Service instances and Autonomous Database on dedicated Exadata infrastructure only.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetCloudVmClusters(ctx, &database.GetCloudVmClustersArgs{
//				CompartmentId:                _var.Compartment_id,
//				CloudExadataInfrastructureId: pulumi.StringRef(oci_database_cloud_exadata_infrastructure.Test_cloud_exadata_infrastructure.Id),
//				DisplayName:                  pulumi.StringRef(_var.Cloud_vm_cluster_display_name),
//				State:                        pulumi.StringRef(_var.Cloud_vm_cluster_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCloudVmClusters(ctx *pulumi.Context, args *GetCloudVmClustersArgs, opts ...pulumi.InvokeOption) (*GetCloudVmClustersResult, error) {
	var rv GetCloudVmClustersResult
	err := ctx.Invoke("oci:Database/getCloudVmClusters:getCloudVmClusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudVmClusters.
type GetCloudVmClustersArgs struct {
	// If provided, filters the results for the specified cloud Exadata infrastructure.
	CloudExadataInfrastructureId *string `pulumi:"cloudExadataInfrastructureId"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetCloudVmClustersFilter `pulumi:"filters"`
	// A filter to return only cloud VM clusters that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getCloudVmClusters.
type GetCloudVmClustersResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure.
	CloudExadataInfrastructureId *string `pulumi:"cloudExadataInfrastructureId"`
	// The list of cloud_vm_clusters.
	CloudVmClusters []GetCloudVmClustersCloudVmCluster `pulumi:"cloudVmClusters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The user-friendly name for the cloud VM cluster. The name does not need to be unique.
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetCloudVmClustersFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the cloud VM cluster.
	State *string `pulumi:"state"`
}

func GetCloudVmClustersOutput(ctx *pulumi.Context, args GetCloudVmClustersOutputArgs, opts ...pulumi.InvokeOption) GetCloudVmClustersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCloudVmClustersResult, error) {
			args := v.(GetCloudVmClustersArgs)
			r, err := GetCloudVmClusters(ctx, &args, opts...)
			var s GetCloudVmClustersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCloudVmClustersResultOutput)
}

// A collection of arguments for invoking getCloudVmClusters.
type GetCloudVmClustersOutputArgs struct {
	// If provided, filters the results for the specified cloud Exadata infrastructure.
	CloudExadataInfrastructureId pulumi.StringPtrInput `pulumi:"cloudExadataInfrastructureId"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput              `pulumi:"displayName"`
	Filters     GetCloudVmClustersFilterArrayInput `pulumi:"filters"`
	// A filter to return only cloud VM clusters that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetCloudVmClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudVmClustersArgs)(nil)).Elem()
}

// A collection of values returned by getCloudVmClusters.
type GetCloudVmClustersResultOutput struct{ *pulumi.OutputState }

func (GetCloudVmClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudVmClustersResult)(nil)).Elem()
}

func (o GetCloudVmClustersResultOutput) ToGetCloudVmClustersResultOutput() GetCloudVmClustersResultOutput {
	return o
}

func (o GetCloudVmClustersResultOutput) ToGetCloudVmClustersResultOutputWithContext(ctx context.Context) GetCloudVmClustersResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure.
func (o GetCloudVmClustersResultOutput) CloudExadataInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCloudVmClustersResult) *string { return v.CloudExadataInfrastructureId }).(pulumi.StringPtrOutput)
}

// The list of cloud_vm_clusters.
func (o GetCloudVmClustersResultOutput) CloudVmClusters() GetCloudVmClustersCloudVmClusterArrayOutput {
	return o.ApplyT(func(v GetCloudVmClustersResult) []GetCloudVmClustersCloudVmCluster { return v.CloudVmClusters }).(GetCloudVmClustersCloudVmClusterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetCloudVmClustersResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudVmClustersResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The user-friendly name for the cloud VM cluster. The name does not need to be unique.
func (o GetCloudVmClustersResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCloudVmClustersResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetCloudVmClustersResultOutput) Filters() GetCloudVmClustersFilterArrayOutput {
	return o.ApplyT(func(v GetCloudVmClustersResult) []GetCloudVmClustersFilter { return v.Filters }).(GetCloudVmClustersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCloudVmClustersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudVmClustersResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the cloud VM cluster.
func (o GetCloudVmClustersResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCloudVmClustersResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudVmClustersResultOutput{})
}
