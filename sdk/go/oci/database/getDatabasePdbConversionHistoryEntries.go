// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Database Pdb Conversion History Entries in Oracle Cloud Infrastructure Database service.
//
// Gets the pluggable database conversion history for a specified database in a bare metal or virtual machine DB system.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetDatabasePdbConversionHistoryEntries(ctx, &database.GetDatabasePdbConversionHistoryEntriesArgs{
//				DatabaseId:          testDatabase.Id,
//				PdbConversionAction: pulumi.StringRef(databasePdbConversionHistoryEntryPdbConversionAction),
//				State:               pulumi.StringRef(databasePdbConversionHistoryEntryState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDatabasePdbConversionHistoryEntries(ctx *pulumi.Context, args *GetDatabasePdbConversionHistoryEntriesArgs, opts ...pulumi.InvokeOption) (*GetDatabasePdbConversionHistoryEntriesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatabasePdbConversionHistoryEntriesResult
	err := ctx.Invoke("oci:Database/getDatabasePdbConversionHistoryEntries:getDatabasePdbConversionHistoryEntries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabasePdbConversionHistoryEntries.
type GetDatabasePdbConversionHistoryEntriesArgs struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DatabaseId string                                         `pulumi:"databaseId"`
	Filters    []GetDatabasePdbConversionHistoryEntriesFilter `pulumi:"filters"`
	// A filter to return only the pluggable database conversion history entries that match the specified conversion action. For example, you can use this filter to return only entries for the precheck operation.
	PdbConversionAction *string `pulumi:"pdbConversionAction"`
	// A filter to return only the pluggable database conversion history entries that match the specified lifecycle state. For example, you can use this filter to return only entries in the "failed" lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDatabasePdbConversionHistoryEntries.
type GetDatabasePdbConversionHistoryEntriesResult struct {
	DatabaseId string                                         `pulumi:"databaseId"`
	Filters    []GetDatabasePdbConversionHistoryEntriesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string  `pulumi:"id"`
	PdbConversionAction *string `pulumi:"pdbConversionAction"`
	// The list of pdb_conversion_history_entries.
	PdbConversionHistoryEntries []GetDatabasePdbConversionHistoryEntriesPdbConversionHistoryEntry `pulumi:"pdbConversionHistoryEntries"`
	// Status of an operation performed during the conversion of a non-container database to a pluggable database.
	State *string `pulumi:"state"`
}

func GetDatabasePdbConversionHistoryEntriesOutput(ctx *pulumi.Context, args GetDatabasePdbConversionHistoryEntriesOutputArgs, opts ...pulumi.InvokeOption) GetDatabasePdbConversionHistoryEntriesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDatabasePdbConversionHistoryEntriesResultOutput, error) {
			args := v.(GetDatabasePdbConversionHistoryEntriesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getDatabasePdbConversionHistoryEntries:getDatabasePdbConversionHistoryEntries", args, GetDatabasePdbConversionHistoryEntriesResultOutput{}, options).(GetDatabasePdbConversionHistoryEntriesResultOutput), nil
		}).(GetDatabasePdbConversionHistoryEntriesResultOutput)
}

// A collection of arguments for invoking getDatabasePdbConversionHistoryEntries.
type GetDatabasePdbConversionHistoryEntriesOutputArgs struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DatabaseId pulumi.StringInput                                     `pulumi:"databaseId"`
	Filters    GetDatabasePdbConversionHistoryEntriesFilterArrayInput `pulumi:"filters"`
	// A filter to return only the pluggable database conversion history entries that match the specified conversion action. For example, you can use this filter to return only entries for the precheck operation.
	PdbConversionAction pulumi.StringPtrInput `pulumi:"pdbConversionAction"`
	// A filter to return only the pluggable database conversion history entries that match the specified lifecycle state. For example, you can use this filter to return only entries in the "failed" lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDatabasePdbConversionHistoryEntriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasePdbConversionHistoryEntriesArgs)(nil)).Elem()
}

// A collection of values returned by getDatabasePdbConversionHistoryEntries.
type GetDatabasePdbConversionHistoryEntriesResultOutput struct{ *pulumi.OutputState }

func (GetDatabasePdbConversionHistoryEntriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasePdbConversionHistoryEntriesResult)(nil)).Elem()
}

func (o GetDatabasePdbConversionHistoryEntriesResultOutput) ToGetDatabasePdbConversionHistoryEntriesResultOutput() GetDatabasePdbConversionHistoryEntriesResultOutput {
	return o
}

func (o GetDatabasePdbConversionHistoryEntriesResultOutput) ToGetDatabasePdbConversionHistoryEntriesResultOutputWithContext(ctx context.Context) GetDatabasePdbConversionHistoryEntriesResultOutput {
	return o
}

func (o GetDatabasePdbConversionHistoryEntriesResultOutput) DatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasePdbConversionHistoryEntriesResult) string { return v.DatabaseId }).(pulumi.StringOutput)
}

func (o GetDatabasePdbConversionHistoryEntriesResultOutput) Filters() GetDatabasePdbConversionHistoryEntriesFilterArrayOutput {
	return o.ApplyT(func(v GetDatabasePdbConversionHistoryEntriesResult) []GetDatabasePdbConversionHistoryEntriesFilter {
		return v.Filters
	}).(GetDatabasePdbConversionHistoryEntriesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabasePdbConversionHistoryEntriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasePdbConversionHistoryEntriesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatabasePdbConversionHistoryEntriesResultOutput) PdbConversionAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabasePdbConversionHistoryEntriesResult) *string { return v.PdbConversionAction }).(pulumi.StringPtrOutput)
}

// The list of pdb_conversion_history_entries.
func (o GetDatabasePdbConversionHistoryEntriesResultOutput) PdbConversionHistoryEntries() GetDatabasePdbConversionHistoryEntriesPdbConversionHistoryEntryArrayOutput {
	return o.ApplyT(func(v GetDatabasePdbConversionHistoryEntriesResult) []GetDatabasePdbConversionHistoryEntriesPdbConversionHistoryEntry {
		return v.PdbConversionHistoryEntries
	}).(GetDatabasePdbConversionHistoryEntriesPdbConversionHistoryEntryArrayOutput)
}

// Status of an operation performed during the conversion of a non-container database to a pluggable database.
func (o GetDatabasePdbConversionHistoryEntriesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabasePdbConversionHistoryEntriesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabasePdbConversionHistoryEntriesResultOutput{})
}
