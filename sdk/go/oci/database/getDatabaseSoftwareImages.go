// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Database Software Images in Oracle Cloud Infrastructure Database service.
//
// Gets a list of the database software images in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetDatabaseSoftwareImages(ctx, &database.GetDatabaseSoftwareImagesArgs{
//				CompartmentId:      compartmentId,
//				DbSystemId:         pulumi.StringRef(testDbSystem.Id),
//				DisplayName:        pulumi.StringRef(databaseSoftwareImageDisplayName),
//				ImageShapeFamily:   pulumi.StringRef(databaseSoftwareImageImageShapeFamily),
//				ImageType:          pulumi.StringRef(databaseSoftwareImageImageType),
//				IsUpgradeSupported: pulumi.BoolRef(databaseSoftwareImageIsUpgradeSupported),
//				State:              pulumi.StringRef(databaseSoftwareImageState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDatabaseSoftwareImages(ctx *pulumi.Context, args *GetDatabaseSoftwareImagesArgs, opts ...pulumi.InvokeOption) (*GetDatabaseSoftwareImagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatabaseSoftwareImagesResult
	err := ctx.Invoke("oci:Database/getDatabaseSoftwareImages:getDatabaseSoftwareImages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseSoftwareImages.
type GetDatabaseSoftwareImagesArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
	DbSystemId *string `pulumi:"dbSystemId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetDatabaseSoftwareImagesFilter `pulumi:"filters"`
	// A filter to return only resources that match the given image shape family exactly.
	ImageShapeFamily *string `pulumi:"imageShapeFamily"`
	// A filter to return only resources that match the given image type exactly.
	ImageType *string `pulumi:"imageType"`
	// If provided, filters the results to the set of database versions which are supported for Upgrade.
	IsUpgradeSupported *bool `pulumi:"isUpgradeSupported"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDatabaseSoftwareImages.
type GetDatabaseSoftwareImagesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of database_software_images.
	DatabaseSoftwareImages []GetDatabaseSoftwareImagesDatabaseSoftwareImage `pulumi:"databaseSoftwareImages"`
	DbSystemId             *string                                          `pulumi:"dbSystemId"`
	// The user-friendly name for the database software image. The name does not have to be unique.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetDatabaseSoftwareImagesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// To what shape the image is meant for.
	ImageShapeFamily *string `pulumi:"imageShapeFamily"`
	// The type of software image. Can be grid or database.
	ImageType *string `pulumi:"imageType"`
	// True if this Database software image is supported for Upgrade.
	IsUpgradeSupported *bool `pulumi:"isUpgradeSupported"`
	// The current state of the database software image.
	State *string `pulumi:"state"`
}

func GetDatabaseSoftwareImagesOutput(ctx *pulumi.Context, args GetDatabaseSoftwareImagesOutputArgs, opts ...pulumi.InvokeOption) GetDatabaseSoftwareImagesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDatabaseSoftwareImagesResultOutput, error) {
			args := v.(GetDatabaseSoftwareImagesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getDatabaseSoftwareImages:getDatabaseSoftwareImages", args, GetDatabaseSoftwareImagesResultOutput{}, options).(GetDatabaseSoftwareImagesResultOutput), nil
		}).(GetDatabaseSoftwareImagesResultOutput)
}

// A collection of arguments for invoking getDatabaseSoftwareImages.
type GetDatabaseSoftwareImagesOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
	DbSystemId pulumi.StringPtrInput `pulumi:"dbSystemId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput                     `pulumi:"displayName"`
	Filters     GetDatabaseSoftwareImagesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given image shape family exactly.
	ImageShapeFamily pulumi.StringPtrInput `pulumi:"imageShapeFamily"`
	// A filter to return only resources that match the given image type exactly.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// If provided, filters the results to the set of database versions which are supported for Upgrade.
	IsUpgradeSupported pulumi.BoolPtrInput `pulumi:"isUpgradeSupported"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDatabaseSoftwareImagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseSoftwareImagesArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseSoftwareImages.
type GetDatabaseSoftwareImagesResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseSoftwareImagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseSoftwareImagesResult)(nil)).Elem()
}

func (o GetDatabaseSoftwareImagesResultOutput) ToGetDatabaseSoftwareImagesResultOutput() GetDatabaseSoftwareImagesResultOutput {
	return o
}

func (o GetDatabaseSoftwareImagesResultOutput) ToGetDatabaseSoftwareImagesResultOutputWithContext(ctx context.Context) GetDatabaseSoftwareImagesResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetDatabaseSoftwareImagesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseSoftwareImagesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of database_software_images.
func (o GetDatabaseSoftwareImagesResultOutput) DatabaseSoftwareImages() GetDatabaseSoftwareImagesDatabaseSoftwareImageArrayOutput {
	return o.ApplyT(func(v GetDatabaseSoftwareImagesResult) []GetDatabaseSoftwareImagesDatabaseSoftwareImage {
		return v.DatabaseSoftwareImages
	}).(GetDatabaseSoftwareImagesDatabaseSoftwareImageArrayOutput)
}

func (o GetDatabaseSoftwareImagesResultOutput) DbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseSoftwareImagesResult) *string { return v.DbSystemId }).(pulumi.StringPtrOutput)
}

// The user-friendly name for the database software image. The name does not have to be unique.
func (o GetDatabaseSoftwareImagesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseSoftwareImagesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDatabaseSoftwareImagesResultOutput) Filters() GetDatabaseSoftwareImagesFilterArrayOutput {
	return o.ApplyT(func(v GetDatabaseSoftwareImagesResult) []GetDatabaseSoftwareImagesFilter { return v.Filters }).(GetDatabaseSoftwareImagesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabaseSoftwareImagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseSoftwareImagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// To what shape the image is meant for.
func (o GetDatabaseSoftwareImagesResultOutput) ImageShapeFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseSoftwareImagesResult) *string { return v.ImageShapeFamily }).(pulumi.StringPtrOutput)
}

// The type of software image. Can be grid or database.
func (o GetDatabaseSoftwareImagesResultOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseSoftwareImagesResult) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// True if this Database software image is supported for Upgrade.
func (o GetDatabaseSoftwareImagesResultOutput) IsUpgradeSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDatabaseSoftwareImagesResult) *bool { return v.IsUpgradeSupported }).(pulumi.BoolPtrOutput)
}

// The current state of the database software image.
func (o GetDatabaseSoftwareImagesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseSoftwareImagesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseSoftwareImagesResultOutput{})
}
