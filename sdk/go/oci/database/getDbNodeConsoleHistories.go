// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Db Node Console Histories in Oracle Cloud Infrastructure Database service.
//
// Lists the console histories for the specified database node.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetDbNodeConsoleHistories(ctx, &database.GetDbNodeConsoleHistoriesArgs{
//				DbNodeId:    testDbNode.Id,
//				DisplayName: pulumi.StringRef(dbNodeConsoleHistoryDisplayName),
//				State:       pulumi.StringRef(dbNodeConsoleHistoryState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDbNodeConsoleHistories(ctx *pulumi.Context, args *GetDbNodeConsoleHistoriesArgs, opts ...pulumi.InvokeOption) (*GetDbNodeConsoleHistoriesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDbNodeConsoleHistoriesResult
	err := ctx.Invoke("oci:Database/getDbNodeConsoleHistories:getDbNodeConsoleHistories", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDbNodeConsoleHistories.
type GetDbNodeConsoleHistoriesArgs struct {
	// The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbNodeId string `pulumi:"dbNodeId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetDbNodeConsoleHistoriesFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDbNodeConsoleHistories.
type GetDbNodeConsoleHistoriesResult struct {
	// The list of console_history_collection.
	ConsoleHistoryCollections []GetDbNodeConsoleHistoriesConsoleHistoryCollection `pulumi:"consoleHistoryCollections"`
	// The OCID of the database node.
	DbNodeId string `pulumi:"dbNodeId"`
	// The user-friendly name for the console history. The name does not need to be unique.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetDbNodeConsoleHistoriesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the console history.
	State *string `pulumi:"state"`
}

func GetDbNodeConsoleHistoriesOutput(ctx *pulumi.Context, args GetDbNodeConsoleHistoriesOutputArgs, opts ...pulumi.InvokeOption) GetDbNodeConsoleHistoriesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDbNodeConsoleHistoriesResultOutput, error) {
			args := v.(GetDbNodeConsoleHistoriesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getDbNodeConsoleHistories:getDbNodeConsoleHistories", args, GetDbNodeConsoleHistoriesResultOutput{}, options).(GetDbNodeConsoleHistoriesResultOutput), nil
		}).(GetDbNodeConsoleHistoriesResultOutput)
}

// A collection of arguments for invoking getDbNodeConsoleHistories.
type GetDbNodeConsoleHistoriesOutputArgs struct {
	// The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbNodeId pulumi.StringInput `pulumi:"dbNodeId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput                     `pulumi:"displayName"`
	Filters     GetDbNodeConsoleHistoriesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDbNodeConsoleHistoriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbNodeConsoleHistoriesArgs)(nil)).Elem()
}

// A collection of values returned by getDbNodeConsoleHistories.
type GetDbNodeConsoleHistoriesResultOutput struct{ *pulumi.OutputState }

func (GetDbNodeConsoleHistoriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbNodeConsoleHistoriesResult)(nil)).Elem()
}

func (o GetDbNodeConsoleHistoriesResultOutput) ToGetDbNodeConsoleHistoriesResultOutput() GetDbNodeConsoleHistoriesResultOutput {
	return o
}

func (o GetDbNodeConsoleHistoriesResultOutput) ToGetDbNodeConsoleHistoriesResultOutputWithContext(ctx context.Context) GetDbNodeConsoleHistoriesResultOutput {
	return o
}

// The list of console_history_collection.
func (o GetDbNodeConsoleHistoriesResultOutput) ConsoleHistoryCollections() GetDbNodeConsoleHistoriesConsoleHistoryCollectionArrayOutput {
	return o.ApplyT(func(v GetDbNodeConsoleHistoriesResult) []GetDbNodeConsoleHistoriesConsoleHistoryCollection {
		return v.ConsoleHistoryCollections
	}).(GetDbNodeConsoleHistoriesConsoleHistoryCollectionArrayOutput)
}

// The OCID of the database node.
func (o GetDbNodeConsoleHistoriesResultOutput) DbNodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodeConsoleHistoriesResult) string { return v.DbNodeId }).(pulumi.StringOutput)
}

// The user-friendly name for the console history. The name does not need to be unique.
func (o GetDbNodeConsoleHistoriesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDbNodeConsoleHistoriesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDbNodeConsoleHistoriesResultOutput) Filters() GetDbNodeConsoleHistoriesFilterArrayOutput {
	return o.ApplyT(func(v GetDbNodeConsoleHistoriesResult) []GetDbNodeConsoleHistoriesFilter { return v.Filters }).(GetDbNodeConsoleHistoriesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDbNodeConsoleHistoriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodeConsoleHistoriesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the console history.
func (o GetDbNodeConsoleHistoriesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDbNodeConsoleHistoriesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDbNodeConsoleHistoriesResultOutput{})
}
