// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Db Systems in Oracle Cloud Infrastructure Database service.
//
// Lists the DB systems in the specified compartment. You can specify a `backupId` to list only the DB systems that support creating a database using this backup in this compartment.
//
// **Note:** Deprecated for Exadata Cloud Service systems. Use the [new resource model APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem.htm#exaflexsystem_topic-resource_model) instead.
//
// For Exadata Cloud Service instances, support for this API will end on May 15th, 2021. See [Switching an Exadata DB System to the New Resource Model and APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem_topic-resource_model_conversion.htm) for details on converting existing Exadata DB systems to the new resource model.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetDbSystems(ctx, &database.GetDbSystemsArgs{
//				CompartmentId:      compartmentId,
//				AvailabilityDomain: pulumi.StringRef(dbSystemAvailabilityDomain),
//				BackupId:           pulumi.StringRef(testBackup.Id),
//				DisplayName:        pulumi.StringRef(dbSystemDisplayName),
//				State:              pulumi.StringRef(dbSystemState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDbSystems(ctx *pulumi.Context, args *GetDbSystemsArgs, opts ...pulumi.InvokeOption) (*GetDbSystemsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDbSystemsResult
	err := ctx.Invoke("oci:Database/getDbSystems:getDbSystems", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDbSystems.
type GetDbSystemsArgs struct {
	// A filter to return only resources that match the given availability domain exactly.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup. Specify a backupId to list only the DB systems or DB homes that support creating a database using this backup in this compartment.
	BackupId *string `pulumi:"backupId"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetDbSystemsFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDbSystems.
type GetDbSystemsResult struct {
	// The name of the availability domain that the DB system is located in.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	BackupId           *string `pulumi:"backupId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of db_systems.
	DbSystems []GetDbSystemsDbSystem `pulumi:"dbSystems"`
	// The user-friendly name for the DB system. The name does not have to be unique.
	DisplayName *string              `pulumi:"displayName"`
	Filters     []GetDbSystemsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the DB system.
	State *string `pulumi:"state"`
}

func GetDbSystemsOutput(ctx *pulumi.Context, args GetDbSystemsOutputArgs, opts ...pulumi.InvokeOption) GetDbSystemsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDbSystemsResult, error) {
			args := v.(GetDbSystemsArgs)
			r, err := GetDbSystems(ctx, &args, opts...)
			var s GetDbSystemsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDbSystemsResultOutput)
}

// A collection of arguments for invoking getDbSystems.
type GetDbSystemsOutputArgs struct {
	// A filter to return only resources that match the given availability domain exactly.
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup. Specify a backupId to list only the DB systems or DB homes that support creating a database using this backup in this compartment.
	BackupId pulumi.StringPtrInput `pulumi:"backupId"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput        `pulumi:"displayName"`
	Filters     GetDbSystemsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDbSystemsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbSystemsArgs)(nil)).Elem()
}

// A collection of values returned by getDbSystems.
type GetDbSystemsResultOutput struct{ *pulumi.OutputState }

func (GetDbSystemsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbSystemsResult)(nil)).Elem()
}

func (o GetDbSystemsResultOutput) ToGetDbSystemsResultOutput() GetDbSystemsResultOutput {
	return o
}

func (o GetDbSystemsResultOutput) ToGetDbSystemsResultOutputWithContext(ctx context.Context) GetDbSystemsResultOutput {
	return o
}

// The name of the availability domain that the DB system is located in.
func (o GetDbSystemsResultOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDbSystemsResult) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

func (o GetDbSystemsResultOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDbSystemsResult) *string { return v.BackupId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetDbSystemsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSystemsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of db_systems.
func (o GetDbSystemsResultOutput) DbSystems() GetDbSystemsDbSystemArrayOutput {
	return o.ApplyT(func(v GetDbSystemsResult) []GetDbSystemsDbSystem { return v.DbSystems }).(GetDbSystemsDbSystemArrayOutput)
}

// The user-friendly name for the DB system. The name does not have to be unique.
func (o GetDbSystemsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDbSystemsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDbSystemsResultOutput) Filters() GetDbSystemsFilterArrayOutput {
	return o.ApplyT(func(v GetDbSystemsResult) []GetDbSystemsFilter { return v.Filters }).(GetDbSystemsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDbSystemsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSystemsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the DB system.
func (o GetDbSystemsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDbSystemsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDbSystemsResultOutput{})
}
