// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Db Systems Upgrade History Entries in Oracle Cloud Infrastructure Database service.
//
// Gets the history of the upgrade actions performed on the specified DB system.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetDbSystemsUpgradeHistoryEntries(ctx, &database.GetDbSystemsUpgradeHistoryEntriesArgs{
//				DbSystemId:    oci_database_db_system.Test_db_system.Id,
//				State:         pulumi.StringRef(_var.Db_systems_upgrade_history_entry_state),
//				UpgradeAction: pulumi.StringRef(_var.Db_systems_upgrade_history_entry_upgrade_action),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDbSystemsUpgradeHistoryEntries(ctx *pulumi.Context, args *GetDbSystemsUpgradeHistoryEntriesArgs, opts ...pulumi.InvokeOption) (*GetDbSystemsUpgradeHistoryEntriesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDbSystemsUpgradeHistoryEntriesResult
	err := ctx.Invoke("oci:Database/getDbSystemsUpgradeHistoryEntries:getDbSystemsUpgradeHistoryEntries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDbSystemsUpgradeHistoryEntries.
type GetDbSystemsUpgradeHistoryEntriesArgs struct {
	// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string                                    `pulumi:"dbSystemId"`
	Filters    []GetDbSystemsUpgradeHistoryEntriesFilter `pulumi:"filters"`
	// A filter to return only upgrade history entries that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
	// A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
	UpgradeAction *string `pulumi:"upgradeAction"`
}

// A collection of values returned by getDbSystemsUpgradeHistoryEntries.
type GetDbSystemsUpgradeHistoryEntriesResult struct {
	DbSystemId string `pulumi:"dbSystemId"`
	// The list of db_system_upgrade_history_entries.
	DbSystemUpgradeHistoryEntries []GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntry `pulumi:"dbSystemUpgradeHistoryEntries"`
	Filters                       []GetDbSystemsUpgradeHistoryEntriesFilter                      `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the action.
	State         *string `pulumi:"state"`
	UpgradeAction *string `pulumi:"upgradeAction"`
}

func GetDbSystemsUpgradeHistoryEntriesOutput(ctx *pulumi.Context, args GetDbSystemsUpgradeHistoryEntriesOutputArgs, opts ...pulumi.InvokeOption) GetDbSystemsUpgradeHistoryEntriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDbSystemsUpgradeHistoryEntriesResult, error) {
			args := v.(GetDbSystemsUpgradeHistoryEntriesArgs)
			r, err := GetDbSystemsUpgradeHistoryEntries(ctx, &args, opts...)
			var s GetDbSystemsUpgradeHistoryEntriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDbSystemsUpgradeHistoryEntriesResultOutput)
}

// A collection of arguments for invoking getDbSystemsUpgradeHistoryEntries.
type GetDbSystemsUpgradeHistoryEntriesOutputArgs struct {
	// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput                                `pulumi:"dbSystemId"`
	Filters    GetDbSystemsUpgradeHistoryEntriesFilterArrayInput `pulumi:"filters"`
	// A filter to return only upgrade history entries that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
	UpgradeAction pulumi.StringPtrInput `pulumi:"upgradeAction"`
}

func (GetDbSystemsUpgradeHistoryEntriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbSystemsUpgradeHistoryEntriesArgs)(nil)).Elem()
}

// A collection of values returned by getDbSystemsUpgradeHistoryEntries.
type GetDbSystemsUpgradeHistoryEntriesResultOutput struct{ *pulumi.OutputState }

func (GetDbSystemsUpgradeHistoryEntriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbSystemsUpgradeHistoryEntriesResult)(nil)).Elem()
}

func (o GetDbSystemsUpgradeHistoryEntriesResultOutput) ToGetDbSystemsUpgradeHistoryEntriesResultOutput() GetDbSystemsUpgradeHistoryEntriesResultOutput {
	return o
}

func (o GetDbSystemsUpgradeHistoryEntriesResultOutput) ToGetDbSystemsUpgradeHistoryEntriesResultOutputWithContext(ctx context.Context) GetDbSystemsUpgradeHistoryEntriesResultOutput {
	return o
}

func (o GetDbSystemsUpgradeHistoryEntriesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDbSystemsUpgradeHistoryEntriesResult] {
	return pulumix.Output[GetDbSystemsUpgradeHistoryEntriesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetDbSystemsUpgradeHistoryEntriesResultOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSystemsUpgradeHistoryEntriesResult) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// The list of db_system_upgrade_history_entries.
func (o GetDbSystemsUpgradeHistoryEntriesResultOutput) DbSystemUpgradeHistoryEntries() GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntryArrayOutput {
	return o.ApplyT(func(v GetDbSystemsUpgradeHistoryEntriesResult) []GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntry {
		return v.DbSystemUpgradeHistoryEntries
	}).(GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntryArrayOutput)
}

func (o GetDbSystemsUpgradeHistoryEntriesResultOutput) Filters() GetDbSystemsUpgradeHistoryEntriesFilterArrayOutput {
	return o.ApplyT(func(v GetDbSystemsUpgradeHistoryEntriesResult) []GetDbSystemsUpgradeHistoryEntriesFilter {
		return v.Filters
	}).(GetDbSystemsUpgradeHistoryEntriesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDbSystemsUpgradeHistoryEntriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSystemsUpgradeHistoryEntriesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the action.
func (o GetDbSystemsUpgradeHistoryEntriesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDbSystemsUpgradeHistoryEntriesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetDbSystemsUpgradeHistoryEntriesResultOutput) UpgradeAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDbSystemsUpgradeHistoryEntriesResult) *string { return v.UpgradeAction }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDbSystemsUpgradeHistoryEntriesResultOutput{})
}
