// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Exadata Infrastructure Download Config File resource in Oracle Cloud Infrastructure Database service.
//
// Downloads the configuration file for the specified Exadata Cloud@Customer infrastructure.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetExadataInfrastructureDownloadConfigFile(ctx, &database.GetExadataInfrastructureDownloadConfigFileArgs{
//				ExadataInfrastructureId: testExadataInfrastructure.Id,
//				Base64EncodeContent:     pulumi.BoolRef(false),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetExadataInfrastructureDownloadConfigFile(ctx *pulumi.Context, args *GetExadataInfrastructureDownloadConfigFileArgs, opts ...pulumi.InvokeOption) (*GetExadataInfrastructureDownloadConfigFileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExadataInfrastructureDownloadConfigFileResult
	err := ctx.Invoke("oci:Database/getExadataInfrastructureDownloadConfigFile:getExadataInfrastructureDownloadConfigFile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExadataInfrastructureDownloadConfigFile.
type GetExadataInfrastructureDownloadConfigFileArgs struct {
	Base64EncodeContent *bool `pulumi:"base64EncodeContent"`
	// The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExadataInfrastructureId string `pulumi:"exadataInfrastructureId"`
}

// A collection of values returned by getExadataInfrastructureDownloadConfigFile.
type GetExadataInfrastructureDownloadConfigFileResult struct {
	Base64EncodeContent *bool `pulumi:"base64EncodeContent"`
	// content of the downloaded config file for exadata infrastructure. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
	Content                 string `pulumi:"content"`
	ExadataInfrastructureId string `pulumi:"exadataInfrastructureId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetExadataInfrastructureDownloadConfigFileOutput(ctx *pulumi.Context, args GetExadataInfrastructureDownloadConfigFileOutputArgs, opts ...pulumi.InvokeOption) GetExadataInfrastructureDownloadConfigFileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetExadataInfrastructureDownloadConfigFileResult, error) {
			args := v.(GetExadataInfrastructureDownloadConfigFileArgs)
			r, err := GetExadataInfrastructureDownloadConfigFile(ctx, &args, opts...)
			var s GetExadataInfrastructureDownloadConfigFileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetExadataInfrastructureDownloadConfigFileResultOutput)
}

// A collection of arguments for invoking getExadataInfrastructureDownloadConfigFile.
type GetExadataInfrastructureDownloadConfigFileOutputArgs struct {
	Base64EncodeContent pulumi.BoolPtrInput `pulumi:"base64EncodeContent"`
	// The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExadataInfrastructureId pulumi.StringInput `pulumi:"exadataInfrastructureId"`
}

func (GetExadataInfrastructureDownloadConfigFileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExadataInfrastructureDownloadConfigFileArgs)(nil)).Elem()
}

// A collection of values returned by getExadataInfrastructureDownloadConfigFile.
type GetExadataInfrastructureDownloadConfigFileResultOutput struct{ *pulumi.OutputState }

func (GetExadataInfrastructureDownloadConfigFileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExadataInfrastructureDownloadConfigFileResult)(nil)).Elem()
}

func (o GetExadataInfrastructureDownloadConfigFileResultOutput) ToGetExadataInfrastructureDownloadConfigFileResultOutput() GetExadataInfrastructureDownloadConfigFileResultOutput {
	return o
}

func (o GetExadataInfrastructureDownloadConfigFileResultOutput) ToGetExadataInfrastructureDownloadConfigFileResultOutputWithContext(ctx context.Context) GetExadataInfrastructureDownloadConfigFileResultOutput {
	return o
}

func (o GetExadataInfrastructureDownloadConfigFileResultOutput) Base64EncodeContent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetExadataInfrastructureDownloadConfigFileResult) *bool { return v.Base64EncodeContent }).(pulumi.BoolPtrOutput)
}

// content of the downloaded config file for exadata infrastructure. If `base64EncodeContent` is set to `true`, then this content will be base64 encoded.
func (o GetExadataInfrastructureDownloadConfigFileResultOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetExadataInfrastructureDownloadConfigFileResult) string { return v.Content }).(pulumi.StringOutput)
}

func (o GetExadataInfrastructureDownloadConfigFileResultOutput) ExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExadataInfrastructureDownloadConfigFileResult) string { return v.ExadataInfrastructureId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetExadataInfrastructureDownloadConfigFileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExadataInfrastructureDownloadConfigFileResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExadataInfrastructureDownloadConfigFileResultOutput{})
}
