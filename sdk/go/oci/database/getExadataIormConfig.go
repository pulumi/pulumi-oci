// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Exadata Iorm Config resource in Oracle Cloud Infrastructure Database service.
//
// Gets the IORM configuration settings for the specified cloud Exadata DB system.
// All Exadata service instances have default IORM settings.
//
// **Note:** Deprecated for Exadata Cloud Service systems. Use the [new resource model APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem.htm#exaflexsystem_topic-resource_model) instead.
//
// For Exadata Cloud Service instances, support for this API will end on May 15th, 2021. See [Switching an Exadata DB System to the New Resource Model and APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem_topic-resource_model_conversion.htm) for details on converting existing Exadata DB systems to the new resource model.
//
// The [GetCloudVmClusterIormConfig](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/GetCloudVmClusterIormConfig/) API is used for this operation with Exadata systems using the
// new resource model.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetExadataIormConfig(ctx, &database.GetExadataIormConfigArgs{
//				DbSystemId: testDbSystem.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupExadataIormConfig(ctx *pulumi.Context, args *LookupExadataIormConfigArgs, opts ...pulumi.InvokeOption) (*LookupExadataIormConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupExadataIormConfigResult
	err := ctx.Invoke("oci:Database/getExadataIormConfig:getExadataIormConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExadataIormConfig.
type LookupExadataIormConfigArgs struct {
	// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId string `pulumi:"dbSystemId"`
}

// A collection of values returned by getExadataIormConfig.
type LookupExadataIormConfigResult struct {
	// An array of IORM settings for all the database in the Exadata DB system.
	DbPlans    []GetExadataIormConfigDbPlan `pulumi:"dbPlans"`
	DbSystemId string                       `pulumi:"dbSystemId"`
	Id         string                       `pulumi:"id"`
	// Additional information about the current `lifecycleState`.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The current value for the IORM objective. The default is `AUTO`.
	Objective string `pulumi:"objective"`
	// The current state of IORM configuration for the Exadata DB system.
	State string `pulumi:"state"`
}

func LookupExadataIormConfigOutput(ctx *pulumi.Context, args LookupExadataIormConfigOutputArgs, opts ...pulumi.InvokeOption) LookupExadataIormConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupExadataIormConfigResultOutput, error) {
			args := v.(LookupExadataIormConfigArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getExadataIormConfig:getExadataIormConfig", args, LookupExadataIormConfigResultOutput{}, options).(LookupExadataIormConfigResultOutput), nil
		}).(LookupExadataIormConfigResultOutput)
}

// A collection of arguments for invoking getExadataIormConfig.
type LookupExadataIormConfigOutputArgs struct {
	// The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
}

func (LookupExadataIormConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExadataIormConfigArgs)(nil)).Elem()
}

// A collection of values returned by getExadataIormConfig.
type LookupExadataIormConfigResultOutput struct{ *pulumi.OutputState }

func (LookupExadataIormConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExadataIormConfigResult)(nil)).Elem()
}

func (o LookupExadataIormConfigResultOutput) ToLookupExadataIormConfigResultOutput() LookupExadataIormConfigResultOutput {
	return o
}

func (o LookupExadataIormConfigResultOutput) ToLookupExadataIormConfigResultOutputWithContext(ctx context.Context) LookupExadataIormConfigResultOutput {
	return o
}

// An array of IORM settings for all the database in the Exadata DB system.
func (o LookupExadataIormConfigResultOutput) DbPlans() GetExadataIormConfigDbPlanArrayOutput {
	return o.ApplyT(func(v LookupExadataIormConfigResult) []GetExadataIormConfigDbPlan { return v.DbPlans }).(GetExadataIormConfigDbPlanArrayOutput)
}

func (o LookupExadataIormConfigResultOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataIormConfigResult) string { return v.DbSystemId }).(pulumi.StringOutput)
}

func (o LookupExadataIormConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataIormConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// Additional information about the current `lifecycleState`.
func (o LookupExadataIormConfigResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataIormConfigResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The current value for the IORM objective. The default is `AUTO`.
func (o LookupExadataIormConfigResultOutput) Objective() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataIormConfigResult) string { return v.Objective }).(pulumi.StringOutput)
}

// The current state of IORM configuration for the Exadata DB system.
func (o LookupExadataIormConfigResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataIormConfigResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExadataIormConfigResultOutput{})
}
