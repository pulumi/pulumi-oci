// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Execution Actions in Oracle Cloud Infrastructure Database service.
//
// Lists the execution action resources in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetExecutionActions(ctx, &database.GetExecutionActionsArgs{
//				CompartmentId:     compartmentId,
//				DisplayName:       pulumi.StringRef(executionActionDisplayName),
//				ExecutionWindowId: pulumi.StringRef(testExecutionWindow.Id),
//				State:             pulumi.StringRef(executionActionState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetExecutionActions(ctx *pulumi.Context, args *GetExecutionActionsArgs, opts ...pulumi.InvokeOption) (*GetExecutionActionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExecutionActionsResult
	err := ctx.Invoke("oci:Database/getExecutionActions:getExecutionActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExecutionActions.
type GetExecutionActionsArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string `pulumi:"displayName"`
	// A filter to return only resources that match the given execution wondow id.
	ExecutionWindowId *string                     `pulumi:"executionWindowId"`
	Filters           []GetExecutionActionsFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getExecutionActions.
type GetExecutionActionsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The user-friendly name for the execution action. The name does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The list of execution_actions.
	ExecutionActions []GetExecutionActionsExecutionAction `pulumi:"executionActions"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution window resource the execution action belongs to.
	ExecutionWindowId *string                     `pulumi:"executionWindowId"`
	Filters           []GetExecutionActionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the execution action. Valid states are SCHEDULED, IN_PROGRESS, FAILED, CANCELED, UPDATING, DELETED, SUCCEEDED and PARTIAL_SUCCESS.
	State *string `pulumi:"state"`
}

func GetExecutionActionsOutput(ctx *pulumi.Context, args GetExecutionActionsOutputArgs, opts ...pulumi.InvokeOption) GetExecutionActionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetExecutionActionsResultOutput, error) {
			args := v.(GetExecutionActionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getExecutionActions:getExecutionActions", args, GetExecutionActionsResultOutput{}, options).(GetExecutionActionsResultOutput), nil
		}).(GetExecutionActionsResultOutput)
}

// A collection of arguments for invoking getExecutionActions.
type GetExecutionActionsOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A filter to return only resources that match the given execution wondow id.
	ExecutionWindowId pulumi.StringPtrInput               `pulumi:"executionWindowId"`
	Filters           GetExecutionActionsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetExecutionActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExecutionActionsArgs)(nil)).Elem()
}

// A collection of values returned by getExecutionActions.
type GetExecutionActionsResultOutput struct{ *pulumi.OutputState }

func (GetExecutionActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExecutionActionsResult)(nil)).Elem()
}

func (o GetExecutionActionsResultOutput) ToGetExecutionActionsResultOutput() GetExecutionActionsResultOutput {
	return o
}

func (o GetExecutionActionsResultOutput) ToGetExecutionActionsResultOutputWithContext(ctx context.Context) GetExecutionActionsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetExecutionActionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionActionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The user-friendly name for the execution action. The name does not need to be unique.
func (o GetExecutionActionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExecutionActionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The list of execution_actions.
func (o GetExecutionActionsResultOutput) ExecutionActions() GetExecutionActionsExecutionActionArrayOutput {
	return o.ApplyT(func(v GetExecutionActionsResult) []GetExecutionActionsExecutionAction { return v.ExecutionActions }).(GetExecutionActionsExecutionActionArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution window resource the execution action belongs to.
func (o GetExecutionActionsResultOutput) ExecutionWindowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExecutionActionsResult) *string { return v.ExecutionWindowId }).(pulumi.StringPtrOutput)
}

func (o GetExecutionActionsResultOutput) Filters() GetExecutionActionsFilterArrayOutput {
	return o.ApplyT(func(v GetExecutionActionsResult) []GetExecutionActionsFilter { return v.Filters }).(GetExecutionActionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetExecutionActionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionActionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the execution action. Valid states are SCHEDULED, IN_PROGRESS, FAILED, CANCELED, UPDATING, DELETED, SUCCEEDED and PARTIAL_SUCCESS.
func (o GetExecutionActionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExecutionActionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExecutionActionsResultOutput{})
}
