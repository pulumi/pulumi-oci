// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Execution Windows in Oracle Cloud Infrastructure Database service.
//
// Lists the execution window resources in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetExecutionWindows(ctx, &database.GetExecutionWindowsArgs{
//				CompartmentId:       compartmentId,
//				DisplayName:         pulumi.StringRef(executionWindowDisplayName),
//				ExecutionResourceId: pulumi.StringRef(testResource.Id),
//				State:               pulumi.StringRef(executionWindowState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetExecutionWindows(ctx *pulumi.Context, args *GetExecutionWindowsArgs, opts ...pulumi.InvokeOption) (*GetExecutionWindowsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExecutionWindowsResult
	err := ctx.Invoke("oci:Database/getExecutionWindows:getExecutionWindows", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExecutionWindows.
type GetExecutionWindowsArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string `pulumi:"displayName"`
	// A filter to return only resources that match the given resource id exactly.
	ExecutionResourceId *string                     `pulumi:"executionResourceId"`
	Filters             []GetExecutionWindowsFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getExecutionWindows.
type GetExecutionWindowsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The user-friendly name for the execution window. The name does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution resource the execution window belongs to.
	ExecutionResourceId *string `pulumi:"executionResourceId"`
	// The list of execution_windows.
	ExecutionWindows []GetExecutionWindowsExecutionWindow `pulumi:"executionWindows"`
	Filters          []GetExecutionWindowsFilter          `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the Schedule Policy. Valid states are CREATED, SCHEDULED, IN_PROGRESS, FAILED, CANCELED, UPDATING, DELETED, SUCCEEDED and PARTIAL_SUCCESS.
	State *string `pulumi:"state"`
}

func GetExecutionWindowsOutput(ctx *pulumi.Context, args GetExecutionWindowsOutputArgs, opts ...pulumi.InvokeOption) GetExecutionWindowsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetExecutionWindowsResultOutput, error) {
			args := v.(GetExecutionWindowsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getExecutionWindows:getExecutionWindows", args, GetExecutionWindowsResultOutput{}, options).(GetExecutionWindowsResultOutput), nil
		}).(GetExecutionWindowsResultOutput)
}

// A collection of arguments for invoking getExecutionWindows.
type GetExecutionWindowsOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A filter to return only resources that match the given resource id exactly.
	ExecutionResourceId pulumi.StringPtrInput               `pulumi:"executionResourceId"`
	Filters             GetExecutionWindowsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetExecutionWindowsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExecutionWindowsArgs)(nil)).Elem()
}

// A collection of values returned by getExecutionWindows.
type GetExecutionWindowsResultOutput struct{ *pulumi.OutputState }

func (GetExecutionWindowsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExecutionWindowsResult)(nil)).Elem()
}

func (o GetExecutionWindowsResultOutput) ToGetExecutionWindowsResultOutput() GetExecutionWindowsResultOutput {
	return o
}

func (o GetExecutionWindowsResultOutput) ToGetExecutionWindowsResultOutputWithContext(ctx context.Context) GetExecutionWindowsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetExecutionWindowsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionWindowsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The user-friendly name for the execution window. The name does not need to be unique.
func (o GetExecutionWindowsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExecutionWindowsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution resource the execution window belongs to.
func (o GetExecutionWindowsResultOutput) ExecutionResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExecutionWindowsResult) *string { return v.ExecutionResourceId }).(pulumi.StringPtrOutput)
}

// The list of execution_windows.
func (o GetExecutionWindowsResultOutput) ExecutionWindows() GetExecutionWindowsExecutionWindowArrayOutput {
	return o.ApplyT(func(v GetExecutionWindowsResult) []GetExecutionWindowsExecutionWindow { return v.ExecutionWindows }).(GetExecutionWindowsExecutionWindowArrayOutput)
}

func (o GetExecutionWindowsResultOutput) Filters() GetExecutionWindowsFilterArrayOutput {
	return o.ApplyT(func(v GetExecutionWindowsResult) []GetExecutionWindowsFilter { return v.Filters }).(GetExecutionWindowsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetExecutionWindowsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExecutionWindowsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the Schedule Policy. Valid states are CREATED, SCHEDULED, IN_PROGRESS, FAILED, CANCELED, UPDATING, DELETED, SUCCEEDED and PARTIAL_SUCCESS.
func (o GetExecutionWindowsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExecutionWindowsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExecutionWindowsResultOutput{})
}
