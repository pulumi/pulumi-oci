// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of External Container Databases in Oracle Cloud Infrastructure Database service.
//
// Gets a list of the external container databases in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetExternalContainerDatabases(ctx, &database.GetExternalContainerDatabasesArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(externalContainerDatabaseDisplayName),
//				State:         pulumi.StringRef(externalContainerDatabaseState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetExternalContainerDatabases(ctx *pulumi.Context, args *GetExternalContainerDatabasesArgs, opts ...pulumi.InvokeOption) (*GetExternalContainerDatabasesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExternalContainerDatabasesResult
	err := ctx.Invoke("oci:Database/getExternalContainerDatabases:getExternalContainerDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExternalContainerDatabases.
type GetExternalContainerDatabasesArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string                               `pulumi:"displayName"`
	Filters     []GetExternalContainerDatabasesFilter `pulumi:"filters"`
	// A filter to return only resources that match the specified lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getExternalContainerDatabases.
type GetExternalContainerDatabasesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The user-friendly name for the external database. The name does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The list of external_container_databases.
	ExternalContainerDatabases []GetExternalContainerDatabasesExternalContainerDatabase `pulumi:"externalContainerDatabases"`
	Filters                    []GetExternalContainerDatabasesFilter                    `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State *string `pulumi:"state"`
}

func GetExternalContainerDatabasesOutput(ctx *pulumi.Context, args GetExternalContainerDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetExternalContainerDatabasesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetExternalContainerDatabasesResultOutput, error) {
			args := v.(GetExternalContainerDatabasesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getExternalContainerDatabases:getExternalContainerDatabases", args, GetExternalContainerDatabasesResultOutput{}, options).(GetExternalContainerDatabasesResultOutput), nil
		}).(GetExternalContainerDatabasesResultOutput)
}

// A collection of arguments for invoking getExternalContainerDatabases.
type GetExternalContainerDatabasesOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput                         `pulumi:"displayName"`
	Filters     GetExternalContainerDatabasesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the specified lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetExternalContainerDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalContainerDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getExternalContainerDatabases.
type GetExternalContainerDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetExternalContainerDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalContainerDatabasesResult)(nil)).Elem()
}

func (o GetExternalContainerDatabasesResultOutput) ToGetExternalContainerDatabasesResultOutput() GetExternalContainerDatabasesResultOutput {
	return o
}

func (o GetExternalContainerDatabasesResultOutput) ToGetExternalContainerDatabasesResultOutputWithContext(ctx context.Context) GetExternalContainerDatabasesResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetExternalContainerDatabasesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalContainerDatabasesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The user-friendly name for the external database. The name does not have to be unique.
func (o GetExternalContainerDatabasesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalContainerDatabasesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The list of external_container_databases.
func (o GetExternalContainerDatabasesResultOutput) ExternalContainerDatabases() GetExternalContainerDatabasesExternalContainerDatabaseArrayOutput {
	return o.ApplyT(func(v GetExternalContainerDatabasesResult) []GetExternalContainerDatabasesExternalContainerDatabase {
		return v.ExternalContainerDatabases
	}).(GetExternalContainerDatabasesExternalContainerDatabaseArrayOutput)
}

func (o GetExternalContainerDatabasesResultOutput) Filters() GetExternalContainerDatabasesFilterArrayOutput {
	return o.ApplyT(func(v GetExternalContainerDatabasesResult) []GetExternalContainerDatabasesFilter { return v.Filters }).(GetExternalContainerDatabasesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetExternalContainerDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalContainerDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the Oracle Cloud Infrastructure external database resource.
func (o GetExternalContainerDatabasesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalContainerDatabasesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExternalContainerDatabasesResultOutput{})
}
