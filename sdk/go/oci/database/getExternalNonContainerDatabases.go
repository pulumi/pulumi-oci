// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of External Non Container Databases in Oracle Cloud Infrastructure Database service.
//
// Gets a list of the ExternalNonContainerDatabases in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetExternalNonContainerDatabases(ctx, &database.GetExternalNonContainerDatabasesArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.External_non_container_database_display_name),
//				State:         pulumi.StringRef(_var.External_non_container_database_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetExternalNonContainerDatabases(ctx *pulumi.Context, args *GetExternalNonContainerDatabasesArgs, opts ...pulumi.InvokeOption) (*GetExternalNonContainerDatabasesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExternalNonContainerDatabasesResult
	err := ctx.Invoke("oci:Database/getExternalNonContainerDatabases:getExternalNonContainerDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExternalNonContainerDatabases.
type GetExternalNonContainerDatabasesArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string                                  `pulumi:"displayName"`
	Filters     []GetExternalNonContainerDatabasesFilter `pulumi:"filters"`
	// A filter to return only resources that match the specified lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getExternalNonContainerDatabases.
type GetExternalNonContainerDatabasesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The user-friendly name for the external database. The name does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The list of external_non_container_databases.
	ExternalNonContainerDatabases []GetExternalNonContainerDatabasesExternalNonContainerDatabase `pulumi:"externalNonContainerDatabases"`
	Filters                       []GetExternalNonContainerDatabasesFilter                       `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State *string `pulumi:"state"`
}

func GetExternalNonContainerDatabasesOutput(ctx *pulumi.Context, args GetExternalNonContainerDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetExternalNonContainerDatabasesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetExternalNonContainerDatabasesResult, error) {
			args := v.(GetExternalNonContainerDatabasesArgs)
			r, err := GetExternalNonContainerDatabases(ctx, &args, opts...)
			var s GetExternalNonContainerDatabasesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetExternalNonContainerDatabasesResultOutput)
}

// A collection of arguments for invoking getExternalNonContainerDatabases.
type GetExternalNonContainerDatabasesOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput                            `pulumi:"displayName"`
	Filters     GetExternalNonContainerDatabasesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the specified lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetExternalNonContainerDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNonContainerDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getExternalNonContainerDatabases.
type GetExternalNonContainerDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetExternalNonContainerDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalNonContainerDatabasesResult)(nil)).Elem()
}

func (o GetExternalNonContainerDatabasesResultOutput) ToGetExternalNonContainerDatabasesResultOutput() GetExternalNonContainerDatabasesResultOutput {
	return o
}

func (o GetExternalNonContainerDatabasesResultOutput) ToGetExternalNonContainerDatabasesResultOutputWithContext(ctx context.Context) GetExternalNonContainerDatabasesResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetExternalNonContainerDatabasesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalNonContainerDatabasesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The user-friendly name for the external database. The name does not have to be unique.
func (o GetExternalNonContainerDatabasesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalNonContainerDatabasesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The list of external_non_container_databases.
func (o GetExternalNonContainerDatabasesResultOutput) ExternalNonContainerDatabases() GetExternalNonContainerDatabasesExternalNonContainerDatabaseArrayOutput {
	return o.ApplyT(func(v GetExternalNonContainerDatabasesResult) []GetExternalNonContainerDatabasesExternalNonContainerDatabase {
		return v.ExternalNonContainerDatabases
	}).(GetExternalNonContainerDatabasesExternalNonContainerDatabaseArrayOutput)
}

func (o GetExternalNonContainerDatabasesResultOutput) Filters() GetExternalNonContainerDatabasesFilterArrayOutput {
	return o.ApplyT(func(v GetExternalNonContainerDatabasesResult) []GetExternalNonContainerDatabasesFilter {
		return v.Filters
	}).(GetExternalNonContainerDatabasesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetExternalNonContainerDatabasesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalNonContainerDatabasesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the Oracle Cloud Infrastructure external database resource.
func (o GetExternalNonContainerDatabasesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalNonContainerDatabasesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExternalNonContainerDatabasesResultOutput{})
}
