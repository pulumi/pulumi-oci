// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of External Pluggable Databases in Oracle Cloud Infrastructure Database service.
//
// Gets a list of the [ExternalPluggableDatabase](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalPluggableDatabaseDetails)
// resources in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetExternalPluggableDatabases(ctx, &database.GetExternalPluggableDatabasesArgs{
//				CompartmentId:               compartmentId,
//				DisplayName:                 pulumi.StringRef(externalPluggableDatabaseDisplayName),
//				ExternalContainerDatabaseId: pulumi.StringRef(testExternalContainerDatabase.Id),
//				State:                       pulumi.StringRef(externalPluggableDatabaseState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetExternalPluggableDatabases(ctx *pulumi.Context, args *GetExternalPluggableDatabasesArgs, opts ...pulumi.InvokeOption) (*GetExternalPluggableDatabasesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExternalPluggableDatabasesResult
	err := ctx.Invoke("oci:Database/getExternalPluggableDatabases:getExternalPluggableDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExternalPluggableDatabases.
type GetExternalPluggableDatabasesArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string `pulumi:"displayName"`
	// The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalContainerDatabaseId *string                               `pulumi:"externalContainerDatabaseId"`
	Filters                     []GetExternalPluggableDatabasesFilter `pulumi:"filters"`
	// A filter to return only resources that match the specified lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getExternalPluggableDatabases.
type GetExternalPluggableDatabasesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The user-friendly name for the external database. The name does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalContainerDatabaseDetails) that contains the specified [external pluggable database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalPluggableDatabaseDetails) resource.
	ExternalContainerDatabaseId *string `pulumi:"externalContainerDatabaseId"`
	// The list of external_pluggable_databases.
	ExternalPluggableDatabases []GetExternalPluggableDatabasesExternalPluggableDatabase `pulumi:"externalPluggableDatabases"`
	Filters                    []GetExternalPluggableDatabasesFilter                    `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the Oracle Cloud Infrastructure external database resource.
	State *string `pulumi:"state"`
}

func GetExternalPluggableDatabasesOutput(ctx *pulumi.Context, args GetExternalPluggableDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetExternalPluggableDatabasesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetExternalPluggableDatabasesResultOutput, error) {
			args := v.(GetExternalPluggableDatabasesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getExternalPluggableDatabases:getExternalPluggableDatabases", args, GetExternalPluggableDatabasesResultOutput{}, options).(GetExternalPluggableDatabasesResultOutput), nil
		}).(GetExternalPluggableDatabasesResultOutput)
}

// A collection of arguments for invoking getExternalPluggableDatabases.
type GetExternalPluggableDatabasesOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The ExternalContainerDatabase [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExternalContainerDatabaseId pulumi.StringPtrInput                         `pulumi:"externalContainerDatabaseId"`
	Filters                     GetExternalPluggableDatabasesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the specified lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetExternalPluggableDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalPluggableDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getExternalPluggableDatabases.
type GetExternalPluggableDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetExternalPluggableDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalPluggableDatabasesResult)(nil)).Elem()
}

func (o GetExternalPluggableDatabasesResultOutput) ToGetExternalPluggableDatabasesResultOutput() GetExternalPluggableDatabasesResultOutput {
	return o
}

func (o GetExternalPluggableDatabasesResultOutput) ToGetExternalPluggableDatabasesResultOutputWithContext(ctx context.Context) GetExternalPluggableDatabasesResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetExternalPluggableDatabasesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalPluggableDatabasesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The user-friendly name for the external database. The name does not have to be unique.
func (o GetExternalPluggableDatabasesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalPluggableDatabasesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalContainerDatabaseDetails) that contains the specified [external pluggable database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalPluggableDatabaseDetails) resource.
func (o GetExternalPluggableDatabasesResultOutput) ExternalContainerDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalPluggableDatabasesResult) *string { return v.ExternalContainerDatabaseId }).(pulumi.StringPtrOutput)
}

// The list of external_pluggable_databases.
func (o GetExternalPluggableDatabasesResultOutput) ExternalPluggableDatabases() GetExternalPluggableDatabasesExternalPluggableDatabaseArrayOutput {
	return o.ApplyT(func(v GetExternalPluggableDatabasesResult) []GetExternalPluggableDatabasesExternalPluggableDatabase {
		return v.ExternalPluggableDatabases
	}).(GetExternalPluggableDatabasesExternalPluggableDatabaseArrayOutput)
}

func (o GetExternalPluggableDatabasesResultOutput) Filters() GetExternalPluggableDatabasesFilterArrayOutput {
	return o.ApplyT(func(v GetExternalPluggableDatabasesResult) []GetExternalPluggableDatabasesFilter { return v.Filters }).(GetExternalPluggableDatabasesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetExternalPluggableDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalPluggableDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the Oracle Cloud Infrastructure external database resource.
func (o GetExternalPluggableDatabasesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalPluggableDatabasesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExternalPluggableDatabasesResultOutput{})
}
