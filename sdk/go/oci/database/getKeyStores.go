// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Key Stores in Oracle Cloud Infrastructure Database service.
//
// Gets a list of key stores in the specified compartment.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetKeyStores(ctx, &database.GetKeyStoresArgs{
//				CompartmentId: _var.Compartment_id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetKeyStores(ctx *pulumi.Context, args *GetKeyStoresArgs, opts ...pulumi.InvokeOption) (*GetKeyStoresResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKeyStoresResult
	err := ctx.Invoke("oci:Database/getKeyStores:getKeyStores", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeyStores.
type GetKeyStoresArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string               `pulumi:"compartmentId"`
	Filters       []GetKeyStoresFilter `pulumi:"filters"`
}

// A collection of values returned by getKeyStores.
type GetKeyStoresResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string               `pulumi:"compartmentId"`
	Filters       []GetKeyStoresFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of key_stores.
	KeyStores []GetKeyStoresKeyStore `pulumi:"keyStores"`
}

func GetKeyStoresOutput(ctx *pulumi.Context, args GetKeyStoresOutputArgs, opts ...pulumi.InvokeOption) GetKeyStoresResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKeyStoresResult, error) {
			args := v.(GetKeyStoresArgs)
			r, err := GetKeyStores(ctx, &args, opts...)
			var s GetKeyStoresResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKeyStoresResultOutput)
}

// A collection of arguments for invoking getKeyStores.
type GetKeyStoresOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput           `pulumi:"compartmentId"`
	Filters       GetKeyStoresFilterArrayInput `pulumi:"filters"`
}

func (GetKeyStoresOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyStoresArgs)(nil)).Elem()
}

// A collection of values returned by getKeyStores.
type GetKeyStoresResultOutput struct{ *pulumi.OutputState }

func (GetKeyStoresResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyStoresResult)(nil)).Elem()
}

func (o GetKeyStoresResultOutput) ToGetKeyStoresResultOutput() GetKeyStoresResultOutput {
	return o
}

func (o GetKeyStoresResultOutput) ToGetKeyStoresResultOutputWithContext(ctx context.Context) GetKeyStoresResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetKeyStoresResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyStoresResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetKeyStoresResultOutput) Filters() GetKeyStoresFilterArrayOutput {
	return o.ApplyT(func(v GetKeyStoresResult) []GetKeyStoresFilter { return v.Filters }).(GetKeyStoresFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKeyStoresResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyStoresResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of key_stores.
func (o GetKeyStoresResultOutput) KeyStores() GetKeyStoresKeyStoreArrayOutput {
	return o.ApplyT(func(v GetKeyStoresResult) []GetKeyStoresKeyStore { return v.KeyStores }).(GetKeyStoresKeyStoreArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKeyStoresResultOutput{})
}
