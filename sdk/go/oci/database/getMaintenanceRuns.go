// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Maintenance Runs in Oracle Cloud Infrastructure Database service.
//
// Gets a list of the maintenance runs in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetMaintenanceRuns(ctx, &database.GetMaintenanceRunsArgs{
//				CompartmentId:      _var.Compartment_id,
//				AvailabilityDomain: pulumi.StringRef(_var.Maintenance_run_availability_domain),
//				MaintenanceSubtype: pulumi.StringRef(_var.Maintenance_run_maintenance_subtype),
//				MaintenanceType:    pulumi.StringRef(_var.Maintenance_run_maintenance_type),
//				State:              pulumi.StringRef(_var.Maintenance_run_state),
//				TargetResourceId:   pulumi.StringRef(oci_database_target_resource.Test_target_resource.Id),
//				TargetResourceType: pulumi.StringRef(_var.Maintenance_run_target_resource_type),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMaintenanceRuns(ctx *pulumi.Context, args *GetMaintenanceRunsArgs, opts ...pulumi.InvokeOption) (*GetMaintenanceRunsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMaintenanceRunsResult
	err := ctx.Invoke("oci:Database/getMaintenanceRuns:getMaintenanceRuns", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMaintenanceRuns.
type GetMaintenanceRunsArgs struct {
	// A filter to return only resources that match the given availability domain exactly.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string                     `pulumi:"compartmentId"`
	Filters       []GetMaintenanceRunsFilter `pulumi:"filters"`
	// The sub-type of the maintenance run.
	MaintenanceSubtype *string `pulumi:"maintenanceSubtype"`
	// The maintenance type.
	MaintenanceType *string `pulumi:"maintenanceType"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
	// The target resource ID.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The type of the target resource. Accepted values are: AUTONOMOUS_CONTAINER_DATABASE, AUTONOMOUS_EXADATA_INFRASTRUCTURE, EXADATA_DB_SYSTEM
	TargetResourceType *string `pulumi:"targetResourceType"`
}

// A collection of values returned by getMaintenanceRuns.
type GetMaintenanceRunsResult struct {
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The OCID of the compartment.
	CompartmentId string                     `pulumi:"compartmentId"`
	Filters       []GetMaintenanceRunsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The list of maintenance_runs.
	MaintenanceRuns []GetMaintenanceRunsMaintenanceRun `pulumi:"maintenanceRuns"`
	// Maintenance sub-type.
	MaintenanceSubtype *string `pulumi:"maintenanceSubtype"`
	// Maintenance type.
	MaintenanceType *string `pulumi:"maintenanceType"`
	// The current state of the maintenance run. For Autonomous Database Serverless instances, valid states are IN_PROGRESS, SUCCEEDED, and FAILED.
	State *string `pulumi:"state"`
	// The ID of the target resource on which the maintenance run occurs.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The type of the target resource on which the maintenance run occurs.
	TargetResourceType *string `pulumi:"targetResourceType"`
}

func GetMaintenanceRunsOutput(ctx *pulumi.Context, args GetMaintenanceRunsOutputArgs, opts ...pulumi.InvokeOption) GetMaintenanceRunsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMaintenanceRunsResult, error) {
			args := v.(GetMaintenanceRunsArgs)
			r, err := GetMaintenanceRuns(ctx, &args, opts...)
			var s GetMaintenanceRunsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMaintenanceRunsResultOutput)
}

// A collection of arguments for invoking getMaintenanceRuns.
type GetMaintenanceRunsOutputArgs struct {
	// A filter to return only resources that match the given availability domain exactly.
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput                 `pulumi:"compartmentId"`
	Filters       GetMaintenanceRunsFilterArrayInput `pulumi:"filters"`
	// The sub-type of the maintenance run.
	MaintenanceSubtype pulumi.StringPtrInput `pulumi:"maintenanceSubtype"`
	// The maintenance type.
	MaintenanceType pulumi.StringPtrInput `pulumi:"maintenanceType"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The target resource ID.
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The type of the target resource. Accepted values are: AUTONOMOUS_CONTAINER_DATABASE, AUTONOMOUS_EXADATA_INFRASTRUCTURE, EXADATA_DB_SYSTEM
	TargetResourceType pulumi.StringPtrInput `pulumi:"targetResourceType"`
}

func (GetMaintenanceRunsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaintenanceRunsArgs)(nil)).Elem()
}

// A collection of values returned by getMaintenanceRuns.
type GetMaintenanceRunsResultOutput struct{ *pulumi.OutputState }

func (GetMaintenanceRunsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaintenanceRunsResult)(nil)).Elem()
}

func (o GetMaintenanceRunsResultOutput) ToGetMaintenanceRunsResultOutput() GetMaintenanceRunsResultOutput {
	return o
}

func (o GetMaintenanceRunsResultOutput) ToGetMaintenanceRunsResultOutputWithContext(ctx context.Context) GetMaintenanceRunsResultOutput {
	return o
}

func (o GetMaintenanceRunsResultOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaintenanceRunsResult) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment.
func (o GetMaintenanceRunsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaintenanceRunsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetMaintenanceRunsResultOutput) Filters() GetMaintenanceRunsFilterArrayOutput {
	return o.ApplyT(func(v GetMaintenanceRunsResult) []GetMaintenanceRunsFilter { return v.Filters }).(GetMaintenanceRunsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMaintenanceRunsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaintenanceRunsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of maintenance_runs.
func (o GetMaintenanceRunsResultOutput) MaintenanceRuns() GetMaintenanceRunsMaintenanceRunArrayOutput {
	return o.ApplyT(func(v GetMaintenanceRunsResult) []GetMaintenanceRunsMaintenanceRun { return v.MaintenanceRuns }).(GetMaintenanceRunsMaintenanceRunArrayOutput)
}

// Maintenance sub-type.
func (o GetMaintenanceRunsResultOutput) MaintenanceSubtype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaintenanceRunsResult) *string { return v.MaintenanceSubtype }).(pulumi.StringPtrOutput)
}

// Maintenance type.
func (o GetMaintenanceRunsResultOutput) MaintenanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaintenanceRunsResult) *string { return v.MaintenanceType }).(pulumi.StringPtrOutput)
}

// The current state of the maintenance run. For Autonomous Database Serverless instances, valid states are IN_PROGRESS, SUCCEEDED, and FAILED.
func (o GetMaintenanceRunsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaintenanceRunsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The ID of the target resource on which the maintenance run occurs.
func (o GetMaintenanceRunsResultOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaintenanceRunsResult) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The type of the target resource on which the maintenance run occurs.
func (o GetMaintenanceRunsResultOutput) TargetResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaintenanceRunsResult) *string { return v.TargetResourceType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMaintenanceRunsResultOutput{})
}
