// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Oneoff Patches in Oracle Cloud Infrastructure Database service.
//
// Lists one-off patches in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetOneoffPatches(ctx, &database.GetOneoffPatchesArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(oneoffPatchDisplayName),
//				State:         pulumi.StringRef(oneoffPatchState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOneoffPatches(ctx *pulumi.Context, args *GetOneoffPatchesArgs, opts ...pulumi.InvokeOption) (*GetOneoffPatchesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOneoffPatchesResult
	err := ctx.Invoke("oci:Database/getOneoffPatches:getOneoffPatches", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOneoffPatches.
type GetOneoffPatchesArgs struct {
	// (Updatable) The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string                  `pulumi:"displayName"`
	Filters     []GetOneoffPatchesFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly
	State *string `pulumi:"state"`
}

// A collection of values returned by getOneoffPatches.
type GetOneoffPatchesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// One-off patch name.
	DisplayName *string                  `pulumi:"displayName"`
	Filters     []GetOneoffPatchesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of oneoff_patches.
	OneoffPatches []GetOneoffPatchesOneoffPatch `pulumi:"oneoffPatches"`
	// The current state of the one-off patch.
	State *string `pulumi:"state"`
}

func GetOneoffPatchesOutput(ctx *pulumi.Context, args GetOneoffPatchesOutputArgs, opts ...pulumi.InvokeOption) GetOneoffPatchesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetOneoffPatchesResultOutput, error) {
			args := v.(GetOneoffPatchesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getOneoffPatches:getOneoffPatches", args, GetOneoffPatchesResultOutput{}, options).(GetOneoffPatchesResultOutput), nil
		}).(GetOneoffPatchesResultOutput)
}

// A collection of arguments for invoking getOneoffPatches.
type GetOneoffPatchesOutputArgs struct {
	// (Updatable) The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput            `pulumi:"displayName"`
	Filters     GetOneoffPatchesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetOneoffPatchesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOneoffPatchesArgs)(nil)).Elem()
}

// A collection of values returned by getOneoffPatches.
type GetOneoffPatchesResultOutput struct{ *pulumi.OutputState }

func (GetOneoffPatchesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOneoffPatchesResult)(nil)).Elem()
}

func (o GetOneoffPatchesResultOutput) ToGetOneoffPatchesResultOutput() GetOneoffPatchesResultOutput {
	return o
}

func (o GetOneoffPatchesResultOutput) ToGetOneoffPatchesResultOutputWithContext(ctx context.Context) GetOneoffPatchesResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetOneoffPatchesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOneoffPatchesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// One-off patch name.
func (o GetOneoffPatchesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOneoffPatchesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetOneoffPatchesResultOutput) Filters() GetOneoffPatchesFilterArrayOutput {
	return o.ApplyT(func(v GetOneoffPatchesResult) []GetOneoffPatchesFilter { return v.Filters }).(GetOneoffPatchesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOneoffPatchesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOneoffPatchesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of oneoff_patches.
func (o GetOneoffPatchesResultOutput) OneoffPatches() GetOneoffPatchesOneoffPatchArrayOutput {
	return o.ApplyT(func(v GetOneoffPatchesResult) []GetOneoffPatchesOneoffPatch { return v.OneoffPatches }).(GetOneoffPatchesOneoffPatchArrayOutput)
}

// The current state of the one-off patch.
func (o GetOneoffPatchesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOneoffPatchesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOneoffPatchesResultOutput{})
}
