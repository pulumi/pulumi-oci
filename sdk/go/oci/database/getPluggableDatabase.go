// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Pluggable Database resource in Oracle Cloud Infrastructure Database service.
//
// Gets information about the specified pluggable database.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetPluggableDatabase(ctx, &database.GetPluggableDatabaseArgs{
//				PluggableDatabaseId: oci_database_pluggable_database.Test_pluggable_database.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPluggableDatabase(ctx *pulumi.Context, args *LookupPluggableDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupPluggableDatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPluggableDatabaseResult
	err := ctx.Invoke("oci:Database/getPluggableDatabase:getPluggableDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPluggableDatabase.
type LookupPluggableDatabaseArgs struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	PluggableDatabaseId string `pulumi:"pluggableDatabaseId"`
}

// A collection of values returned by getPluggableDatabase.
type LookupPluggableDatabaseResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// Connection strings to connect to an Oracle Pluggable Database.
	ConnectionStrings              []GetPluggableDatabaseConnectionString `pulumi:"connectionStrings"`
	ContainerDatabaseAdminPassword *string                                `pulumi:"containerDatabaseAdminPassword"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
	ContainerDatabaseId     *string `pulumi:"containerDatabaseId"`
	ConvertToRegularTrigger *int    `pulumi:"convertToRegularTrigger"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pluggable database.
	Id *string `pulumi:"id"`
	// The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
	IsRestricted *bool `pulumi:"isRestricted"`
	// Detailed message for the lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
	OpenMode               *string                                     `pulumi:"openMode"`
	PdbAdminPassword       *string                                     `pulumi:"pdbAdminPassword"`
	PdbCreationTypeDetails []GetPluggableDatabasePdbCreationTypeDetail `pulumi:"pdbCreationTypeDetails"`
	// The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
	PdbName *string `pulumi:"pdbName"`
	// Pluggable Database Node Level Details. Example: [{"nodeName" : "node1", "openMode" : "READ_WRITE"}, {"nodeName" : "node2", "openMode" : "READ_ONLY"}]
	PdbNodeLevelDetails []GetPluggableDatabasePdbNodeLevelDetail `pulumi:"pdbNodeLevelDetails"`
	PluggableDatabaseId string                                   `pulumi:"pluggableDatabaseId"`
	// The configuration of the Pluggable Database Management service.
	PluggableDatabaseManagementConfigs []GetPluggableDatabasePluggableDatabaseManagementConfig `pulumi:"pluggableDatabaseManagementConfigs"`
	RefreshTrigger                     *int                                                    `pulumi:"refreshTrigger"`
	// Pluggable Database Refreshable Clone Configuration.
	RefreshableCloneConfigs       []GetPluggableDatabaseRefreshableCloneConfig `pulumi:"refreshableCloneConfigs"`
	RotateKeyTrigger              *int                                         `pulumi:"rotateKeyTrigger"`
	ShouldCreatePdbBackup         *bool                                        `pulumi:"shouldCreatePdbBackup"`
	ShouldPdbAdminAccountBeLocked *bool                                        `pulumi:"shouldPdbAdminAccountBeLocked"`
	// The current state of the pluggable database.
	State             *string `pulumi:"state"`
	TdeWalletPassword *string `pulumi:"tdeWalletPassword"`
	// The date and time the pluggable database was created.
	TimeCreated *string `pulumi:"timeCreated"`
}

func LookupPluggableDatabaseOutput(ctx *pulumi.Context, args LookupPluggableDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupPluggableDatabaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPluggableDatabaseResult, error) {
			args := v.(LookupPluggableDatabaseArgs)
			r, err := LookupPluggableDatabase(ctx, &args, opts...)
			var s LookupPluggableDatabaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPluggableDatabaseResultOutput)
}

// A collection of arguments for invoking getPluggableDatabase.
type LookupPluggableDatabaseOutputArgs struct {
	// The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	PluggableDatabaseId pulumi.StringInput `pulumi:"pluggableDatabaseId"`
}

func (LookupPluggableDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPluggableDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getPluggableDatabase.
type LookupPluggableDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupPluggableDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPluggableDatabaseResult)(nil)).Elem()
}

func (o LookupPluggableDatabaseResultOutput) ToLookupPluggableDatabaseResultOutput() LookupPluggableDatabaseResultOutput {
	return o
}

func (o LookupPluggableDatabaseResultOutput) ToLookupPluggableDatabaseResultOutputWithContext(ctx context.Context) LookupPluggableDatabaseResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupPluggableDatabaseResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Connection strings to connect to an Oracle Pluggable Database.
func (o LookupPluggableDatabaseResultOutput) ConnectionStrings() GetPluggableDatabaseConnectionStringArrayOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) []GetPluggableDatabaseConnectionString {
		return v.ConnectionStrings
	}).(GetPluggableDatabaseConnectionStringArrayOutput)
}

func (o LookupPluggableDatabaseResultOutput) ContainerDatabaseAdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *string { return v.ContainerDatabaseAdminPassword }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
func (o LookupPluggableDatabaseResultOutput) ContainerDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *string { return v.ContainerDatabaseId }).(pulumi.StringPtrOutput)
}

func (o LookupPluggableDatabaseResultOutput) ConvertToRegularTrigger() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *int { return v.ConvertToRegularTrigger }).(pulumi.IntPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o LookupPluggableDatabaseResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupPluggableDatabaseResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pluggable database.
func (o LookupPluggableDatabaseResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
func (o LookupPluggableDatabaseResultOutput) IsRestricted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *bool { return v.IsRestricted }).(pulumi.BoolPtrOutput)
}

// Detailed message for the lifecycle state.
func (o LookupPluggableDatabaseResultOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
func (o LookupPluggableDatabaseResultOutput) OpenMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *string { return v.OpenMode }).(pulumi.StringPtrOutput)
}

func (o LookupPluggableDatabaseResultOutput) PdbAdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *string { return v.PdbAdminPassword }).(pulumi.StringPtrOutput)
}

func (o LookupPluggableDatabaseResultOutput) PdbCreationTypeDetails() GetPluggableDatabasePdbCreationTypeDetailArrayOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) []GetPluggableDatabasePdbCreationTypeDetail {
		return v.PdbCreationTypeDetails
	}).(GetPluggableDatabasePdbCreationTypeDetailArrayOutput)
}

// The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
func (o LookupPluggableDatabaseResultOutput) PdbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *string { return v.PdbName }).(pulumi.StringPtrOutput)
}

// Pluggable Database Node Level Details. Example: [{"nodeName" : "node1", "openMode" : "READ_WRITE"}, {"nodeName" : "node2", "openMode" : "READ_ONLY"}]
func (o LookupPluggableDatabaseResultOutput) PdbNodeLevelDetails() GetPluggableDatabasePdbNodeLevelDetailArrayOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) []GetPluggableDatabasePdbNodeLevelDetail {
		return v.PdbNodeLevelDetails
	}).(GetPluggableDatabasePdbNodeLevelDetailArrayOutput)
}

func (o LookupPluggableDatabaseResultOutput) PluggableDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) string { return v.PluggableDatabaseId }).(pulumi.StringOutput)
}

// The configuration of the Pluggable Database Management service.
func (o LookupPluggableDatabaseResultOutput) PluggableDatabaseManagementConfigs() GetPluggableDatabasePluggableDatabaseManagementConfigArrayOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) []GetPluggableDatabasePluggableDatabaseManagementConfig {
		return v.PluggableDatabaseManagementConfigs
	}).(GetPluggableDatabasePluggableDatabaseManagementConfigArrayOutput)
}

func (o LookupPluggableDatabaseResultOutput) RefreshTrigger() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *int { return v.RefreshTrigger }).(pulumi.IntPtrOutput)
}

// Pluggable Database Refreshable Clone Configuration.
func (o LookupPluggableDatabaseResultOutput) RefreshableCloneConfigs() GetPluggableDatabaseRefreshableCloneConfigArrayOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) []GetPluggableDatabaseRefreshableCloneConfig {
		return v.RefreshableCloneConfigs
	}).(GetPluggableDatabaseRefreshableCloneConfigArrayOutput)
}

func (o LookupPluggableDatabaseResultOutput) RotateKeyTrigger() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *int { return v.RotateKeyTrigger }).(pulumi.IntPtrOutput)
}

func (o LookupPluggableDatabaseResultOutput) ShouldCreatePdbBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *bool { return v.ShouldCreatePdbBackup }).(pulumi.BoolPtrOutput)
}

func (o LookupPluggableDatabaseResultOutput) ShouldPdbAdminAccountBeLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *bool { return v.ShouldPdbAdminAccountBeLocked }).(pulumi.BoolPtrOutput)
}

// The current state of the pluggable database.
func (o LookupPluggableDatabaseResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o LookupPluggableDatabaseResultOutput) TdeWalletPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *string { return v.TdeWalletPassword }).(pulumi.StringPtrOutput)
}

// The date and time the pluggable database was created.
func (o LookupPluggableDatabaseResultOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseResult) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPluggableDatabaseResultOutput{})
}
