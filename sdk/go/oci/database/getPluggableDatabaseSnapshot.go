// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Pluggable Database Snapshot resource in Oracle Cloud Infrastructure Database service.
//
// Gets information about the specified Exadata Pluggable Database Snapshot in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetPluggableDatabaseSnapshot(ctx, &database.GetPluggableDatabaseSnapshotArgs{
//				PluggableDatabaseSnapshotId: testPluggableDatabaseSnapshotOciDatabasePluggableDatabaseSnapshot.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPluggableDatabaseSnapshot(ctx *pulumi.Context, args *LookupPluggableDatabaseSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupPluggableDatabaseSnapshotResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPluggableDatabaseSnapshotResult
	err := ctx.Invoke("oci:Database/getPluggableDatabaseSnapshot:getPluggableDatabaseSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPluggableDatabaseSnapshot.
type LookupPluggableDatabaseSnapshotArgs struct {
	// The Exadata Pluggable Database Snapshot [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	PluggableDatabaseSnapshotId string `pulumi:"pluggableDatabaseSnapshotId"`
}

// A collection of values returned by getPluggableDatabaseSnapshot.
type LookupPluggableDatabaseSnapshotResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	ClusterId string `pulumi:"clusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Pluggable Database Snapshot.
	Id string `pulumi:"id"`
	// Additional information about the current lifecycle state of the Exadata Pluggable Database Snapshot.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The user-friendly name for the Database Snapshot. The name should be unique.
	Name string `pulumi:"name"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Pluggable Database.
	PluggableDatabaseId         string `pulumi:"pluggableDatabaseId"`
	PluggableDatabaseSnapshotId string `pulumi:"pluggableDatabaseSnapshotId"`
	// The current state of the Exadata Pluggable Database Snapshot.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time that the Exadata Pluggable Database Snapshot was created, as expressed in RFC 3339 format. For example: 2023-06-27T21:10:29Z
	TimeCreated string `pulumi:"timeCreated"`
}

func LookupPluggableDatabaseSnapshotOutput(ctx *pulumi.Context, args LookupPluggableDatabaseSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupPluggableDatabaseSnapshotResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPluggableDatabaseSnapshotResultOutput, error) {
			args := v.(LookupPluggableDatabaseSnapshotArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getPluggableDatabaseSnapshot:getPluggableDatabaseSnapshot", args, LookupPluggableDatabaseSnapshotResultOutput{}, options).(LookupPluggableDatabaseSnapshotResultOutput), nil
		}).(LookupPluggableDatabaseSnapshotResultOutput)
}

// A collection of arguments for invoking getPluggableDatabaseSnapshot.
type LookupPluggableDatabaseSnapshotOutputArgs struct {
	// The Exadata Pluggable Database Snapshot [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	PluggableDatabaseSnapshotId pulumi.StringInput `pulumi:"pluggableDatabaseSnapshotId"`
}

func (LookupPluggableDatabaseSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPluggableDatabaseSnapshotArgs)(nil)).Elem()
}

// A collection of values returned by getPluggableDatabaseSnapshot.
type LookupPluggableDatabaseSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupPluggableDatabaseSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPluggableDatabaseSnapshotResult)(nil)).Elem()
}

func (o LookupPluggableDatabaseSnapshotResultOutput) ToLookupPluggableDatabaseSnapshotResultOutput() LookupPluggableDatabaseSnapshotResultOutput {
	return o
}

func (o LookupPluggableDatabaseSnapshotResultOutput) ToLookupPluggableDatabaseSnapshotResultOutputWithContext(ctx context.Context) LookupPluggableDatabaseSnapshotResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
func (o LookupPluggableDatabaseSnapshotResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupPluggableDatabaseSnapshotResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o LookupPluggableDatabaseSnapshotResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupPluggableDatabaseSnapshotResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Pluggable Database Snapshot.
func (o LookupPluggableDatabaseSnapshotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) string { return v.Id }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state of the Exadata Pluggable Database Snapshot.
func (o LookupPluggableDatabaseSnapshotResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The user-friendly name for the Database Snapshot. The name should be unique.
func (o LookupPluggableDatabaseSnapshotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) string { return v.Name }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Pluggable Database.
func (o LookupPluggableDatabaseSnapshotResultOutput) PluggableDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) string { return v.PluggableDatabaseId }).(pulumi.StringOutput)
}

func (o LookupPluggableDatabaseSnapshotResultOutput) PluggableDatabaseSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) string { return v.PluggableDatabaseSnapshotId }).(pulumi.StringOutput)
}

// The current state of the Exadata Pluggable Database Snapshot.
func (o LookupPluggableDatabaseSnapshotResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o LookupPluggableDatabaseSnapshotResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time that the Exadata Pluggable Database Snapshot was created, as expressed in RFC 3339 format. For example: 2023-06-27T21:10:29Z
func (o LookupPluggableDatabaseSnapshotResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluggableDatabaseSnapshotResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPluggableDatabaseSnapshotResultOutput{})
}
