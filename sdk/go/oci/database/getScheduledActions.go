// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Scheduled Actions in Oracle Cloud Infrastructure Database service.
//
// Lists the Scheduled Action resources in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetScheduledActions(ctx, &database.GetScheduledActionsArgs{
//				CompartmentId:    compartmentId,
//				DisplayName:      pulumi.StringRef(scheduledActionDisplayName),
//				Id:               pulumi.StringRef(scheduledActionId),
//				SchedulingPlanId: pulumi.StringRef(testSchedulingPlan.Id),
//				ServiceType:      pulumi.StringRef(scheduledActionServiceType),
//				State:            pulumi.StringRef(scheduledActionState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetScheduledActions(ctx *pulumi.Context, args *GetScheduledActionsArgs, opts ...pulumi.InvokeOption) (*GetScheduledActionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetScheduledActionsResult
	err := ctx.Invoke("oci:Database/getScheduledActions:getScheduledActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScheduledActions.
type GetScheduledActionsArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetScheduledActionsFilter `pulumi:"filters"`
	// A filter to return only resources that match the given Scheduled Action id exactly.
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the given scheduling policy id exactly.
	SchedulingPlanId *string `pulumi:"schedulingPlanId"`
	// A filter to return only resources that match the given service type exactly.
	ServiceType *string `pulumi:"serviceType"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getScheduledActions.
type GetScheduledActionsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The display name of the Scheduled Action.
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetScheduledActionsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduled Action.
	Id *string `pulumi:"id"`
	// The list of scheduled_action_collection.
	ScheduledActionCollections []GetScheduledActionsScheduledActionCollection `pulumi:"scheduledActionCollections"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Plan.
	SchedulingPlanId *string `pulumi:"schedulingPlanId"`
	ServiceType      *string `pulumi:"serviceType"`
	// The current state of the Scheduled Action. Valid states are CREATING, NEEDS_ATTENTION, AVAILABLE, UPDATING, FAILED, DELETING and DELETED.
	State *string `pulumi:"state"`
}

func GetScheduledActionsOutput(ctx *pulumi.Context, args GetScheduledActionsOutputArgs, opts ...pulumi.InvokeOption) GetScheduledActionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetScheduledActionsResultOutput, error) {
			args := v.(GetScheduledActionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getScheduledActions:getScheduledActions", args, GetScheduledActionsResultOutput{}, options).(GetScheduledActionsResultOutput), nil
		}).(GetScheduledActionsResultOutput)
}

// A collection of arguments for invoking getScheduledActions.
type GetScheduledActionsOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput               `pulumi:"displayName"`
	Filters     GetScheduledActionsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given Scheduled Action id exactly.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the given scheduling policy id exactly.
	SchedulingPlanId pulumi.StringPtrInput `pulumi:"schedulingPlanId"`
	// A filter to return only resources that match the given service type exactly.
	ServiceType pulumi.StringPtrInput `pulumi:"serviceType"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetScheduledActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScheduledActionsArgs)(nil)).Elem()
}

// A collection of values returned by getScheduledActions.
type GetScheduledActionsResultOutput struct{ *pulumi.OutputState }

func (GetScheduledActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScheduledActionsResult)(nil)).Elem()
}

func (o GetScheduledActionsResultOutput) ToGetScheduledActionsResultOutput() GetScheduledActionsResultOutput {
	return o
}

func (o GetScheduledActionsResultOutput) ToGetScheduledActionsResultOutputWithContext(ctx context.Context) GetScheduledActionsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetScheduledActionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScheduledActionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The display name of the Scheduled Action.
func (o GetScheduledActionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScheduledActionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetScheduledActionsResultOutput) Filters() GetScheduledActionsFilterArrayOutput {
	return o.ApplyT(func(v GetScheduledActionsResult) []GetScheduledActionsFilter { return v.Filters }).(GetScheduledActionsFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduled Action.
func (o GetScheduledActionsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScheduledActionsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of scheduled_action_collection.
func (o GetScheduledActionsResultOutput) ScheduledActionCollections() GetScheduledActionsScheduledActionCollectionArrayOutput {
	return o.ApplyT(func(v GetScheduledActionsResult) []GetScheduledActionsScheduledActionCollection {
		return v.ScheduledActionCollections
	}).(GetScheduledActionsScheduledActionCollectionArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Plan.
func (o GetScheduledActionsResultOutput) SchedulingPlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScheduledActionsResult) *string { return v.SchedulingPlanId }).(pulumi.StringPtrOutput)
}

func (o GetScheduledActionsResultOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScheduledActionsResult) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

// The current state of the Scheduled Action. Valid states are CREATING, NEEDS_ATTENTION, AVAILABLE, UPDATING, FAILED, DELETING and DELETED.
func (o GetScheduledActionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScheduledActionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetScheduledActionsResultOutput{})
}
