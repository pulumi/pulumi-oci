// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Scheduling Plans in Oracle Cloud Infrastructure Database service.
//
// Lists the Scheduling Plan resources in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetSchedulingPlans(ctx, &database.GetSchedulingPlansArgs{
//				CompartmentId:      compartmentId,
//				DisplayName:        pulumi.StringRef(schedulingPlanDisplayName),
//				Id:                 pulumi.StringRef(schedulingPlanId),
//				ResourceId:         pulumi.StringRef(testResource.Id),
//				SchedulingPolicyId: pulumi.StringRef(testSchedulingPolicy.Id),
//				State:              pulumi.StringRef(schedulingPlanState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSchedulingPlans(ctx *pulumi.Context, args *GetSchedulingPlansArgs, opts ...pulumi.InvokeOption) (*GetSchedulingPlansResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSchedulingPlansResult
	err := ctx.Invoke("oci:Database/getSchedulingPlans:getSchedulingPlans", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSchedulingPlans.
type GetSchedulingPlansArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetSchedulingPlansFilter `pulumi:"filters"`
	// A filter to return only resources that match the given Schedule Plan id exactly.
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the given resource id exactly.
	ResourceId *string `pulumi:"resourceId"`
	// A filter to return only resources that match the given scheduling policy id exactly.
	SchedulingPolicyId *string `pulumi:"schedulingPolicyId"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getSchedulingPlans.
type GetSchedulingPlansResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The display name of the Scheduling Plan.
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetSchedulingPlansFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Plan.
	Id *string `pulumi:"id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
	ResourceId *string `pulumi:"resourceId"`
	// The list of scheduling_plan_collection.
	SchedulingPlanCollections []GetSchedulingPlansSchedulingPlanCollection `pulumi:"schedulingPlanCollections"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
	SchedulingPolicyId *string `pulumi:"schedulingPolicyId"`
	// The current state of the Scheduling Plan. Valid states are CREATING, NEEDS_ATTENTION, AVAILABLE, UPDATING, FAILED, DELETING and DELETED.
	State *string `pulumi:"state"`
}

func GetSchedulingPlansOutput(ctx *pulumi.Context, args GetSchedulingPlansOutputArgs, opts ...pulumi.InvokeOption) GetSchedulingPlansResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSchedulingPlansResultOutput, error) {
			args := v.(GetSchedulingPlansArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getSchedulingPlans:getSchedulingPlans", args, GetSchedulingPlansResultOutput{}, options).(GetSchedulingPlansResultOutput), nil
		}).(GetSchedulingPlansResultOutput)
}

// A collection of arguments for invoking getSchedulingPlans.
type GetSchedulingPlansOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput              `pulumi:"displayName"`
	Filters     GetSchedulingPlansFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given Schedule Plan id exactly.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the given resource id exactly.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// A filter to return only resources that match the given scheduling policy id exactly.
	SchedulingPolicyId pulumi.StringPtrInput `pulumi:"schedulingPolicyId"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetSchedulingPlansOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulingPlansArgs)(nil)).Elem()
}

// A collection of values returned by getSchedulingPlans.
type GetSchedulingPlansResultOutput struct{ *pulumi.OutputState }

func (GetSchedulingPlansResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulingPlansResult)(nil)).Elem()
}

func (o GetSchedulingPlansResultOutput) ToGetSchedulingPlansResultOutput() GetSchedulingPlansResultOutput {
	return o
}

func (o GetSchedulingPlansResultOutput) ToGetSchedulingPlansResultOutputWithContext(ctx context.Context) GetSchedulingPlansResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetSchedulingPlansResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchedulingPlansResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The display name of the Scheduling Plan.
func (o GetSchedulingPlansResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulingPlansResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetSchedulingPlansResultOutput) Filters() GetSchedulingPlansFilterArrayOutput {
	return o.ApplyT(func(v GetSchedulingPlansResult) []GetSchedulingPlansFilter { return v.Filters }).(GetSchedulingPlansFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Plan.
func (o GetSchedulingPlansResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulingPlansResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
func (o GetSchedulingPlansResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulingPlansResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The list of scheduling_plan_collection.
func (o GetSchedulingPlansResultOutput) SchedulingPlanCollections() GetSchedulingPlansSchedulingPlanCollectionArrayOutput {
	return o.ApplyT(func(v GetSchedulingPlansResult) []GetSchedulingPlansSchedulingPlanCollection {
		return v.SchedulingPlanCollections
	}).(GetSchedulingPlansSchedulingPlanCollectionArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
func (o GetSchedulingPlansResultOutput) SchedulingPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulingPlansResult) *string { return v.SchedulingPolicyId }).(pulumi.StringPtrOutput)
}

// The current state of the Scheduling Plan. Valid states are CREATING, NEEDS_ATTENTION, AVAILABLE, UPDATING, FAILED, DELETING and DELETED.
func (o GetSchedulingPlansResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulingPlansResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSchedulingPlansResultOutput{})
}
