// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Scheduling Policies in Oracle Cloud Infrastructure Database service.
//
// Lists the Scheduling Policy resources in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetSchedulingPolicies(ctx, &database.GetSchedulingPoliciesArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(schedulingPolicyDisplayName),
//				State:         pulumi.StringRef(schedulingPolicyState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSchedulingPolicies(ctx *pulumi.Context, args *GetSchedulingPoliciesArgs, opts ...pulumi.InvokeOption) (*GetSchedulingPoliciesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSchedulingPoliciesResult
	err := ctx.Invoke("oci:Database/getSchedulingPolicies:getSchedulingPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSchedulingPolicies.
type GetSchedulingPoliciesArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetSchedulingPoliciesFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getSchedulingPolicies.
type GetSchedulingPoliciesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The user-friendly name for the Scheduling Policy. The name does not need to be unique.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetSchedulingPoliciesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of scheduling_policies.
	SchedulingPolicies []GetSchedulingPoliciesSchedulingPolicy `pulumi:"schedulingPolicies"`
	// The current state of the Scheduling Policy. Valid states are CREATING, NEEDS_ATTENTION, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
	State *string `pulumi:"state"`
}

func GetSchedulingPoliciesOutput(ctx *pulumi.Context, args GetSchedulingPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetSchedulingPoliciesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSchedulingPoliciesResultOutput, error) {
			args := v.(GetSchedulingPoliciesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getSchedulingPolicies:getSchedulingPolicies", args, GetSchedulingPoliciesResultOutput{}, options).(GetSchedulingPoliciesResultOutput), nil
		}).(GetSchedulingPoliciesResultOutput)
}

// A collection of arguments for invoking getSchedulingPolicies.
type GetSchedulingPoliciesOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput                 `pulumi:"displayName"`
	Filters     GetSchedulingPoliciesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetSchedulingPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulingPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getSchedulingPolicies.
type GetSchedulingPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetSchedulingPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchedulingPoliciesResult)(nil)).Elem()
}

func (o GetSchedulingPoliciesResultOutput) ToGetSchedulingPoliciesResultOutput() GetSchedulingPoliciesResultOutput {
	return o
}

func (o GetSchedulingPoliciesResultOutput) ToGetSchedulingPoliciesResultOutputWithContext(ctx context.Context) GetSchedulingPoliciesResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetSchedulingPoliciesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchedulingPoliciesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The user-friendly name for the Scheduling Policy. The name does not need to be unique.
func (o GetSchedulingPoliciesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulingPoliciesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetSchedulingPoliciesResultOutput) Filters() GetSchedulingPoliciesFilterArrayOutput {
	return o.ApplyT(func(v GetSchedulingPoliciesResult) []GetSchedulingPoliciesFilter { return v.Filters }).(GetSchedulingPoliciesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSchedulingPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchedulingPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of scheduling_policies.
func (o GetSchedulingPoliciesResultOutput) SchedulingPolicies() GetSchedulingPoliciesSchedulingPolicyArrayOutput {
	return o.ApplyT(func(v GetSchedulingPoliciesResult) []GetSchedulingPoliciesSchedulingPolicy {
		return v.SchedulingPolicies
	}).(GetSchedulingPoliciesSchedulingPolicyArrayOutput)
}

// The current state of the Scheduling Policy. Valid states are CREATING, NEEDS_ATTENTION, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
func (o GetSchedulingPoliciesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchedulingPoliciesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSchedulingPoliciesResultOutput{})
}
