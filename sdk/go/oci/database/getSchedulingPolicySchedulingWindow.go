// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Scheduling Policy Scheduling Window resource in Oracle Cloud Infrastructure Database service.
//
// Gets information about the specified Scheduling Window.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetSchedulingPolicySchedulingWindow(ctx, &database.GetSchedulingPolicySchedulingWindowArgs{
//				SchedulingPolicyId: testSchedulingPolicy.Id,
//				SchedulingWindowId: testSchedulingWindow.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSchedulingPolicySchedulingWindow(ctx *pulumi.Context, args *LookupSchedulingPolicySchedulingWindowArgs, opts ...pulumi.InvokeOption) (*LookupSchedulingPolicySchedulingWindowResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSchedulingPolicySchedulingWindowResult
	err := ctx.Invoke("oci:Database/getSchedulingPolicySchedulingWindow:getSchedulingPolicySchedulingWindow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSchedulingPolicySchedulingWindow.
type LookupSchedulingPolicySchedulingWindowArgs struct {
	// The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	SchedulingPolicyId string `pulumi:"schedulingPolicyId"`
	// The Scheduling Window [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	SchedulingWindowId string `pulumi:"schedulingWindowId"`
}

// A collection of values returned by getSchedulingPolicySchedulingWindow.
type LookupSchedulingPolicySchedulingWindowResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The user-friendly name for the Scheduling Window. The name does not need to be unique.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Window.
	Id string `pulumi:"id"`
	// Additional information about the current lifecycle state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
	SchedulingPolicyId string `pulumi:"schedulingPolicyId"`
	SchedulingWindowId string `pulumi:"schedulingWindowId"`
	// The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
	State string `pulumi:"state"`
	// The date and time the Scheduling Window was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time of the next upcoming window associated within the schedulingWindow is planned to start.
	TimeNextSchedulingWindowStarts string `pulumi:"timeNextSchedulingWindowStarts"`
	// The last date and time that the Scheduling Window was updated.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The Single Scheduling Window details.
	WindowPreferences []GetSchedulingPolicySchedulingWindowWindowPreference `pulumi:"windowPreferences"`
}

func LookupSchedulingPolicySchedulingWindowOutput(ctx *pulumi.Context, args LookupSchedulingPolicySchedulingWindowOutputArgs, opts ...pulumi.InvokeOption) LookupSchedulingPolicySchedulingWindowResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSchedulingPolicySchedulingWindowResultOutput, error) {
			args := v.(LookupSchedulingPolicySchedulingWindowArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getSchedulingPolicySchedulingWindow:getSchedulingPolicySchedulingWindow", args, LookupSchedulingPolicySchedulingWindowResultOutput{}, options).(LookupSchedulingPolicySchedulingWindowResultOutput), nil
		}).(LookupSchedulingPolicySchedulingWindowResultOutput)
}

// A collection of arguments for invoking getSchedulingPolicySchedulingWindow.
type LookupSchedulingPolicySchedulingWindowOutputArgs struct {
	// The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	SchedulingPolicyId pulumi.StringInput `pulumi:"schedulingPolicyId"`
	// The Scheduling Window [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	SchedulingWindowId pulumi.StringInput `pulumi:"schedulingWindowId"`
}

func (LookupSchedulingPolicySchedulingWindowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchedulingPolicySchedulingWindowArgs)(nil)).Elem()
}

// A collection of values returned by getSchedulingPolicySchedulingWindow.
type LookupSchedulingPolicySchedulingWindowResultOutput struct{ *pulumi.OutputState }

func (LookupSchedulingPolicySchedulingWindowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchedulingPolicySchedulingWindowResult)(nil)).Elem()
}

func (o LookupSchedulingPolicySchedulingWindowResultOutput) ToLookupSchedulingPolicySchedulingWindowResultOutput() LookupSchedulingPolicySchedulingWindowResultOutput {
	return o
}

func (o LookupSchedulingPolicySchedulingWindowResultOutput) ToLookupSchedulingPolicySchedulingWindowResultOutputWithContext(ctx context.Context) LookupSchedulingPolicySchedulingWindowResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupSchedulingPolicySchedulingWindowResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o LookupSchedulingPolicySchedulingWindowResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The user-friendly name for the Scheduling Window. The name does not need to be unique.
func (o LookupSchedulingPolicySchedulingWindowResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupSchedulingPolicySchedulingWindowResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Window.
func (o LookupSchedulingPolicySchedulingWindowResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) string { return v.Id }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o LookupSchedulingPolicySchedulingWindowResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
func (o LookupSchedulingPolicySchedulingWindowResultOutput) SchedulingPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) string { return v.SchedulingPolicyId }).(pulumi.StringOutput)
}

func (o LookupSchedulingPolicySchedulingWindowResultOutput) SchedulingWindowId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) string { return v.SchedulingWindowId }).(pulumi.StringOutput)
}

// The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
func (o LookupSchedulingPolicySchedulingWindowResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the Scheduling Window was created.
func (o LookupSchedulingPolicySchedulingWindowResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time of the next upcoming window associated within the schedulingWindow is planned to start.
func (o LookupSchedulingPolicySchedulingWindowResultOutput) TimeNextSchedulingWindowStarts() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) string { return v.TimeNextSchedulingWindowStarts }).(pulumi.StringOutput)
}

// The last date and time that the Scheduling Window was updated.
func (o LookupSchedulingPolicySchedulingWindowResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The Single Scheduling Window details.
func (o LookupSchedulingPolicySchedulingWindowResultOutput) WindowPreferences() GetSchedulingPolicySchedulingWindowWindowPreferenceArrayOutput {
	return o.ApplyT(func(v LookupSchedulingPolicySchedulingWindowResult) []GetSchedulingPolicySchedulingWindowWindowPreference {
		return v.WindowPreferences
	}).(GetSchedulingPolicySchedulingWindowWindowPreferenceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSchedulingPolicySchedulingWindowResultOutput{})
}
