// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Vm Cluster resource in Oracle Cloud Infrastructure Database service.
//
// Gets information about the VM cluster. Applies to Exadata Cloud@Customer instances only.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetVmCluster(ctx, &database.GetVmClusterArgs{
//				VmClusterId: testVmClusterOciDatabaseVmCluster.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVmCluster(ctx *pulumi.Context, args *LookupVmClusterArgs, opts ...pulumi.InvokeOption) (*LookupVmClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVmClusterResult
	err := ctx.Invoke("oci:Database/getVmCluster:getVmCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVmCluster.
type LookupVmClusterArgs struct {
	// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	VmClusterId string `pulumi:"vmClusterId"`
}

// A collection of values returned by getVmCluster.
type LookupVmClusterResult struct {
	// The name of the availability domain that the VM cluster is located in.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	CpuCoreCount  int    `pulumi:"cpuCoreCount"`
	// The number of enabled CPU cores.
	CpusEnabled int `pulumi:"cpusEnabled"`
	// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
	DataCollectionOptions []GetVmClusterDataCollectionOption `pulumi:"dataCollectionOptions"`
	// Size of the DATA disk group in GBs.
	DataStorageSizeInGb float64 `pulumi:"dataStorageSizeInGb"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs float64 `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs int `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of Db server.
	DbServers []string `pulumi:"dbServers"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-friendly name for the Exadata Cloud@Customer VM cluster. The name does not need to be unique.
	DisplayName string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId string `pulumi:"exadataInfrastructureId"`
	// Details of the file system configuration of the VM cluster.
	FileSystemConfigurationDetails []GetVmClusterFileSystemConfigurationDetail `pulumi:"fileSystemConfigurationDetails"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion string `pulumi:"giVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	Id string `pulumi:"id"`
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled bool `pulumi:"isLocalBackupEnabled"`
	// If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
	IsSparseDiskgroupEnabled bool `pulumi:"isSparseDiskgroupEnabled"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId string `pulumi:"lastPatchHistoryEntryId"`
	// The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
	LicenseModel string `pulumi:"licenseModel"`
	// Additional information about the current lifecycle state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The memory allocated in GBs.
	MemorySizeInGbs int     `pulumi:"memorySizeInGbs"`
	OcpuCount       float64 `pulumi:"ocpuCount"`
	OcpusEnabled    float64 `pulumi:"ocpusEnabled"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape string `pulumi:"shape"`
	// The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
	// The current state of the VM cluster.
	State string `pulumi:"state"`
	// Operating system version of the image.
	SystemVersion string `pulumi:"systemVersion"`
	// The date and time that the VM cluster was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone    string `pulumi:"timeZone"`
	VmClusterId string `pulumi:"vmClusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	VmClusterNetworkId string `pulumi:"vmClusterNetworkId"`
}

func LookupVmClusterOutput(ctx *pulumi.Context, args LookupVmClusterOutputArgs, opts ...pulumi.InvokeOption) LookupVmClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVmClusterResult, error) {
			args := v.(LookupVmClusterArgs)
			r, err := LookupVmCluster(ctx, &args, opts...)
			var s LookupVmClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVmClusterResultOutput)
}

// A collection of arguments for invoking getVmCluster.
type LookupVmClusterOutputArgs struct {
	// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	VmClusterId pulumi.StringInput `pulumi:"vmClusterId"`
}

func (LookupVmClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVmClusterArgs)(nil)).Elem()
}

// A collection of values returned by getVmCluster.
type LookupVmClusterResultOutput struct{ *pulumi.OutputState }

func (LookupVmClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVmClusterResult)(nil)).Elem()
}

func (o LookupVmClusterResultOutput) ToLookupVmClusterResultOutput() LookupVmClusterResultOutput {
	return o
}

func (o LookupVmClusterResultOutput) ToLookupVmClusterResultOutputWithContext(ctx context.Context) LookupVmClusterResultOutput {
	return o
}

// The name of the availability domain that the VM cluster is located in.
func (o LookupVmClusterResultOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupVmClusterResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o LookupVmClusterResultOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmClusterResult) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// The number of enabled CPU cores.
func (o LookupVmClusterResultOutput) CpusEnabled() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmClusterResult) int { return v.CpusEnabled }).(pulumi.IntOutput)
}

// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
func (o LookupVmClusterResultOutput) DataCollectionOptions() GetVmClusterDataCollectionOptionArrayOutput {
	return o.ApplyT(func(v LookupVmClusterResult) []GetVmClusterDataCollectionOption { return v.DataCollectionOptions }).(GetVmClusterDataCollectionOptionArrayOutput)
}

// Size of the DATA disk group in GBs.
func (o LookupVmClusterResultOutput) DataStorageSizeInGb() pulumi.Float64Output {
	return o.ApplyT(func(v LookupVmClusterResult) float64 { return v.DataStorageSizeInGb }).(pulumi.Float64Output)
}

// Size, in terabytes, of the DATA disk group.
func (o LookupVmClusterResultOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v LookupVmClusterResult) float64 { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The local node storage allocated in GBs.
func (o LookupVmClusterResultOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmClusterResult) int { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The list of Db server.
func (o LookupVmClusterResultOutput) DbServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVmClusterResult) []string { return v.DbServers }).(pulumi.StringArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o LookupVmClusterResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVmClusterResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The user-friendly name for the Exadata Cloud@Customer VM cluster. The name does not need to be unique.
func (o LookupVmClusterResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
func (o LookupVmClusterResultOutput) ExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.ExadataInfrastructureId }).(pulumi.StringOutput)
}

// Details of the file system configuration of the VM cluster.
func (o LookupVmClusterResultOutput) FileSystemConfigurationDetails() GetVmClusterFileSystemConfigurationDetailArrayOutput {
	return o.ApplyT(func(v LookupVmClusterResult) []GetVmClusterFileSystemConfigurationDetail {
		return v.FileSystemConfigurationDetails
	}).(GetVmClusterFileSystemConfigurationDetailArrayOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o LookupVmClusterResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVmClusterResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The Oracle Grid Infrastructure software version for the VM cluster.
func (o LookupVmClusterResultOutput) GiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.GiVersion }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
func (o LookupVmClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
func (o LookupVmClusterResultOutput) IsLocalBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVmClusterResult) bool { return v.IsLocalBackupEnabled }).(pulumi.BoolOutput)
}

// If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
func (o LookupVmClusterResultOutput) IsSparseDiskgroupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVmClusterResult) bool { return v.IsSparseDiskgroupEnabled }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
func (o LookupVmClusterResultOutput) LastPatchHistoryEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.LastPatchHistoryEntryId }).(pulumi.StringOutput)
}

// The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
func (o LookupVmClusterResultOutput) LicenseModel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.LicenseModel }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o LookupVmClusterResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The memory allocated in GBs.
func (o LookupVmClusterResultOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVmClusterResult) int { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

func (o LookupVmClusterResultOutput) OcpuCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupVmClusterResult) float64 { return v.OcpuCount }).(pulumi.Float64Output)
}

func (o LookupVmClusterResultOutput) OcpusEnabled() pulumi.Float64Output {
	return o.ApplyT(func(v LookupVmClusterResult) float64 { return v.OcpusEnabled }).(pulumi.Float64Output)
}

// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
func (o LookupVmClusterResultOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.Shape }).(pulumi.StringOutput)
}

// The public key portion of one or more key pairs used for SSH access to the VM cluster.
func (o LookupVmClusterResultOutput) SshPublicKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVmClusterResult) []string { return v.SshPublicKeys }).(pulumi.StringArrayOutput)
}

// The current state of the VM cluster.
func (o LookupVmClusterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.State }).(pulumi.StringOutput)
}

// Operating system version of the image.
func (o LookupVmClusterResultOutput) SystemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.SystemVersion }).(pulumi.StringOutput)
}

// The date and time that the VM cluster was created.
func (o LookupVmClusterResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
func (o LookupVmClusterResultOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.TimeZone }).(pulumi.StringOutput)
}

func (o LookupVmClusterResultOutput) VmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.VmClusterId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
func (o LookupVmClusterResultOutput) VmClusterNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVmClusterResult) string { return v.VmClusterNetworkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVmClusterResultOutput{})
}
