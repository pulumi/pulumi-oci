// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Vm Cluster Networks in Oracle Cloud Infrastructure Database service.
//
// Gets a list of the VM cluster networks in the specified compartment. Applies to Exadata Cloud@Customer instances only.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.GetVmClusterNetworks(ctx, &database.GetVmClusterNetworksArgs{
//				CompartmentId:           compartmentId,
//				ExadataInfrastructureId: testExadataInfrastructure.Id,
//				DisplayName:             pulumi.StringRef(vmClusterNetworkDisplayName),
//				State:                   pulumi.StringRef(vmClusterNetworkState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVmClusterNetworks(ctx *pulumi.Context, args *GetVmClusterNetworksArgs, opts ...pulumi.InvokeOption) (*GetVmClusterNetworksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVmClusterNetworksResult
	err := ctx.Invoke("oci:Database/getVmClusterNetworks:getVmClusterNetworks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVmClusterNetworks.
type GetVmClusterNetworksArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string `pulumi:"displayName"`
	// The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExadataInfrastructureId string                       `pulumi:"exadataInfrastructureId"`
	Filters                 []GetVmClusterNetworksFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getVmClusterNetworks.
type GetVmClusterNetworksResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The user-friendly name for the VM cluster network. The name does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId string                       `pulumi:"exadataInfrastructureId"`
	Filters                 []GetVmClusterNetworksFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the VM cluster network nodes. CREATING - The resource is being created REQUIRES_VALIDATION - The resource is created and may not be usable until it is validated. VALIDATING - The resource is being validated and not available to use. VALIDATED - The resource is validated and is available for consumption by VM cluster. VALIDATION_FAILED - The resource validation has failed and might require user input to be corrected. UPDATING - The resource is being updated and not available to use. ALLOCATED - The resource is currently being used by VM cluster. TERMINATING - The resource is being deleted and not available to use. TERMINATED - The resource is deleted and unavailable. FAILED - The resource is in a failed state due to validation or other errors.
	State *string `pulumi:"state"`
	// The list of vm_cluster_networks.
	VmClusterNetworks []GetVmClusterNetworksVmClusterNetwork `pulumi:"vmClusterNetworks"`
}

func GetVmClusterNetworksOutput(ctx *pulumi.Context, args GetVmClusterNetworksOutputArgs, opts ...pulumi.InvokeOption) GetVmClusterNetworksResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVmClusterNetworksResultOutput, error) {
			args := v.(GetVmClusterNetworksArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Database/getVmClusterNetworks:getVmClusterNetworks", args, GetVmClusterNetworksResultOutput{}, options).(GetVmClusterNetworksResultOutput), nil
		}).(GetVmClusterNetworksResultOutput)
}

// A collection of arguments for invoking getVmClusterNetworks.
type GetVmClusterNetworksOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	ExadataInfrastructureId pulumi.StringInput                   `pulumi:"exadataInfrastructureId"`
	Filters                 GetVmClusterNetworksFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetVmClusterNetworksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClusterNetworksArgs)(nil)).Elem()
}

// A collection of values returned by getVmClusterNetworks.
type GetVmClusterNetworksResultOutput struct{ *pulumi.OutputState }

func (GetVmClusterNetworksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClusterNetworksResult)(nil)).Elem()
}

func (o GetVmClusterNetworksResultOutput) ToGetVmClusterNetworksResultOutput() GetVmClusterNetworksResultOutput {
	return o
}

func (o GetVmClusterNetworksResultOutput) ToGetVmClusterNetworksResultOutputWithContext(ctx context.Context) GetVmClusterNetworksResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetVmClusterNetworksResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClusterNetworksResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The user-friendly name for the VM cluster network. The name does not need to be unique.
func (o GetVmClusterNetworksResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVmClusterNetworksResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
func (o GetVmClusterNetworksResultOutput) ExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClusterNetworksResult) string { return v.ExadataInfrastructureId }).(pulumi.StringOutput)
}

func (o GetVmClusterNetworksResultOutput) Filters() GetVmClusterNetworksFilterArrayOutput {
	return o.ApplyT(func(v GetVmClusterNetworksResult) []GetVmClusterNetworksFilter { return v.Filters }).(GetVmClusterNetworksFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVmClusterNetworksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClusterNetworksResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the VM cluster network nodes. CREATING - The resource is being created REQUIRES_VALIDATION - The resource is created and may not be usable until it is validated. VALIDATING - The resource is being validated and not available to use. VALIDATED - The resource is validated and is available for consumption by VM cluster. VALIDATION_FAILED - The resource validation has failed and might require user input to be corrected. UPDATING - The resource is being updated and not available to use. ALLOCATED - The resource is currently being used by VM cluster. TERMINATING - The resource is being deleted and not available to use. TERMINATED - The resource is deleted and unavailable. FAILED - The resource is in a failed state due to validation or other errors.
func (o GetVmClusterNetworksResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVmClusterNetworksResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of vm_cluster_networks.
func (o GetVmClusterNetworksResultOutput) VmClusterNetworks() GetVmClusterNetworksVmClusterNetworkArrayOutput {
	return o.ApplyT(func(v GetVmClusterNetworksResult) []GetVmClusterNetworksVmClusterNetwork { return v.VmClusterNetworks }).(GetVmClusterNetworksVmClusterNetworkArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVmClusterNetworksResultOutput{})
}
