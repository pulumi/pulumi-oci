// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Vm Cluster Patches in Oracle Cloud Infrastructure Database service.
//
// Lists the patches applicable to the specified VM cluster in an Exadata Cloud@Customer system.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetVmClusterPatches(ctx, &database.GetVmClusterPatchesArgs{
//				VmClusterId: testVmCluster.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetVmClusterPatches(ctx *pulumi.Context, args *GetVmClusterPatchesArgs, opts ...pulumi.InvokeOption) (*GetVmClusterPatchesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVmClusterPatchesResult
	err := ctx.Invoke("oci:Database/getVmClusterPatches:getVmClusterPatches", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVmClusterPatches.
type GetVmClusterPatchesArgs struct {
	Filters []GetVmClusterPatchesFilter `pulumi:"filters"`
	// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	VmClusterId string `pulumi:"vmClusterId"`
}

// A collection of values returned by getVmClusterPatches.
type GetVmClusterPatchesResult struct {
	Filters []GetVmClusterPatchesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of patches.
	Patches     []GetVmClusterPatchesPatch `pulumi:"patches"`
	VmClusterId string                     `pulumi:"vmClusterId"`
}

func GetVmClusterPatchesOutput(ctx *pulumi.Context, args GetVmClusterPatchesOutputArgs, opts ...pulumi.InvokeOption) GetVmClusterPatchesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVmClusterPatchesResult, error) {
			args := v.(GetVmClusterPatchesArgs)
			r, err := GetVmClusterPatches(ctx, &args, opts...)
			var s GetVmClusterPatchesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVmClusterPatchesResultOutput)
}

// A collection of arguments for invoking getVmClusterPatches.
type GetVmClusterPatchesOutputArgs struct {
	Filters GetVmClusterPatchesFilterArrayInput `pulumi:"filters"`
	// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	VmClusterId pulumi.StringInput `pulumi:"vmClusterId"`
}

func (GetVmClusterPatchesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClusterPatchesArgs)(nil)).Elem()
}

// A collection of values returned by getVmClusterPatches.
type GetVmClusterPatchesResultOutput struct{ *pulumi.OutputState }

func (GetVmClusterPatchesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClusterPatchesResult)(nil)).Elem()
}

func (o GetVmClusterPatchesResultOutput) ToGetVmClusterPatchesResultOutput() GetVmClusterPatchesResultOutput {
	return o
}

func (o GetVmClusterPatchesResultOutput) ToGetVmClusterPatchesResultOutputWithContext(ctx context.Context) GetVmClusterPatchesResultOutput {
	return o
}

func (o GetVmClusterPatchesResultOutput) Filters() GetVmClusterPatchesFilterArrayOutput {
	return o.ApplyT(func(v GetVmClusterPatchesResult) []GetVmClusterPatchesFilter { return v.Filters }).(GetVmClusterPatchesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVmClusterPatchesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClusterPatchesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of patches.
func (o GetVmClusterPatchesResultOutput) Patches() GetVmClusterPatchesPatchArrayOutput {
	return o.ApplyT(func(v GetVmClusterPatchesResult) []GetVmClusterPatchesPatch { return v.Patches }).(GetVmClusterPatchesPatchArrayOutput)
}

func (o GetVmClusterPatchesResultOutput) VmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClusterPatchesResult) string { return v.VmClusterId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVmClusterPatchesResultOutput{})
}
