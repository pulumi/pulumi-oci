// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Vm Cluster Updates in Oracle Cloud Infrastructure Database service.
//
// Lists the maintenance updates that can be applied to the specified VM cluster. Applies to Exadata Cloud@Customer instances only.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetVmClusterUpdates(ctx, &database.GetVmClusterUpdatesArgs{
//				VmClusterId: testVmCluster.Id,
//				State:       pulumi.StringRef(vmClusterUpdateState),
//				UpdateType:  pulumi.StringRef(vmClusterUpdateUpdateType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVmClusterUpdates(ctx *pulumi.Context, args *GetVmClusterUpdatesArgs, opts ...pulumi.InvokeOption) (*GetVmClusterUpdatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVmClusterUpdatesResult
	err := ctx.Invoke("oci:Database/getVmClusterUpdates:getVmClusterUpdates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVmClusterUpdates.
type GetVmClusterUpdatesArgs struct {
	Filters []GetVmClusterUpdatesFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
	// A filter to return only resources that match the given update type exactly.
	UpdateType *string `pulumi:"updateType"`
	// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	VmClusterId string `pulumi:"vmClusterId"`
}

// A collection of values returned by getVmClusterUpdates.
type GetVmClusterUpdatesResult struct {
	Filters []GetVmClusterUpdatesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the maintenance update. Dependent on value of `lastAction`.
	State *string `pulumi:"state"`
	// The type of VM cluster maintenance update.
	UpdateType  *string `pulumi:"updateType"`
	VmClusterId string  `pulumi:"vmClusterId"`
	// The list of vm_cluster_updates.
	VmClusterUpdates []GetVmClusterUpdatesVmClusterUpdate `pulumi:"vmClusterUpdates"`
}

func GetVmClusterUpdatesOutput(ctx *pulumi.Context, args GetVmClusterUpdatesOutputArgs, opts ...pulumi.InvokeOption) GetVmClusterUpdatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVmClusterUpdatesResult, error) {
			args := v.(GetVmClusterUpdatesArgs)
			r, err := GetVmClusterUpdates(ctx, &args, opts...)
			var s GetVmClusterUpdatesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVmClusterUpdatesResultOutput)
}

// A collection of arguments for invoking getVmClusterUpdates.
type GetVmClusterUpdatesOutputArgs struct {
	Filters GetVmClusterUpdatesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return only resources that match the given update type exactly.
	UpdateType pulumi.StringPtrInput `pulumi:"updateType"`
	// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	VmClusterId pulumi.StringInput `pulumi:"vmClusterId"`
}

func (GetVmClusterUpdatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClusterUpdatesArgs)(nil)).Elem()
}

// A collection of values returned by getVmClusterUpdates.
type GetVmClusterUpdatesResultOutput struct{ *pulumi.OutputState }

func (GetVmClusterUpdatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClusterUpdatesResult)(nil)).Elem()
}

func (o GetVmClusterUpdatesResultOutput) ToGetVmClusterUpdatesResultOutput() GetVmClusterUpdatesResultOutput {
	return o
}

func (o GetVmClusterUpdatesResultOutput) ToGetVmClusterUpdatesResultOutputWithContext(ctx context.Context) GetVmClusterUpdatesResultOutput {
	return o
}

func (o GetVmClusterUpdatesResultOutput) Filters() GetVmClusterUpdatesFilterArrayOutput {
	return o.ApplyT(func(v GetVmClusterUpdatesResult) []GetVmClusterUpdatesFilter { return v.Filters }).(GetVmClusterUpdatesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVmClusterUpdatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClusterUpdatesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the maintenance update. Dependent on value of `lastAction`.
func (o GetVmClusterUpdatesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVmClusterUpdatesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The type of VM cluster maintenance update.
func (o GetVmClusterUpdatesResultOutput) UpdateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVmClusterUpdatesResult) *string { return v.UpdateType }).(pulumi.StringPtrOutput)
}

func (o GetVmClusterUpdatesResultOutput) VmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClusterUpdatesResult) string { return v.VmClusterId }).(pulumi.StringOutput)
}

// The list of vm_cluster_updates.
func (o GetVmClusterUpdatesResultOutput) VmClusterUpdates() GetVmClusterUpdatesVmClusterUpdateArrayOutput {
	return o.ApplyT(func(v GetVmClusterUpdatesResult) []GetVmClusterUpdatesVmClusterUpdate { return v.VmClusterUpdates }).(GetVmClusterUpdatesVmClusterUpdateArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVmClusterUpdatesResultOutput{})
}
