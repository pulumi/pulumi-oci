// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Vm Clusters in Oracle Cloud Infrastructure Database service.
//
// Lists the VM clusters in the specified compartment. Applies to Exadata Cloud@Customer instances only.
// To list the cloud VM clusters in an Exadata Cloud Service instance, use the [ListCloudVmClusters ](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/ListCloudVmClusters) operation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.GetVmClusters(ctx, &database.GetVmClustersArgs{
//				CompartmentId:           _var.Compartment_id,
//				DisplayName:             pulumi.StringRef(_var.Vm_cluster_display_name),
//				ExadataInfrastructureId: pulumi.StringRef(oci_database_exadata_infrastructure.Test_exadata_infrastructure.Id),
//				State:                   pulumi.StringRef(_var.Vm_cluster_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVmClusters(ctx *pulumi.Context, args *GetVmClustersArgs, opts ...pulumi.InvokeOption) (*GetVmClustersResult, error) {
	var rv GetVmClustersResult
	err := ctx.Invoke("oci:Database/getVmClusters:getVmClusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVmClusters.
type GetVmClustersArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string `pulumi:"displayName"`
	// If provided, filters the results for the given Exadata Infrastructure.
	ExadataInfrastructureId *string               `pulumi:"exadataInfrastructureId"`
	Filters                 []GetVmClustersFilter `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State *string `pulumi:"state"`
}

// A collection of values returned by getVmClusters.
type GetVmClustersResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The user-friendly name for the Exadata Cloud@Customer VM cluster. The name does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId *string               `pulumi:"exadataInfrastructureId"`
	Filters                 []GetVmClustersFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the VM cluster.
	State *string `pulumi:"state"`
	// The list of vm_clusters.
	VmClusters []GetVmClustersVmCluster `pulumi:"vmClusters"`
}

func GetVmClustersOutput(ctx *pulumi.Context, args GetVmClustersOutputArgs, opts ...pulumi.InvokeOption) GetVmClustersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVmClustersResult, error) {
			args := v.(GetVmClustersArgs)
			r, err := GetVmClusters(ctx, &args, opts...)
			var s GetVmClustersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVmClustersResultOutput)
}

// A collection of arguments for invoking getVmClusters.
type GetVmClustersOutputArgs struct {
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// If provided, filters the results for the given Exadata Infrastructure.
	ExadataInfrastructureId pulumi.StringPtrInput         `pulumi:"exadataInfrastructureId"`
	Filters                 GetVmClustersFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetVmClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClustersArgs)(nil)).Elem()
}

// A collection of values returned by getVmClusters.
type GetVmClustersResultOutput struct{ *pulumi.OutputState }

func (GetVmClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClustersResult)(nil)).Elem()
}

func (o GetVmClustersResultOutput) ToGetVmClustersResultOutput() GetVmClustersResultOutput {
	return o
}

func (o GetVmClustersResultOutput) ToGetVmClustersResultOutputWithContext(ctx context.Context) GetVmClustersResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetVmClustersResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The user-friendly name for the Exadata Cloud@Customer VM cluster. The name does not need to be unique.
func (o GetVmClustersResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVmClustersResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
func (o GetVmClustersResultOutput) ExadataInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVmClustersResult) *string { return v.ExadataInfrastructureId }).(pulumi.StringPtrOutput)
}

func (o GetVmClustersResultOutput) Filters() GetVmClustersFilterArrayOutput {
	return o.ApplyT(func(v GetVmClustersResult) []GetVmClustersFilter { return v.Filters }).(GetVmClustersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVmClustersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the VM cluster.
func (o GetVmClustersResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVmClustersResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of vm_clusters.
func (o GetVmClustersResultOutput) VmClusters() GetVmClustersVmClusterArrayOutput {
	return o.ApplyT(func(v GetVmClustersResult) []GetVmClustersVmCluster { return v.VmClusters }).(GetVmClustersVmClusterArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVmClustersResultOutput{})
}
