// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type GetVmClustersFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetVmClustersFilterInput is an input type that accepts GetVmClustersFilterArgs and GetVmClustersFilterOutput values.
// You can construct a concrete instance of `GetVmClustersFilterInput` via:
//
//	GetVmClustersFilterArgs{...}
type GetVmClustersFilterInput interface {
	pulumi.Input

	ToGetVmClustersFilterOutput() GetVmClustersFilterOutput
	ToGetVmClustersFilterOutputWithContext(context.Context) GetVmClustersFilterOutput
}

type GetVmClustersFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVmClustersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClustersFilter)(nil)).Elem()
}

func (i GetVmClustersFilterArgs) ToGetVmClustersFilterOutput() GetVmClustersFilterOutput {
	return i.ToGetVmClustersFilterOutputWithContext(context.Background())
}

func (i GetVmClustersFilterArgs) ToGetVmClustersFilterOutputWithContext(ctx context.Context) GetVmClustersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmClustersFilterOutput)
}

func (i GetVmClustersFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetVmClustersFilter] {
	return pulumix.Output[GetVmClustersFilter]{
		OutputState: i.ToGetVmClustersFilterOutputWithContext(ctx).OutputState,
	}
}

// GetVmClustersFilterArrayInput is an input type that accepts GetVmClustersFilterArray and GetVmClustersFilterArrayOutput values.
// You can construct a concrete instance of `GetVmClustersFilterArrayInput` via:
//
//	GetVmClustersFilterArray{ GetVmClustersFilterArgs{...} }
type GetVmClustersFilterArrayInput interface {
	pulumi.Input

	ToGetVmClustersFilterArrayOutput() GetVmClustersFilterArrayOutput
	ToGetVmClustersFilterArrayOutputWithContext(context.Context) GetVmClustersFilterArrayOutput
}

type GetVmClustersFilterArray []GetVmClustersFilterInput

func (GetVmClustersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmClustersFilter)(nil)).Elem()
}

func (i GetVmClustersFilterArray) ToGetVmClustersFilterArrayOutput() GetVmClustersFilterArrayOutput {
	return i.ToGetVmClustersFilterArrayOutputWithContext(context.Background())
}

func (i GetVmClustersFilterArray) ToGetVmClustersFilterArrayOutputWithContext(ctx context.Context) GetVmClustersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmClustersFilterArrayOutput)
}

func (i GetVmClustersFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVmClustersFilter] {
	return pulumix.Output[[]GetVmClustersFilter]{
		OutputState: i.ToGetVmClustersFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVmClustersFilterOutput struct{ *pulumi.OutputState }

func (GetVmClustersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClustersFilter)(nil)).Elem()
}

func (o GetVmClustersFilterOutput) ToGetVmClustersFilterOutput() GetVmClustersFilterOutput {
	return o
}

func (o GetVmClustersFilterOutput) ToGetVmClustersFilterOutputWithContext(ctx context.Context) GetVmClustersFilterOutput {
	return o
}

func (o GetVmClustersFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVmClustersFilter] {
	return pulumix.Output[GetVmClustersFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVmClustersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVmClustersFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVmClustersFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetVmClustersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmClustersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVmClustersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVmClustersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmClustersFilter)(nil)).Elem()
}

func (o GetVmClustersFilterArrayOutput) ToGetVmClustersFilterArrayOutput() GetVmClustersFilterArrayOutput {
	return o
}

func (o GetVmClustersFilterArrayOutput) ToGetVmClustersFilterArrayOutputWithContext(ctx context.Context) GetVmClustersFilterArrayOutput {
	return o
}

func (o GetVmClustersFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVmClustersFilter] {
	return pulumix.Output[[]GetVmClustersFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVmClustersFilterArrayOutput) Index(i pulumi.IntInput) GetVmClustersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmClustersFilter {
		return vs[0].([]GetVmClustersFilter)[vs[1].(int)]
	}).(GetVmClustersFilterOutput)
}

type GetVmClustersVmCluster struct {
	// The name of the availability domain that the VM cluster is located in.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId string `pulumi:"compartmentId"`
	CpuCoreCount  int    `pulumi:"cpuCoreCount"`
	// The number of enabled CPU cores.
	CpusEnabled int `pulumi:"cpusEnabled"`
	// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
	DataCollectionOptions []GetVmClustersVmClusterDataCollectionOption `pulumi:"dataCollectionOptions"`
	// Size of the DATA disk group in GBs.
	DataStorageSizeInGb float64 `pulumi:"dataStorageSizeInGb"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs float64 `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs int `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of Db server.
	DbServers []string `pulumi:"dbServers"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName string `pulumi:"displayName"`
	// If provided, filters the results for the given Exadata Infrastructure.
	ExadataInfrastructureId string `pulumi:"exadataInfrastructureId"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion string `pulumi:"giVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	Id string `pulumi:"id"`
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled bool `pulumi:"isLocalBackupEnabled"`
	// If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
	IsSparseDiskgroupEnabled bool `pulumi:"isSparseDiskgroupEnabled"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId string `pulumi:"lastPatchHistoryEntryId"`
	// The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
	LicenseModel string `pulumi:"licenseModel"`
	// Additional information about the current lifecycle state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The memory allocated in GBs.
	MemorySizeInGbs int     `pulumi:"memorySizeInGbs"`
	OcpuCount       float64 `pulumi:"ocpuCount"`
	OcpusEnabled    float64 `pulumi:"ocpusEnabled"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape string `pulumi:"shape"`
	// The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State string `pulumi:"state"`
	// Operating system version of the image.
	SystemVersion string `pulumi:"systemVersion"`
	// The date and time that the VM cluster was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone string `pulumi:"timeZone"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	VmClusterNetworkId string `pulumi:"vmClusterNetworkId"`
}

// GetVmClustersVmClusterInput is an input type that accepts GetVmClustersVmClusterArgs and GetVmClustersVmClusterOutput values.
// You can construct a concrete instance of `GetVmClustersVmClusterInput` via:
//
//	GetVmClustersVmClusterArgs{...}
type GetVmClustersVmClusterInput interface {
	pulumi.Input

	ToGetVmClustersVmClusterOutput() GetVmClustersVmClusterOutput
	ToGetVmClustersVmClusterOutputWithContext(context.Context) GetVmClustersVmClusterOutput
}

type GetVmClustersVmClusterArgs struct {
	// The name of the availability domain that the VM cluster is located in.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	CpuCoreCount  pulumi.IntInput    `pulumi:"cpuCoreCount"`
	// The number of enabled CPU cores.
	CpusEnabled pulumi.IntInput `pulumi:"cpusEnabled"`
	// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
	DataCollectionOptions GetVmClustersVmClusterDataCollectionOptionArrayInput `pulumi:"dataCollectionOptions"`
	// Size of the DATA disk group in GBs.
	DataStorageSizeInGb pulumi.Float64Input `pulumi:"dataStorageSizeInGb"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs pulumi.Float64Input `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntInput `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of Db server.
	DbServers pulumi.StringArrayInput `pulumi:"dbServers"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// If provided, filters the results for the given Exadata Infrastructure.
	ExadataInfrastructureId pulumi.StringInput `pulumi:"exadataInfrastructureId"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion pulumi.StringInput `pulumi:"giVersion"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled pulumi.BoolInput `pulumi:"isLocalBackupEnabled"`
	// If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
	IsSparseDiskgroupEnabled pulumi.BoolInput `pulumi:"isSparseDiskgroupEnabled"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId pulumi.StringInput `pulumi:"lastPatchHistoryEntryId"`
	// The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
	LicenseModel pulumi.StringInput `pulumi:"licenseModel"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The memory allocated in GBs.
	MemorySizeInGbs pulumi.IntInput     `pulumi:"memorySizeInGbs"`
	OcpuCount       pulumi.Float64Input `pulumi:"ocpuCount"`
	OcpusEnabled    pulumi.Float64Input `pulumi:"ocpusEnabled"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringInput `pulumi:"shape"`
	// The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys pulumi.StringArrayInput `pulumi:"sshPublicKeys"`
	// A filter to return only resources that match the given lifecycle state exactly.
	State pulumi.StringInput `pulumi:"state"`
	// Operating system version of the image.
	SystemVersion pulumi.StringInput `pulumi:"systemVersion"`
	// The date and time that the VM cluster was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	VmClusterNetworkId pulumi.StringInput `pulumi:"vmClusterNetworkId"`
}

func (GetVmClustersVmClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClustersVmCluster)(nil)).Elem()
}

func (i GetVmClustersVmClusterArgs) ToGetVmClustersVmClusterOutput() GetVmClustersVmClusterOutput {
	return i.ToGetVmClustersVmClusterOutputWithContext(context.Background())
}

func (i GetVmClustersVmClusterArgs) ToGetVmClustersVmClusterOutputWithContext(ctx context.Context) GetVmClustersVmClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmClustersVmClusterOutput)
}

func (i GetVmClustersVmClusterArgs) ToOutput(ctx context.Context) pulumix.Output[GetVmClustersVmCluster] {
	return pulumix.Output[GetVmClustersVmCluster]{
		OutputState: i.ToGetVmClustersVmClusterOutputWithContext(ctx).OutputState,
	}
}

// GetVmClustersVmClusterArrayInput is an input type that accepts GetVmClustersVmClusterArray and GetVmClustersVmClusterArrayOutput values.
// You can construct a concrete instance of `GetVmClustersVmClusterArrayInput` via:
//
//	GetVmClustersVmClusterArray{ GetVmClustersVmClusterArgs{...} }
type GetVmClustersVmClusterArrayInput interface {
	pulumi.Input

	ToGetVmClustersVmClusterArrayOutput() GetVmClustersVmClusterArrayOutput
	ToGetVmClustersVmClusterArrayOutputWithContext(context.Context) GetVmClustersVmClusterArrayOutput
}

type GetVmClustersVmClusterArray []GetVmClustersVmClusterInput

func (GetVmClustersVmClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmClustersVmCluster)(nil)).Elem()
}

func (i GetVmClustersVmClusterArray) ToGetVmClustersVmClusterArrayOutput() GetVmClustersVmClusterArrayOutput {
	return i.ToGetVmClustersVmClusterArrayOutputWithContext(context.Background())
}

func (i GetVmClustersVmClusterArray) ToGetVmClustersVmClusterArrayOutputWithContext(ctx context.Context) GetVmClustersVmClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmClustersVmClusterArrayOutput)
}

func (i GetVmClustersVmClusterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVmClustersVmCluster] {
	return pulumix.Output[[]GetVmClustersVmCluster]{
		OutputState: i.ToGetVmClustersVmClusterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVmClustersVmClusterOutput struct{ *pulumi.OutputState }

func (GetVmClustersVmClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClustersVmCluster)(nil)).Elem()
}

func (o GetVmClustersVmClusterOutput) ToGetVmClustersVmClusterOutput() GetVmClustersVmClusterOutput {
	return o
}

func (o GetVmClustersVmClusterOutput) ToGetVmClustersVmClusterOutputWithContext(ctx context.Context) GetVmClustersVmClusterOutput {
	return o
}

func (o GetVmClustersVmClusterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVmClustersVmCluster] {
	return pulumix.Output[GetVmClustersVmCluster]{
		OutputState: o.OutputState,
	}
}

// The name of the availability domain that the VM cluster is located in.
func (o GetVmClustersVmClusterOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
func (o GetVmClustersVmClusterOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetVmClustersVmClusterOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// The number of enabled CPU cores.
func (o GetVmClustersVmClusterOutput) CpusEnabled() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) int { return v.CpusEnabled }).(pulumi.IntOutput)
}

// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
func (o GetVmClustersVmClusterOutput) DataCollectionOptions() GetVmClustersVmClusterDataCollectionOptionArrayOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) []GetVmClustersVmClusterDataCollectionOption {
		return v.DataCollectionOptions
	}).(GetVmClustersVmClusterDataCollectionOptionArrayOutput)
}

// Size of the DATA disk group in GBs.
func (o GetVmClustersVmClusterOutput) DataStorageSizeInGb() pulumi.Float64Output {
	return o.ApplyT(func(v GetVmClustersVmCluster) float64 { return v.DataStorageSizeInGb }).(pulumi.Float64Output)
}

// Size, in terabytes, of the DATA disk group.
func (o GetVmClustersVmClusterOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v GetVmClustersVmCluster) float64 { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The local node storage allocated in GBs.
func (o GetVmClustersVmClusterOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) int { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The list of Db server.
func (o GetVmClustersVmClusterOutput) DbServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) []string { return v.DbServers }).(pulumi.StringArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o GetVmClustersVmClusterOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the entire display name given. The match is not case sensitive.
func (o GetVmClustersVmClusterOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.DisplayName }).(pulumi.StringOutput)
}

// If provided, filters the results for the given Exadata Infrastructure.
func (o GetVmClustersVmClusterOutput) ExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.ExadataInfrastructureId }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetVmClustersVmClusterOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The Oracle Grid Infrastructure software version for the VM cluster.
func (o GetVmClustersVmClusterOutput) GiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.GiVersion }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
func (o GetVmClustersVmClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.Id }).(pulumi.StringOutput)
}

// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
func (o GetVmClustersVmClusterOutput) IsLocalBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) bool { return v.IsLocalBackupEnabled }).(pulumi.BoolOutput)
}

// If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
func (o GetVmClustersVmClusterOutput) IsSparseDiskgroupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) bool { return v.IsSparseDiskgroupEnabled }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
func (o GetVmClustersVmClusterOutput) LastPatchHistoryEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.LastPatchHistoryEntryId }).(pulumi.StringOutput)
}

// The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
func (o GetVmClustersVmClusterOutput) LicenseModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.LicenseModel }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o GetVmClustersVmClusterOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The memory allocated in GBs.
func (o GetVmClustersVmClusterOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) int { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

func (o GetVmClustersVmClusterOutput) OcpuCount() pulumi.Float64Output {
	return o.ApplyT(func(v GetVmClustersVmCluster) float64 { return v.OcpuCount }).(pulumi.Float64Output)
}

func (o GetVmClustersVmClusterOutput) OcpusEnabled() pulumi.Float64Output {
	return o.ApplyT(func(v GetVmClustersVmCluster) float64 { return v.OcpusEnabled }).(pulumi.Float64Output)
}

// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
func (o GetVmClustersVmClusterOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.Shape }).(pulumi.StringOutput)
}

// The public key portion of one or more key pairs used for SSH access to the VM cluster.
func (o GetVmClustersVmClusterOutput) SshPublicKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) []string { return v.SshPublicKeys }).(pulumi.StringArrayOutput)
}

// A filter to return only resources that match the given lifecycle state exactly.
func (o GetVmClustersVmClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.State }).(pulumi.StringOutput)
}

// Operating system version of the image.
func (o GetVmClustersVmClusterOutput) SystemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.SystemVersion }).(pulumi.StringOutput)
}

// The date and time that the VM cluster was created.
func (o GetVmClustersVmClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
func (o GetVmClustersVmClusterOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.TimeZone }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
func (o GetVmClustersVmClusterOutput) VmClusterNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVmClustersVmCluster) string { return v.VmClusterNetworkId }).(pulumi.StringOutput)
}

type GetVmClustersVmClusterArrayOutput struct{ *pulumi.OutputState }

func (GetVmClustersVmClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmClustersVmCluster)(nil)).Elem()
}

func (o GetVmClustersVmClusterArrayOutput) ToGetVmClustersVmClusterArrayOutput() GetVmClustersVmClusterArrayOutput {
	return o
}

func (o GetVmClustersVmClusterArrayOutput) ToGetVmClustersVmClusterArrayOutputWithContext(ctx context.Context) GetVmClustersVmClusterArrayOutput {
	return o
}

func (o GetVmClustersVmClusterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVmClustersVmCluster] {
	return pulumix.Output[[]GetVmClustersVmCluster]{
		OutputState: o.OutputState,
	}
}

func (o GetVmClustersVmClusterArrayOutput) Index(i pulumi.IntInput) GetVmClustersVmClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmClustersVmCluster {
		return vs[0].([]GetVmClustersVmCluster)[vs[1].(int)]
	}).(GetVmClustersVmClusterOutput)
}

type GetVmClustersVmClusterDataCollectionOption struct {
	// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster/Cloud VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
	IsDiagnosticsEventsEnabled bool `pulumi:"isDiagnosticsEventsEnabled"`
	// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
	IsHealthMonitoringEnabled bool `pulumi:"isHealthMonitoringEnabled"`
	// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
	IsIncidentLogsEnabled bool `pulumi:"isIncidentLogsEnabled"`
}

// GetVmClustersVmClusterDataCollectionOptionInput is an input type that accepts GetVmClustersVmClusterDataCollectionOptionArgs and GetVmClustersVmClusterDataCollectionOptionOutput values.
// You can construct a concrete instance of `GetVmClustersVmClusterDataCollectionOptionInput` via:
//
//	GetVmClustersVmClusterDataCollectionOptionArgs{...}
type GetVmClustersVmClusterDataCollectionOptionInput interface {
	pulumi.Input

	ToGetVmClustersVmClusterDataCollectionOptionOutput() GetVmClustersVmClusterDataCollectionOptionOutput
	ToGetVmClustersVmClusterDataCollectionOptionOutputWithContext(context.Context) GetVmClustersVmClusterDataCollectionOptionOutput
}

type GetVmClustersVmClusterDataCollectionOptionArgs struct {
	// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster/Cloud VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
	IsDiagnosticsEventsEnabled pulumi.BoolInput `pulumi:"isDiagnosticsEventsEnabled"`
	// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
	IsHealthMonitoringEnabled pulumi.BoolInput `pulumi:"isHealthMonitoringEnabled"`
	// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
	IsIncidentLogsEnabled pulumi.BoolInput `pulumi:"isIncidentLogsEnabled"`
}

func (GetVmClustersVmClusterDataCollectionOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClustersVmClusterDataCollectionOption)(nil)).Elem()
}

func (i GetVmClustersVmClusterDataCollectionOptionArgs) ToGetVmClustersVmClusterDataCollectionOptionOutput() GetVmClustersVmClusterDataCollectionOptionOutput {
	return i.ToGetVmClustersVmClusterDataCollectionOptionOutputWithContext(context.Background())
}

func (i GetVmClustersVmClusterDataCollectionOptionArgs) ToGetVmClustersVmClusterDataCollectionOptionOutputWithContext(ctx context.Context) GetVmClustersVmClusterDataCollectionOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmClustersVmClusterDataCollectionOptionOutput)
}

func (i GetVmClustersVmClusterDataCollectionOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetVmClustersVmClusterDataCollectionOption] {
	return pulumix.Output[GetVmClustersVmClusterDataCollectionOption]{
		OutputState: i.ToGetVmClustersVmClusterDataCollectionOptionOutputWithContext(ctx).OutputState,
	}
}

// GetVmClustersVmClusterDataCollectionOptionArrayInput is an input type that accepts GetVmClustersVmClusterDataCollectionOptionArray and GetVmClustersVmClusterDataCollectionOptionArrayOutput values.
// You can construct a concrete instance of `GetVmClustersVmClusterDataCollectionOptionArrayInput` via:
//
//	GetVmClustersVmClusterDataCollectionOptionArray{ GetVmClustersVmClusterDataCollectionOptionArgs{...} }
type GetVmClustersVmClusterDataCollectionOptionArrayInput interface {
	pulumi.Input

	ToGetVmClustersVmClusterDataCollectionOptionArrayOutput() GetVmClustersVmClusterDataCollectionOptionArrayOutput
	ToGetVmClustersVmClusterDataCollectionOptionArrayOutputWithContext(context.Context) GetVmClustersVmClusterDataCollectionOptionArrayOutput
}

type GetVmClustersVmClusterDataCollectionOptionArray []GetVmClustersVmClusterDataCollectionOptionInput

func (GetVmClustersVmClusterDataCollectionOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmClustersVmClusterDataCollectionOption)(nil)).Elem()
}

func (i GetVmClustersVmClusterDataCollectionOptionArray) ToGetVmClustersVmClusterDataCollectionOptionArrayOutput() GetVmClustersVmClusterDataCollectionOptionArrayOutput {
	return i.ToGetVmClustersVmClusterDataCollectionOptionArrayOutputWithContext(context.Background())
}

func (i GetVmClustersVmClusterDataCollectionOptionArray) ToGetVmClustersVmClusterDataCollectionOptionArrayOutputWithContext(ctx context.Context) GetVmClustersVmClusterDataCollectionOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVmClustersVmClusterDataCollectionOptionArrayOutput)
}

func (i GetVmClustersVmClusterDataCollectionOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVmClustersVmClusterDataCollectionOption] {
	return pulumix.Output[[]GetVmClustersVmClusterDataCollectionOption]{
		OutputState: i.ToGetVmClustersVmClusterDataCollectionOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVmClustersVmClusterDataCollectionOptionOutput struct{ *pulumi.OutputState }

func (GetVmClustersVmClusterDataCollectionOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVmClustersVmClusterDataCollectionOption)(nil)).Elem()
}

func (o GetVmClustersVmClusterDataCollectionOptionOutput) ToGetVmClustersVmClusterDataCollectionOptionOutput() GetVmClustersVmClusterDataCollectionOptionOutput {
	return o
}

func (o GetVmClustersVmClusterDataCollectionOptionOutput) ToGetVmClustersVmClusterDataCollectionOptionOutputWithContext(ctx context.Context) GetVmClustersVmClusterDataCollectionOptionOutput {
	return o
}

func (o GetVmClustersVmClusterDataCollectionOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetVmClustersVmClusterDataCollectionOption] {
	return pulumix.Output[GetVmClustersVmClusterDataCollectionOption]{
		OutputState: o.OutputState,
	}
}

// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster/Cloud VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
func (o GetVmClustersVmClusterDataCollectionOptionOutput) IsDiagnosticsEventsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmClustersVmClusterDataCollectionOption) bool { return v.IsDiagnosticsEventsEnabled }).(pulumi.BoolOutput)
}

// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
func (o GetVmClustersVmClusterDataCollectionOptionOutput) IsHealthMonitoringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmClustersVmClusterDataCollectionOption) bool { return v.IsHealthMonitoringEnabled }).(pulumi.BoolOutput)
}

// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
func (o GetVmClustersVmClusterDataCollectionOptionOutput) IsIncidentLogsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVmClustersVmClusterDataCollectionOption) bool { return v.IsIncidentLogsEnabled }).(pulumi.BoolOutput)
}

type GetVmClustersVmClusterDataCollectionOptionArrayOutput struct{ *pulumi.OutputState }

func (GetVmClustersVmClusterDataCollectionOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVmClustersVmClusterDataCollectionOption)(nil)).Elem()
}

func (o GetVmClustersVmClusterDataCollectionOptionArrayOutput) ToGetVmClustersVmClusterDataCollectionOptionArrayOutput() GetVmClustersVmClusterDataCollectionOptionArrayOutput {
	return o
}

func (o GetVmClustersVmClusterDataCollectionOptionArrayOutput) ToGetVmClustersVmClusterDataCollectionOptionArrayOutputWithContext(ctx context.Context) GetVmClustersVmClusterDataCollectionOptionArrayOutput {
	return o
}

func (o GetVmClustersVmClusterDataCollectionOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVmClustersVmClusterDataCollectionOption] {
	return pulumix.Output[[]GetVmClustersVmClusterDataCollectionOption]{
		OutputState: o.OutputState,
	}
}

func (o GetVmClustersVmClusterDataCollectionOptionArrayOutput) Index(i pulumi.IntInput) GetVmClustersVmClusterDataCollectionOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVmClustersVmClusterDataCollectionOption {
		return vs[0].([]GetVmClustersVmClusterDataCollectionOption)[vs[1].(int)]
	}).(GetVmClustersVmClusterDataCollectionOptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmClustersFilterInput)(nil)).Elem(), GetVmClustersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmClustersFilterArrayInput)(nil)).Elem(), GetVmClustersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmClustersVmClusterInput)(nil)).Elem(), GetVmClustersVmClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmClustersVmClusterArrayInput)(nil)).Elem(), GetVmClustersVmClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmClustersVmClusterDataCollectionOptionInput)(nil)).Elem(), GetVmClustersVmClusterDataCollectionOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVmClustersVmClusterDataCollectionOptionArrayInput)(nil)).Elem(), GetVmClustersVmClusterDataCollectionOptionArray{})
	pulumi.RegisterOutputType(GetVmClustersFilterOutput{})
	pulumi.RegisterOutputType(GetVmClustersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVmClustersVmClusterOutput{})
	pulumi.RegisterOutputType(GetVmClustersVmClusterArrayOutput{})
	pulumi.RegisterOutputType(GetVmClustersVmClusterDataCollectionOptionOutput{})
	pulumi.RegisterOutputType(GetVmClustersVmClusterDataCollectionOptionArrayOutput{})
}
