// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Vm Cluster resource in Oracle Cloud Infrastructure Database service.
//
// Creates an Exadata Cloud@Customer VM cluster.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Database.NewVmCluster(ctx, "testVmCluster", &Database.VmClusterArgs{
//				CompartmentId:           pulumi.Any(_var.Compartment_id),
//				CpuCoreCount:            pulumi.Any(_var.Vm_cluster_cpu_core_count),
//				DisplayName:             pulumi.Any(_var.Vm_cluster_display_name),
//				ExadataInfrastructureId: pulumi.Any(oci_database_exadata_infrastructure.Test_exadata_infrastructure.Id),
//				GiVersion:               pulumi.Any(_var.Vm_cluster_gi_version),
//				SshPublicKeys:           pulumi.Any(_var.Vm_cluster_ssh_public_keys),
//				VmClusterNetworkId:      pulumi.Any(oci_database_vm_cluster_network.Test_vm_cluster_network.Id),
//				DataCollectionOptions: &database.VmClusterDataCollectionOptionsArgs{
//					IsDiagnosticsEventsEnabled: pulumi.Any(_var.Vm_cluster_data_collection_options_is_diagnostics_events_enabled),
//					IsHealthMonitoringEnabled:  pulumi.Any(_var.Vm_cluster_data_collection_options_is_health_monitoring_enabled),
//					IsIncidentLogsEnabled:      pulumi.Any(_var.Vm_cluster_data_collection_options_is_incident_logs_enabled),
//				},
//				DataStorageSizeInTbs:   pulumi.Any(_var.Vm_cluster_data_storage_size_in_tbs),
//				DbNodeStorageSizeInGbs: pulumi.Any(_var.Vm_cluster_db_node_storage_size_in_gbs),
//				DbServers:              pulumi.Any(_var.Vm_cluster_db_servers),
//				DefinedTags:            pulumi.Any(_var.Vm_cluster_defined_tags),
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//				IsLocalBackupEnabled:     pulumi.Any(_var.Vm_cluster_is_local_backup_enabled),
//				IsSparseDiskgroupEnabled: pulumi.Any(_var.Vm_cluster_is_sparse_diskgroup_enabled),
//				LicenseModel:             pulumi.Any(_var.Vm_cluster_license_model),
//				MemorySizeInGbs:          pulumi.Any(_var.Vm_cluster_memory_size_in_gbs),
//				SystemVersion:            pulumi.Any(_var.Vm_cluster_system_version),
//				TimeZone:                 pulumi.Any(_var.Vm_cluster_time_zone),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// VmClusters can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Database/vmCluster:VmCluster test_vm_cluster "id"
// ```
type VmCluster struct {
	pulumi.CustomResourceState

	// The name of the availability domain that the VM cluster is located in.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	CpuCoreCount  pulumi.IntOutput    `pulumi:"cpuCoreCount"`
	// The number of enabled CPU cores.
	CpusEnabled pulumi.IntOutput `pulumi:"cpusEnabled"`
	// (Updatable) Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
	DataCollectionOptions VmClusterDataCollectionOptionsOutput `pulumi:"dataCollectionOptions"`
	// (Updatable) The data disk group size to be allocated in GBs.
	DataStorageSizeInGb pulumi.Float64Output `pulumi:"dataStorageSizeInGb"`
	// (Updatable) The data disk group size to be allocated in TBs.
	DataStorageSizeInTbs pulumi.Float64Output `pulumi:"dataStorageSizeInTbs"`
	// (Updatable) The local node storage to be allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of Db server.
	DbServers pulumi.StringArrayOutput `pulumi:"dbServers"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// The user-friendly name for the VM cluster. The name does not need to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId pulumi.StringOutput `pulumi:"exadataInfrastructureId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion pulumi.StringOutput `pulumi:"giVersion"`
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled pulumi.BoolOutput `pulumi:"isLocalBackupEnabled"`
	// If true, the sparse disk group is configured for the VM cluster. If false, the sparse disk group is not created.
	IsSparseDiskgroupEnabled pulumi.BoolOutput `pulumi:"isSparseDiskgroupEnabled"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId pulumi.StringOutput `pulumi:"lastPatchHistoryEntryId"`
	// (Updatable) The Oracle license model that applies to the VM cluster. The default is BRING_YOUR_OWN_LICENSE.
	LicenseModel pulumi.StringOutput `pulumi:"licenseModel"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The memory to be allocated in GBs.
	MemorySizeInGbs pulumi.IntOutput     `pulumi:"memorySizeInGbs"`
	OcpuCount       pulumi.Float64Output `pulumi:"ocpuCount"`
	OcpusEnabled    pulumi.Float64Output `pulumi:"ocpusEnabled"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringOutput `pulumi:"shape"`
	// (Updatable) The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys pulumi.StringArrayOutput `pulumi:"sshPublicKeys"`
	// The current state of the VM cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// Operating system version of the image.
	SystemVersion pulumi.StringOutput `pulumi:"systemVersion"`
	// The date and time that the VM cluster was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time zone to use for the VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VmClusterNetworkId pulumi.StringOutput `pulumi:"vmClusterNetworkId"`
}

// NewVmCluster registers a new resource with the given unique name, arguments, and options.
func NewVmCluster(ctx *pulumi.Context,
	name string, args *VmClusterArgs, opts ...pulumi.ResourceOption) (*VmCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.CpuCoreCount == nil {
		return nil, errors.New("invalid value for required argument 'CpuCoreCount'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ExadataInfrastructureId == nil {
		return nil, errors.New("invalid value for required argument 'ExadataInfrastructureId'")
	}
	if args.GiVersion == nil {
		return nil, errors.New("invalid value for required argument 'GiVersion'")
	}
	if args.SshPublicKeys == nil {
		return nil, errors.New("invalid value for required argument 'SshPublicKeys'")
	}
	if args.VmClusterNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'VmClusterNetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VmCluster
	err := ctx.RegisterResource("oci:Database/vmCluster:VmCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVmCluster gets an existing VmCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVmCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VmClusterState, opts ...pulumi.ResourceOption) (*VmCluster, error) {
	var resource VmCluster
	err := ctx.ReadResource("oci:Database/vmCluster:VmCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VmCluster resources.
type vmClusterState struct {
	// The name of the availability domain that the VM cluster is located in.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	CpuCoreCount  *int    `pulumi:"cpuCoreCount"`
	// The number of enabled CPU cores.
	CpusEnabled *int `pulumi:"cpusEnabled"`
	// (Updatable) Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
	DataCollectionOptions *VmClusterDataCollectionOptions `pulumi:"dataCollectionOptions"`
	// (Updatable) The data disk group size to be allocated in GBs.
	DataStorageSizeInGb *float64 `pulumi:"dataStorageSizeInGb"`
	// (Updatable) The data disk group size to be allocated in TBs.
	DataStorageSizeInTbs *float64 `pulumi:"dataStorageSizeInTbs"`
	// (Updatable) The local node storage to be allocated in GBs.
	DbNodeStorageSizeInGbs *int `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of Db server.
	DbServers []string `pulumi:"dbServers"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-friendly name for the VM cluster. The name does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId *string `pulumi:"exadataInfrastructureId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion *string `pulumi:"giVersion"`
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled *bool `pulumi:"isLocalBackupEnabled"`
	// If true, the sparse disk group is configured for the VM cluster. If false, the sparse disk group is not created.
	IsSparseDiskgroupEnabled *bool `pulumi:"isSparseDiskgroupEnabled"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId *string `pulumi:"lastPatchHistoryEntryId"`
	// (Updatable) The Oracle license model that applies to the VM cluster. The default is BRING_YOUR_OWN_LICENSE.
	LicenseModel *string `pulumi:"licenseModel"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The memory to be allocated in GBs.
	MemorySizeInGbs *int     `pulumi:"memorySizeInGbs"`
	OcpuCount       *float64 `pulumi:"ocpuCount"`
	OcpusEnabled    *float64 `pulumi:"ocpusEnabled"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape *string `pulumi:"shape"`
	// (Updatable) The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
	// The current state of the VM cluster.
	State *string `pulumi:"state"`
	// Operating system version of the image.
	SystemVersion *string `pulumi:"systemVersion"`
	// The date and time that the VM cluster was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time zone to use for the VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone *string `pulumi:"timeZone"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VmClusterNetworkId *string `pulumi:"vmClusterNetworkId"`
}

type VmClusterState struct {
	// The name of the availability domain that the VM cluster is located in.
	AvailabilityDomain pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	CpuCoreCount  pulumi.IntPtrInput
	// The number of enabled CPU cores.
	CpusEnabled pulumi.IntPtrInput
	// (Updatable) Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
	DataCollectionOptions VmClusterDataCollectionOptionsPtrInput
	// (Updatable) The data disk group size to be allocated in GBs.
	DataStorageSizeInGb pulumi.Float64PtrInput
	// (Updatable) The data disk group size to be allocated in TBs.
	DataStorageSizeInTbs pulumi.Float64PtrInput
	// (Updatable) The local node storage to be allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntPtrInput
	// The list of Db server.
	DbServers pulumi.StringArrayInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// The user-friendly name for the VM cluster. The name does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion pulumi.StringPtrInput
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled pulumi.BoolPtrInput
	// If true, the sparse disk group is configured for the VM cluster. If false, the sparse disk group is not created.
	IsSparseDiskgroupEnabled pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId pulumi.StringPtrInput
	// (Updatable) The Oracle license model that applies to the VM cluster. The default is BRING_YOUR_OWN_LICENSE.
	LicenseModel pulumi.StringPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The memory to be allocated in GBs.
	MemorySizeInGbs pulumi.IntPtrInput
	OcpuCount       pulumi.Float64PtrInput
	OcpusEnabled    pulumi.Float64PtrInput
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringPtrInput
	// (Updatable) The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys pulumi.StringArrayInput
	// The current state of the VM cluster.
	State pulumi.StringPtrInput
	// Operating system version of the image.
	SystemVersion pulumi.StringPtrInput
	// The date and time that the VM cluster was created.
	TimeCreated pulumi.StringPtrInput
	// The time zone to use for the VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VmClusterNetworkId pulumi.StringPtrInput
}

func (VmClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmClusterState)(nil)).Elem()
}

type vmClusterArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	CpuCoreCount  int    `pulumi:"cpuCoreCount"`
	// (Updatable) Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
	DataCollectionOptions *VmClusterDataCollectionOptions `pulumi:"dataCollectionOptions"`
	// (Updatable) The data disk group size to be allocated in GBs.
	DataStorageSizeInGb *float64 `pulumi:"dataStorageSizeInGb"`
	// (Updatable) The data disk group size to be allocated in TBs.
	DataStorageSizeInTbs *float64 `pulumi:"dataStorageSizeInTbs"`
	// (Updatable) The local node storage to be allocated in GBs.
	DbNodeStorageSizeInGbs *int `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of Db server.
	DbServers []string `pulumi:"dbServers"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The user-friendly name for the VM cluster. The name does not need to be unique.
	DisplayName string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId string `pulumi:"exadataInfrastructureId"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion string `pulumi:"giVersion"`
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled *bool `pulumi:"isLocalBackupEnabled"`
	// If true, the sparse disk group is configured for the VM cluster. If false, the sparse disk group is not created.
	IsSparseDiskgroupEnabled *bool `pulumi:"isSparseDiskgroupEnabled"`
	// (Updatable) The Oracle license model that applies to the VM cluster. The default is BRING_YOUR_OWN_LICENSE.
	LicenseModel *string `pulumi:"licenseModel"`
	// (Updatable) The memory to be allocated in GBs.
	MemorySizeInGbs *int     `pulumi:"memorySizeInGbs"`
	OcpuCount       *float64 `pulumi:"ocpuCount"`
	// (Updatable) The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
	// Operating system version of the image.
	SystemVersion *string `pulumi:"systemVersion"`
	// The time zone to use for the VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone *string `pulumi:"timeZone"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VmClusterNetworkId string `pulumi:"vmClusterNetworkId"`
}

// The set of arguments for constructing a VmCluster resource.
type VmClusterArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	CpuCoreCount  pulumi.IntInput
	// (Updatable) Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
	DataCollectionOptions VmClusterDataCollectionOptionsPtrInput
	// (Updatable) The data disk group size to be allocated in GBs.
	DataStorageSizeInGb pulumi.Float64PtrInput
	// (Updatable) The data disk group size to be allocated in TBs.
	DataStorageSizeInTbs pulumi.Float64PtrInput
	// (Updatable) The local node storage to be allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntPtrInput
	// The list of Db server.
	DbServers pulumi.StringArrayInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.MapInput
	// The user-friendly name for the VM cluster. The name does not need to be unique.
	DisplayName pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion pulumi.StringInput
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled pulumi.BoolPtrInput
	// If true, the sparse disk group is configured for the VM cluster. If false, the sparse disk group is not created.
	IsSparseDiskgroupEnabled pulumi.BoolPtrInput
	// (Updatable) The Oracle license model that applies to the VM cluster. The default is BRING_YOUR_OWN_LICENSE.
	LicenseModel pulumi.StringPtrInput
	// (Updatable) The memory to be allocated in GBs.
	MemorySizeInGbs pulumi.IntPtrInput
	OcpuCount       pulumi.Float64PtrInput
	// (Updatable) The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys pulumi.StringArrayInput
	// Operating system version of the image.
	SystemVersion pulumi.StringPtrInput
	// The time zone to use for the VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VmClusterNetworkId pulumi.StringInput
}

func (VmClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmClusterArgs)(nil)).Elem()
}

type VmClusterInput interface {
	pulumi.Input

	ToVmClusterOutput() VmClusterOutput
	ToVmClusterOutputWithContext(ctx context.Context) VmClusterOutput
}

func (*VmCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**VmCluster)(nil)).Elem()
}

func (i *VmCluster) ToVmClusterOutput() VmClusterOutput {
	return i.ToVmClusterOutputWithContext(context.Background())
}

func (i *VmCluster) ToVmClusterOutputWithContext(ctx context.Context) VmClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmClusterOutput)
}

// VmClusterArrayInput is an input type that accepts VmClusterArray and VmClusterArrayOutput values.
// You can construct a concrete instance of `VmClusterArrayInput` via:
//
//	VmClusterArray{ VmClusterArgs{...} }
type VmClusterArrayInput interface {
	pulumi.Input

	ToVmClusterArrayOutput() VmClusterArrayOutput
	ToVmClusterArrayOutputWithContext(context.Context) VmClusterArrayOutput
}

type VmClusterArray []VmClusterInput

func (VmClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VmCluster)(nil)).Elem()
}

func (i VmClusterArray) ToVmClusterArrayOutput() VmClusterArrayOutput {
	return i.ToVmClusterArrayOutputWithContext(context.Background())
}

func (i VmClusterArray) ToVmClusterArrayOutputWithContext(ctx context.Context) VmClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmClusterArrayOutput)
}

// VmClusterMapInput is an input type that accepts VmClusterMap and VmClusterMapOutput values.
// You can construct a concrete instance of `VmClusterMapInput` via:
//
//	VmClusterMap{ "key": VmClusterArgs{...} }
type VmClusterMapInput interface {
	pulumi.Input

	ToVmClusterMapOutput() VmClusterMapOutput
	ToVmClusterMapOutputWithContext(context.Context) VmClusterMapOutput
}

type VmClusterMap map[string]VmClusterInput

func (VmClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VmCluster)(nil)).Elem()
}

func (i VmClusterMap) ToVmClusterMapOutput() VmClusterMapOutput {
	return i.ToVmClusterMapOutputWithContext(context.Background())
}

func (i VmClusterMap) ToVmClusterMapOutputWithContext(ctx context.Context) VmClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmClusterMapOutput)
}

type VmClusterOutput struct{ *pulumi.OutputState }

func (VmClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmCluster)(nil)).Elem()
}

func (o VmClusterOutput) ToVmClusterOutput() VmClusterOutput {
	return o
}

func (o VmClusterOutput) ToVmClusterOutputWithContext(ctx context.Context) VmClusterOutput {
	return o
}

// The name of the availability domain that the VM cluster is located in.
func (o VmClusterOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o VmClusterOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o VmClusterOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.IntOutput { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// The number of enabled CPU cores.
func (o VmClusterOutput) CpusEnabled() pulumi.IntOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.IntOutput { return v.CpusEnabled }).(pulumi.IntOutput)
}

// (Updatable) Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
func (o VmClusterOutput) DataCollectionOptions() VmClusterDataCollectionOptionsOutput {
	return o.ApplyT(func(v *VmCluster) VmClusterDataCollectionOptionsOutput { return v.DataCollectionOptions }).(VmClusterDataCollectionOptionsOutput)
}

// (Updatable) The data disk group size to be allocated in GBs.
func (o VmClusterOutput) DataStorageSizeInGb() pulumi.Float64Output {
	return o.ApplyT(func(v *VmCluster) pulumi.Float64Output { return v.DataStorageSizeInGb }).(pulumi.Float64Output)
}

// (Updatable) The data disk group size to be allocated in TBs.
func (o VmClusterOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *VmCluster) pulumi.Float64Output { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// (Updatable) The local node storage to be allocated in GBs.
func (o VmClusterOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.IntOutput { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The list of Db server.
func (o VmClusterOutput) DbServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringArrayOutput { return v.DbServers }).(pulumi.StringArrayOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o VmClusterOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// The user-friendly name for the VM cluster. The name does not need to be unique.
func (o VmClusterOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
func (o VmClusterOutput) ExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.ExadataInfrastructureId }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o VmClusterOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// The Oracle Grid Infrastructure software version for the VM cluster.
func (o VmClusterOutput) GiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.GiVersion }).(pulumi.StringOutput)
}

// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
func (o VmClusterOutput) IsLocalBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.BoolOutput { return v.IsLocalBackupEnabled }).(pulumi.BoolOutput)
}

// If true, the sparse disk group is configured for the VM cluster. If false, the sparse disk group is not created.
func (o VmClusterOutput) IsSparseDiskgroupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.BoolOutput { return v.IsSparseDiskgroupEnabled }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
func (o VmClusterOutput) LastPatchHistoryEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.LastPatchHistoryEntryId }).(pulumi.StringOutput)
}

// (Updatable) The Oracle license model that applies to the VM cluster. The default is BRING_YOUR_OWN_LICENSE.
func (o VmClusterOutput) LicenseModel() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.LicenseModel }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o VmClusterOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) The memory to be allocated in GBs.
func (o VmClusterOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.IntOutput { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

func (o VmClusterOutput) OcpuCount() pulumi.Float64Output {
	return o.ApplyT(func(v *VmCluster) pulumi.Float64Output { return v.OcpuCount }).(pulumi.Float64Output)
}

func (o VmClusterOutput) OcpusEnabled() pulumi.Float64Output {
	return o.ApplyT(func(v *VmCluster) pulumi.Float64Output { return v.OcpusEnabled }).(pulumi.Float64Output)
}

// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
func (o VmClusterOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.Shape }).(pulumi.StringOutput)
}

// (Updatable) The public key portion of one or more key pairs used for SSH access to the VM cluster.
func (o VmClusterOutput) SshPublicKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringArrayOutput { return v.SshPublicKeys }).(pulumi.StringArrayOutput)
}

// The current state of the VM cluster.
func (o VmClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Operating system version of the image.
func (o VmClusterOutput) SystemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.SystemVersion }).(pulumi.StringOutput)
}

// The date and time that the VM cluster was created.
func (o VmClusterOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time zone to use for the VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
func (o VmClusterOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o VmClusterOutput) VmClusterNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmCluster) pulumi.StringOutput { return v.VmClusterNetworkId }).(pulumi.StringOutput)
}

type VmClusterArrayOutput struct{ *pulumi.OutputState }

func (VmClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VmCluster)(nil)).Elem()
}

func (o VmClusterArrayOutput) ToVmClusterArrayOutput() VmClusterArrayOutput {
	return o
}

func (o VmClusterArrayOutput) ToVmClusterArrayOutputWithContext(ctx context.Context) VmClusterArrayOutput {
	return o
}

func (o VmClusterArrayOutput) Index(i pulumi.IntInput) VmClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VmCluster {
		return vs[0].([]*VmCluster)[vs[1].(int)]
	}).(VmClusterOutput)
}

type VmClusterMapOutput struct{ *pulumi.OutputState }

func (VmClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VmCluster)(nil)).Elem()
}

func (o VmClusterMapOutput) ToVmClusterMapOutput() VmClusterMapOutput {
	return o
}

func (o VmClusterMapOutput) ToVmClusterMapOutputWithContext(ctx context.Context) VmClusterMapOutput {
	return o
}

func (o VmClusterMapOutput) MapIndex(k pulumi.StringInput) VmClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VmCluster {
		return vs[0].(map[string]*VmCluster)[vs[1].(string)]
	}).(VmClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VmClusterInput)(nil)).Elem(), &VmCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmClusterArrayInput)(nil)).Elem(), VmClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmClusterMapInput)(nil)).Elem(), VmClusterMap{})
	pulumi.RegisterOutputType(VmClusterOutput{})
	pulumi.RegisterOutputType(VmClusterArrayOutput{})
	pulumi.RegisterOutputType(VmClusterMapOutput{})
}
