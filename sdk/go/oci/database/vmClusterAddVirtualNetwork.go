// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package database

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Vm Cluster Add Virtual Machine resource in Oracle Cloud Infrastructure Database service.
//
// Add Virtual Machines to the VM cluster. Applies to Exadata Cloud@Customer instances only.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/database"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := database.NewVmClusterAddVirtualNetwork(ctx, "test_vm_cluster_add_virtual_machine", &database.VmClusterAddVirtualNetworkArgs{
//				DbServers: database.VmClusterAddVirtualNetworkDbServerArray{
//					&database.VmClusterAddVirtualNetworkDbServerArgs{
//						DbServerId: pulumi.Any(testDbServer.Id),
//					},
//				},
//				VmClusterId: pulumi.Any(testVmCluster.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ##### Note: You may also need to add `dbServers` and `cpuCoreCount` to the ignoreChanges for the resource `Database.VmCluster` list if you see a diff on a subsequent apply
//
// ## Import
//
// VmClusterAddVirtualMachine can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Database/vmClusterAddVirtualNetwork:VmClusterAddVirtualNetwork test_vm_cluster_add_virtual_machine "id"
// ```
type VmClusterAddVirtualNetwork struct {
	pulumi.CustomResourceState

	// The name of the availability domain that the VM cluster is located in.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// Specifies the properties necessary for cloud automation updates. This includes modifying the apply update time preference, enabling or disabling early adoption, and enabling, modifying, or disabling the update freeze period.
	CloudAutomationUpdateDetails VmClusterAddVirtualNetworkCloudAutomationUpdateDetailArrayOutput `pulumi:"cloudAutomationUpdateDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The number of enabled CPU cores.
	CpusEnabled pulumi.IntOutput `pulumi:"cpusEnabled"`
	// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
	DataCollectionOptions VmClusterAddVirtualNetworkDataCollectionOptionArrayOutput `pulumi:"dataCollectionOptions"`
	// Size of the DATA disk group in GBs.
	DataStorageSizeInGb pulumi.Float64Output `pulumi:"dataStorageSizeInGb"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs pulumi.Float64Output `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of Exacc DB servers for the cluster to be added.
	DbServers VmClusterAddVirtualNetworkDbServerArrayOutput `pulumi:"dbServers"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// The user-friendly name for the Exadata Cloud@Customer VM cluster. The name does not need to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId pulumi.StringOutput `pulumi:"exadataInfrastructureId"`
	// Details of the file system configuration of the VM cluster.
	FileSystemConfigurationDetails VmClusterAddVirtualNetworkFileSystemConfigurationDetailArrayOutput `pulumi:"fileSystemConfigurationDetails"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion pulumi.StringOutput `pulumi:"giVersion"`
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled pulumi.BoolOutput `pulumi:"isLocalBackupEnabled"`
	// If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
	IsSparseDiskgroupEnabled pulumi.BoolOutput `pulumi:"isSparseDiskgroupEnabled"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId pulumi.StringOutput `pulumi:"lastPatchHistoryEntryId"`
	// The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
	LicenseModel pulumi.StringOutput `pulumi:"licenseModel"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The memory allocated in GBs.
	MemorySizeInGbs pulumi.IntOutput     `pulumi:"memorySizeInGbs"`
	OcpusEnabled    pulumi.Float64Output `pulumi:"ocpusEnabled"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringOutput `pulumi:"shape"`
	// The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys pulumi.StringArrayOutput `pulumi:"sshPublicKeys"`
	// The current state of the VM cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// Operating system version of the image.
	SystemVersion pulumi.StringOutput `pulumi:"systemVersion"`
	// The date and time that the VM cluster was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VmClusterId pulumi.StringOutput `pulumi:"vmClusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	VmClusterNetworkId pulumi.StringOutput `pulumi:"vmClusterNetworkId"`
}

// NewVmClusterAddVirtualNetwork registers a new resource with the given unique name, arguments, and options.
func NewVmClusterAddVirtualNetwork(ctx *pulumi.Context,
	name string, args *VmClusterAddVirtualNetworkArgs, opts ...pulumi.ResourceOption) (*VmClusterAddVirtualNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbServers == nil {
		return nil, errors.New("invalid value for required argument 'DbServers'")
	}
	if args.VmClusterId == nil {
		return nil, errors.New("invalid value for required argument 'VmClusterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VmClusterAddVirtualNetwork
	err := ctx.RegisterResource("oci:Database/vmClusterAddVirtualNetwork:VmClusterAddVirtualNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVmClusterAddVirtualNetwork gets an existing VmClusterAddVirtualNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVmClusterAddVirtualNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VmClusterAddVirtualNetworkState, opts ...pulumi.ResourceOption) (*VmClusterAddVirtualNetwork, error) {
	var resource VmClusterAddVirtualNetwork
	err := ctx.ReadResource("oci:Database/vmClusterAddVirtualNetwork:VmClusterAddVirtualNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VmClusterAddVirtualNetwork resources.
type vmClusterAddVirtualNetworkState struct {
	// The name of the availability domain that the VM cluster is located in.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// Specifies the properties necessary for cloud automation updates. This includes modifying the apply update time preference, enabling or disabling early adoption, and enabling, modifying, or disabling the update freeze period.
	CloudAutomationUpdateDetails []VmClusterAddVirtualNetworkCloudAutomationUpdateDetail `pulumi:"cloudAutomationUpdateDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The number of enabled CPU cores.
	CpusEnabled *int `pulumi:"cpusEnabled"`
	// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
	DataCollectionOptions []VmClusterAddVirtualNetworkDataCollectionOption `pulumi:"dataCollectionOptions"`
	// Size of the DATA disk group in GBs.
	DataStorageSizeInGb *float64 `pulumi:"dataStorageSizeInGb"`
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs *float64 `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs *int `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of Exacc DB servers for the cluster to be added.
	DbServers []VmClusterAddVirtualNetworkDbServer `pulumi:"dbServers"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The user-friendly name for the Exadata Cloud@Customer VM cluster. The name does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId *string `pulumi:"exadataInfrastructureId"`
	// Details of the file system configuration of the VM cluster.
	FileSystemConfigurationDetails []VmClusterAddVirtualNetworkFileSystemConfigurationDetail `pulumi:"fileSystemConfigurationDetails"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion *string `pulumi:"giVersion"`
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled *bool `pulumi:"isLocalBackupEnabled"`
	// If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
	IsSparseDiskgroupEnabled *bool `pulumi:"isSparseDiskgroupEnabled"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId *string `pulumi:"lastPatchHistoryEntryId"`
	// The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
	LicenseModel *string `pulumi:"licenseModel"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The memory allocated in GBs.
	MemorySizeInGbs *int     `pulumi:"memorySizeInGbs"`
	OcpusEnabled    *float64 `pulumi:"ocpusEnabled"`
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape *string `pulumi:"shape"`
	// The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
	// The current state of the VM cluster.
	State *string `pulumi:"state"`
	// Operating system version of the image.
	SystemVersion *string `pulumi:"systemVersion"`
	// The date and time that the VM cluster was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone *string `pulumi:"timeZone"`
	// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VmClusterId *string `pulumi:"vmClusterId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	VmClusterNetworkId *string `pulumi:"vmClusterNetworkId"`
}

type VmClusterAddVirtualNetworkState struct {
	// The name of the availability domain that the VM cluster is located in.
	AvailabilityDomain pulumi.StringPtrInput
	// Specifies the properties necessary for cloud automation updates. This includes modifying the apply update time preference, enabling or disabling early adoption, and enabling, modifying, or disabling the update freeze period.
	CloudAutomationUpdateDetails VmClusterAddVirtualNetworkCloudAutomationUpdateDetailArrayInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// The number of enabled CPU cores.
	CpusEnabled pulumi.IntPtrInput
	// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
	DataCollectionOptions VmClusterAddVirtualNetworkDataCollectionOptionArrayInput
	// Size of the DATA disk group in GBs.
	DataStorageSizeInGb pulumi.Float64PtrInput
	// Size, in terabytes, of the DATA disk group.
	DataStorageSizeInTbs pulumi.Float64PtrInput
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs pulumi.IntPtrInput
	// The list of Exacc DB servers for the cluster to be added.
	DbServers VmClusterAddVirtualNetworkDbServerArrayInput
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapInput
	// The user-friendly name for the Exadata Cloud@Customer VM cluster. The name does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId pulumi.StringPtrInput
	// Details of the file system configuration of the VM cluster.
	FileSystemConfigurationDetails VmClusterAddVirtualNetworkFileSystemConfigurationDetailArrayInput
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// The Oracle Grid Infrastructure software version for the VM cluster.
	GiVersion pulumi.StringPtrInput
	// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
	IsLocalBackupEnabled pulumi.BoolPtrInput
	// If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
	IsSparseDiskgroupEnabled pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
	LastPatchHistoryEntryId pulumi.StringPtrInput
	// The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
	LicenseModel pulumi.StringPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// The memory allocated in GBs.
	MemorySizeInGbs pulumi.IntPtrInput
	OcpusEnabled    pulumi.Float64PtrInput
	// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
	Shape pulumi.StringPtrInput
	// The public key portion of one or more key pairs used for SSH access to the VM cluster.
	SshPublicKeys pulumi.StringArrayInput
	// The current state of the VM cluster.
	State pulumi.StringPtrInput
	// Operating system version of the image.
	SystemVersion pulumi.StringPtrInput
	// The date and time that the VM cluster was created.
	TimeCreated pulumi.StringPtrInput
	// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
	TimeZone pulumi.StringPtrInput
	// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VmClusterId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
	VmClusterNetworkId pulumi.StringPtrInput
}

func (VmClusterAddVirtualNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmClusterAddVirtualNetworkState)(nil)).Elem()
}

type vmClusterAddVirtualNetworkArgs struct {
	// The list of Exacc DB servers for the cluster to be added.
	DbServers []VmClusterAddVirtualNetworkDbServer `pulumi:"dbServers"`
	// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VmClusterId string `pulumi:"vmClusterId"`
}

// The set of arguments for constructing a VmClusterAddVirtualNetwork resource.
type VmClusterAddVirtualNetworkArgs struct {
	// The list of Exacc DB servers for the cluster to be added.
	DbServers VmClusterAddVirtualNetworkDbServerArrayInput
	// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	VmClusterId pulumi.StringInput
}

func (VmClusterAddVirtualNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmClusterAddVirtualNetworkArgs)(nil)).Elem()
}

type VmClusterAddVirtualNetworkInput interface {
	pulumi.Input

	ToVmClusterAddVirtualNetworkOutput() VmClusterAddVirtualNetworkOutput
	ToVmClusterAddVirtualNetworkOutputWithContext(ctx context.Context) VmClusterAddVirtualNetworkOutput
}

func (*VmClusterAddVirtualNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**VmClusterAddVirtualNetwork)(nil)).Elem()
}

func (i *VmClusterAddVirtualNetwork) ToVmClusterAddVirtualNetworkOutput() VmClusterAddVirtualNetworkOutput {
	return i.ToVmClusterAddVirtualNetworkOutputWithContext(context.Background())
}

func (i *VmClusterAddVirtualNetwork) ToVmClusterAddVirtualNetworkOutputWithContext(ctx context.Context) VmClusterAddVirtualNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmClusterAddVirtualNetworkOutput)
}

// VmClusterAddVirtualNetworkArrayInput is an input type that accepts VmClusterAddVirtualNetworkArray and VmClusterAddVirtualNetworkArrayOutput values.
// You can construct a concrete instance of `VmClusterAddVirtualNetworkArrayInput` via:
//
//	VmClusterAddVirtualNetworkArray{ VmClusterAddVirtualNetworkArgs{...} }
type VmClusterAddVirtualNetworkArrayInput interface {
	pulumi.Input

	ToVmClusterAddVirtualNetworkArrayOutput() VmClusterAddVirtualNetworkArrayOutput
	ToVmClusterAddVirtualNetworkArrayOutputWithContext(context.Context) VmClusterAddVirtualNetworkArrayOutput
}

type VmClusterAddVirtualNetworkArray []VmClusterAddVirtualNetworkInput

func (VmClusterAddVirtualNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VmClusterAddVirtualNetwork)(nil)).Elem()
}

func (i VmClusterAddVirtualNetworkArray) ToVmClusterAddVirtualNetworkArrayOutput() VmClusterAddVirtualNetworkArrayOutput {
	return i.ToVmClusterAddVirtualNetworkArrayOutputWithContext(context.Background())
}

func (i VmClusterAddVirtualNetworkArray) ToVmClusterAddVirtualNetworkArrayOutputWithContext(ctx context.Context) VmClusterAddVirtualNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmClusterAddVirtualNetworkArrayOutput)
}

// VmClusterAddVirtualNetworkMapInput is an input type that accepts VmClusterAddVirtualNetworkMap and VmClusterAddVirtualNetworkMapOutput values.
// You can construct a concrete instance of `VmClusterAddVirtualNetworkMapInput` via:
//
//	VmClusterAddVirtualNetworkMap{ "key": VmClusterAddVirtualNetworkArgs{...} }
type VmClusterAddVirtualNetworkMapInput interface {
	pulumi.Input

	ToVmClusterAddVirtualNetworkMapOutput() VmClusterAddVirtualNetworkMapOutput
	ToVmClusterAddVirtualNetworkMapOutputWithContext(context.Context) VmClusterAddVirtualNetworkMapOutput
}

type VmClusterAddVirtualNetworkMap map[string]VmClusterAddVirtualNetworkInput

func (VmClusterAddVirtualNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VmClusterAddVirtualNetwork)(nil)).Elem()
}

func (i VmClusterAddVirtualNetworkMap) ToVmClusterAddVirtualNetworkMapOutput() VmClusterAddVirtualNetworkMapOutput {
	return i.ToVmClusterAddVirtualNetworkMapOutputWithContext(context.Background())
}

func (i VmClusterAddVirtualNetworkMap) ToVmClusterAddVirtualNetworkMapOutputWithContext(ctx context.Context) VmClusterAddVirtualNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmClusterAddVirtualNetworkMapOutput)
}

type VmClusterAddVirtualNetworkOutput struct{ *pulumi.OutputState }

func (VmClusterAddVirtualNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmClusterAddVirtualNetwork)(nil)).Elem()
}

func (o VmClusterAddVirtualNetworkOutput) ToVmClusterAddVirtualNetworkOutput() VmClusterAddVirtualNetworkOutput {
	return o
}

func (o VmClusterAddVirtualNetworkOutput) ToVmClusterAddVirtualNetworkOutputWithContext(ctx context.Context) VmClusterAddVirtualNetworkOutput {
	return o
}

// The name of the availability domain that the VM cluster is located in.
func (o VmClusterAddVirtualNetworkOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// Specifies the properties necessary for cloud automation updates. This includes modifying the apply update time preference, enabling or disabling early adoption, and enabling, modifying, or disabling the update freeze period.
func (o VmClusterAddVirtualNetworkOutput) CloudAutomationUpdateDetails() VmClusterAddVirtualNetworkCloudAutomationUpdateDetailArrayOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) VmClusterAddVirtualNetworkCloudAutomationUpdateDetailArrayOutput {
		return v.CloudAutomationUpdateDetails
	}).(VmClusterAddVirtualNetworkCloudAutomationUpdateDetailArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o VmClusterAddVirtualNetworkOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The number of enabled CPU cores.
func (o VmClusterAddVirtualNetworkOutput) CpusEnabled() pulumi.IntOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.IntOutput { return v.CpusEnabled }).(pulumi.IntOutput)
}

// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
func (o VmClusterAddVirtualNetworkOutput) DataCollectionOptions() VmClusterAddVirtualNetworkDataCollectionOptionArrayOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) VmClusterAddVirtualNetworkDataCollectionOptionArrayOutput {
		return v.DataCollectionOptions
	}).(VmClusterAddVirtualNetworkDataCollectionOptionArrayOutput)
}

// Size of the DATA disk group in GBs.
func (o VmClusterAddVirtualNetworkOutput) DataStorageSizeInGb() pulumi.Float64Output {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.Float64Output { return v.DataStorageSizeInGb }).(pulumi.Float64Output)
}

// Size, in terabytes, of the DATA disk group.
func (o VmClusterAddVirtualNetworkOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.Float64Output { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The local node storage allocated in GBs.
func (o VmClusterAddVirtualNetworkOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.IntOutput { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The list of Exacc DB servers for the cluster to be added.
func (o VmClusterAddVirtualNetworkOutput) DbServers() VmClusterAddVirtualNetworkDbServerArrayOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) VmClusterAddVirtualNetworkDbServerArrayOutput { return v.DbServers }).(VmClusterAddVirtualNetworkDbServerArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o VmClusterAddVirtualNetworkOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The user-friendly name for the Exadata Cloud@Customer VM cluster. The name does not need to be unique.
func (o VmClusterAddVirtualNetworkOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
func (o VmClusterAddVirtualNetworkOutput) ExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.ExadataInfrastructureId }).(pulumi.StringOutput)
}

// Details of the file system configuration of the VM cluster.
func (o VmClusterAddVirtualNetworkOutput) FileSystemConfigurationDetails() VmClusterAddVirtualNetworkFileSystemConfigurationDetailArrayOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) VmClusterAddVirtualNetworkFileSystemConfigurationDetailArrayOutput {
		return v.FileSystemConfigurationDetails
	}).(VmClusterAddVirtualNetworkFileSystemConfigurationDetailArrayOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o VmClusterAddVirtualNetworkOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The Oracle Grid Infrastructure software version for the VM cluster.
func (o VmClusterAddVirtualNetworkOutput) GiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.GiVersion }).(pulumi.StringOutput)
}

// If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
func (o VmClusterAddVirtualNetworkOutput) IsLocalBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.BoolOutput { return v.IsLocalBackupEnabled }).(pulumi.BoolOutput)
}

// If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
func (o VmClusterAddVirtualNetworkOutput) IsSparseDiskgroupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.BoolOutput { return v.IsSparseDiskgroupEnabled }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
func (o VmClusterAddVirtualNetworkOutput) LastPatchHistoryEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.LastPatchHistoryEntryId }).(pulumi.StringOutput)
}

// The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
func (o VmClusterAddVirtualNetworkOutput) LicenseModel() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.LicenseModel }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o VmClusterAddVirtualNetworkOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The memory allocated in GBs.
func (o VmClusterAddVirtualNetworkOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.IntOutput { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

func (o VmClusterAddVirtualNetworkOutput) OcpusEnabled() pulumi.Float64Output {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.Float64Output { return v.OcpusEnabled }).(pulumi.Float64Output)
}

// The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
func (o VmClusterAddVirtualNetworkOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.Shape }).(pulumi.StringOutput)
}

// The public key portion of one or more key pairs used for SSH access to the VM cluster.
func (o VmClusterAddVirtualNetworkOutput) SshPublicKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringArrayOutput { return v.SshPublicKeys }).(pulumi.StringArrayOutput)
}

// The current state of the VM cluster.
func (o VmClusterAddVirtualNetworkOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Operating system version of the image.
func (o VmClusterAddVirtualNetworkOutput) SystemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.SystemVersion }).(pulumi.StringOutput)
}

// The date and time that the VM cluster was created.
func (o VmClusterAddVirtualNetworkOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
func (o VmClusterAddVirtualNetworkOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

// The VM cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o VmClusterAddVirtualNetworkOutput) VmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.VmClusterId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
func (o VmClusterAddVirtualNetworkOutput) VmClusterNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmClusterAddVirtualNetwork) pulumi.StringOutput { return v.VmClusterNetworkId }).(pulumi.StringOutput)
}

type VmClusterAddVirtualNetworkArrayOutput struct{ *pulumi.OutputState }

func (VmClusterAddVirtualNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VmClusterAddVirtualNetwork)(nil)).Elem()
}

func (o VmClusterAddVirtualNetworkArrayOutput) ToVmClusterAddVirtualNetworkArrayOutput() VmClusterAddVirtualNetworkArrayOutput {
	return o
}

func (o VmClusterAddVirtualNetworkArrayOutput) ToVmClusterAddVirtualNetworkArrayOutputWithContext(ctx context.Context) VmClusterAddVirtualNetworkArrayOutput {
	return o
}

func (o VmClusterAddVirtualNetworkArrayOutput) Index(i pulumi.IntInput) VmClusterAddVirtualNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VmClusterAddVirtualNetwork {
		return vs[0].([]*VmClusterAddVirtualNetwork)[vs[1].(int)]
	}).(VmClusterAddVirtualNetworkOutput)
}

type VmClusterAddVirtualNetworkMapOutput struct{ *pulumi.OutputState }

func (VmClusterAddVirtualNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VmClusterAddVirtualNetwork)(nil)).Elem()
}

func (o VmClusterAddVirtualNetworkMapOutput) ToVmClusterAddVirtualNetworkMapOutput() VmClusterAddVirtualNetworkMapOutput {
	return o
}

func (o VmClusterAddVirtualNetworkMapOutput) ToVmClusterAddVirtualNetworkMapOutputWithContext(ctx context.Context) VmClusterAddVirtualNetworkMapOutput {
	return o
}

func (o VmClusterAddVirtualNetworkMapOutput) MapIndex(k pulumi.StringInput) VmClusterAddVirtualNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VmClusterAddVirtualNetwork {
		return vs[0].(map[string]*VmClusterAddVirtualNetwork)[vs[1].(string)]
	}).(VmClusterAddVirtualNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VmClusterAddVirtualNetworkInput)(nil)).Elem(), &VmClusterAddVirtualNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmClusterAddVirtualNetworkArrayInput)(nil)).Elem(), VmClusterAddVirtualNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmClusterAddVirtualNetworkMapInput)(nil)).Elem(), VmClusterAddVirtualNetworkMap{})
	pulumi.RegisterOutputType(VmClusterAddVirtualNetworkOutput{})
	pulumi.RegisterOutputType(VmClusterAddVirtualNetworkArrayOutput{})
	pulumi.RegisterOutputType(VmClusterAddVirtualNetworkMapOutput{})
}
