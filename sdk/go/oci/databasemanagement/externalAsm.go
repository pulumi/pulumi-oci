// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the External Asm resource in Oracle Cloud Infrastructure Database Management service.
//
// Updates the external ASM specified by `externalAsmId`.
//
// ## Import
//
// ExternalAsms can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DatabaseManagement/externalAsm:ExternalAsm test_external_asm "id"
//
// ```
type ExternalAsm struct {
	pulumi.CustomResourceState

	// The additional details of the external ASM defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
	AdditionalDetails pulumi.MapOutput `pulumi:"additionalDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the external database resides.
	CompartmentId pulumi.StringPtrOutput `pulumi:"compartmentId"`
	// The name of the external ASM.
	ComponentName pulumi.StringPtrOutput `pulumi:"componentName"`
	// The user-friendly name for the database. The name does not have to be unique.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
	ExternalAsmId pulumi.StringOutput `pulumi:"externalAsmId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ExternalConnectorId pulumi.StringPtrOutput `pulumi:"externalConnectorId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the ASM is a part of.
	ExternalDbSystemId pulumi.StringPtrOutput `pulumi:"externalDbSystemId"`
	// The directory in which ASM is installed. This is the same directory in which Oracle Grid Infrastructure is installed.
	GridHome pulumi.StringPtrOutput `pulumi:"gridHome"`
	// Indicates whether the ASM is a cluster ASM or not.
	IsCluster pulumi.BoolPtrOutput `pulumi:"isCluster"`
	// Indicates whether Oracle Flex ASM is enabled or not.
	IsFlexEnabled pulumi.BoolPtrOutput `pulumi:"isFlexEnabled"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrOutput `pulumi:"lifecycleDetails"`
	// The list of databases that are serviced by the ASM.
	ServicedDatabases ExternalAsmServicedDatabaseArrayOutput `pulumi:"servicedDatabases"`
	// The current lifecycle state of the external ASM.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// The date and time the external ASM was created.
	TimeCreated pulumi.StringPtrOutput `pulumi:"timeCreated"`
	// The date and time the external ASM was last updated.
	TimeUpdated pulumi.StringPtrOutput `pulumi:"timeUpdated"`
	// The ASM version.
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewExternalAsm registers a new resource with the given unique name, arguments, and options.
func NewExternalAsm(ctx *pulumi.Context,
	name string, args *ExternalAsmArgs, opts ...pulumi.ResourceOption) (*ExternalAsm, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExternalAsmId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalAsmId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalAsm
	err := ctx.RegisterResource("oci:DatabaseManagement/externalAsm:ExternalAsm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalAsm gets an existing ExternalAsm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalAsm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalAsmState, opts ...pulumi.ResourceOption) (*ExternalAsm, error) {
	var resource ExternalAsm
	err := ctx.ReadResource("oci:DatabaseManagement/externalAsm:ExternalAsm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalAsm resources.
type externalAsmState struct {
	// The additional details of the external ASM defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
	AdditionalDetails map[string]interface{} `pulumi:"additionalDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the external database resides.
	CompartmentId *string `pulumi:"compartmentId"`
	// The name of the external ASM.
	ComponentName *string `pulumi:"componentName"`
	// The user-friendly name for the database. The name does not have to be unique.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
	ExternalAsmId *string `pulumi:"externalAsmId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ExternalConnectorId *string `pulumi:"externalConnectorId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the ASM is a part of.
	ExternalDbSystemId *string `pulumi:"externalDbSystemId"`
	// The directory in which ASM is installed. This is the same directory in which Oracle Grid Infrastructure is installed.
	GridHome *string `pulumi:"gridHome"`
	// Indicates whether the ASM is a cluster ASM or not.
	IsCluster *bool `pulumi:"isCluster"`
	// Indicates whether Oracle Flex ASM is enabled or not.
	IsFlexEnabled *bool `pulumi:"isFlexEnabled"`
	// Additional information about the current lifecycle state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The list of databases that are serviced by the ASM.
	ServicedDatabases []ExternalAsmServicedDatabase `pulumi:"servicedDatabases"`
	// The current lifecycle state of the external ASM.
	State *string `pulumi:"state"`
	// The date and time the external ASM was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the external ASM was last updated.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The ASM version.
	Version *string `pulumi:"version"`
}

type ExternalAsmState struct {
	// The additional details of the external ASM defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
	AdditionalDetails pulumi.MapInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the external database resides.
	CompartmentId pulumi.StringPtrInput
	// The name of the external ASM.
	ComponentName pulumi.StringPtrInput
	// The user-friendly name for the database. The name does not have to be unique.
	DisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
	ExternalAsmId pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ExternalConnectorId pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the ASM is a part of.
	ExternalDbSystemId pulumi.StringPtrInput
	// The directory in which ASM is installed. This is the same directory in which Oracle Grid Infrastructure is installed.
	GridHome pulumi.StringPtrInput
	// Indicates whether the ASM is a cluster ASM or not.
	IsCluster pulumi.BoolPtrInput
	// Indicates whether Oracle Flex ASM is enabled or not.
	IsFlexEnabled pulumi.BoolPtrInput
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringPtrInput
	// The list of databases that are serviced by the ASM.
	ServicedDatabases ExternalAsmServicedDatabaseArrayInput
	// The current lifecycle state of the external ASM.
	State pulumi.StringPtrInput
	// The date and time the external ASM was created.
	TimeCreated pulumi.StringPtrInput
	// The date and time the external ASM was last updated.
	TimeUpdated pulumi.StringPtrInput
	// The ASM version.
	Version pulumi.StringPtrInput
}

func (ExternalAsmState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalAsmState)(nil)).Elem()
}

type externalAsmArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
	ExternalAsmId string `pulumi:"externalAsmId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ExternalConnectorId *string `pulumi:"externalConnectorId"`
}

// The set of arguments for constructing a ExternalAsm resource.
type ExternalAsmArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
	ExternalAsmId pulumi.StringInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ExternalConnectorId pulumi.StringPtrInput
}

func (ExternalAsmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalAsmArgs)(nil)).Elem()
}

type ExternalAsmInput interface {
	pulumi.Input

	ToExternalAsmOutput() ExternalAsmOutput
	ToExternalAsmOutputWithContext(ctx context.Context) ExternalAsmOutput
}

func (*ExternalAsm) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalAsm)(nil)).Elem()
}

func (i *ExternalAsm) ToExternalAsmOutput() ExternalAsmOutput {
	return i.ToExternalAsmOutputWithContext(context.Background())
}

func (i *ExternalAsm) ToExternalAsmOutputWithContext(ctx context.Context) ExternalAsmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalAsmOutput)
}

// ExternalAsmArrayInput is an input type that accepts ExternalAsmArray and ExternalAsmArrayOutput values.
// You can construct a concrete instance of `ExternalAsmArrayInput` via:
//
//	ExternalAsmArray{ ExternalAsmArgs{...} }
type ExternalAsmArrayInput interface {
	pulumi.Input

	ToExternalAsmArrayOutput() ExternalAsmArrayOutput
	ToExternalAsmArrayOutputWithContext(context.Context) ExternalAsmArrayOutput
}

type ExternalAsmArray []ExternalAsmInput

func (ExternalAsmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalAsm)(nil)).Elem()
}

func (i ExternalAsmArray) ToExternalAsmArrayOutput() ExternalAsmArrayOutput {
	return i.ToExternalAsmArrayOutputWithContext(context.Background())
}

func (i ExternalAsmArray) ToExternalAsmArrayOutputWithContext(ctx context.Context) ExternalAsmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalAsmArrayOutput)
}

// ExternalAsmMapInput is an input type that accepts ExternalAsmMap and ExternalAsmMapOutput values.
// You can construct a concrete instance of `ExternalAsmMapInput` via:
//
//	ExternalAsmMap{ "key": ExternalAsmArgs{...} }
type ExternalAsmMapInput interface {
	pulumi.Input

	ToExternalAsmMapOutput() ExternalAsmMapOutput
	ToExternalAsmMapOutputWithContext(context.Context) ExternalAsmMapOutput
}

type ExternalAsmMap map[string]ExternalAsmInput

func (ExternalAsmMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalAsm)(nil)).Elem()
}

func (i ExternalAsmMap) ToExternalAsmMapOutput() ExternalAsmMapOutput {
	return i.ToExternalAsmMapOutputWithContext(context.Background())
}

func (i ExternalAsmMap) ToExternalAsmMapOutputWithContext(ctx context.Context) ExternalAsmMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalAsmMapOutput)
}

type ExternalAsmOutput struct{ *pulumi.OutputState }

func (ExternalAsmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalAsm)(nil)).Elem()
}

func (o ExternalAsmOutput) ToExternalAsmOutput() ExternalAsmOutput {
	return o
}

func (o ExternalAsmOutput) ToExternalAsmOutputWithContext(ctx context.Context) ExternalAsmOutput {
	return o
}

// The additional details of the external ASM defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
func (o ExternalAsmOutput) AdditionalDetails() pulumi.MapOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.MapOutput { return v.AdditionalDetails }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the external database resides.
func (o ExternalAsmOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringPtrOutput { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The name of the external ASM.
func (o ExternalAsmOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringPtrOutput { return v.ComponentName }).(pulumi.StringPtrOutput)
}

// The user-friendly name for the database. The name does not have to be unique.
func (o ExternalAsmOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external ASM.
func (o ExternalAsmOutput) ExternalAsmId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringOutput { return v.ExternalAsmId }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ExternalAsmOutput) ExternalConnectorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringPtrOutput { return v.ExternalConnectorId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the ASM is a part of.
func (o ExternalAsmOutput) ExternalDbSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringPtrOutput { return v.ExternalDbSystemId }).(pulumi.StringPtrOutput)
}

// The directory in which ASM is installed. This is the same directory in which Oracle Grid Infrastructure is installed.
func (o ExternalAsmOutput) GridHome() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringPtrOutput { return v.GridHome }).(pulumi.StringPtrOutput)
}

// Indicates whether the ASM is a cluster ASM or not.
func (o ExternalAsmOutput) IsCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.BoolPtrOutput { return v.IsCluster }).(pulumi.BoolPtrOutput)
}

// Indicates whether Oracle Flex ASM is enabled or not.
func (o ExternalAsmOutput) IsFlexEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.BoolPtrOutput { return v.IsFlexEnabled }).(pulumi.BoolPtrOutput)
}

// Additional information about the current lifecycle state.
func (o ExternalAsmOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringPtrOutput { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// The list of databases that are serviced by the ASM.
func (o ExternalAsmOutput) ServicedDatabases() ExternalAsmServicedDatabaseArrayOutput {
	return o.ApplyT(func(v *ExternalAsm) ExternalAsmServicedDatabaseArrayOutput { return v.ServicedDatabases }).(ExternalAsmServicedDatabaseArrayOutput)
}

// The current lifecycle state of the external ASM.
func (o ExternalAsmOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the external ASM was created.
func (o ExternalAsmOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringPtrOutput { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the external ASM was last updated.
func (o ExternalAsmOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringPtrOutput { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// The ASM version.
func (o ExternalAsmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAsm) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

type ExternalAsmArrayOutput struct{ *pulumi.OutputState }

func (ExternalAsmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalAsm)(nil)).Elem()
}

func (o ExternalAsmArrayOutput) ToExternalAsmArrayOutput() ExternalAsmArrayOutput {
	return o
}

func (o ExternalAsmArrayOutput) ToExternalAsmArrayOutputWithContext(ctx context.Context) ExternalAsmArrayOutput {
	return o
}

func (o ExternalAsmArrayOutput) Index(i pulumi.IntInput) ExternalAsmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalAsm {
		return vs[0].([]*ExternalAsm)[vs[1].(int)]
	}).(ExternalAsmOutput)
}

type ExternalAsmMapOutput struct{ *pulumi.OutputState }

func (ExternalAsmMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalAsm)(nil)).Elem()
}

func (o ExternalAsmMapOutput) ToExternalAsmMapOutput() ExternalAsmMapOutput {
	return o
}

func (o ExternalAsmMapOutput) ToExternalAsmMapOutputWithContext(ctx context.Context) ExternalAsmMapOutput {
	return o
}

func (o ExternalAsmMapOutput) MapIndex(k pulumi.StringInput) ExternalAsmOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalAsm {
		return vs[0].(map[string]*ExternalAsm)[vs[1].(string)]
	}).(ExternalAsmOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalAsmInput)(nil)).Elem(), &ExternalAsm{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalAsmArrayInput)(nil)).Elem(), ExternalAsmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalAsmMapInput)(nil)).Elem(), ExternalAsmMap{})
	pulumi.RegisterOutputType(ExternalAsmOutput{})
	pulumi.RegisterOutputType(ExternalAsmArrayOutput{})
	pulumi.RegisterOutputType(ExternalAsmMapOutput{})
}
