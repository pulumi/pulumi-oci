// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource provides the External Exadata Infrastructure Exadata Management resource in Oracle Cloud Infrastructure Database Management service.
//
// Enables Database Management for the Exadata infrastructure specified by externalExadataInfrastructureId. It covers the following
// components:
//
// - Exadata infrastructure
// - Exadata storage grid
// - Exadata storage server
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.NewExternalExadataInfrastructureExadataManagement(ctx, "testExternalExadataInfrastructureExadataManagement", &DatabaseManagement.ExternalExadataInfrastructureExadataManagementArgs{
//				ExternalExadataInfrastructureId: pulumi.Any(oci_database_management_external_exadata_infrastructure.Test_external_exadata_infrastructure.Id),
//				EnableExadata:                   pulumi.Any(_var.Enable_exadata),
//				LicenseModel:                    pulumi.Any(_var.External_exadata_infrastructure_exadata_management_license_model),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ExternalExadataInfrastructureExadataManagement struct {
	pulumi.CustomResourceState

	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExadata pulumi.BoolOutput `pulumi:"enableExadata"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExternalExadataInfrastructureId pulumi.StringOutput `pulumi:"externalExadataInfrastructureId"`
	// The Oracle license model.
	LicenseModel pulumi.StringOutput `pulumi:"licenseModel"`
}

// NewExternalExadataInfrastructureExadataManagement registers a new resource with the given unique name, arguments, and options.
func NewExternalExadataInfrastructureExadataManagement(ctx *pulumi.Context,
	name string, args *ExternalExadataInfrastructureExadataManagementArgs, opts ...pulumi.ResourceOption) (*ExternalExadataInfrastructureExadataManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableExadata == nil {
		return nil, errors.New("invalid value for required argument 'EnableExadata'")
	}
	if args.ExternalExadataInfrastructureId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalExadataInfrastructureId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalExadataInfrastructureExadataManagement
	err := ctx.RegisterResource("oci:DatabaseManagement/externalExadataInfrastructureExadataManagement:ExternalExadataInfrastructureExadataManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalExadataInfrastructureExadataManagement gets an existing ExternalExadataInfrastructureExadataManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalExadataInfrastructureExadataManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalExadataInfrastructureExadataManagementState, opts ...pulumi.ResourceOption) (*ExternalExadataInfrastructureExadataManagement, error) {
	var resource ExternalExadataInfrastructureExadataManagement
	err := ctx.ReadResource("oci:DatabaseManagement/externalExadataInfrastructureExadataManagement:ExternalExadataInfrastructureExadataManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalExadataInfrastructureExadataManagement resources.
type externalExadataInfrastructureExadataManagementState struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExadata *bool `pulumi:"enableExadata"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExternalExadataInfrastructureId *string `pulumi:"externalExadataInfrastructureId"`
	// The Oracle license model.
	LicenseModel *string `pulumi:"licenseModel"`
}

type ExternalExadataInfrastructureExadataManagementState struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExadata pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExternalExadataInfrastructureId pulumi.StringPtrInput
	// The Oracle license model.
	LicenseModel pulumi.StringPtrInput
}

func (ExternalExadataInfrastructureExadataManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalExadataInfrastructureExadataManagementState)(nil)).Elem()
}

type externalExadataInfrastructureExadataManagementArgs struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExadata bool `pulumi:"enableExadata"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExternalExadataInfrastructureId string `pulumi:"externalExadataInfrastructureId"`
	// The Oracle license model.
	LicenseModel *string `pulumi:"licenseModel"`
}

// The set of arguments for constructing a ExternalExadataInfrastructureExadataManagement resource.
type ExternalExadataInfrastructureExadataManagementArgs struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExadata pulumi.BoolInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExternalExadataInfrastructureId pulumi.StringInput
	// The Oracle license model.
	LicenseModel pulumi.StringPtrInput
}

func (ExternalExadataInfrastructureExadataManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalExadataInfrastructureExadataManagementArgs)(nil)).Elem()
}

type ExternalExadataInfrastructureExadataManagementInput interface {
	pulumi.Input

	ToExternalExadataInfrastructureExadataManagementOutput() ExternalExadataInfrastructureExadataManagementOutput
	ToExternalExadataInfrastructureExadataManagementOutputWithContext(ctx context.Context) ExternalExadataInfrastructureExadataManagementOutput
}

func (*ExternalExadataInfrastructureExadataManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalExadataInfrastructureExadataManagement)(nil)).Elem()
}

func (i *ExternalExadataInfrastructureExadataManagement) ToExternalExadataInfrastructureExadataManagementOutput() ExternalExadataInfrastructureExadataManagementOutput {
	return i.ToExternalExadataInfrastructureExadataManagementOutputWithContext(context.Background())
}

func (i *ExternalExadataInfrastructureExadataManagement) ToExternalExadataInfrastructureExadataManagementOutputWithContext(ctx context.Context) ExternalExadataInfrastructureExadataManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalExadataInfrastructureExadataManagementOutput)
}

func (i *ExternalExadataInfrastructureExadataManagement) ToOutput(ctx context.Context) pulumix.Output[*ExternalExadataInfrastructureExadataManagement] {
	return pulumix.Output[*ExternalExadataInfrastructureExadataManagement]{
		OutputState: i.ToExternalExadataInfrastructureExadataManagementOutputWithContext(ctx).OutputState,
	}
}

// ExternalExadataInfrastructureExadataManagementArrayInput is an input type that accepts ExternalExadataInfrastructureExadataManagementArray and ExternalExadataInfrastructureExadataManagementArrayOutput values.
// You can construct a concrete instance of `ExternalExadataInfrastructureExadataManagementArrayInput` via:
//
//	ExternalExadataInfrastructureExadataManagementArray{ ExternalExadataInfrastructureExadataManagementArgs{...} }
type ExternalExadataInfrastructureExadataManagementArrayInput interface {
	pulumi.Input

	ToExternalExadataInfrastructureExadataManagementArrayOutput() ExternalExadataInfrastructureExadataManagementArrayOutput
	ToExternalExadataInfrastructureExadataManagementArrayOutputWithContext(context.Context) ExternalExadataInfrastructureExadataManagementArrayOutput
}

type ExternalExadataInfrastructureExadataManagementArray []ExternalExadataInfrastructureExadataManagementInput

func (ExternalExadataInfrastructureExadataManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalExadataInfrastructureExadataManagement)(nil)).Elem()
}

func (i ExternalExadataInfrastructureExadataManagementArray) ToExternalExadataInfrastructureExadataManagementArrayOutput() ExternalExadataInfrastructureExadataManagementArrayOutput {
	return i.ToExternalExadataInfrastructureExadataManagementArrayOutputWithContext(context.Background())
}

func (i ExternalExadataInfrastructureExadataManagementArray) ToExternalExadataInfrastructureExadataManagementArrayOutputWithContext(ctx context.Context) ExternalExadataInfrastructureExadataManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalExadataInfrastructureExadataManagementArrayOutput)
}

func (i ExternalExadataInfrastructureExadataManagementArray) ToOutput(ctx context.Context) pulumix.Output[[]*ExternalExadataInfrastructureExadataManagement] {
	return pulumix.Output[[]*ExternalExadataInfrastructureExadataManagement]{
		OutputState: i.ToExternalExadataInfrastructureExadataManagementArrayOutputWithContext(ctx).OutputState,
	}
}

// ExternalExadataInfrastructureExadataManagementMapInput is an input type that accepts ExternalExadataInfrastructureExadataManagementMap and ExternalExadataInfrastructureExadataManagementMapOutput values.
// You can construct a concrete instance of `ExternalExadataInfrastructureExadataManagementMapInput` via:
//
//	ExternalExadataInfrastructureExadataManagementMap{ "key": ExternalExadataInfrastructureExadataManagementArgs{...} }
type ExternalExadataInfrastructureExadataManagementMapInput interface {
	pulumi.Input

	ToExternalExadataInfrastructureExadataManagementMapOutput() ExternalExadataInfrastructureExadataManagementMapOutput
	ToExternalExadataInfrastructureExadataManagementMapOutputWithContext(context.Context) ExternalExadataInfrastructureExadataManagementMapOutput
}

type ExternalExadataInfrastructureExadataManagementMap map[string]ExternalExadataInfrastructureExadataManagementInput

func (ExternalExadataInfrastructureExadataManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalExadataInfrastructureExadataManagement)(nil)).Elem()
}

func (i ExternalExadataInfrastructureExadataManagementMap) ToExternalExadataInfrastructureExadataManagementMapOutput() ExternalExadataInfrastructureExadataManagementMapOutput {
	return i.ToExternalExadataInfrastructureExadataManagementMapOutputWithContext(context.Background())
}

func (i ExternalExadataInfrastructureExadataManagementMap) ToExternalExadataInfrastructureExadataManagementMapOutputWithContext(ctx context.Context) ExternalExadataInfrastructureExadataManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalExadataInfrastructureExadataManagementMapOutput)
}

func (i ExternalExadataInfrastructureExadataManagementMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ExternalExadataInfrastructureExadataManagement] {
	return pulumix.Output[map[string]*ExternalExadataInfrastructureExadataManagement]{
		OutputState: i.ToExternalExadataInfrastructureExadataManagementMapOutputWithContext(ctx).OutputState,
	}
}

type ExternalExadataInfrastructureExadataManagementOutput struct{ *pulumi.OutputState }

func (ExternalExadataInfrastructureExadataManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalExadataInfrastructureExadataManagement)(nil)).Elem()
}

func (o ExternalExadataInfrastructureExadataManagementOutput) ToExternalExadataInfrastructureExadataManagementOutput() ExternalExadataInfrastructureExadataManagementOutput {
	return o
}

func (o ExternalExadataInfrastructureExadataManagementOutput) ToExternalExadataInfrastructureExadataManagementOutputWithContext(ctx context.Context) ExternalExadataInfrastructureExadataManagementOutput {
	return o
}

func (o ExternalExadataInfrastructureExadataManagementOutput) ToOutput(ctx context.Context) pulumix.Output[*ExternalExadataInfrastructureExadataManagement] {
	return pulumix.Output[*ExternalExadataInfrastructureExadataManagement]{
		OutputState: o.OutputState,
	}
}

// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ExternalExadataInfrastructureExadataManagementOutput) EnableExadata() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExternalExadataInfrastructureExadataManagement) pulumi.BoolOutput { return v.EnableExadata }).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
func (o ExternalExadataInfrastructureExadataManagementOutput) ExternalExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalExadataInfrastructureExadataManagement) pulumi.StringOutput {
		return v.ExternalExadataInfrastructureId
	}).(pulumi.StringOutput)
}

// The Oracle license model.
func (o ExternalExadataInfrastructureExadataManagementOutput) LicenseModel() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalExadataInfrastructureExadataManagement) pulumi.StringOutput { return v.LicenseModel }).(pulumi.StringOutput)
}

type ExternalExadataInfrastructureExadataManagementArrayOutput struct{ *pulumi.OutputState }

func (ExternalExadataInfrastructureExadataManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalExadataInfrastructureExadataManagement)(nil)).Elem()
}

func (o ExternalExadataInfrastructureExadataManagementArrayOutput) ToExternalExadataInfrastructureExadataManagementArrayOutput() ExternalExadataInfrastructureExadataManagementArrayOutput {
	return o
}

func (o ExternalExadataInfrastructureExadataManagementArrayOutput) ToExternalExadataInfrastructureExadataManagementArrayOutputWithContext(ctx context.Context) ExternalExadataInfrastructureExadataManagementArrayOutput {
	return o
}

func (o ExternalExadataInfrastructureExadataManagementArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ExternalExadataInfrastructureExadataManagement] {
	return pulumix.Output[[]*ExternalExadataInfrastructureExadataManagement]{
		OutputState: o.OutputState,
	}
}

func (o ExternalExadataInfrastructureExadataManagementArrayOutput) Index(i pulumi.IntInput) ExternalExadataInfrastructureExadataManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalExadataInfrastructureExadataManagement {
		return vs[0].([]*ExternalExadataInfrastructureExadataManagement)[vs[1].(int)]
	}).(ExternalExadataInfrastructureExadataManagementOutput)
}

type ExternalExadataInfrastructureExadataManagementMapOutput struct{ *pulumi.OutputState }

func (ExternalExadataInfrastructureExadataManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalExadataInfrastructureExadataManagement)(nil)).Elem()
}

func (o ExternalExadataInfrastructureExadataManagementMapOutput) ToExternalExadataInfrastructureExadataManagementMapOutput() ExternalExadataInfrastructureExadataManagementMapOutput {
	return o
}

func (o ExternalExadataInfrastructureExadataManagementMapOutput) ToExternalExadataInfrastructureExadataManagementMapOutputWithContext(ctx context.Context) ExternalExadataInfrastructureExadataManagementMapOutput {
	return o
}

func (o ExternalExadataInfrastructureExadataManagementMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ExternalExadataInfrastructureExadataManagement] {
	return pulumix.Output[map[string]*ExternalExadataInfrastructureExadataManagement]{
		OutputState: o.OutputState,
	}
}

func (o ExternalExadataInfrastructureExadataManagementMapOutput) MapIndex(k pulumi.StringInput) ExternalExadataInfrastructureExadataManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalExadataInfrastructureExadataManagement {
		return vs[0].(map[string]*ExternalExadataInfrastructureExadataManagement)[vs[1].(string)]
	}).(ExternalExadataInfrastructureExadataManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalExadataInfrastructureExadataManagementInput)(nil)).Elem(), &ExternalExadataInfrastructureExadataManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalExadataInfrastructureExadataManagementArrayInput)(nil)).Elem(), ExternalExadataInfrastructureExadataManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalExadataInfrastructureExadataManagementMapInput)(nil)).Elem(), ExternalExadataInfrastructureExadataManagementMap{})
	pulumi.RegisterOutputType(ExternalExadataInfrastructureExadataManagementOutput{})
	pulumi.RegisterOutputType(ExternalExadataInfrastructureExadataManagementArrayOutput{})
	pulumi.RegisterOutputType(ExternalExadataInfrastructureExadataManagementMapOutput{})
}
