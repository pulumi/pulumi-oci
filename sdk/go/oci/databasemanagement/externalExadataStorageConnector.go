// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the External Exadata Storage Connector resource in Oracle Cloud Infrastructure Database Management service.
//
// Creates the Exadata storage server connector after validating the connection information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.NewExternalExadataStorageConnector(ctx, "testExternalExadataStorageConnector", &DatabaseManagement.ExternalExadataStorageConnectorArgs{
//				AgentId:       pulumi.Any(oci_cloud_bridge_agent.Test_agent.Id),
//				ConnectionUri: pulumi.Any(_var.External_exadata_storage_connector_connection_uri),
//				ConnectorName: pulumi.Any(_var.External_exadata_storage_connector_connector_name),
//				CredentialInfo: &databasemanagement.ExternalExadataStorageConnectorCredentialInfoArgs{
//					Password:              pulumi.Any(_var.External_exadata_storage_connector_credential_info_password),
//					Username:              pulumi.Any(_var.External_exadata_storage_connector_credential_info_username),
//					SslTrustStoreLocation: pulumi.Any(_var.External_exadata_storage_connector_credential_info_ssl_trust_store_location),
//					SslTrustStorePassword: pulumi.Any(_var.External_exadata_storage_connector_credential_info_ssl_trust_store_password),
//					SslTrustStoreType:     pulumi.Any(_var.External_exadata_storage_connector_credential_info_ssl_trust_store_type),
//				},
//				StorageServerId: pulumi.Any(oci_database_management_storage_server.Test_storage_server.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ExternalExadataStorageConnectors can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DatabaseManagement/externalExadataStorageConnector:ExternalExadataStorageConnector test_external_exadata_storage_connector "id"
//
// ```
type ExternalExadataStorageConnector struct {
	pulumi.CustomResourceState

	// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
	AdditionalDetails pulumi.MapOutput `pulumi:"additionalDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
	AgentId pulumi.StringOutput `pulumi:"agentId"`
	// (Updatable) The unique string of the connection. For example, "https://<storage-server-name>/MS/RESTService/".
	ConnectionUri pulumi.StringOutput `pulumi:"connectionUri"`
	// (Updatable) The name of the Exadata storage server connector.
	ConnectorName pulumi.StringOutput `pulumi:"connectorName"`
	// (Updatable) The user credential information.
	CredentialInfo ExternalExadataStorageConnectorCredentialInfoOutput `pulumi:"credentialInfo"`
	// The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId pulumi.StringPtrOutput `pulumi:"exadataInfrastructureId"`
	// The internal ID of the Exadata resource.
	InternalId pulumi.StringPtrOutput `pulumi:"internalId"`
	// The details of the lifecycle state of the Exadata resource.
	LifecycleDetails pulumi.StringPtrOutput `pulumi:"lifecycleDetails"`
	// The current lifecycle state of the database resource.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// The status of the Exadata resource.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StorageServerId pulumi.StringOutput `pulumi:"storageServerId"`
	// The timestamp of the creation of the Exadata resource.
	TimeCreated pulumi.StringPtrOutput `pulumi:"timeCreated"`
	// The timestamp of the last update of the Exadata resource.
	TimeUpdated pulumi.StringPtrOutput `pulumi:"timeUpdated"`
	// The version of the Exadata resource.
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewExternalExadataStorageConnector registers a new resource with the given unique name, arguments, and options.
func NewExternalExadataStorageConnector(ctx *pulumi.Context,
	name string, args *ExternalExadataStorageConnectorArgs, opts ...pulumi.ResourceOption) (*ExternalExadataStorageConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentId == nil {
		return nil, errors.New("invalid value for required argument 'AgentId'")
	}
	if args.ConnectionUri == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionUri'")
	}
	if args.ConnectorName == nil {
		return nil, errors.New("invalid value for required argument 'ConnectorName'")
	}
	if args.CredentialInfo == nil {
		return nil, errors.New("invalid value for required argument 'CredentialInfo'")
	}
	if args.StorageServerId == nil {
		return nil, errors.New("invalid value for required argument 'StorageServerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalExadataStorageConnector
	err := ctx.RegisterResource("oci:DatabaseManagement/externalExadataStorageConnector:ExternalExadataStorageConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalExadataStorageConnector gets an existing ExternalExadataStorageConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalExadataStorageConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalExadataStorageConnectorState, opts ...pulumi.ResourceOption) (*ExternalExadataStorageConnector, error) {
	var resource ExternalExadataStorageConnector
	err := ctx.ReadResource("oci:DatabaseManagement/externalExadataStorageConnector:ExternalExadataStorageConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalExadataStorageConnector resources.
type externalExadataStorageConnectorState struct {
	// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
	AdditionalDetails map[string]interface{} `pulumi:"additionalDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
	AgentId *string `pulumi:"agentId"`
	// (Updatable) The unique string of the connection. For example, "https://<storage-server-name>/MS/RESTService/".
	ConnectionUri *string `pulumi:"connectionUri"`
	// (Updatable) The name of the Exadata storage server connector.
	ConnectorName *string `pulumi:"connectorName"`
	// (Updatable) The user credential information.
	CredentialInfo *ExternalExadataStorageConnectorCredentialInfo `pulumi:"credentialInfo"`
	// The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId *string `pulumi:"exadataInfrastructureId"`
	// The internal ID of the Exadata resource.
	InternalId *string `pulumi:"internalId"`
	// The details of the lifecycle state of the Exadata resource.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The current lifecycle state of the database resource.
	State *string `pulumi:"state"`
	// The status of the Exadata resource.
	Status *string `pulumi:"status"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StorageServerId *string `pulumi:"storageServerId"`
	// The timestamp of the creation of the Exadata resource.
	TimeCreated *string `pulumi:"timeCreated"`
	// The timestamp of the last update of the Exadata resource.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The version of the Exadata resource.
	Version *string `pulumi:"version"`
}

type ExternalExadataStorageConnectorState struct {
	// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
	AdditionalDetails pulumi.MapInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
	AgentId pulumi.StringPtrInput
	// (Updatable) The unique string of the connection. For example, "https://<storage-server-name>/MS/RESTService/".
	ConnectionUri pulumi.StringPtrInput
	// (Updatable) The name of the Exadata storage server connector.
	ConnectorName pulumi.StringPtrInput
	// (Updatable) The user credential information.
	CredentialInfo ExternalExadataStorageConnectorCredentialInfoPtrInput
	// The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
	DisplayName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId pulumi.StringPtrInput
	// The internal ID of the Exadata resource.
	InternalId pulumi.StringPtrInput
	// The details of the lifecycle state of the Exadata resource.
	LifecycleDetails pulumi.StringPtrInput
	// The current lifecycle state of the database resource.
	State pulumi.StringPtrInput
	// The status of the Exadata resource.
	Status pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StorageServerId pulumi.StringPtrInput
	// The timestamp of the creation of the Exadata resource.
	TimeCreated pulumi.StringPtrInput
	// The timestamp of the last update of the Exadata resource.
	TimeUpdated pulumi.StringPtrInput
	// The version of the Exadata resource.
	Version pulumi.StringPtrInput
}

func (ExternalExadataStorageConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalExadataStorageConnectorState)(nil)).Elem()
}

type externalExadataStorageConnectorArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
	AgentId string `pulumi:"agentId"`
	// (Updatable) The unique string of the connection. For example, "https://<storage-server-name>/MS/RESTService/".
	ConnectionUri string `pulumi:"connectionUri"`
	// (Updatable) The name of the Exadata storage server connector.
	ConnectorName string `pulumi:"connectorName"`
	// (Updatable) The user credential information.
	CredentialInfo ExternalExadataStorageConnectorCredentialInfo `pulumi:"credentialInfo"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StorageServerId string `pulumi:"storageServerId"`
}

// The set of arguments for constructing a ExternalExadataStorageConnector resource.
type ExternalExadataStorageConnectorArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
	AgentId pulumi.StringInput
	// (Updatable) The unique string of the connection. For example, "https://<storage-server-name>/MS/RESTService/".
	ConnectionUri pulumi.StringInput
	// (Updatable) The name of the Exadata storage server connector.
	ConnectorName pulumi.StringInput
	// (Updatable) The user credential information.
	CredentialInfo ExternalExadataStorageConnectorCredentialInfoInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StorageServerId pulumi.StringInput
}

func (ExternalExadataStorageConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalExadataStorageConnectorArgs)(nil)).Elem()
}

type ExternalExadataStorageConnectorInput interface {
	pulumi.Input

	ToExternalExadataStorageConnectorOutput() ExternalExadataStorageConnectorOutput
	ToExternalExadataStorageConnectorOutputWithContext(ctx context.Context) ExternalExadataStorageConnectorOutput
}

func (*ExternalExadataStorageConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalExadataStorageConnector)(nil)).Elem()
}

func (i *ExternalExadataStorageConnector) ToExternalExadataStorageConnectorOutput() ExternalExadataStorageConnectorOutput {
	return i.ToExternalExadataStorageConnectorOutputWithContext(context.Background())
}

func (i *ExternalExadataStorageConnector) ToExternalExadataStorageConnectorOutputWithContext(ctx context.Context) ExternalExadataStorageConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalExadataStorageConnectorOutput)
}

// ExternalExadataStorageConnectorArrayInput is an input type that accepts ExternalExadataStorageConnectorArray and ExternalExadataStorageConnectorArrayOutput values.
// You can construct a concrete instance of `ExternalExadataStorageConnectorArrayInput` via:
//
//	ExternalExadataStorageConnectorArray{ ExternalExadataStorageConnectorArgs{...} }
type ExternalExadataStorageConnectorArrayInput interface {
	pulumi.Input

	ToExternalExadataStorageConnectorArrayOutput() ExternalExadataStorageConnectorArrayOutput
	ToExternalExadataStorageConnectorArrayOutputWithContext(context.Context) ExternalExadataStorageConnectorArrayOutput
}

type ExternalExadataStorageConnectorArray []ExternalExadataStorageConnectorInput

func (ExternalExadataStorageConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalExadataStorageConnector)(nil)).Elem()
}

func (i ExternalExadataStorageConnectorArray) ToExternalExadataStorageConnectorArrayOutput() ExternalExadataStorageConnectorArrayOutput {
	return i.ToExternalExadataStorageConnectorArrayOutputWithContext(context.Background())
}

func (i ExternalExadataStorageConnectorArray) ToExternalExadataStorageConnectorArrayOutputWithContext(ctx context.Context) ExternalExadataStorageConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalExadataStorageConnectorArrayOutput)
}

// ExternalExadataStorageConnectorMapInput is an input type that accepts ExternalExadataStorageConnectorMap and ExternalExadataStorageConnectorMapOutput values.
// You can construct a concrete instance of `ExternalExadataStorageConnectorMapInput` via:
//
//	ExternalExadataStorageConnectorMap{ "key": ExternalExadataStorageConnectorArgs{...} }
type ExternalExadataStorageConnectorMapInput interface {
	pulumi.Input

	ToExternalExadataStorageConnectorMapOutput() ExternalExadataStorageConnectorMapOutput
	ToExternalExadataStorageConnectorMapOutputWithContext(context.Context) ExternalExadataStorageConnectorMapOutput
}

type ExternalExadataStorageConnectorMap map[string]ExternalExadataStorageConnectorInput

func (ExternalExadataStorageConnectorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalExadataStorageConnector)(nil)).Elem()
}

func (i ExternalExadataStorageConnectorMap) ToExternalExadataStorageConnectorMapOutput() ExternalExadataStorageConnectorMapOutput {
	return i.ToExternalExadataStorageConnectorMapOutputWithContext(context.Background())
}

func (i ExternalExadataStorageConnectorMap) ToExternalExadataStorageConnectorMapOutputWithContext(ctx context.Context) ExternalExadataStorageConnectorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalExadataStorageConnectorMapOutput)
}

type ExternalExadataStorageConnectorOutput struct{ *pulumi.OutputState }

func (ExternalExadataStorageConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalExadataStorageConnector)(nil)).Elem()
}

func (o ExternalExadataStorageConnectorOutput) ToExternalExadataStorageConnectorOutput() ExternalExadataStorageConnectorOutput {
	return o
}

func (o ExternalExadataStorageConnectorOutput) ToExternalExadataStorageConnectorOutputWithContext(ctx context.Context) ExternalExadataStorageConnectorOutput {
	return o
}

// The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
func (o ExternalExadataStorageConnectorOutput) AdditionalDetails() pulumi.MapOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.MapOutput { return v.AdditionalDetails }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
func (o ExternalExadataStorageConnectorOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringOutput { return v.AgentId }).(pulumi.StringOutput)
}

// (Updatable) The unique string of the connection. For example, "https://<storage-server-name>/MS/RESTService/".
func (o ExternalExadataStorageConnectorOutput) ConnectionUri() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringOutput { return v.ConnectionUri }).(pulumi.StringOutput)
}

// (Updatable) The name of the Exadata storage server connector.
func (o ExternalExadataStorageConnectorOutput) ConnectorName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringOutput { return v.ConnectorName }).(pulumi.StringOutput)
}

// (Updatable) The user credential information.
func (o ExternalExadataStorageConnectorOutput) CredentialInfo() ExternalExadataStorageConnectorCredentialInfoOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) ExternalExadataStorageConnectorCredentialInfoOutput {
		return v.CredentialInfo
	}).(ExternalExadataStorageConnectorCredentialInfoOutput)
}

// The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
func (o ExternalExadataStorageConnectorOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
func (o ExternalExadataStorageConnectorOutput) ExadataInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringPtrOutput { return v.ExadataInfrastructureId }).(pulumi.StringPtrOutput)
}

// The internal ID of the Exadata resource.
func (o ExternalExadataStorageConnectorOutput) InternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringPtrOutput { return v.InternalId }).(pulumi.StringPtrOutput)
}

// The details of the lifecycle state of the Exadata resource.
func (o ExternalExadataStorageConnectorOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringPtrOutput { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// The current lifecycle state of the database resource.
func (o ExternalExadataStorageConnectorOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// The status of the Exadata resource.
func (o ExternalExadataStorageConnectorOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ExternalExadataStorageConnectorOutput) StorageServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringOutput { return v.StorageServerId }).(pulumi.StringOutput)
}

// The timestamp of the creation of the Exadata resource.
func (o ExternalExadataStorageConnectorOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringPtrOutput { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The timestamp of the last update of the Exadata resource.
func (o ExternalExadataStorageConnectorOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringPtrOutput { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

// The version of the Exadata resource.
func (o ExternalExadataStorageConnectorOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalExadataStorageConnector) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

type ExternalExadataStorageConnectorArrayOutput struct{ *pulumi.OutputState }

func (ExternalExadataStorageConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalExadataStorageConnector)(nil)).Elem()
}

func (o ExternalExadataStorageConnectorArrayOutput) ToExternalExadataStorageConnectorArrayOutput() ExternalExadataStorageConnectorArrayOutput {
	return o
}

func (o ExternalExadataStorageConnectorArrayOutput) ToExternalExadataStorageConnectorArrayOutputWithContext(ctx context.Context) ExternalExadataStorageConnectorArrayOutput {
	return o
}

func (o ExternalExadataStorageConnectorArrayOutput) Index(i pulumi.IntInput) ExternalExadataStorageConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalExadataStorageConnector {
		return vs[0].([]*ExternalExadataStorageConnector)[vs[1].(int)]
	}).(ExternalExadataStorageConnectorOutput)
}

type ExternalExadataStorageConnectorMapOutput struct{ *pulumi.OutputState }

func (ExternalExadataStorageConnectorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalExadataStorageConnector)(nil)).Elem()
}

func (o ExternalExadataStorageConnectorMapOutput) ToExternalExadataStorageConnectorMapOutput() ExternalExadataStorageConnectorMapOutput {
	return o
}

func (o ExternalExadataStorageConnectorMapOutput) ToExternalExadataStorageConnectorMapOutputWithContext(ctx context.Context) ExternalExadataStorageConnectorMapOutput {
	return o
}

func (o ExternalExadataStorageConnectorMapOutput) MapIndex(k pulumi.StringInput) ExternalExadataStorageConnectorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalExadataStorageConnector {
		return vs[0].(map[string]*ExternalExadataStorageConnector)[vs[1].(string)]
	}).(ExternalExadataStorageConnectorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalExadataStorageConnectorInput)(nil)).Elem(), &ExternalExadataStorageConnector{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalExadataStorageConnectorArrayInput)(nil)).Elem(), ExternalExadataStorageConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalExadataStorageConnectorMapInput)(nil)).Elem(), ExternalExadataStorageConnectorMap{})
	pulumi.RegisterOutputType(ExternalExadataStorageConnectorOutput{})
	pulumi.RegisterOutputType(ExternalExadataStorageConnectorArrayOutput{})
	pulumi.RegisterOutputType(ExternalExadataStorageConnectorMapOutput{})
}
