// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the External My Sql Database External Mysql Databases Management resource in Oracle Cloud Infrastructure Database Management service.
//
// Enables Database Management for an external MySQL Database.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/databasemanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databasemanagement.NewExternalMySqlDatabaseExternalMysqlDatabasesManagement(ctx, "test_external_my_sql_database_external_mysql_databases_management", &databasemanagement.ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs{
//				ExternalMySqlDatabaseId:     pulumi.Any(testExternalMySqlDatabase.Id),
//				EnableExternalMysqlDatabase: pulumi.Any(enableExternalMysqlDatabase),
//				ConnectorId:                 pulumi.Any(testConnector.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ExternalMySqlDatabaseExternalMysqlDatabasesManagement struct {
	pulumi.CustomResourceState

	// OCID of External MySQL Database connector.
	ConnectorId pulumi.StringOutput `pulumi:"connectorId"`
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExternalMysqlDatabase pulumi.BoolOutput `pulumi:"enableExternalMysqlDatabase"`
	// The OCID of the External MySQL Database.
	ExternalMySqlDatabaseId pulumi.StringOutput `pulumi:"externalMySqlDatabaseId"`
}

// NewExternalMySqlDatabaseExternalMysqlDatabasesManagement registers a new resource with the given unique name, arguments, and options.
func NewExternalMySqlDatabaseExternalMysqlDatabasesManagement(ctx *pulumi.Context,
	name string, args *ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs, opts ...pulumi.ResourceOption) (*ExternalMySqlDatabaseExternalMysqlDatabasesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableExternalMysqlDatabase == nil {
		return nil, errors.New("invalid value for required argument 'EnableExternalMysqlDatabase'")
	}
	if args.ExternalMySqlDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalMySqlDatabaseId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalMySqlDatabaseExternalMysqlDatabasesManagement
	err := ctx.RegisterResource("oci:DatabaseManagement/externalMySqlDatabaseExternalMysqlDatabasesManagement:ExternalMySqlDatabaseExternalMysqlDatabasesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalMySqlDatabaseExternalMysqlDatabasesManagement gets an existing ExternalMySqlDatabaseExternalMysqlDatabasesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalMySqlDatabaseExternalMysqlDatabasesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalMySqlDatabaseExternalMysqlDatabasesManagementState, opts ...pulumi.ResourceOption) (*ExternalMySqlDatabaseExternalMysqlDatabasesManagement, error) {
	var resource ExternalMySqlDatabaseExternalMysqlDatabasesManagement
	err := ctx.ReadResource("oci:DatabaseManagement/externalMySqlDatabaseExternalMysqlDatabasesManagement:ExternalMySqlDatabaseExternalMysqlDatabasesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalMySqlDatabaseExternalMysqlDatabasesManagement resources.
type externalMySqlDatabaseExternalMysqlDatabasesManagementState struct {
	// OCID of External MySQL Database connector.
	ConnectorId *string `pulumi:"connectorId"`
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExternalMysqlDatabase *bool `pulumi:"enableExternalMysqlDatabase"`
	// The OCID of the External MySQL Database.
	ExternalMySqlDatabaseId *string `pulumi:"externalMySqlDatabaseId"`
}

type ExternalMySqlDatabaseExternalMysqlDatabasesManagementState struct {
	// OCID of External MySQL Database connector.
	ConnectorId pulumi.StringPtrInput
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExternalMysqlDatabase pulumi.BoolPtrInput
	// The OCID of the External MySQL Database.
	ExternalMySqlDatabaseId pulumi.StringPtrInput
}

func (ExternalMySqlDatabaseExternalMysqlDatabasesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalMySqlDatabaseExternalMysqlDatabasesManagementState)(nil)).Elem()
}

type externalMySqlDatabaseExternalMysqlDatabasesManagementArgs struct {
	// OCID of External MySQL Database connector.
	ConnectorId *string `pulumi:"connectorId"`
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExternalMysqlDatabase bool `pulumi:"enableExternalMysqlDatabase"`
	// The OCID of the External MySQL Database.
	ExternalMySqlDatabaseId string `pulumi:"externalMySqlDatabaseId"`
}

// The set of arguments for constructing a ExternalMySqlDatabaseExternalMysqlDatabasesManagement resource.
type ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs struct {
	// OCID of External MySQL Database connector.
	ConnectorId pulumi.StringPtrInput
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExternalMysqlDatabase pulumi.BoolInput
	// The OCID of the External MySQL Database.
	ExternalMySqlDatabaseId pulumi.StringInput
}

func (ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalMySqlDatabaseExternalMysqlDatabasesManagementArgs)(nil)).Elem()
}

type ExternalMySqlDatabaseExternalMysqlDatabasesManagementInput interface {
	pulumi.Input

	ToExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput() ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput
	ToExternalMySqlDatabaseExternalMysqlDatabasesManagementOutputWithContext(ctx context.Context) ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput
}

func (*ExternalMySqlDatabaseExternalMysqlDatabasesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalMySqlDatabaseExternalMysqlDatabasesManagement)(nil)).Elem()
}

func (i *ExternalMySqlDatabaseExternalMysqlDatabasesManagement) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput() ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput {
	return i.ToExternalMySqlDatabaseExternalMysqlDatabasesManagementOutputWithContext(context.Background())
}

func (i *ExternalMySqlDatabaseExternalMysqlDatabasesManagement) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementOutputWithContext(ctx context.Context) ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput)
}

// ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayInput is an input type that accepts ExternalMySqlDatabaseExternalMysqlDatabasesManagementArray and ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput values.
// You can construct a concrete instance of `ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayInput` via:
//
//	ExternalMySqlDatabaseExternalMysqlDatabasesManagementArray{ ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs{...} }
type ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayInput interface {
	pulumi.Input

	ToExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput() ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput
	ToExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutputWithContext(context.Context) ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput
}

type ExternalMySqlDatabaseExternalMysqlDatabasesManagementArray []ExternalMySqlDatabaseExternalMysqlDatabasesManagementInput

func (ExternalMySqlDatabaseExternalMysqlDatabasesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalMySqlDatabaseExternalMysqlDatabasesManagement)(nil)).Elem()
}

func (i ExternalMySqlDatabaseExternalMysqlDatabasesManagementArray) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput() ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput {
	return i.ToExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutputWithContext(context.Background())
}

func (i ExternalMySqlDatabaseExternalMysqlDatabasesManagementArray) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutputWithContext(ctx context.Context) ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput)
}

// ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapInput is an input type that accepts ExternalMySqlDatabaseExternalMysqlDatabasesManagementMap and ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput values.
// You can construct a concrete instance of `ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapInput` via:
//
//	ExternalMySqlDatabaseExternalMysqlDatabasesManagementMap{ "key": ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs{...} }
type ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapInput interface {
	pulumi.Input

	ToExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput() ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput
	ToExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutputWithContext(context.Context) ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput
}

type ExternalMySqlDatabaseExternalMysqlDatabasesManagementMap map[string]ExternalMySqlDatabaseExternalMysqlDatabasesManagementInput

func (ExternalMySqlDatabaseExternalMysqlDatabasesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalMySqlDatabaseExternalMysqlDatabasesManagement)(nil)).Elem()
}

func (i ExternalMySqlDatabaseExternalMysqlDatabasesManagementMap) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput() ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput {
	return i.ToExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutputWithContext(context.Background())
}

func (i ExternalMySqlDatabaseExternalMysqlDatabasesManagementMap) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutputWithContext(ctx context.Context) ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput)
}

type ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput struct{ *pulumi.OutputState }

func (ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalMySqlDatabaseExternalMysqlDatabasesManagement)(nil)).Elem()
}

func (o ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput() ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput {
	return o
}

func (o ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementOutputWithContext(ctx context.Context) ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput {
	return o
}

// OCID of External MySQL Database connector.
func (o ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput) ConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalMySqlDatabaseExternalMysqlDatabasesManagement) pulumi.StringOutput {
		return v.ConnectorId
	}).(pulumi.StringOutput)
}

// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput) EnableExternalMysqlDatabase() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExternalMySqlDatabaseExternalMysqlDatabasesManagement) pulumi.BoolOutput {
		return v.EnableExternalMysqlDatabase
	}).(pulumi.BoolOutput)
}

// The OCID of the External MySQL Database.
func (o ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput) ExternalMySqlDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalMySqlDatabaseExternalMysqlDatabasesManagement) pulumi.StringOutput {
		return v.ExternalMySqlDatabaseId
	}).(pulumi.StringOutput)
}

type ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput struct{ *pulumi.OutputState }

func (ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalMySqlDatabaseExternalMysqlDatabasesManagement)(nil)).Elem()
}

func (o ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput() ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput {
	return o
}

func (o ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutputWithContext(ctx context.Context) ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput {
	return o
}

func (o ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput) Index(i pulumi.IntInput) ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalMySqlDatabaseExternalMysqlDatabasesManagement {
		return vs[0].([]*ExternalMySqlDatabaseExternalMysqlDatabasesManagement)[vs[1].(int)]
	}).(ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput)
}

type ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput struct{ *pulumi.OutputState }

func (ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalMySqlDatabaseExternalMysqlDatabasesManagement)(nil)).Elem()
}

func (o ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput() ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput {
	return o
}

func (o ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput) ToExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutputWithContext(ctx context.Context) ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput {
	return o
}

func (o ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput) MapIndex(k pulumi.StringInput) ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalMySqlDatabaseExternalMysqlDatabasesManagement {
		return vs[0].(map[string]*ExternalMySqlDatabaseExternalMysqlDatabasesManagement)[vs[1].(string)]
	}).(ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalMySqlDatabaseExternalMysqlDatabasesManagementInput)(nil)).Elem(), &ExternalMySqlDatabaseExternalMysqlDatabasesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayInput)(nil)).Elem(), ExternalMySqlDatabaseExternalMysqlDatabasesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapInput)(nil)).Elem(), ExternalMySqlDatabaseExternalMysqlDatabasesManagementMap{})
	pulumi.RegisterOutputType(ExternalMySqlDatabaseExternalMysqlDatabasesManagementOutput{})
	pulumi.RegisterOutputType(ExternalMySqlDatabaseExternalMysqlDatabasesManagementArrayOutput{})
	pulumi.RegisterOutputType(ExternalMySqlDatabaseExternalMysqlDatabasesManagementMapOutput{})
}
