// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Externalpluggabledatabase External Pluggable Dbm Features Management resource in Oracle Cloud Infrastructure Database Management service.
//
// Enables a Database Management feature for the specified external pluggable database.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/databasemanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databasemanagement.NewExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement(ctx, "test_externalpluggabledatabase_external_pluggable_dbm_features_management", &databasemanagement.ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArgs{
//				ExternalPluggableDatabaseId:       pulumi.Any(testExternalPluggableDatabase.Id),
//				EnableExternalPluggableDbmFeature: pulumi.Any(enableExternalPluggableDbmFeature),
//				FeatureDetails: &databasemanagement.ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs{
//					Feature:                           pulumi.Any(externalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsFeature),
//					EnableExternalPluggableDbmFeature: enableExternalPluggableDbmFeature,
//					ConnectorDetails: &databasemanagement.ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsConnectorDetailsArgs{
//						ConnectorType:       pulumi.Any(externalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsConnectorDetailsConnectorType),
//						DatabaseConnectorId: pulumi.Any(testDatabaseConnector.Id),
//						ManagementAgentId:   pulumi.Any(testManagementAgent.Id),
//						PrivateEndPointId:   pulumi.Any(testPrivateEndPoint.Id),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement struct {
	pulumi.CustomResourceState

	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExternalPluggableDbmFeature pulumi.BoolOutput `pulumi:"enableExternalPluggableDbmFeature"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external pluggable database.
	ExternalPluggableDatabaseId pulumi.StringOutput    `pulumi:"externalPluggableDatabaseId"`
	Feature                     pulumi.StringPtrOutput `pulumi:"feature"`
	// The details required to enable the specified Database Management feature.
	FeatureDetails ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsOutput `pulumi:"featureDetails"`
}

// NewExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement registers a new resource with the given unique name, arguments, and options.
func NewExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement(ctx *pulumi.Context,
	name string, args *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArgs, opts ...pulumi.ResourceOption) (*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableExternalPluggableDbmFeature == nil {
		return nil, errors.New("invalid value for required argument 'EnableExternalPluggableDbmFeature'")
	}
	if args.ExternalPluggableDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalPluggableDatabaseId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement
	err := ctx.RegisterResource("oci:DatabaseManagement/externalpluggabledatabaseExternalPluggableDbmFeaturesManagement:ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement gets an existing ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementState, opts ...pulumi.ResourceOption) (*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement, error) {
	var resource ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement
	err := ctx.ReadResource("oci:DatabaseManagement/externalpluggabledatabaseExternalPluggableDbmFeaturesManagement:ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement resources.
type externalpluggabledatabaseExternalPluggableDbmFeaturesManagementState struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExternalPluggableDbmFeature *bool `pulumi:"enableExternalPluggableDbmFeature"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external pluggable database.
	ExternalPluggableDatabaseId *string `pulumi:"externalPluggableDatabaseId"`
	Feature                     *string `pulumi:"feature"`
	// The details required to enable the specified Database Management feature.
	FeatureDetails *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetails `pulumi:"featureDetails"`
}

type ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementState struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExternalPluggableDbmFeature pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external pluggable database.
	ExternalPluggableDatabaseId pulumi.StringPtrInput
	Feature                     pulumi.StringPtrInput
	// The details required to enable the specified Database Management feature.
	FeatureDetails ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsPtrInput
}

func (ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalpluggabledatabaseExternalPluggableDbmFeaturesManagementState)(nil)).Elem()
}

type externalpluggabledatabaseExternalPluggableDbmFeaturesManagementArgs struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExternalPluggableDbmFeature bool `pulumi:"enableExternalPluggableDbmFeature"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external pluggable database.
	ExternalPluggableDatabaseId string  `pulumi:"externalPluggableDatabaseId"`
	Feature                     *string `pulumi:"feature"`
	// The details required to enable the specified Database Management feature.
	FeatureDetails *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetails `pulumi:"featureDetails"`
}

// The set of arguments for constructing a ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement resource.
type ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArgs struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnableExternalPluggableDbmFeature pulumi.BoolInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external pluggable database.
	ExternalPluggableDatabaseId pulumi.StringInput
	Feature                     pulumi.StringPtrInput
	// The details required to enable the specified Database Management feature.
	FeatureDetails ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsPtrInput
}

func (ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalpluggabledatabaseExternalPluggableDbmFeaturesManagementArgs)(nil)).Elem()
}

type ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementInput interface {
	pulumi.Input

	ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput() ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput
	ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutputWithContext(ctx context.Context) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput
}

func (*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement)(nil)).Elem()
}

func (i *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput() ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput {
	return i.ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutputWithContext(context.Background())
}

func (i *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutputWithContext(ctx context.Context) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput)
}

// ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayInput is an input type that accepts ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArray and ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput values.
// You can construct a concrete instance of `ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayInput` via:
//
//	ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArray{ ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArgs{...} }
type ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayInput interface {
	pulumi.Input

	ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput() ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput
	ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutputWithContext(context.Context) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput
}

type ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArray []ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementInput

func (ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement)(nil)).Elem()
}

func (i ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArray) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput() ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput {
	return i.ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutputWithContext(context.Background())
}

func (i ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArray) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutputWithContext(ctx context.Context) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput)
}

// ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapInput is an input type that accepts ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMap and ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput values.
// You can construct a concrete instance of `ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapInput` via:
//
//	ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMap{ "key": ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArgs{...} }
type ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapInput interface {
	pulumi.Input

	ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput() ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput
	ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutputWithContext(context.Context) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput
}

type ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMap map[string]ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementInput

func (ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement)(nil)).Elem()
}

func (i ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMap) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput() ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput {
	return i.ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutputWithContext(context.Background())
}

func (i ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMap) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutputWithContext(ctx context.Context) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput)
}

type ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput struct{ *pulumi.OutputState }

func (ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement)(nil)).Elem()
}

func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput() ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput {
	return o
}

func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutputWithContext(ctx context.Context) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput {
	return o
}

// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput) EnableExternalPluggableDbmFeature() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement) pulumi.BoolOutput {
		return v.EnableExternalPluggableDbmFeature
	}).(pulumi.BoolOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external pluggable database.
func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput) ExternalPluggableDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement) pulumi.StringOutput {
		return v.ExternalPluggableDatabaseId
	}).(pulumi.StringOutput)
}

func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput) Feature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement) pulumi.StringPtrOutput {
		return v.Feature
	}).(pulumi.StringPtrOutput)
}

// The details required to enable the specified Database Management feature.
func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput) FeatureDetails() ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsOutput {
	return o.ApplyT(func(v *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsOutput {
		return v.FeatureDetails
	}).(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsOutput)
}

type ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput struct{ *pulumi.OutputState }

func (ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement)(nil)).Elem()
}

func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput() ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput {
	return o
}

func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutputWithContext(ctx context.Context) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput {
	return o
}

func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput) Index(i pulumi.IntInput) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement {
		return vs[0].([]*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement)[vs[1].(int)]
	}).(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput)
}

type ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput struct{ *pulumi.OutputState }

func (ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement)(nil)).Elem()
}

func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput() ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput {
	return o
}

func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput) ToExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutputWithContext(ctx context.Context) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput {
	return o
}

func (o ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput) MapIndex(k pulumi.StringInput) ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement {
		return vs[0].(map[string]*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement)[vs[1].(string)]
	}).(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementInput)(nil)).Elem(), &ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayInput)(nil)).Elem(), ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapInput)(nil)).Elem(), ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMap{})
	pulumi.RegisterOutputType(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementOutput{})
	pulumi.RegisterOutputType(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementArrayOutput{})
	pulumi.RegisterOutputType(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementMapOutput{})
}
