// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific External Exadata Storage Server Open Alert History resource in Oracle Cloud Infrastructure Database Management service.
//
// Gets the open alerts from the specified Exadata storage server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.GetExternalExadataStorageServerOpenAlertHistory(ctx, &databasemanagement.GetExternalExadataStorageServerOpenAlertHistoryArgs{
//				ExternalExadataStorageServerId: testExternalExadataStorageServer.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetExternalExadataStorageServerOpenAlertHistory(ctx *pulumi.Context, args *GetExternalExadataStorageServerOpenAlertHistoryArgs, opts ...pulumi.InvokeOption) (*GetExternalExadataStorageServerOpenAlertHistoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExternalExadataStorageServerOpenAlertHistoryResult
	err := ctx.Invoke("oci:DatabaseManagement/getExternalExadataStorageServerOpenAlertHistory:getExternalExadataStorageServerOpenAlertHistory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExternalExadataStorageServerOpenAlertHistory.
type GetExternalExadataStorageServerOpenAlertHistoryArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
	ExternalExadataStorageServerId string `pulumi:"externalExadataStorageServerId"`
}

// A collection of values returned by getExternalExadataStorageServerOpenAlertHistory.
type GetExternalExadataStorageServerOpenAlertHistoryResult struct {
	// A list of open alerts.
	Alerts                         []GetExternalExadataStorageServerOpenAlertHistoryAlert `pulumi:"alerts"`
	ExternalExadataStorageServerId string                                                 `pulumi:"externalExadataStorageServerId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetExternalExadataStorageServerOpenAlertHistoryOutput(ctx *pulumi.Context, args GetExternalExadataStorageServerOpenAlertHistoryOutputArgs, opts ...pulumi.InvokeOption) GetExternalExadataStorageServerOpenAlertHistoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetExternalExadataStorageServerOpenAlertHistoryResult, error) {
			args := v.(GetExternalExadataStorageServerOpenAlertHistoryArgs)
			r, err := GetExternalExadataStorageServerOpenAlertHistory(ctx, &args, opts...)
			var s GetExternalExadataStorageServerOpenAlertHistoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetExternalExadataStorageServerOpenAlertHistoryResultOutput)
}

// A collection of arguments for invoking getExternalExadataStorageServerOpenAlertHistory.
type GetExternalExadataStorageServerOpenAlertHistoryOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
	ExternalExadataStorageServerId pulumi.StringInput `pulumi:"externalExadataStorageServerId"`
}

func (GetExternalExadataStorageServerOpenAlertHistoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalExadataStorageServerOpenAlertHistoryArgs)(nil)).Elem()
}

// A collection of values returned by getExternalExadataStorageServerOpenAlertHistory.
type GetExternalExadataStorageServerOpenAlertHistoryResultOutput struct{ *pulumi.OutputState }

func (GetExternalExadataStorageServerOpenAlertHistoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalExadataStorageServerOpenAlertHistoryResult)(nil)).Elem()
}

func (o GetExternalExadataStorageServerOpenAlertHistoryResultOutput) ToGetExternalExadataStorageServerOpenAlertHistoryResultOutput() GetExternalExadataStorageServerOpenAlertHistoryResultOutput {
	return o
}

func (o GetExternalExadataStorageServerOpenAlertHistoryResultOutput) ToGetExternalExadataStorageServerOpenAlertHistoryResultOutputWithContext(ctx context.Context) GetExternalExadataStorageServerOpenAlertHistoryResultOutput {
	return o
}

// A list of open alerts.
func (o GetExternalExadataStorageServerOpenAlertHistoryResultOutput) Alerts() GetExternalExadataStorageServerOpenAlertHistoryAlertArrayOutput {
	return o.ApplyT(func(v GetExternalExadataStorageServerOpenAlertHistoryResult) []GetExternalExadataStorageServerOpenAlertHistoryAlert {
		return v.Alerts
	}).(GetExternalExadataStorageServerOpenAlertHistoryAlertArrayOutput)
}

func (o GetExternalExadataStorageServerOpenAlertHistoryResultOutput) ExternalExadataStorageServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalExadataStorageServerOpenAlertHistoryResult) string {
		return v.ExternalExadataStorageServerId
	}).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetExternalExadataStorageServerOpenAlertHistoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalExadataStorageServerOpenAlertHistoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExternalExadataStorageServerOpenAlertHistoryResultOutput{})
}
