// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific External My Sql Database Connector resource in Oracle Cloud Infrastructure Database Management service.
//
// Retrieves the MySQL database connector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/databasemanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databasemanagement.GetExternalMySqlDatabaseConnector(ctx, &databasemanagement.GetExternalMySqlDatabaseConnectorArgs{
//				ExternalMySqlDatabaseConnectorId: testExternalMySqlDatabaseConnectorOciDatabaseManagementExternalMySqlDatabaseConnector.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupExternalMySqlDatabaseConnector(ctx *pulumi.Context, args *LookupExternalMySqlDatabaseConnectorArgs, opts ...pulumi.InvokeOption) (*LookupExternalMySqlDatabaseConnectorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupExternalMySqlDatabaseConnectorResult
	err := ctx.Invoke("oci:DatabaseManagement/getExternalMySqlDatabaseConnector:getExternalMySqlDatabaseConnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExternalMySqlDatabaseConnector.
type LookupExternalMySqlDatabaseConnectorArgs struct {
	// The OCID of the External MySQL Database Connector.
	ExternalMySqlDatabaseConnectorId string `pulumi:"externalMySqlDatabaseConnectorId"`
}

// A collection of values returned by getExternalMySqlDatabaseConnector.
type LookupExternalMySqlDatabaseConnectorResult struct {
	// Oracle Cloud Infrastructure Services associated with this connector.
	AssociatedServices           string `pulumi:"associatedServices"`
	CheckConnectionStatusTrigger int    `pulumi:"checkConnectionStatusTrigger"`
	// OCID of compartment for the External MySQL connector.
	CompartmentId string `pulumi:"compartmentId"`
	// Connection Status
	ConnectionStatus string                                             `pulumi:"connectionStatus"`
	ConnectorDetails []GetExternalMySqlDatabaseConnectorConnectorDetail `pulumi:"connectorDetails"`
	// Connector Type.
	ConnectorType string `pulumi:"connectorType"`
	// Credential type used to connect to database.
	CredentialType string `pulumi:"credentialType"`
	// OCID of MySQL Database resource
	ExternalDatabaseId               string `pulumi:"externalDatabaseId"`
	ExternalMySqlDatabaseConnectorId string `pulumi:"externalMySqlDatabaseConnectorId"`
	// Host name for Connector.
	HostName string `pulumi:"hostName"`
	// OCID of MySQL Database Connector.
	Id                    string `pulumi:"id"`
	IsTestConnectionParam bool   `pulumi:"isTestConnectionParam"`
	// Agent Id of the MACS agent.
	MacsAgentId string `pulumi:"macsAgentId"`
	// External MySQL Database Connector Name.
	Name string `pulumi:"name"`
	// Network Protocol.
	NetworkProtocol string `pulumi:"networkProtocol"`
	// Connector port.
	Port int `pulumi:"port"`
	// Name of MySQL Database.
	SourceDatabase string `pulumi:"sourceDatabase"`
	// Type of MySQL Database.
	SourceDatabaseType string `pulumi:"sourceDatabaseType"`
	// OCID of the SSL secret, if TCPS with SSL is used to connect to database.
	SslSecretId string `pulumi:"sslSecretId"`
	// Name of the SSL secret, if TCPS with SSL is used to connect to database.
	SslSecretName string `pulumi:"sslSecretName"`
	// Indicates lifecycle  state of the resource.
	State string `pulumi:"state"`
	// Time when connection status was last updated.
	TimeConnectionStatusUpdated string `pulumi:"timeConnectionStatusUpdated"`
	// Connector creation time.
	TimeCreated string `pulumi:"timeCreated"`
	// Connector update time.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupExternalMySqlDatabaseConnectorOutput(ctx *pulumi.Context, args LookupExternalMySqlDatabaseConnectorOutputArgs, opts ...pulumi.InvokeOption) LookupExternalMySqlDatabaseConnectorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupExternalMySqlDatabaseConnectorResultOutput, error) {
			args := v.(LookupExternalMySqlDatabaseConnectorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DatabaseManagement/getExternalMySqlDatabaseConnector:getExternalMySqlDatabaseConnector", args, LookupExternalMySqlDatabaseConnectorResultOutput{}, options).(LookupExternalMySqlDatabaseConnectorResultOutput), nil
		}).(LookupExternalMySqlDatabaseConnectorResultOutput)
}

// A collection of arguments for invoking getExternalMySqlDatabaseConnector.
type LookupExternalMySqlDatabaseConnectorOutputArgs struct {
	// The OCID of the External MySQL Database Connector.
	ExternalMySqlDatabaseConnectorId pulumi.StringInput `pulumi:"externalMySqlDatabaseConnectorId"`
}

func (LookupExternalMySqlDatabaseConnectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExternalMySqlDatabaseConnectorArgs)(nil)).Elem()
}

// A collection of values returned by getExternalMySqlDatabaseConnector.
type LookupExternalMySqlDatabaseConnectorResultOutput struct{ *pulumi.OutputState }

func (LookupExternalMySqlDatabaseConnectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExternalMySqlDatabaseConnectorResult)(nil)).Elem()
}

func (o LookupExternalMySqlDatabaseConnectorResultOutput) ToLookupExternalMySqlDatabaseConnectorResultOutput() LookupExternalMySqlDatabaseConnectorResultOutput {
	return o
}

func (o LookupExternalMySqlDatabaseConnectorResultOutput) ToLookupExternalMySqlDatabaseConnectorResultOutputWithContext(ctx context.Context) LookupExternalMySqlDatabaseConnectorResultOutput {
	return o
}

// Oracle Cloud Infrastructure Services associated with this connector.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) AssociatedServices() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.AssociatedServices }).(pulumi.StringOutput)
}

func (o LookupExternalMySqlDatabaseConnectorResultOutput) CheckConnectionStatusTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) int { return v.CheckConnectionStatusTrigger }).(pulumi.IntOutput)
}

// OCID of compartment for the External MySQL connector.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Connection Status
func (o LookupExternalMySqlDatabaseConnectorResultOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

func (o LookupExternalMySqlDatabaseConnectorResultOutput) ConnectorDetails() GetExternalMySqlDatabaseConnectorConnectorDetailArrayOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) []GetExternalMySqlDatabaseConnectorConnectorDetail {
		return v.ConnectorDetails
	}).(GetExternalMySqlDatabaseConnectorConnectorDetailArrayOutput)
}

// Connector Type.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// Credential type used to connect to database.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.CredentialType }).(pulumi.StringOutput)
}

// OCID of MySQL Database resource
func (o LookupExternalMySqlDatabaseConnectorResultOutput) ExternalDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.ExternalDatabaseId }).(pulumi.StringOutput)
}

func (o LookupExternalMySqlDatabaseConnectorResultOutput) ExternalMySqlDatabaseConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.ExternalMySqlDatabaseConnectorId }).(pulumi.StringOutput)
}

// Host name for Connector.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.HostName }).(pulumi.StringOutput)
}

// OCID of MySQL Database Connector.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupExternalMySqlDatabaseConnectorResultOutput) IsTestConnectionParam() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) bool { return v.IsTestConnectionParam }).(pulumi.BoolOutput)
}

// Agent Id of the MACS agent.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) MacsAgentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.MacsAgentId }).(pulumi.StringOutput)
}

// External MySQL Database Connector Name.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.Name }).(pulumi.StringOutput)
}

// Network Protocol.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) NetworkProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.NetworkProtocol }).(pulumi.StringOutput)
}

// Connector port.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) int { return v.Port }).(pulumi.IntOutput)
}

// Name of MySQL Database.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) SourceDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.SourceDatabase }).(pulumi.StringOutput)
}

// Type of MySQL Database.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) SourceDatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.SourceDatabaseType }).(pulumi.StringOutput)
}

// OCID of the SSL secret, if TCPS with SSL is used to connect to database.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) SslSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.SslSecretId }).(pulumi.StringOutput)
}

// Name of the SSL secret, if TCPS with SSL is used to connect to database.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) SslSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.SslSecretName }).(pulumi.StringOutput)
}

// Indicates lifecycle  state of the resource.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.State }).(pulumi.StringOutput)
}

// Time when connection status was last updated.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) TimeConnectionStatusUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.TimeConnectionStatusUpdated }).(pulumi.StringOutput)
}

// Connector creation time.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Connector update time.
func (o LookupExternalMySqlDatabaseConnectorResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExternalMySqlDatabaseConnectorResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExternalMySqlDatabaseConnectorResultOutput{})
}
