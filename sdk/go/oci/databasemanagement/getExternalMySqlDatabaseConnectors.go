// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of External My Sql Database Connectors in Oracle Cloud Infrastructure Database Management service.
//
// Gets the list of External MySQL Database connectors.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/databasemanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databasemanagement.GetExternalMySqlDatabaseConnectors(ctx, &databasemanagement.GetExternalMySqlDatabaseConnectorsArgs{
//				CompartmentId: compartmentId,
//				Name:          pulumi.StringRef(externalMySqlDatabaseConnectorName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetExternalMySqlDatabaseConnectors(ctx *pulumi.Context, args *GetExternalMySqlDatabaseConnectorsArgs, opts ...pulumi.InvokeOption) (*GetExternalMySqlDatabaseConnectorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExternalMySqlDatabaseConnectorsResult
	err := ctx.Invoke("oci:DatabaseManagement/getExternalMySqlDatabaseConnectors:getExternalMySqlDatabaseConnectors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExternalMySqlDatabaseConnectors.
type GetExternalMySqlDatabaseConnectorsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string                                     `pulumi:"compartmentId"`
	Filters       []GetExternalMySqlDatabaseConnectorsFilter `pulumi:"filters"`
	// The parameter to filter by MySQL Database System type.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getExternalMySqlDatabaseConnectors.
type GetExternalMySqlDatabaseConnectorsResult struct {
	// OCID of compartment for the External MySQL connector.
	CompartmentId string                                     `pulumi:"compartmentId"`
	Filters       []GetExternalMySqlDatabaseConnectorsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of my_sql_connector_collection.
	MySqlConnectorCollections []GetExternalMySqlDatabaseConnectorsMySqlConnectorCollection `pulumi:"mySqlConnectorCollections"`
	// External MySQL Database Connector Name.
	Name *string `pulumi:"name"`
}

func GetExternalMySqlDatabaseConnectorsOutput(ctx *pulumi.Context, args GetExternalMySqlDatabaseConnectorsOutputArgs, opts ...pulumi.InvokeOption) GetExternalMySqlDatabaseConnectorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetExternalMySqlDatabaseConnectorsResultOutput, error) {
			args := v.(GetExternalMySqlDatabaseConnectorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DatabaseManagement/getExternalMySqlDatabaseConnectors:getExternalMySqlDatabaseConnectors", args, GetExternalMySqlDatabaseConnectorsResultOutput{}, options).(GetExternalMySqlDatabaseConnectorsResultOutput), nil
		}).(GetExternalMySqlDatabaseConnectorsResultOutput)
}

// A collection of arguments for invoking getExternalMySqlDatabaseConnectors.
type GetExternalMySqlDatabaseConnectorsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput                                 `pulumi:"compartmentId"`
	Filters       GetExternalMySqlDatabaseConnectorsFilterArrayInput `pulumi:"filters"`
	// The parameter to filter by MySQL Database System type.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetExternalMySqlDatabaseConnectorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalMySqlDatabaseConnectorsArgs)(nil)).Elem()
}

// A collection of values returned by getExternalMySqlDatabaseConnectors.
type GetExternalMySqlDatabaseConnectorsResultOutput struct{ *pulumi.OutputState }

func (GetExternalMySqlDatabaseConnectorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExternalMySqlDatabaseConnectorsResult)(nil)).Elem()
}

func (o GetExternalMySqlDatabaseConnectorsResultOutput) ToGetExternalMySqlDatabaseConnectorsResultOutput() GetExternalMySqlDatabaseConnectorsResultOutput {
	return o
}

func (o GetExternalMySqlDatabaseConnectorsResultOutput) ToGetExternalMySqlDatabaseConnectorsResultOutputWithContext(ctx context.Context) GetExternalMySqlDatabaseConnectorsResultOutput {
	return o
}

// OCID of compartment for the External MySQL connector.
func (o GetExternalMySqlDatabaseConnectorsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalMySqlDatabaseConnectorsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetExternalMySqlDatabaseConnectorsResultOutput) Filters() GetExternalMySqlDatabaseConnectorsFilterArrayOutput {
	return o.ApplyT(func(v GetExternalMySqlDatabaseConnectorsResult) []GetExternalMySqlDatabaseConnectorsFilter {
		return v.Filters
	}).(GetExternalMySqlDatabaseConnectorsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetExternalMySqlDatabaseConnectorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExternalMySqlDatabaseConnectorsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of my_sql_connector_collection.
func (o GetExternalMySqlDatabaseConnectorsResultOutput) MySqlConnectorCollections() GetExternalMySqlDatabaseConnectorsMySqlConnectorCollectionArrayOutput {
	return o.ApplyT(func(v GetExternalMySqlDatabaseConnectorsResult) []GetExternalMySqlDatabaseConnectorsMySqlConnectorCollection {
		return v.MySqlConnectorCollections
	}).(GetExternalMySqlDatabaseConnectorsMySqlConnectorCollectionArrayOutput)
}

// External MySQL Database Connector Name.
func (o GetExternalMySqlDatabaseConnectorsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetExternalMySqlDatabaseConnectorsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExternalMySqlDatabaseConnectorsResultOutput{})
}
