// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Managed Database Attention Log Count resource in Oracle Cloud Infrastructure Database Management service.
//
// Get the counts of attention logs for the specified Managed Database.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.GetManagedDatabaseAttentionLogCount(ctx, &databasemanagement.GetManagedDatabaseAttentionLogCountArgs{
//				ManagedDatabaseId:        testManagedDatabase.Id,
//				GroupBy:                  pulumi.StringRef(managedDatabaseAttentionLogCountGroupBy),
//				IsRegularExpression:      pulumi.BoolRef(managedDatabaseAttentionLogCountIsRegularExpression),
//				LogSearchText:            pulumi.StringRef(managedDatabaseAttentionLogCountLogSearchText),
//				TimeGreaterThanOrEqualTo: pulumi.StringRef(managedDatabaseAttentionLogCountTimeGreaterThanOrEqualTo),
//				TimeLessThanOrEqualTo:    pulumi.StringRef(managedDatabaseAttentionLogCountTimeLessThanOrEqualTo),
//				TypeFilter:               pulumi.StringRef(managedDatabaseAttentionLogCountTypeFilter),
//				UrgencyFilter:            pulumi.StringRef(managedDatabaseAttentionLogCountUrgencyFilter),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedDatabaseAttentionLogCount(ctx *pulumi.Context, args *GetManagedDatabaseAttentionLogCountArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabaseAttentionLogCountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedDatabaseAttentionLogCountResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedDatabaseAttentionLogCount:getManagedDatabaseAttentionLogCount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabaseAttentionLogCount.
type GetManagedDatabaseAttentionLogCountArgs struct {
	// The optional parameter used to group different attention logs.
	GroupBy *string `pulumi:"groupBy"`
	// The flag to indicate whether the search text is regular expression or not.
	IsRegularExpression *bool `pulumi:"isRegularExpression"`
	// The optional query parameter to filter the attention or alert logs by search text.
	LogSearchText *string `pulumi:"logSearchText"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// The optional greater than or equal to timestamp to filter the logs.
	TimeGreaterThanOrEqualTo *string `pulumi:"timeGreaterThanOrEqualTo"`
	// The optional less than or equal to timestamp to filter the logs.
	TimeLessThanOrEqualTo *string `pulumi:"timeLessThanOrEqualTo"`
	// The optional parameter to filter the attention or alert logs by type.
	TypeFilter *string `pulumi:"typeFilter"`
	// The optional parameter to filter the attention logs by urgency.
	UrgencyFilter *string `pulumi:"urgencyFilter"`
}

// A collection of values returned by getManagedDatabaseAttentionLogCount.
type GetManagedDatabaseAttentionLogCountResult struct {
	GroupBy *string `pulumi:"groupBy"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string `pulumi:"id"`
	IsRegularExpression *bool  `pulumi:"isRegularExpression"`
	// An array of the counts of different urgency or type of attention logs.
	Items         []GetManagedDatabaseAttentionLogCountItem `pulumi:"items"`
	LogSearchText *string                                   `pulumi:"logSearchText"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId        string  `pulumi:"managedDatabaseId"`
	TimeGreaterThanOrEqualTo *string `pulumi:"timeGreaterThanOrEqualTo"`
	TimeLessThanOrEqualTo    *string `pulumi:"timeLessThanOrEqualTo"`
	TypeFilter               *string `pulumi:"typeFilter"`
	UrgencyFilter            *string `pulumi:"urgencyFilter"`
}

func GetManagedDatabaseAttentionLogCountOutput(ctx *pulumi.Context, args GetManagedDatabaseAttentionLogCountOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabaseAttentionLogCountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedDatabaseAttentionLogCountResultOutput, error) {
			args := v.(GetManagedDatabaseAttentionLogCountArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetManagedDatabaseAttentionLogCountResult
			secret, err := ctx.InvokePackageRaw("oci:DatabaseManagement/getManagedDatabaseAttentionLogCount:getManagedDatabaseAttentionLogCount", args, &rv, "", opts...)
			if err != nil {
				return GetManagedDatabaseAttentionLogCountResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetManagedDatabaseAttentionLogCountResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetManagedDatabaseAttentionLogCountResultOutput), nil
			}
			return output, nil
		}).(GetManagedDatabaseAttentionLogCountResultOutput)
}

// A collection of arguments for invoking getManagedDatabaseAttentionLogCount.
type GetManagedDatabaseAttentionLogCountOutputArgs struct {
	// The optional parameter used to group different attention logs.
	GroupBy pulumi.StringPtrInput `pulumi:"groupBy"`
	// The flag to indicate whether the search text is regular expression or not.
	IsRegularExpression pulumi.BoolPtrInput `pulumi:"isRegularExpression"`
	// The optional query parameter to filter the attention or alert logs by search text.
	LogSearchText pulumi.StringPtrInput `pulumi:"logSearchText"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId pulumi.StringInput `pulumi:"managedDatabaseId"`
	// The optional greater than or equal to timestamp to filter the logs.
	TimeGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeGreaterThanOrEqualTo"`
	// The optional less than or equal to timestamp to filter the logs.
	TimeLessThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeLessThanOrEqualTo"`
	// The optional parameter to filter the attention or alert logs by type.
	TypeFilter pulumi.StringPtrInput `pulumi:"typeFilter"`
	// The optional parameter to filter the attention logs by urgency.
	UrgencyFilter pulumi.StringPtrInput `pulumi:"urgencyFilter"`
}

func (GetManagedDatabaseAttentionLogCountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseAttentionLogCountArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabaseAttentionLogCount.
type GetManagedDatabaseAttentionLogCountResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseAttentionLogCountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseAttentionLogCountResult)(nil)).Elem()
}

func (o GetManagedDatabaseAttentionLogCountResultOutput) ToGetManagedDatabaseAttentionLogCountResultOutput() GetManagedDatabaseAttentionLogCountResultOutput {
	return o
}

func (o GetManagedDatabaseAttentionLogCountResultOutput) ToGetManagedDatabaseAttentionLogCountResultOutputWithContext(ctx context.Context) GetManagedDatabaseAttentionLogCountResultOutput {
	return o
}

func (o GetManagedDatabaseAttentionLogCountResultOutput) GroupBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseAttentionLogCountResult) *string { return v.GroupBy }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabaseAttentionLogCountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseAttentionLogCountResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedDatabaseAttentionLogCountResultOutput) IsRegularExpression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseAttentionLogCountResult) *bool { return v.IsRegularExpression }).(pulumi.BoolPtrOutput)
}

// An array of the counts of different urgency or type of attention logs.
func (o GetManagedDatabaseAttentionLogCountResultOutput) Items() GetManagedDatabaseAttentionLogCountItemArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseAttentionLogCountResult) []GetManagedDatabaseAttentionLogCountItem {
		return v.Items
	}).(GetManagedDatabaseAttentionLogCountItemArrayOutput)
}

func (o GetManagedDatabaseAttentionLogCountResultOutput) LogSearchText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseAttentionLogCountResult) *string { return v.LogSearchText }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
func (o GetManagedDatabaseAttentionLogCountResultOutput) ManagedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseAttentionLogCountResult) string { return v.ManagedDatabaseId }).(pulumi.StringOutput)
}

func (o GetManagedDatabaseAttentionLogCountResultOutput) TimeGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseAttentionLogCountResult) *string { return v.TimeGreaterThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetManagedDatabaseAttentionLogCountResultOutput) TimeLessThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseAttentionLogCountResult) *string { return v.TimeLessThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetManagedDatabaseAttentionLogCountResultOutput) TypeFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseAttentionLogCountResult) *string { return v.TypeFilter }).(pulumi.StringPtrOutput)
}

func (o GetManagedDatabaseAttentionLogCountResultOutput) UrgencyFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseAttentionLogCountResult) *string { return v.UrgencyFilter }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabaseAttentionLogCountResultOutput{})
}
