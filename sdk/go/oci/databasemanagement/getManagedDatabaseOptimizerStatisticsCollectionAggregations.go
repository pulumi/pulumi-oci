// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Database Optimizer Statistics Collection Aggregations in Oracle Cloud Infrastructure Database Management service.
//
// Gets a list of the optimizer statistics collection operations per hour, grouped by task or object status for the specified Managed Database.
// You must specify a value for the GroupByQueryParam to determine whether the data should be grouped by task status or task object status.
// Optionally, you can specify a date-time range (of seven days) to obtain collection aggregations within the specified time range.
// If the date-time range is not specified, then the operations in the last seven days are listed.
// You can further filter the results by providing the optional type of TaskTypeQueryParam.
// If the task type if not provided, then both Auto and Manual tasks are considered for aggregation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.GetManagedDatabaseOptimizerStatisticsCollectionAggregations(ctx, &databasemanagement.GetManagedDatabaseOptimizerStatisticsCollectionAggregationsArgs{
//				GroupType:                     managedDatabaseOptimizerStatisticsCollectionAggregationGroupType,
//				ManagedDatabaseId:             testManagedDatabase.Id,
//				EndTimeLessThanOrEqualTo:      pulumi.StringRef(managedDatabaseOptimizerStatisticsCollectionAggregationEndTimeLessThanOrEqualTo),
//				StartTimeGreaterThanOrEqualTo: pulumi.StringRef(managedDatabaseOptimizerStatisticsCollectionAggregationStartTimeGreaterThanOrEqualTo),
//				TaskType:                      pulumi.StringRef(managedDatabaseOptimizerStatisticsCollectionAggregationTaskType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedDatabaseOptimizerStatisticsCollectionAggregations(ctx *pulumi.Context, args *GetManagedDatabaseOptimizerStatisticsCollectionAggregationsArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedDatabaseOptimizerStatisticsCollectionAggregations:getManagedDatabaseOptimizerStatisticsCollectionAggregations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabaseOptimizerStatisticsCollectionAggregations.
type GetManagedDatabaseOptimizerStatisticsCollectionAggregationsArgs struct {
	// The end time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is "yyyy-MM-dd'T'hh:mm:ss.sss'Z'".
	EndTimeLessThanOrEqualTo *string                                                             `pulumi:"endTimeLessThanOrEqualTo"`
	Filters                  []GetManagedDatabaseOptimizerStatisticsCollectionAggregationsFilter `pulumi:"filters"`
	// The optimizer statistics tasks grouped by type.
	GroupType string `pulumi:"groupType"`
	Limit     *int   `pulumi:"limit"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// The start time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is "yyyy-MM-dd'T'hh:mm:ss.sss'Z'".
	StartTimeGreaterThanOrEqualTo *string `pulumi:"startTimeGreaterThanOrEqualTo"`
	// The filter types of the optimizer statistics tasks.
	TaskType *string `pulumi:"taskType"`
}

// A collection of values returned by getManagedDatabaseOptimizerStatisticsCollectionAggregations.
type GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult struct {
	EndTimeLessThanOrEqualTo *string                                                             `pulumi:"endTimeLessThanOrEqualTo"`
	Filters                  []GetManagedDatabaseOptimizerStatisticsCollectionAggregationsFilter `pulumi:"filters"`
	GroupType                string                                                              `pulumi:"groupType"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	Limit             *int   `pulumi:"limit"`
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// The list of optimizer_statistics_collection_aggregations_collection.
	OptimizerStatisticsCollectionAggregationsCollections []GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOptimizerStatisticsCollectionAggregationsCollection `pulumi:"optimizerStatisticsCollectionAggregationsCollections"`
	StartTimeGreaterThanOrEqualTo                        *string                                                                                                          `pulumi:"startTimeGreaterThanOrEqualTo"`
	TaskType                                             *string                                                                                                          `pulumi:"taskType"`
}

func GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOutput(ctx *pulumi.Context, args GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput, error) {
			args := v.(GetManagedDatabaseOptimizerStatisticsCollectionAggregationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DatabaseManagement/getManagedDatabaseOptimizerStatisticsCollectionAggregations:getManagedDatabaseOptimizerStatisticsCollectionAggregations", args, GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput{}, options).(GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput), nil
		}).(GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput)
}

// A collection of arguments for invoking getManagedDatabaseOptimizerStatisticsCollectionAggregations.
type GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOutputArgs struct {
	// The end time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is "yyyy-MM-dd'T'hh:mm:ss.sss'Z'".
	EndTimeLessThanOrEqualTo pulumi.StringPtrInput                                                       `pulumi:"endTimeLessThanOrEqualTo"`
	Filters                  GetManagedDatabaseOptimizerStatisticsCollectionAggregationsFilterArrayInput `pulumi:"filters"`
	// The optimizer statistics tasks grouped by type.
	GroupType pulumi.StringInput `pulumi:"groupType"`
	Limit     pulumi.IntPtrInput `pulumi:"limit"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId pulumi.StringInput `pulumi:"managedDatabaseId"`
	// The start time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is "yyyy-MM-dd'T'hh:mm:ss.sss'Z'".
	StartTimeGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"startTimeGreaterThanOrEqualTo"`
	// The filter types of the optimizer statistics tasks.
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseOptimizerStatisticsCollectionAggregationsArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabaseOptimizerStatisticsCollectionAggregations.
type GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult)(nil)).Elem()
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) ToGetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput() GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput {
	return o
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) ToGetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutputWithContext(ctx context.Context) GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput {
	return o
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) EndTimeLessThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult) *string {
		return v.EndTimeLessThanOrEqualTo
	}).(pulumi.StringPtrOutput)
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) Filters() GetManagedDatabaseOptimizerStatisticsCollectionAggregationsFilterArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult) []GetManagedDatabaseOptimizerStatisticsCollectionAggregationsFilter {
		return v.Filters
	}).(GetManagedDatabaseOptimizerStatisticsCollectionAggregationsFilterArrayOutput)
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult) string { return v.GroupType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) ManagedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult) string {
		return v.ManagedDatabaseId
	}).(pulumi.StringOutput)
}

// The list of optimizer_statistics_collection_aggregations_collection.
func (o GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) OptimizerStatisticsCollectionAggregationsCollections() GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOptimizerStatisticsCollectionAggregationsCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult) []GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOptimizerStatisticsCollectionAggregationsCollection {
		return v.OptimizerStatisticsCollectionAggregationsCollections
	}).(GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOptimizerStatisticsCollectionAggregationsCollectionArrayOutput)
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) StartTimeGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult) *string {
		return v.StartTimeGreaterThanOrEqualTo
	}).(pulumi.StringPtrOutput)
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResultOutput{})
}
