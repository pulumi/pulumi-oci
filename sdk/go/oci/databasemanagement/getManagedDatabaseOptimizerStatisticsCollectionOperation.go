// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Managed Database Optimizer Statistics Collection Operation resource in Oracle Cloud Infrastructure Database Management service.
//
// Gets a detailed report of the Optimizer Statistics Collection operation for the specified Managed Database.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.GetManagedDatabaseOptimizerStatisticsCollectionOperation(ctx, &databasemanagement.GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs{
//				ManagedDatabaseId:                        testManagedDatabase.Id,
//				OptimizerStatisticsCollectionOperationId: testOptimizerStatisticsCollectionOperation.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetManagedDatabaseOptimizerStatisticsCollectionOperation(ctx *pulumi.Context, args *GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabaseOptimizerStatisticsCollectionOperationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedDatabaseOptimizerStatisticsCollectionOperationResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedDatabaseOptimizerStatisticsCollectionOperation:getManagedDatabaseOptimizerStatisticsCollectionOperation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabaseOptimizerStatisticsCollectionOperation.
type GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// The ID of the Optimizer Statistics Collection operation.
	OptimizerStatisticsCollectionOperationId float64 `pulumi:"optimizerStatisticsCollectionOperationId"`
}

// A collection of values returned by getManagedDatabaseOptimizerStatisticsCollectionOperation.
type GetManagedDatabaseOptimizerStatisticsCollectionOperationResult struct {
	// The number of objects for which statistics collection is completed.
	CompletedCount int `pulumi:"completedCount"`
	// The summary of the Managed Database resource.
	Databases []GetManagedDatabaseOptimizerStatisticsCollectionOperationDatabase `pulumi:"databases"`
	// The time it takes to complete the operation (in seconds).
	DurationInSeconds float64 `pulumi:"durationInSeconds"`
	// The end time of the operation.
	EndTime string `pulumi:"endTime"`
	// The number of objects for which statistics collection failed.
	FailedCount int `pulumi:"failedCount"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The number of objects for which statistics collection is in progress.
	InProgressCount int `pulumi:"inProgressCount"`
	// The name of the job.
	JobName           string `pulumi:"jobName"`
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// The name of the operation.
	OperationName                            string  `pulumi:"operationName"`
	OptimizerStatisticsCollectionOperationId float64 `pulumi:"optimizerStatisticsCollectionOperationId"`
	// The start time of the operation.
	StartTime string `pulumi:"startTime"`
	// The status of the Optimizer Statistics Collection task.
	Status string `pulumi:"status"`
	// The name of the target object for which statistics are gathered.
	Target string `pulumi:"target"`
	// An array of Optimizer Statistics Collection task details.
	Tasks []GetManagedDatabaseOptimizerStatisticsCollectionOperationTask `pulumi:"tasks"`
	// The number of objects for which statistics collection timed out.
	TimedOutCount int `pulumi:"timedOutCount"`
	// The total number of objects for which statistics is collected. This number is the sum of all the objects with various statuses: completed, inProgress, failed, and timedOut.
	TotalObjectsCount int `pulumi:"totalObjectsCount"`
}

func GetManagedDatabaseOptimizerStatisticsCollectionOperationOutput(ctx *pulumi.Context, args GetManagedDatabaseOptimizerStatisticsCollectionOperationOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedDatabaseOptimizerStatisticsCollectionOperationResult, error) {
			args := v.(GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs)
			r, err := GetManagedDatabaseOptimizerStatisticsCollectionOperation(ctx, &args, opts...)
			var s GetManagedDatabaseOptimizerStatisticsCollectionOperationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput)
}

// A collection of arguments for invoking getManagedDatabaseOptimizerStatisticsCollectionOperation.
type GetManagedDatabaseOptimizerStatisticsCollectionOperationOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId pulumi.StringInput `pulumi:"managedDatabaseId"`
	// The ID of the Optimizer Statistics Collection operation.
	OptimizerStatisticsCollectionOperationId pulumi.Float64Input `pulumi:"optimizerStatisticsCollectionOperationId"`
}

func (GetManagedDatabaseOptimizerStatisticsCollectionOperationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabaseOptimizerStatisticsCollectionOperation.
type GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseOptimizerStatisticsCollectionOperationResult)(nil)).Elem()
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) ToGetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput() GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput {
	return o
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) ToGetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutputWithContext(ctx context.Context) GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput {
	return o
}

// The number of objects for which statistics collection is completed.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) CompletedCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) int { return v.CompletedCount }).(pulumi.IntOutput)
}

// The summary of the Managed Database resource.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) Databases() GetManagedDatabaseOptimizerStatisticsCollectionOperationDatabaseArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) []GetManagedDatabaseOptimizerStatisticsCollectionOperationDatabase {
		return v.Databases
	}).(GetManagedDatabaseOptimizerStatisticsCollectionOperationDatabaseArrayOutput)
}

// The time it takes to complete the operation (in seconds).
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) DurationInSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) float64 {
		return v.DurationInSeconds
	}).(pulumi.Float64Output)
}

// The end time of the operation.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) string { return v.EndTime }).(pulumi.StringOutput)
}

// The number of objects for which statistics collection failed.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) FailedCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) int { return v.FailedCount }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The number of objects for which statistics collection is in progress.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) InProgressCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) int { return v.InProgressCount }).(pulumi.IntOutput)
}

// The name of the job.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) string { return v.JobName }).(pulumi.StringOutput)
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) ManagedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) string {
		return v.ManagedDatabaseId
	}).(pulumi.StringOutput)
}

// The name of the operation.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) OperationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) string { return v.OperationName }).(pulumi.StringOutput)
}

func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) OptimizerStatisticsCollectionOperationId() pulumi.Float64Output {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) float64 {
		return v.OptimizerStatisticsCollectionOperationId
	}).(pulumi.Float64Output)
}

// The start time of the operation.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) string { return v.StartTime }).(pulumi.StringOutput)
}

// The status of the Optimizer Statistics Collection task.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) string { return v.Status }).(pulumi.StringOutput)
}

// The name of the target object for which statistics are gathered.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) string { return v.Target }).(pulumi.StringOutput)
}

// An array of Optimizer Statistics Collection task details.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) Tasks() GetManagedDatabaseOptimizerStatisticsCollectionOperationTaskArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) []GetManagedDatabaseOptimizerStatisticsCollectionOperationTask {
		return v.Tasks
	}).(GetManagedDatabaseOptimizerStatisticsCollectionOperationTaskArrayOutput)
}

// The number of objects for which statistics collection timed out.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) TimedOutCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) int { return v.TimedOutCount }).(pulumi.IntOutput)
}

// The total number of objects for which statistics is collected. This number is the sum of all the objects with various statuses: completed, inProgress, failed, and timedOut.
func (o GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput) TotalObjectsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseOptimizerStatisticsCollectionOperationResult) int { return v.TotalObjectsCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabaseOptimizerStatisticsCollectionOperationResultOutput{})
}
