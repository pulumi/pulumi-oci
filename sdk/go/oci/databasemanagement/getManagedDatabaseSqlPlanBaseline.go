// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Managed Database Sql Plan Baseline resource in Oracle Cloud Infrastructure Database Management service.
//
// Gets the SQL plan baseline details for the specified planName.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.GetManagedDatabaseSqlPlanBaseline(ctx, &databasemanagement.GetManagedDatabaseSqlPlanBaselineArgs{
//				ManagedDatabaseId: oci_database_management_managed_database.Test_managed_database.Id,
//				PlanName:          _var.Managed_database_sql_plan_baseline_plan_name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedDatabaseSqlPlanBaseline(ctx *pulumi.Context, args *GetManagedDatabaseSqlPlanBaselineArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabaseSqlPlanBaselineResult, error) {
	var rv GetManagedDatabaseSqlPlanBaselineResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedDatabaseSqlPlanBaseline:getManagedDatabaseSqlPlanBaseline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabaseSqlPlanBaseline.
type GetManagedDatabaseSqlPlanBaselineArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// The plan name of the SQL plan baseline.
	PlanName string `pulumi:"planName"`
}

// A collection of values returned by getManagedDatabaseSqlPlanBaseline.
type GetManagedDatabaseSqlPlanBaselineResult struct {
	// Indicates whether the plan baseline is accepted (`YES`) or not (`NO`).
	Accepted string `pulumi:"accepted"`
	// The application action.
	Action string `pulumi:"action"`
	// Indicates whether a plan that is automatically captured by SQL plan management is marked adaptive or not.
	Adaptive string `pulumi:"adaptive"`
	// Indicates whether the plan baseline is auto-purged (`YES`) or not (`NO`).
	AutoPurge string `pulumi:"autoPurge"`
	// Indicates whether the plan baseline is enabled (`YES`) or disabled (`NO`).
	Enabled string `pulumi:"enabled"`
	// The execution plan for the SQL statement.
	ExecutionPlan string `pulumi:"executionPlan"`
	// Indicates whether the plan baseline is fixed (`YES`) or not (`NO`).
	Fixed string `pulumi:"fixed"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// The application module name.
	Module string `pulumi:"module"`
	// The origin of the SQL plan baseline.
	Origin string `pulumi:"origin"`
	// The unique plan identifier.
	PlanName string `pulumi:"planName"`
	// Indicates whether the optimizer was able to reproduce the plan (`YES`) or not (`NO`). The value is set to `YES` when a plan is initially added to the plan baseline.
	Reproduced string `pulumi:"reproduced"`
	// The unique SQL identifier.
	SqlHandle string `pulumi:"sqlHandle"`
	// The SQL text.
	SqlText string `pulumi:"sqlText"`
	// The date and time when the plan baseline was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time when the plan baseline was last executed.
	TimeLastExecuted string `pulumi:"timeLastExecuted"`
	// The date and time when the plan baseline was last modified.
	TimeLastModified string `pulumi:"timeLastModified"`
}

func GetManagedDatabaseSqlPlanBaselineOutput(ctx *pulumi.Context, args GetManagedDatabaseSqlPlanBaselineOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabaseSqlPlanBaselineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedDatabaseSqlPlanBaselineResult, error) {
			args := v.(GetManagedDatabaseSqlPlanBaselineArgs)
			r, err := GetManagedDatabaseSqlPlanBaseline(ctx, &args, opts...)
			var s GetManagedDatabaseSqlPlanBaselineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedDatabaseSqlPlanBaselineResultOutput)
}

// A collection of arguments for invoking getManagedDatabaseSqlPlanBaseline.
type GetManagedDatabaseSqlPlanBaselineOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId pulumi.StringInput `pulumi:"managedDatabaseId"`
	// The plan name of the SQL plan baseline.
	PlanName pulumi.StringInput `pulumi:"planName"`
}

func (GetManagedDatabaseSqlPlanBaselineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseSqlPlanBaselineArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabaseSqlPlanBaseline.
type GetManagedDatabaseSqlPlanBaselineResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseSqlPlanBaselineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseSqlPlanBaselineResult)(nil)).Elem()
}

func (o GetManagedDatabaseSqlPlanBaselineResultOutput) ToGetManagedDatabaseSqlPlanBaselineResultOutput() GetManagedDatabaseSqlPlanBaselineResultOutput {
	return o
}

func (o GetManagedDatabaseSqlPlanBaselineResultOutput) ToGetManagedDatabaseSqlPlanBaselineResultOutputWithContext(ctx context.Context) GetManagedDatabaseSqlPlanBaselineResultOutput {
	return o
}

// Indicates whether the plan baseline is accepted (`YES`) or not (`NO`).
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) Accepted() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.Accepted }).(pulumi.StringOutput)
}

// The application action.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.Action }).(pulumi.StringOutput)
}

// Indicates whether a plan that is automatically captured by SQL plan management is marked adaptive or not.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) Adaptive() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.Adaptive }).(pulumi.StringOutput)
}

// Indicates whether the plan baseline is auto-purged (`YES`) or not (`NO`).
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) AutoPurge() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.AutoPurge }).(pulumi.StringOutput)
}

// Indicates whether the plan baseline is enabled (`YES`) or disabled (`NO`).
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) Enabled() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.Enabled }).(pulumi.StringOutput)
}

// The execution plan for the SQL statement.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) ExecutionPlan() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.ExecutionPlan }).(pulumi.StringOutput)
}

// Indicates whether the plan baseline is fixed (`YES`) or not (`NO`).
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) Fixed() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.Fixed }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedDatabaseSqlPlanBaselineResultOutput) ManagedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.ManagedDatabaseId }).(pulumi.StringOutput)
}

// The application module name.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) Module() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.Module }).(pulumi.StringOutput)
}

// The origin of the SQL plan baseline.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.Origin }).(pulumi.StringOutput)
}

// The unique plan identifier.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.PlanName }).(pulumi.StringOutput)
}

// Indicates whether the optimizer was able to reproduce the plan (`YES`) or not (`NO`). The value is set to `YES` when a plan is initially added to the plan baseline.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) Reproduced() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.Reproduced }).(pulumi.StringOutput)
}

// The unique SQL identifier.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) SqlHandle() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.SqlHandle }).(pulumi.StringOutput)
}

// The SQL text.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) SqlText() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.SqlText }).(pulumi.StringOutput)
}

// The date and time when the plan baseline was created.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time when the plan baseline was last executed.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) TimeLastExecuted() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.TimeLastExecuted }).(pulumi.StringOutput)
}

// The date and time when the plan baseline was last modified.
func (o GetManagedDatabaseSqlPlanBaselineResultOutput) TimeLastModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselineResult) string { return v.TimeLastModified }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabaseSqlPlanBaselineResultOutput{})
}
