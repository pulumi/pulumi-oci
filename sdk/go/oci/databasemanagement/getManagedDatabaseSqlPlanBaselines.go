// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Managed Database Sql Plan Baselines in Oracle Cloud Infrastructure Database Management service.
//
// Lists the SQL plan baselines for the specified Managed Database.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.GetManagedDatabaseSqlPlanBaselines(ctx, &databasemanagement.GetManagedDatabaseSqlPlanBaselinesArgs{
//				ManagedDatabaseId: oci_database_management_managed_database.Test_managed_database.Id,
//				IsAccepted:        pulumi.BoolRef(_var.Managed_database_sql_plan_baseline_is_accepted),
//				IsAdaptive:        pulumi.BoolRef(_var.Managed_database_sql_plan_baseline_is_adaptive),
//				IsEnabled:         pulumi.BoolRef(_var.Managed_database_sql_plan_baseline_is_enabled),
//				IsFixed:           pulumi.BoolRef(_var.Managed_database_sql_plan_baseline_is_fixed),
//				IsReproduced:      pulumi.BoolRef(_var.Managed_database_sql_plan_baseline_is_reproduced),
//				Origin:            pulumi.StringRef(_var.Managed_database_sql_plan_baseline_origin),
//				PlanName:          pulumi.StringRef(_var.Managed_database_sql_plan_baseline_plan_name),
//				SqlHandle:         pulumi.StringRef(_var.Managed_database_sql_plan_baseline_sql_handle),
//				SqlText:           pulumi.StringRef(_var.Managed_database_sql_plan_baseline_sql_text),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedDatabaseSqlPlanBaselines(ctx *pulumi.Context, args *GetManagedDatabaseSqlPlanBaselinesArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabaseSqlPlanBaselinesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedDatabaseSqlPlanBaselinesResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedDatabaseSqlPlanBaselines:getManagedDatabaseSqlPlanBaselines", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabaseSqlPlanBaselines.
type GetManagedDatabaseSqlPlanBaselinesArgs struct {
	Filters []GetManagedDatabaseSqlPlanBaselinesFilter `pulumi:"filters"`
	// A filter to return only SQL plan baselines that are either accepted or not accepted. By default, all SQL plan baselines are returned.
	IsAccepted *bool `pulumi:"isAccepted"`
	// A filter to return only SQL plan baselines that are either adaptive or not adaptive. By default, all SQL plan baselines are returned.
	IsAdaptive *bool `pulumi:"isAdaptive"`
	// A filter to return only SQL plan baselines that are either enabled or not enabled. By default, all SQL plan baselines are returned.
	IsEnabled *bool `pulumi:"isEnabled"`
	// A filter to return only SQL plan baselines that are either fixed or not fixed. By default, all SQL plan baselines are returned.
	IsFixed *bool `pulumi:"isFixed"`
	// A filter to return only SQL plan baselines that were either reproduced or not reproduced by the optimizer. By default, all SQL plan baselines are returned.
	IsReproduced *bool `pulumi:"isReproduced"`
	Limit        *int  `pulumi:"limit"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// A filter to return all the SQL plan baselines that match the origin.
	Origin *string `pulumi:"origin"`
	// A filter to return only SQL plan baselines that match the plan name.
	PlanName *string `pulumi:"planName"`
	// A filter to return all the SQL plan baselines for the specified SQL handle.
	SqlHandle *string `pulumi:"sqlHandle"`
	// A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the '%' symbol as a wildcard.
	SqlText *string `pulumi:"sqlText"`
}

// A collection of values returned by getManagedDatabaseSqlPlanBaselines.
type GetManagedDatabaseSqlPlanBaselinesResult struct {
	Filters []GetManagedDatabaseSqlPlanBaselinesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	IsAccepted        *bool  `pulumi:"isAccepted"`
	IsAdaptive        *bool  `pulumi:"isAdaptive"`
	IsEnabled         *bool  `pulumi:"isEnabled"`
	IsFixed           *bool  `pulumi:"isFixed"`
	IsReproduced      *bool  `pulumi:"isReproduced"`
	Limit             *int   `pulumi:"limit"`
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// The origin of the SQL plan baseline.
	Origin *string `pulumi:"origin"`
	// The unique plan identifier.
	PlanName *string `pulumi:"planName"`
	// The unique SQL identifier.
	SqlHandle *string `pulumi:"sqlHandle"`
	// The list of sql_plan_baseline_collection.
	SqlPlanBaselineCollections []GetManagedDatabaseSqlPlanBaselinesSqlPlanBaselineCollection `pulumi:"sqlPlanBaselineCollections"`
	// The SQL text.
	SqlText *string `pulumi:"sqlText"`
}

func GetManagedDatabaseSqlPlanBaselinesOutput(ctx *pulumi.Context, args GetManagedDatabaseSqlPlanBaselinesOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabaseSqlPlanBaselinesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedDatabaseSqlPlanBaselinesResult, error) {
			args := v.(GetManagedDatabaseSqlPlanBaselinesArgs)
			r, err := GetManagedDatabaseSqlPlanBaselines(ctx, &args, opts...)
			var s GetManagedDatabaseSqlPlanBaselinesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedDatabaseSqlPlanBaselinesResultOutput)
}

// A collection of arguments for invoking getManagedDatabaseSqlPlanBaselines.
type GetManagedDatabaseSqlPlanBaselinesOutputArgs struct {
	Filters GetManagedDatabaseSqlPlanBaselinesFilterArrayInput `pulumi:"filters"`
	// A filter to return only SQL plan baselines that are either accepted or not accepted. By default, all SQL plan baselines are returned.
	IsAccepted pulumi.BoolPtrInput `pulumi:"isAccepted"`
	// A filter to return only SQL plan baselines that are either adaptive or not adaptive. By default, all SQL plan baselines are returned.
	IsAdaptive pulumi.BoolPtrInput `pulumi:"isAdaptive"`
	// A filter to return only SQL plan baselines that are either enabled or not enabled. By default, all SQL plan baselines are returned.
	IsEnabled pulumi.BoolPtrInput `pulumi:"isEnabled"`
	// A filter to return only SQL plan baselines that are either fixed or not fixed. By default, all SQL plan baselines are returned.
	IsFixed pulumi.BoolPtrInput `pulumi:"isFixed"`
	// A filter to return only SQL plan baselines that were either reproduced or not reproduced by the optimizer. By default, all SQL plan baselines are returned.
	IsReproduced pulumi.BoolPtrInput `pulumi:"isReproduced"`
	Limit        pulumi.IntPtrInput  `pulumi:"limit"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId pulumi.StringInput `pulumi:"managedDatabaseId"`
	// A filter to return all the SQL plan baselines that match the origin.
	Origin pulumi.StringPtrInput `pulumi:"origin"`
	// A filter to return only SQL plan baselines that match the plan name.
	PlanName pulumi.StringPtrInput `pulumi:"planName"`
	// A filter to return all the SQL plan baselines for the specified SQL handle.
	SqlHandle pulumi.StringPtrInput `pulumi:"sqlHandle"`
	// A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the '%' symbol as a wildcard.
	SqlText pulumi.StringPtrInput `pulumi:"sqlText"`
}

func (GetManagedDatabaseSqlPlanBaselinesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseSqlPlanBaselinesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabaseSqlPlanBaselines.
type GetManagedDatabaseSqlPlanBaselinesResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseSqlPlanBaselinesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseSqlPlanBaselinesResult)(nil)).Elem()
}

func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) ToGetManagedDatabaseSqlPlanBaselinesResultOutput() GetManagedDatabaseSqlPlanBaselinesResultOutput {
	return o
}

func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) ToGetManagedDatabaseSqlPlanBaselinesResultOutputWithContext(ctx context.Context) GetManagedDatabaseSqlPlanBaselinesResultOutput {
	return o
}

func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetManagedDatabaseSqlPlanBaselinesResult] {
	return pulumix.Output[GetManagedDatabaseSqlPlanBaselinesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) Filters() GetManagedDatabaseSqlPlanBaselinesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) []GetManagedDatabaseSqlPlanBaselinesFilter {
		return v.Filters
	}).(GetManagedDatabaseSqlPlanBaselinesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) IsAccepted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) *bool { return v.IsAccepted }).(pulumi.BoolPtrOutput)
}

func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) IsAdaptive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) *bool { return v.IsAdaptive }).(pulumi.BoolPtrOutput)
}

func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) IsFixed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) *bool { return v.IsFixed }).(pulumi.BoolPtrOutput)
}

func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) IsReproduced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) *bool { return v.IsReproduced }).(pulumi.BoolPtrOutput)
}

func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) ManagedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) string { return v.ManagedDatabaseId }).(pulumi.StringOutput)
}

// The origin of the SQL plan baseline.
func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) *string { return v.Origin }).(pulumi.StringPtrOutput)
}

// The unique plan identifier.
func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) PlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) *string { return v.PlanName }).(pulumi.StringPtrOutput)
}

// The unique SQL identifier.
func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) SqlHandle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) *string { return v.SqlHandle }).(pulumi.StringPtrOutput)
}

// The list of sql_plan_baseline_collection.
func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) SqlPlanBaselineCollections() GetManagedDatabaseSqlPlanBaselinesSqlPlanBaselineCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) []GetManagedDatabaseSqlPlanBaselinesSqlPlanBaselineCollection {
		return v.SqlPlanBaselineCollections
	}).(GetManagedDatabaseSqlPlanBaselinesSqlPlanBaselineCollectionArrayOutput)
}

// The SQL text.
func (o GetManagedDatabaseSqlPlanBaselinesResultOutput) SqlText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseSqlPlanBaselinesResult) *string { return v.SqlText }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabaseSqlPlanBaselinesResultOutput{})
}
