// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Database User Consumer Group Privileges in Oracle Cloud Infrastructure Database Management service.
//
// Gets the list of consumer group privileges granted to a specific user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.GetManagedDatabaseUserConsumerGroupPrivileges(ctx, &databasemanagement.GetManagedDatabaseUserConsumerGroupPrivilegesArgs{
//				ManagedDatabaseId: oci_database_management_managed_database.Test_managed_database.Id,
//				UserName:          oci_identity_user.Test_user.Name,
//				Name:              pulumi.StringRef(_var.Managed_database_user_consumer_group_privilege_name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedDatabaseUserConsumerGroupPrivileges(ctx *pulumi.Context, args *GetManagedDatabaseUserConsumerGroupPrivilegesArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabaseUserConsumerGroupPrivilegesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedDatabaseUserConsumerGroupPrivilegesResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedDatabaseUserConsumerGroupPrivileges:getManagedDatabaseUserConsumerGroupPrivileges", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabaseUserConsumerGroupPrivileges.
type GetManagedDatabaseUserConsumerGroupPrivilegesArgs struct {
	Filters []GetManagedDatabaseUserConsumerGroupPrivilegesFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name *string `pulumi:"name"`
	// The name of the user whose details are to be viewed.
	UserName string `pulumi:"userName"`
}

// A collection of values returned by getManagedDatabaseUserConsumerGroupPrivileges.
type GetManagedDatabaseUserConsumerGroupPrivilegesResult struct {
	// The list of consumer_group_privilege_collection.
	ConsumerGroupPrivilegeCollections []GetManagedDatabaseUserConsumerGroupPrivilegesConsumerGroupPrivilegeCollection `pulumi:"consumerGroupPrivilegeCollections"`
	Filters                           []GetManagedDatabaseUserConsumerGroupPrivilegesFilter                           `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// The name of the granted consumer group privilege.
	Name     *string `pulumi:"name"`
	UserName string  `pulumi:"userName"`
}

func GetManagedDatabaseUserConsumerGroupPrivilegesOutput(ctx *pulumi.Context, args GetManagedDatabaseUserConsumerGroupPrivilegesOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedDatabaseUserConsumerGroupPrivilegesResult, error) {
			args := v.(GetManagedDatabaseUserConsumerGroupPrivilegesArgs)
			r, err := GetManagedDatabaseUserConsumerGroupPrivileges(ctx, &args, opts...)
			var s GetManagedDatabaseUserConsumerGroupPrivilegesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput)
}

// A collection of arguments for invoking getManagedDatabaseUserConsumerGroupPrivileges.
type GetManagedDatabaseUserConsumerGroupPrivilegesOutputArgs struct {
	Filters GetManagedDatabaseUserConsumerGroupPrivilegesFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId pulumi.StringInput `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the user whose details are to be viewed.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetManagedDatabaseUserConsumerGroupPrivilegesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseUserConsumerGroupPrivilegesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabaseUserConsumerGroupPrivileges.
type GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseUserConsumerGroupPrivilegesResult)(nil)).Elem()
}

func (o GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput) ToGetManagedDatabaseUserConsumerGroupPrivilegesResultOutput() GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput {
	return o
}

func (o GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput) ToGetManagedDatabaseUserConsumerGroupPrivilegesResultOutputWithContext(ctx context.Context) GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput {
	return o
}

// The list of consumer_group_privilege_collection.
func (o GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput) ConsumerGroupPrivilegeCollections() GetManagedDatabaseUserConsumerGroupPrivilegesConsumerGroupPrivilegeCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserConsumerGroupPrivilegesResult) []GetManagedDatabaseUserConsumerGroupPrivilegesConsumerGroupPrivilegeCollection {
		return v.ConsumerGroupPrivilegeCollections
	}).(GetManagedDatabaseUserConsumerGroupPrivilegesConsumerGroupPrivilegeCollectionArrayOutput)
}

func (o GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput) Filters() GetManagedDatabaseUserConsumerGroupPrivilegesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserConsumerGroupPrivilegesResult) []GetManagedDatabaseUserConsumerGroupPrivilegesFilter {
		return v.Filters
	}).(GetManagedDatabaseUserConsumerGroupPrivilegesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserConsumerGroupPrivilegesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput) ManagedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserConsumerGroupPrivilegesResult) string { return v.ManagedDatabaseId }).(pulumi.StringOutput)
}

// The name of the granted consumer group privilege.
func (o GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserConsumerGroupPrivilegesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserConsumerGroupPrivilegesResult) string { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabaseUserConsumerGroupPrivilegesResultOutput{})
}
