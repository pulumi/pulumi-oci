// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Managed Database User Data Access Container resource in Oracle Cloud Infrastructure Database Management service.
//
// Gets the list of containers for a specific user. This is only applicable if ALL_CONTAINERS !='Y'.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/databasemanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databasemanagement.GetManagedDatabaseUserDataAccessContainer(ctx, &databasemanagement.GetManagedDatabaseUserDataAccessContainerArgs{
//				ManagedDatabaseId: testManagedDatabase.Id,
//				UserName:          testUser.Name,
//				Name:              pulumi.StringRef(managedDatabaseUserDataAccessContainerName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedDatabaseUserDataAccessContainer(ctx *pulumi.Context, args *GetManagedDatabaseUserDataAccessContainerArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabaseUserDataAccessContainerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedDatabaseUserDataAccessContainerResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedDatabaseUserDataAccessContainer:getManagedDatabaseUserDataAccessContainer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabaseUserDataAccessContainer.
type GetManagedDatabaseUserDataAccessContainerArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name *string `pulumi:"name"`
	// The name of the user whose details are to be viewed.
	UserName string `pulumi:"userName"`
}

// A collection of values returned by getManagedDatabaseUserDataAccessContainer.
type GetManagedDatabaseUserDataAccessContainerResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// An array of container resources.
	Items             []GetManagedDatabaseUserDataAccessContainerItem `pulumi:"items"`
	ManagedDatabaseId string                                          `pulumi:"managedDatabaseId"`
	// The name of the container included in the attribute.
	Name     *string `pulumi:"name"`
	UserName string  `pulumi:"userName"`
}

func GetManagedDatabaseUserDataAccessContainerOutput(ctx *pulumi.Context, args GetManagedDatabaseUserDataAccessContainerOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabaseUserDataAccessContainerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedDatabaseUserDataAccessContainerResultOutput, error) {
			args := v.(GetManagedDatabaseUserDataAccessContainerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DatabaseManagement/getManagedDatabaseUserDataAccessContainer:getManagedDatabaseUserDataAccessContainer", args, GetManagedDatabaseUserDataAccessContainerResultOutput{}, options).(GetManagedDatabaseUserDataAccessContainerResultOutput), nil
		}).(GetManagedDatabaseUserDataAccessContainerResultOutput)
}

// A collection of arguments for invoking getManagedDatabaseUserDataAccessContainer.
type GetManagedDatabaseUserDataAccessContainerOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId pulumi.StringInput `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the user whose details are to be viewed.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetManagedDatabaseUserDataAccessContainerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseUserDataAccessContainerArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabaseUserDataAccessContainer.
type GetManagedDatabaseUserDataAccessContainerResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseUserDataAccessContainerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseUserDataAccessContainerResult)(nil)).Elem()
}

func (o GetManagedDatabaseUserDataAccessContainerResultOutput) ToGetManagedDatabaseUserDataAccessContainerResultOutput() GetManagedDatabaseUserDataAccessContainerResultOutput {
	return o
}

func (o GetManagedDatabaseUserDataAccessContainerResultOutput) ToGetManagedDatabaseUserDataAccessContainerResultOutputWithContext(ctx context.Context) GetManagedDatabaseUserDataAccessContainerResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabaseUserDataAccessContainerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserDataAccessContainerResult) string { return v.Id }).(pulumi.StringOutput)
}

// An array of container resources.
func (o GetManagedDatabaseUserDataAccessContainerResultOutput) Items() GetManagedDatabaseUserDataAccessContainerItemArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserDataAccessContainerResult) []GetManagedDatabaseUserDataAccessContainerItem {
		return v.Items
	}).(GetManagedDatabaseUserDataAccessContainerItemArrayOutput)
}

func (o GetManagedDatabaseUserDataAccessContainerResultOutput) ManagedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserDataAccessContainerResult) string { return v.ManagedDatabaseId }).(pulumi.StringOutput)
}

// The name of the container included in the attribute.
func (o GetManagedDatabaseUserDataAccessContainerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserDataAccessContainerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetManagedDatabaseUserDataAccessContainerResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserDataAccessContainerResult) string { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabaseUserDataAccessContainerResultOutput{})
}
