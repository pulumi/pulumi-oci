// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Managed Database User Object Privilege resource in Oracle Cloud Infrastructure Database Management service.
//
// Gets the list of object privileges granted to a specific user.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.GetManagedDatabaseUserObjectPrivilege(ctx, &databasemanagement.GetManagedDatabaseUserObjectPrivilegeArgs{
//				ManagedDatabaseId: oci_database_management_managed_database.Test_managed_database.Id,
//				UserName:          oci_identity_user.Test_user.Name,
//				Name:              pulumi.StringRef(_var.Managed_database_user_object_privilege_name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetManagedDatabaseUserObjectPrivilege(ctx *pulumi.Context, args *GetManagedDatabaseUserObjectPrivilegeArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabaseUserObjectPrivilegeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedDatabaseUserObjectPrivilegeResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedDatabaseUserObjectPrivilege:getManagedDatabaseUserObjectPrivilege", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabaseUserObjectPrivilege.
type GetManagedDatabaseUserObjectPrivilegeArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name *string `pulumi:"name"`
	// The name of the user whose details are to be viewed.
	UserName string `pulumi:"userName"`
}

// A collection of values returned by getManagedDatabaseUserObjectPrivilege.
type GetManagedDatabaseUserObjectPrivilegeResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// An array of object privileges.
	Items             []GetManagedDatabaseUserObjectPrivilegeItem `pulumi:"items"`
	ManagedDatabaseId string                                      `pulumi:"managedDatabaseId"`
	// The name of the privilege on the object.
	Name     *string `pulumi:"name"`
	UserName string  `pulumi:"userName"`
}

func GetManagedDatabaseUserObjectPrivilegeOutput(ctx *pulumi.Context, args GetManagedDatabaseUserObjectPrivilegeOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabaseUserObjectPrivilegeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedDatabaseUserObjectPrivilegeResult, error) {
			args := v.(GetManagedDatabaseUserObjectPrivilegeArgs)
			r, err := GetManagedDatabaseUserObjectPrivilege(ctx, &args, opts...)
			var s GetManagedDatabaseUserObjectPrivilegeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedDatabaseUserObjectPrivilegeResultOutput)
}

// A collection of arguments for invoking getManagedDatabaseUserObjectPrivilege.
type GetManagedDatabaseUserObjectPrivilegeOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId pulumi.StringInput `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the user whose details are to be viewed.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetManagedDatabaseUserObjectPrivilegeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseUserObjectPrivilegeArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabaseUserObjectPrivilege.
type GetManagedDatabaseUserObjectPrivilegeResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseUserObjectPrivilegeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseUserObjectPrivilegeResult)(nil)).Elem()
}

func (o GetManagedDatabaseUserObjectPrivilegeResultOutput) ToGetManagedDatabaseUserObjectPrivilegeResultOutput() GetManagedDatabaseUserObjectPrivilegeResultOutput {
	return o
}

func (o GetManagedDatabaseUserObjectPrivilegeResultOutput) ToGetManagedDatabaseUserObjectPrivilegeResultOutputWithContext(ctx context.Context) GetManagedDatabaseUserObjectPrivilegeResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabaseUserObjectPrivilegeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserObjectPrivilegeResult) string { return v.Id }).(pulumi.StringOutput)
}

// An array of object privileges.
func (o GetManagedDatabaseUserObjectPrivilegeResultOutput) Items() GetManagedDatabaseUserObjectPrivilegeItemArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserObjectPrivilegeResult) []GetManagedDatabaseUserObjectPrivilegeItem {
		return v.Items
	}).(GetManagedDatabaseUserObjectPrivilegeItemArrayOutput)
}

func (o GetManagedDatabaseUserObjectPrivilegeResultOutput) ManagedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserObjectPrivilegeResult) string { return v.ManagedDatabaseId }).(pulumi.StringOutput)
}

// The name of the privilege on the object.
func (o GetManagedDatabaseUserObjectPrivilegeResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserObjectPrivilegeResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetManagedDatabaseUserObjectPrivilegeResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserObjectPrivilegeResult) string { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabaseUserObjectPrivilegeResultOutput{})
}
