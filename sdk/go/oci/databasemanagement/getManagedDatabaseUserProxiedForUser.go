// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Managed Database User Proxied For User resource in Oracle Cloud Infrastructure Database Management service.
//
// Gets the list of users on whose behalf the current user acts as proxy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.GetManagedDatabaseUserProxiedForUser(ctx, &databasemanagement.GetManagedDatabaseUserProxiedForUserArgs{
//				ManagedDatabaseId: testManagedDatabase.Id,
//				UserName:          testUser.Name,
//				Name:              pulumi.StringRef(managedDatabaseUserProxiedForUserName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedDatabaseUserProxiedForUser(ctx *pulumi.Context, args *GetManagedDatabaseUserProxiedForUserArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabaseUserProxiedForUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedDatabaseUserProxiedForUserResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedDatabaseUserProxiedForUser:getManagedDatabaseUserProxiedForUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabaseUserProxiedForUser.
type GetManagedDatabaseUserProxiedForUserArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name *string `pulumi:"name"`
	// The name of the user whose details are to be viewed.
	UserName string `pulumi:"userName"`
}

// A collection of values returned by getManagedDatabaseUserProxiedForUser.
type GetManagedDatabaseUserProxiedForUserResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// An array of user resources.
	Items             []GetManagedDatabaseUserProxiedForUserItem `pulumi:"items"`
	ManagedDatabaseId string                                     `pulumi:"managedDatabaseId"`
	// The name of a proxy user or the name of the client user.
	Name     *string `pulumi:"name"`
	UserName string  `pulumi:"userName"`
}

func GetManagedDatabaseUserProxiedForUserOutput(ctx *pulumi.Context, args GetManagedDatabaseUserProxiedForUserOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabaseUserProxiedForUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedDatabaseUserProxiedForUserResult, error) {
			args := v.(GetManagedDatabaseUserProxiedForUserArgs)
			r, err := GetManagedDatabaseUserProxiedForUser(ctx, &args, opts...)
			var s GetManagedDatabaseUserProxiedForUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedDatabaseUserProxiedForUserResultOutput)
}

// A collection of arguments for invoking getManagedDatabaseUserProxiedForUser.
type GetManagedDatabaseUserProxiedForUserOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId pulumi.StringInput `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the user whose details are to be viewed.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetManagedDatabaseUserProxiedForUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseUserProxiedForUserArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabaseUserProxiedForUser.
type GetManagedDatabaseUserProxiedForUserResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseUserProxiedForUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseUserProxiedForUserResult)(nil)).Elem()
}

func (o GetManagedDatabaseUserProxiedForUserResultOutput) ToGetManagedDatabaseUserProxiedForUserResultOutput() GetManagedDatabaseUserProxiedForUserResultOutput {
	return o
}

func (o GetManagedDatabaseUserProxiedForUserResultOutput) ToGetManagedDatabaseUserProxiedForUserResultOutputWithContext(ctx context.Context) GetManagedDatabaseUserProxiedForUserResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabaseUserProxiedForUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserProxiedForUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// An array of user resources.
func (o GetManagedDatabaseUserProxiedForUserResultOutput) Items() GetManagedDatabaseUserProxiedForUserItemArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserProxiedForUserResult) []GetManagedDatabaseUserProxiedForUserItem {
		return v.Items
	}).(GetManagedDatabaseUserProxiedForUserItemArrayOutput)
}

func (o GetManagedDatabaseUserProxiedForUserResultOutput) ManagedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserProxiedForUserResult) string { return v.ManagedDatabaseId }).(pulumi.StringOutput)
}

// The name of a proxy user or the name of the client user.
func (o GetManagedDatabaseUserProxiedForUserResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserProxiedForUserResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetManagedDatabaseUserProxiedForUserResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUserProxiedForUserResult) string { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabaseUserProxiedForUserResultOutput{})
}
