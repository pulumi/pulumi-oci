// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Database Users in Oracle Cloud Infrastructure Database Management service.
//
// Gets the list of users for the specified managedDatabaseId.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/databasemanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databasemanagement.GetManagedDatabaseUsers(ctx, &databasemanagement.GetManagedDatabaseUsersArgs{
//				ManagedDatabaseId:    testManagedDatabase.Id,
//				Name:                 pulumi.StringRef(managedDatabaseUserName),
//				OpcNamedCredentialId: pulumi.StringRef(managedDatabaseUserOpcNamedCredentialId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedDatabaseUsers(ctx *pulumi.Context, args *GetManagedDatabaseUsersArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabaseUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedDatabaseUsersResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedDatabaseUsers:getManagedDatabaseUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabaseUsers.
type GetManagedDatabaseUsersArgs struct {
	Filters []GetManagedDatabaseUsersFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name *string `pulumi:"name"`
	// The OCID of the Named Credential.
	OpcNamedCredentialId *string `pulumi:"opcNamedCredentialId"`
}

// A collection of values returned by getManagedDatabaseUsers.
type GetManagedDatabaseUsersResult struct {
	Filters []GetManagedDatabaseUsersFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// The name of the User.
	Name                 *string `pulumi:"name"`
	OpcNamedCredentialId *string `pulumi:"opcNamedCredentialId"`
	// The list of user_collection.
	UserCollections []GetManagedDatabaseUsersUserCollection `pulumi:"userCollections"`
}

func GetManagedDatabaseUsersOutput(ctx *pulumi.Context, args GetManagedDatabaseUsersOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabaseUsersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedDatabaseUsersResultOutput, error) {
			args := v.(GetManagedDatabaseUsersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DatabaseManagement/getManagedDatabaseUsers:getManagedDatabaseUsers", args, GetManagedDatabaseUsersResultOutput{}, options).(GetManagedDatabaseUsersResultOutput), nil
		}).(GetManagedDatabaseUsersResultOutput)
}

// A collection of arguments for invoking getManagedDatabaseUsers.
type GetManagedDatabaseUsersOutputArgs struct {
	Filters GetManagedDatabaseUsersFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId pulumi.StringInput `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The OCID of the Named Credential.
	OpcNamedCredentialId pulumi.StringPtrInput `pulumi:"opcNamedCredentialId"`
}

func (GetManagedDatabaseUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseUsersArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabaseUsers.
type GetManagedDatabaseUsersResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseUsersResult)(nil)).Elem()
}

func (o GetManagedDatabaseUsersResultOutput) ToGetManagedDatabaseUsersResultOutput() GetManagedDatabaseUsersResultOutput {
	return o
}

func (o GetManagedDatabaseUsersResultOutput) ToGetManagedDatabaseUsersResultOutputWithContext(ctx context.Context) GetManagedDatabaseUsersResultOutput {
	return o
}

func (o GetManagedDatabaseUsersResultOutput) Filters() GetManagedDatabaseUsersFilterArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseUsersResult) []GetManagedDatabaseUsersFilter { return v.Filters }).(GetManagedDatabaseUsersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabaseUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedDatabaseUsersResultOutput) ManagedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseUsersResult) string { return v.ManagedDatabaseId }).(pulumi.StringOutput)
}

// The name of the User.
func (o GetManagedDatabaseUsersResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseUsersResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetManagedDatabaseUsersResultOutput) OpcNamedCredentialId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseUsersResult) *string { return v.OpcNamedCredentialId }).(pulumi.StringPtrOutput)
}

// The list of user_collection.
func (o GetManagedDatabaseUsersResultOutput) UserCollections() GetManagedDatabaseUsersUserCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseUsersResult) []GetManagedDatabaseUsersUserCollection {
		return v.UserCollections
	}).(GetManagedDatabaseUsersUserCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabaseUsersResultOutput{})
}
