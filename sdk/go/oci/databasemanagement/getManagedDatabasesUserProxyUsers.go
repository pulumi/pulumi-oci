// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Databases User Proxy Users in Oracle Cloud Infrastructure Database Management service.
//
// Gets the list of proxy users for the current user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseManagement"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := DatabaseManagement.GetManagedDatabasesUserProxyUsers(ctx, &databasemanagement.GetManagedDatabasesUserProxyUsersArgs{
// 			ManagedDatabaseId: oci_database_management_managed_database.Test_managed_database.Id,
// 			UserName:          oci_identity_user.Test_user.Name,
// 			Name:              pulumi.StringRef(_var.Managed_databases_user_proxy_user_name),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetManagedDatabasesUserProxyUsers(ctx *pulumi.Context, args *GetManagedDatabasesUserProxyUsersArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabasesUserProxyUsersResult, error) {
	var rv GetManagedDatabasesUserProxyUsersResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedDatabasesUserProxyUsers:getManagedDatabasesUserProxyUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabasesUserProxyUsers.
type GetManagedDatabasesUserProxyUsersArgs struct {
	Filters []GetManagedDatabasesUserProxyUsersFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name *string `pulumi:"name"`
	// The name of the user whose details are to be viewed.
	UserName string `pulumi:"userName"`
}

// A collection of values returned by getManagedDatabasesUserProxyUsers.
type GetManagedDatabasesUserProxyUsersResult struct {
	Filters []GetManagedDatabasesUserProxyUsersFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	ManagedDatabaseId string `pulumi:"managedDatabaseId"`
	// The name of a proxy user or the name of the client user.
	Name *string `pulumi:"name"`
	// The list of proxy_user_collection.
	ProxyUserCollections []GetManagedDatabasesUserProxyUsersProxyUserCollection `pulumi:"proxyUserCollections"`
	UserName             string                                                 `pulumi:"userName"`
}

func GetManagedDatabasesUserProxyUsersOutput(ctx *pulumi.Context, args GetManagedDatabasesUserProxyUsersOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabasesUserProxyUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedDatabasesUserProxyUsersResult, error) {
			args := v.(GetManagedDatabasesUserProxyUsersArgs)
			r, err := GetManagedDatabasesUserProxyUsers(ctx, &args, opts...)
			var s GetManagedDatabasesUserProxyUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedDatabasesUserProxyUsersResultOutput)
}

// A collection of arguments for invoking getManagedDatabasesUserProxyUsers.
type GetManagedDatabasesUserProxyUsersOutputArgs struct {
	Filters GetManagedDatabasesUserProxyUsersFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
	ManagedDatabaseId pulumi.StringInput `pulumi:"managedDatabaseId"`
	// A filter to return only resources that match the entire name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the user whose details are to be viewed.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetManagedDatabasesUserProxyUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabasesUserProxyUsersArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabasesUserProxyUsers.
type GetManagedDatabasesUserProxyUsersResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabasesUserProxyUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabasesUserProxyUsersResult)(nil)).Elem()
}

func (o GetManagedDatabasesUserProxyUsersResultOutput) ToGetManagedDatabasesUserProxyUsersResultOutput() GetManagedDatabasesUserProxyUsersResultOutput {
	return o
}

func (o GetManagedDatabasesUserProxyUsersResultOutput) ToGetManagedDatabasesUserProxyUsersResultOutputWithContext(ctx context.Context) GetManagedDatabasesUserProxyUsersResultOutput {
	return o
}

func (o GetManagedDatabasesUserProxyUsersResultOutput) Filters() GetManagedDatabasesUserProxyUsersFilterArrayOutput {
	return o.ApplyT(func(v GetManagedDatabasesUserProxyUsersResult) []GetManagedDatabasesUserProxyUsersFilter {
		return v.Filters
	}).(GetManagedDatabasesUserProxyUsersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabasesUserProxyUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasesUserProxyUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedDatabasesUserProxyUsersResultOutput) ManagedDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasesUserProxyUsersResult) string { return v.ManagedDatabaseId }).(pulumi.StringOutput)
}

// The name of a proxy user or the name of the client user.
func (o GetManagedDatabasesUserProxyUsersResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabasesUserProxyUsersResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of proxy_user_collection.
func (o GetManagedDatabasesUserProxyUsersResultOutput) ProxyUserCollections() GetManagedDatabasesUserProxyUsersProxyUserCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedDatabasesUserProxyUsersResult) []GetManagedDatabasesUserProxyUsersProxyUserCollection {
		return v.ProxyUserCollections
	}).(GetManagedDatabasesUserProxyUsersProxyUserCollectionArrayOutput)
}

func (o GetManagedDatabasesUserProxyUsersResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasesUserProxyUsersResult) string { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabasesUserProxyUsersResultOutput{})
}
