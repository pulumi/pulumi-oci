// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides details about a specific Managed My Sql Database resource in Oracle Cloud Infrastructure Database Management service.
//
// Retrieves General Information for given MySQL Instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseManagement.GetManagedMySqlDatabase(ctx, &databasemanagement.GetManagedMySqlDatabaseArgs{
//				ManagedMySqlDatabaseId: oci_database_management_managed_my_sql_database.Test_managed_my_sql_database.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedMySqlDatabase(ctx *pulumi.Context, args *GetManagedMySqlDatabaseArgs, opts ...pulumi.InvokeOption) (*GetManagedMySqlDatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedMySqlDatabaseResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedMySqlDatabase:getManagedMySqlDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedMySqlDatabase.
type GetManagedMySqlDatabaseArgs struct {
	// The OCID of ManagedMySqlDatabase.
	ManagedMySqlDatabaseId string `pulumi:"managedMySqlDatabaseId"`
}

// A collection of values returned by getManagedMySqlDatabase.
type GetManagedMySqlDatabaseResult struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// MySQL Database Name
	DbName string `pulumi:"dbName"`
	// MySQL Database Version
	DbVersion string `pulumi:"dbVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id                     string `pulumi:"id"`
	ManagedMySqlDatabaseId string `pulumi:"managedMySqlDatabaseId"`
	// The name of the Managed MySQL Database.
	Name string `pulumi:"name"`
	// The date and time the Managed Database was created.
	TimeCreated string `pulumi:"timeCreated"`
}

func GetManagedMySqlDatabaseOutput(ctx *pulumi.Context, args GetManagedMySqlDatabaseOutputArgs, opts ...pulumi.InvokeOption) GetManagedMySqlDatabaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedMySqlDatabaseResult, error) {
			args := v.(GetManagedMySqlDatabaseArgs)
			r, err := GetManagedMySqlDatabase(ctx, &args, opts...)
			var s GetManagedMySqlDatabaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedMySqlDatabaseResultOutput)
}

// A collection of arguments for invoking getManagedMySqlDatabase.
type GetManagedMySqlDatabaseOutputArgs struct {
	// The OCID of ManagedMySqlDatabase.
	ManagedMySqlDatabaseId pulumi.StringInput `pulumi:"managedMySqlDatabaseId"`
}

func (GetManagedMySqlDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedMySqlDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getManagedMySqlDatabase.
type GetManagedMySqlDatabaseResultOutput struct{ *pulumi.OutputState }

func (GetManagedMySqlDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedMySqlDatabaseResult)(nil)).Elem()
}

func (o GetManagedMySqlDatabaseResultOutput) ToGetManagedMySqlDatabaseResultOutput() GetManagedMySqlDatabaseResultOutput {
	return o
}

func (o GetManagedMySqlDatabaseResultOutput) ToGetManagedMySqlDatabaseResultOutputWithContext(ctx context.Context) GetManagedMySqlDatabaseResultOutput {
	return o
}

func (o GetManagedMySqlDatabaseResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetManagedMySqlDatabaseResult] {
	return pulumix.Output[GetManagedMySqlDatabaseResult]{
		OutputState: o.OutputState,
	}
}

// The OCID of the compartment.
func (o GetManagedMySqlDatabaseResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// MySQL Database Name
func (o GetManagedMySqlDatabaseResultOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseResult) string { return v.DbName }).(pulumi.StringOutput)
}

// MySQL Database Version
func (o GetManagedMySqlDatabaseResultOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseResult) string { return v.DbVersion }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedMySqlDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedMySqlDatabaseResultOutput) ManagedMySqlDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseResult) string { return v.ManagedMySqlDatabaseId }).(pulumi.StringOutput)
}

// The name of the Managed MySQL Database.
func (o GetManagedMySqlDatabaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseResult) string { return v.Name }).(pulumi.StringOutput)
}

// The date and time the Managed Database was created.
func (o GetManagedMySqlDatabaseResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedMySqlDatabaseResultOutput{})
}
