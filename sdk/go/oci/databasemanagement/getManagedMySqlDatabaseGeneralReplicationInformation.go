// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Managed My Sql Database General Replication Information resource in Oracle Cloud Infrastructure Database Management service.
//
// Retrieves general information regarding the replication of a specific MySQL server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/databasemanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databasemanagement.GetManagedMySqlDatabaseGeneralReplicationInformation(ctx, &databasemanagement.GetManagedMySqlDatabaseGeneralReplicationInformationArgs{
//				ManagedMySqlDatabaseId: testManagedMySqlDatabase.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedMySqlDatabaseGeneralReplicationInformation(ctx *pulumi.Context, args *GetManagedMySqlDatabaseGeneralReplicationInformationArgs, opts ...pulumi.InvokeOption) (*GetManagedMySqlDatabaseGeneralReplicationInformationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedMySqlDatabaseGeneralReplicationInformationResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedMySqlDatabaseGeneralReplicationInformation:getManagedMySqlDatabaseGeneralReplicationInformation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedMySqlDatabaseGeneralReplicationInformation.
type GetManagedMySqlDatabaseGeneralReplicationInformationArgs struct {
	// The OCID of the Managed MySQL Database.
	ManagedMySqlDatabaseId string `pulumi:"managedMySqlDatabaseId"`
}

// A collection of values returned by getManagedMySqlDatabaseGeneralReplicationInformation.
type GetManagedMySqlDatabaseGeneralReplicationInformationResult struct {
	// A summary of the current status of apply operations.
	ApplyStatusSummary string `pulumi:"applyStatusSummary"`
	// The binary logging format used by this server.
	BinaryLogFormat string `pulumi:"binaryLogFormat"`
	// The status of binary logging on this server.
	BinaryLogging string `pulumi:"binaryLogging"`
	// The set of global transaction identifiers for transactions that have been executed on this source server.
	ExecutedGtidSet string `pulumi:"executedGtidSet"`
	// A summary of the current status of fetch operations.
	FetchStatusSummary string `pulumi:"fetchStatusSummary"`
	// The Global Transaction Identifier (GTID) mode of this server.
	GtidMode string `pulumi:"gtidMode"`
	// The state of this server as a group replication member.
	HighAvailabilityMemberState string `pulumi:"highAvailabilityMemberState"`
	// This server's host name.
	HostName string `pulumi:"hostName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The number of sources this server is replicating from.
	InboundReplicationsCount int `pulumi:"inboundReplicationsCount"`
	// The type of the instance for example, Source, Replica, Primary Group Member, and Secondary Group Member. If the instance is replicating from one or more sources and has one or more replicas, which means, it belongs to a replication chain, the instance type can be Replica/Source.
	InstanceType string `pulumi:"instanceType"`
	// Specifies if high availability is enabled on this server.
	IsHighAvailabilityEnabled bool   `pulumi:"isHighAvailabilityEnabled"`
	ManagedMySqlDatabaseId    string `pulumi:"managedMySqlDatabaseId"`
	// The number of replicas replicating from this server.
	OutboundReplicationsCount int `pulumi:"outboundReplicationsCount"`
	// The number of the port on which the server listens for TCP/IP connections.
	Port int `pulumi:"port"`
	// If the value is ON, the instance is configured as read_only. If the value is SUPER, the instance is configured as super_read_only. If the value is OFF, the instance is neither readOnly nor super_read_only.
	ReadOnly string `pulumi:"readOnly"`
	// The number of seconds the replica is behind the source. When multiple sources are involved, this is the maximum value across all sources.
	SecondsBehindSourceMax string `pulumi:"secondsBehindSourceMax"`
	// This server's ID.
	ServerId string `pulumi:"serverId"`
	// This server's Universally Unique Identifier (UUID).
	ServerUuid string `pulumi:"serverUuid"`
}

func GetManagedMySqlDatabaseGeneralReplicationInformationOutput(ctx *pulumi.Context, args GetManagedMySqlDatabaseGeneralReplicationInformationOutputArgs, opts ...pulumi.InvokeOption) GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput, error) {
			args := v.(GetManagedMySqlDatabaseGeneralReplicationInformationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DatabaseManagement/getManagedMySqlDatabaseGeneralReplicationInformation:getManagedMySqlDatabaseGeneralReplicationInformation", args, GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput{}, options).(GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput), nil
		}).(GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput)
}

// A collection of arguments for invoking getManagedMySqlDatabaseGeneralReplicationInformation.
type GetManagedMySqlDatabaseGeneralReplicationInformationOutputArgs struct {
	// The OCID of the Managed MySQL Database.
	ManagedMySqlDatabaseId pulumi.StringInput `pulumi:"managedMySqlDatabaseId"`
}

func (GetManagedMySqlDatabaseGeneralReplicationInformationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedMySqlDatabaseGeneralReplicationInformationArgs)(nil)).Elem()
}

// A collection of values returned by getManagedMySqlDatabaseGeneralReplicationInformation.
type GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput struct{ *pulumi.OutputState }

func (GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedMySqlDatabaseGeneralReplicationInformationResult)(nil)).Elem()
}

func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) ToGetManagedMySqlDatabaseGeneralReplicationInformationResultOutput() GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput {
	return o
}

func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) ToGetManagedMySqlDatabaseGeneralReplicationInformationResultOutputWithContext(ctx context.Context) GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput {
	return o
}

// A summary of the current status of apply operations.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) ApplyStatusSummary() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.ApplyStatusSummary }).(pulumi.StringOutput)
}

// The binary logging format used by this server.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) BinaryLogFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.BinaryLogFormat }).(pulumi.StringOutput)
}

// The status of binary logging on this server.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) BinaryLogging() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.BinaryLogging }).(pulumi.StringOutput)
}

// The set of global transaction identifiers for transactions that have been executed on this source server.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) ExecutedGtidSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.ExecutedGtidSet }).(pulumi.StringOutput)
}

// A summary of the current status of fetch operations.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) FetchStatusSummary() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.FetchStatusSummary }).(pulumi.StringOutput)
}

// The Global Transaction Identifier (GTID) mode of this server.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) GtidMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.GtidMode }).(pulumi.StringOutput)
}

// The state of this server as a group replication member.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) HighAvailabilityMemberState() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string {
		return v.HighAvailabilityMemberState
	}).(pulumi.StringOutput)
}

// This server's host name.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.HostName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The number of sources this server is replicating from.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) InboundReplicationsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) int {
		return v.InboundReplicationsCount
	}).(pulumi.IntOutput)
}

// The type of the instance for example, Source, Replica, Primary Group Member, and Secondary Group Member. If the instance is replicating from one or more sources and has one or more replicas, which means, it belongs to a replication chain, the instance type can be Replica/Source.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Specifies if high availability is enabled on this server.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) IsHighAvailabilityEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) bool {
		return v.IsHighAvailabilityEnabled
	}).(pulumi.BoolOutput)
}

func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) ManagedMySqlDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string {
		return v.ManagedMySqlDatabaseId
	}).(pulumi.StringOutput)
}

// The number of replicas replicating from this server.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) OutboundReplicationsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) int {
		return v.OutboundReplicationsCount
	}).(pulumi.IntOutput)
}

// The number of the port on which the server listens for TCP/IP connections.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) int { return v.Port }).(pulumi.IntOutput)
}

// If the value is ON, the instance is configured as read_only. If the value is SUPER, the instance is configured as super_read_only. If the value is OFF, the instance is neither readOnly nor super_read_only.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) ReadOnly() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.ReadOnly }).(pulumi.StringOutput)
}

// The number of seconds the replica is behind the source. When multiple sources are involved, this is the maximum value across all sources.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) SecondsBehindSourceMax() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string {
		return v.SecondsBehindSourceMax
	}).(pulumi.StringOutput)
}

// This server's ID.
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.ServerId }).(pulumi.StringOutput)
}

// This server's Universally Unique Identifier (UUID).
func (o GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput) ServerUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabaseGeneralReplicationInformationResult) string { return v.ServerUuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedMySqlDatabaseGeneralReplicationInformationResultOutput{})
}
