// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed My Sql Databases in Oracle Cloud Infrastructure Database Management service.
//
// Gets the list of Managed MySQL Databases in a specific compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/databasemanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databasemanagement.GetManagedMySqlDatabases(ctx, &databasemanagement.GetManagedMySqlDatabasesArgs{
//				CompartmentId:                  compartmentId,
//				FilterByMySqlDatabaseTypeParam: pulumi.StringRef(managedMySqlDatabaseFilterByMySqlDatabaseTypeParam),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedMySqlDatabases(ctx *pulumi.Context, args *GetManagedMySqlDatabasesArgs, opts ...pulumi.InvokeOption) (*GetManagedMySqlDatabasesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedMySqlDatabasesResult
	err := ctx.Invoke("oci:DatabaseManagement/getManagedMySqlDatabases:getManagedMySqlDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedMySqlDatabases.
type GetManagedMySqlDatabasesArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The parameter to filter by MySQL database type. Allowed values are EXTERNAL or MDS.
	FilterByMySqlDatabaseTypeParam *string                          `pulumi:"filterByMySqlDatabaseTypeParam"`
	Filters                        []GetManagedMySqlDatabasesFilter `pulumi:"filters"`
}

// A collection of values returned by getManagedMySqlDatabases.
type GetManagedMySqlDatabasesResult struct {
	// The OCID of the compartment.
	CompartmentId                  string                           `pulumi:"compartmentId"`
	FilterByMySqlDatabaseTypeParam *string                          `pulumi:"filterByMySqlDatabaseTypeParam"`
	Filters                        []GetManagedMySqlDatabasesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of managed_my_sql_database_collection.
	ManagedMySqlDatabaseCollections []GetManagedMySqlDatabasesManagedMySqlDatabaseCollection `pulumi:"managedMySqlDatabaseCollections"`
}

func GetManagedMySqlDatabasesOutput(ctx *pulumi.Context, args GetManagedMySqlDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetManagedMySqlDatabasesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedMySqlDatabasesResultOutput, error) {
			args := v.(GetManagedMySqlDatabasesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DatabaseManagement/getManagedMySqlDatabases:getManagedMySqlDatabases", args, GetManagedMySqlDatabasesResultOutput{}, options).(GetManagedMySqlDatabasesResultOutput), nil
		}).(GetManagedMySqlDatabasesResultOutput)
}

// A collection of arguments for invoking getManagedMySqlDatabases.
type GetManagedMySqlDatabasesOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The parameter to filter by MySQL database type. Allowed values are EXTERNAL or MDS.
	FilterByMySqlDatabaseTypeParam pulumi.StringPtrInput                    `pulumi:"filterByMySqlDatabaseTypeParam"`
	Filters                        GetManagedMySqlDatabasesFilterArrayInput `pulumi:"filters"`
}

func (GetManagedMySqlDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedMySqlDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getManagedMySqlDatabases.
type GetManagedMySqlDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetManagedMySqlDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedMySqlDatabasesResult)(nil)).Elem()
}

func (o GetManagedMySqlDatabasesResultOutput) ToGetManagedMySqlDatabasesResultOutput() GetManagedMySqlDatabasesResultOutput {
	return o
}

func (o GetManagedMySqlDatabasesResultOutput) ToGetManagedMySqlDatabasesResultOutputWithContext(ctx context.Context) GetManagedMySqlDatabasesResultOutput {
	return o
}

// The OCID of the compartment.
func (o GetManagedMySqlDatabasesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabasesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetManagedMySqlDatabasesResultOutput) FilterByMySqlDatabaseTypeParam() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabasesResult) *string { return v.FilterByMySqlDatabaseTypeParam }).(pulumi.StringPtrOutput)
}

func (o GetManagedMySqlDatabasesResultOutput) Filters() GetManagedMySqlDatabasesFilterArrayOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabasesResult) []GetManagedMySqlDatabasesFilter { return v.Filters }).(GetManagedMySqlDatabasesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedMySqlDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of managed_my_sql_database_collection.
func (o GetManagedMySqlDatabasesResultOutput) ManagedMySqlDatabaseCollections() GetManagedMySqlDatabasesManagedMySqlDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedMySqlDatabasesResult) []GetManagedMySqlDatabasesManagedMySqlDatabaseCollection {
		return v.ManagedMySqlDatabaseCollections
	}).(GetManagedMySqlDatabasesManagedMySqlDatabaseCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedMySqlDatabasesResultOutput{})
}
