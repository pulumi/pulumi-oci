// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Pluggabledatabase Pluggable Database Dbm Features Management resource in Oracle Cloud Infrastructure Database Management service.
//
// Enables a Database Management feature for the specified Oracle cloud pluggable database.
type PluggabledatabasePluggableDatabaseDbmFeaturesManagement struct {
	pulumi.CustomResourceState

	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnablePluggableDatabaseDbmFeature pulumi.BoolOutput `pulumi:"enablePluggableDatabaseDbmFeature"`
	// The details required to enable the specified Database Management feature.
	FeatureDetails                    PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsPtrOutput `pulumi:"featureDetails"`
	ModifyPluggableDatabaseDbmFeature pulumi.BoolPtrOutput                                                           `pulumi:"modifyPluggableDatabaseDbmFeature"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
	PluggableDatabaseId pulumi.StringOutput `pulumi:"pluggableDatabaseId"`
}

// NewPluggabledatabasePluggableDatabaseDbmFeaturesManagement registers a new resource with the given unique name, arguments, and options.
func NewPluggabledatabasePluggableDatabaseDbmFeaturesManagement(ctx *pulumi.Context,
	name string, args *PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs, opts ...pulumi.ResourceOption) (*PluggabledatabasePluggableDatabaseDbmFeaturesManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnablePluggableDatabaseDbmFeature == nil {
		return nil, errors.New("invalid value for required argument 'EnablePluggableDatabaseDbmFeature'")
	}
	if args.PluggableDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'PluggableDatabaseId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PluggabledatabasePluggableDatabaseDbmFeaturesManagement
	err := ctx.RegisterResource("oci:DatabaseManagement/pluggabledatabasePluggableDatabaseDbmFeaturesManagement:PluggabledatabasePluggableDatabaseDbmFeaturesManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPluggabledatabasePluggableDatabaseDbmFeaturesManagement gets an existing PluggabledatabasePluggableDatabaseDbmFeaturesManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPluggabledatabasePluggableDatabaseDbmFeaturesManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PluggabledatabasePluggableDatabaseDbmFeaturesManagementState, opts ...pulumi.ResourceOption) (*PluggabledatabasePluggableDatabaseDbmFeaturesManagement, error) {
	var resource PluggabledatabasePluggableDatabaseDbmFeaturesManagement
	err := ctx.ReadResource("oci:DatabaseManagement/pluggabledatabasePluggableDatabaseDbmFeaturesManagement:PluggabledatabasePluggableDatabaseDbmFeaturesManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PluggabledatabasePluggableDatabaseDbmFeaturesManagement resources.
type pluggabledatabasePluggableDatabaseDbmFeaturesManagementState struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnablePluggableDatabaseDbmFeature *bool `pulumi:"enablePluggableDatabaseDbmFeature"`
	// The details required to enable the specified Database Management feature.
	FeatureDetails                    *PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetails `pulumi:"featureDetails"`
	ModifyPluggableDatabaseDbmFeature *bool                                                                  `pulumi:"modifyPluggableDatabaseDbmFeature"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
	PluggableDatabaseId *string `pulumi:"pluggableDatabaseId"`
}

type PluggabledatabasePluggableDatabaseDbmFeaturesManagementState struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnablePluggableDatabaseDbmFeature pulumi.BoolPtrInput
	// The details required to enable the specified Database Management feature.
	FeatureDetails                    PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsPtrInput
	ModifyPluggableDatabaseDbmFeature pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
	PluggableDatabaseId pulumi.StringPtrInput
}

func (PluggabledatabasePluggableDatabaseDbmFeaturesManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*pluggabledatabasePluggableDatabaseDbmFeaturesManagementState)(nil)).Elem()
}

type pluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnablePluggableDatabaseDbmFeature bool `pulumi:"enablePluggableDatabaseDbmFeature"`
	// The details required to enable the specified Database Management feature.
	FeatureDetails                    *PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetails `pulumi:"featureDetails"`
	ModifyPluggableDatabaseDbmFeature *bool                                                                  `pulumi:"modifyPluggableDatabaseDbmFeature"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
	PluggableDatabaseId string `pulumi:"pluggableDatabaseId"`
}

// The set of arguments for constructing a PluggabledatabasePluggableDatabaseDbmFeaturesManagement resource.
type PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs struct {
	// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	EnablePluggableDatabaseDbmFeature pulumi.BoolInput
	// The details required to enable the specified Database Management feature.
	FeatureDetails                    PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsPtrInput
	ModifyPluggableDatabaseDbmFeature pulumi.BoolPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
	PluggableDatabaseId pulumi.StringInput
}

func (PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs)(nil)).Elem()
}

type PluggabledatabasePluggableDatabaseDbmFeaturesManagementInput interface {
	pulumi.Input

	ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput() PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput
	ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementOutputWithContext(ctx context.Context) PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput
}

func (*PluggabledatabasePluggableDatabaseDbmFeaturesManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**PluggabledatabasePluggableDatabaseDbmFeaturesManagement)(nil)).Elem()
}

func (i *PluggabledatabasePluggableDatabaseDbmFeaturesManagement) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput() PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput {
	return i.ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementOutputWithContext(context.Background())
}

func (i *PluggabledatabasePluggableDatabaseDbmFeaturesManagement) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementOutputWithContext(ctx context.Context) PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput)
}

// PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayInput is an input type that accepts PluggabledatabasePluggableDatabaseDbmFeaturesManagementArray and PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput values.
// You can construct a concrete instance of `PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayInput` via:
//
//	PluggabledatabasePluggableDatabaseDbmFeaturesManagementArray{ PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs{...} }
type PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayInput interface {
	pulumi.Input

	ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput() PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput
	ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutputWithContext(context.Context) PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput
}

type PluggabledatabasePluggableDatabaseDbmFeaturesManagementArray []PluggabledatabasePluggableDatabaseDbmFeaturesManagementInput

func (PluggabledatabasePluggableDatabaseDbmFeaturesManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PluggabledatabasePluggableDatabaseDbmFeaturesManagement)(nil)).Elem()
}

func (i PluggabledatabasePluggableDatabaseDbmFeaturesManagementArray) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput() PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput {
	return i.ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutputWithContext(context.Background())
}

func (i PluggabledatabasePluggableDatabaseDbmFeaturesManagementArray) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutputWithContext(ctx context.Context) PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput)
}

// PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapInput is an input type that accepts PluggabledatabasePluggableDatabaseDbmFeaturesManagementMap and PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput values.
// You can construct a concrete instance of `PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapInput` via:
//
//	PluggabledatabasePluggableDatabaseDbmFeaturesManagementMap{ "key": PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs{...} }
type PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapInput interface {
	pulumi.Input

	ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput() PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput
	ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutputWithContext(context.Context) PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput
}

type PluggabledatabasePluggableDatabaseDbmFeaturesManagementMap map[string]PluggabledatabasePluggableDatabaseDbmFeaturesManagementInput

func (PluggabledatabasePluggableDatabaseDbmFeaturesManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PluggabledatabasePluggableDatabaseDbmFeaturesManagement)(nil)).Elem()
}

func (i PluggabledatabasePluggableDatabaseDbmFeaturesManagementMap) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput() PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput {
	return i.ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutputWithContext(context.Background())
}

func (i PluggabledatabasePluggableDatabaseDbmFeaturesManagementMap) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutputWithContext(ctx context.Context) PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput)
}

type PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput struct{ *pulumi.OutputState }

func (PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PluggabledatabasePluggableDatabaseDbmFeaturesManagement)(nil)).Elem()
}

func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput() PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput {
	return o
}

func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementOutputWithContext(ctx context.Context) PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput {
	return o
}

// (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput) EnablePluggableDatabaseDbmFeature() pulumi.BoolOutput {
	return o.ApplyT(func(v *PluggabledatabasePluggableDatabaseDbmFeaturesManagement) pulumi.BoolOutput {
		return v.EnablePluggableDatabaseDbmFeature
	}).(pulumi.BoolOutput)
}

// The details required to enable the specified Database Management feature.
func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput) FeatureDetails() PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsPtrOutput {
	return o.ApplyT(func(v *PluggabledatabasePluggableDatabaseDbmFeaturesManagement) PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsPtrOutput {
		return v.FeatureDetails
	}).(PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsPtrOutput)
}

func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput) ModifyPluggableDatabaseDbmFeature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PluggabledatabasePluggableDatabaseDbmFeaturesManagement) pulumi.BoolPtrOutput {
		return v.ModifyPluggableDatabaseDbmFeature
	}).(pulumi.BoolPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput) PluggableDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *PluggabledatabasePluggableDatabaseDbmFeaturesManagement) pulumi.StringOutput {
		return v.PluggableDatabaseId
	}).(pulumi.StringOutput)
}

type PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput struct{ *pulumi.OutputState }

func (PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PluggabledatabasePluggableDatabaseDbmFeaturesManagement)(nil)).Elem()
}

func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput() PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput {
	return o
}

func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutputWithContext(ctx context.Context) PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput {
	return o
}

func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput) Index(i pulumi.IntInput) PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PluggabledatabasePluggableDatabaseDbmFeaturesManagement {
		return vs[0].([]*PluggabledatabasePluggableDatabaseDbmFeaturesManagement)[vs[1].(int)]
	}).(PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput)
}

type PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput struct{ *pulumi.OutputState }

func (PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PluggabledatabasePluggableDatabaseDbmFeaturesManagement)(nil)).Elem()
}

func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput() PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput {
	return o
}

func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput) ToPluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutputWithContext(ctx context.Context) PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput {
	return o
}

func (o PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput) MapIndex(k pulumi.StringInput) PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PluggabledatabasePluggableDatabaseDbmFeaturesManagement {
		return vs[0].(map[string]*PluggabledatabasePluggableDatabaseDbmFeaturesManagement)[vs[1].(string)]
	}).(PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PluggabledatabasePluggableDatabaseDbmFeaturesManagementInput)(nil)).Elem(), &PluggabledatabasePluggableDatabaseDbmFeaturesManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayInput)(nil)).Elem(), PluggabledatabasePluggableDatabaseDbmFeaturesManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapInput)(nil)).Elem(), PluggabledatabasePluggableDatabaseDbmFeaturesManagementMap{})
	pulumi.RegisterOutputType(PluggabledatabasePluggableDatabaseDbmFeaturesManagementOutput{})
	pulumi.RegisterOutputType(PluggabledatabasePluggableDatabaseDbmFeaturesManagementArrayOutput{})
	pulumi.RegisterOutputType(PluggabledatabasePluggableDatabaseDbmFeaturesManagementMapOutput{})
}
