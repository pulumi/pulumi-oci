// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemigration

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Agent resource in Oracle Cloud Infrastructure Database Migration service.
//
// Modifies the ODMS Agent represented by the given ODMS Agent ID.
//
// ## Import
//
// Agents can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DatabaseMigration/agent:Agent test_agent "id"
//
// ```
type Agent struct {
	pulumi.CustomResourceState

	// The OCID of the agent
	AgentId pulumi.StringOutput `pulumi:"agentId"`
	// (Updatable) OCID of the compartment
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) ODMS Agent name
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) ODMS Agent public key.
	PublicKey pulumi.StringOutput `pulumi:"publicKey"`
	// The current state of the ODMS on-premises Agent.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) The OCID of the Stream
	StreamId pulumi.StringOutput `pulumi:"streamId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the Agent was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time of the last Agent details update. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) ODMS Agent version
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewAgent registers a new resource with the given unique name, arguments, and options.
func NewAgent(ctx *pulumi.Context,
	name string, args *AgentArgs, opts ...pulumi.ResourceOption) (*Agent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentId == nil {
		return nil, errors.New("invalid value for required argument 'AgentId'")
	}
	var resource Agent
	err := ctx.RegisterResource("oci:DatabaseMigration/agent:Agent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgent gets an existing Agent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentState, opts ...pulumi.ResourceOption) (*Agent, error) {
	var resource Agent
	err := ctx.ReadResource("oci:DatabaseMigration/agent:Agent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Agent resources.
type agentState struct {
	// The OCID of the agent
	AgentId *string `pulumi:"agentId"`
	// (Updatable) OCID of the compartment
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) ODMS Agent name
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) ODMS Agent public key.
	PublicKey *string `pulumi:"publicKey"`
	// The current state of the ODMS on-premises Agent.
	State *string `pulumi:"state"`
	// (Updatable) The OCID of the Stream
	StreamId *string `pulumi:"streamId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the Agent was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time of the last Agent details update. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) ODMS Agent version
	Version *string `pulumi:"version"`
}

type AgentState struct {
	// The OCID of the agent
	AgentId pulumi.StringPtrInput
	// (Updatable) OCID of the compartment
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) ODMS Agent name
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) ODMS Agent public key.
	PublicKey pulumi.StringPtrInput
	// The current state of the ODMS on-premises Agent.
	State pulumi.StringPtrInput
	// (Updatable) The OCID of the Stream
	StreamId pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the Agent was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time of the last Agent details update. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) ODMS Agent version
	Version pulumi.StringPtrInput
}

func (AgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentState)(nil)).Elem()
}

type agentArgs struct {
	// The OCID of the agent
	AgentId string `pulumi:"agentId"`
	// (Updatable) OCID of the compartment
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) ODMS Agent name
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) ODMS Agent public key.
	PublicKey *string `pulumi:"publicKey"`
	// (Updatable) The OCID of the Stream
	StreamId *string `pulumi:"streamId"`
	// (Updatable) ODMS Agent version
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a Agent resource.
type AgentArgs struct {
	// The OCID of the agent
	AgentId pulumi.StringInput
	// (Updatable) OCID of the compartment
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) ODMS Agent name
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) ODMS Agent public key.
	PublicKey pulumi.StringPtrInput
	// (Updatable) The OCID of the Stream
	StreamId pulumi.StringPtrInput
	// (Updatable) ODMS Agent version
	Version pulumi.StringPtrInput
}

func (AgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentArgs)(nil)).Elem()
}

type AgentInput interface {
	pulumi.Input

	ToAgentOutput() AgentOutput
	ToAgentOutputWithContext(ctx context.Context) AgentOutput
}

func (*Agent) ElementType() reflect.Type {
	return reflect.TypeOf((**Agent)(nil)).Elem()
}

func (i *Agent) ToAgentOutput() AgentOutput {
	return i.ToAgentOutputWithContext(context.Background())
}

func (i *Agent) ToAgentOutputWithContext(ctx context.Context) AgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentOutput)
}

// AgentArrayInput is an input type that accepts AgentArray and AgentArrayOutput values.
// You can construct a concrete instance of `AgentArrayInput` via:
//
//	AgentArray{ AgentArgs{...} }
type AgentArrayInput interface {
	pulumi.Input

	ToAgentArrayOutput() AgentArrayOutput
	ToAgentArrayOutputWithContext(context.Context) AgentArrayOutput
}

type AgentArray []AgentInput

func (AgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Agent)(nil)).Elem()
}

func (i AgentArray) ToAgentArrayOutput() AgentArrayOutput {
	return i.ToAgentArrayOutputWithContext(context.Background())
}

func (i AgentArray) ToAgentArrayOutputWithContext(ctx context.Context) AgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentArrayOutput)
}

// AgentMapInput is an input type that accepts AgentMap and AgentMapOutput values.
// You can construct a concrete instance of `AgentMapInput` via:
//
//	AgentMap{ "key": AgentArgs{...} }
type AgentMapInput interface {
	pulumi.Input

	ToAgentMapOutput() AgentMapOutput
	ToAgentMapOutputWithContext(context.Context) AgentMapOutput
}

type AgentMap map[string]AgentInput

func (AgentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Agent)(nil)).Elem()
}

func (i AgentMap) ToAgentMapOutput() AgentMapOutput {
	return i.ToAgentMapOutputWithContext(context.Background())
}

func (i AgentMap) ToAgentMapOutputWithContext(ctx context.Context) AgentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentMapOutput)
}

type AgentOutput struct{ *pulumi.OutputState }

func (AgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Agent)(nil)).Elem()
}

func (o AgentOutput) ToAgentOutput() AgentOutput {
	return o
}

func (o AgentOutput) ToAgentOutputWithContext(ctx context.Context) AgentOutput {
	return o
}

// The OCID of the agent
func (o AgentOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.AgentId }).(pulumi.StringOutput)
}

// (Updatable) OCID of the compartment
func (o AgentOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o AgentOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Agent) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) ODMS Agent name
func (o AgentOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o AgentOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Agent) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o AgentOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) ODMS Agent public key.
func (o AgentOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.PublicKey }).(pulumi.StringOutput)
}

// The current state of the ODMS on-premises Agent.
func (o AgentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the Stream
func (o AgentOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.StreamId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o AgentOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Agent) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the Agent was created. An RFC3339 formatted datetime string.
func (o AgentOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time of the last Agent details update. An RFC3339 formatted datetime string.
func (o AgentOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) ODMS Agent version
func (o AgentOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type AgentArrayOutput struct{ *pulumi.OutputState }

func (AgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Agent)(nil)).Elem()
}

func (o AgentArrayOutput) ToAgentArrayOutput() AgentArrayOutput {
	return o
}

func (o AgentArrayOutput) ToAgentArrayOutputWithContext(ctx context.Context) AgentArrayOutput {
	return o
}

func (o AgentArrayOutput) Index(i pulumi.IntInput) AgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Agent {
		return vs[0].([]*Agent)[vs[1].(int)]
	}).(AgentOutput)
}

type AgentMapOutput struct{ *pulumi.OutputState }

func (AgentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Agent)(nil)).Elem()
}

func (o AgentMapOutput) ToAgentMapOutput() AgentMapOutput {
	return o
}

func (o AgentMapOutput) ToAgentMapOutputWithContext(ctx context.Context) AgentMapOutput {
	return o
}

func (o AgentMapOutput) MapIndex(k pulumi.StringInput) AgentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Agent {
		return vs[0].(map[string]*Agent)[vs[1].(string)]
	}).(AgentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentInput)(nil)).Elem(), &Agent{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentArrayInput)(nil)).Elem(), AgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentMapInput)(nil)).Elem(), AgentMap{})
	pulumi.RegisterOutputType(AgentOutput{})
	pulumi.RegisterOutputType(AgentArrayOutput{})
	pulumi.RegisterOutputType(AgentMapOutput{})
}
