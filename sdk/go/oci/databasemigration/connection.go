// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemigration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Connection resource in Oracle Cloud Infrastructure Database Migration service.
//
// Create a Database Connection resource that contains the details to connect to either a Source or Target Database
// in the migration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseMigration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseMigration.NewConnection(ctx, "testConnection", &DatabaseMigration.ConnectionArgs{
//				AdminCredentials: &databasemigration.ConnectionAdminCredentialsArgs{
//					Password: pulumi.Any(_var.Connection_admin_credentials_password),
//					Username: pulumi.Any(_var.Connection_admin_credentials_username),
//				},
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				DatabaseType:  pulumi.Any(_var.Connection_database_type),
//				VaultDetails: &databasemigration.ConnectionVaultDetailsArgs{
//					CompartmentId: pulumi.Any(_var.Compartment_id),
//					KeyId:         pulumi.Any(oci_kms_key.Test_key.Id),
//					VaultId:       pulumi.Any(oci_kms_vault.Test_vault.Id),
//				},
//				CertificateTdn: pulumi.Any(_var.Connection_certificate_tdn),
//				ConnectDescriptor: &databasemigration.ConnectionConnectDescriptorArgs{
//					ConnectString:       pulumi.Any(_var.Connection_connect_descriptor_connect_string),
//					DatabaseServiceName: pulumi.Any(oci_core_service.Test_service.Name),
//					Host:                pulumi.Any(_var.Connection_connect_descriptor_host),
//					Port:                pulumi.Any(_var.Connection_connect_descriptor_port),
//				},
//				DatabaseId: pulumi.Any(oci_database_database.Test_database.Id),
//				DefinedTags: pulumi.AnyMap{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				DisplayName: pulumi.Any(_var.Connection_display_name),
//				FreeformTags: pulumi.AnyMap{
//					"bar-key": pulumi.Any("value"),
//				},
//				NsgIds: pulumi.Any(_var.Connection_nsg_ids),
//				PrivateEndpoint: &databasemigration.ConnectionPrivateEndpointArgs{
//					CompartmentId: pulumi.Any(_var.Compartment_id),
//					SubnetId:      pulumi.Any(oci_core_subnet.Test_subnet.Id),
//					VcnId:         pulumi.Any(oci_core_vcn.Test_vcn.Id),
//				},
//				SshDetails: &databasemigration.ConnectionSshDetailsArgs{
//					Host:         pulumi.Any(_var.Connection_ssh_details_host),
//					Sshkey:       pulumi.Any(_var.Connection_ssh_details_sshkey),
//					User:         pulumi.Any(_var.Connection_ssh_details_user),
//					SudoLocation: pulumi.Any(_var.Connection_ssh_details_sudo_location),
//				},
//				TlsKeystore: pulumi.Any(_var.Connection_tls_keystore),
//				TlsWallet:   pulumi.Any(_var.Connection_tls_wallet),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Connections can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DatabaseMigration/connection:Connection test_connection "id"
//
// ```
type Connection struct {
	pulumi.CustomResourceState

	// (Updatable) Database Administrator Credentials details.
	AdminCredentials ConnectionAdminCredentialsOutput `pulumi:"adminCredentials"`
	// (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
	CertificateTdn pulumi.StringOutput `pulumi:"certificateTdn"`
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
	ConnectDescriptor ConnectionConnectDescriptorOutput `pulumi:"connectDescriptor"`
	// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
	CredentialsSecretId pulumi.StringOutput `pulumi:"credentialsSecretId"`
	// (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
	DatabaseId pulumi.StringOutput `pulumi:"databaseId"`
	// Database connection type.
	DatabaseType pulumi.StringOutput `pulumi:"databaseType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Database Connection display name identifier.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
	NsgIds pulumi.StringArrayOutput `pulumi:"nsgIds"`
	// (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
	PrivateEndpoint ConnectionPrivateEndpointOutput `pulumi:"privateEndpoint"`
	// (Updatable) Details of the SSH key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
	SshDetails ConnectionSshDetailsOutput `pulumi:"sshDetails"`
	// The current state of the Connection resource.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the Connection resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time of the last Connection resource details update. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
	TlsKeystore pulumi.StringOutput `pulumi:"tlsKeystore"`
	// (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
	TlsWallet pulumi.StringOutput `pulumi:"tlsWallet"`
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails ConnectionVaultDetailsOutput `pulumi:"vaultDetails"`
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOption) (*Connection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminCredentials == nil {
		return nil, errors.New("invalid value for required argument 'AdminCredentials'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DatabaseType == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseType'")
	}
	if args.VaultDetails == nil {
		return nil, errors.New("invalid value for required argument 'VaultDetails'")
	}
	var resource Connection
	err := ctx.RegisterResource("oci:DatabaseMigration/connection:Connection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionState, opts ...pulumi.ResourceOption) (*Connection, error) {
	var resource Connection
	err := ctx.ReadResource("oci:DatabaseMigration/connection:Connection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Connection resources.
type connectionState struct {
	// (Updatable) Database Administrator Credentials details.
	AdminCredentials *ConnectionAdminCredentials `pulumi:"adminCredentials"`
	// (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
	CertificateTdn *string `pulumi:"certificateTdn"`
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
	ConnectDescriptor *ConnectionConnectDescriptor `pulumi:"connectDescriptor"`
	// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
	CredentialsSecretId *string `pulumi:"credentialsSecretId"`
	// (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
	DatabaseId *string `pulumi:"databaseId"`
	// Database connection type.
	DatabaseType *string `pulumi:"databaseType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Database Connection display name identifier.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
	NsgIds []string `pulumi:"nsgIds"`
	// (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
	PrivateEndpoint *ConnectionPrivateEndpoint `pulumi:"privateEndpoint"`
	// (Updatable) Details of the SSH key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
	SshDetails *ConnectionSshDetails `pulumi:"sshDetails"`
	// The current state of the Connection resource.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the Connection resource was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time of the last Connection resource details update. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
	TlsKeystore *string `pulumi:"tlsKeystore"`
	// (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
	TlsWallet *string `pulumi:"tlsWallet"`
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails *ConnectionVaultDetails `pulumi:"vaultDetails"`
}

type ConnectionState struct {
	// (Updatable) Database Administrator Credentials details.
	AdminCredentials ConnectionAdminCredentialsPtrInput
	// (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
	CertificateTdn pulumi.StringPtrInput
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
	ConnectDescriptor ConnectionConnectDescriptorPtrInput
	// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
	CredentialsSecretId pulumi.StringPtrInput
	// (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
	DatabaseId pulumi.StringPtrInput
	// Database connection type.
	DatabaseType pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Database Connection display name identifier.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
	NsgIds pulumi.StringArrayInput
	// (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
	PrivateEndpoint ConnectionPrivateEndpointPtrInput
	// (Updatable) Details of the SSH key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
	SshDetails ConnectionSshDetailsPtrInput
	// The current state of the Connection resource.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the Connection resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time of the last Connection resource details update. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
	TlsKeystore pulumi.StringPtrInput
	// (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
	TlsWallet pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails ConnectionVaultDetailsPtrInput
}

func (ConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionState)(nil)).Elem()
}

type connectionArgs struct {
	// (Updatable) Database Administrator Credentials details.
	AdminCredentials ConnectionAdminCredentials `pulumi:"adminCredentials"`
	// (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
	CertificateTdn *string `pulumi:"certificateTdn"`
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
	ConnectDescriptor *ConnectionConnectDescriptor `pulumi:"connectDescriptor"`
	// (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
	DatabaseId *string `pulumi:"databaseId"`
	// Database connection type.
	DatabaseType string `pulumi:"databaseType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Database Connection display name identifier.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
	NsgIds []string `pulumi:"nsgIds"`
	// (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
	PrivateEndpoint *ConnectionPrivateEndpoint `pulumi:"privateEndpoint"`
	// (Updatable) Details of the SSH key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
	SshDetails *ConnectionSshDetails `pulumi:"sshDetails"`
	// (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
	TlsKeystore *string `pulumi:"tlsKeystore"`
	// (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
	TlsWallet *string `pulumi:"tlsWallet"`
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails ConnectionVaultDetails `pulumi:"vaultDetails"`
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	// (Updatable) Database Administrator Credentials details.
	AdminCredentials ConnectionAdminCredentialsInput
	// (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
	CertificateTdn pulumi.StringPtrInput
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId pulumi.StringInput
	// (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
	ConnectDescriptor ConnectionConnectDescriptorPtrInput
	// (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
	DatabaseId pulumi.StringPtrInput
	// Database connection type.
	DatabaseType pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Database Connection display name identifier.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
	NsgIds pulumi.StringArrayInput
	// (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
	PrivateEndpoint ConnectionPrivateEndpointPtrInput
	// (Updatable) Details of the SSH key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
	SshDetails ConnectionSshDetailsPtrInput
	// (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
	TlsKeystore pulumi.StringPtrInput
	// (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
	TlsWallet pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails ConnectionVaultDetailsInput
}

func (ConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionArgs)(nil)).Elem()
}

type ConnectionInput interface {
	pulumi.Input

	ToConnectionOutput() ConnectionOutput
	ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput
}

func (*Connection) ElementType() reflect.Type {
	return reflect.TypeOf((**Connection)(nil)).Elem()
}

func (i *Connection) ToConnectionOutput() ConnectionOutput {
	return i.ToConnectionOutputWithContext(context.Background())
}

func (i *Connection) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOutput)
}

// ConnectionArrayInput is an input type that accepts ConnectionArray and ConnectionArrayOutput values.
// You can construct a concrete instance of `ConnectionArrayInput` via:
//
//	ConnectionArray{ ConnectionArgs{...} }
type ConnectionArrayInput interface {
	pulumi.Input

	ToConnectionArrayOutput() ConnectionArrayOutput
	ToConnectionArrayOutputWithContext(context.Context) ConnectionArrayOutput
}

type ConnectionArray []ConnectionInput

func (ConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Connection)(nil)).Elem()
}

func (i ConnectionArray) ToConnectionArrayOutput() ConnectionArrayOutput {
	return i.ToConnectionArrayOutputWithContext(context.Background())
}

func (i ConnectionArray) ToConnectionArrayOutputWithContext(ctx context.Context) ConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionArrayOutput)
}

// ConnectionMapInput is an input type that accepts ConnectionMap and ConnectionMapOutput values.
// You can construct a concrete instance of `ConnectionMapInput` via:
//
//	ConnectionMap{ "key": ConnectionArgs{...} }
type ConnectionMapInput interface {
	pulumi.Input

	ToConnectionMapOutput() ConnectionMapOutput
	ToConnectionMapOutputWithContext(context.Context) ConnectionMapOutput
}

type ConnectionMap map[string]ConnectionInput

func (ConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Connection)(nil)).Elem()
}

func (i ConnectionMap) ToConnectionMapOutput() ConnectionMapOutput {
	return i.ToConnectionMapOutputWithContext(context.Background())
}

func (i ConnectionMap) ToConnectionMapOutputWithContext(ctx context.Context) ConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMapOutput)
}

type ConnectionOutput struct{ *pulumi.OutputState }

func (ConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Connection)(nil)).Elem()
}

func (o ConnectionOutput) ToConnectionOutput() ConnectionOutput {
	return o
}

func (o ConnectionOutput) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return o
}

// (Updatable) Database Administrator Credentials details.
func (o ConnectionOutput) AdminCredentials() ConnectionAdminCredentialsOutput {
	return o.ApplyT(func(v *Connection) ConnectionAdminCredentialsOutput { return v.AdminCredentials }).(ConnectionAdminCredentialsOutput)
}

// (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
func (o ConnectionOutput) CertificateTdn() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.CertificateTdn }).(pulumi.StringOutput)
}

// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
func (o ConnectionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
func (o ConnectionOutput) ConnectDescriptor() ConnectionConnectDescriptorOutput {
	return o.ApplyT(func(v *Connection) ConnectionConnectDescriptorOutput { return v.ConnectDescriptor }).(ConnectionConnectDescriptorOutput)
}

// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
func (o ConnectionOutput) CredentialsSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.CredentialsSecretId }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
func (o ConnectionOutput) DatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.DatabaseId }).(pulumi.StringOutput)
}

// Database connection type.
func (o ConnectionOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.DatabaseType }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o ConnectionOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Connection) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Database Connection display name identifier.
func (o ConnectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o ConnectionOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Connection) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o ConnectionOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
func (o ConnectionOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringArrayOutput { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
func (o ConnectionOutput) PrivateEndpoint() ConnectionPrivateEndpointOutput {
	return o.ApplyT(func(v *Connection) ConnectionPrivateEndpointOutput { return v.PrivateEndpoint }).(ConnectionPrivateEndpointOutput)
}

// (Updatable) Details of the SSH key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
func (o ConnectionOutput) SshDetails() ConnectionSshDetailsOutput {
	return o.ApplyT(func(v *Connection) ConnectionSshDetailsOutput { return v.SshDetails }).(ConnectionSshDetailsOutput)
}

// The current state of the Connection resource.
func (o ConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ConnectionOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Connection) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the Connection resource was created. An RFC3339 formatted datetime string.
func (o ConnectionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time of the last Connection resource details update. An RFC3339 formatted datetime string.
func (o ConnectionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
func (o ConnectionOutput) TlsKeystore() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.TlsKeystore }).(pulumi.StringOutput)
}

// (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
func (o ConnectionOutput) TlsWallet() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.TlsWallet }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
func (o ConnectionOutput) VaultDetails() ConnectionVaultDetailsOutput {
	return o.ApplyT(func(v *Connection) ConnectionVaultDetailsOutput { return v.VaultDetails }).(ConnectionVaultDetailsOutput)
}

type ConnectionArrayOutput struct{ *pulumi.OutputState }

func (ConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Connection)(nil)).Elem()
}

func (o ConnectionArrayOutput) ToConnectionArrayOutput() ConnectionArrayOutput {
	return o
}

func (o ConnectionArrayOutput) ToConnectionArrayOutputWithContext(ctx context.Context) ConnectionArrayOutput {
	return o
}

func (o ConnectionArrayOutput) Index(i pulumi.IntInput) ConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Connection {
		return vs[0].([]*Connection)[vs[1].(int)]
	}).(ConnectionOutput)
}

type ConnectionMapOutput struct{ *pulumi.OutputState }

func (ConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Connection)(nil)).Elem()
}

func (o ConnectionMapOutput) ToConnectionMapOutput() ConnectionMapOutput {
	return o
}

func (o ConnectionMapOutput) ToConnectionMapOutputWithContext(ctx context.Context) ConnectionMapOutput {
	return o
}

func (o ConnectionMapOutput) MapIndex(k pulumi.StringInput) ConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Connection {
		return vs[0].(map[string]*Connection)[vs[1].(string)]
	}).(ConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionInput)(nil)).Elem(), &Connection{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionArrayInput)(nil)).Elem(), ConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionMapInput)(nil)).Elem(), ConnectionMap{})
	pulumi.RegisterOutputType(ConnectionOutput{})
	pulumi.RegisterOutputType(ConnectionArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMapOutput{})
}
