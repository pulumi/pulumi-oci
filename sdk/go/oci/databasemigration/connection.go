// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemigration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/databasemigration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databasemigration.NewConnection(ctx, "test_connection", &databasemigration.ConnectionArgs{
//				CompartmentId:  pulumi.Any(compartmentId),
//				ConnectionType: pulumi.Any(connectionConnectionType),
//				DisplayName:    pulumi.Any(connectionDisplayName),
//				KeyId:          pulumi.Any(testKey.Id),
//				Password:       pulumi.Any(connectionPassword),
//				TechnologyType: pulumi.Any(connectionTechnologyType),
//				Username:       pulumi.Any(connectionUsername),
//				VaultId:        pulumi.Any(testVault.Id),
//				AdditionalAttributes: databasemigration.ConnectionAdditionalAttributeArray{
//					&databasemigration.ConnectionAdditionalAttributeArgs{
//						Name:  pulumi.Any(connectionAdditionalAttributesName),
//						Value: pulumi.Any(connectionAdditionalAttributesValue),
//					},
//				},
//				ConnectionString: pulumi.Any(connectionConnectionString),
//				DatabaseId:       pulumi.Any(testDatabase.Id),
//				DatabaseName:     pulumi.Any(testDatabase.Name),
//				DbSystemId:       pulumi.Any(testDbSystem.Id),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				Description:         pulumi.Any(connectionDescription),
//				FreeformTags:        pulumi.Any(connectionFreeformTags),
//				Host:                pulumi.Any(connectionHost),
//				NsgIds:              pulumi.Any(connectionNsgIds),
//				Port:                pulumi.Any(connectionPort),
//				ReplicationPassword: pulumi.Any(connectionReplicationPassword),
//				ReplicationUsername: pulumi.Any(connectionReplicationUsername),
//				SecurityProtocol:    pulumi.Any(connectionSecurityProtocol),
//				SshHost:             pulumi.Any(connectionSshHost),
//				SshKey:              pulumi.Any(connectionSshKey),
//				SshSudoLocation:     pulumi.Any(connectionSshSudoLocation),
//				SshUser:             pulumi.Any(connectionSshUser),
//				SslCa:               pulumi.Any(connectionSslCa),
//				SslCert:             pulumi.Any(connectionSslCert),
//				SslCrl:              pulumi.Any(connectionSslCrl),
//				SslKey:              pulumi.Any(connectionSslKey),
//				SslMode:             pulumi.Any(connectionSslMode),
//				SubnetId:            pulumi.Any(testSubnet.Id),
//				Wallet:              pulumi.Any(connectionWallet),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Connections can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DatabaseMigration/connection:Connection test_connection "id"
// ```
type Connection struct {
	pulumi.CustomResourceState

	// (Updatable) An array of name-value pair attribute entries.
	AdditionalAttributes ConnectionAdditionalAttributeArrayOutput `pulumi:"additionalAttributes"`
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Connect descriptor or Easy Connect Naming method used to connect to a database.
	ConnectionString pulumi.StringOutput `pulumi:"connectionString"`
	// (Updatable) Defines the type of connection. For example, ORACLE.
	ConnectionType pulumi.StringOutput `pulumi:"connectionType"`
	// (Updatable) The OCID of the database being referenced.
	DatabaseId pulumi.StringOutput `pulumi:"databaseId"`
	// (Updatable) The name of the database being referenced.
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`
	// (Updatable) The OCID of the database system being referenced.
	DbSystemId pulumi.StringOutput `pulumi:"dbSystemId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly description. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {"Department": "Finance"}
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) The IP Address of the host.
	Host pulumi.StringOutput `pulumi:"host"`
	// List of ingress IP addresses from where to connect to this connection's privateIp.
	IngressIps ConnectionIngressIpArrayOutput `pulumi:"ingressIps"`
	// (Updatable) The OCID of the key used in cryptographic operations.
	KeyId pulumi.StringOutput `pulumi:"keyId"`
	// The message describing the current state of the connection's lifecycle in detail. For example, can be used to provide actionable information for a connection in a Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
	NsgIds pulumi.StringArrayOutput `pulumi:"nsgIds"`
	// (Updatable) The password (credential) used when creating or updating this resource.
	Password pulumi.StringOutput `pulumi:"password"`
	// (Updatable) The port to be used for the connection.
	Port pulumi.IntOutput `pulumi:"port"`
	// The OCID of the resource being referenced.
	PrivateEndpointId pulumi.StringOutput `pulumi:"privateEndpointId"`
	// (Updatable) The password (credential) used when creating or updating this resource.
	ReplicationPassword pulumi.StringOutput `pulumi:"replicationPassword"`
	// (Updatable) The username (credential) used when creating or updating this resource.
	ReplicationUsername pulumi.StringOutput `pulumi:"replicationUsername"`
	// The OCID of the resource being referenced.
	SecretId pulumi.StringOutput `pulumi:"secretId"`
	// (Updatable) Security Type for MySQL.
	SecurityProtocol pulumi.StringOutput `pulumi:"securityProtocol"`
	// (Updatable) Name of the host the SSH key is valid for.
	SshHost pulumi.StringOutput `pulumi:"sshHost"`
	// (Updatable) Private SSH key string.
	SshKey pulumi.StringOutput `pulumi:"sshKey"`
	// (Updatable) Sudo location
	SshSudoLocation pulumi.StringOutput `pulumi:"sshSudoLocation"`
	// (Updatable) The username (credential) used when creating or updating this resource.
	SshUser pulumi.StringOutput `pulumi:"sshUser"`
	// (Updatable) Database Certificate - The base64 encoded content of mysql.pem file containing the server public key (for 1 and 2-way SSL).
	SslCa pulumi.StringOutput `pulumi:"sslCa"`
	// (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
	SslCert pulumi.StringOutput `pulumi:"sslCert"`
	// (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
	SslCrl pulumi.StringOutput `pulumi:"sslCrl"`
	// (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
	SslKey pulumi.StringOutput `pulumi:"sslKey"`
	// (Updatable) SSL modes for MySQL.
	SslMode pulumi.StringOutput `pulumi:"sslMode"`
	// The Connection's current lifecycle state.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Oracle Cloud Infrastructure resource ID.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The type of MySQL source or target connection. Example: OCI_MYSQL represents Oracle Cloud Infrastructure MySQL HeatWave Database Service
	TechnologyType pulumi.StringOutput `pulumi:"technologyType"`
	// The time when this resource was created. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time when this resource was updated. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) The username (credential) used when creating or updating this resource.
	Username pulumi.StringOutput `pulumi:"username"`
	// (Updatable) Oracle Cloud Infrastructure resource ID.
	VaultId pulumi.StringOutput `pulumi:"vaultId"`
	// (Updatable) The wallet contents used to make connections to a database.  This attribute is expected to be base64 encoded.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Wallet pulumi.StringOutput `pulumi:"wallet"`
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOption) (*Connection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ConnectionType == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionType'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.KeyId == nil {
		return nil, errors.New("invalid value for required argument 'KeyId'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.TechnologyType == nil {
		return nil, errors.New("invalid value for required argument 'TechnologyType'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.VaultId == nil {
		return nil, errors.New("invalid value for required argument 'VaultId'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	if args.ReplicationPassword != nil {
		args.ReplicationPassword = pulumi.ToSecret(args.ReplicationPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
		"replicationPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Connection
	err := ctx.RegisterResource("oci:DatabaseMigration/connection:Connection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionState, opts ...pulumi.ResourceOption) (*Connection, error) {
	var resource Connection
	err := ctx.ReadResource("oci:DatabaseMigration/connection:Connection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Connection resources.
type connectionState struct {
	// (Updatable) An array of name-value pair attribute entries.
	AdditionalAttributes []ConnectionAdditionalAttribute `pulumi:"additionalAttributes"`
	// (Updatable) The OCID of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Connect descriptor or Easy Connect Naming method used to connect to a database.
	ConnectionString *string `pulumi:"connectionString"`
	// (Updatable) Defines the type of connection. For example, ORACLE.
	ConnectionType *string `pulumi:"connectionType"`
	// (Updatable) The OCID of the database being referenced.
	DatabaseId *string `pulumi:"databaseId"`
	// (Updatable) The name of the database being referenced.
	DatabaseName *string `pulumi:"databaseName"`
	// (Updatable) The OCID of the database system being referenced.
	DbSystemId *string `pulumi:"dbSystemId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly description. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {"Department": "Finance"}
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The IP Address of the host.
	Host *string `pulumi:"host"`
	// List of ingress IP addresses from where to connect to this connection's privateIp.
	IngressIps []ConnectionIngressIp `pulumi:"ingressIps"`
	// (Updatable) The OCID of the key used in cryptographic operations.
	KeyId *string `pulumi:"keyId"`
	// The message describing the current state of the connection's lifecycle in detail. For example, can be used to provide actionable information for a connection in a Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
	NsgIds []string `pulumi:"nsgIds"`
	// (Updatable) The password (credential) used when creating or updating this resource.
	Password *string `pulumi:"password"`
	// (Updatable) The port to be used for the connection.
	Port *int `pulumi:"port"`
	// The OCID of the resource being referenced.
	PrivateEndpointId *string `pulumi:"privateEndpointId"`
	// (Updatable) The password (credential) used when creating or updating this resource.
	ReplicationPassword *string `pulumi:"replicationPassword"`
	// (Updatable) The username (credential) used when creating or updating this resource.
	ReplicationUsername *string `pulumi:"replicationUsername"`
	// The OCID of the resource being referenced.
	SecretId *string `pulumi:"secretId"`
	// (Updatable) Security Type for MySQL.
	SecurityProtocol *string `pulumi:"securityProtocol"`
	// (Updatable) Name of the host the SSH key is valid for.
	SshHost *string `pulumi:"sshHost"`
	// (Updatable) Private SSH key string.
	SshKey *string `pulumi:"sshKey"`
	// (Updatable) Sudo location
	SshSudoLocation *string `pulumi:"sshSudoLocation"`
	// (Updatable) The username (credential) used when creating or updating this resource.
	SshUser *string `pulumi:"sshUser"`
	// (Updatable) Database Certificate - The base64 encoded content of mysql.pem file containing the server public key (for 1 and 2-way SSL).
	SslCa *string `pulumi:"sslCa"`
	// (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
	SslCert *string `pulumi:"sslCert"`
	// (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
	SslCrl *string `pulumi:"sslCrl"`
	// (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
	SslKey *string `pulumi:"sslKey"`
	// (Updatable) SSL modes for MySQL.
	SslMode *string `pulumi:"sslMode"`
	// The Connection's current lifecycle state.
	State *string `pulumi:"state"`
	// (Updatable) Oracle Cloud Infrastructure resource ID.
	SubnetId *string `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The type of MySQL source or target connection. Example: OCI_MYSQL represents Oracle Cloud Infrastructure MySQL HeatWave Database Service
	TechnologyType *string `pulumi:"technologyType"`
	// The time when this resource was created. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time when this resource was updated. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) The username (credential) used when creating or updating this resource.
	Username *string `pulumi:"username"`
	// (Updatable) Oracle Cloud Infrastructure resource ID.
	VaultId *string `pulumi:"vaultId"`
	// (Updatable) The wallet contents used to make connections to a database.  This attribute is expected to be base64 encoded.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Wallet *string `pulumi:"wallet"`
}

type ConnectionState struct {
	// (Updatable) An array of name-value pair attribute entries.
	AdditionalAttributes ConnectionAdditionalAttributeArrayInput
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Connect descriptor or Easy Connect Naming method used to connect to a database.
	ConnectionString pulumi.StringPtrInput
	// (Updatable) Defines the type of connection. For example, ORACLE.
	ConnectionType pulumi.StringPtrInput
	// (Updatable) The OCID of the database being referenced.
	DatabaseId pulumi.StringPtrInput
	// (Updatable) The name of the database being referenced.
	DatabaseName pulumi.StringPtrInput
	// (Updatable) The OCID of the database system being referenced.
	DbSystemId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly description. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {"Department": "Finance"}
	FreeformTags pulumi.StringMapInput
	// (Updatable) The IP Address of the host.
	Host pulumi.StringPtrInput
	// List of ingress IP addresses from where to connect to this connection's privateIp.
	IngressIps ConnectionIngressIpArrayInput
	// (Updatable) The OCID of the key used in cryptographic operations.
	KeyId pulumi.StringPtrInput
	// The message describing the current state of the connection's lifecycle in detail. For example, can be used to provide actionable information for a connection in a Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
	NsgIds pulumi.StringArrayInput
	// (Updatable) The password (credential) used when creating or updating this resource.
	Password pulumi.StringPtrInput
	// (Updatable) The port to be used for the connection.
	Port pulumi.IntPtrInput
	// The OCID of the resource being referenced.
	PrivateEndpointId pulumi.StringPtrInput
	// (Updatable) The password (credential) used when creating or updating this resource.
	ReplicationPassword pulumi.StringPtrInput
	// (Updatable) The username (credential) used when creating or updating this resource.
	ReplicationUsername pulumi.StringPtrInput
	// The OCID of the resource being referenced.
	SecretId pulumi.StringPtrInput
	// (Updatable) Security Type for MySQL.
	SecurityProtocol pulumi.StringPtrInput
	// (Updatable) Name of the host the SSH key is valid for.
	SshHost pulumi.StringPtrInput
	// (Updatable) Private SSH key string.
	SshKey pulumi.StringPtrInput
	// (Updatable) Sudo location
	SshSudoLocation pulumi.StringPtrInput
	// (Updatable) The username (credential) used when creating or updating this resource.
	SshUser pulumi.StringPtrInput
	// (Updatable) Database Certificate - The base64 encoded content of mysql.pem file containing the server public key (for 1 and 2-way SSL).
	SslCa pulumi.StringPtrInput
	// (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
	SslCert pulumi.StringPtrInput
	// (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
	SslCrl pulumi.StringPtrInput
	// (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
	SslKey pulumi.StringPtrInput
	// (Updatable) SSL modes for MySQL.
	SslMode pulumi.StringPtrInput
	// The Connection's current lifecycle state.
	State pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure resource ID.
	SubnetId pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The type of MySQL source or target connection. Example: OCI_MYSQL represents Oracle Cloud Infrastructure MySQL HeatWave Database Service
	TechnologyType pulumi.StringPtrInput
	// The time when this resource was created. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
	TimeCreated pulumi.StringPtrInput
	// The time when this resource was updated. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) The username (credential) used when creating or updating this resource.
	Username pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure resource ID.
	VaultId pulumi.StringPtrInput
	// (Updatable) The wallet contents used to make connections to a database.  This attribute is expected to be base64 encoded.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Wallet pulumi.StringPtrInput
}

func (ConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionState)(nil)).Elem()
}

type connectionArgs struct {
	// (Updatable) An array of name-value pair attribute entries.
	AdditionalAttributes []ConnectionAdditionalAttribute `pulumi:"additionalAttributes"`
	// (Updatable) The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Connect descriptor or Easy Connect Naming method used to connect to a database.
	ConnectionString *string `pulumi:"connectionString"`
	// (Updatable) Defines the type of connection. For example, ORACLE.
	ConnectionType string `pulumi:"connectionType"`
	// (Updatable) The OCID of the database being referenced.
	DatabaseId *string `pulumi:"databaseId"`
	// (Updatable) The name of the database being referenced.
	DatabaseName *string `pulumi:"databaseName"`
	// (Updatable) The OCID of the database system being referenced.
	DbSystemId *string `pulumi:"dbSystemId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly description. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {"Department": "Finance"}
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) The IP Address of the host.
	Host *string `pulumi:"host"`
	// (Updatable) The OCID of the key used in cryptographic operations.
	KeyId string `pulumi:"keyId"`
	// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
	NsgIds []string `pulumi:"nsgIds"`
	// (Updatable) The password (credential) used when creating or updating this resource.
	Password string `pulumi:"password"`
	// (Updatable) The port to be used for the connection.
	Port *int `pulumi:"port"`
	// (Updatable) The password (credential) used when creating or updating this resource.
	ReplicationPassword *string `pulumi:"replicationPassword"`
	// (Updatable) The username (credential) used when creating or updating this resource.
	ReplicationUsername *string `pulumi:"replicationUsername"`
	// (Updatable) Security Type for MySQL.
	SecurityProtocol *string `pulumi:"securityProtocol"`
	// (Updatable) Name of the host the SSH key is valid for.
	SshHost *string `pulumi:"sshHost"`
	// (Updatable) Private SSH key string.
	SshKey *string `pulumi:"sshKey"`
	// (Updatable) Sudo location
	SshSudoLocation *string `pulumi:"sshSudoLocation"`
	// (Updatable) The username (credential) used when creating or updating this resource.
	SshUser *string `pulumi:"sshUser"`
	// (Updatable) Database Certificate - The base64 encoded content of mysql.pem file containing the server public key (for 1 and 2-way SSL).
	SslCa *string `pulumi:"sslCa"`
	// (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
	SslCert *string `pulumi:"sslCert"`
	// (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
	SslCrl *string `pulumi:"sslCrl"`
	// (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
	SslKey *string `pulumi:"sslKey"`
	// (Updatable) SSL modes for MySQL.
	SslMode *string `pulumi:"sslMode"`
	// (Updatable) Oracle Cloud Infrastructure resource ID.
	SubnetId *string `pulumi:"subnetId"`
	// The type of MySQL source or target connection. Example: OCI_MYSQL represents Oracle Cloud Infrastructure MySQL HeatWave Database Service
	TechnologyType string `pulumi:"technologyType"`
	// (Updatable) The username (credential) used when creating or updating this resource.
	Username string `pulumi:"username"`
	// (Updatable) Oracle Cloud Infrastructure resource ID.
	VaultId string `pulumi:"vaultId"`
	// (Updatable) The wallet contents used to make connections to a database.  This attribute is expected to be base64 encoded.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Wallet *string `pulumi:"wallet"`
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	// (Updatable) An array of name-value pair attribute entries.
	AdditionalAttributes ConnectionAdditionalAttributeArrayInput
	// (Updatable) The OCID of the compartment.
	CompartmentId pulumi.StringInput
	// (Updatable) Connect descriptor or Easy Connect Naming method used to connect to a database.
	ConnectionString pulumi.StringPtrInput
	// (Updatable) Defines the type of connection. For example, ORACLE.
	ConnectionType pulumi.StringInput
	// (Updatable) The OCID of the database being referenced.
	DatabaseId pulumi.StringPtrInput
	// (Updatable) The name of the database being referenced.
	DatabaseName pulumi.StringPtrInput
	// (Updatable) The OCID of the database system being referenced.
	DbSystemId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly description. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {"Department": "Finance"}
	FreeformTags pulumi.StringMapInput
	// (Updatable) The IP Address of the host.
	Host pulumi.StringPtrInput
	// (Updatable) The OCID of the key used in cryptographic operations.
	KeyId pulumi.StringInput
	// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
	NsgIds pulumi.StringArrayInput
	// (Updatable) The password (credential) used when creating or updating this resource.
	Password pulumi.StringInput
	// (Updatable) The port to be used for the connection.
	Port pulumi.IntPtrInput
	// (Updatable) The password (credential) used when creating or updating this resource.
	ReplicationPassword pulumi.StringPtrInput
	// (Updatable) The username (credential) used when creating or updating this resource.
	ReplicationUsername pulumi.StringPtrInput
	// (Updatable) Security Type for MySQL.
	SecurityProtocol pulumi.StringPtrInput
	// (Updatable) Name of the host the SSH key is valid for.
	SshHost pulumi.StringPtrInput
	// (Updatable) Private SSH key string.
	SshKey pulumi.StringPtrInput
	// (Updatable) Sudo location
	SshSudoLocation pulumi.StringPtrInput
	// (Updatable) The username (credential) used when creating or updating this resource.
	SshUser pulumi.StringPtrInput
	// (Updatable) Database Certificate - The base64 encoded content of mysql.pem file containing the server public key (for 1 and 2-way SSL).
	SslCa pulumi.StringPtrInput
	// (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
	SslCert pulumi.StringPtrInput
	// (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
	SslCrl pulumi.StringPtrInput
	// (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
	SslKey pulumi.StringPtrInput
	// (Updatable) SSL modes for MySQL.
	SslMode pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure resource ID.
	SubnetId pulumi.StringPtrInput
	// The type of MySQL source or target connection. Example: OCI_MYSQL represents Oracle Cloud Infrastructure MySQL HeatWave Database Service
	TechnologyType pulumi.StringInput
	// (Updatable) The username (credential) used when creating or updating this resource.
	Username pulumi.StringInput
	// (Updatable) Oracle Cloud Infrastructure resource ID.
	VaultId pulumi.StringInput
	// (Updatable) The wallet contents used to make connections to a database.  This attribute is expected to be base64 encoded.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Wallet pulumi.StringPtrInput
}

func (ConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionArgs)(nil)).Elem()
}

type ConnectionInput interface {
	pulumi.Input

	ToConnectionOutput() ConnectionOutput
	ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput
}

func (*Connection) ElementType() reflect.Type {
	return reflect.TypeOf((**Connection)(nil)).Elem()
}

func (i *Connection) ToConnectionOutput() ConnectionOutput {
	return i.ToConnectionOutputWithContext(context.Background())
}

func (i *Connection) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOutput)
}

// ConnectionArrayInput is an input type that accepts ConnectionArray and ConnectionArrayOutput values.
// You can construct a concrete instance of `ConnectionArrayInput` via:
//
//	ConnectionArray{ ConnectionArgs{...} }
type ConnectionArrayInput interface {
	pulumi.Input

	ToConnectionArrayOutput() ConnectionArrayOutput
	ToConnectionArrayOutputWithContext(context.Context) ConnectionArrayOutput
}

type ConnectionArray []ConnectionInput

func (ConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Connection)(nil)).Elem()
}

func (i ConnectionArray) ToConnectionArrayOutput() ConnectionArrayOutput {
	return i.ToConnectionArrayOutputWithContext(context.Background())
}

func (i ConnectionArray) ToConnectionArrayOutputWithContext(ctx context.Context) ConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionArrayOutput)
}

// ConnectionMapInput is an input type that accepts ConnectionMap and ConnectionMapOutput values.
// You can construct a concrete instance of `ConnectionMapInput` via:
//
//	ConnectionMap{ "key": ConnectionArgs{...} }
type ConnectionMapInput interface {
	pulumi.Input

	ToConnectionMapOutput() ConnectionMapOutput
	ToConnectionMapOutputWithContext(context.Context) ConnectionMapOutput
}

type ConnectionMap map[string]ConnectionInput

func (ConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Connection)(nil)).Elem()
}

func (i ConnectionMap) ToConnectionMapOutput() ConnectionMapOutput {
	return i.ToConnectionMapOutputWithContext(context.Background())
}

func (i ConnectionMap) ToConnectionMapOutputWithContext(ctx context.Context) ConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMapOutput)
}

type ConnectionOutput struct{ *pulumi.OutputState }

func (ConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Connection)(nil)).Elem()
}

func (o ConnectionOutput) ToConnectionOutput() ConnectionOutput {
	return o
}

func (o ConnectionOutput) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return o
}

// (Updatable) An array of name-value pair attribute entries.
func (o ConnectionOutput) AdditionalAttributes() ConnectionAdditionalAttributeArrayOutput {
	return o.ApplyT(func(v *Connection) ConnectionAdditionalAttributeArrayOutput { return v.AdditionalAttributes }).(ConnectionAdditionalAttributeArrayOutput)
}

// (Updatable) The OCID of the compartment.
func (o ConnectionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Connect descriptor or Easy Connect Naming method used to connect to a database.
func (o ConnectionOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.ConnectionString }).(pulumi.StringOutput)
}

// (Updatable) Defines the type of connection. For example, ORACLE.
func (o ConnectionOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.ConnectionType }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the database being referenced.
func (o ConnectionOutput) DatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.DatabaseId }).(pulumi.StringOutput)
}

// (Updatable) The name of the database being referenced.
func (o ConnectionOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.DatabaseName }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the database system being referenced.
func (o ConnectionOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.DbSystemId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o ConnectionOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user-friendly description. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
func (o ConnectionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
func (o ConnectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {"Department": "Finance"}
func (o ConnectionOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) The IP Address of the host.
func (o ConnectionOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

// List of ingress IP addresses from where to connect to this connection's privateIp.
func (o ConnectionOutput) IngressIps() ConnectionIngressIpArrayOutput {
	return o.ApplyT(func(v *Connection) ConnectionIngressIpArrayOutput { return v.IngressIps }).(ConnectionIngressIpArrayOutput)
}

// (Updatable) The OCID of the key used in cryptographic operations.
func (o ConnectionOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.KeyId }).(pulumi.StringOutput)
}

// The message describing the current state of the connection's lifecycle in detail. For example, can be used to provide actionable information for a connection in a Failed state.
func (o ConnectionOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
func (o ConnectionOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringArrayOutput { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// (Updatable) The password (credential) used when creating or updating this resource.
func (o ConnectionOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// (Updatable) The port to be used for the connection.
func (o ConnectionOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *Connection) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// The OCID of the resource being referenced.
func (o ConnectionOutput) PrivateEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.PrivateEndpointId }).(pulumi.StringOutput)
}

// (Updatable) The password (credential) used when creating or updating this resource.
func (o ConnectionOutput) ReplicationPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.ReplicationPassword }).(pulumi.StringOutput)
}

// (Updatable) The username (credential) used when creating or updating this resource.
func (o ConnectionOutput) ReplicationUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.ReplicationUsername }).(pulumi.StringOutput)
}

// The OCID of the resource being referenced.
func (o ConnectionOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SecretId }).(pulumi.StringOutput)
}

// (Updatable) Security Type for MySQL.
func (o ConnectionOutput) SecurityProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SecurityProtocol }).(pulumi.StringOutput)
}

// (Updatable) Name of the host the SSH key is valid for.
func (o ConnectionOutput) SshHost() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SshHost }).(pulumi.StringOutput)
}

// (Updatable) Private SSH key string.
func (o ConnectionOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SshKey }).(pulumi.StringOutput)
}

// (Updatable) Sudo location
func (o ConnectionOutput) SshSudoLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SshSudoLocation }).(pulumi.StringOutput)
}

// (Updatable) The username (credential) used when creating or updating this resource.
func (o ConnectionOutput) SshUser() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SshUser }).(pulumi.StringOutput)
}

// (Updatable) Database Certificate - The base64 encoded content of mysql.pem file containing the server public key (for 1 and 2-way SSL).
func (o ConnectionOutput) SslCa() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SslCa }).(pulumi.StringOutput)
}

// (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
func (o ConnectionOutput) SslCert() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SslCert }).(pulumi.StringOutput)
}

// (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
func (o ConnectionOutput) SslCrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SslCrl }).(pulumi.StringOutput)
}

// (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
func (o ConnectionOutput) SslKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SslKey }).(pulumi.StringOutput)
}

// (Updatable) SSL modes for MySQL.
func (o ConnectionOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SslMode }).(pulumi.StringOutput)
}

// The Connection's current lifecycle state.
func (o ConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure resource ID.
func (o ConnectionOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o ConnectionOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The type of MySQL source or target connection. Example: OCI_MYSQL represents Oracle Cloud Infrastructure MySQL HeatWave Database Service
func (o ConnectionOutput) TechnologyType() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.TechnologyType }).(pulumi.StringOutput)
}

// The time when this resource was created. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
func (o ConnectionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when this resource was updated. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
func (o ConnectionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) The username (credential) used when creating or updating this resource.
func (o ConnectionOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure resource ID.
func (o ConnectionOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.VaultId }).(pulumi.StringOutput)
}

// (Updatable) The wallet contents used to make connections to a database.  This attribute is expected to be base64 encoded.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ConnectionOutput) Wallet() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.Wallet }).(pulumi.StringOutput)
}

type ConnectionArrayOutput struct{ *pulumi.OutputState }

func (ConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Connection)(nil)).Elem()
}

func (o ConnectionArrayOutput) ToConnectionArrayOutput() ConnectionArrayOutput {
	return o
}

func (o ConnectionArrayOutput) ToConnectionArrayOutputWithContext(ctx context.Context) ConnectionArrayOutput {
	return o
}

func (o ConnectionArrayOutput) Index(i pulumi.IntInput) ConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Connection {
		return vs[0].([]*Connection)[vs[1].(int)]
	}).(ConnectionOutput)
}

type ConnectionMapOutput struct{ *pulumi.OutputState }

func (ConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Connection)(nil)).Elem()
}

func (o ConnectionMapOutput) ToConnectionMapOutput() ConnectionMapOutput {
	return o
}

func (o ConnectionMapOutput) ToConnectionMapOutputWithContext(ctx context.Context) ConnectionMapOutput {
	return o
}

func (o ConnectionMapOutput) MapIndex(k pulumi.StringInput) ConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Connection {
		return vs[0].(map[string]*Connection)[vs[1].(string)]
	}).(ConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionInput)(nil)).Elem(), &Connection{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionArrayInput)(nil)).Elem(), ConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionMapInput)(nil)).Elem(), ConnectionMap{})
	pulumi.RegisterOutputType(ConnectionOutput{})
	pulumi.RegisterOutputType(ConnectionArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMapOutput{})
}
