// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemigration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DatabaseMigration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseMigration.GetConnection(ctx, &databasemigration.GetConnectionArgs{
//				ConnectionId: testConnectionOciDatabaseMigrationConnection.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupConnection(ctx *pulumi.Context, args *LookupConnectionArgs, opts ...pulumi.InvokeOption) (*LookupConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConnectionResult
	err := ctx.Invoke("oci:DatabaseMigration/getConnection:getConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnection.
type LookupConnectionArgs struct {
	// The OCID of the database connection.
	ConnectionId string `pulumi:"connectionId"`
}

// A collection of values returned by getConnection.
type LookupConnectionResult struct {
	// An array of name-value pair attribute entries.
	AdditionalAttributes []GetConnectionAdditionalAttribute `pulumi:"additionalAttributes"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	ConnectionId  string `pulumi:"connectionId"`
	// Connect descriptor or Easy Connect Naming method used to connect to a database.
	ConnectionString string `pulumi:"connectionString"`
	// Defines the type of connection. For example, ORACLE.
	ConnectionType string `pulumi:"connectionType"`
	// The OCID of the database being referenced.
	DatabaseId string `pulumi:"databaseId"`
	// The name of the database being referenced.
	DatabaseName string `pulumi:"databaseName"`
	// The OCID of the database system being referenced.
	DbSystemId string `pulumi:"dbSystemId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly description. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	Description string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {"Department": "Finance"}
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The IP Address of the host.
	Host string `pulumi:"host"`
	// The OCID of the connection being referenced.
	Id string `pulumi:"id"`
	// List of ingress IP addresses from where to connect to this connection's privateIp.
	IngressIps []GetConnectionIngressIp `pulumi:"ingressIps"`
	// The OCID of the key used in cryptographic operations.
	KeyId string `pulumi:"keyId"`
	// The message describing the current state of the connection's lifecycle in detail. For example, can be used to provide actionable information for a connection in a Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// An array of Network Security Group OCIDs used to define network access for Connections.
	NsgIds []string `pulumi:"nsgIds"`
	// The password (credential) used when creating or updating this resource.
	Password string `pulumi:"password"`
	// The port to be used for the connection.
	Port int `pulumi:"port"`
	// The OCID of the resource being referenced.
	PrivateEndpointId string `pulumi:"privateEndpointId"`
	// The password (credential) used when creating or updating this resource.
	ReplicationPassword string `pulumi:"replicationPassword"`
	// The username (credential) used when creating or updating this resource.
	ReplicationUsername string `pulumi:"replicationUsername"`
	// The OCID of the resource being referenced.
	SecretId string `pulumi:"secretId"`
	// Security Protocol to be used for the connection.
	SecurityProtocol string `pulumi:"securityProtocol"`
	// Name of the host the SSH key is valid for.
	SshHost string `pulumi:"sshHost"`
	// Private SSH key string.
	SshKey string `pulumi:"sshKey"`
	// Sudo location
	SshSudoLocation string `pulumi:"sshSudoLocation"`
	// The username (credential) used when creating or updating this resource.
	SshUser string `pulumi:"sshUser"`
	SslCa   string `pulumi:"sslCa"`
	SslCert string `pulumi:"sslCert"`
	SslCrl  string `pulumi:"sslCrl"`
	SslKey  string `pulumi:"sslKey"`
	// SSL mode to be used for the connection.
	SslMode string `pulumi:"sslMode"`
	// The Connection's current lifecycle state.
	State string `pulumi:"state"`
	// Oracle Cloud Infrastructure resource ID.
	SubnetId string `pulumi:"subnetId"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The type of MySQL source or target connection. Example: OCI_MYSQL represents Oracle Cloud Infrastructure MySQL HeatWave Database Service
	TechnologyType string `pulumi:"technologyType"`
	// The time when this resource was created. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
	TimeCreated string `pulumi:"timeCreated"`
	// The time when this resource was updated. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The username (credential) used when creating or updating this resource.
	Username string `pulumi:"username"`
	// Oracle Cloud Infrastructure resource ID.
	VaultId string `pulumi:"vaultId"`
	Wallet  string `pulumi:"wallet"`
}

func LookupConnectionOutput(ctx *pulumi.Context, args LookupConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectionResult, error) {
			args := v.(LookupConnectionArgs)
			r, err := LookupConnection(ctx, &args, opts...)
			var s LookupConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectionResultOutput)
}

// A collection of arguments for invoking getConnection.
type LookupConnectionOutputArgs struct {
	// The OCID of the database connection.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
}

func (LookupConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getConnection.
type LookupConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionResult)(nil)).Elem()
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutput() LookupConnectionResultOutput {
	return o
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutputWithContext(ctx context.Context) LookupConnectionResultOutput {
	return o
}

// An array of name-value pair attribute entries.
func (o LookupConnectionResultOutput) AdditionalAttributes() GetConnectionAdditionalAttributeArrayOutput {
	return o.ApplyT(func(v LookupConnectionResult) []GetConnectionAdditionalAttribute { return v.AdditionalAttributes }).(GetConnectionAdditionalAttributeArrayOutput)
}

// The OCID of the compartment.
func (o LookupConnectionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ConnectionId }).(pulumi.StringOutput)
}

// Connect descriptor or Easy Connect Naming method used to connect to a database.
func (o LookupConnectionResultOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// Defines the type of connection. For example, ORACLE.
func (o LookupConnectionResultOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// The OCID of the database being referenced.
func (o LookupConnectionResultOutput) DatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.DatabaseId }).(pulumi.StringOutput)
}

// The name of the database being referenced.
func (o LookupConnectionResultOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// The OCID of the database system being referenced.
func (o LookupConnectionResultOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupConnectionResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConnectionResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly description. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
func (o LookupConnectionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.  Avoid entering confidential information.
func (o LookupConnectionResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {"Department": "Finance"}
func (o LookupConnectionResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConnectionResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The IP Address of the host.
func (o LookupConnectionResultOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Host }).(pulumi.StringOutput)
}

// The OCID of the connection being referenced.
func (o LookupConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of ingress IP addresses from where to connect to this connection's privateIp.
func (o LookupConnectionResultOutput) IngressIps() GetConnectionIngressIpArrayOutput {
	return o.ApplyT(func(v LookupConnectionResult) []GetConnectionIngressIp { return v.IngressIps }).(GetConnectionIngressIpArrayOutput)
}

// The OCID of the key used in cryptographic operations.
func (o LookupConnectionResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.KeyId }).(pulumi.StringOutput)
}

// The message describing the current state of the connection's lifecycle in detail. For example, can be used to provide actionable information for a connection in a Failed state.
func (o LookupConnectionResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// An array of Network Security Group OCIDs used to define network access for Connections.
func (o LookupConnectionResultOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupConnectionResult) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The password (credential) used when creating or updating this resource.
func (o LookupConnectionResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Password }).(pulumi.StringOutput)
}

// The port to be used for the connection.
func (o LookupConnectionResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LookupConnectionResult) int { return v.Port }).(pulumi.IntOutput)
}

// The OCID of the resource being referenced.
func (o LookupConnectionResultOutput) PrivateEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.PrivateEndpointId }).(pulumi.StringOutput)
}

// The password (credential) used when creating or updating this resource.
func (o LookupConnectionResultOutput) ReplicationPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ReplicationPassword }).(pulumi.StringOutput)
}

// The username (credential) used when creating or updating this resource.
func (o LookupConnectionResultOutput) ReplicationUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ReplicationUsername }).(pulumi.StringOutput)
}

// The OCID of the resource being referenced.
func (o LookupConnectionResultOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SecretId }).(pulumi.StringOutput)
}

// Security Protocol to be used for the connection.
func (o LookupConnectionResultOutput) SecurityProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SecurityProtocol }).(pulumi.StringOutput)
}

// Name of the host the SSH key is valid for.
func (o LookupConnectionResultOutput) SshHost() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SshHost }).(pulumi.StringOutput)
}

// Private SSH key string.
func (o LookupConnectionResultOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SshKey }).(pulumi.StringOutput)
}

// Sudo location
func (o LookupConnectionResultOutput) SshSudoLocation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SshSudoLocation }).(pulumi.StringOutput)
}

// The username (credential) used when creating or updating this resource.
func (o LookupConnectionResultOutput) SshUser() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SshUser }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) SslCa() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SslCa }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) SslCert() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SslCert }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) SslCrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SslCrl }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) SslKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SslKey }).(pulumi.StringOutput)
}

// SSL mode to be used for the connection.
func (o LookupConnectionResultOutput) SslMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SslMode }).(pulumi.StringOutput)
}

// The Connection's current lifecycle state.
func (o LookupConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure resource ID.
func (o LookupConnectionResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupConnectionResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConnectionResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The type of MySQL source or target connection. Example: OCI_MYSQL represents Oracle Cloud Infrastructure MySQL HeatWave Database Service
func (o LookupConnectionResultOutput) TechnologyType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.TechnologyType }).(pulumi.StringOutput)
}

// The time when this resource was created. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
func (o LookupConnectionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time when this resource was updated. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
func (o LookupConnectionResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The username (credential) used when creating or updating this resource.
func (o LookupConnectionResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Username }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure resource ID.
func (o LookupConnectionResultOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.VaultId }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) Wallet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Wallet }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectionResultOutput{})
}
