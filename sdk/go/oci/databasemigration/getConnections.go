// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemigration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Connections in Oracle Cloud Infrastructure Database Migration service.
//
// List all Database Connections.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseMigration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseMigration.GetConnections(ctx, &databasemigration.GetConnectionsArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Connection_display_name),
//				State:         pulumi.StringRef(_var.Connection_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetConnections(ctx *pulumi.Context, args *GetConnectionsArgs, opts ...pulumi.InvokeOption) (*GetConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConnectionsResult
	err := ctx.Invoke("oci:DatabaseMigration/getConnections:getConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnections.
type GetConnectionsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetConnectionsFilter `pulumi:"filters"`
	// The current state of the Database Migration Deployment.
	State *string `pulumi:"state"`
}

// A collection of values returned by getConnections.
type GetConnectionsResult struct {
	// OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of connection_collection.
	ConnectionCollections []GetConnectionsConnectionCollection `pulumi:"connectionCollections"`
	// Database Connection display name identifier.
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetConnectionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the Connection resource.
	State *string `pulumi:"state"`
}

func GetConnectionsOutput(ctx *pulumi.Context, args GetConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetConnectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConnectionsResult, error) {
			args := v.(GetConnectionsArgs)
			r, err := GetConnections(ctx, &args, opts...)
			var s GetConnectionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetConnectionsResultOutput)
}

// A collection of arguments for invoking getConnections.
type GetConnectionsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput          `pulumi:"displayName"`
	Filters     GetConnectionsFilterArrayInput `pulumi:"filters"`
	// The current state of the Database Migration Deployment.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getConnections.
type GetConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsResult)(nil)).Elem()
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutput() GetConnectionsResultOutput {
	return o
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutputWithContext(ctx context.Context) GetConnectionsResultOutput {
	return o
}

func (o GetConnectionsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionsResult] {
	return pulumix.Output[GetConnectionsResult]{
		OutputState: o.OutputState,
	}
}

// OCID of the compartment where the secret containing the credentials will be created.
func (o GetConnectionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of connection_collection.
func (o GetConnectionsResultOutput) ConnectionCollections() GetConnectionsConnectionCollectionArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []GetConnectionsConnectionCollection { return v.ConnectionCollections }).(GetConnectionsConnectionCollectionArrayOutput)
}

// Database Connection display name identifier.
func (o GetConnectionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetConnectionsResultOutput) Filters() GetConnectionsFilterArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []GetConnectionsFilter { return v.Filters }).(GetConnectionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConnectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the Connection resource.
func (o GetConnectionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectionsResultOutput{})
}
