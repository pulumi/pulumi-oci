// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemigration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Migration resource in Oracle Cloud Infrastructure Database Migration service.
//
// Display Migration details.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseMigration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseMigration.GetMigration(ctx, &databasemigration.GetMigrationArgs{
//				MigrationId: oci_database_migration_migration.Test_migration.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMigration(ctx *pulumi.Context, args *LookupMigrationArgs, opts ...pulumi.InvokeOption) (*LookupMigrationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMigrationResult
	err := ctx.Invoke("oci:DatabaseMigration/getMigration:getMigration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMigration.
type LookupMigrationArgs struct {
	// The OCID of the migration
	MigrationId string `pulumi:"migrationId"`
}

// A collection of values returned by getMigration.
type LookupMigrationResult struct {
	// Optional Pre-Migration advisor settings.
	AdvisorSettings []GetMigrationAdvisorSetting `pulumi:"advisorSettings"`
	// The OCID of the registered on-premises ODMS Agent. Only valid for Offline Migrations.
	AgentId string `pulumi:"agentId"`
	// OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId string `pulumi:"compartmentId"`
	// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
	CredentialsSecretId string `pulumi:"credentialsSecretId"`
	CsvText             string `pulumi:"csvText"`
	// Data Transfer Medium details for the Migration.
	DataTransferMediumDetails []GetMigrationDataTransferMediumDetail `pulumi:"dataTransferMediumDetails"`
	// Optional settings for Data Pump Export and Import jobs
	DatapumpSettings []GetMigrationDatapumpSetting `pulumi:"datapumpSettings"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Migration Display Name
	DisplayName string `pulumi:"displayName"`
	// Optional additional properties for dump transfer.
	DumpTransferDetails []GetMigrationDumpTransferDetail `pulumi:"dumpTransferDetails"`
	// Database objects to exclude from migration. If 'includeObjects' are specified, only exclude object types can be specified with general wildcards (.*) for owner and objectName.
	ExcludeObjects []GetMigrationExcludeObject `pulumi:"excludeObjects"`
	// OCID of the current ODMS Job in execution for the Migration, if any.
	ExecutingJobId string `pulumi:"executingJobId"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Details about Oracle GoldenGate Microservices.
	GoldenGateDetails []GetMigrationGoldenGateDetail `pulumi:"goldenGateDetails"`
	// The OCID of the resource
	Id string `pulumi:"id"`
	// Database objects to include from migration.
	IncludeObjects []GetMigrationIncludeObject `pulumi:"includeObjects"`
	// Additional status related to the execution and current state of the Migration.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	MigrationId      string `pulumi:"migrationId"`
	// The OCID of the Source Container Database Connection.
	SourceContainerDatabaseConnectionId string `pulumi:"sourceContainerDatabaseConnectionId"`
	// The OCID of the Source Database Connection.
	SourceDatabaseConnectionId string `pulumi:"sourceDatabaseConnectionId"`
	// The current state of the Migration resource.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The OCID of the Target Database Connection.
	TargetDatabaseConnectionId string `pulumi:"targetDatabaseConnectionId"`
	// The time the Migration was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time of last Migration. An RFC3339 formatted datetime string.
	TimeLastMigration string `pulumi:"timeLastMigration"`
	// The time of the last Migration details update. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Migration type.
	Type string `pulumi:"type"`
	// Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails []GetMigrationVaultDetail `pulumi:"vaultDetails"`
	// Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
	WaitAfter string `pulumi:"waitAfter"`
}

func LookupMigrationOutput(ctx *pulumi.Context, args LookupMigrationOutputArgs, opts ...pulumi.InvokeOption) LookupMigrationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMigrationResult, error) {
			args := v.(LookupMigrationArgs)
			r, err := LookupMigration(ctx, &args, opts...)
			var s LookupMigrationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMigrationResultOutput)
}

// A collection of arguments for invoking getMigration.
type LookupMigrationOutputArgs struct {
	// The OCID of the migration
	MigrationId pulumi.StringInput `pulumi:"migrationId"`
}

func (LookupMigrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMigrationArgs)(nil)).Elem()
}

// A collection of values returned by getMigration.
type LookupMigrationResultOutput struct{ *pulumi.OutputState }

func (LookupMigrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMigrationResult)(nil)).Elem()
}

func (o LookupMigrationResultOutput) ToLookupMigrationResultOutput() LookupMigrationResultOutput {
	return o
}

func (o LookupMigrationResultOutput) ToLookupMigrationResultOutputWithContext(ctx context.Context) LookupMigrationResultOutput {
	return o
}

// Optional Pre-Migration advisor settings.
func (o LookupMigrationResultOutput) AdvisorSettings() GetMigrationAdvisorSettingArrayOutput {
	return o.ApplyT(func(v LookupMigrationResult) []GetMigrationAdvisorSetting { return v.AdvisorSettings }).(GetMigrationAdvisorSettingArrayOutput)
}

// The OCID of the registered on-premises ODMS Agent. Only valid for Offline Migrations.
func (o LookupMigrationResultOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.AgentId }).(pulumi.StringOutput)
}

// OCID of the compartment where the secret containing the credentials will be created.
func (o LookupMigrationResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
func (o LookupMigrationResultOutput) CredentialsSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.CredentialsSecretId }).(pulumi.StringOutput)
}

func (o LookupMigrationResultOutput) CsvText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.CsvText }).(pulumi.StringOutput)
}

// Data Transfer Medium details for the Migration.
func (o LookupMigrationResultOutput) DataTransferMediumDetails() GetMigrationDataTransferMediumDetailArrayOutput {
	return o.ApplyT(func(v LookupMigrationResult) []GetMigrationDataTransferMediumDetail {
		return v.DataTransferMediumDetails
	}).(GetMigrationDataTransferMediumDetailArrayOutput)
}

// Optional settings for Data Pump Export and Import jobs
func (o LookupMigrationResultOutput) DatapumpSettings() GetMigrationDatapumpSettingArrayOutput {
	return o.ApplyT(func(v LookupMigrationResult) []GetMigrationDatapumpSetting { return v.DatapumpSettings }).(GetMigrationDatapumpSettingArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupMigrationResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupMigrationResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Migration Display Name
func (o LookupMigrationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional additional properties for dump transfer.
func (o LookupMigrationResultOutput) DumpTransferDetails() GetMigrationDumpTransferDetailArrayOutput {
	return o.ApplyT(func(v LookupMigrationResult) []GetMigrationDumpTransferDetail { return v.DumpTransferDetails }).(GetMigrationDumpTransferDetailArrayOutput)
}

// Database objects to exclude from migration. If 'includeObjects' are specified, only exclude object types can be specified with general wildcards (.*) for owner and objectName.
func (o LookupMigrationResultOutput) ExcludeObjects() GetMigrationExcludeObjectArrayOutput {
	return o.ApplyT(func(v LookupMigrationResult) []GetMigrationExcludeObject { return v.ExcludeObjects }).(GetMigrationExcludeObjectArrayOutput)
}

// OCID of the current ODMS Job in execution for the Migration, if any.
func (o LookupMigrationResultOutput) ExecutingJobId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.ExecutingJobId }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupMigrationResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupMigrationResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Details about Oracle GoldenGate Microservices.
func (o LookupMigrationResultOutput) GoldenGateDetails() GetMigrationGoldenGateDetailArrayOutput {
	return o.ApplyT(func(v LookupMigrationResult) []GetMigrationGoldenGateDetail { return v.GoldenGateDetails }).(GetMigrationGoldenGateDetailArrayOutput)
}

// The OCID of the resource
func (o LookupMigrationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Database objects to include from migration.
func (o LookupMigrationResultOutput) IncludeObjects() GetMigrationIncludeObjectArrayOutput {
	return o.ApplyT(func(v LookupMigrationResult) []GetMigrationIncludeObject { return v.IncludeObjects }).(GetMigrationIncludeObjectArrayOutput)
}

// Additional status related to the execution and current state of the Migration.
func (o LookupMigrationResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o LookupMigrationResultOutput) MigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.MigrationId }).(pulumi.StringOutput)
}

// The OCID of the Source Container Database Connection.
func (o LookupMigrationResultOutput) SourceContainerDatabaseConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.SourceContainerDatabaseConnectionId }).(pulumi.StringOutput)
}

// The OCID of the Source Database Connection.
func (o LookupMigrationResultOutput) SourceDatabaseConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.SourceDatabaseConnectionId }).(pulumi.StringOutput)
}

// The current state of the Migration resource.
func (o LookupMigrationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupMigrationResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupMigrationResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The OCID of the Target Database Connection.
func (o LookupMigrationResultOutput) TargetDatabaseConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.TargetDatabaseConnectionId }).(pulumi.StringOutput)
}

// The time the Migration was created. An RFC3339 formatted datetime string.
func (o LookupMigrationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time of last Migration. An RFC3339 formatted datetime string.
func (o LookupMigrationResultOutput) TimeLastMigration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.TimeLastMigration }).(pulumi.StringOutput)
}

// The time of the last Migration details update. An RFC3339 formatted datetime string.
func (o LookupMigrationResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Migration type.
func (o LookupMigrationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.Type }).(pulumi.StringOutput)
}

// Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
func (o LookupMigrationResultOutput) VaultDetails() GetMigrationVaultDetailArrayOutput {
	return o.ApplyT(func(v LookupMigrationResult) []GetMigrationVaultDetail { return v.VaultDetails }).(GetMigrationVaultDetailArrayOutput)
}

// Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
func (o LookupMigrationResultOutput) WaitAfter() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMigrationResult) string { return v.WaitAfter }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMigrationResultOutput{})
}
