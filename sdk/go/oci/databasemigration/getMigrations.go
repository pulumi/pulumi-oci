// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemigration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Migrations in Oracle Cloud Infrastructure Database Migration service.
//
// List all Migrations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseMigration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseMigration.GetMigrations(ctx, &databasemigration.GetMigrationsArgs{
//				CompartmentId:    _var.Compartment_id,
//				DisplayName:      pulumi.StringRef(_var.Migration_display_name),
//				LifecycleDetails: pulumi.StringRef(_var.Migration_lifecycle_details),
//				State:            pulumi.StringRef(_var.Migration_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMigrations(ctx *pulumi.Context, args *GetMigrationsArgs, opts ...pulumi.InvokeOption) (*GetMigrationsResult, error) {
	var rv GetMigrationsResult
	err := ctx.Invoke("oci:DatabaseMigration/getMigrations:getMigrations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMigrations.
type GetMigrationsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string               `pulumi:"displayName"`
	Filters     []GetMigrationsFilter `pulumi:"filters"`
	// The lifecycle detailed status of the Migration.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The lifecycle state of the Migration.
	State *string `pulumi:"state"`
}

// A collection of values returned by getMigrations.
type GetMigrationsResult struct {
	// OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId string `pulumi:"compartmentId"`
	// Migration Display Name
	DisplayName *string               `pulumi:"displayName"`
	Filters     []GetMigrationsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Additional status related to the execution and current state of the Migration.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The list of migration_collection.
	MigrationCollections []GetMigrationsMigrationCollection `pulumi:"migrationCollections"`
	// The current state of the Migration resource.
	State *string `pulumi:"state"`
}

func GetMigrationsOutput(ctx *pulumi.Context, args GetMigrationsOutputArgs, opts ...pulumi.InvokeOption) GetMigrationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMigrationsResult, error) {
			args := v.(GetMigrationsArgs)
			r, err := GetMigrations(ctx, &args, opts...)
			var s GetMigrationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMigrationsResultOutput)
}

// A collection of arguments for invoking getMigrations.
type GetMigrationsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput         `pulumi:"displayName"`
	Filters     GetMigrationsFilterArrayInput `pulumi:"filters"`
	// The lifecycle detailed status of the Migration.
	LifecycleDetails pulumi.StringPtrInput `pulumi:"lifecycleDetails"`
	// The lifecycle state of the Migration.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetMigrationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMigrationsArgs)(nil)).Elem()
}

// A collection of values returned by getMigrations.
type GetMigrationsResultOutput struct{ *pulumi.OutputState }

func (GetMigrationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMigrationsResult)(nil)).Elem()
}

func (o GetMigrationsResultOutput) ToGetMigrationsResultOutput() GetMigrationsResultOutput {
	return o
}

func (o GetMigrationsResultOutput) ToGetMigrationsResultOutputWithContext(ctx context.Context) GetMigrationsResultOutput {
	return o
}

// OCID of the compartment where the secret containing the credentials will be created.
func (o GetMigrationsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Migration Display Name
func (o GetMigrationsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMigrationsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetMigrationsResultOutput) Filters() GetMigrationsFilterArrayOutput {
	return o.ApplyT(func(v GetMigrationsResult) []GetMigrationsFilter { return v.Filters }).(GetMigrationsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMigrationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMigrationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Additional status related to the execution and current state of the Migration.
func (o GetMigrationsResultOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMigrationsResult) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// The list of migration_collection.
func (o GetMigrationsResultOutput) MigrationCollections() GetMigrationsMigrationCollectionArrayOutput {
	return o.ApplyT(func(v GetMigrationsResult) []GetMigrationsMigrationCollection { return v.MigrationCollections }).(GetMigrationsMigrationCollectionArrayOutput)
}

// The current state of the Migration resource.
func (o GetMigrationsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMigrationsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMigrationsResultOutput{})
}
