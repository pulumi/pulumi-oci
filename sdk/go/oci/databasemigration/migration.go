// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasemigration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Migration resource in Oracle Cloud Infrastructure Database Migration service.
//
// Create a Migration resource that contains all the details to perform the
// database migration operation, such as source and destination database
// details, credentials, etc.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseMigration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseMigration.NewMigration(ctx, "testMigration", &DatabaseMigration.MigrationArgs{
//				CompartmentId:              pulumi.Any(_var.Compartment_id),
//				SourceDatabaseConnectionId: pulumi.Any(oci_database_migration_connection.Test_connection.Id),
//				TargetDatabaseConnectionId: pulumi.Any(oci_database_migration_connection.Test_connection.Id),
//				Type:                       pulumi.Any(_var.Migration_type),
//				AdvisorSettings: &databasemigration.MigrationAdvisorSettingsArgs{
//					IsIgnoreErrors: pulumi.Any(_var.Migration_advisor_settings_is_ignore_errors),
//					IsSkipAdvisor:  pulumi.Any(_var.Migration_advisor_settings_is_skip_advisor),
//				},
//				AgentId: pulumi.Any(oci_database_migration_agent.Test_agent.Id),
//				DataTransferMediumDetails: &databasemigration.MigrationDataTransferMediumDetailsArgs{
//					DatabaseLinkDetails: &databasemigration.MigrationDataTransferMediumDetailsDatabaseLinkDetailsArgs{
//						Name: pulumi.Any(_var.Migration_data_transfer_medium_details_database_link_details_name),
//						WalletBucket: &databasemigration.MigrationDataTransferMediumDetailsDatabaseLinkDetailsWalletBucketArgs{
//							Bucket:    pulumi.Any(_var.Migration_data_transfer_medium_details_database_link_details_wallet_bucket_bucket),
//							Namespace: pulumi.Any(_var.Migration_data_transfer_medium_details_database_link_details_wallet_bucket_namespace),
//						},
//					},
//					ObjectStorageDetails: &databasemigration.MigrationDataTransferMediumDetailsObjectStorageDetailsArgs{
//						Bucket:    pulumi.Any(_var.Migration_data_transfer_medium_details_object_storage_details_bucket),
//						Namespace: pulumi.Any(_var.Migration_data_transfer_medium_details_object_storage_details_namespace),
//					},
//				},
//				DatapumpSettings: &databasemigration.MigrationDatapumpSettingsArgs{
//					DataPumpParameters: &databasemigration.MigrationDatapumpSettingsDataPumpParametersArgs{
//						Estimate:                pulumi.Any(_var.Migration_datapump_settings_data_pump_parameters_estimate),
//						ExcludeParameters:       pulumi.Any(_var.Migration_datapump_settings_data_pump_parameters_exclude_parameters),
//						ExportParallelismDegree: pulumi.Any(_var.Migration_datapump_settings_data_pump_parameters_export_parallelism_degree),
//						ImportParallelismDegree: pulumi.Any(_var.Migration_datapump_settings_data_pump_parameters_import_parallelism_degree),
//						IsCluster:               pulumi.Any(_var.Migration_datapump_settings_data_pump_parameters_is_cluster),
//						TableExistsAction:       pulumi.Any(_var.Migration_datapump_settings_data_pump_parameters_table_exists_action),
//					},
//					ExportDirectoryObject: &databasemigration.MigrationDatapumpSettingsExportDirectoryObjectArgs{
//						Name: pulumi.Any(_var.Migration_datapump_settings_export_directory_object_name),
//						Path: pulumi.Any(_var.Migration_datapump_settings_export_directory_object_path),
//					},
//					ImportDirectoryObject: &databasemigration.MigrationDatapumpSettingsImportDirectoryObjectArgs{
//						Name: pulumi.Any(_var.Migration_datapump_settings_import_directory_object_name),
//						Path: pulumi.Any(_var.Migration_datapump_settings_import_directory_object_path),
//					},
//					JobMode: pulumi.Any(_var.Migration_datapump_settings_job_mode),
//					MetadataRemaps: databasemigration.MigrationDatapumpSettingsMetadataRemapArray{
//						&databasemigration.MigrationDatapumpSettingsMetadataRemapArgs{
//							NewValue: pulumi.Any(_var.Migration_datapump_settings_metadata_remaps_new_value),
//							OldValue: pulumi.Any(_var.Migration_datapump_settings_metadata_remaps_old_value),
//							Type:     pulumi.Any(_var.Migration_datapump_settings_metadata_remaps_type),
//						},
//					},
//				},
//				DefinedTags: pulumi.AnyMap{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				DisplayName: pulumi.Any(_var.Migration_display_name),
//				DumpTransferDetails: &databasemigration.MigrationDumpTransferDetailsArgs{
//					Source: &databasemigration.MigrationDumpTransferDetailsSourceArgs{
//						Kind:    pulumi.Any(_var.Migration_dump_transfer_details_source_kind),
//						OciHome: pulumi.Any(_var.Migration_dump_transfer_details_source_oci_home),
//					},
//					Target: &databasemigration.MigrationDumpTransferDetailsTargetArgs{
//						Kind:    pulumi.Any(_var.Migration_dump_transfer_details_target_kind),
//						OciHome: pulumi.Any(_var.Migration_dump_transfer_details_target_oci_home),
//					},
//				},
//				ExcludeObjects: databasemigration.MigrationExcludeObjectArray{
//					&databasemigration.MigrationExcludeObjectArgs{
//						Object: pulumi.Any(_var.Migration_exclude_objects_object),
//						Owner:  pulumi.Any(_var.Migration_exclude_objects_owner),
//						Type:   pulumi.Any(_var.Migration_exclude_objects_type),
//					},
//				},
//				FreeformTags: pulumi.AnyMap{
//					"bar-key": pulumi.Any("value"),
//				},
//				GoldenGateDetails: &databasemigration.MigrationGoldenGateDetailsArgs{
//					Hub: &databasemigration.MigrationGoldenGateDetailsHubArgs{
//						RestAdminCredentials: &databasemigration.MigrationGoldenGateDetailsHubRestAdminCredentialsArgs{
//							Password: pulumi.Any(_var.Migration_golden_gate_details_hub_rest_admin_credentials_password),
//							Username: pulumi.Any(_var.Migration_golden_gate_details_hub_rest_admin_credentials_username),
//						},
//						SourceDbAdminCredentials: &databasemigration.MigrationGoldenGateDetailsHubSourceDbAdminCredentialsArgs{
//							Password: pulumi.Any(_var.Migration_golden_gate_details_hub_source_db_admin_credentials_password),
//							Username: pulumi.Any(_var.Migration_golden_gate_details_hub_source_db_admin_credentials_username),
//						},
//						SourceMicroservicesDeploymentName: pulumi.Any(oci_apigateway_deployment.Test_deployment.Name),
//						TargetDbAdminCredentials: &databasemigration.MigrationGoldenGateDetailsHubTargetDbAdminCredentialsArgs{
//							Password: pulumi.Any(_var.Migration_golden_gate_details_hub_target_db_admin_credentials_password),
//							Username: pulumi.Any(_var.Migration_golden_gate_details_hub_target_db_admin_credentials_username),
//						},
//						TargetMicroservicesDeploymentName: pulumi.Any(oci_apigateway_deployment.Test_deployment.Name),
//						Url:                               pulumi.Any(_var.Migration_golden_gate_details_hub_url),
//						ComputeId:                         pulumi.Any(oci_database_migration_compute.Test_compute.Id),
//						SourceContainerDbAdminCredentials: &databasemigration.MigrationGoldenGateDetailsHubSourceContainerDbAdminCredentialsArgs{
//							Password: pulumi.Any(_var.Migration_golden_gate_details_hub_source_container_db_admin_credentials_password),
//							Username: pulumi.Any(_var.Migration_golden_gate_details_hub_source_container_db_admin_credentials_username),
//						},
//					},
//					Settings: &databasemigration.MigrationGoldenGateDetailsSettingsArgs{
//						AcceptableLag: pulumi.Any(_var.Migration_golden_gate_details_settings_acceptable_lag),
//						Extract: &databasemigration.MigrationGoldenGateDetailsSettingsExtractArgs{
//							LongTransDuration:  pulumi.Any(_var.Migration_golden_gate_details_settings_extract_long_trans_duration),
//							PerformanceProfile: pulumi.Any(_var.Migration_golden_gate_details_settings_extract_performance_profile),
//						},
//						Replicat: &databasemigration.MigrationGoldenGateDetailsSettingsReplicatArgs{
//							MapParallelism:      pulumi.Any(_var.Migration_golden_gate_details_settings_replicat_map_parallelism),
//							MaxApplyParallelism: pulumi.Any(_var.Migration_golden_gate_details_settings_replicat_max_apply_parallelism),
//							MinApplyParallelism: pulumi.Any(_var.Migration_golden_gate_details_settings_replicat_min_apply_parallelism),
//						},
//					},
//				},
//				IncludeObjects: databasemigration.MigrationIncludeObjectArray{
//					&databasemigration.MigrationIncludeObjectArgs{
//						Object: pulumi.Any(_var.Migration_include_objects_object),
//						Owner:  pulumi.Any(_var.Migration_include_objects_owner),
//						Type:   pulumi.Any(_var.Migration_include_objects_type),
//					},
//				},
//				SourceContainerDatabaseConnectionId: pulumi.Any(oci_database_migration_connection.Test_connection.Id),
//				VaultDetails: &databasemigration.MigrationVaultDetailsArgs{
//					CompartmentId: pulumi.Any(_var.Compartment_id),
//					KeyId:         pulumi.Any(oci_kms_key.Test_key.Id),
//					VaultId:       pulumi.Any(oci_kms_vault.Test_vault.Id),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Migrations can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DatabaseMigration/migration:Migration test_migration "id"
//
// ```
type Migration struct {
	pulumi.CustomResourceState

	// (Updatable) Optional Pre-Migration advisor settings.
	AdvisorSettings MigrationAdvisorSettingsOutput `pulumi:"advisorSettings"`
	// (Updatable) The OCID of the registered ODMS Agent. Only valid for Offline Logical Migrations.
	AgentId pulumi.StringOutput `pulumi:"agentId"`
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
	CredentialsSecretId pulumi.StringOutput `pulumi:"credentialsSecretId"`
	// (Updatable) Data Transfer Medium details for the Migration. If not specified, it will default to Database Link. Only one type of data transfer medium can be specified.
	DataTransferMediumDetails MigrationDataTransferMediumDetailsOutput `pulumi:"dataTransferMediumDetails"`
	// (Updatable) Optional settings for Data Pump Export and Import jobs
	DatapumpSettings MigrationDatapumpSettingsOutput `pulumi:"datapumpSettings"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Migration Display Name
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Optional additional properties for dump transfer.
	DumpTransferDetails MigrationDumpTransferDetailsOutput `pulumi:"dumpTransferDetails"`
	// (Updatable) Database objects to exclude from migration, cannot be specified alongside 'includeObjects'
	ExcludeObjects MigrationExcludeObjectArrayOutput `pulumi:"excludeObjects"`
	// OCID of the current ODMS Job in execution for the Migration, if any.
	ExecutingJobId pulumi.StringOutput `pulumi:"executingJobId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Details about Oracle GoldenGate Microservices. Required for online logical migration.
	GoldenGateDetails MigrationGoldenGateDetailsOutput `pulumi:"goldenGateDetails"`
	// (Updatable) Database objects to include from migration, cannot be specified alongside 'excludeObjects'
	IncludeObjects MigrationIncludeObjectArrayOutput `pulumi:"includeObjects"`
	// Additional status related to the execution and current state of the Migration.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The OCID of the Source Container Database Connection. Only used for Online migrations. Only Connections of type Non-Autonomous can be used as source container databases.
	SourceContainerDatabaseConnectionId pulumi.StringOutput `pulumi:"sourceContainerDatabaseConnectionId"`
	// (Updatable) The OCID of the Source Database Connection.
	SourceDatabaseConnectionId pulumi.StringOutput `pulumi:"sourceDatabaseConnectionId"`
	// The current state of the Migration resource.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// (Updatable) The OCID of the Target Database Connection.
	TargetDatabaseConnectionId pulumi.StringOutput `pulumi:"targetDatabaseConnectionId"`
	// The time the Migration was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time of last Migration. An RFC3339 formatted datetime string.
	TimeLastMigration pulumi.StringOutput `pulumi:"timeLastMigration"`
	// The time of the last Migration details update. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) Migration type.
	Type pulumi.StringOutput `pulumi:"type"`
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails MigrationVaultDetailsOutput `pulumi:"vaultDetails"`
	// Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
	WaitAfter pulumi.StringOutput `pulumi:"waitAfter"`
}

// NewMigration registers a new resource with the given unique name, arguments, and options.
func NewMigration(ctx *pulumi.Context,
	name string, args *MigrationArgs, opts ...pulumi.ResourceOption) (*Migration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.SourceDatabaseConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'SourceDatabaseConnectionId'")
	}
	if args.TargetDatabaseConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'TargetDatabaseConnectionId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource Migration
	err := ctx.RegisterResource("oci:DatabaseMigration/migration:Migration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMigration gets an existing Migration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMigration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MigrationState, opts ...pulumi.ResourceOption) (*Migration, error) {
	var resource Migration
	err := ctx.ReadResource("oci:DatabaseMigration/migration:Migration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Migration resources.
type migrationState struct {
	// (Updatable) Optional Pre-Migration advisor settings.
	AdvisorSettings *MigrationAdvisorSettings `pulumi:"advisorSettings"`
	// (Updatable) The OCID of the registered ODMS Agent. Only valid for Offline Logical Migrations.
	AgentId *string `pulumi:"agentId"`
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId *string `pulumi:"compartmentId"`
	// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
	CredentialsSecretId *string `pulumi:"credentialsSecretId"`
	// (Updatable) Data Transfer Medium details for the Migration. If not specified, it will default to Database Link. Only one type of data transfer medium can be specified.
	DataTransferMediumDetails *MigrationDataTransferMediumDetails `pulumi:"dataTransferMediumDetails"`
	// (Updatable) Optional settings for Data Pump Export and Import jobs
	DatapumpSettings *MigrationDatapumpSettings `pulumi:"datapumpSettings"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Migration Display Name
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Optional additional properties for dump transfer.
	DumpTransferDetails *MigrationDumpTransferDetails `pulumi:"dumpTransferDetails"`
	// (Updatable) Database objects to exclude from migration, cannot be specified alongside 'includeObjects'
	ExcludeObjects []MigrationExcludeObject `pulumi:"excludeObjects"`
	// OCID of the current ODMS Job in execution for the Migration, if any.
	ExecutingJobId *string `pulumi:"executingJobId"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Details about Oracle GoldenGate Microservices. Required for online logical migration.
	GoldenGateDetails *MigrationGoldenGateDetails `pulumi:"goldenGateDetails"`
	// (Updatable) Database objects to include from migration, cannot be specified alongside 'excludeObjects'
	IncludeObjects []MigrationIncludeObject `pulumi:"includeObjects"`
	// Additional status related to the execution and current state of the Migration.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The OCID of the Source Container Database Connection. Only used for Online migrations. Only Connections of type Non-Autonomous can be used as source container databases.
	SourceContainerDatabaseConnectionId *string `pulumi:"sourceContainerDatabaseConnectionId"`
	// (Updatable) The OCID of the Source Database Connection.
	SourceDatabaseConnectionId *string `pulumi:"sourceDatabaseConnectionId"`
	// The current state of the Migration resource.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// (Updatable) The OCID of the Target Database Connection.
	TargetDatabaseConnectionId *string `pulumi:"targetDatabaseConnectionId"`
	// The time the Migration was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time of last Migration. An RFC3339 formatted datetime string.
	TimeLastMigration *string `pulumi:"timeLastMigration"`
	// The time of the last Migration details update. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) Migration type.
	Type *string `pulumi:"type"`
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails *MigrationVaultDetails `pulumi:"vaultDetails"`
	// Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
	WaitAfter *string `pulumi:"waitAfter"`
}

type MigrationState struct {
	// (Updatable) Optional Pre-Migration advisor settings.
	AdvisorSettings MigrationAdvisorSettingsPtrInput
	// (Updatable) The OCID of the registered ODMS Agent. Only valid for Offline Logical Migrations.
	AgentId pulumi.StringPtrInput
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId pulumi.StringPtrInput
	// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
	CredentialsSecretId pulumi.StringPtrInput
	// (Updatable) Data Transfer Medium details for the Migration. If not specified, it will default to Database Link. Only one type of data transfer medium can be specified.
	DataTransferMediumDetails MigrationDataTransferMediumDetailsPtrInput
	// (Updatable) Optional settings for Data Pump Export and Import jobs
	DatapumpSettings MigrationDatapumpSettingsPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Migration Display Name
	DisplayName pulumi.StringPtrInput
	// (Updatable) Optional additional properties for dump transfer.
	DumpTransferDetails MigrationDumpTransferDetailsPtrInput
	// (Updatable) Database objects to exclude from migration, cannot be specified alongside 'includeObjects'
	ExcludeObjects MigrationExcludeObjectArrayInput
	// OCID of the current ODMS Job in execution for the Migration, if any.
	ExecutingJobId pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Details about Oracle GoldenGate Microservices. Required for online logical migration.
	GoldenGateDetails MigrationGoldenGateDetailsPtrInput
	// (Updatable) Database objects to include from migration, cannot be specified alongside 'excludeObjects'
	IncludeObjects MigrationIncludeObjectArrayInput
	// Additional status related to the execution and current state of the Migration.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The OCID of the Source Container Database Connection. Only used for Online migrations. Only Connections of type Non-Autonomous can be used as source container databases.
	SourceContainerDatabaseConnectionId pulumi.StringPtrInput
	// (Updatable) The OCID of the Source Database Connection.
	SourceDatabaseConnectionId pulumi.StringPtrInput
	// The current state of the Migration resource.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// (Updatable) The OCID of the Target Database Connection.
	TargetDatabaseConnectionId pulumi.StringPtrInput
	// The time the Migration was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time of last Migration. An RFC3339 formatted datetime string.
	TimeLastMigration pulumi.StringPtrInput
	// The time of the last Migration details update. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) Migration type.
	Type pulumi.StringPtrInput
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails MigrationVaultDetailsPtrInput
	// Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
	WaitAfter pulumi.StringPtrInput
}

func (MigrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*migrationState)(nil)).Elem()
}

type migrationArgs struct {
	// (Updatable) Optional Pre-Migration advisor settings.
	AdvisorSettings *MigrationAdvisorSettings `pulumi:"advisorSettings"`
	// (Updatable) The OCID of the registered ODMS Agent. Only valid for Offline Logical Migrations.
	AgentId *string `pulumi:"agentId"`
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Data Transfer Medium details for the Migration. If not specified, it will default to Database Link. Only one type of data transfer medium can be specified.
	DataTransferMediumDetails *MigrationDataTransferMediumDetails `pulumi:"dataTransferMediumDetails"`
	// (Updatable) Optional settings for Data Pump Export and Import jobs
	DatapumpSettings *MigrationDatapumpSettings `pulumi:"datapumpSettings"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Migration Display Name
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Optional additional properties for dump transfer.
	DumpTransferDetails *MigrationDumpTransferDetails `pulumi:"dumpTransferDetails"`
	// (Updatable) Database objects to exclude from migration, cannot be specified alongside 'includeObjects'
	ExcludeObjects []MigrationExcludeObject `pulumi:"excludeObjects"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Details about Oracle GoldenGate Microservices. Required for online logical migration.
	GoldenGateDetails *MigrationGoldenGateDetails `pulumi:"goldenGateDetails"`
	// (Updatable) Database objects to include from migration, cannot be specified alongside 'excludeObjects'
	IncludeObjects []MigrationIncludeObject `pulumi:"includeObjects"`
	// (Updatable) The OCID of the Source Container Database Connection. Only used for Online migrations. Only Connections of type Non-Autonomous can be used as source container databases.
	SourceContainerDatabaseConnectionId *string `pulumi:"sourceContainerDatabaseConnectionId"`
	// (Updatable) The OCID of the Source Database Connection.
	SourceDatabaseConnectionId string `pulumi:"sourceDatabaseConnectionId"`
	// (Updatable) The OCID of the Target Database Connection.
	TargetDatabaseConnectionId string `pulumi:"targetDatabaseConnectionId"`
	// (Updatable) Migration type.
	Type string `pulumi:"type"`
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails *MigrationVaultDetails `pulumi:"vaultDetails"`
}

// The set of arguments for constructing a Migration resource.
type MigrationArgs struct {
	// (Updatable) Optional Pre-Migration advisor settings.
	AdvisorSettings MigrationAdvisorSettingsPtrInput
	// (Updatable) The OCID of the registered ODMS Agent. Only valid for Offline Logical Migrations.
	AgentId pulumi.StringPtrInput
	// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
	CompartmentId pulumi.StringInput
	// (Updatable) Data Transfer Medium details for the Migration. If not specified, it will default to Database Link. Only one type of data transfer medium can be specified.
	DataTransferMediumDetails MigrationDataTransferMediumDetailsPtrInput
	// (Updatable) Optional settings for Data Pump Export and Import jobs
	DatapumpSettings MigrationDatapumpSettingsPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Migration Display Name
	DisplayName pulumi.StringPtrInput
	// (Updatable) Optional additional properties for dump transfer.
	DumpTransferDetails MigrationDumpTransferDetailsPtrInput
	// (Updatable) Database objects to exclude from migration, cannot be specified alongside 'includeObjects'
	ExcludeObjects MigrationExcludeObjectArrayInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Details about Oracle GoldenGate Microservices. Required for online logical migration.
	GoldenGateDetails MigrationGoldenGateDetailsPtrInput
	// (Updatable) Database objects to include from migration, cannot be specified alongside 'excludeObjects'
	IncludeObjects MigrationIncludeObjectArrayInput
	// (Updatable) The OCID of the Source Container Database Connection. Only used for Online migrations. Only Connections of type Non-Autonomous can be used as source container databases.
	SourceContainerDatabaseConnectionId pulumi.StringPtrInput
	// (Updatable) The OCID of the Source Database Connection.
	SourceDatabaseConnectionId pulumi.StringInput
	// (Updatable) The OCID of the Target Database Connection.
	TargetDatabaseConnectionId pulumi.StringInput
	// (Updatable) Migration type.
	Type pulumi.StringInput
	// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
	VaultDetails MigrationVaultDetailsPtrInput
}

func (MigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*migrationArgs)(nil)).Elem()
}

type MigrationInput interface {
	pulumi.Input

	ToMigrationOutput() MigrationOutput
	ToMigrationOutputWithContext(ctx context.Context) MigrationOutput
}

func (*Migration) ElementType() reflect.Type {
	return reflect.TypeOf((**Migration)(nil)).Elem()
}

func (i *Migration) ToMigrationOutput() MigrationOutput {
	return i.ToMigrationOutputWithContext(context.Background())
}

func (i *Migration) ToMigrationOutputWithContext(ctx context.Context) MigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationOutput)
}

// MigrationArrayInput is an input type that accepts MigrationArray and MigrationArrayOutput values.
// You can construct a concrete instance of `MigrationArrayInput` via:
//
//	MigrationArray{ MigrationArgs{...} }
type MigrationArrayInput interface {
	pulumi.Input

	ToMigrationArrayOutput() MigrationArrayOutput
	ToMigrationArrayOutputWithContext(context.Context) MigrationArrayOutput
}

type MigrationArray []MigrationInput

func (MigrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Migration)(nil)).Elem()
}

func (i MigrationArray) ToMigrationArrayOutput() MigrationArrayOutput {
	return i.ToMigrationArrayOutputWithContext(context.Background())
}

func (i MigrationArray) ToMigrationArrayOutputWithContext(ctx context.Context) MigrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationArrayOutput)
}

// MigrationMapInput is an input type that accepts MigrationMap and MigrationMapOutput values.
// You can construct a concrete instance of `MigrationMapInput` via:
//
//	MigrationMap{ "key": MigrationArgs{...} }
type MigrationMapInput interface {
	pulumi.Input

	ToMigrationMapOutput() MigrationMapOutput
	ToMigrationMapOutputWithContext(context.Context) MigrationMapOutput
}

type MigrationMap map[string]MigrationInput

func (MigrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Migration)(nil)).Elem()
}

func (i MigrationMap) ToMigrationMapOutput() MigrationMapOutput {
	return i.ToMigrationMapOutputWithContext(context.Background())
}

func (i MigrationMap) ToMigrationMapOutputWithContext(ctx context.Context) MigrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationMapOutput)
}

type MigrationOutput struct{ *pulumi.OutputState }

func (MigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Migration)(nil)).Elem()
}

func (o MigrationOutput) ToMigrationOutput() MigrationOutput {
	return o
}

func (o MigrationOutput) ToMigrationOutputWithContext(ctx context.Context) MigrationOutput {
	return o
}

// (Updatable) Optional Pre-Migration advisor settings.
func (o MigrationOutput) AdvisorSettings() MigrationAdvisorSettingsOutput {
	return o.ApplyT(func(v *Migration) MigrationAdvisorSettingsOutput { return v.AdvisorSettings }).(MigrationAdvisorSettingsOutput)
}

// (Updatable) The OCID of the registered ODMS Agent. Only valid for Offline Logical Migrations.
func (o MigrationOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.AgentId }).(pulumi.StringOutput)
}

// (Updatable) OCID of the compartment where the secret containing the credentials will be created.
func (o MigrationOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
func (o MigrationOutput) CredentialsSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.CredentialsSecretId }).(pulumi.StringOutput)
}

// (Updatable) Data Transfer Medium details for the Migration. If not specified, it will default to Database Link. Only one type of data transfer medium can be specified.
func (o MigrationOutput) DataTransferMediumDetails() MigrationDataTransferMediumDetailsOutput {
	return o.ApplyT(func(v *Migration) MigrationDataTransferMediumDetailsOutput { return v.DataTransferMediumDetails }).(MigrationDataTransferMediumDetailsOutput)
}

// (Updatable) Optional settings for Data Pump Export and Import jobs
func (o MigrationOutput) DatapumpSettings() MigrationDatapumpSettingsOutput {
	return o.ApplyT(func(v *Migration) MigrationDatapumpSettingsOutput { return v.DatapumpSettings }).(MigrationDatapumpSettingsOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o MigrationOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Migration) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Migration Display Name
func (o MigrationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Optional additional properties for dump transfer.
func (o MigrationOutput) DumpTransferDetails() MigrationDumpTransferDetailsOutput {
	return o.ApplyT(func(v *Migration) MigrationDumpTransferDetailsOutput { return v.DumpTransferDetails }).(MigrationDumpTransferDetailsOutput)
}

// (Updatable) Database objects to exclude from migration, cannot be specified alongside 'includeObjects'
func (o MigrationOutput) ExcludeObjects() MigrationExcludeObjectArrayOutput {
	return o.ApplyT(func(v *Migration) MigrationExcludeObjectArrayOutput { return v.ExcludeObjects }).(MigrationExcludeObjectArrayOutput)
}

// OCID of the current ODMS Job in execution for the Migration, if any.
func (o MigrationOutput) ExecutingJobId() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.ExecutingJobId }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o MigrationOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Migration) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) Details about Oracle GoldenGate Microservices. Required for online logical migration.
func (o MigrationOutput) GoldenGateDetails() MigrationGoldenGateDetailsOutput {
	return o.ApplyT(func(v *Migration) MigrationGoldenGateDetailsOutput { return v.GoldenGateDetails }).(MigrationGoldenGateDetailsOutput)
}

// (Updatable) Database objects to include from migration, cannot be specified alongside 'excludeObjects'
func (o MigrationOutput) IncludeObjects() MigrationIncludeObjectArrayOutput {
	return o.ApplyT(func(v *Migration) MigrationIncludeObjectArrayOutput { return v.IncludeObjects }).(MigrationIncludeObjectArrayOutput)
}

// Additional status related to the execution and current state of the Migration.
func (o MigrationOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the Source Container Database Connection. Only used for Online migrations. Only Connections of type Non-Autonomous can be used as source container databases.
func (o MigrationOutput) SourceContainerDatabaseConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.SourceContainerDatabaseConnectionId }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the Source Database Connection.
func (o MigrationOutput) SourceDatabaseConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.SourceDatabaseConnectionId }).(pulumi.StringOutput)
}

// The current state of the Migration resource.
func (o MigrationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o MigrationOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Migration) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// (Updatable) The OCID of the Target Database Connection.
func (o MigrationOutput) TargetDatabaseConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.TargetDatabaseConnectionId }).(pulumi.StringOutput)
}

// The time the Migration was created. An RFC3339 formatted datetime string.
func (o MigrationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time of last Migration. An RFC3339 formatted datetime string.
func (o MigrationOutput) TimeLastMigration() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.TimeLastMigration }).(pulumi.StringOutput)
}

// The time of the last Migration details update. An RFC3339 formatted datetime string.
func (o MigrationOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) Migration type.
func (o MigrationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
func (o MigrationOutput) VaultDetails() MigrationVaultDetailsOutput {
	return o.ApplyT(func(v *Migration) MigrationVaultDetailsOutput { return v.VaultDetails }).(MigrationVaultDetailsOutput)
}

// Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
func (o MigrationOutput) WaitAfter() pulumi.StringOutput {
	return o.ApplyT(func(v *Migration) pulumi.StringOutput { return v.WaitAfter }).(pulumi.StringOutput)
}

type MigrationArrayOutput struct{ *pulumi.OutputState }

func (MigrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Migration)(nil)).Elem()
}

func (o MigrationArrayOutput) ToMigrationArrayOutput() MigrationArrayOutput {
	return o
}

func (o MigrationArrayOutput) ToMigrationArrayOutputWithContext(ctx context.Context) MigrationArrayOutput {
	return o
}

func (o MigrationArrayOutput) Index(i pulumi.IntInput) MigrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Migration {
		return vs[0].([]*Migration)[vs[1].(int)]
	}).(MigrationOutput)
}

type MigrationMapOutput struct{ *pulumi.OutputState }

func (MigrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Migration)(nil)).Elem()
}

func (o MigrationMapOutput) ToMigrationMapOutput() MigrationMapOutput {
	return o
}

func (o MigrationMapOutput) ToMigrationMapOutputWithContext(ctx context.Context) MigrationMapOutput {
	return o
}

func (o MigrationMapOutput) MapIndex(k pulumi.StringInput) MigrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Migration {
		return vs[0].(map[string]*Migration)[vs[1].(string)]
	}).(MigrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationInput)(nil)).Elem(), &Migration{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationArrayInput)(nil)).Elem(), MigrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationMapInput)(nil)).Elem(), MigrationMap{})
	pulumi.RegisterOutputType(MigrationOutput{})
	pulumi.RegisterOutputType(MigrationArrayOutput{})
	pulumi.RegisterOutputType(MigrationMapOutput{})
}
