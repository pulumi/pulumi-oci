// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasetools

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource provides the Database Tools Connection resource in Oracle Cloud Infrastructure Database Tools service.
//
// Creates a new Database Tools connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseTools"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseTools.NewDatabaseToolsConnection(ctx, "testDatabaseToolsConnection", &DatabaseTools.DatabaseToolsConnectionArgs{
//				CompartmentId:      pulumi.Any(_var.Compartment_id),
//				DisplayName:        pulumi.Any(_var.Database_tools_connection_display_name),
//				Type:               pulumi.Any(_var.Database_tools_connection_type),
//				AdvancedProperties: pulumi.Any(_var.Database_tools_connection_advanced_properties),
//				ConnectionString:   pulumi.Any(_var.Database_tools_connection_connection_string),
//				DefinedTags: pulumi.AnyMap{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				FreeformTags: pulumi.AnyMap{
//					"bar-key": pulumi.Any("value"),
//				},
//				KeyStores: databasetools.DatabaseToolsConnectionKeyStoreArray{
//					&databasetools.DatabaseToolsConnectionKeyStoreArgs{
//						KeyStoreContent: &databasetools.DatabaseToolsConnectionKeyStoreKeyStoreContentArgs{
//							ValueType: pulumi.Any(_var.Database_tools_connection_key_stores_key_store_content_value_type),
//							SecretId:  pulumi.Any(oci_vault_secret.Test_secret.Id),
//						},
//						KeyStorePassword: &databasetools.DatabaseToolsConnectionKeyStoreKeyStorePasswordArgs{
//							ValueType: pulumi.Any(_var.Database_tools_connection_key_stores_key_store_password_value_type),
//							SecretId:  pulumi.Any(oci_vault_secret.Test_secret.Id),
//						},
//						KeyStoreType: pulumi.Any(_var.Database_tools_connection_key_stores_key_store_type),
//					},
//				},
//				PrivateEndpointId: pulumi.Any(oci_dataflow_private_endpoint.Test_private_endpoint.Id),
//				RelatedResource: &databasetools.DatabaseToolsConnectionRelatedResourceArgs{
//					EntityType: pulumi.Any(_var.Database_tools_connection_related_resource_entity_type),
//					Identifier: pulumi.Any(_var.Database_tools_connection_related_resource_identifier),
//				},
//				UserName: pulumi.Any(oci_identity_user.Test_user.Name),
//				UserPassword: &databasetools.DatabaseToolsConnectionUserPasswordArgs{
//					SecretId:  pulumi.Any(oci_vault_secret.Test_secret.Id),
//					ValueType: pulumi.Any(_var.Database_tools_connection_user_password_value_type),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DatabaseToolsConnections can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection test_database_tools_connection "id"
//
// ```
type DatabaseToolsConnection struct {
	pulumi.CustomResourceState

	// (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
	AdvancedProperties pulumi.MapOutput `pulumi:"advancedProperties"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
	ConnectionString pulumi.StringOutput `pulumi:"connectionString"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
	KeyStores DatabaseToolsConnectionKeyStoreArrayOutput `pulumi:"keyStores"`
	// A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
	PrivateEndpointId pulumi.StringOutput `pulumi:"privateEndpointId"`
	// (Updatable) The related resource
	RelatedResource DatabaseToolsConnectionRelatedResourceOutput `pulumi:"relatedResource"`
	// The current state of the Database Tools connection.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the Database Tools connection was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) The DatabaseToolsConnection type.
	Type pulumi.StringOutput `pulumi:"type"`
	// (Updatable) The database user name.
	UserName pulumi.StringOutput `pulumi:"userName"`
	// (Updatable) The user password.
	UserPassword DatabaseToolsConnectionUserPasswordOutput `pulumi:"userPassword"`
}

// NewDatabaseToolsConnection registers a new resource with the given unique name, arguments, and options.
func NewDatabaseToolsConnection(ctx *pulumi.Context,
	name string, args *DatabaseToolsConnectionArgs, opts ...pulumi.ResourceOption) (*DatabaseToolsConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DatabaseToolsConnection
	err := ctx.RegisterResource("oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseToolsConnection gets an existing DatabaseToolsConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseToolsConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseToolsConnectionState, opts ...pulumi.ResourceOption) (*DatabaseToolsConnection, error) {
	var resource DatabaseToolsConnection
	err := ctx.ReadResource("oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseToolsConnection resources.
type databaseToolsConnectionState struct {
	// (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
	AdvancedProperties map[string]interface{} `pulumi:"advancedProperties"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
	ConnectionString *string `pulumi:"connectionString"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
	KeyStores []DatabaseToolsConnectionKeyStore `pulumi:"keyStores"`
	// A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
	PrivateEndpointId *string `pulumi:"privateEndpointId"`
	// (Updatable) The related resource
	RelatedResource *DatabaseToolsConnectionRelatedResource `pulumi:"relatedResource"`
	// The current state of the Database Tools connection.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the Database Tools connection was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) The DatabaseToolsConnection type.
	Type *string `pulumi:"type"`
	// (Updatable) The database user name.
	UserName *string `pulumi:"userName"`
	// (Updatable) The user password.
	UserPassword *DatabaseToolsConnectionUserPassword `pulumi:"userPassword"`
}

type DatabaseToolsConnectionState struct {
	// (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
	AdvancedProperties pulumi.MapInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
	ConnectionString pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
	KeyStores DatabaseToolsConnectionKeyStoreArrayInput
	// A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
	PrivateEndpointId pulumi.StringPtrInput
	// (Updatable) The related resource
	RelatedResource DatabaseToolsConnectionRelatedResourcePtrInput
	// The current state of the Database Tools connection.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the Database Tools connection was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) The DatabaseToolsConnection type.
	Type pulumi.StringPtrInput
	// (Updatable) The database user name.
	UserName pulumi.StringPtrInput
	// (Updatable) The user password.
	UserPassword DatabaseToolsConnectionUserPasswordPtrInput
}

func (DatabaseToolsConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseToolsConnectionState)(nil)).Elem()
}

type databaseToolsConnectionArgs struct {
	// (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
	AdvancedProperties map[string]interface{} `pulumi:"advancedProperties"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
	ConnectionString *string `pulumi:"connectionString"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
	KeyStores []DatabaseToolsConnectionKeyStore `pulumi:"keyStores"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
	PrivateEndpointId *string `pulumi:"privateEndpointId"`
	// (Updatable) The related resource
	RelatedResource *DatabaseToolsConnectionRelatedResource `pulumi:"relatedResource"`
	// (Updatable) The DatabaseToolsConnection type.
	Type string `pulumi:"type"`
	// (Updatable) The database user name.
	UserName *string `pulumi:"userName"`
	// (Updatable) The user password.
	UserPassword *DatabaseToolsConnectionUserPassword `pulumi:"userPassword"`
}

// The set of arguments for constructing a DatabaseToolsConnection resource.
type DatabaseToolsConnectionArgs struct {
	// (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
	AdvancedProperties pulumi.MapInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId pulumi.StringInput
	// (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
	ConnectionString pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
	KeyStores DatabaseToolsConnectionKeyStoreArrayInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
	PrivateEndpointId pulumi.StringPtrInput
	// (Updatable) The related resource
	RelatedResource DatabaseToolsConnectionRelatedResourcePtrInput
	// (Updatable) The DatabaseToolsConnection type.
	Type pulumi.StringInput
	// (Updatable) The database user name.
	UserName pulumi.StringPtrInput
	// (Updatable) The user password.
	UserPassword DatabaseToolsConnectionUserPasswordPtrInput
}

func (DatabaseToolsConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseToolsConnectionArgs)(nil)).Elem()
}

type DatabaseToolsConnectionInput interface {
	pulumi.Input

	ToDatabaseToolsConnectionOutput() DatabaseToolsConnectionOutput
	ToDatabaseToolsConnectionOutputWithContext(ctx context.Context) DatabaseToolsConnectionOutput
}

func (*DatabaseToolsConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseToolsConnection)(nil)).Elem()
}

func (i *DatabaseToolsConnection) ToDatabaseToolsConnectionOutput() DatabaseToolsConnectionOutput {
	return i.ToDatabaseToolsConnectionOutputWithContext(context.Background())
}

func (i *DatabaseToolsConnection) ToDatabaseToolsConnectionOutputWithContext(ctx context.Context) DatabaseToolsConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseToolsConnectionOutput)
}

func (i *DatabaseToolsConnection) ToOutput(ctx context.Context) pulumix.Output[*DatabaseToolsConnection] {
	return pulumix.Output[*DatabaseToolsConnection]{
		OutputState: i.ToDatabaseToolsConnectionOutputWithContext(ctx).OutputState,
	}
}

// DatabaseToolsConnectionArrayInput is an input type that accepts DatabaseToolsConnectionArray and DatabaseToolsConnectionArrayOutput values.
// You can construct a concrete instance of `DatabaseToolsConnectionArrayInput` via:
//
//	DatabaseToolsConnectionArray{ DatabaseToolsConnectionArgs{...} }
type DatabaseToolsConnectionArrayInput interface {
	pulumi.Input

	ToDatabaseToolsConnectionArrayOutput() DatabaseToolsConnectionArrayOutput
	ToDatabaseToolsConnectionArrayOutputWithContext(context.Context) DatabaseToolsConnectionArrayOutput
}

type DatabaseToolsConnectionArray []DatabaseToolsConnectionInput

func (DatabaseToolsConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseToolsConnection)(nil)).Elem()
}

func (i DatabaseToolsConnectionArray) ToDatabaseToolsConnectionArrayOutput() DatabaseToolsConnectionArrayOutput {
	return i.ToDatabaseToolsConnectionArrayOutputWithContext(context.Background())
}

func (i DatabaseToolsConnectionArray) ToDatabaseToolsConnectionArrayOutputWithContext(ctx context.Context) DatabaseToolsConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseToolsConnectionArrayOutput)
}

func (i DatabaseToolsConnectionArray) ToOutput(ctx context.Context) pulumix.Output[[]*DatabaseToolsConnection] {
	return pulumix.Output[[]*DatabaseToolsConnection]{
		OutputState: i.ToDatabaseToolsConnectionArrayOutputWithContext(ctx).OutputState,
	}
}

// DatabaseToolsConnectionMapInput is an input type that accepts DatabaseToolsConnectionMap and DatabaseToolsConnectionMapOutput values.
// You can construct a concrete instance of `DatabaseToolsConnectionMapInput` via:
//
//	DatabaseToolsConnectionMap{ "key": DatabaseToolsConnectionArgs{...} }
type DatabaseToolsConnectionMapInput interface {
	pulumi.Input

	ToDatabaseToolsConnectionMapOutput() DatabaseToolsConnectionMapOutput
	ToDatabaseToolsConnectionMapOutputWithContext(context.Context) DatabaseToolsConnectionMapOutput
}

type DatabaseToolsConnectionMap map[string]DatabaseToolsConnectionInput

func (DatabaseToolsConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseToolsConnection)(nil)).Elem()
}

func (i DatabaseToolsConnectionMap) ToDatabaseToolsConnectionMapOutput() DatabaseToolsConnectionMapOutput {
	return i.ToDatabaseToolsConnectionMapOutputWithContext(context.Background())
}

func (i DatabaseToolsConnectionMap) ToDatabaseToolsConnectionMapOutputWithContext(ctx context.Context) DatabaseToolsConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseToolsConnectionMapOutput)
}

func (i DatabaseToolsConnectionMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*DatabaseToolsConnection] {
	return pulumix.Output[map[string]*DatabaseToolsConnection]{
		OutputState: i.ToDatabaseToolsConnectionMapOutputWithContext(ctx).OutputState,
	}
}

type DatabaseToolsConnectionOutput struct{ *pulumi.OutputState }

func (DatabaseToolsConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseToolsConnection)(nil)).Elem()
}

func (o DatabaseToolsConnectionOutput) ToDatabaseToolsConnectionOutput() DatabaseToolsConnectionOutput {
	return o
}

func (o DatabaseToolsConnectionOutput) ToDatabaseToolsConnectionOutputWithContext(ctx context.Context) DatabaseToolsConnectionOutput {
	return o
}

func (o DatabaseToolsConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[*DatabaseToolsConnection] {
	return pulumix.Output[*DatabaseToolsConnection]{
		OutputState: o.OutputState,
	}
}

// (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
func (o DatabaseToolsConnectionOutput) AdvancedProperties() pulumi.MapOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.MapOutput { return v.AdvancedProperties }).(pulumi.MapOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
func (o DatabaseToolsConnectionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
func (o DatabaseToolsConnectionOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.StringOutput { return v.ConnectionString }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o DatabaseToolsConnectionOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o DatabaseToolsConnectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o DatabaseToolsConnectionOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
func (o DatabaseToolsConnectionOutput) KeyStores() DatabaseToolsConnectionKeyStoreArrayOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) DatabaseToolsConnectionKeyStoreArrayOutput { return v.KeyStores }).(DatabaseToolsConnectionKeyStoreArrayOutput)
}

// A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
func (o DatabaseToolsConnectionOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
func (o DatabaseToolsConnectionOutput) PrivateEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.StringOutput { return v.PrivateEndpointId }).(pulumi.StringOutput)
}

// (Updatable) The related resource
func (o DatabaseToolsConnectionOutput) RelatedResource() DatabaseToolsConnectionRelatedResourceOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) DatabaseToolsConnectionRelatedResourceOutput {
		return v.RelatedResource
	}).(DatabaseToolsConnectionRelatedResourceOutput)
}

// The current state of the Database Tools connection.
func (o DatabaseToolsConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o DatabaseToolsConnectionOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the Database Tools connection was created. An RFC3339 formatted datetime string.
func (o DatabaseToolsConnectionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
func (o DatabaseToolsConnectionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) The DatabaseToolsConnection type.
func (o DatabaseToolsConnectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// (Updatable) The database user name.
func (o DatabaseToolsConnectionOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

// (Updatable) The user password.
func (o DatabaseToolsConnectionOutput) UserPassword() DatabaseToolsConnectionUserPasswordOutput {
	return o.ApplyT(func(v *DatabaseToolsConnection) DatabaseToolsConnectionUserPasswordOutput { return v.UserPassword }).(DatabaseToolsConnectionUserPasswordOutput)
}

type DatabaseToolsConnectionArrayOutput struct{ *pulumi.OutputState }

func (DatabaseToolsConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseToolsConnection)(nil)).Elem()
}

func (o DatabaseToolsConnectionArrayOutput) ToDatabaseToolsConnectionArrayOutput() DatabaseToolsConnectionArrayOutput {
	return o
}

func (o DatabaseToolsConnectionArrayOutput) ToDatabaseToolsConnectionArrayOutputWithContext(ctx context.Context) DatabaseToolsConnectionArrayOutput {
	return o
}

func (o DatabaseToolsConnectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*DatabaseToolsConnection] {
	return pulumix.Output[[]*DatabaseToolsConnection]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseToolsConnectionArrayOutput) Index(i pulumi.IntInput) DatabaseToolsConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DatabaseToolsConnection {
		return vs[0].([]*DatabaseToolsConnection)[vs[1].(int)]
	}).(DatabaseToolsConnectionOutput)
}

type DatabaseToolsConnectionMapOutput struct{ *pulumi.OutputState }

func (DatabaseToolsConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseToolsConnection)(nil)).Elem()
}

func (o DatabaseToolsConnectionMapOutput) ToDatabaseToolsConnectionMapOutput() DatabaseToolsConnectionMapOutput {
	return o
}

func (o DatabaseToolsConnectionMapOutput) ToDatabaseToolsConnectionMapOutputWithContext(ctx context.Context) DatabaseToolsConnectionMapOutput {
	return o
}

func (o DatabaseToolsConnectionMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*DatabaseToolsConnection] {
	return pulumix.Output[map[string]*DatabaseToolsConnection]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseToolsConnectionMapOutput) MapIndex(k pulumi.StringInput) DatabaseToolsConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DatabaseToolsConnection {
		return vs[0].(map[string]*DatabaseToolsConnection)[vs[1].(string)]
	}).(DatabaseToolsConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseToolsConnectionInput)(nil)).Elem(), &DatabaseToolsConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseToolsConnectionArrayInput)(nil)).Elem(), DatabaseToolsConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseToolsConnectionMapInput)(nil)).Elem(), DatabaseToolsConnectionMap{})
	pulumi.RegisterOutputType(DatabaseToolsConnectionOutput{})
	pulumi.RegisterOutputType(DatabaseToolsConnectionArrayOutput{})
	pulumi.RegisterOutputType(DatabaseToolsConnectionMapOutput{})
}
