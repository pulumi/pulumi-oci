// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databasetools

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Database Tools Connection resource in Oracle Cloud Infrastructure Database Tools service.
//
// Creates a new Database Tools connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseTools"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseTools.NewDatabaseToolsConnection(ctx, "testDatabaseToolsConnection", &DatabaseTools.DatabaseToolsConnectionArgs{
//				CompartmentId:      pulumi.Any(_var.Compartment_id),
//				DisplayName:        pulumi.Any(_var.Database_tools_connection_display_name),
//				Type:               pulumi.Any(_var.Database_tools_connection_type),
//				AdvancedProperties: pulumi.Any(_var.Database_tools_connection_advanced_properties),
//				ConnectionString:   pulumi.Any(_var.Database_tools_connection_connection_string),
//				DefinedTags: pulumi.AnyMap{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				FreeformTags: pulumi.AnyMap{
//					"bar-key": pulumi.Any("value"),
//				},
//				KeyStores: databasetools.DatabaseToolsConnectionKeyStoreArray{
//					&databasetools.DatabaseToolsConnectionKeyStoreArgs{
//						KeyStoreContent: &databasetools.DatabaseToolsConnectionKeyStoreKeyStoreContentArgs{
//							ValueType: pulumi.Any(_var.Database_tools_connection_key_stores_key_store_content_value_type),
//							SecretId:  pulumi.Any(oci_vault_secret.Test_secret.Id),
//						},
//						KeyStorePassword: &databasetools.DatabaseToolsConnectionKeyStoreKeyStorePasswordArgs{
//							ValueType: pulumi.Any(_var.Database_tools_connection_key_stores_key_store_password_value_type),
//							SecretId:  pulumi.Any(oci_vault_secret.Test_secret.Id),
//						},
//						KeyStoreType: pulumi.Any(_var.Database_tools_connection_key_stores_key_store_type),
//					},
//				},
//				PrivateEndpointId: pulumi.Any(oci_dataflow_private_endpoint.Test_private_endpoint.Id),
//				RelatedResource: &databasetools.DatabaseToolsConnectionRelatedResourceArgs{
//					EntityType: pulumi.Any(_var.Database_tools_connection_related_resource_entity_type),
//					Identifier: pulumi.Any(_var.Database_tools_connection_related_resource_identifier),
//				},
//				UserName: pulumi.Any(oci_identity_user.Test_user.Name),
//				UserPassword: &databasetools.DatabaseToolsConnectionUserPasswordArgs{
//					SecretId:  pulumi.Any(oci_vault_secret.Test_secret.Id),
//					ValueType: pulumi.Any(_var.Database_tools_connection_user_password_value_type),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DatabaseToolsConnections can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection test_database_tools_connection "id"
//
// ```
type DatabaseToolsConnection struct {
	pulumi.CustomResourceState

	// (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
	AdvancedProperties pulumi.MapOutput `pulumi:"advancedProperties"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
	ConnectionString pulumi.StringOutput `pulumi:"connectionString"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
	KeyStores DatabaseToolsConnectionKeyStoreArrayOutput `pulumi:"keyStores"`
	// A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
	PrivateEndpointId pulumi.StringOutput `pulumi:"privateEndpointId"`
	// (Updatable) The related resource
	RelatedResource DatabaseToolsConnectionRelatedResourceOutput `pulumi:"relatedResource"`
	// The current state of the Database Tools connection.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the Database Tools connection was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) The DatabaseToolsConnection type.
	Type pulumi.StringOutput `pulumi:"type"`
	// (Updatable) The database user name.
	UserName pulumi.StringOutput `pulumi:"userName"`
	// (Updatable) The user password.
	UserPassword DatabaseToolsConnectionUserPasswordOutput `pulumi:"userPassword"`
}

// NewDatabaseToolsConnection registers a new resource with the given unique name, arguments, and options.
func NewDatabaseToolsConnection(ctx *pulumi.Context,
	name string, args *DatabaseToolsConnectionArgs, opts ...pulumi.ResourceOption) (*DatabaseToolsConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource DatabaseToolsConnection
	err := ctx.RegisterResource("oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseToolsConnection gets an existing DatabaseToolsConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseToolsConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseToolsConnectionState, opts ...pulumi.ResourceOption) (*DatabaseToolsConnection, error) {
	var resource DatabaseToolsConnection
	err := ctx.ReadResource("oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseToolsConnection resources.
type databaseToolsConnectionState struct {
	// (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
	AdvancedProperties map[string]interface{} `pulumi:"advancedProperties"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
	ConnectionString *string `pulumi:"connectionString"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
	KeyStores []DatabaseToolsConnectionKeyStore `pulumi:"keyStores"`
	// A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
	PrivateEndpointId *string `pulumi:"privateEndpointId"`
	// (Updatable) The related resource
	RelatedResource *DatabaseToolsConnectionRelatedResource `pulumi:"relatedResource"`
	// The current state of the Database Tools connection.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the Database Tools connection was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) The DatabaseToolsConnection type.
	Type *string `pulumi:"type"`
	// (Updatable) The database user name.
	UserName *string `pulumi:"userName"`
	// (Updatable) The user password.
	UserPassword *DatabaseToolsConnectionUserPassword `pulumi:"userPassword"`
}

type DatabaseToolsConnectionState struct {
	// (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
	AdvancedProperties pulumi.MapInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
	ConnectionString pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
	KeyStores DatabaseToolsConnectionKeyStoreArrayInput
	// A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
	PrivateEndpointId pulumi.StringPtrInput
	// (Updatable) The related resource
	RelatedResource DatabaseToolsConnectionRelatedResourcePtrInput
	// The current state of the Database Tools connection.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the Database Tools connection was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) The DatabaseToolsConnection type.
	Type pulumi.StringPtrInput
	// (Updatable) The database user name.
	UserName pulumi.StringPtrInput
	// (Updatable) The user password.
	UserPassword DatabaseToolsConnectionUserPasswordPtrInput
}

func (DatabaseToolsConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseToolsConnectionState)(nil)).Elem()
}

type databaseToolsConnectionArgs struct {
	// (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
	AdvancedProperties map[string]interface{} `pulumi:"advancedProperties"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
	ConnectionString *string `pulumi:"connectionString"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
	KeyStores []DatabaseToolsConnectionKeyStore `pulumi:"keyStores"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
	PrivateEndpointId *string `pulumi:"privateEndpointId"`
	// (Updatable) The related resource
	RelatedResource *DatabaseToolsConnectionRelatedResource `pulumi:"relatedResource"`
	// (Updatable) The DatabaseToolsConnection type.
	Type string `pulumi:"type"`
	// (Updatable) The database user name.
	UserName *string `pulumi:"userName"`
	// (Updatable) The user password.
	UserPassword *DatabaseToolsConnectionUserPassword `pulumi:"userPassword"`
}

// The set of arguments for constructing a DatabaseToolsConnection resource.
type DatabaseToolsConnectionArgs struct {
	// (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
	AdvancedProperties pulumi.MapInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId pulumi.StringInput
	// (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
	ConnectionString pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
	KeyStores DatabaseToolsConnectionKeyStoreArrayInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
	PrivateEndpointId pulumi.StringPtrInput
	// (Updatable) The related resource
	RelatedResource DatabaseToolsConnectionRelatedResourcePtrInput
	// (Updatable) The DatabaseToolsConnection type.
	Type pulumi.StringInput
	// (Updatable) The database user name.
	UserName pulumi.StringPtrInput
	// (Updatable) The user password.
	UserPassword DatabaseToolsConnectionUserPasswordPtrInput
}

func (DatabaseToolsConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseToolsConnectionArgs)(nil)).Elem()
}

type DatabaseToolsConnectionInput interface {
	pulumi.Input

	ToDatabaseToolsConnectionOutput() DatabaseToolsConnectionOutput
	ToDatabaseToolsConnectionOutputWithContext(ctx context.Context) DatabaseToolsConnectionOutput
}

func (*DatabaseToolsConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseToolsConnection)(nil)).Elem()
}

func (i *DatabaseToolsConnection) ToDatabaseToolsConnectionOutput() DatabaseToolsConnectionOutput {
	return i.ToDatabaseToolsConnectionOutputWithContext(context.Background())
}

func (i *DatabaseToolsConnection) ToDatabaseToolsConnectionOutputWithContext(ctx context.Context) DatabaseToolsConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseToolsConnectionOutput)
}

// DatabaseToolsConnectionArrayInput is an input type that accepts DatabaseToolsConnectionArray and DatabaseToolsConnectionArrayOutput values.
// You can construct a concrete instance of `DatabaseToolsConnectionArrayInput` via:
//
//	DatabaseToolsConnectionArray{ DatabaseToolsConnectionArgs{...} }
type DatabaseToolsConnectionArrayInput interface {
	pulumi.Input

	ToDatabaseToolsConnectionArrayOutput() DatabaseToolsConnectionArrayOutput
	ToDatabaseToolsConnectionArrayOutputWithContext(context.Context) DatabaseToolsConnectionArrayOutput
}

type DatabaseToolsConnectionArray []DatabaseToolsConnectionInput

func (DatabaseToolsConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseToolsConnection)(nil)).Elem()
}

func (i DatabaseToolsConnectionArray) ToDatabaseToolsConnectionArrayOutput() DatabaseToolsConnectionArrayOutput {
	return i.ToDatabaseToolsConnectionArrayOutputWithContext(context.Background())
}

func (i DatabaseToolsConnectionArray) ToDatabaseToolsConnectionArrayOutputWithContext(ctx context.Context) DatabaseToolsConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseToolsConnectionArrayOutput)
}

// DatabaseToolsConnectionMapInput is an input type that accepts DatabaseToolsConnectionMap and DatabaseToolsConnectionMapOutput values.
// You can construct a concrete instance of `DatabaseToolsConnectionMapInput` via:
//
//	DatabaseToolsConnectionMap{ "key": DatabaseToolsConnectionArgs{...} }
type DatabaseToolsConnectionMapInput interface {
	pulumi.Input

	ToDatabaseToolsConnectionMapOutput() DatabaseToolsConnectionMapOutput
	ToDatabaseToolsConnectionMapOutputWithContext(context.Context) DatabaseToolsConnectionMapOutput
}

type DatabaseToolsConnectionMap map[string]DatabaseToolsConnectionInput

func (DatabaseToolsConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseToolsConnection)(nil)).Elem()
}

func (i DatabaseToolsConnectionMap) ToDatabaseToolsConnectionMapOutput() DatabaseToolsConnectionMapOutput {
	return i.ToDatabaseToolsConnectionMapOutputWithContext(context.Background())
}

func (i DatabaseToolsConnectionMap) ToDatabaseToolsConnectionMapOutputWithContext(ctx context.Context) DatabaseToolsConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseToolsConnectionMapOutput)
}

type DatabaseToolsConnectionOutput struct{ *pulumi.OutputState }

func (DatabaseToolsConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseToolsConnection)(nil)).Elem()
}

func (o DatabaseToolsConnectionOutput) ToDatabaseToolsConnectionOutput() DatabaseToolsConnectionOutput {
	return o
}

func (o DatabaseToolsConnectionOutput) ToDatabaseToolsConnectionOutputWithContext(ctx context.Context) DatabaseToolsConnectionOutput {
	return o
}

type DatabaseToolsConnectionArrayOutput struct{ *pulumi.OutputState }

func (DatabaseToolsConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseToolsConnection)(nil)).Elem()
}

func (o DatabaseToolsConnectionArrayOutput) ToDatabaseToolsConnectionArrayOutput() DatabaseToolsConnectionArrayOutput {
	return o
}

func (o DatabaseToolsConnectionArrayOutput) ToDatabaseToolsConnectionArrayOutputWithContext(ctx context.Context) DatabaseToolsConnectionArrayOutput {
	return o
}

func (o DatabaseToolsConnectionArrayOutput) Index(i pulumi.IntInput) DatabaseToolsConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DatabaseToolsConnection {
		return vs[0].([]*DatabaseToolsConnection)[vs[1].(int)]
	}).(DatabaseToolsConnectionOutput)
}

type DatabaseToolsConnectionMapOutput struct{ *pulumi.OutputState }

func (DatabaseToolsConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseToolsConnection)(nil)).Elem()
}

func (o DatabaseToolsConnectionMapOutput) ToDatabaseToolsConnectionMapOutput() DatabaseToolsConnectionMapOutput {
	return o
}

func (o DatabaseToolsConnectionMapOutput) ToDatabaseToolsConnectionMapOutputWithContext(ctx context.Context) DatabaseToolsConnectionMapOutput {
	return o
}

func (o DatabaseToolsConnectionMapOutput) MapIndex(k pulumi.StringInput) DatabaseToolsConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DatabaseToolsConnection {
		return vs[0].(map[string]*DatabaseToolsConnection)[vs[1].(string)]
	}).(DatabaseToolsConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseToolsConnectionInput)(nil)).Elem(), &DatabaseToolsConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseToolsConnectionArrayInput)(nil)).Elem(), DatabaseToolsConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseToolsConnectionMapInput)(nil)).Elem(), DatabaseToolsConnectionMap{})
	pulumi.RegisterOutputType(DatabaseToolsConnectionOutput{})
	pulumi.RegisterOutputType(DatabaseToolsConnectionArrayOutput{})
	pulumi.RegisterOutputType(DatabaseToolsConnectionMapOutput{})
}
