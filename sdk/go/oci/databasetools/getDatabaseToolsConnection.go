// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databasetools

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Database Tools Connection resource in Oracle Cloud Infrastructure Database Tools service.
//
// Gets details of the specified Database Tools connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseTools"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseTools.GetDatabaseToolsConnection(ctx, &databasetools.GetDatabaseToolsConnectionArgs{
//				DatabaseToolsConnectionId: oci_database_tools_database_tools_connection.Test_database_tools_connection.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDatabaseToolsConnection(ctx *pulumi.Context, args *LookupDatabaseToolsConnectionArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseToolsConnectionResult, error) {
	var rv LookupDatabaseToolsConnectionResult
	err := ctx.Invoke("oci:DatabaseTools/getDatabaseToolsConnection:getDatabaseToolsConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseToolsConnection.
type LookupDatabaseToolsConnectionArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Database Tools connection.
	DatabaseToolsConnectionId string `pulumi:"databaseToolsConnectionId"`
}

// A collection of values returned by getDatabaseToolsConnection.
type LookupDatabaseToolsConnectionResult struct {
	// The advanced connection properties key-value pair (for example, `oracle.net.ssl_server_dn_match`).
	AdvancedProperties map[string]interface{} `pulumi:"advancedProperties"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId string `pulumi:"compartmentId"`
	// The connect descriptor or Easy Connect Naming method used to connect to the database.
	ConnectionString          string `pulumi:"connectionString"`
	DatabaseToolsConnectionId string `pulumi:"databaseToolsConnectionId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools connection.
	Id string `pulumi:"id"`
	// The Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
	KeyStores []GetDatabaseToolsConnectionKeyStore `pulumi:"keyStores"`
	// A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
	PrivateEndpointId string `pulumi:"privateEndpointId"`
	// A related resource
	RelatedResources []GetDatabaseToolsConnectionRelatedResource `pulumi:"relatedResources"`
	// The current state of the Database Tools connection.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the Database Tools connection was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The Database Tools connection type.
	Type string `pulumi:"type"`
	// The database user name.
	UserName string `pulumi:"userName"`
	// The user password.
	UserPasswords []GetDatabaseToolsConnectionUserPassword `pulumi:"userPasswords"`
}

func LookupDatabaseToolsConnectionOutput(ctx *pulumi.Context, args LookupDatabaseToolsConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupDatabaseToolsConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatabaseToolsConnectionResult, error) {
			args := v.(LookupDatabaseToolsConnectionArgs)
			r, err := LookupDatabaseToolsConnection(ctx, &args, opts...)
			var s LookupDatabaseToolsConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatabaseToolsConnectionResultOutput)
}

// A collection of arguments for invoking getDatabaseToolsConnection.
type LookupDatabaseToolsConnectionOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Database Tools connection.
	DatabaseToolsConnectionId pulumi.StringInput `pulumi:"databaseToolsConnectionId"`
}

func (LookupDatabaseToolsConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseToolsConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseToolsConnection.
type LookupDatabaseToolsConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupDatabaseToolsConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseToolsConnectionResult)(nil)).Elem()
}

func (o LookupDatabaseToolsConnectionResultOutput) ToLookupDatabaseToolsConnectionResultOutput() LookupDatabaseToolsConnectionResultOutput {
	return o
}

func (o LookupDatabaseToolsConnectionResultOutput) ToLookupDatabaseToolsConnectionResultOutputWithContext(ctx context.Context) LookupDatabaseToolsConnectionResultOutput {
	return o
}

// The advanced connection properties key-value pair (for example, `oracle.net.ssl_server_dn_match`).
func (o LookupDatabaseToolsConnectionResultOutput) AdvancedProperties() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) map[string]interface{} { return v.AdvancedProperties }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
func (o LookupDatabaseToolsConnectionResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The connect descriptor or Easy Connect Naming method used to connect to the database.
func (o LookupDatabaseToolsConnectionResultOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o LookupDatabaseToolsConnectionResultOutput) DatabaseToolsConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.DatabaseToolsConnectionId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupDatabaseToolsConnectionResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupDatabaseToolsConnectionResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupDatabaseToolsConnectionResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools connection.
func (o LookupDatabaseToolsConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
func (o LookupDatabaseToolsConnectionResultOutput) KeyStores() GetDatabaseToolsConnectionKeyStoreArrayOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) []GetDatabaseToolsConnectionKeyStore { return v.KeyStores }).(GetDatabaseToolsConnectionKeyStoreArrayOutput)
}

// A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
func (o LookupDatabaseToolsConnectionResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
func (o LookupDatabaseToolsConnectionResultOutput) PrivateEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.PrivateEndpointId }).(pulumi.StringOutput)
}

// A related resource
func (o LookupDatabaseToolsConnectionResultOutput) RelatedResources() GetDatabaseToolsConnectionRelatedResourceArrayOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) []GetDatabaseToolsConnectionRelatedResource {
		return v.RelatedResources
	}).(GetDatabaseToolsConnectionRelatedResourceArrayOutput)
}

// The current state of the Database Tools connection.
func (o LookupDatabaseToolsConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupDatabaseToolsConnectionResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the Database Tools connection was created. An RFC3339 formatted datetime string.
func (o LookupDatabaseToolsConnectionResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
func (o LookupDatabaseToolsConnectionResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The Database Tools connection type.
func (o LookupDatabaseToolsConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

// The database user name.
func (o LookupDatabaseToolsConnectionResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) string { return v.UserName }).(pulumi.StringOutput)
}

// The user password.
func (o LookupDatabaseToolsConnectionResultOutput) UserPasswords() GetDatabaseToolsConnectionUserPasswordArrayOutput {
	return o.ApplyT(func(v LookupDatabaseToolsConnectionResult) []GetDatabaseToolsConnectionUserPassword {
		return v.UserPasswords
	}).(GetDatabaseToolsConnectionUserPasswordArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatabaseToolsConnectionResultOutput{})
}
