// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasetools

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Database Tools Connections in Oracle Cloud Infrastructure Database Tools service.
//
// Returns a list of Database Tools connections.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseTools"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseTools.GetDatabaseToolsConnections(ctx, &databasetools.GetDatabaseToolsConnectionsArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Database_tools_connection_display_name),
//				State:         pulumi.StringRef(_var.Database_tools_connection_state),
//				Types:         _var.Database_tools_connection_type,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDatabaseToolsConnections(ctx *pulumi.Context, args *GetDatabaseToolsConnectionsArgs, opts ...pulumi.InvokeOption) (*GetDatabaseToolsConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatabaseToolsConnectionsResult
	err := ctx.Invoke("oci:DatabaseTools/getDatabaseToolsConnections:getDatabaseToolsConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseToolsConnections.
type GetDatabaseToolsConnectionsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire specified display name.
	DisplayName *string                             `pulumi:"displayName"`
	Filters     []GetDatabaseToolsConnectionsFilter `pulumi:"filters"`
	// A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
	State *string `pulumi:"state"`
	// A filter to return only resources their type matches the specified type.
	Types []string `pulumi:"types"`
}

// A collection of values returned by getDatabaseToolsConnections.
type GetDatabaseToolsConnectionsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of database_tools_connection_collection.
	DatabaseToolsConnectionCollections []GetDatabaseToolsConnectionsDatabaseToolsConnectionCollection `pulumi:"databaseToolsConnectionCollections"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string                             `pulumi:"displayName"`
	Filters     []GetDatabaseToolsConnectionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the Database Tools connection.
	State *string `pulumi:"state"`
	// The Database Tools connection type.
	Types []string `pulumi:"types"`
}

func GetDatabaseToolsConnectionsOutput(ctx *pulumi.Context, args GetDatabaseToolsConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetDatabaseToolsConnectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatabaseToolsConnectionsResult, error) {
			args := v.(GetDatabaseToolsConnectionsArgs)
			r, err := GetDatabaseToolsConnections(ctx, &args, opts...)
			var s GetDatabaseToolsConnectionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatabaseToolsConnectionsResultOutput)
}

// A collection of arguments for invoking getDatabaseToolsConnections.
type GetDatabaseToolsConnectionsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire specified display name.
	DisplayName pulumi.StringPtrInput                       `pulumi:"displayName"`
	Filters     GetDatabaseToolsConnectionsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return only resources their type matches the specified type.
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (GetDatabaseToolsConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseToolsConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseToolsConnections.
type GetDatabaseToolsConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseToolsConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseToolsConnectionsResult)(nil)).Elem()
}

func (o GetDatabaseToolsConnectionsResultOutput) ToGetDatabaseToolsConnectionsResultOutput() GetDatabaseToolsConnectionsResultOutput {
	return o
}

func (o GetDatabaseToolsConnectionsResultOutput) ToGetDatabaseToolsConnectionsResultOutputWithContext(ctx context.Context) GetDatabaseToolsConnectionsResultOutput {
	return o
}

func (o GetDatabaseToolsConnectionsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDatabaseToolsConnectionsResult] {
	return pulumix.Output[GetDatabaseToolsConnectionsResult]{
		OutputState: o.OutputState,
	}
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
func (o GetDatabaseToolsConnectionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseToolsConnectionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of database_tools_connection_collection.
func (o GetDatabaseToolsConnectionsResultOutput) DatabaseToolsConnectionCollections() GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionArrayOutput {
	return o.ApplyT(func(v GetDatabaseToolsConnectionsResult) []GetDatabaseToolsConnectionsDatabaseToolsConnectionCollection {
		return v.DatabaseToolsConnectionCollections
	}).(GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionArrayOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetDatabaseToolsConnectionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseToolsConnectionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDatabaseToolsConnectionsResultOutput) Filters() GetDatabaseToolsConnectionsFilterArrayOutput {
	return o.ApplyT(func(v GetDatabaseToolsConnectionsResult) []GetDatabaseToolsConnectionsFilter { return v.Filters }).(GetDatabaseToolsConnectionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabaseToolsConnectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseToolsConnectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the Database Tools connection.
func (o GetDatabaseToolsConnectionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseToolsConnectionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The Database Tools connection type.
func (o GetDatabaseToolsConnectionsResultOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabaseToolsConnectionsResult) []string { return v.Types }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseToolsConnectionsResultOutput{})
}
