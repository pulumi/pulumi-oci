// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databasetools

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Database Tools Endpoint Services in Oracle Cloud Infrastructure Database Tools service.
//
// Returns a list of Database Tools endpoint services.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DatabaseTools"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DatabaseTools.GetDatabaseToolsEndpointServices(ctx, &databasetools.GetDatabaseToolsEndpointServicesArgs{
//				CompartmentId: _var.Compartment_id,
//				DisplayName:   pulumi.StringRef(_var.Database_tools_endpoint_service_display_name),
//				Name:          pulumi.StringRef(_var.Database_tools_endpoint_service_name),
//				State:         pulumi.StringRef(_var.Database_tools_endpoint_service_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDatabaseToolsEndpointServices(ctx *pulumi.Context, args *GetDatabaseToolsEndpointServicesArgs, opts ...pulumi.InvokeOption) (*GetDatabaseToolsEndpointServicesResult, error) {
	var rv GetDatabaseToolsEndpointServicesResult
	err := ctx.Invoke("oci:DatabaseTools/getDatabaseToolsEndpointServices:getDatabaseToolsEndpointServices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseToolsEndpointServices.
type GetDatabaseToolsEndpointServicesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire specified display name.
	DisplayName *string                                  `pulumi:"displayName"`
	Filters     []GetDatabaseToolsEndpointServicesFilter `pulumi:"filters"`
	// A filter to return only resources that match the entire specified name.
	Name *string `pulumi:"name"`
	// A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDatabaseToolsEndpointServices.
type GetDatabaseToolsEndpointServicesResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools Endpoint Service.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of database_tools_endpoint_service_collection.
	DatabaseToolsEndpointServiceCollections []GetDatabaseToolsEndpointServicesDatabaseToolsEndpointServiceCollection `pulumi:"databaseToolsEndpointServiceCollections"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string                                  `pulumi:"displayName"`
	Filters     []GetDatabaseToolsEndpointServicesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A unique, non-changeable resource name.
	Name *string `pulumi:"name"`
	// The current state of the Database Tools Endpoint Service.
	State *string `pulumi:"state"`
}

func GetDatabaseToolsEndpointServicesOutput(ctx *pulumi.Context, args GetDatabaseToolsEndpointServicesOutputArgs, opts ...pulumi.InvokeOption) GetDatabaseToolsEndpointServicesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatabaseToolsEndpointServicesResult, error) {
			args := v.(GetDatabaseToolsEndpointServicesArgs)
			r, err := GetDatabaseToolsEndpointServices(ctx, &args, opts...)
			var s GetDatabaseToolsEndpointServicesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatabaseToolsEndpointServicesResultOutput)
}

// A collection of arguments for invoking getDatabaseToolsEndpointServices.
type GetDatabaseToolsEndpointServicesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire specified display name.
	DisplayName pulumi.StringPtrInput                            `pulumi:"displayName"`
	Filters     GetDatabaseToolsEndpointServicesFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the entire specified name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDatabaseToolsEndpointServicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseToolsEndpointServicesArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseToolsEndpointServices.
type GetDatabaseToolsEndpointServicesResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseToolsEndpointServicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseToolsEndpointServicesResult)(nil)).Elem()
}

func (o GetDatabaseToolsEndpointServicesResultOutput) ToGetDatabaseToolsEndpointServicesResultOutput() GetDatabaseToolsEndpointServicesResultOutput {
	return o
}

func (o GetDatabaseToolsEndpointServicesResultOutput) ToGetDatabaseToolsEndpointServicesResultOutputWithContext(ctx context.Context) GetDatabaseToolsEndpointServicesResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools Endpoint Service.
func (o GetDatabaseToolsEndpointServicesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseToolsEndpointServicesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of database_tools_endpoint_service_collection.
func (o GetDatabaseToolsEndpointServicesResultOutput) DatabaseToolsEndpointServiceCollections() GetDatabaseToolsEndpointServicesDatabaseToolsEndpointServiceCollectionArrayOutput {
	return o.ApplyT(func(v GetDatabaseToolsEndpointServicesResult) []GetDatabaseToolsEndpointServicesDatabaseToolsEndpointServiceCollection {
		return v.DatabaseToolsEndpointServiceCollections
	}).(GetDatabaseToolsEndpointServicesDatabaseToolsEndpointServiceCollectionArrayOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetDatabaseToolsEndpointServicesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseToolsEndpointServicesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDatabaseToolsEndpointServicesResultOutput) Filters() GetDatabaseToolsEndpointServicesFilterArrayOutput {
	return o.ApplyT(func(v GetDatabaseToolsEndpointServicesResult) []GetDatabaseToolsEndpointServicesFilter {
		return v.Filters
	}).(GetDatabaseToolsEndpointServicesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabaseToolsEndpointServicesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseToolsEndpointServicesResult) string { return v.Id }).(pulumi.StringOutput)
}

// A unique, non-changeable resource name.
func (o GetDatabaseToolsEndpointServicesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseToolsEndpointServicesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The current state of the Database Tools Endpoint Service.
func (o GetDatabaseToolsEndpointServicesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseToolsEndpointServicesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseToolsEndpointServicesResultOutput{})
}
