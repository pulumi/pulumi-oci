// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datacatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Catalog resource in Oracle Cloud Infrastructure Data Catalog service.
//
// Gets a data catalog by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DataCatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataCatalog.GetCatalog(ctx, &datacatalog.GetCatalogArgs{
//				CatalogId: testCatalogOciDatacatalogCatalog.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCatalog(ctx *pulumi.Context, args *LookupCatalogArgs, opts ...pulumi.InvokeOption) (*LookupCatalogResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCatalogResult
	err := ctx.Invoke("oci:DataCatalog/getCatalog:getCatalog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalog.
type LookupCatalogArgs struct {
	// Unique catalog identifier.
	CatalogId string `pulumi:"catalogId"`
}

// A collection of values returned by getCatalog.
type LookupCatalogResult struct {
	// The list of private reverse connection endpoints attached to the catalog
	AttachedCatalogPrivateEndpoints []string `pulumi:"attachedCatalogPrivateEndpoints"`
	CatalogId                       string   `pulumi:"catalogId"`
	// Compartment identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Data catalog identifier, which can be renamed.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// An message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in 'Failed' state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Locks associated with this resource.
	Locks []GetCatalogLock `pulumi:"locks"`
	// The number of data objects added to the data catalog. Please see the data catalog documentation for further information on how this is calculated.
	NumberOfObjects int `pulumi:"numberOfObjects"`
	// The REST front endpoint URL to the data catalog instance.
	ServiceApiUrl string `pulumi:"serviceApiUrl"`
	// The console front endpoint URL to the data catalog instance.
	ServiceConsoleUrl string `pulumi:"serviceConsoleUrl"`
	// The current state of the data catalog resource.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the data catalog was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time the data catalog was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupCatalogOutput(ctx *pulumi.Context, args LookupCatalogOutputArgs, opts ...pulumi.InvokeOption) LookupCatalogResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCatalogResultOutput, error) {
			args := v.(LookupCatalogArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCatalogResult
			secret, err := ctx.InvokePackageRaw("oci:DataCatalog/getCatalog:getCatalog", args, &rv, "", opts...)
			if err != nil {
				return LookupCatalogResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCatalogResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCatalogResultOutput), nil
			}
			return output, nil
		}).(LookupCatalogResultOutput)
}

// A collection of arguments for invoking getCatalog.
type LookupCatalogOutputArgs struct {
	// Unique catalog identifier.
	CatalogId pulumi.StringInput `pulumi:"catalogId"`
}

func (LookupCatalogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogArgs)(nil)).Elem()
}

// A collection of values returned by getCatalog.
type LookupCatalogResultOutput struct{ *pulumi.OutputState }

func (LookupCatalogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogResult)(nil)).Elem()
}

func (o LookupCatalogResultOutput) ToLookupCatalogResultOutput() LookupCatalogResultOutput {
	return o
}

func (o LookupCatalogResultOutput) ToLookupCatalogResultOutputWithContext(ctx context.Context) LookupCatalogResultOutput {
	return o
}

// The list of private reverse connection endpoints attached to the catalog
func (o LookupCatalogResultOutput) AttachedCatalogPrivateEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCatalogResult) []string { return v.AttachedCatalogPrivateEndpoints }).(pulumi.StringArrayOutput)
}

func (o LookupCatalogResultOutput) CatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.CatalogId }).(pulumi.StringOutput)
}

// Compartment identifier.
func (o LookupCatalogResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupCatalogResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCatalogResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Data catalog identifier, which can be renamed.
func (o LookupCatalogResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupCatalogResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCatalogResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupCatalogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.Id }).(pulumi.StringOutput)
}

// An message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in 'Failed' state.
func (o LookupCatalogResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Locks associated with this resource.
func (o LookupCatalogResultOutput) Locks() GetCatalogLockArrayOutput {
	return o.ApplyT(func(v LookupCatalogResult) []GetCatalogLock { return v.Locks }).(GetCatalogLockArrayOutput)
}

// The number of data objects added to the data catalog. Please see the data catalog documentation for further information on how this is calculated.
func (o LookupCatalogResultOutput) NumberOfObjects() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCatalogResult) int { return v.NumberOfObjects }).(pulumi.IntOutput)
}

// The REST front endpoint URL to the data catalog instance.
func (o LookupCatalogResultOutput) ServiceApiUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.ServiceApiUrl }).(pulumi.StringOutput)
}

// The console front endpoint URL to the data catalog instance.
func (o LookupCatalogResultOutput) ServiceConsoleUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.ServiceConsoleUrl }).(pulumi.StringOutput)
}

// The current state of the data catalog resource.
func (o LookupCatalogResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupCatalogResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCatalogResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the data catalog was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
func (o LookupCatalogResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the data catalog was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
func (o LookupCatalogResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCatalogResultOutput{})
}
