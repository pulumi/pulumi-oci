// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datacatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Catalogs in Oracle Cloud Infrastructure Data Catalog service.
//
// Returns a list of all the data catalogs in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DataCatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataCatalog.GetCatalogs(ctx, &datacatalog.GetCatalogsArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(catalogDisplayName),
//				State:         pulumi.StringRef(catalogState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCatalogs(ctx *pulumi.Context, args *GetCatalogsArgs, opts ...pulumi.InvokeOption) (*GetCatalogsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCatalogsResult
	err := ctx.Invoke("oci:DataCatalog/getCatalogs:getCatalogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalogs.
type GetCatalogsArgs struct {
	// The OCID of the compartment where you want to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetCatalogsFilter `pulumi:"filters"`
	// A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getCatalogs.
type GetCatalogsResult struct {
	// The list of catalogs.
	Catalogs []GetCatalogsCatalog `pulumi:"catalogs"`
	// Compartment identifier.
	CompartmentId string `pulumi:"compartmentId"`
	// Data catalog identifier, which can be renamed.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetCatalogsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the data catalog resource.
	State *string `pulumi:"state"`
}

func GetCatalogsOutput(ctx *pulumi.Context, args GetCatalogsOutputArgs, opts ...pulumi.InvokeOption) GetCatalogsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCatalogsResult, error) {
			args := v.(GetCatalogsArgs)
			r, err := GetCatalogs(ctx, &args, opts...)
			var s GetCatalogsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCatalogsResultOutput)
}

// A collection of arguments for invoking getCatalogs.
type GetCatalogsOutputArgs struct {
	// The OCID of the compartment where you want to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given. The match is not case sensitive.
	DisplayName pulumi.StringPtrInput       `pulumi:"displayName"`
	Filters     GetCatalogsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetCatalogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogsArgs)(nil)).Elem()
}

// A collection of values returned by getCatalogs.
type GetCatalogsResultOutput struct{ *pulumi.OutputState }

func (GetCatalogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogsResult)(nil)).Elem()
}

func (o GetCatalogsResultOutput) ToGetCatalogsResultOutput() GetCatalogsResultOutput {
	return o
}

func (o GetCatalogsResultOutput) ToGetCatalogsResultOutputWithContext(ctx context.Context) GetCatalogsResultOutput {
	return o
}

// The list of catalogs.
func (o GetCatalogsResultOutput) Catalogs() GetCatalogsCatalogArrayOutput {
	return o.ApplyT(func(v GetCatalogsResult) []GetCatalogsCatalog { return v.Catalogs }).(GetCatalogsCatalogArrayOutput)
}

// Compartment identifier.
func (o GetCatalogsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Data catalog identifier, which can be renamed.
func (o GetCatalogsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetCatalogsResultOutput) Filters() GetCatalogsFilterArrayOutput {
	return o.ApplyT(func(v GetCatalogsResult) []GetCatalogsFilter { return v.Filters }).(GetCatalogsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCatalogsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the data catalog resource.
func (o GetCatalogsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCatalogsResultOutput{})
}
