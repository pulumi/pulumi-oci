// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datacatalog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Metastore resource in Oracle Cloud Infrastructure Data Catalog service.
//
// Creates a new metastore.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataCatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataCatalog.NewMetastore(ctx, "test_metastore", &DataCatalog.MetastoreArgs{
//				CompartmentId:                pulumi.Any(compartmentId),
//				DefaultExternalTableLocation: pulumi.Any(metastoreDefaultExternalTableLocation),
//				DefaultManagedTableLocation:  pulumi.Any(metastoreDefaultManagedTableLocation),
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				DisplayName: pulumi.Any(metastoreDisplayName),
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Metastores can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataCatalog/metastore:Metastore test_metastore "id"
// ```
type Metastore struct {
	pulumi.CustomResourceState

	// (Updatable) OCID of the compartment which holds the metastore.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Location under which external tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
	DefaultExternalTableLocation pulumi.StringOutput `pulumi:"defaultExternalTableLocation"`
	// Location under which managed tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
	DefaultManagedTableLocation pulumi.StringOutput `pulumi:"defaultManagedTableLocation"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Mutable name of the metastore.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Locks associated with this resource.
	Locks MetastoreLockArrayOutput `pulumi:"locks"`
	// The current state of the metastore.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// Time at which the metastore was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Time at which the metastore was last modified. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewMetastore registers a new resource with the given unique name, arguments, and options.
func NewMetastore(ctx *pulumi.Context,
	name string, args *MetastoreArgs, opts ...pulumi.ResourceOption) (*Metastore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DefaultExternalTableLocation == nil {
		return nil, errors.New("invalid value for required argument 'DefaultExternalTableLocation'")
	}
	if args.DefaultManagedTableLocation == nil {
		return nil, errors.New("invalid value for required argument 'DefaultManagedTableLocation'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Metastore
	err := ctx.RegisterResource("oci:DataCatalog/metastore:Metastore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMetastore gets an existing Metastore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMetastore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MetastoreState, opts ...pulumi.ResourceOption) (*Metastore, error) {
	var resource Metastore
	err := ctx.ReadResource("oci:DataCatalog/metastore:Metastore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Metastore resources.
type metastoreState struct {
	// (Updatable) OCID of the compartment which holds the metastore.
	CompartmentId *string `pulumi:"compartmentId"`
	// Location under which external tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
	DefaultExternalTableLocation *string `pulumi:"defaultExternalTableLocation"`
	// Location under which managed tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
	DefaultManagedTableLocation *string `pulumi:"defaultManagedTableLocation"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Mutable name of the metastore.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Locks associated with this resource.
	Locks []MetastoreLock `pulumi:"locks"`
	// The current state of the metastore.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Time at which the metastore was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// Time at which the metastore was last modified. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type MetastoreState struct {
	// (Updatable) OCID of the compartment which holds the metastore.
	CompartmentId pulumi.StringPtrInput
	// Location under which external tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
	DefaultExternalTableLocation pulumi.StringPtrInput
	// Location under which managed tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
	DefaultManagedTableLocation pulumi.StringPtrInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Mutable name of the metastore.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// Locks associated with this resource.
	Locks MetastoreLockArrayInput
	// The current state of the metastore.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// Time at which the metastore was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// Time at which the metastore was last modified. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (MetastoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*metastoreState)(nil)).Elem()
}

type metastoreArgs struct {
	// (Updatable) OCID of the compartment which holds the metastore.
	CompartmentId string `pulumi:"compartmentId"`
	// Location under which external tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
	DefaultExternalTableLocation string `pulumi:"defaultExternalTableLocation"`
	// Location under which managed tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
	DefaultManagedTableLocation string `pulumi:"defaultManagedTableLocation"`
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Mutable name of the metastore.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a Metastore resource.
type MetastoreArgs struct {
	// (Updatable) OCID of the compartment which holds the metastore.
	CompartmentId pulumi.StringInput
	// Location under which external tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
	DefaultExternalTableLocation pulumi.StringInput
	// Location under which managed tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
	DefaultManagedTableLocation pulumi.StringInput
	// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Mutable name of the metastore.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapInput
}

func (MetastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*metastoreArgs)(nil)).Elem()
}

type MetastoreInput interface {
	pulumi.Input

	ToMetastoreOutput() MetastoreOutput
	ToMetastoreOutputWithContext(ctx context.Context) MetastoreOutput
}

func (*Metastore) ElementType() reflect.Type {
	return reflect.TypeOf((**Metastore)(nil)).Elem()
}

func (i *Metastore) ToMetastoreOutput() MetastoreOutput {
	return i.ToMetastoreOutputWithContext(context.Background())
}

func (i *Metastore) ToMetastoreOutputWithContext(ctx context.Context) MetastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetastoreOutput)
}

// MetastoreArrayInput is an input type that accepts MetastoreArray and MetastoreArrayOutput values.
// You can construct a concrete instance of `MetastoreArrayInput` via:
//
//	MetastoreArray{ MetastoreArgs{...} }
type MetastoreArrayInput interface {
	pulumi.Input

	ToMetastoreArrayOutput() MetastoreArrayOutput
	ToMetastoreArrayOutputWithContext(context.Context) MetastoreArrayOutput
}

type MetastoreArray []MetastoreInput

func (MetastoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Metastore)(nil)).Elem()
}

func (i MetastoreArray) ToMetastoreArrayOutput() MetastoreArrayOutput {
	return i.ToMetastoreArrayOutputWithContext(context.Background())
}

func (i MetastoreArray) ToMetastoreArrayOutputWithContext(ctx context.Context) MetastoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetastoreArrayOutput)
}

// MetastoreMapInput is an input type that accepts MetastoreMap and MetastoreMapOutput values.
// You can construct a concrete instance of `MetastoreMapInput` via:
//
//	MetastoreMap{ "key": MetastoreArgs{...} }
type MetastoreMapInput interface {
	pulumi.Input

	ToMetastoreMapOutput() MetastoreMapOutput
	ToMetastoreMapOutputWithContext(context.Context) MetastoreMapOutput
}

type MetastoreMap map[string]MetastoreInput

func (MetastoreMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Metastore)(nil)).Elem()
}

func (i MetastoreMap) ToMetastoreMapOutput() MetastoreMapOutput {
	return i.ToMetastoreMapOutputWithContext(context.Background())
}

func (i MetastoreMap) ToMetastoreMapOutputWithContext(ctx context.Context) MetastoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetastoreMapOutput)
}

type MetastoreOutput struct{ *pulumi.OutputState }

func (MetastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Metastore)(nil)).Elem()
}

func (o MetastoreOutput) ToMetastoreOutput() MetastoreOutput {
	return o
}

func (o MetastoreOutput) ToMetastoreOutputWithContext(ctx context.Context) MetastoreOutput {
	return o
}

// (Updatable) OCID of the compartment which holds the metastore.
func (o MetastoreOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Metastore) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Location under which external tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
func (o MetastoreOutput) DefaultExternalTableLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *Metastore) pulumi.StringOutput { return v.DefaultExternalTableLocation }).(pulumi.StringOutput)
}

// Location under which managed tables will be created by default. This references Object Storage using an HDFS URI format. Example: oci://bucket@namespace/sub-dir/
func (o MetastoreOutput) DefaultManagedTableLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *Metastore) pulumi.StringOutput { return v.DefaultManagedTableLocation }).(pulumi.StringOutput)
}

// (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o MetastoreOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Metastore) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Mutable name of the metastore.
func (o MetastoreOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Metastore) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o MetastoreOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Metastore) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o MetastoreOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Metastore) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Locks associated with this resource.
func (o MetastoreOutput) Locks() MetastoreLockArrayOutput {
	return o.ApplyT(func(v *Metastore) MetastoreLockArrayOutput { return v.Locks }).(MetastoreLockArrayOutput)
}

// The current state of the metastore.
func (o MetastoreOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Metastore) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o MetastoreOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Metastore) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// Time at which the metastore was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
func (o MetastoreOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Metastore) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time at which the metastore was last modified. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
func (o MetastoreOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Metastore) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type MetastoreArrayOutput struct{ *pulumi.OutputState }

func (MetastoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Metastore)(nil)).Elem()
}

func (o MetastoreArrayOutput) ToMetastoreArrayOutput() MetastoreArrayOutput {
	return o
}

func (o MetastoreArrayOutput) ToMetastoreArrayOutputWithContext(ctx context.Context) MetastoreArrayOutput {
	return o
}

func (o MetastoreArrayOutput) Index(i pulumi.IntInput) MetastoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Metastore {
		return vs[0].([]*Metastore)[vs[1].(int)]
	}).(MetastoreOutput)
}

type MetastoreMapOutput struct{ *pulumi.OutputState }

func (MetastoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Metastore)(nil)).Elem()
}

func (o MetastoreMapOutput) ToMetastoreMapOutput() MetastoreMapOutput {
	return o
}

func (o MetastoreMapOutput) ToMetastoreMapOutputWithContext(ctx context.Context) MetastoreMapOutput {
	return o
}

func (o MetastoreMapOutput) MapIndex(k pulumi.StringInput) MetastoreOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Metastore {
		return vs[0].(map[string]*Metastore)[vs[1].(string)]
	}).(MetastoreOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MetastoreInput)(nil)).Elem(), &Metastore{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetastoreArrayInput)(nil)).Elem(), MetastoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetastoreMapInput)(nil)).Elem(), MetastoreMap{})
	pulumi.RegisterOutputType(MetastoreOutput{})
	pulumi.RegisterOutputType(MetastoreArrayOutput{})
	pulumi.RegisterOutputType(MetastoreMapOutput{})
}
