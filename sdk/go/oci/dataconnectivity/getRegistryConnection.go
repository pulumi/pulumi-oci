// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dataconnectivity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Registry Connection resource in Oracle Cloud Infrastructure Data Connectivity service.
//
// Retrieves the connection details using the specified identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataConnectivity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataConnectivity.GetRegistryConnection(ctx, &dataconnectivity.GetRegistryConnectionArgs{
//				ConnectionKey: _var.Registry_connection_connection_key,
//				RegistryId:    oci_data_connectivity_registry.Test_registry.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRegistryConnection(ctx *pulumi.Context, args *LookupRegistryConnectionArgs, opts ...pulumi.InvokeOption) (*LookupRegistryConnectionResult, error) {
	var rv LookupRegistryConnectionResult
	err := ctx.Invoke("oci:DataConnectivity/getRegistryConnection:getRegistryConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegistryConnection.
type LookupRegistryConnectionArgs struct {
	// The connection key.
	ConnectionKey string `pulumi:"connectionKey"`
	// The registry Ocid.
	RegistryId string `pulumi:"registryId"`
}

// A collection of values returned by getRegistryConnection.
type LookupRegistryConnectionResult struct {
	ConnectionKey string `pulumi:"connectionKey"`
	// The properties for the connection.
	ConnectionProperties []GetRegistryConnectionConnectionProperty `pulumi:"connectionProperties"`
	// The description of the aggregator.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// The identifier of the aggregator.
	Identifier string `pulumi:"identifier"`
	// The default property for the connection.
	IsDefault bool `pulumi:"isDefault"`
	// The identifying key for the object.
	Key string `pulumi:"key"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas []GetRegistryConnectionMetadata `pulumi:"metadatas"`
	// The object's type.
	ModelType string `pulumi:"modelType"`
	// The object's model version.
	ModelVersion string `pulumi:"modelVersion"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name string `pulumi:"name"`
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus int `pulumi:"objectStatus"`
	// The version of the object that is used to track changes in the object instance.
	ObjectVersion int `pulumi:"objectVersion"`
	// The schema object.
	PrimarySchemas []GetRegistryConnectionPrimarySchema `pulumi:"primarySchemas"`
	// All the properties for the connection in a key-value map format.
	Properties map[string]interface{} `pulumi:"properties"`
	RegistryId string                 `pulumi:"registryId"`
	// Information about the object and its parent.
	RegistryMetadatas []GetRegistryConnectionRegistryMetadata `pulumi:"registryMetadatas"`
	// Specific Connection Type
	Type string `pulumi:"type"`
}

func LookupRegistryConnectionOutput(ctx *pulumi.Context, args LookupRegistryConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupRegistryConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRegistryConnectionResult, error) {
			args := v.(LookupRegistryConnectionArgs)
			r, err := LookupRegistryConnection(ctx, &args, opts...)
			var s LookupRegistryConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRegistryConnectionResultOutput)
}

// A collection of arguments for invoking getRegistryConnection.
type LookupRegistryConnectionOutputArgs struct {
	// The connection key.
	ConnectionKey pulumi.StringInput `pulumi:"connectionKey"`
	// The registry Ocid.
	RegistryId pulumi.StringInput `pulumi:"registryId"`
}

func (LookupRegistryConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getRegistryConnection.
type LookupRegistryConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupRegistryConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryConnectionResult)(nil)).Elem()
}

func (o LookupRegistryConnectionResultOutput) ToLookupRegistryConnectionResultOutput() LookupRegistryConnectionResultOutput {
	return o
}

func (o LookupRegistryConnectionResultOutput) ToLookupRegistryConnectionResultOutputWithContext(ctx context.Context) LookupRegistryConnectionResultOutput {
	return o
}

func (o LookupRegistryConnectionResultOutput) ConnectionKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) string { return v.ConnectionKey }).(pulumi.StringOutput)
}

// The properties for the connection.
func (o LookupRegistryConnectionResultOutput) ConnectionProperties() GetRegistryConnectionConnectionPropertyArrayOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) []GetRegistryConnectionConnectionProperty {
		return v.ConnectionProperties
	}).(GetRegistryConnectionConnectionPropertyArrayOutput)
}

// The description of the aggregator.
func (o LookupRegistryConnectionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupRegistryConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identifier of the aggregator.
func (o LookupRegistryConnectionResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// The default property for the connection.
func (o LookupRegistryConnectionResultOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The identifying key for the object.
func (o LookupRegistryConnectionResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) string { return v.Key }).(pulumi.StringOutput)
}

// A summary type containing information about the object including its key, name and when/who created/updated it.
func (o LookupRegistryConnectionResultOutput) Metadatas() GetRegistryConnectionMetadataArrayOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) []GetRegistryConnectionMetadata { return v.Metadatas }).(GetRegistryConnectionMetadataArrayOutput)
}

// The object's type.
func (o LookupRegistryConnectionResultOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) string { return v.ModelType }).(pulumi.StringOutput)
}

// The object's model version.
func (o LookupRegistryConnectionResultOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) string { return v.ModelVersion }).(pulumi.StringOutput)
}

// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o LookupRegistryConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
func (o LookupRegistryConnectionResultOutput) ObjectStatus() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) int { return v.ObjectStatus }).(pulumi.IntOutput)
}

// The version of the object that is used to track changes in the object instance.
func (o LookupRegistryConnectionResultOutput) ObjectVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) int { return v.ObjectVersion }).(pulumi.IntOutput)
}

// The schema object.
func (o LookupRegistryConnectionResultOutput) PrimarySchemas() GetRegistryConnectionPrimarySchemaArrayOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) []GetRegistryConnectionPrimarySchema { return v.PrimarySchemas }).(GetRegistryConnectionPrimarySchemaArrayOutput)
}

// All the properties for the connection in a key-value map format.
func (o LookupRegistryConnectionResultOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) map[string]interface{} { return v.Properties }).(pulumi.MapOutput)
}

func (o LookupRegistryConnectionResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

// Information about the object and its parent.
func (o LookupRegistryConnectionResultOutput) RegistryMetadatas() GetRegistryConnectionRegistryMetadataArrayOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) []GetRegistryConnectionRegistryMetadata {
		return v.RegistryMetadatas
	}).(GetRegistryConnectionRegistryMetadataArrayOutput)
}

// Specific Connection Type
func (o LookupRegistryConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegistryConnectionResultOutput{})
}
