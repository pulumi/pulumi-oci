// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataconnectivity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Registry Folder resource in Oracle Cloud Infrastructure Data Connectivity service.
//
// Retrieves the folder details using the specified identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataConnectivity"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataConnectivity.GetRegistryFolder(ctx, &dataconnectivity.GetRegistryFolderArgs{
//				FolderKey:  _var.Registry_folder_folder_key,
//				RegistryId: oci_data_connectivity_registry.Test_registry.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRegistryFolder(ctx *pulumi.Context, args *LookupRegistryFolderArgs, opts ...pulumi.InvokeOption) (*LookupRegistryFolderResult, error) {
	var rv LookupRegistryFolderResult
	err := ctx.Invoke("oci:DataConnectivity/getRegistryFolder:getRegistryFolder", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegistryFolder.
type LookupRegistryFolderArgs struct {
	// The folder ID.
	FolderKey string `pulumi:"folderKey"`
	// The registry Ocid.
	RegistryId string `pulumi:"registryId"`
}

// A collection of values returned by getRegistryFolder.
type LookupRegistryFolderResult struct {
	// List of data assets which belongs to this folder
	DataAssets []GetRegistryFolderDataAsset `pulumi:"dataAssets"`
	// User-defined description for the folder.
	Description string `pulumi:"description"`
	FolderKey   string `pulumi:"folderKey"`
	Id          string `pulumi:"id"`
	// Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier string `pulumi:"identifier"`
	// Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
	Key string `pulumi:"key"`
	// The type of the folder.
	ModelType string `pulumi:"modelType"`
	// The model version of an object.
	ModelVersion string `pulumi:"modelVersion"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name string `pulumi:"name"`
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus int `pulumi:"objectStatus"`
	// The version of the object that is used to track changes in the object instance.
	ObjectVersion int `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves []GetRegistryFolderParentRef `pulumi:"parentReves"`
	RegistryId  string                       `pulumi:"registryId"`
}

func LookupRegistryFolderOutput(ctx *pulumi.Context, args LookupRegistryFolderOutputArgs, opts ...pulumi.InvokeOption) LookupRegistryFolderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRegistryFolderResult, error) {
			args := v.(LookupRegistryFolderArgs)
			r, err := LookupRegistryFolder(ctx, &args, opts...)
			var s LookupRegistryFolderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRegistryFolderResultOutput)
}

// A collection of arguments for invoking getRegistryFolder.
type LookupRegistryFolderOutputArgs struct {
	// The folder ID.
	FolderKey pulumi.StringInput `pulumi:"folderKey"`
	// The registry Ocid.
	RegistryId pulumi.StringInput `pulumi:"registryId"`
}

func (LookupRegistryFolderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryFolderArgs)(nil)).Elem()
}

// A collection of values returned by getRegistryFolder.
type LookupRegistryFolderResultOutput struct{ *pulumi.OutputState }

func (LookupRegistryFolderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryFolderResult)(nil)).Elem()
}

func (o LookupRegistryFolderResultOutput) ToLookupRegistryFolderResultOutput() LookupRegistryFolderResultOutput {
	return o
}

func (o LookupRegistryFolderResultOutput) ToLookupRegistryFolderResultOutputWithContext(ctx context.Context) LookupRegistryFolderResultOutput {
	return o
}

// List of data assets which belongs to this folder
func (o LookupRegistryFolderResultOutput) DataAssets() GetRegistryFolderDataAssetArrayOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) []GetRegistryFolderDataAsset { return v.DataAssets }).(GetRegistryFolderDataAssetArrayOutput)
}

// User-defined description for the folder.
func (o LookupRegistryFolderResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupRegistryFolderResultOutput) FolderKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) string { return v.FolderKey }).(pulumi.StringOutput)
}

func (o LookupRegistryFolderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) string { return v.Id }).(pulumi.StringOutput)
}

// Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
func (o LookupRegistryFolderResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
func (o LookupRegistryFolderResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) string { return v.Key }).(pulumi.StringOutput)
}

// The type of the folder.
func (o LookupRegistryFolderResultOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) string { return v.ModelType }).(pulumi.StringOutput)
}

// The model version of an object.
func (o LookupRegistryFolderResultOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) string { return v.ModelVersion }).(pulumi.StringOutput)
}

// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o LookupRegistryFolderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
func (o LookupRegistryFolderResultOutput) ObjectStatus() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) int { return v.ObjectStatus }).(pulumi.IntOutput)
}

// The version of the object that is used to track changes in the object instance.
func (o LookupRegistryFolderResultOutput) ObjectVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) int { return v.ObjectVersion }).(pulumi.IntOutput)
}

// A reference to the object's parent.
func (o LookupRegistryFolderResultOutput) ParentReves() GetRegistryFolderParentRefArrayOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) []GetRegistryFolderParentRef { return v.ParentReves }).(GetRegistryFolderParentRefArrayOutput)
}

func (o LookupRegistryFolderResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryFolderResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegistryFolderResultOutput{})
}
