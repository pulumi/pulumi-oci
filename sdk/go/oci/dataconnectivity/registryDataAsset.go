// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dataconnectivity

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Registry Data Asset resource in Oracle Cloud Infrastructure Data Connectivity service.
//
// Creates a data asset with default connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataConnectivity"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := DataConnectivity.NewRegistryDataAsset(ctx, "testRegistryDataAsset", &DataConnectivity.RegistryDataAssetArgs{
// 			Identifier:      pulumi.Any(_var.Registry_data_asset_identifier),
// 			Properties:      pulumi.Any(_var.Registry_data_asset_properties),
// 			RegistryId:      pulumi.Any(oci_data_connectivity_registry.Test_registry.Id),
// 			Type:            pulumi.Any(_var.Registry_data_asset_type),
// 			AssetProperties: pulumi.Any(_var.Registry_data_asset_asset_properties),
// 			DefaultConnection: &dataconnectivity.RegistryDataAssetDefaultConnectionArgs{
// 				Identifier: pulumi.Any(_var.Registry_data_asset_default_connection_identifier),
// 				Key:        pulumi.Any(_var.Registry_data_asset_default_connection_key),
// 				Name:       pulumi.Any(_var.Registry_data_asset_default_connection_name),
// 				ConnectionProperties: dataconnectivity.RegistryDataAssetDefaultConnectionConnectionPropertyArray{
// 					&dataconnectivity.RegistryDataAssetDefaultConnectionConnectionPropertyArgs{
// 						Name:  pulumi.Any(_var.Registry_data_asset_default_connection_connection_properties_name),
// 						Value: pulumi.Any(_var.Registry_data_asset_default_connection_connection_properties_value),
// 					},
// 				},
// 				Description: pulumi.Any(_var.Registry_data_asset_default_connection_description),
// 				IsDefault:   pulumi.Any(_var.Registry_data_asset_default_connection_is_default),
// 				Metadata: &dataconnectivity.RegistryDataAssetDefaultConnectionMetadataArgs{
// 					Aggregator: &dataconnectivity.RegistryDataAssetDefaultConnectionMetadataAggregatorArgs{
// 						Description: pulumi.Any(_var.Registry_data_asset_default_connection_metadata_aggregator_description),
// 						Identifier:  pulumi.Any(_var.Registry_data_asset_default_connection_metadata_aggregator_identifier),
// 						Key:         pulumi.Any(_var.Registry_data_asset_default_connection_metadata_aggregator_key),
// 						Name:        pulumi.Any(_var.Registry_data_asset_default_connection_metadata_aggregator_name),
// 						Type:        pulumi.Any(_var.Registry_data_asset_default_connection_metadata_aggregator_type),
// 					},
// 					AggregatorKey:   pulumi.Any(_var.Registry_data_asset_default_connection_metadata_aggregator_key),
// 					CreatedBy:       pulumi.Any(_var.Registry_data_asset_default_connection_metadata_created_by),
// 					CreatedByName:   pulumi.Any(_var.Registry_data_asset_default_connection_metadata_created_by_name),
// 					IdentifierPath:  pulumi.Any(_var.Registry_data_asset_default_connection_metadata_identifier_path),
// 					InfoFields:      pulumi.Any(_var.Registry_data_asset_default_connection_metadata_info_fields),
// 					IsFavorite:      pulumi.Any(_var.Registry_data_asset_default_connection_metadata_is_favorite),
// 					Labels:          pulumi.Any(_var.Registry_data_asset_default_connection_metadata_labels),
// 					RegistryVersion: pulumi.Any(_var.Registry_data_asset_default_connection_metadata_registry_version),
// 					TimeCreated:     pulumi.Any(_var.Registry_data_asset_default_connection_metadata_time_created),
// 					TimeUpdated:     pulumi.Any(_var.Registry_data_asset_default_connection_metadata_time_updated),
// 					UpdatedBy:       pulumi.Any(_var.Registry_data_asset_default_connection_metadata_updated_by),
// 					UpdatedByName:   pulumi.Any(_var.Registry_data_asset_default_connection_metadata_updated_by_name),
// 				},
// 				ModelType:     pulumi.Any(_var.Registry_data_asset_default_connection_model_type),
// 				ModelVersion:  pulumi.Any(_var.Registry_data_asset_default_connection_model_version),
// 				ObjectStatus:  pulumi.Any(_var.Registry_data_asset_default_connection_object_status),
// 				ObjectVersion: pulumi.Any(_var.Registry_data_asset_default_connection_object_version),
// 				PrimarySchema: &dataconnectivity.RegistryDataAssetDefaultConnectionPrimarySchemaArgs{
// 					Identifier:        pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_identifier),
// 					Key:               pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_key),
// 					ModelType:         pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_model_type),
// 					Name:              pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_name),
// 					DefaultConnection: pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_default_connection),
// 					Description:       pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_description),
// 					ExternalKey:       pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_external_key),
// 					IsHasContainers:   pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_is_has_containers),
// 					Metadata: &dataconnectivity.RegistryDataAssetDefaultConnectionPrimarySchemaMetadataArgs{
// 						Aggregator: &dataconnectivity.RegistryDataAssetDefaultConnectionPrimarySchemaMetadataAggregatorArgs{
// 							Description: pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_aggregator_description),
// 							Identifier:  pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_aggregator_identifier),
// 							Key:         pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_aggregator_key),
// 							Name:        pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_aggregator_name),
// 							Type:        pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_aggregator_type),
// 						},
// 						AggregatorKey:   pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_aggregator_key),
// 						CreatedBy:       pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_created_by),
// 						CreatedByName:   pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_created_by_name),
// 						IdentifierPath:  pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_identifier_path),
// 						InfoFields:      pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_info_fields),
// 						IsFavorite:      pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_is_favorite),
// 						Labels:          pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_labels),
// 						RegistryVersion: pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_registry_version),
// 						TimeCreated:     pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_time_created),
// 						TimeUpdated:     pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_time_updated),
// 						UpdatedBy:       pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_updated_by),
// 						UpdatedByName:   pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_metadata_updated_by_name),
// 					},
// 					ModelVersion:  pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_model_version),
// 					ObjectStatus:  pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_object_status),
// 					ObjectVersion: pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_object_version),
// 					ParentRef: &dataconnectivity.RegistryDataAssetDefaultConnectionPrimarySchemaParentRefArgs{
// 						Parent: pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_parent_ref_parent),
// 					},
// 					ResourceName: pulumi.Any(_var.Registry_data_asset_default_connection_primary_schema_resource_name),
// 				},
// 				Properties: pulumi.Any(_var.Registry_data_asset_default_connection_properties),
// 				RegistryMetadata: &dataconnectivity.RegistryDataAssetDefaultConnectionRegistryMetadataArgs{
// 					AggregatorKey:     pulumi.Any(_var.Registry_data_asset_default_connection_registry_metadata_aggregator_key),
// 					CreatedByUserId:   pulumi.Any(oci_identity_user.Test_user.Id),
// 					CreatedByUserName: pulumi.Any(oci_identity_user.Test_user.Name),
// 					IsFavorite:        pulumi.Any(_var.Registry_data_asset_default_connection_registry_metadata_is_favorite),
// 					Key:               pulumi.Any(_var.Registry_data_asset_default_connection_registry_metadata_key),
// 					Labels:            pulumi.Any(_var.Registry_data_asset_default_connection_registry_metadata_labels),
// 					RegistryVersion:   pulumi.Any(_var.Registry_data_asset_default_connection_registry_metadata_registry_version),
// 					TimeCreated:       pulumi.Any(_var.Registry_data_asset_default_connection_registry_metadata_time_created),
// 					TimeUpdated:       pulumi.Any(_var.Registry_data_asset_default_connection_registry_metadata_time_updated),
// 					UpdatedByUserId:   pulumi.Any(oci_identity_user.Test_user.Id),
// 					UpdatedByUserName: pulumi.Any(oci_identity_user.Test_user.Name),
// 				},
// 				Type: pulumi.Any(_var.Registry_data_asset_default_connection_type),
// 			},
// 			Description: pulumi.Any(_var.Registry_data_asset_description),
// 			ExternalKey: pulumi.Any(_var.Registry_data_asset_external_key),
// 			Key:         pulumi.Any(_var.Registry_data_asset_key),
// 			Metadata: &dataconnectivity.RegistryDataAssetMetadataArgs{
// 				Aggregator: &dataconnectivity.RegistryDataAssetMetadataAggregatorArgs{
// 					Description: pulumi.Any(_var.Registry_data_asset_metadata_aggregator_description),
// 					Identifier:  pulumi.Any(_var.Registry_data_asset_metadata_aggregator_identifier),
// 					Key:         pulumi.Any(_var.Registry_data_asset_metadata_aggregator_key),
// 					Name:        pulumi.Any(_var.Registry_data_asset_metadata_aggregator_name),
// 					Type:        pulumi.Any(_var.Registry_data_asset_metadata_aggregator_type),
// 				},
// 				AggregatorKey:   pulumi.Any(_var.Registry_data_asset_metadata_aggregator_key),
// 				CreatedBy:       pulumi.Any(_var.Registry_data_asset_metadata_created_by),
// 				CreatedByName:   pulumi.Any(_var.Registry_data_asset_metadata_created_by_name),
// 				IdentifierPath:  pulumi.Any(_var.Registry_data_asset_metadata_identifier_path),
// 				InfoFields:      pulumi.Any(_var.Registry_data_asset_metadata_info_fields),
// 				IsFavorite:      pulumi.Any(_var.Registry_data_asset_metadata_is_favorite),
// 				Labels:          pulumi.Any(_var.Registry_data_asset_metadata_labels),
// 				RegistryVersion: pulumi.Any(_var.Registry_data_asset_metadata_registry_version),
// 				TimeCreated:     pulumi.Any(_var.Registry_data_asset_metadata_time_created),
// 				TimeUpdated:     pulumi.Any(_var.Registry_data_asset_metadata_time_updated),
// 				UpdatedBy:       pulumi.Any(_var.Registry_data_asset_metadata_updated_by),
// 				UpdatedByName:   pulumi.Any(_var.Registry_data_asset_metadata_updated_by_name),
// 			},
// 			ModelType:    pulumi.Any(_var.Registry_data_asset_model_type),
// 			ModelVersion: pulumi.Any(_var.Registry_data_asset_model_version),
// 			NativeTypeSystem: &dataconnectivity.RegistryDataAssetNativeTypeSystemArgs{
// 				Description:   pulumi.Any(_var.Registry_data_asset_native_type_system_description),
// 				Identifier:    pulumi.Any(_var.Registry_data_asset_native_type_system_identifier),
// 				Key:           pulumi.Any(_var.Registry_data_asset_native_type_system_key),
// 				ModelType:     pulumi.Any(_var.Registry_data_asset_native_type_system_model_type),
// 				ModelVersion:  pulumi.Any(_var.Registry_data_asset_native_type_system_model_version),
// 				Name:          pulumi.Any(_var.Registry_data_asset_native_type_system_name),
// 				ObjectStatus:  pulumi.Any(_var.Registry_data_asset_native_type_system_object_status),
// 				ObjectVersion: pulumi.Any(_var.Registry_data_asset_native_type_system_object_version),
// 				ParentRef: &dataconnectivity.RegistryDataAssetNativeTypeSystemParentRefArgs{
// 					Parent: pulumi.Any(_var.Registry_data_asset_native_type_system_parent_ref_parent),
// 				},
// 				TypeMappingFrom: pulumi.Any(_var.Registry_data_asset_native_type_system_type_mapping_from),
// 				TypeMappingTo:   pulumi.Any(_var.Registry_data_asset_native_type_system_type_mapping_to),
// 				Types: dataconnectivity.RegistryDataAssetNativeTypeSystemTypeArray{
// 					&dataconnectivity.RegistryDataAssetNativeTypeSystemTypeArgs{
// 						ModelType: pulumi.Any(_var.Registry_data_asset_native_type_system_types_model_type),
// 						ConfigDefinition: &dataconnectivity.RegistryDataAssetNativeTypeSystemTypeConfigDefinitionArgs{
// 							ConfigParameterDefinitions: pulumi.AnyMap{
// 								pulumi.Any{
// 									ClassFieldName:    _var.Registry_data_asset_native_type_system_types_config_definition_config_parameter_definitions_class_field_name,
// 									DefaultValue:      _var.Registry_data_asset_native_type_system_types_config_definition_config_parameter_definitions_default_value,
// 									Description:       _var.Registry_data_asset_native_type_system_types_config_definition_config_parameter_definitions_description,
// 									IsClassFieldValue: _var.Registry_data_asset_native_type_system_types_config_definition_config_parameter_definitions_is_class_field_value,
// 									IsStatic:          _var.Registry_data_asset_native_type_system_types_config_definition_config_parameter_definitions_is_static,
// 									ParameterName:     _var.Registry_data_asset_native_type_system_types_config_definition_config_parameter_definitions_parameter_name,
// 									ParameterType:     _var.Registry_data_asset_native_type_system_types_config_definition_config_parameter_definitions_parameter_type,
// 								},
// 							},
// 							IsContained:  pulumi.Any(_var.Registry_data_asset_native_type_system_types_config_definition_is_contained),
// 							Key:          pulumi.Any(_var.Registry_data_asset_native_type_system_types_config_definition_key),
// 							ModelType:    pulumi.Any(_var.Registry_data_asset_native_type_system_types_config_definition_model_type),
// 							ModelVersion: pulumi.Any(_var.Registry_data_asset_native_type_system_types_config_definition_model_version),
// 							Name:         pulumi.Any(_var.Registry_data_asset_native_type_system_types_config_definition_name),
// 							ObjectStatus: pulumi.Any(_var.Registry_data_asset_native_type_system_types_config_definition_object_status),
// 							ParentRef: &dataconnectivity.RegistryDataAssetNativeTypeSystemTypeConfigDefinitionParentRefArgs{
// 								Parent: pulumi.Any(_var.Registry_data_asset_native_type_system_types_config_definition_parent_ref_parent),
// 							},
// 						},
// 						Description:  pulumi.Any(_var.Registry_data_asset_native_type_system_types_description),
// 						DtType:       pulumi.Any(_var.Registry_data_asset_native_type_system_types_dt_type),
// 						Key:          pulumi.Any(_var.Registry_data_asset_native_type_system_types_key),
// 						ModelVersion: pulumi.Any(_var.Registry_data_asset_native_type_system_types_model_version),
// 						Name:         pulumi.Any(_var.Registry_data_asset_native_type_system_types_name),
// 						ObjectStatus: pulumi.Any(_var.Registry_data_asset_native_type_system_types_object_status),
// 						ParentRef: &dataconnectivity.RegistryDataAssetNativeTypeSystemTypeParentRefArgs{
// 							Parent: pulumi.Any(_var.Registry_data_asset_native_type_system_types_parent_ref_parent),
// 						},
// 						TypeSystemName: pulumi.Any(_var.Registry_data_asset_native_type_system_types_type_system_name),
// 					},
// 				},
// 			},
// 			ObjectStatus:  pulumi.Any(_var.Registry_data_asset_object_status),
// 			ObjectVersion: pulumi.Any(_var.Registry_data_asset_object_version),
// 			RegistryMetadata: &dataconnectivity.RegistryDataAssetRegistryMetadataArgs{
// 				AggregatorKey:     pulumi.Any(_var.Registry_data_asset_registry_metadata_aggregator_key),
// 				CreatedByUserId:   pulumi.Any(oci_identity_user.Test_user.Id),
// 				CreatedByUserName: pulumi.Any(oci_identity_user.Test_user.Name),
// 				IsFavorite:        pulumi.Any(_var.Registry_data_asset_registry_metadata_is_favorite),
// 				Key:               pulumi.Any(_var.Registry_data_asset_registry_metadata_key),
// 				Labels:            pulumi.Any(_var.Registry_data_asset_registry_metadata_labels),
// 				RegistryVersion:   pulumi.Any(_var.Registry_data_asset_registry_metadata_registry_version),
// 				TimeCreated:       pulumi.Any(_var.Registry_data_asset_registry_metadata_time_created),
// 				TimeUpdated:       pulumi.Any(_var.Registry_data_asset_registry_metadata_time_updated),
// 				UpdatedByUserId:   pulumi.Any(oci_identity_user.Test_user.Id),
// 				UpdatedByUserName: pulumi.Any(oci_identity_user.Test_user.Name),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// RegistryDataAssets can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:DataConnectivity/registryDataAsset:RegistryDataAsset test_registry_data_asset "registries/{registryId}/dataAssets/{dataAssetKey}"
// ```
type RegistryDataAsset struct {
	pulumi.CustomResourceState

	// (Updatable) Additional properties for the data asset.
	AssetProperties pulumi.MapOutput `pulumi:"assetProperties"`
	// (Updatable) The default connection key.
	DefaultConnection RegistryDataAssetDefaultConnectionOutput `pulumi:"defaultConnection"`
	// (Updatable) A user defined description for the object.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The external key for the object.
	ExternalKey pulumi.StringOutput `pulumi:"externalKey"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// (Updatable) The identifying key for the object.
	Key pulumi.StringOutput `pulumi:"key"`
	// (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadata RegistryDataAssetMetadataOutput `pulumi:"metadata"`
	// (Updatable) The property which disciminates the subtypes.
	ModelType pulumi.StringOutput `pulumi:"modelType"`
	// (Updatable) The model version of an object.
	ModelVersion pulumi.StringOutput `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) The type system maps from and to a type.
	NativeTypeSystem RegistryDataAssetNativeTypeSystemOutput `pulumi:"nativeTypeSystem"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntOutput `pulumi:"objectStatus"`
	// (Updatable) The version of the object that is used to track changes in the object instance.
	ObjectVersion pulumi.IntOutput `pulumi:"objectVersion"`
	// (Updatable) All the properties for the data asset in a key-value map format.
	Properties pulumi.MapOutput `pulumi:"properties"`
	// The registry Ocid.
	RegistryId pulumi.StringOutput `pulumi:"registryId"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata RegistryDataAssetRegistryMetadataOutput `pulumi:"registryMetadata"`
	// (Updatable) Specific DataAsset Type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRegistryDataAsset registers a new resource with the given unique name, arguments, and options.
func NewRegistryDataAsset(ctx *pulumi.Context,
	name string, args *RegistryDataAssetArgs, opts ...pulumi.ResourceOption) (*RegistryDataAsset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.ModelType == nil {
		return nil, errors.New("invalid value for required argument 'ModelType'")
	}
	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.RegistryId == nil {
		return nil, errors.New("invalid value for required argument 'RegistryId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource RegistryDataAsset
	err := ctx.RegisterResource("oci:DataConnectivity/registryDataAsset:RegistryDataAsset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegistryDataAsset gets an existing RegistryDataAsset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegistryDataAsset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegistryDataAssetState, opts ...pulumi.ResourceOption) (*RegistryDataAsset, error) {
	var resource RegistryDataAsset
	err := ctx.ReadResource("oci:DataConnectivity/registryDataAsset:RegistryDataAsset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegistryDataAsset resources.
type registryDataAssetState struct {
	// (Updatable) Additional properties for the data asset.
	AssetProperties map[string]interface{} `pulumi:"assetProperties"`
	// (Updatable) The default connection key.
	DefaultConnection *RegistryDataAssetDefaultConnection `pulumi:"defaultConnection"`
	// (Updatable) A user defined description for the object.
	Description *string `pulumi:"description"`
	// (Updatable) The external key for the object.
	ExternalKey *string `pulumi:"externalKey"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier *string `pulumi:"identifier"`
	// (Updatable) The identifying key for the object.
	Key *string `pulumi:"key"`
	// (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadata *RegistryDataAssetMetadata `pulumi:"metadata"`
	// (Updatable) The property which disciminates the subtypes.
	ModelType *string `pulumi:"modelType"`
	// (Updatable) The model version of an object.
	ModelVersion *string `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// (Updatable) The type system maps from and to a type.
	NativeTypeSystem *RegistryDataAssetNativeTypeSystem `pulumi:"nativeTypeSystem"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// (Updatable) The version of the object that is used to track changes in the object instance.
	ObjectVersion *int `pulumi:"objectVersion"`
	// (Updatable) All the properties for the data asset in a key-value map format.
	Properties map[string]interface{} `pulumi:"properties"`
	// The registry Ocid.
	RegistryId *string `pulumi:"registryId"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata *RegistryDataAssetRegistryMetadata `pulumi:"registryMetadata"`
	// (Updatable) Specific DataAsset Type
	Type *string `pulumi:"type"`
}

type RegistryDataAssetState struct {
	// (Updatable) Additional properties for the data asset.
	AssetProperties pulumi.MapInput
	// (Updatable) The default connection key.
	DefaultConnection RegistryDataAssetDefaultConnectionPtrInput
	// (Updatable) A user defined description for the object.
	Description pulumi.StringPtrInput
	// (Updatable) The external key for the object.
	ExternalKey pulumi.StringPtrInput
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringPtrInput
	// (Updatable) The identifying key for the object.
	Key pulumi.StringPtrInput
	// (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadata RegistryDataAssetMetadataPtrInput
	// (Updatable) The property which disciminates the subtypes.
	ModelType pulumi.StringPtrInput
	// (Updatable) The model version of an object.
	ModelVersion pulumi.StringPtrInput
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringPtrInput
	// (Updatable) The type system maps from and to a type.
	NativeTypeSystem RegistryDataAssetNativeTypeSystemPtrInput
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// (Updatable) The version of the object that is used to track changes in the object instance.
	ObjectVersion pulumi.IntPtrInput
	// (Updatable) All the properties for the data asset in a key-value map format.
	Properties pulumi.MapInput
	// The registry Ocid.
	RegistryId pulumi.StringPtrInput
	// (Updatable) Information about the object and its parent.
	RegistryMetadata RegistryDataAssetRegistryMetadataPtrInput
	// (Updatable) Specific DataAsset Type
	Type pulumi.StringPtrInput
}

func (RegistryDataAssetState) ElementType() reflect.Type {
	return reflect.TypeOf((*registryDataAssetState)(nil)).Elem()
}

type registryDataAssetArgs struct {
	// (Updatable) Additional properties for the data asset.
	AssetProperties map[string]interface{} `pulumi:"assetProperties"`
	// (Updatable) The default connection key.
	DefaultConnection *RegistryDataAssetDefaultConnection `pulumi:"defaultConnection"`
	// (Updatable) A user defined description for the object.
	Description *string `pulumi:"description"`
	// (Updatable) The external key for the object.
	ExternalKey *string `pulumi:"externalKey"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier string `pulumi:"identifier"`
	// (Updatable) The identifying key for the object.
	Key *string `pulumi:"key"`
	// (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadata *RegistryDataAssetMetadata `pulumi:"metadata"`
	// (Updatable) The property which disciminates the subtypes.
	ModelType string `pulumi:"modelType"`
	// (Updatable) The model version of an object.
	ModelVersion *string `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// (Updatable) The type system maps from and to a type.
	NativeTypeSystem *RegistryDataAssetNativeTypeSystem `pulumi:"nativeTypeSystem"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// (Updatable) The version of the object that is used to track changes in the object instance.
	ObjectVersion *int `pulumi:"objectVersion"`
	// (Updatable) All the properties for the data asset in a key-value map format.
	Properties map[string]interface{} `pulumi:"properties"`
	// The registry Ocid.
	RegistryId string `pulumi:"registryId"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata *RegistryDataAssetRegistryMetadata `pulumi:"registryMetadata"`
	// (Updatable) Specific DataAsset Type
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a RegistryDataAsset resource.
type RegistryDataAssetArgs struct {
	// (Updatable) Additional properties for the data asset.
	AssetProperties pulumi.MapInput
	// (Updatable) The default connection key.
	DefaultConnection RegistryDataAssetDefaultConnectionPtrInput
	// (Updatable) A user defined description for the object.
	Description pulumi.StringPtrInput
	// (Updatable) The external key for the object.
	ExternalKey pulumi.StringPtrInput
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringInput
	// (Updatable) The identifying key for the object.
	Key pulumi.StringPtrInput
	// (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadata RegistryDataAssetMetadataPtrInput
	// (Updatable) The property which disciminates the subtypes.
	ModelType pulumi.StringInput
	// (Updatable) The model version of an object.
	ModelVersion pulumi.StringPtrInput
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringPtrInput
	// (Updatable) The type system maps from and to a type.
	NativeTypeSystem RegistryDataAssetNativeTypeSystemPtrInput
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// (Updatable) The version of the object that is used to track changes in the object instance.
	ObjectVersion pulumi.IntPtrInput
	// (Updatable) All the properties for the data asset in a key-value map format.
	Properties pulumi.MapInput
	// The registry Ocid.
	RegistryId pulumi.StringInput
	// (Updatable) Information about the object and its parent.
	RegistryMetadata RegistryDataAssetRegistryMetadataPtrInput
	// (Updatable) Specific DataAsset Type
	Type pulumi.StringInput
}

func (RegistryDataAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*registryDataAssetArgs)(nil)).Elem()
}

type RegistryDataAssetInput interface {
	pulumi.Input

	ToRegistryDataAssetOutput() RegistryDataAssetOutput
	ToRegistryDataAssetOutputWithContext(ctx context.Context) RegistryDataAssetOutput
}

func (*RegistryDataAsset) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryDataAsset)(nil)).Elem()
}

func (i *RegistryDataAsset) ToRegistryDataAssetOutput() RegistryDataAssetOutput {
	return i.ToRegistryDataAssetOutputWithContext(context.Background())
}

func (i *RegistryDataAsset) ToRegistryDataAssetOutputWithContext(ctx context.Context) RegistryDataAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryDataAssetOutput)
}

// RegistryDataAssetArrayInput is an input type that accepts RegistryDataAssetArray and RegistryDataAssetArrayOutput values.
// You can construct a concrete instance of `RegistryDataAssetArrayInput` via:
//
//          RegistryDataAssetArray{ RegistryDataAssetArgs{...} }
type RegistryDataAssetArrayInput interface {
	pulumi.Input

	ToRegistryDataAssetArrayOutput() RegistryDataAssetArrayOutput
	ToRegistryDataAssetArrayOutputWithContext(context.Context) RegistryDataAssetArrayOutput
}

type RegistryDataAssetArray []RegistryDataAssetInput

func (RegistryDataAssetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegistryDataAsset)(nil)).Elem()
}

func (i RegistryDataAssetArray) ToRegistryDataAssetArrayOutput() RegistryDataAssetArrayOutput {
	return i.ToRegistryDataAssetArrayOutputWithContext(context.Background())
}

func (i RegistryDataAssetArray) ToRegistryDataAssetArrayOutputWithContext(ctx context.Context) RegistryDataAssetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryDataAssetArrayOutput)
}

// RegistryDataAssetMapInput is an input type that accepts RegistryDataAssetMap and RegistryDataAssetMapOutput values.
// You can construct a concrete instance of `RegistryDataAssetMapInput` via:
//
//          RegistryDataAssetMap{ "key": RegistryDataAssetArgs{...} }
type RegistryDataAssetMapInput interface {
	pulumi.Input

	ToRegistryDataAssetMapOutput() RegistryDataAssetMapOutput
	ToRegistryDataAssetMapOutputWithContext(context.Context) RegistryDataAssetMapOutput
}

type RegistryDataAssetMap map[string]RegistryDataAssetInput

func (RegistryDataAssetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegistryDataAsset)(nil)).Elem()
}

func (i RegistryDataAssetMap) ToRegistryDataAssetMapOutput() RegistryDataAssetMapOutput {
	return i.ToRegistryDataAssetMapOutputWithContext(context.Background())
}

func (i RegistryDataAssetMap) ToRegistryDataAssetMapOutputWithContext(ctx context.Context) RegistryDataAssetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryDataAssetMapOutput)
}

type RegistryDataAssetOutput struct{ *pulumi.OutputState }

func (RegistryDataAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryDataAsset)(nil)).Elem()
}

func (o RegistryDataAssetOutput) ToRegistryDataAssetOutput() RegistryDataAssetOutput {
	return o
}

func (o RegistryDataAssetOutput) ToRegistryDataAssetOutputWithContext(ctx context.Context) RegistryDataAssetOutput {
	return o
}

type RegistryDataAssetArrayOutput struct{ *pulumi.OutputState }

func (RegistryDataAssetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegistryDataAsset)(nil)).Elem()
}

func (o RegistryDataAssetArrayOutput) ToRegistryDataAssetArrayOutput() RegistryDataAssetArrayOutput {
	return o
}

func (o RegistryDataAssetArrayOutput) ToRegistryDataAssetArrayOutputWithContext(ctx context.Context) RegistryDataAssetArrayOutput {
	return o
}

func (o RegistryDataAssetArrayOutput) Index(i pulumi.IntInput) RegistryDataAssetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RegistryDataAsset {
		return vs[0].([]*RegistryDataAsset)[vs[1].(int)]
	}).(RegistryDataAssetOutput)
}

type RegistryDataAssetMapOutput struct{ *pulumi.OutputState }

func (RegistryDataAssetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegistryDataAsset)(nil)).Elem()
}

func (o RegistryDataAssetMapOutput) ToRegistryDataAssetMapOutput() RegistryDataAssetMapOutput {
	return o
}

func (o RegistryDataAssetMapOutput) ToRegistryDataAssetMapOutputWithContext(ctx context.Context) RegistryDataAssetMapOutput {
	return o
}

func (o RegistryDataAssetMapOutput) MapIndex(k pulumi.StringInput) RegistryDataAssetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RegistryDataAsset {
		return vs[0].(map[string]*RegistryDataAsset)[vs[1].(string)]
	}).(RegistryDataAssetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryDataAssetInput)(nil)).Elem(), &RegistryDataAsset{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryDataAssetArrayInput)(nil)).Elem(), RegistryDataAssetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryDataAssetMapInput)(nil)).Elem(), RegistryDataAssetMap{})
	pulumi.RegisterOutputType(RegistryDataAssetOutput{})
	pulumi.RegisterOutputType(RegistryDataAssetArrayOutput{})
	pulumi.RegisterOutputType(RegistryDataAssetMapOutput{})
}
