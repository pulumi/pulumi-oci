// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dataconnectivity

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Registry Folder resource in Oracle Cloud Infrastructure Data Connectivity service.
//
// Creates a folder under a specefied registry.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataConnectivity"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := DataConnectivity.NewRegistryFolder(ctx, "testRegistryFolder", &DataConnectivity.RegistryFolderArgs{
// 			Identifier: pulumi.Any(_var.Registry_folder_identifier),
// 			RegistryId: pulumi.Any(oci_data_connectivity_registry.Test_registry.Id),
// 			DataAssets: dataconnectivity.RegistryFolderDataAssetArray{
// 				&dataconnectivity.RegistryFolderDataAssetArgs{
// 					Identifier:      pulumi.Any(_var.Registry_folder_data_assets_identifier),
// 					Key:             pulumi.Any(_var.Registry_folder_data_assets_key),
// 					Name:            pulumi.Any(_var.Registry_folder_data_assets_name),
// 					AssetProperties: pulumi.Any(_var.Registry_folder_data_assets_asset_properties),
// 					DefaultConnection: &dataconnectivity.RegistryFolderDataAssetDefaultConnectionArgs{
// 						Identifier: pulumi.Any(_var.Registry_folder_data_assets_default_connection_identifier),
// 						Key:        pulumi.Any(_var.Registry_folder_data_assets_default_connection_key),
// 						Name:       pulumi.Any(_var.Registry_folder_data_assets_default_connection_name),
// 						ConnectionProperties: dataconnectivity.RegistryFolderDataAssetDefaultConnectionConnectionPropertyArray{
// 							&dataconnectivity.RegistryFolderDataAssetDefaultConnectionConnectionPropertyArgs{
// 								Name:  pulumi.Any(_var.Registry_folder_data_assets_default_connection_connection_properties_name),
// 								Value: pulumi.Any(_var.Registry_folder_data_assets_default_connection_connection_properties_value),
// 							},
// 						},
// 						Description: pulumi.Any(_var.Registry_folder_data_assets_default_connection_description),
// 						IsDefault:   pulumi.Any(_var.Registry_folder_data_assets_default_connection_is_default),
// 						Metadata: &dataconnectivity.RegistryFolderDataAssetDefaultConnectionMetadataArgs{
// 							Aggregator: &dataconnectivity.RegistryFolderDataAssetDefaultConnectionMetadataAggregatorArgs{
// 								Description: pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_aggregator_description),
// 								Identifier:  pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_aggregator_identifier),
// 								Key:         pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_aggregator_key),
// 								Name:        pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_aggregator_name),
// 								Type:        pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_aggregator_type),
// 							},
// 							AggregatorKey:   pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_aggregator_key),
// 							CreatedBy:       pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_created_by),
// 							CreatedByName:   pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_created_by_name),
// 							IdentifierPath:  pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_identifier_path),
// 							InfoFields:      pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_info_fields),
// 							IsFavorite:      pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_is_favorite),
// 							Labels:          pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_labels),
// 							RegistryVersion: pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_registry_version),
// 							TimeCreated:     pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_time_created),
// 							TimeUpdated:     pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_time_updated),
// 							UpdatedBy:       pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_updated_by),
// 							UpdatedByName:   pulumi.Any(_var.Registry_folder_data_assets_default_connection_metadata_updated_by_name),
// 						},
// 						ModelType:     pulumi.Any(_var.Registry_folder_data_assets_default_connection_model_type),
// 						ModelVersion:  pulumi.Any(_var.Registry_folder_data_assets_default_connection_model_version),
// 						ObjectStatus:  pulumi.Any(_var.Registry_folder_data_assets_default_connection_object_status),
// 						ObjectVersion: pulumi.Any(_var.Registry_folder_data_assets_default_connection_object_version),
// 						PrimarySchema: &dataconnectivity.RegistryFolderDataAssetDefaultConnectionPrimarySchemaArgs{
// 							Identifier:        pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_identifier),
// 							Key:               pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_key),
// 							ModelType:         pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_model_type),
// 							Name:              pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_name),
// 							DefaultConnection: pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_default_connection),
// 							Description:       pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_description),
// 							ExternalKey:       pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_external_key),
// 							IsHasContainers:   pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_is_has_containers),
// 							Metadata: &dataconnectivity.RegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadataArgs{
// 								Aggregator: &dataconnectivity.RegistryFolderDataAssetDefaultConnectionPrimarySchemaMetadataAggregatorArgs{
// 									Description: pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_description),
// 									Identifier:  pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_identifier),
// 									Key:         pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_key),
// 									Name:        pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_name),
// 									Type:        pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_type),
// 								},
// 								AggregatorKey:   pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_aggregator_key),
// 								CreatedBy:       pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_created_by),
// 								CreatedByName:   pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_created_by_name),
// 								IdentifierPath:  pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_identifier_path),
// 								InfoFields:      pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_info_fields),
// 								IsFavorite:      pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_is_favorite),
// 								Labels:          pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_labels),
// 								RegistryVersion: pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_registry_version),
// 								TimeCreated:     pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_time_created),
// 								TimeUpdated:     pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_time_updated),
// 								UpdatedBy:       pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_updated_by),
// 								UpdatedByName:   pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_metadata_updated_by_name),
// 							},
// 							ModelVersion:  pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_model_version),
// 							ObjectStatus:  pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_object_status),
// 							ObjectVersion: pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_object_version),
// 							ParentRef: &dataconnectivity.RegistryFolderDataAssetDefaultConnectionPrimarySchemaParentRefArgs{
// 								Parent: pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_parent_ref_parent),
// 							},
// 							ResourceName: pulumi.Any(_var.Registry_folder_data_assets_default_connection_primary_schema_resource_name),
// 						},
// 						Properties: pulumi.Any(_var.Registry_folder_data_assets_default_connection_properties),
// 						RegistryMetadata: &dataconnectivity.RegistryFolderDataAssetDefaultConnectionRegistryMetadataArgs{
// 							AggregatorKey:     pulumi.Any(_var.Registry_folder_data_assets_default_connection_registry_metadata_aggregator_key),
// 							CreatedByUserId:   pulumi.Any(oci_identity_user.Test_user.Id),
// 							CreatedByUserName: pulumi.Any(oci_identity_user.Test_user.Name),
// 							IsFavorite:        pulumi.Any(_var.Registry_folder_data_assets_default_connection_registry_metadata_is_favorite),
// 							Key:               pulumi.Any(_var.Registry_folder_data_assets_default_connection_registry_metadata_key),
// 							Labels:            pulumi.Any(_var.Registry_folder_data_assets_default_connection_registry_metadata_labels),
// 							RegistryVersion:   pulumi.Any(_var.Registry_folder_data_assets_default_connection_registry_metadata_registry_version),
// 							TimeCreated:       pulumi.Any(_var.Registry_folder_data_assets_default_connection_registry_metadata_time_created),
// 							TimeUpdated:       pulumi.Any(_var.Registry_folder_data_assets_default_connection_registry_metadata_time_updated),
// 							UpdatedByUserId:   pulumi.Any(oci_identity_user.Test_user.Id),
// 							UpdatedByUserName: pulumi.Any(oci_identity_user.Test_user.Name),
// 						},
// 						Type: pulumi.Any(_var.Registry_folder_data_assets_default_connection_type),
// 					},
// 					Description: pulumi.Any(_var.Registry_folder_data_assets_description),
// 					EndPoints:   _var.Registry_folder_data_assets_end_points,
// 					ExternalKey: pulumi.Any(_var.Registry_folder_data_assets_external_key),
// 					Metadata: &dataconnectivity.RegistryFolderDataAssetMetadataArgs{
// 						Aggregator: &dataconnectivity.RegistryFolderDataAssetMetadataAggregatorArgs{
// 							Description: pulumi.Any(_var.Registry_folder_data_assets_metadata_aggregator_description),
// 							Identifier:  pulumi.Any(_var.Registry_folder_data_assets_metadata_aggregator_identifier),
// 							Key:         pulumi.Any(_var.Registry_folder_data_assets_metadata_aggregator_key),
// 							Name:        pulumi.Any(_var.Registry_folder_data_assets_metadata_aggregator_name),
// 							Type:        pulumi.Any(_var.Registry_folder_data_assets_metadata_aggregator_type),
// 						},
// 						AggregatorKey:   pulumi.Any(_var.Registry_folder_data_assets_metadata_aggregator_key),
// 						CreatedBy:       pulumi.Any(_var.Registry_folder_data_assets_metadata_created_by),
// 						CreatedByName:   pulumi.Any(_var.Registry_folder_data_assets_metadata_created_by_name),
// 						IdentifierPath:  pulumi.Any(_var.Registry_folder_data_assets_metadata_identifier_path),
// 						InfoFields:      pulumi.Any(_var.Registry_folder_data_assets_metadata_info_fields),
// 						IsFavorite:      pulumi.Any(_var.Registry_folder_data_assets_metadata_is_favorite),
// 						Labels:          pulumi.Any(_var.Registry_folder_data_assets_metadata_labels),
// 						RegistryVersion: pulumi.Any(_var.Registry_folder_data_assets_metadata_registry_version),
// 						TimeCreated:     pulumi.Any(_var.Registry_folder_data_assets_metadata_time_created),
// 						TimeUpdated:     pulumi.Any(_var.Registry_folder_data_assets_metadata_time_updated),
// 						UpdatedBy:       pulumi.Any(_var.Registry_folder_data_assets_metadata_updated_by),
// 						UpdatedByName:   pulumi.Any(_var.Registry_folder_data_assets_metadata_updated_by_name),
// 					},
// 					ModelType:    pulumi.Any(_var.Registry_folder_data_assets_model_type),
// 					ModelVersion: pulumi.Any(_var.Registry_folder_data_assets_model_version),
// 					NativeTypeSystem: &dataconnectivity.RegistryFolderDataAssetNativeTypeSystemArgs{
// 						Description:   pulumi.Any(_var.Registry_folder_data_assets_native_type_system_description),
// 						Identifier:    pulumi.Any(_var.Registry_folder_data_assets_native_type_system_identifier),
// 						Key:           pulumi.Any(_var.Registry_folder_data_assets_native_type_system_key),
// 						ModelType:     pulumi.Any(_var.Registry_folder_data_assets_native_type_system_model_type),
// 						ModelVersion:  pulumi.Any(_var.Registry_folder_data_assets_native_type_system_model_version),
// 						Name:          pulumi.Any(_var.Registry_folder_data_assets_native_type_system_name),
// 						ObjectStatus:  pulumi.Any(_var.Registry_folder_data_assets_native_type_system_object_status),
// 						ObjectVersion: pulumi.Any(_var.Registry_folder_data_assets_native_type_system_object_version),
// 						ParentRef: &dataconnectivity.RegistryFolderDataAssetNativeTypeSystemParentRefArgs{
// 							Parent: pulumi.Any(_var.Registry_folder_data_assets_native_type_system_parent_ref_parent),
// 						},
// 						TypeMappingFrom: pulumi.Any(_var.Registry_folder_data_assets_native_type_system_type_mapping_from),
// 						TypeMappingTo:   pulumi.Any(_var.Registry_folder_data_assets_native_type_system_type_mapping_to),
// 						Types: dataconnectivity.RegistryFolderDataAssetNativeTypeSystemTypeArray{
// 							&dataconnectivity.RegistryFolderDataAssetNativeTypeSystemTypeArgs{
// 								ModelType: pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_model_type),
// 								ConfigDefinition: &dataconnectivity.RegistryFolderDataAssetNativeTypeSystemTypeConfigDefinitionArgs{
// 									ConfigParameterDefinitions: pulumi.AnyMap{
// 										pulumi.Any{
// 											ClassFieldName:    _var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_class_field_name,
// 											DefaultValue:      _var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_default_value,
// 											Description:       _var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_description,
// 											IsClassFieldValue: _var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_is_class_field_value,
// 											IsStatic:          _var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_is_static,
// 											ParameterName:     _var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_parameter_name,
// 											ParameterType:     _var.Registry_folder_data_assets_native_type_system_types_config_definition_config_parameter_definitions_parameter_type,
// 										},
// 									},
// 									IsContained:  pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_config_definition_is_contained),
// 									Key:          pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_config_definition_key),
// 									ModelType:    pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_config_definition_model_type),
// 									ModelVersion: pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_config_definition_model_version),
// 									Name:         pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_config_definition_name),
// 									ObjectStatus: pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_config_definition_object_status),
// 									ParentRef: &dataconnectivity.RegistryFolderDataAssetNativeTypeSystemTypeConfigDefinitionParentRefArgs{
// 										Parent: pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_config_definition_parent_ref_parent),
// 									},
// 								},
// 								Description:  pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_description),
// 								DtType:       pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_dt_type),
// 								Key:          pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_key),
// 								ModelVersion: pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_model_version),
// 								Name:         pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_name),
// 								ObjectStatus: pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_object_status),
// 								ParentRef: &dataconnectivity.RegistryFolderDataAssetNativeTypeSystemTypeParentRefArgs{
// 									Parent: pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_parent_ref_parent),
// 								},
// 								TypeSystemName: pulumi.Any(_var.Registry_folder_data_assets_native_type_system_types_type_system_name),
// 							},
// 						},
// 					},
// 					ObjectStatus:  pulumi.Any(_var.Registry_folder_data_assets_object_status),
// 					ObjectVersion: pulumi.Any(_var.Registry_folder_data_assets_object_version),
// 					Properties:    pulumi.Any(_var.Registry_folder_data_assets_properties),
// 					RegistryMetadata: &dataconnectivity.RegistryFolderDataAssetRegistryMetadataArgs{
// 						AggregatorKey:     pulumi.Any(_var.Registry_folder_data_assets_registry_metadata_aggregator_key),
// 						CreatedByUserId:   pulumi.Any(oci_identity_user.Test_user.Id),
// 						CreatedByUserName: pulumi.Any(oci_identity_user.Test_user.Name),
// 						IsFavorite:        pulumi.Any(_var.Registry_folder_data_assets_registry_metadata_is_favorite),
// 						Key:               pulumi.Any(_var.Registry_folder_data_assets_registry_metadata_key),
// 						Labels:            pulumi.Any(_var.Registry_folder_data_assets_registry_metadata_labels),
// 						RegistryVersion:   pulumi.Any(_var.Registry_folder_data_assets_registry_metadata_registry_version),
// 						TimeCreated:       pulumi.Any(_var.Registry_folder_data_assets_registry_metadata_time_created),
// 						TimeUpdated:       pulumi.Any(_var.Registry_folder_data_assets_registry_metadata_time_updated),
// 						UpdatedByUserId:   pulumi.Any(oci_identity_user.Test_user.Id),
// 						UpdatedByUserName: pulumi.Any(oci_identity_user.Test_user.Name),
// 					},
// 					Type: pulumi.Any(_var.Registry_folder_data_assets_type),
// 				},
// 			},
// 			Description:   pulumi.Any(_var.Registry_folder_description),
// 			Key:           pulumi.Any(_var.Registry_folder_key),
// 			ModelType:     pulumi.Any(_var.Registry_folder_model_type),
// 			ModelVersion:  pulumi.Any(_var.Registry_folder_model_version),
// 			ObjectStatus:  pulumi.Any(_var.Registry_folder_object_status),
// 			ObjectVersion: pulumi.Any(_var.Registry_folder_object_version),
// 			ParentRef: &dataconnectivity.RegistryFolderParentRefArgs{
// 				Parent: pulumi.Any(_var.Registry_folder_parent_ref_parent),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// RegistryFolders can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:DataConnectivity/registryFolder:RegistryFolder test_registry_folder "registries/{registryId}/folders/{folderKey}"
// ```
type RegistryFolder struct {
	pulumi.CustomResourceState

	// (Updatable) List of data assets which belongs to this folder
	DataAssets RegistryFolderDataAssetArrayOutput `pulumi:"dataAssets"`
	// (Updatable) User-defined description for the folder.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
	Key pulumi.StringOutput `pulumi:"key"`
	// (Updatable) The type of the folder.
	ModelType pulumi.StringOutput `pulumi:"modelType"`
	// (Updatable) The model version of an object.
	ModelVersion pulumi.StringOutput `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntOutput `pulumi:"objectStatus"`
	// (Updatable) The version of the object that is used to track changes in the object instance.
	ObjectVersion pulumi.IntOutput `pulumi:"objectVersion"`
	// (Updatable) A reference to the object's parent.
	ParentRef RegistryFolderParentRefOutput `pulumi:"parentRef"`
	// The registry Ocid.
	RegistryId pulumi.StringOutput `pulumi:"registryId"`
}

// NewRegistryFolder registers a new resource with the given unique name, arguments, and options.
func NewRegistryFolder(ctx *pulumi.Context,
	name string, args *RegistryFolderArgs, opts ...pulumi.ResourceOption) (*RegistryFolder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.RegistryId == nil {
		return nil, errors.New("invalid value for required argument 'RegistryId'")
	}
	var resource RegistryFolder
	err := ctx.RegisterResource("oci:DataConnectivity/registryFolder:RegistryFolder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegistryFolder gets an existing RegistryFolder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegistryFolder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegistryFolderState, opts ...pulumi.ResourceOption) (*RegistryFolder, error) {
	var resource RegistryFolder
	err := ctx.ReadResource("oci:DataConnectivity/registryFolder:RegistryFolder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegistryFolder resources.
type registryFolderState struct {
	// (Updatable) List of data assets which belongs to this folder
	DataAssets []RegistryFolderDataAsset `pulumi:"dataAssets"`
	// (Updatable) User-defined description for the folder.
	Description *string `pulumi:"description"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier *string `pulumi:"identifier"`
	// (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
	Key *string `pulumi:"key"`
	// (Updatable) The type of the folder.
	ModelType *string `pulumi:"modelType"`
	// (Updatable) The model version of an object.
	ModelVersion *string `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// (Updatable) The version of the object that is used to track changes in the object instance.
	ObjectVersion *int `pulumi:"objectVersion"`
	// (Updatable) A reference to the object's parent.
	ParentRef *RegistryFolderParentRef `pulumi:"parentRef"`
	// The registry Ocid.
	RegistryId *string `pulumi:"registryId"`
}

type RegistryFolderState struct {
	// (Updatable) List of data assets which belongs to this folder
	DataAssets RegistryFolderDataAssetArrayInput
	// (Updatable) User-defined description for the folder.
	Description pulumi.StringPtrInput
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringPtrInput
	// (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
	Key pulumi.StringPtrInput
	// (Updatable) The type of the folder.
	ModelType pulumi.StringPtrInput
	// (Updatable) The model version of an object.
	ModelVersion pulumi.StringPtrInput
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringPtrInput
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// (Updatable) The version of the object that is used to track changes in the object instance.
	ObjectVersion pulumi.IntPtrInput
	// (Updatable) A reference to the object's parent.
	ParentRef RegistryFolderParentRefPtrInput
	// The registry Ocid.
	RegistryId pulumi.StringPtrInput
}

func (RegistryFolderState) ElementType() reflect.Type {
	return reflect.TypeOf((*registryFolderState)(nil)).Elem()
}

type registryFolderArgs struct {
	// (Updatable) List of data assets which belongs to this folder
	DataAssets []RegistryFolderDataAsset `pulumi:"dataAssets"`
	// (Updatable) User-defined description for the folder.
	Description *string `pulumi:"description"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier string `pulumi:"identifier"`
	// (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
	Key *string `pulumi:"key"`
	// (Updatable) The type of the folder.
	ModelType *string `pulumi:"modelType"`
	// (Updatable) The model version of an object.
	ModelVersion *string `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// (Updatable) The version of the object that is used to track changes in the object instance.
	ObjectVersion *int `pulumi:"objectVersion"`
	// (Updatable) A reference to the object's parent.
	ParentRef *RegistryFolderParentRef `pulumi:"parentRef"`
	// The registry Ocid.
	RegistryId string `pulumi:"registryId"`
}

// The set of arguments for constructing a RegistryFolder resource.
type RegistryFolderArgs struct {
	// (Updatable) List of data assets which belongs to this folder
	DataAssets RegistryFolderDataAssetArrayInput
	// (Updatable) User-defined description for the folder.
	Description pulumi.StringPtrInput
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringInput
	// (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
	Key pulumi.StringPtrInput
	// (Updatable) The type of the folder.
	ModelType pulumi.StringPtrInput
	// (Updatable) The model version of an object.
	ModelVersion pulumi.StringPtrInput
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringPtrInput
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// (Updatable) The version of the object that is used to track changes in the object instance.
	ObjectVersion pulumi.IntPtrInput
	// (Updatable) A reference to the object's parent.
	ParentRef RegistryFolderParentRefPtrInput
	// The registry Ocid.
	RegistryId pulumi.StringInput
}

func (RegistryFolderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*registryFolderArgs)(nil)).Elem()
}

type RegistryFolderInput interface {
	pulumi.Input

	ToRegistryFolderOutput() RegistryFolderOutput
	ToRegistryFolderOutputWithContext(ctx context.Context) RegistryFolderOutput
}

func (*RegistryFolder) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryFolder)(nil)).Elem()
}

func (i *RegistryFolder) ToRegistryFolderOutput() RegistryFolderOutput {
	return i.ToRegistryFolderOutputWithContext(context.Background())
}

func (i *RegistryFolder) ToRegistryFolderOutputWithContext(ctx context.Context) RegistryFolderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryFolderOutput)
}

// RegistryFolderArrayInput is an input type that accepts RegistryFolderArray and RegistryFolderArrayOutput values.
// You can construct a concrete instance of `RegistryFolderArrayInput` via:
//
//          RegistryFolderArray{ RegistryFolderArgs{...} }
type RegistryFolderArrayInput interface {
	pulumi.Input

	ToRegistryFolderArrayOutput() RegistryFolderArrayOutput
	ToRegistryFolderArrayOutputWithContext(context.Context) RegistryFolderArrayOutput
}

type RegistryFolderArray []RegistryFolderInput

func (RegistryFolderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegistryFolder)(nil)).Elem()
}

func (i RegistryFolderArray) ToRegistryFolderArrayOutput() RegistryFolderArrayOutput {
	return i.ToRegistryFolderArrayOutputWithContext(context.Background())
}

func (i RegistryFolderArray) ToRegistryFolderArrayOutputWithContext(ctx context.Context) RegistryFolderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryFolderArrayOutput)
}

// RegistryFolderMapInput is an input type that accepts RegistryFolderMap and RegistryFolderMapOutput values.
// You can construct a concrete instance of `RegistryFolderMapInput` via:
//
//          RegistryFolderMap{ "key": RegistryFolderArgs{...} }
type RegistryFolderMapInput interface {
	pulumi.Input

	ToRegistryFolderMapOutput() RegistryFolderMapOutput
	ToRegistryFolderMapOutputWithContext(context.Context) RegistryFolderMapOutput
}

type RegistryFolderMap map[string]RegistryFolderInput

func (RegistryFolderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegistryFolder)(nil)).Elem()
}

func (i RegistryFolderMap) ToRegistryFolderMapOutput() RegistryFolderMapOutput {
	return i.ToRegistryFolderMapOutputWithContext(context.Background())
}

func (i RegistryFolderMap) ToRegistryFolderMapOutputWithContext(ctx context.Context) RegistryFolderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryFolderMapOutput)
}

type RegistryFolderOutput struct{ *pulumi.OutputState }

func (RegistryFolderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryFolder)(nil)).Elem()
}

func (o RegistryFolderOutput) ToRegistryFolderOutput() RegistryFolderOutput {
	return o
}

func (o RegistryFolderOutput) ToRegistryFolderOutputWithContext(ctx context.Context) RegistryFolderOutput {
	return o
}

type RegistryFolderArrayOutput struct{ *pulumi.OutputState }

func (RegistryFolderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegistryFolder)(nil)).Elem()
}

func (o RegistryFolderArrayOutput) ToRegistryFolderArrayOutput() RegistryFolderArrayOutput {
	return o
}

func (o RegistryFolderArrayOutput) ToRegistryFolderArrayOutputWithContext(ctx context.Context) RegistryFolderArrayOutput {
	return o
}

func (o RegistryFolderArrayOutput) Index(i pulumi.IntInput) RegistryFolderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RegistryFolder {
		return vs[0].([]*RegistryFolder)[vs[1].(int)]
	}).(RegistryFolderOutput)
}

type RegistryFolderMapOutput struct{ *pulumi.OutputState }

func (RegistryFolderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegistryFolder)(nil)).Elem()
}

func (o RegistryFolderMapOutput) ToRegistryFolderMapOutput() RegistryFolderMapOutput {
	return o
}

func (o RegistryFolderMapOutput) ToRegistryFolderMapOutputWithContext(ctx context.Context) RegistryFolderMapOutput {
	return o
}

func (o RegistryFolderMapOutput) MapIndex(k pulumi.StringInput) RegistryFolderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RegistryFolder {
		return vs[0].(map[string]*RegistryFolder)[vs[1].(string)]
	}).(RegistryFolderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryFolderInput)(nil)).Elem(), &RegistryFolder{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryFolderArrayInput)(nil)).Elem(), RegistryFolderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryFolderMapInput)(nil)).Elem(), RegistryFolderMap{})
	pulumi.RegisterOutputType(RegistryFolderOutput{})
	pulumi.RegisterOutputType(RegistryFolderArrayOutput{})
	pulumi.RegisterOutputType(RegistryFolderMapOutput{})
}
