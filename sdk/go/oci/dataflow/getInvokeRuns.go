// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataflow

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Invoke Runs in Oracle Cloud Infrastructure Data Flow service.
//
// Lists all runs of an application in the specified compartment.  Only one parameter other than compartmentId may also be included in a query. The query must include compartmentId. If the query does not include compartmentId, or includes compartmentId but two or more other parameters an error is returned.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/dataflow"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataflow.GetInvokeRuns(ctx, &dataflow.GetInvokeRunsArgs{
//				CompartmentId:          compartmentId,
//				ApplicationId:          pulumi.StringRef(testApplication.Id),
//				DisplayName:            pulumi.StringRef(invokeRunDisplayName),
//				DisplayNameStartsWith:  pulumi.StringRef(invokeRunDisplayNameStartsWith),
//				OwnerPrincipalId:       pulumi.StringRef(testOwnerPrincipal.Id),
//				PoolId:                 pulumi.StringRef(testPool.Id),
//				State:                  pulumi.StringRef(invokeRunState),
//				TimeCreatedGreaterThan: pulumi.StringRef(invokeRunTimeCreatedGreaterThan),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInvokeRuns(ctx *pulumi.Context, args *GetInvokeRunsArgs, opts ...pulumi.InvokeOption) (*GetInvokeRunsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInvokeRunsResult
	err := ctx.Invoke("oci:DataFlow/getInvokeRuns:getInvokeRuns", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInvokeRuns.
type GetInvokeRunsArgs struct {
	// The ID of the application.
	ApplicationId *string `pulumi:"applicationId"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The query parameter for the Spark application name.
	DisplayName *string `pulumi:"displayName"`
	// The displayName prefix.
	DisplayNameStartsWith *string               `pulumi:"displayNameStartsWith"`
	Filters               []GetInvokeRunsFilter `pulumi:"filters"`
	// The OCID of the user who created the resource.
	OwnerPrincipalId *string `pulumi:"ownerPrincipalId"`
	// The ID of the pool.
	PoolId *string `pulumi:"poolId"`
	// The LifecycleState of the run.
	State *string `pulumi:"state"`
	// The epoch time that the resource was created.
	TimeCreatedGreaterThan *string `pulumi:"timeCreatedGreaterThan"`
}

// A collection of values returned by getInvokeRuns.
type GetInvokeRunsResult struct {
	// The application ID.
	ApplicationId *string `pulumi:"applicationId"`
	// The OCID of a compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. This name is not necessarily unique.
	DisplayName           *string               `pulumi:"displayName"`
	DisplayNameStartsWith *string               `pulumi:"displayNameStartsWith"`
	Filters               []GetInvokeRunsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the user who created the resource.
	OwnerPrincipalId *string `pulumi:"ownerPrincipalId"`
	// The OCID of a pool. Unique Id to indentify a dataflow pool resource.
	PoolId *string `pulumi:"poolId"`
	// The list of runs.
	Runs []GetInvokeRunsRun `pulumi:"runs"`
	// The current state of this run.
	State                  *string `pulumi:"state"`
	TimeCreatedGreaterThan *string `pulumi:"timeCreatedGreaterThan"`
}

func GetInvokeRunsOutput(ctx *pulumi.Context, args GetInvokeRunsOutputArgs, opts ...pulumi.InvokeOption) GetInvokeRunsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetInvokeRunsResultOutput, error) {
			args := v.(GetInvokeRunsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataFlow/getInvokeRuns:getInvokeRuns", args, GetInvokeRunsResultOutput{}, options).(GetInvokeRunsResultOutput), nil
		}).(GetInvokeRunsResultOutput)
}

// A collection of arguments for invoking getInvokeRuns.
type GetInvokeRunsOutputArgs struct {
	// The ID of the application.
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The query parameter for the Spark application name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The displayName prefix.
	DisplayNameStartsWith pulumi.StringPtrInput         `pulumi:"displayNameStartsWith"`
	Filters               GetInvokeRunsFilterArrayInput `pulumi:"filters"`
	// The OCID of the user who created the resource.
	OwnerPrincipalId pulumi.StringPtrInput `pulumi:"ownerPrincipalId"`
	// The ID of the pool.
	PoolId pulumi.StringPtrInput `pulumi:"poolId"`
	// The LifecycleState of the run.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The epoch time that the resource was created.
	TimeCreatedGreaterThan pulumi.StringPtrInput `pulumi:"timeCreatedGreaterThan"`
}

func (GetInvokeRunsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvokeRunsArgs)(nil)).Elem()
}

// A collection of values returned by getInvokeRuns.
type GetInvokeRunsResultOutput struct{ *pulumi.OutputState }

func (GetInvokeRunsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvokeRunsResult)(nil)).Elem()
}

func (o GetInvokeRunsResultOutput) ToGetInvokeRunsResultOutput() GetInvokeRunsResultOutput {
	return o
}

func (o GetInvokeRunsResultOutput) ToGetInvokeRunsResultOutputWithContext(ctx context.Context) GetInvokeRunsResultOutput {
	return o
}

// The application ID.
func (o GetInvokeRunsResultOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInvokeRunsResult) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// The OCID of a compartment.
func (o GetInvokeRunsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokeRunsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. This name is not necessarily unique.
func (o GetInvokeRunsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInvokeRunsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetInvokeRunsResultOutput) DisplayNameStartsWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInvokeRunsResult) *string { return v.DisplayNameStartsWith }).(pulumi.StringPtrOutput)
}

func (o GetInvokeRunsResultOutput) Filters() GetInvokeRunsFilterArrayOutput {
	return o.ApplyT(func(v GetInvokeRunsResult) []GetInvokeRunsFilter { return v.Filters }).(GetInvokeRunsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInvokeRunsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvokeRunsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the user who created the resource.
func (o GetInvokeRunsResultOutput) OwnerPrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInvokeRunsResult) *string { return v.OwnerPrincipalId }).(pulumi.StringPtrOutput)
}

// The OCID of a pool. Unique Id to indentify a dataflow pool resource.
func (o GetInvokeRunsResultOutput) PoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInvokeRunsResult) *string { return v.PoolId }).(pulumi.StringPtrOutput)
}

// The list of runs.
func (o GetInvokeRunsResultOutput) Runs() GetInvokeRunsRunArrayOutput {
	return o.ApplyT(func(v GetInvokeRunsResult) []GetInvokeRunsRun { return v.Runs }).(GetInvokeRunsRunArrayOutput)
}

// The current state of this run.
func (o GetInvokeRunsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInvokeRunsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetInvokeRunsResultOutput) TimeCreatedGreaterThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInvokeRunsResult) *string { return v.TimeCreatedGreaterThan }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInvokeRunsResultOutput{})
}
