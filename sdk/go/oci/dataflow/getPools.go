// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataflow

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Pools in Oracle Cloud Infrastructure Data Flow service.
//
// Lists all pools in the specified compartment. The query must include compartmentId. The query may also include one other parameter. If the query does not include compartmentId, or includes compartmentId, but with two or more other parameters, an error is returned.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataFlow"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataFlow.GetPools(ctx, &dataflow.GetPoolsArgs{
//				CompartmentId:         _var.Compartment_id,
//				DisplayName:           pulumi.StringRef(_var.Pool_display_name),
//				DisplayNameStartsWith: pulumi.StringRef(_var.Pool_display_name_starts_with),
//				OwnerPrincipalId:      pulumi.StringRef(oci_dataflow_owner_principal.Test_owner_principal.Id),
//				State:                 pulumi.StringRef(_var.Pool_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPools(ctx *pulumi.Context, args *GetPoolsArgs, opts ...pulumi.InvokeOption) (*GetPoolsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPoolsResult
	err := ctx.Invoke("oci:DataFlow/getPools:getPools", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPools.
type GetPoolsArgs struct {
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The query parameter for the Spark application name.
	DisplayName *string `pulumi:"displayName"`
	// The displayName prefix.
	DisplayNameStartsWith *string          `pulumi:"displayNameStartsWith"`
	Filters               []GetPoolsFilter `pulumi:"filters"`
	// The OCID of the user who created the resource.
	OwnerPrincipalId *string `pulumi:"ownerPrincipalId"`
	// The LifecycleState of the pool.
	State *string `pulumi:"state"`
}

// A collection of values returned by getPools.
type GetPoolsResult struct {
	// The OCID of a compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. It does not have to be unique. Avoid entering confidential information.
	DisplayName           *string          `pulumi:"displayName"`
	DisplayNameStartsWith *string          `pulumi:"displayNameStartsWith"`
	Filters               []GetPoolsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the user who created the resource.
	OwnerPrincipalId *string `pulumi:"ownerPrincipalId"`
	// The list of pool_collection.
	PoolCollections []GetPoolsPoolCollection `pulumi:"poolCollections"`
	// The current state of this pool.
	State *string `pulumi:"state"`
}

func GetPoolsOutput(ctx *pulumi.Context, args GetPoolsOutputArgs, opts ...pulumi.InvokeOption) GetPoolsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPoolsResult, error) {
			args := v.(GetPoolsArgs)
			r, err := GetPools(ctx, &args, opts...)
			var s GetPoolsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPoolsResultOutput)
}

// A collection of arguments for invoking getPools.
type GetPoolsOutputArgs struct {
	// The OCID of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The query parameter for the Spark application name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The displayName prefix.
	DisplayNameStartsWith pulumi.StringPtrInput    `pulumi:"displayNameStartsWith"`
	Filters               GetPoolsFilterArrayInput `pulumi:"filters"`
	// The OCID of the user who created the resource.
	OwnerPrincipalId pulumi.StringPtrInput `pulumi:"ownerPrincipalId"`
	// The LifecycleState of the pool.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetPoolsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsArgs)(nil)).Elem()
}

// A collection of values returned by getPools.
type GetPoolsResultOutput struct{ *pulumi.OutputState }

func (GetPoolsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsResult)(nil)).Elem()
}

func (o GetPoolsResultOutput) ToGetPoolsResultOutput() GetPoolsResultOutput {
	return o
}

func (o GetPoolsResultOutput) ToGetPoolsResultOutputWithContext(ctx context.Context) GetPoolsResultOutput {
	return o
}

func (o GetPoolsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetPoolsResult] {
	return pulumix.Output[GetPoolsResult]{
		OutputState: o.OutputState,
	}
}

// The OCID of a compartment.
func (o GetPoolsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. It does not have to be unique. Avoid entering confidential information.
func (o GetPoolsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPoolsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetPoolsResultOutput) DisplayNameStartsWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPoolsResult) *string { return v.DisplayNameStartsWith }).(pulumi.StringPtrOutput)
}

func (o GetPoolsResultOutput) Filters() GetPoolsFilterArrayOutput {
	return o.ApplyT(func(v GetPoolsResult) []GetPoolsFilter { return v.Filters }).(GetPoolsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPoolsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the user who created the resource.
func (o GetPoolsResultOutput) OwnerPrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPoolsResult) *string { return v.OwnerPrincipalId }).(pulumi.StringPtrOutput)
}

// The list of pool_collection.
func (o GetPoolsResultOutput) PoolCollections() GetPoolsPoolCollectionArrayOutput {
	return o.ApplyT(func(v GetPoolsResult) []GetPoolsPoolCollection { return v.PoolCollections }).(GetPoolsPoolCollectionArrayOutput)
}

// The current state of this pool.
func (o GetPoolsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPoolsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPoolsResultOutput{})
}
