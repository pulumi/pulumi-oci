// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataflow

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides details about a specific Run Log resource in Oracle Cloud Infrastructure Data Flow service.
//
// Retrieves the content of an run log.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataFlow"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataFlow.GetRunLog(ctx, &dataflow.GetRunLogArgs{
//				Name:  _var.Run_log_name,
//				RunId: oci_dataflow_run.Test_run.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRunLog(ctx *pulumi.Context, args *GetRunLogArgs, opts ...pulumi.InvokeOption) (*GetRunLogResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRunLogResult
	err := ctx.Invoke("oci:DataFlow/getRunLog:getRunLog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRunLog.
type GetRunLogArgs struct {
	Base64EncodeContent *bool `pulumi:"base64EncodeContent"`
	// The name of the log. Avoid entering confidential information.
	Name string `pulumi:"name"`
	// The unique ID for the run
	RunId string `pulumi:"runId"`
}

// A collection of values returned by getRunLog.
type GetRunLogResult struct {
	Base64EncodeContent *bool `pulumi:"base64EncodeContent"`
	// The content of the run log.
	Content string `pulumi:"content"`
	// The content type of the run log.
	ContentType string `pulumi:"contentType"`
	// The provider-assigned unique ID for this managed resource.
	Id    string `pulumi:"id"`
	Name  string `pulumi:"name"`
	RunId string `pulumi:"runId"`
}

func GetRunLogOutput(ctx *pulumi.Context, args GetRunLogOutputArgs, opts ...pulumi.InvokeOption) GetRunLogResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRunLogResult, error) {
			args := v.(GetRunLogArgs)
			r, err := GetRunLog(ctx, &args, opts...)
			var s GetRunLogResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRunLogResultOutput)
}

// A collection of arguments for invoking getRunLog.
type GetRunLogOutputArgs struct {
	Base64EncodeContent pulumi.BoolPtrInput `pulumi:"base64EncodeContent"`
	// The name of the log. Avoid entering confidential information.
	Name pulumi.StringInput `pulumi:"name"`
	// The unique ID for the run
	RunId pulumi.StringInput `pulumi:"runId"`
}

func (GetRunLogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRunLogArgs)(nil)).Elem()
}

// A collection of values returned by getRunLog.
type GetRunLogResultOutput struct{ *pulumi.OutputState }

func (GetRunLogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRunLogResult)(nil)).Elem()
}

func (o GetRunLogResultOutput) ToGetRunLogResultOutput() GetRunLogResultOutput {
	return o
}

func (o GetRunLogResultOutput) ToGetRunLogResultOutputWithContext(ctx context.Context) GetRunLogResultOutput {
	return o
}

func (o GetRunLogResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetRunLogResult] {
	return pulumix.Output[GetRunLogResult]{
		OutputState: o.OutputState,
	}
}

func (o GetRunLogResultOutput) Base64EncodeContent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRunLogResult) *bool { return v.Base64EncodeContent }).(pulumi.BoolPtrOutput)
}

// The content of the run log.
func (o GetRunLogResultOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunLogResult) string { return v.Content }).(pulumi.StringOutput)
}

// The content type of the run log.
func (o GetRunLogResultOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunLogResult) string { return v.ContentType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRunLogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunLogResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRunLogResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunLogResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRunLogResultOutput) RunId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunLogResult) string { return v.RunId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRunLogResultOutput{})
}
