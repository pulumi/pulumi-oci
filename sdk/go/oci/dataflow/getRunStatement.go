// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataflow

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Run Statement resource in Oracle Cloud Infrastructure Data Flow service.
//
// Retrieves the statement corresponding to the `statementId` for a Session run specified by `runId`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/dataflow"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataflow.GetRunStatement(ctx, &dataflow.GetRunStatementArgs{
//				RunId:       testRun.Id,
//				StatementId: testStatement.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRunStatement(ctx *pulumi.Context, args *LookupRunStatementArgs, opts ...pulumi.InvokeOption) (*LookupRunStatementResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRunStatementResult
	err := ctx.Invoke("oci:DataFlow/getRunStatement:getRunStatement", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRunStatement.
type LookupRunStatementArgs struct {
	// The unique ID for the run
	RunId string `pulumi:"runId"`
	// The unique ID for the statement.
	StatementId string `pulumi:"statementId"`
}

// A collection of values returned by getRunStatement.
type LookupRunStatementResult struct {
	// The statement code to execute. Example: `println(sc.version)`
	Code string `pulumi:"code"`
	// The statement ID.
	Id string `pulumi:"id"`
	// The execution output of a statement.
	Outputs []GetRunStatementOutput `pulumi:"outputs"`
	// The execution progress.
	Progress float64 `pulumi:"progress"`
	// The ID of a run.
	RunId string `pulumi:"runId"`
	// The current state of this statement.
	State       string `pulumi:"state"`
	StatementId string `pulumi:"statementId"`
	// The date and time a statement execution was completed, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2022-05-31T21:10:29.600Z`
	TimeCompleted string `pulumi:"timeCompleted"`
	// The date and time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
}

func LookupRunStatementOutput(ctx *pulumi.Context, args LookupRunStatementOutputArgs, opts ...pulumi.InvokeOption) LookupRunStatementResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRunStatementResultOutput, error) {
			args := v.(LookupRunStatementArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataFlow/getRunStatement:getRunStatement", args, LookupRunStatementResultOutput{}, options).(LookupRunStatementResultOutput), nil
		}).(LookupRunStatementResultOutput)
}

// A collection of arguments for invoking getRunStatement.
type LookupRunStatementOutputArgs struct {
	// The unique ID for the run
	RunId pulumi.StringInput `pulumi:"runId"`
	// The unique ID for the statement.
	StatementId pulumi.StringInput `pulumi:"statementId"`
}

func (LookupRunStatementOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRunStatementArgs)(nil)).Elem()
}

// A collection of values returned by getRunStatement.
type LookupRunStatementResultOutput struct{ *pulumi.OutputState }

func (LookupRunStatementResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRunStatementResult)(nil)).Elem()
}

func (o LookupRunStatementResultOutput) ToLookupRunStatementResultOutput() LookupRunStatementResultOutput {
	return o
}

func (o LookupRunStatementResultOutput) ToLookupRunStatementResultOutputWithContext(ctx context.Context) LookupRunStatementResultOutput {
	return o
}

// The statement code to execute. Example: `println(sc.version)`
func (o LookupRunStatementResultOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunStatementResult) string { return v.Code }).(pulumi.StringOutput)
}

// The statement ID.
func (o LookupRunStatementResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunStatementResult) string { return v.Id }).(pulumi.StringOutput)
}

// The execution output of a statement.
func (o LookupRunStatementResultOutput) Outputs() GetRunStatementOutputArrayOutput {
	return o.ApplyT(func(v LookupRunStatementResult) []GetRunStatementOutput { return v.Outputs }).(GetRunStatementOutputArrayOutput)
}

// The execution progress.
func (o LookupRunStatementResultOutput) Progress() pulumi.Float64Output {
	return o.ApplyT(func(v LookupRunStatementResult) float64 { return v.Progress }).(pulumi.Float64Output)
}

// The ID of a run.
func (o LookupRunStatementResultOutput) RunId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunStatementResult) string { return v.RunId }).(pulumi.StringOutput)
}

// The current state of this statement.
func (o LookupRunStatementResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunStatementResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupRunStatementResultOutput) StatementId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunStatementResult) string { return v.StatementId }).(pulumi.StringOutput)
}

// The date and time a statement execution was completed, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2022-05-31T21:10:29.600Z`
func (o LookupRunStatementResultOutput) TimeCompleted() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunStatementResult) string { return v.TimeCompleted }).(pulumi.StringOutput)
}

// The date and time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
func (o LookupRunStatementResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRunStatementResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRunStatementResultOutput{})
}
