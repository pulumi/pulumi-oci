// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataflow

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Run Statements in Oracle Cloud Infrastructure Data Flow service.
//
// Lists all statements for a Session run.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataFlow"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataFlow.GetRunStatements(ctx, &dataflow.GetRunStatementsArgs{
//				RunId: testRun.Id,
//				State: pulumi.StringRef(runStatementState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetRunStatements(ctx *pulumi.Context, args *GetRunStatementsArgs, opts ...pulumi.InvokeOption) (*GetRunStatementsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRunStatementsResult
	err := ctx.Invoke("oci:DataFlow/getRunStatements:getRunStatements", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRunStatements.
type GetRunStatementsArgs struct {
	Filters []GetRunStatementsFilter `pulumi:"filters"`
	// The unique ID for the run
	RunId string `pulumi:"runId"`
	// The LifecycleState of the statement.
	State *string `pulumi:"state"`
}

// A collection of values returned by getRunStatements.
type GetRunStatementsResult struct {
	Filters []GetRunStatementsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of a run.
	RunId string `pulumi:"runId"`
	// The current state of this statement.
	State *string `pulumi:"state"`
	// The list of statement_collection.
	StatementCollections []GetRunStatementsStatementCollection `pulumi:"statementCollections"`
}

func GetRunStatementsOutput(ctx *pulumi.Context, args GetRunStatementsOutputArgs, opts ...pulumi.InvokeOption) GetRunStatementsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRunStatementsResult, error) {
			args := v.(GetRunStatementsArgs)
			r, err := GetRunStatements(ctx, &args, opts...)
			var s GetRunStatementsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRunStatementsResultOutput)
}

// A collection of arguments for invoking getRunStatements.
type GetRunStatementsOutputArgs struct {
	Filters GetRunStatementsFilterArrayInput `pulumi:"filters"`
	// The unique ID for the run
	RunId pulumi.StringInput `pulumi:"runId"`
	// The LifecycleState of the statement.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetRunStatementsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRunStatementsArgs)(nil)).Elem()
}

// A collection of values returned by getRunStatements.
type GetRunStatementsResultOutput struct{ *pulumi.OutputState }

func (GetRunStatementsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRunStatementsResult)(nil)).Elem()
}

func (o GetRunStatementsResultOutput) ToGetRunStatementsResultOutput() GetRunStatementsResultOutput {
	return o
}

func (o GetRunStatementsResultOutput) ToGetRunStatementsResultOutputWithContext(ctx context.Context) GetRunStatementsResultOutput {
	return o
}

func (o GetRunStatementsResultOutput) Filters() GetRunStatementsFilterArrayOutput {
	return o.ApplyT(func(v GetRunStatementsResult) []GetRunStatementsFilter { return v.Filters }).(GetRunStatementsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRunStatementsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunStatementsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of a run.
func (o GetRunStatementsResultOutput) RunId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunStatementsResult) string { return v.RunId }).(pulumi.StringOutput)
}

// The current state of this statement.
func (o GetRunStatementsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRunStatementsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The list of statement_collection.
func (o GetRunStatementsResultOutput) StatementCollections() GetRunStatementsStatementCollectionArrayOutput {
	return o.ApplyT(func(v GetRunStatementsResult) []GetRunStatementsStatementCollection { return v.StatementCollections }).(GetRunStatementsStatementCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRunStatementsResultOutput{})
}
