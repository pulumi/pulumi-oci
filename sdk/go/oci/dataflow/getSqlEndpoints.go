// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataflow

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides the list of Sql Endpoints in Oracle Cloud Infrastructure Data Flow service.
//
// Lists all Sql Endpoints in the specified compartment.
// The query must include compartmentId or sqlEndpointId.
// If the query does not include either compartmentId or sqlEndpointId, an error is returned.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataFlow"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataFlow.GetSqlEndpoints(ctx, &dataflow.GetSqlEndpointsArgs{
//				CompartmentId: pulumi.StringRef(_var.Compartment_id),
//				DisplayName:   pulumi.StringRef(_var.Sql_endpoint_display_name),
//				SqlEndpointId: pulumi.StringRef(oci_dataflow_sql_endpoint.Test_sql_endpoint.Id),
//				State:         pulumi.StringRef(_var.Sql_endpoint_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSqlEndpoints(ctx *pulumi.Context, args *GetSqlEndpointsArgs, opts ...pulumi.InvokeOption) (*GetSqlEndpointsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSqlEndpointsResult
	err := ctx.Invoke("oci:DataFlow/getSqlEndpoints:getSqlEndpoints", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSqlEndpoints.
type GetSqlEndpointsArgs struct {
	// The OCID of the compartment in which to query resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// The query parameter for the Spark application name.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetSqlEndpointsFilter `pulumi:"filters"`
	// The unique id of the SQL Endpoint.
	SqlEndpointId *string `pulumi:"sqlEndpointId"`
	// A filter to return only those resources whose sqlEndpointLifecycleState matches the given sqlEndpointLifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getSqlEndpoints.
type GetSqlEndpointsResult struct {
	// The OCID of a compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The SQL Endpoint name, which can be changed.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetSqlEndpointsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of sql_endpoint_collection.
	SqlEndpointCollections []GetSqlEndpointsSqlEndpointCollection `pulumi:"sqlEndpointCollections"`
	SqlEndpointId          *string                                `pulumi:"sqlEndpointId"`
	// The current state of the Sql Endpoint.
	State *string `pulumi:"state"`
}

func GetSqlEndpointsOutput(ctx *pulumi.Context, args GetSqlEndpointsOutputArgs, opts ...pulumi.InvokeOption) GetSqlEndpointsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSqlEndpointsResult, error) {
			args := v.(GetSqlEndpointsArgs)
			r, err := GetSqlEndpoints(ctx, &args, opts...)
			var s GetSqlEndpointsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSqlEndpointsResultOutput)
}

// A collection of arguments for invoking getSqlEndpoints.
type GetSqlEndpointsOutputArgs struct {
	// The OCID of the compartment in which to query resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The query parameter for the Spark application name.
	DisplayName pulumi.StringPtrInput           `pulumi:"displayName"`
	Filters     GetSqlEndpointsFilterArrayInput `pulumi:"filters"`
	// The unique id of the SQL Endpoint.
	SqlEndpointId pulumi.StringPtrInput `pulumi:"sqlEndpointId"`
	// A filter to return only those resources whose sqlEndpointLifecycleState matches the given sqlEndpointLifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetSqlEndpointsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlEndpointsArgs)(nil)).Elem()
}

// A collection of values returned by getSqlEndpoints.
type GetSqlEndpointsResultOutput struct{ *pulumi.OutputState }

func (GetSqlEndpointsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlEndpointsResult)(nil)).Elem()
}

func (o GetSqlEndpointsResultOutput) ToGetSqlEndpointsResultOutput() GetSqlEndpointsResultOutput {
	return o
}

func (o GetSqlEndpointsResultOutput) ToGetSqlEndpointsResultOutputWithContext(ctx context.Context) GetSqlEndpointsResultOutput {
	return o
}

func (o GetSqlEndpointsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSqlEndpointsResult] {
	return pulumix.Output[GetSqlEndpointsResult]{
		OutputState: o.OutputState,
	}
}

// The OCID of a compartment.
func (o GetSqlEndpointsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlEndpointsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The SQL Endpoint name, which can be changed.
func (o GetSqlEndpointsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlEndpointsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetSqlEndpointsResultOutput) Filters() GetSqlEndpointsFilterArrayOutput {
	return o.ApplyT(func(v GetSqlEndpointsResult) []GetSqlEndpointsFilter { return v.Filters }).(GetSqlEndpointsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSqlEndpointsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlEndpointsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of sql_endpoint_collection.
func (o GetSqlEndpointsResultOutput) SqlEndpointCollections() GetSqlEndpointsSqlEndpointCollectionArrayOutput {
	return o.ApplyT(func(v GetSqlEndpointsResult) []GetSqlEndpointsSqlEndpointCollection { return v.SqlEndpointCollections }).(GetSqlEndpointsSqlEndpointCollectionArrayOutput)
}

func (o GetSqlEndpointsResultOutput) SqlEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlEndpointsResult) *string { return v.SqlEndpointId }).(pulumi.StringPtrOutput)
}

// The current state of the Sql Endpoint.
func (o GetSqlEndpointsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlEndpointsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSqlEndpointsResultOutput{})
}
