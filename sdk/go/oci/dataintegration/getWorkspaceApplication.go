// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataintegration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Workspace Application resource in Oracle Cloud Infrastructure Data Integration service.
//
// Retrieves an application using the specified identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DataIntegration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataIntegration.GetWorkspaceApplication(ctx, &dataintegration.GetWorkspaceApplicationArgs{
//				ApplicationKey: workspaceApplicationApplicationKey,
//				WorkspaceId:    testWorkspace.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkspaceApplication(ctx *pulumi.Context, args *LookupWorkspaceApplicationArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceApplicationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkspaceApplicationResult
	err := ctx.Invoke("oci:DataIntegration/getWorkspaceApplication:getWorkspaceApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkspaceApplication.
type LookupWorkspaceApplicationArgs struct {
	// The application key.
	ApplicationKey string `pulumi:"applicationKey"`
	// The workspace ID.
	WorkspaceId string `pulumi:"workspaceId"`
}

// A collection of values returned by getWorkspaceApplication.
type LookupWorkspaceApplicationResult struct {
	// The source application key to use when creating the application.
	ApplicationKey string `pulumi:"applicationKey"`
	// The source application version of the application.
	ApplicationVersion int `pulumi:"applicationVersion"`
	// OCID of the compartment that this resource belongs to. Defaults to compartment of the Workspace.
	CompartmentId string `pulumi:"compartmentId"`
	// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A list of dependent objects in this patch.
	DependentObjectMetadatas []GetWorkspaceApplicationDependentObjectMetadata `pulumi:"dependentObjectMetadatas"`
	// The description of the aggregator.
	Description string `pulumi:"description"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// OCID of the resource that is used to uniquely identify the application
	Id string `pulumi:"id"`
	// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier string `pulumi:"identifier"`
	// The key of the object.
	Key string `pulumi:"key"`
	// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
	KeyMap map[string]string `pulumi:"keyMap"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas []GetWorkspaceApplicationMetadata `pulumi:"metadatas"`
	// The object type.
	ModelType string `pulumi:"modelType"`
	// The object's model version.
	ModelVersion string `pulumi:"modelVersion"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name string `pulumi:"name"`
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus int `pulumi:"objectStatus"`
	// The object version.
	ObjectVersion int `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves []GetWorkspaceApplicationParentRef `pulumi:"parentReves"`
	// A list of objects that are published or unpublished in this patch.
	PublishedObjectMetadatas []GetWorkspaceApplicationPublishedObjectMetadata `pulumi:"publishedObjectMetadatas"`
	RegistryMetadatas        []GetWorkspaceApplicationRegistryMetadata        `pulumi:"registryMetadatas"`
	// The information about the application.
	SourceApplicationInfos []GetWorkspaceApplicationSourceApplicationInfo `pulumi:"sourceApplicationInfos"`
	// The current state of the workspace.
	State string `pulumi:"state"`
	// The date and time the application was created, in the timestamp format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the application was patched, in the timestamp format defined by RFC3339.
	TimePatched string `pulumi:"timePatched"`
	// The date and time the application was updated, in the timestamp format defined by RFC3339. example: 2019-08-25T21:10:29.41Z
	TimeUpdated string `pulumi:"timeUpdated"`
	// The OCID of the workspace containing the application. This allows cross workspace deployment to publish an application from a different workspace into the current workspace specified in this operation.
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupWorkspaceApplicationOutput(ctx *pulumi.Context, args LookupWorkspaceApplicationOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceApplicationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceApplicationResult, error) {
			args := v.(LookupWorkspaceApplicationArgs)
			r, err := LookupWorkspaceApplication(ctx, &args, opts...)
			var s LookupWorkspaceApplicationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspaceApplicationResultOutput)
}

// A collection of arguments for invoking getWorkspaceApplication.
type LookupWorkspaceApplicationOutputArgs struct {
	// The application key.
	ApplicationKey pulumi.StringInput `pulumi:"applicationKey"`
	// The workspace ID.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupWorkspaceApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceApplicationArgs)(nil)).Elem()
}

// A collection of values returned by getWorkspaceApplication.
type LookupWorkspaceApplicationResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceApplicationResult)(nil)).Elem()
}

func (o LookupWorkspaceApplicationResultOutput) ToLookupWorkspaceApplicationResultOutput() LookupWorkspaceApplicationResultOutput {
	return o
}

func (o LookupWorkspaceApplicationResultOutput) ToLookupWorkspaceApplicationResultOutputWithContext(ctx context.Context) LookupWorkspaceApplicationResultOutput {
	return o
}

// The source application key to use when creating the application.
func (o LookupWorkspaceApplicationResultOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.ApplicationKey }).(pulumi.StringOutput)
}

// The source application version of the application.
func (o LookupWorkspaceApplicationResultOutput) ApplicationVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) int { return v.ApplicationVersion }).(pulumi.IntOutput)
}

// OCID of the compartment that this resource belongs to. Defaults to compartment of the Workspace.
func (o LookupWorkspaceApplicationResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupWorkspaceApplicationResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A list of dependent objects in this patch.
func (o LookupWorkspaceApplicationResultOutput) DependentObjectMetadatas() GetWorkspaceApplicationDependentObjectMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) []GetWorkspaceApplicationDependentObjectMetadata {
		return v.DependentObjectMetadatas
	}).(GetWorkspaceApplicationDependentObjectMetadataArrayOutput)
}

// The description of the aggregator.
func (o LookupWorkspaceApplicationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.Description }).(pulumi.StringOutput)
}

// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o LookupWorkspaceApplicationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupWorkspaceApplicationResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// OCID of the resource that is used to uniquely identify the application
func (o LookupWorkspaceApplicationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
func (o LookupWorkspaceApplicationResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// The key of the object.
func (o LookupWorkspaceApplicationResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.Key }).(pulumi.StringOutput)
}

// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
func (o LookupWorkspaceApplicationResultOutput) KeyMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) map[string]string { return v.KeyMap }).(pulumi.StringMapOutput)
}

// A summary type containing information about the object including its key, name and when/who created/updated it.
func (o LookupWorkspaceApplicationResultOutput) Metadatas() GetWorkspaceApplicationMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) []GetWorkspaceApplicationMetadata { return v.Metadatas }).(GetWorkspaceApplicationMetadataArrayOutput)
}

// The object type.
func (o LookupWorkspaceApplicationResultOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.ModelType }).(pulumi.StringOutput)
}

// The object's model version.
func (o LookupWorkspaceApplicationResultOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.ModelVersion }).(pulumi.StringOutput)
}

// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o LookupWorkspaceApplicationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
func (o LookupWorkspaceApplicationResultOutput) ObjectStatus() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) int { return v.ObjectStatus }).(pulumi.IntOutput)
}

// The object version.
func (o LookupWorkspaceApplicationResultOutput) ObjectVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) int { return v.ObjectVersion }).(pulumi.IntOutput)
}

// A reference to the object's parent.
func (o LookupWorkspaceApplicationResultOutput) ParentReves() GetWorkspaceApplicationParentRefArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) []GetWorkspaceApplicationParentRef { return v.ParentReves }).(GetWorkspaceApplicationParentRefArrayOutput)
}

// A list of objects that are published or unpublished in this patch.
func (o LookupWorkspaceApplicationResultOutput) PublishedObjectMetadatas() GetWorkspaceApplicationPublishedObjectMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) []GetWorkspaceApplicationPublishedObjectMetadata {
		return v.PublishedObjectMetadatas
	}).(GetWorkspaceApplicationPublishedObjectMetadataArrayOutput)
}

func (o LookupWorkspaceApplicationResultOutput) RegistryMetadatas() GetWorkspaceApplicationRegistryMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) []GetWorkspaceApplicationRegistryMetadata {
		return v.RegistryMetadatas
	}).(GetWorkspaceApplicationRegistryMetadataArrayOutput)
}

// The information about the application.
func (o LookupWorkspaceApplicationResultOutput) SourceApplicationInfos() GetWorkspaceApplicationSourceApplicationInfoArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) []GetWorkspaceApplicationSourceApplicationInfo {
		return v.SourceApplicationInfos
	}).(GetWorkspaceApplicationSourceApplicationInfoArrayOutput)
}

// The current state of the workspace.
func (o LookupWorkspaceApplicationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the application was created, in the timestamp format defined by RFC3339.
func (o LookupWorkspaceApplicationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the application was patched, in the timestamp format defined by RFC3339.
func (o LookupWorkspaceApplicationResultOutput) TimePatched() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.TimePatched }).(pulumi.StringOutput)
}

// The date and time the application was updated, in the timestamp format defined by RFC3339. example: 2019-08-25T21:10:29.41Z
func (o LookupWorkspaceApplicationResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The OCID of the workspace containing the application. This allows cross workspace deployment to publish an application from a different workspace into the current workspace specified in this operation.
func (o LookupWorkspaceApplicationResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceApplicationResultOutput{})
}
