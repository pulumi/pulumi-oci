// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataintegration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Workspace Application Patch resource in Oracle Cloud Infrastructure Data Integration service.
//
// Retrieves a patch in an application using the specified identifier.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataIntegration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataIntegration.GetWorkspaceApplicationPatch(ctx, &dataintegration.GetWorkspaceApplicationPatchArgs{
//				ApplicationKey: workspaceApplicationPatchApplicationKey,
//				PatchKey:       workspaceApplicationPatchPatchKey,
//				WorkspaceId:    testWorkspace.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupWorkspaceApplicationPatch(ctx *pulumi.Context, args *LookupWorkspaceApplicationPatchArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceApplicationPatchResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkspaceApplicationPatchResult
	err := ctx.Invoke("oci:DataIntegration/getWorkspaceApplicationPatch:getWorkspaceApplicationPatch", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkspaceApplicationPatch.
type LookupWorkspaceApplicationPatchArgs struct {
	// The application key.
	ApplicationKey string `pulumi:"applicationKey"`
	// The patch key.
	PatchKey string `pulumi:"patchKey"`
	// The workspace ID.
	WorkspaceId string `pulumi:"workspaceId"`
}

// A collection of values returned by getWorkspaceApplicationPatch.
type LookupWorkspaceApplicationPatchResult struct {
	ApplicationKey string `pulumi:"applicationKey"`
	// The application version of the patch.
	ApplicationVersion int `pulumi:"applicationVersion"`
	// List of dependent objects in this patch.
	DependentObjectMetadatas []GetWorkspaceApplicationPatchDependentObjectMetadata `pulumi:"dependentObjectMetadatas"`
	// The description of the aggregator.
	Description string `pulumi:"description"`
	// The errors encountered while applying the patch, if any.
	ErrorMessages map[string]interface{} `pulumi:"errorMessages"`
	Id            string                 `pulumi:"id"`
	// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier string `pulumi:"identifier"`
	// The key of the object.
	Key string `pulumi:"key"`
	// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
	KeyMap map[string]interface{} `pulumi:"keyMap"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas []GetWorkspaceApplicationPatchMetadata `pulumi:"metadatas"`
	// The object type.
	ModelType string `pulumi:"modelType"`
	// The object's model version.
	ModelVersion string `pulumi:"modelVersion"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name       string   `pulumi:"name"`
	ObjectKeys []string `pulumi:"objectKeys"`
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus int `pulumi:"objectStatus"`
	// The object version.
	ObjectVersion int `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves []GetWorkspaceApplicationPatchParentRef `pulumi:"parentReves"`
	PatchKey    string                                  `pulumi:"patchKey"`
	// List of objects that are published or unpublished in this patch.
	PatchObjectMetadatas []GetWorkspaceApplicationPatchPatchObjectMetadata `pulumi:"patchObjectMetadatas"`
	// Status of the patch applied or being applied on the application
	PatchStatus string `pulumi:"patchStatus"`
	// The type of the patch applied or being applied on the application.
	PatchType         string                                         `pulumi:"patchType"`
	RegistryMetadatas []GetWorkspaceApplicationPatchRegistryMetadata `pulumi:"registryMetadatas"`
	// The date and time the patch was applied, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimePatched string `pulumi:"timePatched"`
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupWorkspaceApplicationPatchOutput(ctx *pulumi.Context, args LookupWorkspaceApplicationPatchOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceApplicationPatchResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceApplicationPatchResult, error) {
			args := v.(LookupWorkspaceApplicationPatchArgs)
			r, err := LookupWorkspaceApplicationPatch(ctx, &args, opts...)
			var s LookupWorkspaceApplicationPatchResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspaceApplicationPatchResultOutput)
}

// A collection of arguments for invoking getWorkspaceApplicationPatch.
type LookupWorkspaceApplicationPatchOutputArgs struct {
	// The application key.
	ApplicationKey pulumi.StringInput `pulumi:"applicationKey"`
	// The patch key.
	PatchKey pulumi.StringInput `pulumi:"patchKey"`
	// The workspace ID.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupWorkspaceApplicationPatchOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceApplicationPatchArgs)(nil)).Elem()
}

// A collection of values returned by getWorkspaceApplicationPatch.
type LookupWorkspaceApplicationPatchResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceApplicationPatchResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceApplicationPatchResult)(nil)).Elem()
}

func (o LookupWorkspaceApplicationPatchResultOutput) ToLookupWorkspaceApplicationPatchResultOutput() LookupWorkspaceApplicationPatchResultOutput {
	return o
}

func (o LookupWorkspaceApplicationPatchResultOutput) ToLookupWorkspaceApplicationPatchResultOutputWithContext(ctx context.Context) LookupWorkspaceApplicationPatchResultOutput {
	return o
}

func (o LookupWorkspaceApplicationPatchResultOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.ApplicationKey }).(pulumi.StringOutput)
}

// The application version of the patch.
func (o LookupWorkspaceApplicationPatchResultOutput) ApplicationVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) int { return v.ApplicationVersion }).(pulumi.IntOutput)
}

// List of dependent objects in this patch.
func (o LookupWorkspaceApplicationPatchResultOutput) DependentObjectMetadatas() GetWorkspaceApplicationPatchDependentObjectMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) []GetWorkspaceApplicationPatchDependentObjectMetadata {
		return v.DependentObjectMetadatas
	}).(GetWorkspaceApplicationPatchDependentObjectMetadataArrayOutput)
}

// The description of the aggregator.
func (o LookupWorkspaceApplicationPatchResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.Description }).(pulumi.StringOutput)
}

// The errors encountered while applying the patch, if any.
func (o LookupWorkspaceApplicationPatchResultOutput) ErrorMessages() pulumi.MapOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) map[string]interface{} { return v.ErrorMessages }).(pulumi.MapOutput)
}

func (o LookupWorkspaceApplicationPatchResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.Id }).(pulumi.StringOutput)
}

// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
func (o LookupWorkspaceApplicationPatchResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// The key of the object.
func (o LookupWorkspaceApplicationPatchResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.Key }).(pulumi.StringOutput)
}

// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
func (o LookupWorkspaceApplicationPatchResultOutput) KeyMap() pulumi.MapOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) map[string]interface{} { return v.KeyMap }).(pulumi.MapOutput)
}

// A summary type containing information about the object including its key, name and when/who created/updated it.
func (o LookupWorkspaceApplicationPatchResultOutput) Metadatas() GetWorkspaceApplicationPatchMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) []GetWorkspaceApplicationPatchMetadata {
		return v.Metadatas
	}).(GetWorkspaceApplicationPatchMetadataArrayOutput)
}

// The object type.
func (o LookupWorkspaceApplicationPatchResultOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.ModelType }).(pulumi.StringOutput)
}

// The object's model version.
func (o LookupWorkspaceApplicationPatchResultOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.ModelVersion }).(pulumi.StringOutput)
}

// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o LookupWorkspaceApplicationPatchResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupWorkspaceApplicationPatchResultOutput) ObjectKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) []string { return v.ObjectKeys }).(pulumi.StringArrayOutput)
}

// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
func (o LookupWorkspaceApplicationPatchResultOutput) ObjectStatus() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) int { return v.ObjectStatus }).(pulumi.IntOutput)
}

// The object version.
func (o LookupWorkspaceApplicationPatchResultOutput) ObjectVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) int { return v.ObjectVersion }).(pulumi.IntOutput)
}

// A reference to the object's parent.
func (o LookupWorkspaceApplicationPatchResultOutput) ParentReves() GetWorkspaceApplicationPatchParentRefArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) []GetWorkspaceApplicationPatchParentRef {
		return v.ParentReves
	}).(GetWorkspaceApplicationPatchParentRefArrayOutput)
}

func (o LookupWorkspaceApplicationPatchResultOutput) PatchKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.PatchKey }).(pulumi.StringOutput)
}

// List of objects that are published or unpublished in this patch.
func (o LookupWorkspaceApplicationPatchResultOutput) PatchObjectMetadatas() GetWorkspaceApplicationPatchPatchObjectMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) []GetWorkspaceApplicationPatchPatchObjectMetadata {
		return v.PatchObjectMetadatas
	}).(GetWorkspaceApplicationPatchPatchObjectMetadataArrayOutput)
}

// Status of the patch applied or being applied on the application
func (o LookupWorkspaceApplicationPatchResultOutput) PatchStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.PatchStatus }).(pulumi.StringOutput)
}

// The type of the patch applied or being applied on the application.
func (o LookupWorkspaceApplicationPatchResultOutput) PatchType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.PatchType }).(pulumi.StringOutput)
}

func (o LookupWorkspaceApplicationPatchResultOutput) RegistryMetadatas() GetWorkspaceApplicationPatchRegistryMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) []GetWorkspaceApplicationPatchRegistryMetadata {
		return v.RegistryMetadatas
	}).(GetWorkspaceApplicationPatchRegistryMetadataArrayOutput)
}

// The date and time the patch was applied, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o LookupWorkspaceApplicationPatchResultOutput) TimePatched() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.TimePatched }).(pulumi.StringOutput)
}

func (o LookupWorkspaceApplicationPatchResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationPatchResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceApplicationPatchResultOutput{})
}
