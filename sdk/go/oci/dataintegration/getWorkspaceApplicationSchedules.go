// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataintegration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Workspace Application Schedules in Oracle Cloud Infrastructure Data Integration service.
//
// Use this endpoint to list schedules.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/dataintegration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataintegration.GetWorkspaceApplicationSchedules(ctx, &dataintegration.GetWorkspaceApplicationSchedulesArgs{
//				ApplicationKey: workspaceApplicationScheduleApplicationKey,
//				WorkspaceId:    testWorkspace.Id,
//				Identifiers:    workspaceApplicationScheduleIdentifier,
//				Keys:           workspaceApplicationScheduleKey,
//				Name:           pulumi.StringRef(workspaceApplicationScheduleName),
//				Types:          workspaceApplicationScheduleType,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetWorkspaceApplicationSchedules(ctx *pulumi.Context, args *GetWorkspaceApplicationSchedulesArgs, opts ...pulumi.InvokeOption) (*GetWorkspaceApplicationSchedulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetWorkspaceApplicationSchedulesResult
	err := ctx.Invoke("oci:DataIntegration/getWorkspaceApplicationSchedules:getWorkspaceApplicationSchedules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkspaceApplicationSchedules.
type GetWorkspaceApplicationSchedulesArgs struct {
	// The application key.
	ApplicationKey string                                   `pulumi:"applicationKey"`
	Filters        []GetWorkspaceApplicationSchedulesFilter `pulumi:"filters"`
	// Used to filter by the identifier of the object.
	Identifiers []string `pulumi:"identifiers"`
	// Used to filter by the key of the object.
	Keys []string `pulumi:"keys"`
	// Used to filter by the name of the object.
	Name *string `pulumi:"name"`
	// Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. <br><br><B>Examples:</B><br> <ul> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=false</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=true</B> returns all objects of type data loader task</li> </ul>
	Types []string `pulumi:"types"`
	// The workspace ID.
	WorkspaceId string `pulumi:"workspaceId"`
}

// A collection of values returned by getWorkspaceApplicationSchedules.
type GetWorkspaceApplicationSchedulesResult struct {
	ApplicationKey string                                   `pulumi:"applicationKey"`
	Filters        []GetWorkspaceApplicationSchedulesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The identifier of the aggregator.
	Identifiers []string `pulumi:"identifiers"`
	// The key of the aggregator object.
	Keys []string `pulumi:"keys"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// The list of schedule_summary_collection.
	ScheduleSummaryCollections []GetWorkspaceApplicationSchedulesScheduleSummaryCollection `pulumi:"scheduleSummaryCollections"`
	// The type of the aggregator.
	Types       []string `pulumi:"types"`
	WorkspaceId string   `pulumi:"workspaceId"`
}

func GetWorkspaceApplicationSchedulesOutput(ctx *pulumi.Context, args GetWorkspaceApplicationSchedulesOutputArgs, opts ...pulumi.InvokeOption) GetWorkspaceApplicationSchedulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetWorkspaceApplicationSchedulesResultOutput, error) {
			args := v.(GetWorkspaceApplicationSchedulesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataIntegration/getWorkspaceApplicationSchedules:getWorkspaceApplicationSchedules", args, GetWorkspaceApplicationSchedulesResultOutput{}, options).(GetWorkspaceApplicationSchedulesResultOutput), nil
		}).(GetWorkspaceApplicationSchedulesResultOutput)
}

// A collection of arguments for invoking getWorkspaceApplicationSchedules.
type GetWorkspaceApplicationSchedulesOutputArgs struct {
	// The application key.
	ApplicationKey pulumi.StringInput                               `pulumi:"applicationKey"`
	Filters        GetWorkspaceApplicationSchedulesFilterArrayInput `pulumi:"filters"`
	// Used to filter by the identifier of the object.
	Identifiers pulumi.StringArrayInput `pulumi:"identifiers"`
	// Used to filter by the key of the object.
	Keys pulumi.StringArrayInput `pulumi:"keys"`
	// Used to filter by the name of the object.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. <br><br><B>Examples:</B><br> <ul> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=false</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=true</B> returns all objects of type data loader task</li> </ul>
	Types pulumi.StringArrayInput `pulumi:"types"`
	// The workspace ID.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (GetWorkspaceApplicationSchedulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceApplicationSchedulesArgs)(nil)).Elem()
}

// A collection of values returned by getWorkspaceApplicationSchedules.
type GetWorkspaceApplicationSchedulesResultOutput struct{ *pulumi.OutputState }

func (GetWorkspaceApplicationSchedulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceApplicationSchedulesResult)(nil)).Elem()
}

func (o GetWorkspaceApplicationSchedulesResultOutput) ToGetWorkspaceApplicationSchedulesResultOutput() GetWorkspaceApplicationSchedulesResultOutput {
	return o
}

func (o GetWorkspaceApplicationSchedulesResultOutput) ToGetWorkspaceApplicationSchedulesResultOutputWithContext(ctx context.Context) GetWorkspaceApplicationSchedulesResultOutput {
	return o
}

func (o GetWorkspaceApplicationSchedulesResultOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceApplicationSchedulesResult) string { return v.ApplicationKey }).(pulumi.StringOutput)
}

func (o GetWorkspaceApplicationSchedulesResultOutput) Filters() GetWorkspaceApplicationSchedulesFilterArrayOutput {
	return o.ApplyT(func(v GetWorkspaceApplicationSchedulesResult) []GetWorkspaceApplicationSchedulesFilter {
		return v.Filters
	}).(GetWorkspaceApplicationSchedulesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetWorkspaceApplicationSchedulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceApplicationSchedulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identifier of the aggregator.
func (o GetWorkspaceApplicationSchedulesResultOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWorkspaceApplicationSchedulesResult) []string { return v.Identifiers }).(pulumi.StringArrayOutput)
}

// The key of the aggregator object.
func (o GetWorkspaceApplicationSchedulesResultOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWorkspaceApplicationSchedulesResult) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o GetWorkspaceApplicationSchedulesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWorkspaceApplicationSchedulesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of schedule_summary_collection.
func (o GetWorkspaceApplicationSchedulesResultOutput) ScheduleSummaryCollections() GetWorkspaceApplicationSchedulesScheduleSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetWorkspaceApplicationSchedulesResult) []GetWorkspaceApplicationSchedulesScheduleSummaryCollection {
		return v.ScheduleSummaryCollections
	}).(GetWorkspaceApplicationSchedulesScheduleSummaryCollectionArrayOutput)
}

// The type of the aggregator.
func (o GetWorkspaceApplicationSchedulesResultOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWorkspaceApplicationSchedulesResult) []string { return v.Types }).(pulumi.StringArrayOutput)
}

func (o GetWorkspaceApplicationSchedulesResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceApplicationSchedulesResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetWorkspaceApplicationSchedulesResultOutput{})
}
