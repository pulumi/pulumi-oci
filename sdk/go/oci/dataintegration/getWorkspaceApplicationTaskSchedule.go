// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataintegration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Workspace Application Task Schedule resource in Oracle Cloud Infrastructure Data Integration service.
//
// # Endpoint used to get taskSchedule by its key
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataIntegration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataIntegration.GetWorkspaceApplicationTaskSchedule(ctx, &dataintegration.GetWorkspaceApplicationTaskScheduleArgs{
//				ApplicationKey:  _var.Workspace_application_task_schedule_application_key,
//				TaskScheduleKey: _var.Workspace_application_task_schedule_task_schedule_key,
//				WorkspaceId:     oci_dataintegration_workspace.Test_workspace.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupWorkspaceApplicationTaskSchedule(ctx *pulumi.Context, args *LookupWorkspaceApplicationTaskScheduleArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceApplicationTaskScheduleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkspaceApplicationTaskScheduleResult
	err := ctx.Invoke("oci:DataIntegration/getWorkspaceApplicationTaskSchedule:getWorkspaceApplicationTaskSchedule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkspaceApplicationTaskSchedule.
type LookupWorkspaceApplicationTaskScheduleArgs struct {
	// The application key.
	ApplicationKey string `pulumi:"applicationKey"`
	// TaskSchedule Key
	TaskScheduleKey string `pulumi:"taskScheduleKey"`
	// The workspace ID.
	WorkspaceId string `pulumi:"workspaceId"`
}

// A collection of values returned by getWorkspaceApplicationTaskSchedule.
type LookupWorkspaceApplicationTaskScheduleResult struct {
	ApplicationKey string `pulumi:"applicationKey"`
	// The authorization mode for the task.
	AuthMode               string `pulumi:"authMode"`
	ConfigProviderDelegate string `pulumi:"configProviderDelegate"`
	// The description of the aggregator.
	Description string `pulumi:"description"`
	// The end time in milliseconds.
	EndTimeMillis string `pulumi:"endTimeMillis"`
	// The expected duration of the task execution.
	ExpectedDuration float64 `pulumi:"expectedDuration"`
	// The expected duration unit of the task execution.
	ExpectedDurationUnit string `pulumi:"expectedDurationUnit"`
	Id                   string `pulumi:"id"`
	// The identifier of the aggregator.
	Identifier string `pulumi:"identifier"`
	// Whether the backfill is enabled
	IsBackfillEnabled bool `pulumi:"isBackfillEnabled"`
	// Whether the same task can be executed concurrently.
	IsConcurrentAllowed bool `pulumi:"isConcurrentAllowed"`
	// Whether the schedule is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The key of the aggregator object.
	Key string `pulumi:"key"`
	// The last run details for the task run.
	LastRunDetails []GetWorkspaceApplicationTaskScheduleLastRunDetail `pulumi:"lastRunDetails"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas []GetWorkspaceApplicationTaskScheduleMetadata `pulumi:"metadatas"`
	// The type of the object.
	ModelType string `pulumi:"modelType"`
	// This is a version number that is used by the service to upgrade objects if needed through releases of the service.
	ModelVersion string `pulumi:"modelVersion"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name              string `pulumi:"name"`
	NextRunTimeMillis string `pulumi:"nextRunTimeMillis"`
	NumberOfRetries   int    `pulumi:"numberOfRetries"`
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus int `pulumi:"objectStatus"`
	// This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
	ObjectVersion int `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves       []GetWorkspaceApplicationTaskScheduleParentRef        `pulumi:"parentReves"`
	RegistryMetadatas []GetWorkspaceApplicationTaskScheduleRegistryMetadata `pulumi:"registryMetadatas"`
	// The number of retry attempts.
	RetryAttempts int `pulumi:"retryAttempts"`
	// The retry delay, the unit for measurement is in the property retry delay unit.
	RetryDelay float64 `pulumi:"retryDelay"`
	// The unit for the retry delay.
	RetryDelayUnit string `pulumi:"retryDelayUnit"`
	// The schedule object
	ScheduleReves []GetWorkspaceApplicationTaskScheduleScheduleRef `pulumi:"scheduleReves"`
	// The start time in milliseconds.
	StartTimeMillis string `pulumi:"startTimeMillis"`
	TaskScheduleKey string `pulumi:"taskScheduleKey"`
	WorkspaceId     string `pulumi:"workspaceId"`
}

func LookupWorkspaceApplicationTaskScheduleOutput(ctx *pulumi.Context, args LookupWorkspaceApplicationTaskScheduleOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceApplicationTaskScheduleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceApplicationTaskScheduleResult, error) {
			args := v.(LookupWorkspaceApplicationTaskScheduleArgs)
			r, err := LookupWorkspaceApplicationTaskSchedule(ctx, &args, opts...)
			var s LookupWorkspaceApplicationTaskScheduleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspaceApplicationTaskScheduleResultOutput)
}

// A collection of arguments for invoking getWorkspaceApplicationTaskSchedule.
type LookupWorkspaceApplicationTaskScheduleOutputArgs struct {
	// The application key.
	ApplicationKey pulumi.StringInput `pulumi:"applicationKey"`
	// TaskSchedule Key
	TaskScheduleKey pulumi.StringInput `pulumi:"taskScheduleKey"`
	// The workspace ID.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupWorkspaceApplicationTaskScheduleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceApplicationTaskScheduleArgs)(nil)).Elem()
}

// A collection of values returned by getWorkspaceApplicationTaskSchedule.
type LookupWorkspaceApplicationTaskScheduleResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceApplicationTaskScheduleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceApplicationTaskScheduleResult)(nil)).Elem()
}

func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ToLookupWorkspaceApplicationTaskScheduleResultOutput() LookupWorkspaceApplicationTaskScheduleResultOutput {
	return o
}

func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ToLookupWorkspaceApplicationTaskScheduleResultOutputWithContext(ctx context.Context) LookupWorkspaceApplicationTaskScheduleResultOutput {
	return o
}

func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.ApplicationKey }).(pulumi.StringOutput)
}

// The authorization mode for the task.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.AuthMode }).(pulumi.StringOutput)
}

func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ConfigProviderDelegate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.ConfigProviderDelegate }).(pulumi.StringOutput)
}

// The description of the aggregator.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.Description }).(pulumi.StringOutput)
}

// The end time in milliseconds.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) EndTimeMillis() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.EndTimeMillis }).(pulumi.StringOutput)
}

// The expected duration of the task execution.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ExpectedDuration() pulumi.Float64Output {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) float64 { return v.ExpectedDuration }).(pulumi.Float64Output)
}

// The expected duration unit of the task execution.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ExpectedDurationUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.ExpectedDurationUnit }).(pulumi.StringOutput)
}

func (o LookupWorkspaceApplicationTaskScheduleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identifier of the aggregator.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Whether the backfill is enabled
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) IsBackfillEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) bool { return v.IsBackfillEnabled }).(pulumi.BoolOutput)
}

// Whether the same task can be executed concurrently.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) IsConcurrentAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) bool { return v.IsConcurrentAllowed }).(pulumi.BoolOutput)
}

// Whether the schedule is enabled.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The key of the aggregator object.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.Key }).(pulumi.StringOutput)
}

// The last run details for the task run.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) LastRunDetails() GetWorkspaceApplicationTaskScheduleLastRunDetailArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) []GetWorkspaceApplicationTaskScheduleLastRunDetail {
		return v.LastRunDetails
	}).(GetWorkspaceApplicationTaskScheduleLastRunDetailArrayOutput)
}

// A summary type containing information about the object including its key, name and when/who created/updated it.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) Metadatas() GetWorkspaceApplicationTaskScheduleMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) []GetWorkspaceApplicationTaskScheduleMetadata {
		return v.Metadatas
	}).(GetWorkspaceApplicationTaskScheduleMetadataArrayOutput)
}

// The type of the object.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.ModelType }).(pulumi.StringOutput)
}

// This is a version number that is used by the service to upgrade objects if needed through releases of the service.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.ModelVersion }).(pulumi.StringOutput)
}

// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupWorkspaceApplicationTaskScheduleResultOutput) NextRunTimeMillis() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.NextRunTimeMillis }).(pulumi.StringOutput)
}

func (o LookupWorkspaceApplicationTaskScheduleResultOutput) NumberOfRetries() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) int { return v.NumberOfRetries }).(pulumi.IntOutput)
}

// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ObjectStatus() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) int { return v.ObjectStatus }).(pulumi.IntOutput)
}

// This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ObjectVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) int { return v.ObjectVersion }).(pulumi.IntOutput)
}

// A reference to the object's parent.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ParentReves() GetWorkspaceApplicationTaskScheduleParentRefArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) []GetWorkspaceApplicationTaskScheduleParentRef {
		return v.ParentReves
	}).(GetWorkspaceApplicationTaskScheduleParentRefArrayOutput)
}

func (o LookupWorkspaceApplicationTaskScheduleResultOutput) RegistryMetadatas() GetWorkspaceApplicationTaskScheduleRegistryMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) []GetWorkspaceApplicationTaskScheduleRegistryMetadata {
		return v.RegistryMetadatas
	}).(GetWorkspaceApplicationTaskScheduleRegistryMetadataArrayOutput)
}

// The number of retry attempts.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) RetryAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) int { return v.RetryAttempts }).(pulumi.IntOutput)
}

// The retry delay, the unit for measurement is in the property retry delay unit.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) RetryDelay() pulumi.Float64Output {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) float64 { return v.RetryDelay }).(pulumi.Float64Output)
}

// The unit for the retry delay.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) RetryDelayUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.RetryDelayUnit }).(pulumi.StringOutput)
}

// The schedule object
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) ScheduleReves() GetWorkspaceApplicationTaskScheduleScheduleRefArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) []GetWorkspaceApplicationTaskScheduleScheduleRef {
		return v.ScheduleReves
	}).(GetWorkspaceApplicationTaskScheduleScheduleRefArrayOutput)
}

// The start time in milliseconds.
func (o LookupWorkspaceApplicationTaskScheduleResultOutput) StartTimeMillis() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.StartTimeMillis }).(pulumi.StringOutput)
}

func (o LookupWorkspaceApplicationTaskScheduleResultOutput) TaskScheduleKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.TaskScheduleKey }).(pulumi.StringOutput)
}

func (o LookupWorkspaceApplicationTaskScheduleResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApplicationTaskScheduleResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceApplicationTaskScheduleResultOutput{})
}
