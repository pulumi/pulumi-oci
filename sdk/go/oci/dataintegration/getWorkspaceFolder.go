// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataintegration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Workspace Folder resource in Oracle Cloud Infrastructure Data Integration service.
//
// Retrieves a folder using the specified identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataIntegration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataIntegration.GetWorkspaceFolder(ctx, &dataintegration.GetWorkspaceFolderArgs{
//				FolderKey:   workspaceFolderFolderKey,
//				WorkspaceId: testWorkspace.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkspaceFolder(ctx *pulumi.Context, args *LookupWorkspaceFolderArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceFolderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkspaceFolderResult
	err := ctx.Invoke("oci:DataIntegration/getWorkspaceFolder:getWorkspaceFolder", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkspaceFolder.
type LookupWorkspaceFolderArgs struct {
	// The folder key.
	FolderKey string `pulumi:"folderKey"`
	// The workspace ID.
	WorkspaceId string `pulumi:"workspaceId"`
}

// A collection of values returned by getWorkspaceFolder.
type LookupWorkspaceFolderResult struct {
	// The category name.
	CategoryName string `pulumi:"categoryName"`
	// The description of the aggregator.
	Description string `pulumi:"description"`
	FolderKey   string `pulumi:"folderKey"`
	Id          string `pulumi:"id"`
	// The identifier of the aggregator.
	Identifier string `pulumi:"identifier"`
	// The key of the aggregator object.
	Key string `pulumi:"key"`
	// A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
	KeyMap map[string]interface{} `pulumi:"keyMap"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas []GetWorkspaceFolderMetadata `pulumi:"metadatas"`
	// The type of the object.
	ModelType string `pulumi:"modelType"`
	// The model version of an object.
	ModelVersion string `pulumi:"modelVersion"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name string `pulumi:"name"`
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus int `pulumi:"objectStatus"`
	// The version of the object that is used to track changes in the object instance.
	ObjectVersion int `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves       []GetWorkspaceFolderParentRef        `pulumi:"parentReves"`
	RegistryMetadatas []GetWorkspaceFolderRegistryMetadata `pulumi:"registryMetadatas"`
	WorkspaceId       string                               `pulumi:"workspaceId"`
}

func LookupWorkspaceFolderOutput(ctx *pulumi.Context, args LookupWorkspaceFolderOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceFolderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceFolderResult, error) {
			args := v.(LookupWorkspaceFolderArgs)
			r, err := LookupWorkspaceFolder(ctx, &args, opts...)
			var s LookupWorkspaceFolderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspaceFolderResultOutput)
}

// A collection of arguments for invoking getWorkspaceFolder.
type LookupWorkspaceFolderOutputArgs struct {
	// The folder key.
	FolderKey pulumi.StringInput `pulumi:"folderKey"`
	// The workspace ID.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupWorkspaceFolderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceFolderArgs)(nil)).Elem()
}

// A collection of values returned by getWorkspaceFolder.
type LookupWorkspaceFolderResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceFolderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceFolderResult)(nil)).Elem()
}

func (o LookupWorkspaceFolderResultOutput) ToLookupWorkspaceFolderResultOutput() LookupWorkspaceFolderResultOutput {
	return o
}

func (o LookupWorkspaceFolderResultOutput) ToLookupWorkspaceFolderResultOutputWithContext(ctx context.Context) LookupWorkspaceFolderResultOutput {
	return o
}

// The category name.
func (o LookupWorkspaceFolderResultOutput) CategoryName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) string { return v.CategoryName }).(pulumi.StringOutput)
}

// The description of the aggregator.
func (o LookupWorkspaceFolderResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupWorkspaceFolderResultOutput) FolderKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) string { return v.FolderKey }).(pulumi.StringOutput)
}

func (o LookupWorkspaceFolderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identifier of the aggregator.
func (o LookupWorkspaceFolderResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// The key of the aggregator object.
func (o LookupWorkspaceFolderResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) string { return v.Key }).(pulumi.StringOutput)
}

// A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
func (o LookupWorkspaceFolderResultOutput) KeyMap() pulumi.MapOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) map[string]interface{} { return v.KeyMap }).(pulumi.MapOutput)
}

// A summary type containing information about the object including its key, name and when/who created/updated it.
func (o LookupWorkspaceFolderResultOutput) Metadatas() GetWorkspaceFolderMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) []GetWorkspaceFolderMetadata { return v.Metadatas }).(GetWorkspaceFolderMetadataArrayOutput)
}

// The type of the object.
func (o LookupWorkspaceFolderResultOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) string { return v.ModelType }).(pulumi.StringOutput)
}

// The model version of an object.
func (o LookupWorkspaceFolderResultOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) string { return v.ModelVersion }).(pulumi.StringOutput)
}

// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o LookupWorkspaceFolderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
func (o LookupWorkspaceFolderResultOutput) ObjectStatus() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) int { return v.ObjectStatus }).(pulumi.IntOutput)
}

// The version of the object that is used to track changes in the object instance.
func (o LookupWorkspaceFolderResultOutput) ObjectVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) int { return v.ObjectVersion }).(pulumi.IntOutput)
}

// A reference to the object's parent.
func (o LookupWorkspaceFolderResultOutput) ParentReves() GetWorkspaceFolderParentRefArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) []GetWorkspaceFolderParentRef { return v.ParentReves }).(GetWorkspaceFolderParentRefArrayOutput)
}

func (o LookupWorkspaceFolderResultOutput) RegistryMetadatas() GetWorkspaceFolderRegistryMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) []GetWorkspaceFolderRegistryMetadata { return v.RegistryMetadatas }).(GetWorkspaceFolderRegistryMetadataArrayOutput)
}

func (o LookupWorkspaceFolderResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceFolderResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceFolderResultOutput{})
}
