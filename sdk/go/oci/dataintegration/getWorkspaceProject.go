// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataintegration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Workspace Project resource in Oracle Cloud Infrastructure Data Integration service.
//
// Retrieves a project using the specified identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataIntegration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataIntegration.GetWorkspaceProject(ctx, &dataintegration.GetWorkspaceProjectArgs{
//				ProjectKey:  _var.Workspace_project_project_key,
//				WorkspaceId: oci_dataintegration_workspace.Test_workspace.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkspaceProject(ctx *pulumi.Context, args *LookupWorkspaceProjectArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkspaceProjectResult
	err := ctx.Invoke("oci:DataIntegration/getWorkspaceProject:getWorkspaceProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkspaceProject.
type LookupWorkspaceProjectArgs struct {
	// The project key.
	ProjectKey string `pulumi:"projectKey"`
	// The workspace ID.
	WorkspaceId string `pulumi:"workspaceId"`
}

// A collection of values returned by getWorkspaceProject.
type LookupWorkspaceProjectResult struct {
	// The description of the aggregator.
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// The identifier of the aggregator.
	Identifier *string `pulumi:"identifier"`
	// The key of the aggregator object.
	Key *string `pulumi:"key"`
	// A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
	KeyMap map[string]interface{} `pulumi:"keyMap"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas []GetWorkspaceProjectMetadata `pulumi:"metadatas"`
	// The type of the object.
	ModelType *string `pulumi:"modelType"`
	// The model version of an object.
	ModelVersion *string `pulumi:"modelVersion"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// The version of the object that is used to track changes in the object instance.
	ObjectVersion *int `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves       []GetWorkspaceProjectParentRef        `pulumi:"parentReves"`
	ProjectKey        string                                `pulumi:"projectKey"`
	RegistryMetadatas []GetWorkspaceProjectRegistryMetadata `pulumi:"registryMetadatas"`
	WorkspaceId       string                                `pulumi:"workspaceId"`
}

func LookupWorkspaceProjectOutput(ctx *pulumi.Context, args LookupWorkspaceProjectOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceProjectResult, error) {
			args := v.(LookupWorkspaceProjectArgs)
			r, err := LookupWorkspaceProject(ctx, &args, opts...)
			var s LookupWorkspaceProjectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspaceProjectResultOutput)
}

// A collection of arguments for invoking getWorkspaceProject.
type LookupWorkspaceProjectOutputArgs struct {
	// The project key.
	ProjectKey pulumi.StringInput `pulumi:"projectKey"`
	// The workspace ID.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupWorkspaceProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceProjectArgs)(nil)).Elem()
}

// A collection of values returned by getWorkspaceProject.
type LookupWorkspaceProjectResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceProjectResult)(nil)).Elem()
}

func (o LookupWorkspaceProjectResultOutput) ToLookupWorkspaceProjectResultOutput() LookupWorkspaceProjectResultOutput {
	return o
}

func (o LookupWorkspaceProjectResultOutput) ToLookupWorkspaceProjectResultOutputWithContext(ctx context.Context) LookupWorkspaceProjectResultOutput {
	return o
}

// The description of the aggregator.
func (o LookupWorkspaceProjectResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupWorkspaceProjectResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The identifier of the aggregator.
func (o LookupWorkspaceProjectResultOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// The key of the aggregator object.
func (o LookupWorkspaceProjectResultOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
func (o LookupWorkspaceProjectResultOutput) KeyMap() pulumi.MapOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) map[string]interface{} { return v.KeyMap }).(pulumi.MapOutput)
}

// A summary type containing information about the object including its key, name and when/who created/updated it.
func (o LookupWorkspaceProjectResultOutput) Metadatas() GetWorkspaceProjectMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) []GetWorkspaceProjectMetadata { return v.Metadatas }).(GetWorkspaceProjectMetadataArrayOutput)
}

// The type of the object.
func (o LookupWorkspaceProjectResultOutput) ModelType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) *string { return v.ModelType }).(pulumi.StringPtrOutput)
}

// The model version of an object.
func (o LookupWorkspaceProjectResultOutput) ModelVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) *string { return v.ModelVersion }).(pulumi.StringPtrOutput)
}

// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o LookupWorkspaceProjectResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
func (o LookupWorkspaceProjectResultOutput) ObjectStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) *int { return v.ObjectStatus }).(pulumi.IntPtrOutput)
}

// The version of the object that is used to track changes in the object instance.
func (o LookupWorkspaceProjectResultOutput) ObjectVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) *int { return v.ObjectVersion }).(pulumi.IntPtrOutput)
}

// A reference to the object's parent.
func (o LookupWorkspaceProjectResultOutput) ParentReves() GetWorkspaceProjectParentRefArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) []GetWorkspaceProjectParentRef { return v.ParentReves }).(GetWorkspaceProjectParentRefArrayOutput)
}

func (o LookupWorkspaceProjectResultOutput) ProjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) string { return v.ProjectKey }).(pulumi.StringOutput)
}

func (o LookupWorkspaceProjectResultOutput) RegistryMetadatas() GetWorkspaceProjectRegistryMetadataArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) []GetWorkspaceProjectRegistryMetadata { return v.RegistryMetadatas }).(GetWorkspaceProjectRegistryMetadataArrayOutput)
}

func (o LookupWorkspaceProjectResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceProjectResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceProjectResultOutput{})
}
