// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataintegration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Workspace Application Patch resource in Oracle Cloud Infrastructure Data Integration service.
//
// Creates a patch in an application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataIntegration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataIntegration.NewWorkspaceApplicationPatch(ctx, "test_workspace_application_patch", &DataIntegration.WorkspaceApplicationPatchArgs{
//				ApplicationKey: pulumi.Any(workspaceApplicationPatchApplicationKey),
//				Identifier:     pulumi.Any(workspaceApplicationPatchIdentifier),
//				Name:           pulumi.Any(workspaceApplicationPatchName),
//				ObjectKeys:     pulumi.Any(workspaceApplicationPatchObjectKeys),
//				PatchType:      pulumi.Any(workspaceApplicationPatchPatchType),
//				WorkspaceId:    pulumi.Any(testWorkspace.Id),
//				Description:    pulumi.Any(workspaceApplicationPatchDescription),
//				Key:            pulumi.Any(workspaceApplicationPatchKey),
//				ModelVersion:   pulumi.Any(workspaceApplicationPatchModelVersion),
//				ObjectStatus:   pulumi.Any(workspaceApplicationPatchObjectStatus),
//				RegistryMetadata: &dataintegration.WorkspaceApplicationPatchRegistryMetadataArgs{
//					AggregatorKey:   pulumi.Any(workspaceApplicationPatchRegistryMetadataAggregatorKey),
//					IsFavorite:      pulumi.Any(workspaceApplicationPatchRegistryMetadataIsFavorite),
//					Key:             pulumi.Any(workspaceApplicationPatchRegistryMetadataKey),
//					Labels:          pulumi.Any(workspaceApplicationPatchRegistryMetadataLabels),
//					RegistryVersion: pulumi.Any(workspaceApplicationPatchRegistryMetadataRegistryVersion),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WorkspaceApplicationPatches can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataIntegration/workspaceApplicationPatch:WorkspaceApplicationPatch test_workspace_application_patch "workspaces/{workspaceId}/applications/{applicationKey}/patches/{patchKey}"
// ```
type WorkspaceApplicationPatch struct {
	pulumi.CustomResourceState

	// The application key.
	ApplicationKey pulumi.StringOutput `pulumi:"applicationKey"`
	// The application version of the patch.
	ApplicationVersion pulumi.IntOutput `pulumi:"applicationVersion"`
	// List of dependent objects in this patch.
	DependentObjectMetadatas WorkspaceApplicationPatchDependentObjectMetadataArrayOutput `pulumi:"dependentObjectMetadatas"`
	// Detailed description for the object.
	Description pulumi.StringOutput `pulumi:"description"`
	// The errors encountered while applying the patch, if any.
	ErrorMessages pulumi.MapOutput `pulumi:"errorMessages"`
	// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// The object's key.
	Key pulumi.StringOutput `pulumi:"key"`
	// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
	KeyMap pulumi.MapOutput `pulumi:"keyMap"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas WorkspaceApplicationPatchMetadataArrayOutput `pulumi:"metadatas"`
	// The object type.
	ModelType pulumi.StringOutput `pulumi:"modelType"`
	// The object's model version.
	ModelVersion pulumi.StringOutput `pulumi:"modelVersion"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The array of object keys to publish into application.
	ObjectKeys pulumi.StringArrayOutput `pulumi:"objectKeys"`
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntOutput `pulumi:"objectStatus"`
	// The object version.
	ObjectVersion pulumi.IntOutput `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves WorkspaceApplicationPatchParentRefArrayOutput `pulumi:"parentReves"`
	// List of objects that are published or unpublished in this patch.
	PatchObjectMetadatas WorkspaceApplicationPatchPatchObjectMetadataArrayOutput `pulumi:"patchObjectMetadatas"`
	// Status of the patch applied or being applied on the application
	PatchStatus pulumi.StringOutput `pulumi:"patchStatus"`
	// The type of the patch applied or being applied on the application.
	PatchType pulumi.StringOutput `pulumi:"patchType"`
	// Information about the object and its parent.
	RegistryMetadata WorkspaceApplicationPatchRegistryMetadataOutput `pulumi:"registryMetadata"`
	// The date and time the patch was applied, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimePatched pulumi.StringOutput `pulumi:"timePatched"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewWorkspaceApplicationPatch registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceApplicationPatch(ctx *pulumi.Context,
	name string, args *WorkspaceApplicationPatchArgs, opts ...pulumi.ResourceOption) (*WorkspaceApplicationPatch, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationKey == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationKey'")
	}
	if args.PatchType == nil {
		return nil, errors.New("invalid value for required argument 'PatchType'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceApplicationPatch
	err := ctx.RegisterResource("oci:DataIntegration/workspaceApplicationPatch:WorkspaceApplicationPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceApplicationPatch gets an existing WorkspaceApplicationPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceApplicationPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceApplicationPatchState, opts ...pulumi.ResourceOption) (*WorkspaceApplicationPatch, error) {
	var resource WorkspaceApplicationPatch
	err := ctx.ReadResource("oci:DataIntegration/workspaceApplicationPatch:WorkspaceApplicationPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceApplicationPatch resources.
type workspaceApplicationPatchState struct {
	// The application key.
	ApplicationKey *string `pulumi:"applicationKey"`
	// The application version of the patch.
	ApplicationVersion *int `pulumi:"applicationVersion"`
	// List of dependent objects in this patch.
	DependentObjectMetadatas []WorkspaceApplicationPatchDependentObjectMetadata `pulumi:"dependentObjectMetadatas"`
	// Detailed description for the object.
	Description *string `pulumi:"description"`
	// The errors encountered while applying the patch, if any.
	ErrorMessages map[string]interface{} `pulumi:"errorMessages"`
	// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier *string `pulumi:"identifier"`
	// The object's key.
	Key *string `pulumi:"key"`
	// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
	KeyMap map[string]interface{} `pulumi:"keyMap"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas []WorkspaceApplicationPatchMetadata `pulumi:"metadatas"`
	// The object type.
	ModelType *string `pulumi:"modelType"`
	// The object's model version.
	ModelVersion *string `pulumi:"modelVersion"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// The array of object keys to publish into application.
	ObjectKeys []string `pulumi:"objectKeys"`
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// The object version.
	ObjectVersion *int `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves []WorkspaceApplicationPatchParentRef `pulumi:"parentReves"`
	// List of objects that are published or unpublished in this patch.
	PatchObjectMetadatas []WorkspaceApplicationPatchPatchObjectMetadata `pulumi:"patchObjectMetadatas"`
	// Status of the patch applied or being applied on the application
	PatchStatus *string `pulumi:"patchStatus"`
	// The type of the patch applied or being applied on the application.
	PatchType *string `pulumi:"patchType"`
	// Information about the object and its parent.
	RegistryMetadata *WorkspaceApplicationPatchRegistryMetadata `pulumi:"registryMetadata"`
	// The date and time the patch was applied, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimePatched *string `pulumi:"timePatched"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId *string `pulumi:"workspaceId"`
}

type WorkspaceApplicationPatchState struct {
	// The application key.
	ApplicationKey pulumi.StringPtrInput
	// The application version of the patch.
	ApplicationVersion pulumi.IntPtrInput
	// List of dependent objects in this patch.
	DependentObjectMetadatas WorkspaceApplicationPatchDependentObjectMetadataArrayInput
	// Detailed description for the object.
	Description pulumi.StringPtrInput
	// The errors encountered while applying the patch, if any.
	ErrorMessages pulumi.MapInput
	// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringPtrInput
	// The object's key.
	Key pulumi.StringPtrInput
	// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
	KeyMap pulumi.MapInput
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas WorkspaceApplicationPatchMetadataArrayInput
	// The object type.
	ModelType pulumi.StringPtrInput
	// The object's model version.
	ModelVersion pulumi.StringPtrInput
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringPtrInput
	// The array of object keys to publish into application.
	ObjectKeys pulumi.StringArrayInput
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// The object version.
	ObjectVersion pulumi.IntPtrInput
	// A reference to the object's parent.
	ParentReves WorkspaceApplicationPatchParentRefArrayInput
	// List of objects that are published or unpublished in this patch.
	PatchObjectMetadatas WorkspaceApplicationPatchPatchObjectMetadataArrayInput
	// Status of the patch applied or being applied on the application
	PatchStatus pulumi.StringPtrInput
	// The type of the patch applied or being applied on the application.
	PatchType pulumi.StringPtrInput
	// Information about the object and its parent.
	RegistryMetadata WorkspaceApplicationPatchRegistryMetadataPtrInput
	// The date and time the patch was applied, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimePatched pulumi.StringPtrInput
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringPtrInput
}

func (WorkspaceApplicationPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApplicationPatchState)(nil)).Elem()
}

type workspaceApplicationPatchArgs struct {
	// The application key.
	ApplicationKey string `pulumi:"applicationKey"`
	// Detailed description for the object.
	Description *string `pulumi:"description"`
	// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier *string `pulumi:"identifier"`
	// The object's key.
	Key *string `pulumi:"key"`
	// The object's model version.
	ModelVersion *string `pulumi:"modelVersion"`
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// The array of object keys to publish into application.
	ObjectKeys []string `pulumi:"objectKeys"`
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// The type of the patch applied or being applied on the application.
	PatchType string `pulumi:"patchType"`
	// Information about the object and its parent.
	RegistryMetadata *WorkspaceApplicationPatchRegistryMetadata `pulumi:"registryMetadata"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a WorkspaceApplicationPatch resource.
type WorkspaceApplicationPatchArgs struct {
	// The application key.
	ApplicationKey pulumi.StringInput
	// Detailed description for the object.
	Description pulumi.StringPtrInput
	// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringPtrInput
	// The object's key.
	Key pulumi.StringPtrInput
	// The object's model version.
	ModelVersion pulumi.StringPtrInput
	// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringPtrInput
	// The array of object keys to publish into application.
	ObjectKeys pulumi.StringArrayInput
	// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// The type of the patch applied or being applied on the application.
	PatchType pulumi.StringInput
	// Information about the object and its parent.
	RegistryMetadata WorkspaceApplicationPatchRegistryMetadataPtrInput
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringInput
}

func (WorkspaceApplicationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApplicationPatchArgs)(nil)).Elem()
}

type WorkspaceApplicationPatchInput interface {
	pulumi.Input

	ToWorkspaceApplicationPatchOutput() WorkspaceApplicationPatchOutput
	ToWorkspaceApplicationPatchOutputWithContext(ctx context.Context) WorkspaceApplicationPatchOutput
}

func (*WorkspaceApplicationPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApplicationPatch)(nil)).Elem()
}

func (i *WorkspaceApplicationPatch) ToWorkspaceApplicationPatchOutput() WorkspaceApplicationPatchOutput {
	return i.ToWorkspaceApplicationPatchOutputWithContext(context.Background())
}

func (i *WorkspaceApplicationPatch) ToWorkspaceApplicationPatchOutputWithContext(ctx context.Context) WorkspaceApplicationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApplicationPatchOutput)
}

// WorkspaceApplicationPatchArrayInput is an input type that accepts WorkspaceApplicationPatchArray and WorkspaceApplicationPatchArrayOutput values.
// You can construct a concrete instance of `WorkspaceApplicationPatchArrayInput` via:
//
//	WorkspaceApplicationPatchArray{ WorkspaceApplicationPatchArgs{...} }
type WorkspaceApplicationPatchArrayInput interface {
	pulumi.Input

	ToWorkspaceApplicationPatchArrayOutput() WorkspaceApplicationPatchArrayOutput
	ToWorkspaceApplicationPatchArrayOutputWithContext(context.Context) WorkspaceApplicationPatchArrayOutput
}

type WorkspaceApplicationPatchArray []WorkspaceApplicationPatchInput

func (WorkspaceApplicationPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceApplicationPatch)(nil)).Elem()
}

func (i WorkspaceApplicationPatchArray) ToWorkspaceApplicationPatchArrayOutput() WorkspaceApplicationPatchArrayOutput {
	return i.ToWorkspaceApplicationPatchArrayOutputWithContext(context.Background())
}

func (i WorkspaceApplicationPatchArray) ToWorkspaceApplicationPatchArrayOutputWithContext(ctx context.Context) WorkspaceApplicationPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApplicationPatchArrayOutput)
}

// WorkspaceApplicationPatchMapInput is an input type that accepts WorkspaceApplicationPatchMap and WorkspaceApplicationPatchMapOutput values.
// You can construct a concrete instance of `WorkspaceApplicationPatchMapInput` via:
//
//	WorkspaceApplicationPatchMap{ "key": WorkspaceApplicationPatchArgs{...} }
type WorkspaceApplicationPatchMapInput interface {
	pulumi.Input

	ToWorkspaceApplicationPatchMapOutput() WorkspaceApplicationPatchMapOutput
	ToWorkspaceApplicationPatchMapOutputWithContext(context.Context) WorkspaceApplicationPatchMapOutput
}

type WorkspaceApplicationPatchMap map[string]WorkspaceApplicationPatchInput

func (WorkspaceApplicationPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceApplicationPatch)(nil)).Elem()
}

func (i WorkspaceApplicationPatchMap) ToWorkspaceApplicationPatchMapOutput() WorkspaceApplicationPatchMapOutput {
	return i.ToWorkspaceApplicationPatchMapOutputWithContext(context.Background())
}

func (i WorkspaceApplicationPatchMap) ToWorkspaceApplicationPatchMapOutputWithContext(ctx context.Context) WorkspaceApplicationPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApplicationPatchMapOutput)
}

type WorkspaceApplicationPatchOutput struct{ *pulumi.OutputState }

func (WorkspaceApplicationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApplicationPatch)(nil)).Elem()
}

func (o WorkspaceApplicationPatchOutput) ToWorkspaceApplicationPatchOutput() WorkspaceApplicationPatchOutput {
	return o
}

func (o WorkspaceApplicationPatchOutput) ToWorkspaceApplicationPatchOutputWithContext(ctx context.Context) WorkspaceApplicationPatchOutput {
	return o
}

// The application key.
func (o WorkspaceApplicationPatchOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringOutput { return v.ApplicationKey }).(pulumi.StringOutput)
}

// The application version of the patch.
func (o WorkspaceApplicationPatchOutput) ApplicationVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.IntOutput { return v.ApplicationVersion }).(pulumi.IntOutput)
}

// List of dependent objects in this patch.
func (o WorkspaceApplicationPatchOutput) DependentObjectMetadatas() WorkspaceApplicationPatchDependentObjectMetadataArrayOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) WorkspaceApplicationPatchDependentObjectMetadataArrayOutput {
		return v.DependentObjectMetadatas
	}).(WorkspaceApplicationPatchDependentObjectMetadataArrayOutput)
}

// Detailed description for the object.
func (o WorkspaceApplicationPatchOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The errors encountered while applying the patch, if any.
func (o WorkspaceApplicationPatchOutput) ErrorMessages() pulumi.MapOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.MapOutput { return v.ErrorMessages }).(pulumi.MapOutput)
}

// Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
func (o WorkspaceApplicationPatchOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// The object's key.
func (o WorkspaceApplicationPatchOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
func (o WorkspaceApplicationPatchOutput) KeyMap() pulumi.MapOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.MapOutput { return v.KeyMap }).(pulumi.MapOutput)
}

// A summary type containing information about the object including its key, name and when/who created/updated it.
func (o WorkspaceApplicationPatchOutput) Metadatas() WorkspaceApplicationPatchMetadataArrayOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) WorkspaceApplicationPatchMetadataArrayOutput { return v.Metadatas }).(WorkspaceApplicationPatchMetadataArrayOutput)
}

// The object type.
func (o WorkspaceApplicationPatchOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringOutput { return v.ModelType }).(pulumi.StringOutput)
}

// The object's model version.
func (o WorkspaceApplicationPatchOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringOutput { return v.ModelVersion }).(pulumi.StringOutput)
}

// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o WorkspaceApplicationPatchOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The array of object keys to publish into application.
func (o WorkspaceApplicationPatchOutput) ObjectKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringArrayOutput { return v.ObjectKeys }).(pulumi.StringArrayOutput)
}

// The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
func (o WorkspaceApplicationPatchOutput) ObjectStatus() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.IntOutput { return v.ObjectStatus }).(pulumi.IntOutput)
}

// The object version.
func (o WorkspaceApplicationPatchOutput) ObjectVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.IntOutput { return v.ObjectVersion }).(pulumi.IntOutput)
}

// A reference to the object's parent.
func (o WorkspaceApplicationPatchOutput) ParentReves() WorkspaceApplicationPatchParentRefArrayOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) WorkspaceApplicationPatchParentRefArrayOutput { return v.ParentReves }).(WorkspaceApplicationPatchParentRefArrayOutput)
}

// List of objects that are published or unpublished in this patch.
func (o WorkspaceApplicationPatchOutput) PatchObjectMetadatas() WorkspaceApplicationPatchPatchObjectMetadataArrayOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) WorkspaceApplicationPatchPatchObjectMetadataArrayOutput {
		return v.PatchObjectMetadatas
	}).(WorkspaceApplicationPatchPatchObjectMetadataArrayOutput)
}

// Status of the patch applied or being applied on the application
func (o WorkspaceApplicationPatchOutput) PatchStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringOutput { return v.PatchStatus }).(pulumi.StringOutput)
}

// The type of the patch applied or being applied on the application.
func (o WorkspaceApplicationPatchOutput) PatchType() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringOutput { return v.PatchType }).(pulumi.StringOutput)
}

// Information about the object and its parent.
func (o WorkspaceApplicationPatchOutput) RegistryMetadata() WorkspaceApplicationPatchRegistryMetadataOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) WorkspaceApplicationPatchRegistryMetadataOutput {
		return v.RegistryMetadata
	}).(WorkspaceApplicationPatchRegistryMetadataOutput)
}

// The date and time the patch was applied, in the timestamp format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o WorkspaceApplicationPatchOutput) TimePatched() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringOutput { return v.TimePatched }).(pulumi.StringOutput)
}

// The workspace ID.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o WorkspaceApplicationPatchOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationPatch) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type WorkspaceApplicationPatchArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceApplicationPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceApplicationPatch)(nil)).Elem()
}

func (o WorkspaceApplicationPatchArrayOutput) ToWorkspaceApplicationPatchArrayOutput() WorkspaceApplicationPatchArrayOutput {
	return o
}

func (o WorkspaceApplicationPatchArrayOutput) ToWorkspaceApplicationPatchArrayOutputWithContext(ctx context.Context) WorkspaceApplicationPatchArrayOutput {
	return o
}

func (o WorkspaceApplicationPatchArrayOutput) Index(i pulumi.IntInput) WorkspaceApplicationPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkspaceApplicationPatch {
		return vs[0].([]*WorkspaceApplicationPatch)[vs[1].(int)]
	}).(WorkspaceApplicationPatchOutput)
}

type WorkspaceApplicationPatchMapOutput struct{ *pulumi.OutputState }

func (WorkspaceApplicationPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceApplicationPatch)(nil)).Elem()
}

func (o WorkspaceApplicationPatchMapOutput) ToWorkspaceApplicationPatchMapOutput() WorkspaceApplicationPatchMapOutput {
	return o
}

func (o WorkspaceApplicationPatchMapOutput) ToWorkspaceApplicationPatchMapOutputWithContext(ctx context.Context) WorkspaceApplicationPatchMapOutput {
	return o
}

func (o WorkspaceApplicationPatchMapOutput) MapIndex(k pulumi.StringInput) WorkspaceApplicationPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkspaceApplicationPatch {
		return vs[0].(map[string]*WorkspaceApplicationPatch)[vs[1].(string)]
	}).(WorkspaceApplicationPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceApplicationPatchInput)(nil)).Elem(), &WorkspaceApplicationPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceApplicationPatchArrayInput)(nil)).Elem(), WorkspaceApplicationPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceApplicationPatchMapInput)(nil)).Elem(), WorkspaceApplicationPatchMap{})
	pulumi.RegisterOutputType(WorkspaceApplicationPatchOutput{})
	pulumi.RegisterOutputType(WorkspaceApplicationPatchArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceApplicationPatchMapOutput{})
}
