// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataintegration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Workspace Application Schedule resource in Oracle Cloud Infrastructure Data Integration service.
//
// # Endpoint to create a new schedule
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/dataintegration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dataintegration.NewWorkspaceApplicationSchedule(ctx, "test_workspace_application_schedule", &dataintegration.WorkspaceApplicationScheduleArgs{
//				ApplicationKey: pulumi.Any(workspaceApplicationScheduleApplicationKey),
//				Identifier:     pulumi.Any(workspaceApplicationScheduleIdentifier),
//				Name:           pulumi.Any(workspaceApplicationScheduleName),
//				WorkspaceId:    pulumi.Any(testWorkspace.Id),
//				Description:    pulumi.Any(workspaceApplicationScheduleDescription),
//				FrequencyDetails: &dataintegration.WorkspaceApplicationScheduleFrequencyDetailsArgs{
//					ModelType:        pulumi.Any(workspaceApplicationScheduleFrequencyDetailsModelType),
//					CustomExpression: pulumi.Any(workspaceApplicationScheduleFrequencyDetailsCustomExpression),
//					DayOfWeek:        pulumi.Any(workspaceApplicationScheduleFrequencyDetailsDayOfWeek),
//					Days:             pulumi.Any(workspaceApplicationScheduleFrequencyDetailsDays),
//					Frequency:        pulumi.Any(workspaceApplicationScheduleFrequencyDetailsFrequency),
//					Interval:         pulumi.Any(workspaceApplicationScheduleFrequencyDetailsInterval),
//					Time: &dataintegration.WorkspaceApplicationScheduleFrequencyDetailsTimeArgs{
//						Hour:   pulumi.Any(workspaceApplicationScheduleFrequencyDetailsTimeHour),
//						Minute: pulumi.Any(workspaceApplicationScheduleFrequencyDetailsTimeMinute),
//						Second: pulumi.Any(workspaceApplicationScheduleFrequencyDetailsTimeSecond),
//					},
//					WeekOfMonth: pulumi.Any(workspaceApplicationScheduleFrequencyDetailsWeekOfMonth),
//				},
//				IsDaylightAdjustmentEnabled: pulumi.Any(workspaceApplicationScheduleIsDaylightAdjustmentEnabled),
//				Key:                         pulumi.Any(workspaceApplicationScheduleKey),
//				ModelVersion:                pulumi.Any(workspaceApplicationScheduleModelVersion),
//				ObjectStatus:                pulumi.Any(workspaceApplicationScheduleObjectStatus),
//				ObjectVersion:               pulumi.Any(workspaceApplicationScheduleObjectVersion),
//				RegistryMetadata: &dataintegration.WorkspaceApplicationScheduleRegistryMetadataArgs{
//					AggregatorKey:   pulumi.Any(workspaceApplicationScheduleRegistryMetadataAggregatorKey),
//					IsFavorite:      pulumi.Any(workspaceApplicationScheduleRegistryMetadataIsFavorite),
//					Key:             pulumi.Any(workspaceApplicationScheduleRegistryMetadataKey),
//					Labels:          pulumi.Any(workspaceApplicationScheduleRegistryMetadataLabels),
//					RegistryVersion: pulumi.Any(workspaceApplicationScheduleRegistryMetadataRegistryVersion),
//				},
//				Timezone: pulumi.Any(workspaceApplicationScheduleTimezone),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WorkspaceApplicationSchedules can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataIntegration/workspaceApplicationSchedule:WorkspaceApplicationSchedule test_workspace_application_schedule "workspaces/{workspaceId}/applications/{applicationKey}/schedules/{scheduleKey}"
// ```
type WorkspaceApplicationSchedule struct {
	pulumi.CustomResourceState

	// The application key.
	ApplicationKey pulumi.StringOutput `pulumi:"applicationKey"`
	// (Updatable) Detailed description for the object.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The model that holds the frequency details.
	FrequencyDetails WorkspaceApplicationScheduleFrequencyDetailsOutput `pulumi:"frequencyDetails"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// (Updatable) A flag to indicate whether daylight adjustment should be considered or not.
	IsDaylightAdjustmentEnabled pulumi.BoolOutput `pulumi:"isDaylightAdjustmentEnabled"`
	// (Updatable) Generated key that can be used in API calls to identify schedule. On scenarios where reference to the schedule is needed, a value can be passed in create.
	Key pulumi.StringOutput `pulumi:"key"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas WorkspaceApplicationScheduleMetadataArrayOutput `pulumi:"metadatas"`
	// The type of the object.
	ModelType pulumi.StringOutput `pulumi:"modelType"`
	// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
	ModelVersion pulumi.StringOutput `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntOutput `pulumi:"objectStatus"`
	// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
	ObjectVersion pulumi.IntOutput `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves WorkspaceApplicationScheduleParentRefArrayOutput `pulumi:"parentReves"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata WorkspaceApplicationScheduleRegistryMetadataOutput `pulumi:"registryMetadata"`
	// (Updatable) The timezone for the schedule.
	Timezone pulumi.StringOutput `pulumi:"timezone"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewWorkspaceApplicationSchedule registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceApplicationSchedule(ctx *pulumi.Context,
	name string, args *WorkspaceApplicationScheduleArgs, opts ...pulumi.ResourceOption) (*WorkspaceApplicationSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationKey == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationKey'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceApplicationSchedule
	err := ctx.RegisterResource("oci:DataIntegration/workspaceApplicationSchedule:WorkspaceApplicationSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceApplicationSchedule gets an existing WorkspaceApplicationSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceApplicationSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceApplicationScheduleState, opts ...pulumi.ResourceOption) (*WorkspaceApplicationSchedule, error) {
	var resource WorkspaceApplicationSchedule
	err := ctx.ReadResource("oci:DataIntegration/workspaceApplicationSchedule:WorkspaceApplicationSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceApplicationSchedule resources.
type workspaceApplicationScheduleState struct {
	// The application key.
	ApplicationKey *string `pulumi:"applicationKey"`
	// (Updatable) Detailed description for the object.
	Description *string `pulumi:"description"`
	// (Updatable) The model that holds the frequency details.
	FrequencyDetails *WorkspaceApplicationScheduleFrequencyDetails `pulumi:"frequencyDetails"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier *string `pulumi:"identifier"`
	// (Updatable) A flag to indicate whether daylight adjustment should be considered or not.
	IsDaylightAdjustmentEnabled *bool `pulumi:"isDaylightAdjustmentEnabled"`
	// (Updatable) Generated key that can be used in API calls to identify schedule. On scenarios where reference to the schedule is needed, a value can be passed in create.
	Key *string `pulumi:"key"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas []WorkspaceApplicationScheduleMetadata `pulumi:"metadatas"`
	// The type of the object.
	ModelType *string `pulumi:"modelType"`
	// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
	ModelVersion *string `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
	ObjectVersion *int `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves []WorkspaceApplicationScheduleParentRef `pulumi:"parentReves"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata *WorkspaceApplicationScheduleRegistryMetadata `pulumi:"registryMetadata"`
	// (Updatable) The timezone for the schedule.
	Timezone *string `pulumi:"timezone"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId *string `pulumi:"workspaceId"`
}

type WorkspaceApplicationScheduleState struct {
	// The application key.
	ApplicationKey pulumi.StringPtrInput
	// (Updatable) Detailed description for the object.
	Description pulumi.StringPtrInput
	// (Updatable) The model that holds the frequency details.
	FrequencyDetails WorkspaceApplicationScheduleFrequencyDetailsPtrInput
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringPtrInput
	// (Updatable) A flag to indicate whether daylight adjustment should be considered or not.
	IsDaylightAdjustmentEnabled pulumi.BoolPtrInput
	// (Updatable) Generated key that can be used in API calls to identify schedule. On scenarios where reference to the schedule is needed, a value can be passed in create.
	Key pulumi.StringPtrInput
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas WorkspaceApplicationScheduleMetadataArrayInput
	// The type of the object.
	ModelType pulumi.StringPtrInput
	// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
	ModelVersion pulumi.StringPtrInput
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringPtrInput
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
	ObjectVersion pulumi.IntPtrInput
	// A reference to the object's parent.
	ParentReves WorkspaceApplicationScheduleParentRefArrayInput
	// (Updatable) Information about the object and its parent.
	RegistryMetadata WorkspaceApplicationScheduleRegistryMetadataPtrInput
	// (Updatable) The timezone for the schedule.
	Timezone pulumi.StringPtrInput
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringPtrInput
}

func (WorkspaceApplicationScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApplicationScheduleState)(nil)).Elem()
}

type workspaceApplicationScheduleArgs struct {
	// The application key.
	ApplicationKey string `pulumi:"applicationKey"`
	// (Updatable) Detailed description for the object.
	Description *string `pulumi:"description"`
	// (Updatable) The model that holds the frequency details.
	FrequencyDetails *WorkspaceApplicationScheduleFrequencyDetails `pulumi:"frequencyDetails"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier string `pulumi:"identifier"`
	// (Updatable) A flag to indicate whether daylight adjustment should be considered or not.
	IsDaylightAdjustmentEnabled *bool `pulumi:"isDaylightAdjustmentEnabled"`
	// (Updatable) Generated key that can be used in API calls to identify schedule. On scenarios where reference to the schedule is needed, a value can be passed in create.
	Key *string `pulumi:"key"`
	// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
	ModelVersion *string `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
	ObjectVersion *int `pulumi:"objectVersion"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata *WorkspaceApplicationScheduleRegistryMetadata `pulumi:"registryMetadata"`
	// (Updatable) The timezone for the schedule.
	Timezone *string `pulumi:"timezone"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a WorkspaceApplicationSchedule resource.
type WorkspaceApplicationScheduleArgs struct {
	// The application key.
	ApplicationKey pulumi.StringInput
	// (Updatable) Detailed description for the object.
	Description pulumi.StringPtrInput
	// (Updatable) The model that holds the frequency details.
	FrequencyDetails WorkspaceApplicationScheduleFrequencyDetailsPtrInput
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringInput
	// (Updatable) A flag to indicate whether daylight adjustment should be considered or not.
	IsDaylightAdjustmentEnabled pulumi.BoolPtrInput
	// (Updatable) Generated key that can be used in API calls to identify schedule. On scenarios where reference to the schedule is needed, a value can be passed in create.
	Key pulumi.StringPtrInput
	// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
	ModelVersion pulumi.StringPtrInput
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringPtrInput
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
	ObjectVersion pulumi.IntPtrInput
	// (Updatable) Information about the object and its parent.
	RegistryMetadata WorkspaceApplicationScheduleRegistryMetadataPtrInput
	// (Updatable) The timezone for the schedule.
	Timezone pulumi.StringPtrInput
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringInput
}

func (WorkspaceApplicationScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApplicationScheduleArgs)(nil)).Elem()
}

type WorkspaceApplicationScheduleInput interface {
	pulumi.Input

	ToWorkspaceApplicationScheduleOutput() WorkspaceApplicationScheduleOutput
	ToWorkspaceApplicationScheduleOutputWithContext(ctx context.Context) WorkspaceApplicationScheduleOutput
}

func (*WorkspaceApplicationSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApplicationSchedule)(nil)).Elem()
}

func (i *WorkspaceApplicationSchedule) ToWorkspaceApplicationScheduleOutput() WorkspaceApplicationScheduleOutput {
	return i.ToWorkspaceApplicationScheduleOutputWithContext(context.Background())
}

func (i *WorkspaceApplicationSchedule) ToWorkspaceApplicationScheduleOutputWithContext(ctx context.Context) WorkspaceApplicationScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApplicationScheduleOutput)
}

// WorkspaceApplicationScheduleArrayInput is an input type that accepts WorkspaceApplicationScheduleArray and WorkspaceApplicationScheduleArrayOutput values.
// You can construct a concrete instance of `WorkspaceApplicationScheduleArrayInput` via:
//
//	WorkspaceApplicationScheduleArray{ WorkspaceApplicationScheduleArgs{...} }
type WorkspaceApplicationScheduleArrayInput interface {
	pulumi.Input

	ToWorkspaceApplicationScheduleArrayOutput() WorkspaceApplicationScheduleArrayOutput
	ToWorkspaceApplicationScheduleArrayOutputWithContext(context.Context) WorkspaceApplicationScheduleArrayOutput
}

type WorkspaceApplicationScheduleArray []WorkspaceApplicationScheduleInput

func (WorkspaceApplicationScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceApplicationSchedule)(nil)).Elem()
}

func (i WorkspaceApplicationScheduleArray) ToWorkspaceApplicationScheduleArrayOutput() WorkspaceApplicationScheduleArrayOutput {
	return i.ToWorkspaceApplicationScheduleArrayOutputWithContext(context.Background())
}

func (i WorkspaceApplicationScheduleArray) ToWorkspaceApplicationScheduleArrayOutputWithContext(ctx context.Context) WorkspaceApplicationScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApplicationScheduleArrayOutput)
}

// WorkspaceApplicationScheduleMapInput is an input type that accepts WorkspaceApplicationScheduleMap and WorkspaceApplicationScheduleMapOutput values.
// You can construct a concrete instance of `WorkspaceApplicationScheduleMapInput` via:
//
//	WorkspaceApplicationScheduleMap{ "key": WorkspaceApplicationScheduleArgs{...} }
type WorkspaceApplicationScheduleMapInput interface {
	pulumi.Input

	ToWorkspaceApplicationScheduleMapOutput() WorkspaceApplicationScheduleMapOutput
	ToWorkspaceApplicationScheduleMapOutputWithContext(context.Context) WorkspaceApplicationScheduleMapOutput
}

type WorkspaceApplicationScheduleMap map[string]WorkspaceApplicationScheduleInput

func (WorkspaceApplicationScheduleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceApplicationSchedule)(nil)).Elem()
}

func (i WorkspaceApplicationScheduleMap) ToWorkspaceApplicationScheduleMapOutput() WorkspaceApplicationScheduleMapOutput {
	return i.ToWorkspaceApplicationScheduleMapOutputWithContext(context.Background())
}

func (i WorkspaceApplicationScheduleMap) ToWorkspaceApplicationScheduleMapOutputWithContext(ctx context.Context) WorkspaceApplicationScheduleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApplicationScheduleMapOutput)
}

type WorkspaceApplicationScheduleOutput struct{ *pulumi.OutputState }

func (WorkspaceApplicationScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApplicationSchedule)(nil)).Elem()
}

func (o WorkspaceApplicationScheduleOutput) ToWorkspaceApplicationScheduleOutput() WorkspaceApplicationScheduleOutput {
	return o
}

func (o WorkspaceApplicationScheduleOutput) ToWorkspaceApplicationScheduleOutputWithContext(ctx context.Context) WorkspaceApplicationScheduleOutput {
	return o
}

// The application key.
func (o WorkspaceApplicationScheduleOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.StringOutput { return v.ApplicationKey }).(pulumi.StringOutput)
}

// (Updatable) Detailed description for the object.
func (o WorkspaceApplicationScheduleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The model that holds the frequency details.
func (o WorkspaceApplicationScheduleOutput) FrequencyDetails() WorkspaceApplicationScheduleFrequencyDetailsOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) WorkspaceApplicationScheduleFrequencyDetailsOutput {
		return v.FrequencyDetails
	}).(WorkspaceApplicationScheduleFrequencyDetailsOutput)
}

// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
func (o WorkspaceApplicationScheduleOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// (Updatable) A flag to indicate whether daylight adjustment should be considered or not.
func (o WorkspaceApplicationScheduleOutput) IsDaylightAdjustmentEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.BoolOutput { return v.IsDaylightAdjustmentEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Generated key that can be used in API calls to identify schedule. On scenarios where reference to the schedule is needed, a value can be passed in create.
func (o WorkspaceApplicationScheduleOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// A summary type containing information about the object including its key, name and when/who created/updated it.
func (o WorkspaceApplicationScheduleOutput) Metadatas() WorkspaceApplicationScheduleMetadataArrayOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) WorkspaceApplicationScheduleMetadataArrayOutput {
		return v.Metadatas
	}).(WorkspaceApplicationScheduleMetadataArrayOutput)
}

// The type of the object.
func (o WorkspaceApplicationScheduleOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.StringOutput { return v.ModelType }).(pulumi.StringOutput)
}

// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
func (o WorkspaceApplicationScheduleOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.StringOutput { return v.ModelVersion }).(pulumi.StringOutput)
}

// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o WorkspaceApplicationScheduleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
func (o WorkspaceApplicationScheduleOutput) ObjectStatus() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.IntOutput { return v.ObjectStatus }).(pulumi.IntOutput)
}

// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
func (o WorkspaceApplicationScheduleOutput) ObjectVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.IntOutput { return v.ObjectVersion }).(pulumi.IntOutput)
}

// A reference to the object's parent.
func (o WorkspaceApplicationScheduleOutput) ParentReves() WorkspaceApplicationScheduleParentRefArrayOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) WorkspaceApplicationScheduleParentRefArrayOutput {
		return v.ParentReves
	}).(WorkspaceApplicationScheduleParentRefArrayOutput)
}

// (Updatable) Information about the object and its parent.
func (o WorkspaceApplicationScheduleOutput) RegistryMetadata() WorkspaceApplicationScheduleRegistryMetadataOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) WorkspaceApplicationScheduleRegistryMetadataOutput {
		return v.RegistryMetadata
	}).(WorkspaceApplicationScheduleRegistryMetadataOutput)
}

// (Updatable) The timezone for the schedule.
func (o WorkspaceApplicationScheduleOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.StringOutput { return v.Timezone }).(pulumi.StringOutput)
}

// The workspace ID.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o WorkspaceApplicationScheduleOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationSchedule) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type WorkspaceApplicationScheduleArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceApplicationScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceApplicationSchedule)(nil)).Elem()
}

func (o WorkspaceApplicationScheduleArrayOutput) ToWorkspaceApplicationScheduleArrayOutput() WorkspaceApplicationScheduleArrayOutput {
	return o
}

func (o WorkspaceApplicationScheduleArrayOutput) ToWorkspaceApplicationScheduleArrayOutputWithContext(ctx context.Context) WorkspaceApplicationScheduleArrayOutput {
	return o
}

func (o WorkspaceApplicationScheduleArrayOutput) Index(i pulumi.IntInput) WorkspaceApplicationScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkspaceApplicationSchedule {
		return vs[0].([]*WorkspaceApplicationSchedule)[vs[1].(int)]
	}).(WorkspaceApplicationScheduleOutput)
}

type WorkspaceApplicationScheduleMapOutput struct{ *pulumi.OutputState }

func (WorkspaceApplicationScheduleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceApplicationSchedule)(nil)).Elem()
}

func (o WorkspaceApplicationScheduleMapOutput) ToWorkspaceApplicationScheduleMapOutput() WorkspaceApplicationScheduleMapOutput {
	return o
}

func (o WorkspaceApplicationScheduleMapOutput) ToWorkspaceApplicationScheduleMapOutputWithContext(ctx context.Context) WorkspaceApplicationScheduleMapOutput {
	return o
}

func (o WorkspaceApplicationScheduleMapOutput) MapIndex(k pulumi.StringInput) WorkspaceApplicationScheduleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkspaceApplicationSchedule {
		return vs[0].(map[string]*WorkspaceApplicationSchedule)[vs[1].(string)]
	}).(WorkspaceApplicationScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceApplicationScheduleInput)(nil)).Elem(), &WorkspaceApplicationSchedule{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceApplicationScheduleArrayInput)(nil)).Elem(), WorkspaceApplicationScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceApplicationScheduleMapInput)(nil)).Elem(), WorkspaceApplicationScheduleMap{})
	pulumi.RegisterOutputType(WorkspaceApplicationScheduleOutput{})
	pulumi.RegisterOutputType(WorkspaceApplicationScheduleArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceApplicationScheduleMapOutput{})
}
