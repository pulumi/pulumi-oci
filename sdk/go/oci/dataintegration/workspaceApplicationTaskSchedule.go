// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataintegration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Workspace Application Task Schedule resource in Oracle Cloud Infrastructure Data Integration service.
//
// Endpoint to be used create TaskSchedule.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataIntegration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataIntegration.NewWorkspaceApplicationTaskSchedule(ctx, "test_workspace_application_task_schedule", &DataIntegration.WorkspaceApplicationTaskScheduleArgs{
//				ApplicationKey:         pulumi.Any(workspaceApplicationTaskScheduleApplicationKey),
//				Identifier:             pulumi.Any(workspaceApplicationTaskScheduleIdentifier),
//				Name:                   pulumi.Any(workspaceApplicationTaskScheduleName),
//				WorkspaceId:            pulumi.Any(testWorkspace.Id),
//				AuthMode:               pulumi.Any(workspaceApplicationTaskScheduleAuthMode),
//				ConfigProviderDelegate: pulumi.Any(workspaceApplicationTaskScheduleConfigProviderDelegate),
//				Description:            pulumi.Any(workspaceApplicationTaskScheduleDescription),
//				EndTimeMillis:          pulumi.Any(workspaceApplicationTaskScheduleEndTimeMillis),
//				ExpectedDuration:       pulumi.Any(workspaceApplicationTaskScheduleExpectedDuration),
//				ExpectedDurationUnit:   pulumi.Any(workspaceApplicationTaskScheduleExpectedDurationUnit),
//				IsBackfillEnabled:      pulumi.Any(workspaceApplicationTaskScheduleIsBackfillEnabled),
//				IsConcurrentAllowed:    pulumi.Any(workspaceApplicationTaskScheduleIsConcurrentAllowed),
//				IsEnabled:              pulumi.Any(workspaceApplicationTaskScheduleIsEnabled),
//				Key:                    pulumi.Any(workspaceApplicationTaskScheduleKey),
//				ModelVersion:           pulumi.Any(workspaceApplicationTaskScheduleModelVersion),
//				NumberOfRetries:        pulumi.Any(workspaceApplicationTaskScheduleNumberOfRetries),
//				ObjectStatus:           pulumi.Any(workspaceApplicationTaskScheduleObjectStatus),
//				ObjectVersion:          pulumi.Any(workspaceApplicationTaskScheduleObjectVersion),
//				ParentRef: &dataintegration.WorkspaceApplicationTaskScheduleParentRefArgs{
//					Parent:    pulumi.Any(workspaceApplicationTaskScheduleParentRefParent),
//					RootDocId: pulumi.Any(testRootDoc.Id),
//				},
//				RegistryMetadata: &dataintegration.WorkspaceApplicationTaskScheduleRegistryMetadataArgs{
//					AggregatorKey:   pulumi.Any(workspaceApplicationTaskScheduleRegistryMetadataAggregatorKey),
//					IsFavorite:      pulumi.Any(workspaceApplicationTaskScheduleRegistryMetadataIsFavorite),
//					Key:             pulumi.Any(workspaceApplicationTaskScheduleRegistryMetadataKey),
//					Labels:          pulumi.Any(workspaceApplicationTaskScheduleRegistryMetadataLabels),
//					RegistryVersion: pulumi.Any(workspaceApplicationTaskScheduleRegistryMetadataRegistryVersion),
//				},
//				RetryDelay:     pulumi.Any(workspaceApplicationTaskScheduleRetryDelay),
//				RetryDelayUnit: pulumi.Any(workspaceApplicationTaskScheduleRetryDelayUnit),
//				ScheduleRef: &dataintegration.WorkspaceApplicationTaskScheduleScheduleRefArgs{
//					Description: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefDescription),
//					FrequencyDetails: &dataintegration.WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsArgs{
//						ModelType:        pulumi.Any(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsModelType),
//						CustomExpression: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsCustomExpression),
//						DayOfWeek:        pulumi.Any(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsDayOfWeek),
//						Days:             pulumi.Any(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsDays),
//						Frequency:        pulumi.Any(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsFrequency),
//						Interval:         pulumi.Any(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsInterval),
//						Time: &dataintegration.WorkspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeArgs{
//							Hour:   pulumi.Any(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeHour),
//							Minute: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeMinute),
//							Second: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsTimeSecond),
//						},
//						WeekOfMonth: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefFrequencyDetailsWeekOfMonth),
//					},
//					Identifier:                  pulumi.Any(workspaceApplicationTaskScheduleScheduleRefIdentifier),
//					IsDaylightAdjustmentEnabled: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefIsDaylightAdjustmentEnabled),
//					Key:                         pulumi.Any(workspaceApplicationTaskScheduleScheduleRefKey),
//					Metadata: &dataintegration.WorkspaceApplicationTaskScheduleScheduleRefMetadataArgs{
//						Aggregator: &dataintegration.WorkspaceApplicationTaskScheduleScheduleRefMetadataAggregatorArgs{
//							Description: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorDescription),
//							Identifier:  pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorIdentifier),
//							Key:         pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorKey),
//							Name:        pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorName),
//							Type:        pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorType),
//						},
//						AggregatorKey: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataAggregatorKey),
//						CountStatistics: &dataintegration.WorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsArgs{
//							ObjectTypeCountLists: dataintegration.WorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountListArray{
//								&dataintegration.WorkspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountListArgs{
//									ObjectCount: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountListObjectCount),
//									ObjectType:  pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataCountStatisticsObjectTypeCountListObjectType),
//								},
//							},
//						},
//						CreatedBy:       pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataCreatedBy),
//						CreatedByName:   pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataCreatedByName),
//						IdentifierPath:  pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataIdentifierPath),
//						InfoFields:      pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataInfoFields),
//						IsFavorite:      pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataIsFavorite),
//						Labels:          pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataLabels),
//						RegistryVersion: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataRegistryVersion),
//						TimeCreated:     pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataTimeCreated),
//						TimeUpdated:     pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataTimeUpdated),
//						UpdatedBy:       pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataUpdatedBy),
//						UpdatedByName:   pulumi.Any(workspaceApplicationTaskScheduleScheduleRefMetadataUpdatedByName),
//					},
//					ModelType:     pulumi.Any(workspaceApplicationTaskScheduleScheduleRefModelType),
//					ModelVersion:  pulumi.Any(workspaceApplicationTaskScheduleScheduleRefModelVersion),
//					Name:          pulumi.Any(workspaceApplicationTaskScheduleScheduleRefName),
//					ObjectStatus:  pulumi.Any(workspaceApplicationTaskScheduleScheduleRefObjectStatus),
//					ObjectVersion: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefObjectVersion),
//					ParentRef: &dataintegration.WorkspaceApplicationTaskScheduleScheduleRefParentRefArgs{
//						Parent:    pulumi.Any(workspaceApplicationTaskScheduleScheduleRefParentRefParent),
//						RootDocId: pulumi.Any(testRootDoc.Id),
//					},
//					Timezone: pulumi.Any(workspaceApplicationTaskScheduleScheduleRefTimezone),
//				},
//				StartTimeMillis: pulumi.Any(workspaceApplicationTaskScheduleStartTimeMillis),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// WorkspaceApplicationTaskSchedules can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataIntegration/workspaceApplicationTaskSchedule:WorkspaceApplicationTaskSchedule test_workspace_application_task_schedule "workspaces/{workspaceId}/applications/{applicationKey}/taskSchedules/{taskScheduleKey}"
// ```
type WorkspaceApplicationTaskSchedule struct {
	pulumi.CustomResourceState

	// The application key.
	ApplicationKey pulumi.StringOutput `pulumi:"applicationKey"`
	// (Updatable) The authorization mode for the task.
	AuthMode pulumi.StringOutput `pulumi:"authMode"`
	// (Updatable) The information about the configuration provider.
	ConfigProviderDelegate pulumi.StringOutput `pulumi:"configProviderDelegate"`
	// (Updatable) The description of the aggregator.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The end time in milliseconds.
	EndTimeMillis pulumi.StringOutput `pulumi:"endTimeMillis"`
	// (Updatable) The expected duration of the task execution.
	ExpectedDuration pulumi.Float64Output `pulumi:"expectedDuration"`
	// (Updatable) The expected duration unit of the task execution.
	ExpectedDurationUnit pulumi.StringOutput `pulumi:"expectedDurationUnit"`
	// (Updatable) The identifier of the aggregator.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// (Updatable) Whether the backfill is enabled.
	IsBackfillEnabled pulumi.BoolOutput `pulumi:"isBackfillEnabled"`
	// (Updatable) Whether the same task can be executed concurrently.
	IsConcurrentAllowed pulumi.BoolOutput `pulumi:"isConcurrentAllowed"`
	// (Updatable) Whether the task schedule is enabled.
	IsEnabled pulumi.BoolOutput `pulumi:"isEnabled"`
	// (Updatable) The key of the aggregator object.
	Key pulumi.StringOutput `pulumi:"key"`
	// The last run details for the task run.
	LastRunDetails WorkspaceApplicationTaskScheduleLastRunDetailArrayOutput `pulumi:"lastRunDetails"`
	// (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas WorkspaceApplicationTaskScheduleMetadataArrayOutput `pulumi:"metadatas"`
	// (Updatable) The type of the object.
	ModelType pulumi.StringOutput `pulumi:"modelType"`
	// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
	ModelVersion pulumi.StringOutput `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name              pulumi.StringOutput `pulumi:"name"`
	NextRunTimeMillis pulumi.StringOutput `pulumi:"nextRunTimeMillis"`
	// (Updatable) The number of retries.
	NumberOfRetries pulumi.IntOutput `pulumi:"numberOfRetries"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntOutput `pulumi:"objectStatus"`
	// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
	ObjectVersion pulumi.IntOutput `pulumi:"objectVersion"`
	// (Updatable) A reference to the object's parent.
	ParentRef WorkspaceApplicationTaskScheduleParentRefOutput `pulumi:"parentRef"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata WorkspaceApplicationTaskScheduleRegistryMetadataOutput `pulumi:"registryMetadata"`
	// The number of retry attempts.
	RetryAttempts pulumi.IntOutput `pulumi:"retryAttempts"`
	// (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
	RetryDelay pulumi.Float64Output `pulumi:"retryDelay"`
	// (Updatable) The unit for the retry delay.
	RetryDelayUnit pulumi.StringOutput `pulumi:"retryDelayUnit"`
	// (Updatable) The schedule object
	ScheduleRef WorkspaceApplicationTaskScheduleScheduleRefOutput `pulumi:"scheduleRef"`
	// (Updatable) The start time in milliseconds.
	StartTimeMillis pulumi.StringOutput `pulumi:"startTimeMillis"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewWorkspaceApplicationTaskSchedule registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceApplicationTaskSchedule(ctx *pulumi.Context,
	name string, args *WorkspaceApplicationTaskScheduleArgs, opts ...pulumi.ResourceOption) (*WorkspaceApplicationTaskSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationKey == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationKey'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceApplicationTaskSchedule
	err := ctx.RegisterResource("oci:DataIntegration/workspaceApplicationTaskSchedule:WorkspaceApplicationTaskSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceApplicationTaskSchedule gets an existing WorkspaceApplicationTaskSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceApplicationTaskSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceApplicationTaskScheduleState, opts ...pulumi.ResourceOption) (*WorkspaceApplicationTaskSchedule, error) {
	var resource WorkspaceApplicationTaskSchedule
	err := ctx.ReadResource("oci:DataIntegration/workspaceApplicationTaskSchedule:WorkspaceApplicationTaskSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceApplicationTaskSchedule resources.
type workspaceApplicationTaskScheduleState struct {
	// The application key.
	ApplicationKey *string `pulumi:"applicationKey"`
	// (Updatable) The authorization mode for the task.
	AuthMode *string `pulumi:"authMode"`
	// (Updatable) The information about the configuration provider.
	ConfigProviderDelegate *string `pulumi:"configProviderDelegate"`
	// (Updatable) The description of the aggregator.
	Description *string `pulumi:"description"`
	// (Updatable) The end time in milliseconds.
	EndTimeMillis *string `pulumi:"endTimeMillis"`
	// (Updatable) The expected duration of the task execution.
	ExpectedDuration *float64 `pulumi:"expectedDuration"`
	// (Updatable) The expected duration unit of the task execution.
	ExpectedDurationUnit *string `pulumi:"expectedDurationUnit"`
	// (Updatable) The identifier of the aggregator.
	Identifier *string `pulumi:"identifier"`
	// (Updatable) Whether the backfill is enabled.
	IsBackfillEnabled *bool `pulumi:"isBackfillEnabled"`
	// (Updatable) Whether the same task can be executed concurrently.
	IsConcurrentAllowed *bool `pulumi:"isConcurrentAllowed"`
	// (Updatable) Whether the task schedule is enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) The key of the aggregator object.
	Key *string `pulumi:"key"`
	// The last run details for the task run.
	LastRunDetails []WorkspaceApplicationTaskScheduleLastRunDetail `pulumi:"lastRunDetails"`
	// (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas []WorkspaceApplicationTaskScheduleMetadata `pulumi:"metadatas"`
	// (Updatable) The type of the object.
	ModelType *string `pulumi:"modelType"`
	// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
	ModelVersion *string `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name              *string `pulumi:"name"`
	NextRunTimeMillis *string `pulumi:"nextRunTimeMillis"`
	// (Updatable) The number of retries.
	NumberOfRetries *int `pulumi:"numberOfRetries"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
	ObjectVersion *int `pulumi:"objectVersion"`
	// (Updatable) A reference to the object's parent.
	ParentRef *WorkspaceApplicationTaskScheduleParentRef `pulumi:"parentRef"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata *WorkspaceApplicationTaskScheduleRegistryMetadata `pulumi:"registryMetadata"`
	// The number of retry attempts.
	RetryAttempts *int `pulumi:"retryAttempts"`
	// (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
	RetryDelay *float64 `pulumi:"retryDelay"`
	// (Updatable) The unit for the retry delay.
	RetryDelayUnit *string `pulumi:"retryDelayUnit"`
	// (Updatable) The schedule object
	ScheduleRef *WorkspaceApplicationTaskScheduleScheduleRef `pulumi:"scheduleRef"`
	// (Updatable) The start time in milliseconds.
	StartTimeMillis *string `pulumi:"startTimeMillis"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId *string `pulumi:"workspaceId"`
}

type WorkspaceApplicationTaskScheduleState struct {
	// The application key.
	ApplicationKey pulumi.StringPtrInput
	// (Updatable) The authorization mode for the task.
	AuthMode pulumi.StringPtrInput
	// (Updatable) The information about the configuration provider.
	ConfigProviderDelegate pulumi.StringPtrInput
	// (Updatable) The description of the aggregator.
	Description pulumi.StringPtrInput
	// (Updatable) The end time in milliseconds.
	EndTimeMillis pulumi.StringPtrInput
	// (Updatable) The expected duration of the task execution.
	ExpectedDuration pulumi.Float64PtrInput
	// (Updatable) The expected duration unit of the task execution.
	ExpectedDurationUnit pulumi.StringPtrInput
	// (Updatable) The identifier of the aggregator.
	Identifier pulumi.StringPtrInput
	// (Updatable) Whether the backfill is enabled.
	IsBackfillEnabled pulumi.BoolPtrInput
	// (Updatable) Whether the same task can be executed concurrently.
	IsConcurrentAllowed pulumi.BoolPtrInput
	// (Updatable) Whether the task schedule is enabled.
	IsEnabled pulumi.BoolPtrInput
	// (Updatable) The key of the aggregator object.
	Key pulumi.StringPtrInput
	// The last run details for the task run.
	LastRunDetails WorkspaceApplicationTaskScheduleLastRunDetailArrayInput
	// (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas WorkspaceApplicationTaskScheduleMetadataArrayInput
	// (Updatable) The type of the object.
	ModelType pulumi.StringPtrInput
	// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
	ModelVersion pulumi.StringPtrInput
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name              pulumi.StringPtrInput
	NextRunTimeMillis pulumi.StringPtrInput
	// (Updatable) The number of retries.
	NumberOfRetries pulumi.IntPtrInput
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
	ObjectVersion pulumi.IntPtrInput
	// (Updatable) A reference to the object's parent.
	ParentRef WorkspaceApplicationTaskScheduleParentRefPtrInput
	// (Updatable) Information about the object and its parent.
	RegistryMetadata WorkspaceApplicationTaskScheduleRegistryMetadataPtrInput
	// The number of retry attempts.
	RetryAttempts pulumi.IntPtrInput
	// (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
	RetryDelay pulumi.Float64PtrInput
	// (Updatable) The unit for the retry delay.
	RetryDelayUnit pulumi.StringPtrInput
	// (Updatable) The schedule object
	ScheduleRef WorkspaceApplicationTaskScheduleScheduleRefPtrInput
	// (Updatable) The start time in milliseconds.
	StartTimeMillis pulumi.StringPtrInput
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringPtrInput
}

func (WorkspaceApplicationTaskScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApplicationTaskScheduleState)(nil)).Elem()
}

type workspaceApplicationTaskScheduleArgs struct {
	// The application key.
	ApplicationKey string `pulumi:"applicationKey"`
	// (Updatable) The authorization mode for the task.
	AuthMode *string `pulumi:"authMode"`
	// (Updatable) The information about the configuration provider.
	ConfigProviderDelegate *string `pulumi:"configProviderDelegate"`
	// (Updatable) The description of the aggregator.
	Description *string `pulumi:"description"`
	// (Updatable) The end time in milliseconds.
	EndTimeMillis *string `pulumi:"endTimeMillis"`
	// (Updatable) The expected duration of the task execution.
	ExpectedDuration *float64 `pulumi:"expectedDuration"`
	// (Updatable) The expected duration unit of the task execution.
	ExpectedDurationUnit *string `pulumi:"expectedDurationUnit"`
	// (Updatable) The identifier of the aggregator.
	Identifier string `pulumi:"identifier"`
	// (Updatable) Whether the backfill is enabled.
	IsBackfillEnabled *bool `pulumi:"isBackfillEnabled"`
	// (Updatable) Whether the same task can be executed concurrently.
	IsConcurrentAllowed *bool `pulumi:"isConcurrentAllowed"`
	// (Updatable) Whether the task schedule is enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// (Updatable) The key of the aggregator object.
	Key *string `pulumi:"key"`
	// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
	ModelVersion *string `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name              *string `pulumi:"name"`
	NextRunTimeMillis *string `pulumi:"nextRunTimeMillis"`
	// (Updatable) The number of retries.
	NumberOfRetries *int `pulumi:"numberOfRetries"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
	ObjectVersion *int `pulumi:"objectVersion"`
	// (Updatable) A reference to the object's parent.
	ParentRef *WorkspaceApplicationTaskScheduleParentRef `pulumi:"parentRef"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata *WorkspaceApplicationTaskScheduleRegistryMetadata `pulumi:"registryMetadata"`
	// (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
	RetryDelay *float64 `pulumi:"retryDelay"`
	// (Updatable) The unit for the retry delay.
	RetryDelayUnit *string `pulumi:"retryDelayUnit"`
	// (Updatable) The schedule object
	ScheduleRef *WorkspaceApplicationTaskScheduleScheduleRef `pulumi:"scheduleRef"`
	// (Updatable) The start time in milliseconds.
	StartTimeMillis *string `pulumi:"startTimeMillis"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a WorkspaceApplicationTaskSchedule resource.
type WorkspaceApplicationTaskScheduleArgs struct {
	// The application key.
	ApplicationKey pulumi.StringInput
	// (Updatable) The authorization mode for the task.
	AuthMode pulumi.StringPtrInput
	// (Updatable) The information about the configuration provider.
	ConfigProviderDelegate pulumi.StringPtrInput
	// (Updatable) The description of the aggregator.
	Description pulumi.StringPtrInput
	// (Updatable) The end time in milliseconds.
	EndTimeMillis pulumi.StringPtrInput
	// (Updatable) The expected duration of the task execution.
	ExpectedDuration pulumi.Float64PtrInput
	// (Updatable) The expected duration unit of the task execution.
	ExpectedDurationUnit pulumi.StringPtrInput
	// (Updatable) The identifier of the aggregator.
	Identifier pulumi.StringInput
	// (Updatable) Whether the backfill is enabled.
	IsBackfillEnabled pulumi.BoolPtrInput
	// (Updatable) Whether the same task can be executed concurrently.
	IsConcurrentAllowed pulumi.BoolPtrInput
	// (Updatable) Whether the task schedule is enabled.
	IsEnabled pulumi.BoolPtrInput
	// (Updatable) The key of the aggregator object.
	Key pulumi.StringPtrInput
	// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
	ModelVersion pulumi.StringPtrInput
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name              pulumi.StringPtrInput
	NextRunTimeMillis pulumi.StringPtrInput
	// (Updatable) The number of retries.
	NumberOfRetries pulumi.IntPtrInput
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
	ObjectVersion pulumi.IntPtrInput
	// (Updatable) A reference to the object's parent.
	ParentRef WorkspaceApplicationTaskScheduleParentRefPtrInput
	// (Updatable) Information about the object and its parent.
	RegistryMetadata WorkspaceApplicationTaskScheduleRegistryMetadataPtrInput
	// (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
	RetryDelay pulumi.Float64PtrInput
	// (Updatable) The unit for the retry delay.
	RetryDelayUnit pulumi.StringPtrInput
	// (Updatable) The schedule object
	ScheduleRef WorkspaceApplicationTaskScheduleScheduleRefPtrInput
	// (Updatable) The start time in milliseconds.
	StartTimeMillis pulumi.StringPtrInput
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringInput
}

func (WorkspaceApplicationTaskScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApplicationTaskScheduleArgs)(nil)).Elem()
}

type WorkspaceApplicationTaskScheduleInput interface {
	pulumi.Input

	ToWorkspaceApplicationTaskScheduleOutput() WorkspaceApplicationTaskScheduleOutput
	ToWorkspaceApplicationTaskScheduleOutputWithContext(ctx context.Context) WorkspaceApplicationTaskScheduleOutput
}

func (*WorkspaceApplicationTaskSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApplicationTaskSchedule)(nil)).Elem()
}

func (i *WorkspaceApplicationTaskSchedule) ToWorkspaceApplicationTaskScheduleOutput() WorkspaceApplicationTaskScheduleOutput {
	return i.ToWorkspaceApplicationTaskScheduleOutputWithContext(context.Background())
}

func (i *WorkspaceApplicationTaskSchedule) ToWorkspaceApplicationTaskScheduleOutputWithContext(ctx context.Context) WorkspaceApplicationTaskScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApplicationTaskScheduleOutput)
}

// WorkspaceApplicationTaskScheduleArrayInput is an input type that accepts WorkspaceApplicationTaskScheduleArray and WorkspaceApplicationTaskScheduleArrayOutput values.
// You can construct a concrete instance of `WorkspaceApplicationTaskScheduleArrayInput` via:
//
//	WorkspaceApplicationTaskScheduleArray{ WorkspaceApplicationTaskScheduleArgs{...} }
type WorkspaceApplicationTaskScheduleArrayInput interface {
	pulumi.Input

	ToWorkspaceApplicationTaskScheduleArrayOutput() WorkspaceApplicationTaskScheduleArrayOutput
	ToWorkspaceApplicationTaskScheduleArrayOutputWithContext(context.Context) WorkspaceApplicationTaskScheduleArrayOutput
}

type WorkspaceApplicationTaskScheduleArray []WorkspaceApplicationTaskScheduleInput

func (WorkspaceApplicationTaskScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceApplicationTaskSchedule)(nil)).Elem()
}

func (i WorkspaceApplicationTaskScheduleArray) ToWorkspaceApplicationTaskScheduleArrayOutput() WorkspaceApplicationTaskScheduleArrayOutput {
	return i.ToWorkspaceApplicationTaskScheduleArrayOutputWithContext(context.Background())
}

func (i WorkspaceApplicationTaskScheduleArray) ToWorkspaceApplicationTaskScheduleArrayOutputWithContext(ctx context.Context) WorkspaceApplicationTaskScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApplicationTaskScheduleArrayOutput)
}

// WorkspaceApplicationTaskScheduleMapInput is an input type that accepts WorkspaceApplicationTaskScheduleMap and WorkspaceApplicationTaskScheduleMapOutput values.
// You can construct a concrete instance of `WorkspaceApplicationTaskScheduleMapInput` via:
//
//	WorkspaceApplicationTaskScheduleMap{ "key": WorkspaceApplicationTaskScheduleArgs{...} }
type WorkspaceApplicationTaskScheduleMapInput interface {
	pulumi.Input

	ToWorkspaceApplicationTaskScheduleMapOutput() WorkspaceApplicationTaskScheduleMapOutput
	ToWorkspaceApplicationTaskScheduleMapOutputWithContext(context.Context) WorkspaceApplicationTaskScheduleMapOutput
}

type WorkspaceApplicationTaskScheduleMap map[string]WorkspaceApplicationTaskScheduleInput

func (WorkspaceApplicationTaskScheduleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceApplicationTaskSchedule)(nil)).Elem()
}

func (i WorkspaceApplicationTaskScheduleMap) ToWorkspaceApplicationTaskScheduleMapOutput() WorkspaceApplicationTaskScheduleMapOutput {
	return i.ToWorkspaceApplicationTaskScheduleMapOutputWithContext(context.Background())
}

func (i WorkspaceApplicationTaskScheduleMap) ToWorkspaceApplicationTaskScheduleMapOutputWithContext(ctx context.Context) WorkspaceApplicationTaskScheduleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApplicationTaskScheduleMapOutput)
}

type WorkspaceApplicationTaskScheduleOutput struct{ *pulumi.OutputState }

func (WorkspaceApplicationTaskScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApplicationTaskSchedule)(nil)).Elem()
}

func (o WorkspaceApplicationTaskScheduleOutput) ToWorkspaceApplicationTaskScheduleOutput() WorkspaceApplicationTaskScheduleOutput {
	return o
}

func (o WorkspaceApplicationTaskScheduleOutput) ToWorkspaceApplicationTaskScheduleOutputWithContext(ctx context.Context) WorkspaceApplicationTaskScheduleOutput {
	return o
}

// The application key.
func (o WorkspaceApplicationTaskScheduleOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.ApplicationKey }).(pulumi.StringOutput)
}

// (Updatable) The authorization mode for the task.
func (o WorkspaceApplicationTaskScheduleOutput) AuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.AuthMode }).(pulumi.StringOutput)
}

// (Updatable) The information about the configuration provider.
func (o WorkspaceApplicationTaskScheduleOutput) ConfigProviderDelegate() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.ConfigProviderDelegate }).(pulumi.StringOutput)
}

// (Updatable) The description of the aggregator.
func (o WorkspaceApplicationTaskScheduleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The end time in milliseconds.
func (o WorkspaceApplicationTaskScheduleOutput) EndTimeMillis() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.EndTimeMillis }).(pulumi.StringOutput)
}

// (Updatable) The expected duration of the task execution.
func (o WorkspaceApplicationTaskScheduleOutput) ExpectedDuration() pulumi.Float64Output {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.Float64Output { return v.ExpectedDuration }).(pulumi.Float64Output)
}

// (Updatable) The expected duration unit of the task execution.
func (o WorkspaceApplicationTaskScheduleOutput) ExpectedDurationUnit() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.ExpectedDurationUnit }).(pulumi.StringOutput)
}

// (Updatable) The identifier of the aggregator.
func (o WorkspaceApplicationTaskScheduleOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// (Updatable) Whether the backfill is enabled.
func (o WorkspaceApplicationTaskScheduleOutput) IsBackfillEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.BoolOutput { return v.IsBackfillEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Whether the same task can be executed concurrently.
func (o WorkspaceApplicationTaskScheduleOutput) IsConcurrentAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.BoolOutput { return v.IsConcurrentAllowed }).(pulumi.BoolOutput)
}

// (Updatable) Whether the task schedule is enabled.
func (o WorkspaceApplicationTaskScheduleOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.BoolOutput { return v.IsEnabled }).(pulumi.BoolOutput)
}

// (Updatable) The key of the aggregator object.
func (o WorkspaceApplicationTaskScheduleOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// The last run details for the task run.
func (o WorkspaceApplicationTaskScheduleOutput) LastRunDetails() WorkspaceApplicationTaskScheduleLastRunDetailArrayOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) WorkspaceApplicationTaskScheduleLastRunDetailArrayOutput {
		return v.LastRunDetails
	}).(WorkspaceApplicationTaskScheduleLastRunDetailArrayOutput)
}

// (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
func (o WorkspaceApplicationTaskScheduleOutput) Metadatas() WorkspaceApplicationTaskScheduleMetadataArrayOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) WorkspaceApplicationTaskScheduleMetadataArrayOutput {
		return v.Metadatas
	}).(WorkspaceApplicationTaskScheduleMetadataArrayOutput)
}

// (Updatable) The type of the object.
func (o WorkspaceApplicationTaskScheduleOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.ModelType }).(pulumi.StringOutput)
}

// (Updatable) This is a version number that is used by the service to upgrade objects if needed through releases of the service.
func (o WorkspaceApplicationTaskScheduleOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.ModelVersion }).(pulumi.StringOutput)
}

// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o WorkspaceApplicationTaskScheduleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WorkspaceApplicationTaskScheduleOutput) NextRunTimeMillis() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.NextRunTimeMillis }).(pulumi.StringOutput)
}

// (Updatable) The number of retries.
func (o WorkspaceApplicationTaskScheduleOutput) NumberOfRetries() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.IntOutput { return v.NumberOfRetries }).(pulumi.IntOutput)
}

// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
func (o WorkspaceApplicationTaskScheduleOutput) ObjectStatus() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.IntOutput { return v.ObjectStatus }).(pulumi.IntOutput)
}

// (Updatable) This is used by the service for optimistic locking of the object, to prevent multiple users from simultaneously updating the object.
func (o WorkspaceApplicationTaskScheduleOutput) ObjectVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.IntOutput { return v.ObjectVersion }).(pulumi.IntOutput)
}

// (Updatable) A reference to the object's parent.
func (o WorkspaceApplicationTaskScheduleOutput) ParentRef() WorkspaceApplicationTaskScheduleParentRefOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) WorkspaceApplicationTaskScheduleParentRefOutput {
		return v.ParentRef
	}).(WorkspaceApplicationTaskScheduleParentRefOutput)
}

// (Updatable) Information about the object and its parent.
func (o WorkspaceApplicationTaskScheduleOutput) RegistryMetadata() WorkspaceApplicationTaskScheduleRegistryMetadataOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) WorkspaceApplicationTaskScheduleRegistryMetadataOutput {
		return v.RegistryMetadata
	}).(WorkspaceApplicationTaskScheduleRegistryMetadataOutput)
}

// The number of retry attempts.
func (o WorkspaceApplicationTaskScheduleOutput) RetryAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.IntOutput { return v.RetryAttempts }).(pulumi.IntOutput)
}

// (Updatable) The retry delay, the unit for measurement is in the property retry delay unit.
func (o WorkspaceApplicationTaskScheduleOutput) RetryDelay() pulumi.Float64Output {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.Float64Output { return v.RetryDelay }).(pulumi.Float64Output)
}

// (Updatable) The unit for the retry delay.
func (o WorkspaceApplicationTaskScheduleOutput) RetryDelayUnit() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.RetryDelayUnit }).(pulumi.StringOutput)
}

// (Updatable) The schedule object
func (o WorkspaceApplicationTaskScheduleOutput) ScheduleRef() WorkspaceApplicationTaskScheduleScheduleRefOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) WorkspaceApplicationTaskScheduleScheduleRefOutput {
		return v.ScheduleRef
	}).(WorkspaceApplicationTaskScheduleScheduleRefOutput)
}

// (Updatable) The start time in milliseconds.
func (o WorkspaceApplicationTaskScheduleOutput) StartTimeMillis() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.StartTimeMillis }).(pulumi.StringOutput)
}

// The workspace ID.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o WorkspaceApplicationTaskScheduleOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApplicationTaskSchedule) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type WorkspaceApplicationTaskScheduleArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceApplicationTaskScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceApplicationTaskSchedule)(nil)).Elem()
}

func (o WorkspaceApplicationTaskScheduleArrayOutput) ToWorkspaceApplicationTaskScheduleArrayOutput() WorkspaceApplicationTaskScheduleArrayOutput {
	return o
}

func (o WorkspaceApplicationTaskScheduleArrayOutput) ToWorkspaceApplicationTaskScheduleArrayOutputWithContext(ctx context.Context) WorkspaceApplicationTaskScheduleArrayOutput {
	return o
}

func (o WorkspaceApplicationTaskScheduleArrayOutput) Index(i pulumi.IntInput) WorkspaceApplicationTaskScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkspaceApplicationTaskSchedule {
		return vs[0].([]*WorkspaceApplicationTaskSchedule)[vs[1].(int)]
	}).(WorkspaceApplicationTaskScheduleOutput)
}

type WorkspaceApplicationTaskScheduleMapOutput struct{ *pulumi.OutputState }

func (WorkspaceApplicationTaskScheduleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceApplicationTaskSchedule)(nil)).Elem()
}

func (o WorkspaceApplicationTaskScheduleMapOutput) ToWorkspaceApplicationTaskScheduleMapOutput() WorkspaceApplicationTaskScheduleMapOutput {
	return o
}

func (o WorkspaceApplicationTaskScheduleMapOutput) ToWorkspaceApplicationTaskScheduleMapOutputWithContext(ctx context.Context) WorkspaceApplicationTaskScheduleMapOutput {
	return o
}

func (o WorkspaceApplicationTaskScheduleMapOutput) MapIndex(k pulumi.StringInput) WorkspaceApplicationTaskScheduleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkspaceApplicationTaskSchedule {
		return vs[0].(map[string]*WorkspaceApplicationTaskSchedule)[vs[1].(string)]
	}).(WorkspaceApplicationTaskScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceApplicationTaskScheduleInput)(nil)).Elem(), &WorkspaceApplicationTaskSchedule{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceApplicationTaskScheduleArrayInput)(nil)).Elem(), WorkspaceApplicationTaskScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceApplicationTaskScheduleMapInput)(nil)).Elem(), WorkspaceApplicationTaskScheduleMap{})
	pulumi.RegisterOutputType(WorkspaceApplicationTaskScheduleOutput{})
	pulumi.RegisterOutputType(WorkspaceApplicationTaskScheduleArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceApplicationTaskScheduleMapOutput{})
}
