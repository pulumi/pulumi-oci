// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dataintegration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Workspace Folder resource in Oracle Cloud Infrastructure Data Integration service.
//
// Creates a folder in a project or in another folder, limited to two levels of folders. |
// Folders are used to organize your design-time resources, such as tasks or data flows.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataIntegration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataIntegration.NewWorkspaceFolder(ctx, "testWorkspaceFolder", &DataIntegration.WorkspaceFolderArgs{
//				Identifier: pulumi.Any(_var.Workspace_folder_identifier),
//				RegistryMetadata: &dataintegration.WorkspaceFolderRegistryMetadataArgs{
//					AggregatorKey:   pulumi.Any(_var.Workspace_folder_registry_metadata_aggregator_key),
//					IsFavorite:      pulumi.Any(_var.Workspace_folder_registry_metadata_is_favorite),
//					Key:             pulumi.Any(_var.Workspace_folder_registry_metadata_key),
//					Labels:          pulumi.Any(_var.Workspace_folder_registry_metadata_labels),
//					RegistryVersion: pulumi.Any(_var.Workspace_folder_registry_metadata_registry_version),
//				},
//				WorkspaceId:  pulumi.Any(oci_dataintegration_workspace.Test_workspace.Id),
//				CategoryName: pulumi.Any(oci_marketplace_category.Test_category.Name),
//				Description:  pulumi.Any(_var.Workspace_folder_description),
//				Key:          pulumi.Any(_var.Workspace_folder_key),
//				ModelVersion: pulumi.Any(_var.Workspace_folder_model_version),
//				ObjectStatus: pulumi.Any(_var.Workspace_folder_object_status),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WorkspaceFolders can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DataIntegration/workspaceFolder:WorkspaceFolder test_workspace_folder "workspaces/{workspaceId}/folders/{folderKey}"
//
// ```
type WorkspaceFolder struct {
	pulumi.CustomResourceState

	// (Updatable) The category name.
	CategoryName pulumi.StringOutput `pulumi:"categoryName"`
	// (Updatable) A user defined description for the folder.
	Description pulumi.StringOutput `pulumi:"description"`
	FolderKey   pulumi.StringOutput `pulumi:"folderKey"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// (Updatable) The identifying key for the object.
	Key pulumi.StringOutput `pulumi:"key"`
	// A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
	KeyMap pulumi.MapOutput `pulumi:"keyMap"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas WorkspaceFolderMetadataArrayOutput `pulumi:"metadatas"`
	// The type of the object.
	ModelType pulumi.StringOutput `pulumi:"modelType"`
	// (Updatable) The model version of an object.
	ModelVersion pulumi.StringOutput `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntOutput `pulumi:"objectStatus"`
	// The version of the object that is used to track changes in the object instance.
	ObjectVersion pulumi.IntOutput `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves WorkspaceFolderParentRefArrayOutput `pulumi:"parentReves"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata WorkspaceFolderRegistryMetadataOutput `pulumi:"registryMetadata"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewWorkspaceFolder registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceFolder(ctx *pulumi.Context,
	name string, args *WorkspaceFolderArgs, opts ...pulumi.ResourceOption) (*WorkspaceFolder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.RegistryMetadata == nil {
		return nil, errors.New("invalid value for required argument 'RegistryMetadata'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceFolder
	err := ctx.RegisterResource("oci:DataIntegration/workspaceFolder:WorkspaceFolder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceFolder gets an existing WorkspaceFolder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceFolder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceFolderState, opts ...pulumi.ResourceOption) (*WorkspaceFolder, error) {
	var resource WorkspaceFolder
	err := ctx.ReadResource("oci:DataIntegration/workspaceFolder:WorkspaceFolder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceFolder resources.
type workspaceFolderState struct {
	// (Updatable) The category name.
	CategoryName *string `pulumi:"categoryName"`
	// (Updatable) A user defined description for the folder.
	Description *string `pulumi:"description"`
	FolderKey   *string `pulumi:"folderKey"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier *string `pulumi:"identifier"`
	// (Updatable) The identifying key for the object.
	Key *string `pulumi:"key"`
	// A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
	KeyMap map[string]interface{} `pulumi:"keyMap"`
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas []WorkspaceFolderMetadata `pulumi:"metadatas"`
	// The type of the object.
	ModelType *string `pulumi:"modelType"`
	// (Updatable) The model version of an object.
	ModelVersion *string `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// The version of the object that is used to track changes in the object instance.
	ObjectVersion *int `pulumi:"objectVersion"`
	// A reference to the object's parent.
	ParentReves []WorkspaceFolderParentRef `pulumi:"parentReves"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata *WorkspaceFolderRegistryMetadata `pulumi:"registryMetadata"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId *string `pulumi:"workspaceId"`
}

type WorkspaceFolderState struct {
	// (Updatable) The category name.
	CategoryName pulumi.StringPtrInput
	// (Updatable) A user defined description for the folder.
	Description pulumi.StringPtrInput
	FolderKey   pulumi.StringPtrInput
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringPtrInput
	// (Updatable) The identifying key for the object.
	Key pulumi.StringPtrInput
	// A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
	KeyMap pulumi.MapInput
	// A summary type containing information about the object including its key, name and when/who created/updated it.
	Metadatas WorkspaceFolderMetadataArrayInput
	// The type of the object.
	ModelType pulumi.StringPtrInput
	// (Updatable) The model version of an object.
	ModelVersion pulumi.StringPtrInput
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringPtrInput
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// The version of the object that is used to track changes in the object instance.
	ObjectVersion pulumi.IntPtrInput
	// A reference to the object's parent.
	ParentReves WorkspaceFolderParentRefArrayInput
	// (Updatable) Information about the object and its parent.
	RegistryMetadata WorkspaceFolderRegistryMetadataPtrInput
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringPtrInput
}

func (WorkspaceFolderState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceFolderState)(nil)).Elem()
}

type workspaceFolderArgs struct {
	// (Updatable) The category name.
	CategoryName *string `pulumi:"categoryName"`
	// (Updatable) A user defined description for the folder.
	Description *string `pulumi:"description"`
	FolderKey   *string `pulumi:"folderKey"`
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier string `pulumi:"identifier"`
	// (Updatable) The identifying key for the object.
	Key *string `pulumi:"key"`
	// (Updatable) The model version of an object.
	ModelVersion *string `pulumi:"modelVersion"`
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name *string `pulumi:"name"`
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus *int `pulumi:"objectStatus"`
	// (Updatable) Information about the object and its parent.
	RegistryMetadata WorkspaceFolderRegistryMetadata `pulumi:"registryMetadata"`
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a WorkspaceFolder resource.
type WorkspaceFolderArgs struct {
	// (Updatable) The category name.
	CategoryName pulumi.StringPtrInput
	// (Updatable) A user defined description for the folder.
	Description pulumi.StringPtrInput
	FolderKey   pulumi.StringPtrInput
	// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
	Identifier pulumi.StringInput
	// (Updatable) The identifying key for the object.
	Key pulumi.StringPtrInput
	// (Updatable) The model version of an object.
	ModelVersion pulumi.StringPtrInput
	// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
	Name pulumi.StringPtrInput
	// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
	ObjectStatus pulumi.IntPtrInput
	// (Updatable) Information about the object and its parent.
	RegistryMetadata WorkspaceFolderRegistryMetadataInput
	// The workspace ID.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	WorkspaceId pulumi.StringInput
}

func (WorkspaceFolderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceFolderArgs)(nil)).Elem()
}

type WorkspaceFolderInput interface {
	pulumi.Input

	ToWorkspaceFolderOutput() WorkspaceFolderOutput
	ToWorkspaceFolderOutputWithContext(ctx context.Context) WorkspaceFolderOutput
}

func (*WorkspaceFolder) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceFolder)(nil)).Elem()
}

func (i *WorkspaceFolder) ToWorkspaceFolderOutput() WorkspaceFolderOutput {
	return i.ToWorkspaceFolderOutputWithContext(context.Background())
}

func (i *WorkspaceFolder) ToWorkspaceFolderOutputWithContext(ctx context.Context) WorkspaceFolderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceFolderOutput)
}

// WorkspaceFolderArrayInput is an input type that accepts WorkspaceFolderArray and WorkspaceFolderArrayOutput values.
// You can construct a concrete instance of `WorkspaceFolderArrayInput` via:
//
//	WorkspaceFolderArray{ WorkspaceFolderArgs{...} }
type WorkspaceFolderArrayInput interface {
	pulumi.Input

	ToWorkspaceFolderArrayOutput() WorkspaceFolderArrayOutput
	ToWorkspaceFolderArrayOutputWithContext(context.Context) WorkspaceFolderArrayOutput
}

type WorkspaceFolderArray []WorkspaceFolderInput

func (WorkspaceFolderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceFolder)(nil)).Elem()
}

func (i WorkspaceFolderArray) ToWorkspaceFolderArrayOutput() WorkspaceFolderArrayOutput {
	return i.ToWorkspaceFolderArrayOutputWithContext(context.Background())
}

func (i WorkspaceFolderArray) ToWorkspaceFolderArrayOutputWithContext(ctx context.Context) WorkspaceFolderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceFolderArrayOutput)
}

// WorkspaceFolderMapInput is an input type that accepts WorkspaceFolderMap and WorkspaceFolderMapOutput values.
// You can construct a concrete instance of `WorkspaceFolderMapInput` via:
//
//	WorkspaceFolderMap{ "key": WorkspaceFolderArgs{...} }
type WorkspaceFolderMapInput interface {
	pulumi.Input

	ToWorkspaceFolderMapOutput() WorkspaceFolderMapOutput
	ToWorkspaceFolderMapOutputWithContext(context.Context) WorkspaceFolderMapOutput
}

type WorkspaceFolderMap map[string]WorkspaceFolderInput

func (WorkspaceFolderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceFolder)(nil)).Elem()
}

func (i WorkspaceFolderMap) ToWorkspaceFolderMapOutput() WorkspaceFolderMapOutput {
	return i.ToWorkspaceFolderMapOutputWithContext(context.Background())
}

func (i WorkspaceFolderMap) ToWorkspaceFolderMapOutputWithContext(ctx context.Context) WorkspaceFolderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceFolderMapOutput)
}

type WorkspaceFolderOutput struct{ *pulumi.OutputState }

func (WorkspaceFolderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceFolder)(nil)).Elem()
}

func (o WorkspaceFolderOutput) ToWorkspaceFolderOutput() WorkspaceFolderOutput {
	return o
}

func (o WorkspaceFolderOutput) ToWorkspaceFolderOutputWithContext(ctx context.Context) WorkspaceFolderOutput {
	return o
}

// (Updatable) The category name.
func (o WorkspaceFolderOutput) CategoryName() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.StringOutput { return v.CategoryName }).(pulumi.StringOutput)
}

// (Updatable) A user defined description for the folder.
func (o WorkspaceFolderOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o WorkspaceFolderOutput) FolderKey() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.StringOutput { return v.FolderKey }).(pulumi.StringOutput)
}

// (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
func (o WorkspaceFolderOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// (Updatable) The identifying key for the object.
func (o WorkspaceFolderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
func (o WorkspaceFolderOutput) KeyMap() pulumi.MapOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.MapOutput { return v.KeyMap }).(pulumi.MapOutput)
}

// A summary type containing information about the object including its key, name and when/who created/updated it.
func (o WorkspaceFolderOutput) Metadatas() WorkspaceFolderMetadataArrayOutput {
	return o.ApplyT(func(v *WorkspaceFolder) WorkspaceFolderMetadataArrayOutput { return v.Metadatas }).(WorkspaceFolderMetadataArrayOutput)
}

// The type of the object.
func (o WorkspaceFolderOutput) ModelType() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.StringOutput { return v.ModelType }).(pulumi.StringOutput)
}

// (Updatable) The model version of an object.
func (o WorkspaceFolderOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.StringOutput { return v.ModelVersion }).(pulumi.StringOutput)
}

// (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
func (o WorkspaceFolderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
func (o WorkspaceFolderOutput) ObjectStatus() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.IntOutput { return v.ObjectStatus }).(pulumi.IntOutput)
}

// The version of the object that is used to track changes in the object instance.
func (o WorkspaceFolderOutput) ObjectVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.IntOutput { return v.ObjectVersion }).(pulumi.IntOutput)
}

// A reference to the object's parent.
func (o WorkspaceFolderOutput) ParentReves() WorkspaceFolderParentRefArrayOutput {
	return o.ApplyT(func(v *WorkspaceFolder) WorkspaceFolderParentRefArrayOutput { return v.ParentReves }).(WorkspaceFolderParentRefArrayOutput)
}

// (Updatable) Information about the object and its parent.
func (o WorkspaceFolderOutput) RegistryMetadata() WorkspaceFolderRegistryMetadataOutput {
	return o.ApplyT(func(v *WorkspaceFolder) WorkspaceFolderRegistryMetadataOutput { return v.RegistryMetadata }).(WorkspaceFolderRegistryMetadataOutput)
}

// The workspace ID.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o WorkspaceFolderOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceFolder) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type WorkspaceFolderArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceFolderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceFolder)(nil)).Elem()
}

func (o WorkspaceFolderArrayOutput) ToWorkspaceFolderArrayOutput() WorkspaceFolderArrayOutput {
	return o
}

func (o WorkspaceFolderArrayOutput) ToWorkspaceFolderArrayOutputWithContext(ctx context.Context) WorkspaceFolderArrayOutput {
	return o
}

func (o WorkspaceFolderArrayOutput) Index(i pulumi.IntInput) WorkspaceFolderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkspaceFolder {
		return vs[0].([]*WorkspaceFolder)[vs[1].(int)]
	}).(WorkspaceFolderOutput)
}

type WorkspaceFolderMapOutput struct{ *pulumi.OutputState }

func (WorkspaceFolderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceFolder)(nil)).Elem()
}

func (o WorkspaceFolderMapOutput) ToWorkspaceFolderMapOutput() WorkspaceFolderMapOutput {
	return o
}

func (o WorkspaceFolderMapOutput) ToWorkspaceFolderMapOutputWithContext(ctx context.Context) WorkspaceFolderMapOutput {
	return o
}

func (o WorkspaceFolderMapOutput) MapIndex(k pulumi.StringInput) WorkspaceFolderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkspaceFolder {
		return vs[0].(map[string]*WorkspaceFolder)[vs[1].(string)]
	}).(WorkspaceFolderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceFolderInput)(nil)).Elem(), &WorkspaceFolder{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceFolderArrayInput)(nil)).Elem(), WorkspaceFolderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceFolderMapInput)(nil)).Elem(), WorkspaceFolderMap{})
	pulumi.RegisterOutputType(WorkspaceFolderOutput{})
	pulumi.RegisterOutputType(WorkspaceFolderArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceFolderMapOutput{})
}
