// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datalabellingservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Dataset resource in Oracle Cloud Infrastructure Data Labeling Service service.
//
// Creates a new Dataset.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datalabellingservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datalabellingservice.NewDataset(ctx, "test_dataset", &datalabellingservice.DatasetArgs{
//				AnnotationFormat: pulumi.Any(datasetAnnotationFormat),
//				CompartmentId:    pulumi.Any(compartmentId),
//				DatasetFormatDetails: &datalabellingservice.DatasetDatasetFormatDetailsArgs{
//					FormatType: pulumi.Any(datasetDatasetFormatDetailsFormatType),
//					TextFileTypeMetadata: &datalabellingservice.DatasetDatasetFormatDetailsTextFileTypeMetadataArgs{
//						ColumnIndex:     pulumi.Any(datasetDatasetFormatDetailsTextFileTypeMetadataColumnIndex),
//						FormatType:      pulumi.Any(datasetDatasetFormatDetailsTextFileTypeMetadataFormatType),
//						ColumnDelimiter: pulumi.Any(datasetDatasetFormatDetailsTextFileTypeMetadataColumnDelimiter),
//						ColumnName:      pulumi.Any(datasetDatasetFormatDetailsTextFileTypeMetadataColumnName),
//						EscapeCharacter: pulumi.Any(datasetDatasetFormatDetailsTextFileTypeMetadataEscapeCharacter),
//						LineDelimiter:   pulumi.Any(datasetDatasetFormatDetailsTextFileTypeMetadataLineDelimiter),
//					},
//				},
//				DatasetSourceDetails: &datalabellingservice.DatasetDatasetSourceDetailsArgs{
//					Bucket:     pulumi.Any(datasetDatasetSourceDetailsBucket),
//					Namespace:  pulumi.Any(datasetDatasetSourceDetailsNamespace),
//					SourceType: pulumi.Any(datasetDatasetSourceDetailsSourceType),
//					Prefix:     pulumi.Any(datasetDatasetSourceDetailsPrefix),
//				},
//				LabelSet: &datalabellingservice.DatasetLabelSetArgs{
//					Items: datalabellingservice.DatasetLabelSetItemArray{
//						&datalabellingservice.DatasetLabelSetItemArgs{
//							Name: pulumi.Any(datasetLabelSetItemsName),
//						},
//					},
//				},
//				DefinedTags:  pulumi.Any(datasetDefinedTags),
//				Description:  pulumi.Any(datasetDescription),
//				DisplayName:  pulumi.Any(datasetDisplayName),
//				FreeformTags: pulumi.Any(datasetFreeformTags),
//				InitialImportDatasetConfiguration: &datalabellingservice.DatasetInitialImportDatasetConfigurationArgs{
//					ImportFormat: &datalabellingservice.DatasetInitialImportDatasetConfigurationImportFormatArgs{
//						Name:    pulumi.Any(datasetInitialImportDatasetConfigurationImportFormatName),
//						Version: pulumi.Any(datasetInitialImportDatasetConfigurationImportFormatVersion),
//					},
//					ImportMetadataPath: &datalabellingservice.DatasetInitialImportDatasetConfigurationImportMetadataPathArgs{
//						Bucket:     pulumi.Any(datasetInitialImportDatasetConfigurationImportMetadataPathBucket),
//						Namespace:  pulumi.Any(datasetInitialImportDatasetConfigurationImportMetadataPathNamespace),
//						Path:       pulumi.Any(datasetInitialImportDatasetConfigurationImportMetadataPathPath),
//						SourceType: pulumi.Any(datasetInitialImportDatasetConfigurationImportMetadataPathSourceType),
//					},
//				},
//				InitialRecordGenerationConfiguration: &datalabellingservice.DatasetInitialRecordGenerationConfigurationArgs{},
//				LabelingInstructions:                 pulumi.Any(datasetLabelingInstructions),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Datasets can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataLabellingService/dataset:Dataset test_dataset "id"
// ```
type Dataset struct {
	pulumi.CustomResourceState

	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	AdditionalProperties pulumi.StringMapOutput `pulumi:"additionalProperties"`
	// The annotation format name required for labeling records.
	AnnotationFormat pulumi.StringOutput `pulumi:"annotationFormat"`
	// (Updatable) The OCID of the compartment of the resource.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
	DatasetFormatDetails DatasetDatasetFormatDetailsOutput `pulumi:"datasetFormatDetails"`
	// This allows the customer to specify the source of the dataset.
	DatasetSourceDetails DatasetDatasetSourceDetailsOutput `pulumi:"datasetSourceDetails"`
	// (Updatable) The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user provided description of the dataset
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) A user-friendly display name for the resource.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Initial import dataset configuration. Allows user to create dataset from existing dataset files.
	InitialImportDatasetConfiguration DatasetInitialImportDatasetConfigurationOutput `pulumi:"initialImportDatasetConfiguration"`
	// The initial generate records configuration. It generates records from the dataset's source.
	InitialRecordGenerationConfiguration DatasetInitialRecordGenerationConfigurationOutput `pulumi:"initialRecordGenerationConfiguration"`
	// An ordered collection of labels that are unique by name.
	LabelSet DatasetLabelSetOutput `pulumi:"labelSet"`
	// (Updatable) The labeling instructions for human labelers in rich text format
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	LabelingInstructions pulumi.StringOutput `pulumi:"labelingInstructions"`
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The sub-state of the dataset. IMPORT_DATASET - The dataset is being imported.
	LifecycleSubstate pulumi.StringOutput `pulumi:"lifecycleSubstate"`
	// The state of a dataset. CREATING - The dataset is being created.  It will transition to ACTIVE when it is ready for labeling. ACTIVE   - The dataset is ready for labeling. UPDATING - The dataset is being updated.  It and its related resources may be unavailable for other updates until it returns to ACTIVE. NEEDS_ATTENTION - A dataset updation operation has failed due to validation or other errors and needs attention. DELETING - The dataset and its related resources are being deleted. DELETED  - The dataset has been deleted and is no longer available. FAILED   - The dataset has failed due to validation or other errors.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the resource was created, in the timestamp format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the timestamp format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewDataset registers a new resource with the given unique name, arguments, and options.
func NewDataset(ctx *pulumi.Context,
	name string, args *DatasetArgs, opts ...pulumi.ResourceOption) (*Dataset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AnnotationFormat == nil {
		return nil, errors.New("invalid value for required argument 'AnnotationFormat'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DatasetFormatDetails == nil {
		return nil, errors.New("invalid value for required argument 'DatasetFormatDetails'")
	}
	if args.DatasetSourceDetails == nil {
		return nil, errors.New("invalid value for required argument 'DatasetSourceDetails'")
	}
	if args.LabelSet == nil {
		return nil, errors.New("invalid value for required argument 'LabelSet'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Dataset
	err := ctx.RegisterResource("oci:DataLabellingService/dataset:Dataset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataset gets an existing Dataset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatasetState, opts ...pulumi.ResourceOption) (*Dataset, error) {
	var resource Dataset
	err := ctx.ReadResource("oci:DataLabellingService/dataset:Dataset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dataset resources.
type datasetState struct {
	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	AdditionalProperties map[string]string `pulumi:"additionalProperties"`
	// The annotation format name required for labeling records.
	AnnotationFormat *string `pulumi:"annotationFormat"`
	// (Updatable) The OCID of the compartment of the resource.
	CompartmentId *string `pulumi:"compartmentId"`
	// It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
	DatasetFormatDetails *DatasetDatasetFormatDetails `pulumi:"datasetFormatDetails"`
	// This allows the customer to specify the source of the dataset.
	DatasetSourceDetails *DatasetDatasetSourceDetails `pulumi:"datasetSourceDetails"`
	// (Updatable) The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user provided description of the dataset
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly display name for the resource.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Initial import dataset configuration. Allows user to create dataset from existing dataset files.
	InitialImportDatasetConfiguration *DatasetInitialImportDatasetConfiguration `pulumi:"initialImportDatasetConfiguration"`
	// The initial generate records configuration. It generates records from the dataset's source.
	InitialRecordGenerationConfiguration *DatasetInitialRecordGenerationConfiguration `pulumi:"initialRecordGenerationConfiguration"`
	// An ordered collection of labels that are unique by name.
	LabelSet *DatasetLabelSet `pulumi:"labelSet"`
	// (Updatable) The labeling instructions for human labelers in rich text format
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	LabelingInstructions *string `pulumi:"labelingInstructions"`
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The sub-state of the dataset. IMPORT_DATASET - The dataset is being imported.
	LifecycleSubstate *string `pulumi:"lifecycleSubstate"`
	// The state of a dataset. CREATING - The dataset is being created.  It will transition to ACTIVE when it is ready for labeling. ACTIVE   - The dataset is ready for labeling. UPDATING - The dataset is being updated.  It and its related resources may be unavailable for other updates until it returns to ACTIVE. NEEDS_ATTENTION - A dataset updation operation has failed due to validation or other errors and needs attention. DELETING - The dataset and its related resources are being deleted. DELETED  - The dataset has been deleted and is no longer available. FAILED   - The dataset has failed due to validation or other errors.
	State *string `pulumi:"state"`
	// The date and time the resource was created, in the timestamp format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the timestamp format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type DatasetState struct {
	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	AdditionalProperties pulumi.StringMapInput
	// The annotation format name required for labeling records.
	AnnotationFormat pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment of the resource.
	CompartmentId pulumi.StringPtrInput
	// It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
	DatasetFormatDetails DatasetDatasetFormatDetailsPtrInput
	// This allows the customer to specify the source of the dataset.
	DatasetSourceDetails DatasetDatasetSourceDetailsPtrInput
	// (Updatable) The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user provided description of the dataset
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly display name for the resource.
	DisplayName pulumi.StringPtrInput
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Initial import dataset configuration. Allows user to create dataset from existing dataset files.
	InitialImportDatasetConfiguration DatasetInitialImportDatasetConfigurationPtrInput
	// The initial generate records configuration. It generates records from the dataset's source.
	InitialRecordGenerationConfiguration DatasetInitialRecordGenerationConfigurationPtrInput
	// An ordered collection of labels that are unique by name.
	LabelSet DatasetLabelSetPtrInput
	// (Updatable) The labeling instructions for human labelers in rich text format
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	LabelingInstructions pulumi.StringPtrInput
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
	LifecycleDetails pulumi.StringPtrInput
	// The sub-state of the dataset. IMPORT_DATASET - The dataset is being imported.
	LifecycleSubstate pulumi.StringPtrInput
	// The state of a dataset. CREATING - The dataset is being created.  It will transition to ACTIVE when it is ready for labeling. ACTIVE   - The dataset is ready for labeling. UPDATING - The dataset is being updated.  It and its related resources may be unavailable for other updates until it returns to ACTIVE. NEEDS_ATTENTION - A dataset updation operation has failed due to validation or other errors and needs attention. DELETING - The dataset and its related resources are being deleted. DELETED  - The dataset has been deleted and is no longer available. FAILED   - The dataset has failed due to validation or other errors.
	State pulumi.StringPtrInput
	// The date and time the resource was created, in the timestamp format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The date and time the resource was last updated, in the timestamp format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
}

func (DatasetState) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetState)(nil)).Elem()
}

type datasetArgs struct {
	// The annotation format name required for labeling records.
	AnnotationFormat string `pulumi:"annotationFormat"`
	// (Updatable) The OCID of the compartment of the resource.
	CompartmentId string `pulumi:"compartmentId"`
	// It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
	DatasetFormatDetails DatasetDatasetFormatDetails `pulumi:"datasetFormatDetails"`
	// This allows the customer to specify the source of the dataset.
	DatasetSourceDetails DatasetDatasetSourceDetails `pulumi:"datasetSourceDetails"`
	// (Updatable) The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user provided description of the dataset
	Description *string `pulumi:"description"`
	// (Updatable) A user-friendly display name for the resource.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Initial import dataset configuration. Allows user to create dataset from existing dataset files.
	InitialImportDatasetConfiguration *DatasetInitialImportDatasetConfiguration `pulumi:"initialImportDatasetConfiguration"`
	// The initial generate records configuration. It generates records from the dataset's source.
	InitialRecordGenerationConfiguration *DatasetInitialRecordGenerationConfiguration `pulumi:"initialRecordGenerationConfiguration"`
	// An ordered collection of labels that are unique by name.
	LabelSet DatasetLabelSet `pulumi:"labelSet"`
	// (Updatable) The labeling instructions for human labelers in rich text format
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	LabelingInstructions *string `pulumi:"labelingInstructions"`
}

// The set of arguments for constructing a Dataset resource.
type DatasetArgs struct {
	// The annotation format name required for labeling records.
	AnnotationFormat pulumi.StringInput
	// (Updatable) The OCID of the compartment of the resource.
	CompartmentId pulumi.StringInput
	// It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
	DatasetFormatDetails DatasetDatasetFormatDetailsInput
	// This allows the customer to specify the source of the dataset.
	DatasetSourceDetails DatasetDatasetSourceDetailsInput
	// (Updatable) The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user provided description of the dataset
	Description pulumi.StringPtrInput
	// (Updatable) A user-friendly display name for the resource.
	DisplayName pulumi.StringPtrInput
	// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Initial import dataset configuration. Allows user to create dataset from existing dataset files.
	InitialImportDatasetConfiguration DatasetInitialImportDatasetConfigurationPtrInput
	// The initial generate records configuration. It generates records from the dataset's source.
	InitialRecordGenerationConfiguration DatasetInitialRecordGenerationConfigurationPtrInput
	// An ordered collection of labels that are unique by name.
	LabelSet DatasetLabelSetInput
	// (Updatable) The labeling instructions for human labelers in rich text format
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	LabelingInstructions pulumi.StringPtrInput
}

func (DatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetArgs)(nil)).Elem()
}

type DatasetInput interface {
	pulumi.Input

	ToDatasetOutput() DatasetOutput
	ToDatasetOutputWithContext(ctx context.Context) DatasetOutput
}

func (*Dataset) ElementType() reflect.Type {
	return reflect.TypeOf((**Dataset)(nil)).Elem()
}

func (i *Dataset) ToDatasetOutput() DatasetOutput {
	return i.ToDatasetOutputWithContext(context.Background())
}

func (i *Dataset) ToDatasetOutputWithContext(ctx context.Context) DatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetOutput)
}

// DatasetArrayInput is an input type that accepts DatasetArray and DatasetArrayOutput values.
// You can construct a concrete instance of `DatasetArrayInput` via:
//
//	DatasetArray{ DatasetArgs{...} }
type DatasetArrayInput interface {
	pulumi.Input

	ToDatasetArrayOutput() DatasetArrayOutput
	ToDatasetArrayOutputWithContext(context.Context) DatasetArrayOutput
}

type DatasetArray []DatasetInput

func (DatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dataset)(nil)).Elem()
}

func (i DatasetArray) ToDatasetArrayOutput() DatasetArrayOutput {
	return i.ToDatasetArrayOutputWithContext(context.Background())
}

func (i DatasetArray) ToDatasetArrayOutputWithContext(ctx context.Context) DatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetArrayOutput)
}

// DatasetMapInput is an input type that accepts DatasetMap and DatasetMapOutput values.
// You can construct a concrete instance of `DatasetMapInput` via:
//
//	DatasetMap{ "key": DatasetArgs{...} }
type DatasetMapInput interface {
	pulumi.Input

	ToDatasetMapOutput() DatasetMapOutput
	ToDatasetMapOutputWithContext(context.Context) DatasetMapOutput
}

type DatasetMap map[string]DatasetInput

func (DatasetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dataset)(nil)).Elem()
}

func (i DatasetMap) ToDatasetMapOutput() DatasetMapOutput {
	return i.ToDatasetMapOutputWithContext(context.Background())
}

func (i DatasetMap) ToDatasetMapOutputWithContext(ctx context.Context) DatasetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetMapOutput)
}

type DatasetOutput struct{ *pulumi.OutputState }

func (DatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Dataset)(nil)).Elem()
}

func (o DatasetOutput) ToDatasetOutput() DatasetOutput {
	return o
}

func (o DatasetOutput) ToDatasetOutputWithContext(ctx context.Context) DatasetOutput {
	return o
}

// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
func (o DatasetOutput) AdditionalProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringMapOutput { return v.AdditionalProperties }).(pulumi.StringMapOutput)
}

// The annotation format name required for labeling records.
func (o DatasetOutput) AnnotationFormat() pulumi.StringOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringOutput { return v.AnnotationFormat }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the compartment of the resource.
func (o DatasetOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
func (o DatasetOutput) DatasetFormatDetails() DatasetDatasetFormatDetailsOutput {
	return o.ApplyT(func(v *Dataset) DatasetDatasetFormatDetailsOutput { return v.DatasetFormatDetails }).(DatasetDatasetFormatDetailsOutput)
}

// This allows the customer to specify the source of the dataset.
func (o DatasetOutput) DatasetSourceDetails() DatasetDatasetSourceDetailsOutput {
	return o.ApplyT(func(v *Dataset) DatasetDatasetSourceDetailsOutput { return v.DatasetSourceDetails }).(DatasetDatasetSourceDetailsOutput)
}

// (Updatable) The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
func (o DatasetOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user provided description of the dataset
func (o DatasetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) A user-friendly display name for the resource.
func (o DatasetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
func (o DatasetOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Initial import dataset configuration. Allows user to create dataset from existing dataset files.
func (o DatasetOutput) InitialImportDatasetConfiguration() DatasetInitialImportDatasetConfigurationOutput {
	return o.ApplyT(func(v *Dataset) DatasetInitialImportDatasetConfigurationOutput {
		return v.InitialImportDatasetConfiguration
	}).(DatasetInitialImportDatasetConfigurationOutput)
}

// The initial generate records configuration. It generates records from the dataset's source.
func (o DatasetOutput) InitialRecordGenerationConfiguration() DatasetInitialRecordGenerationConfigurationOutput {
	return o.ApplyT(func(v *Dataset) DatasetInitialRecordGenerationConfigurationOutput {
		return v.InitialRecordGenerationConfiguration
	}).(DatasetInitialRecordGenerationConfigurationOutput)
}

// An ordered collection of labels that are unique by name.
func (o DatasetOutput) LabelSet() DatasetLabelSetOutput {
	return o.ApplyT(func(v *Dataset) DatasetLabelSetOutput { return v.LabelSet }).(DatasetLabelSetOutput)
}

// (Updatable) The labeling instructions for human labelers in rich text format
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DatasetOutput) LabelingInstructions() pulumi.StringOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringOutput { return v.LabelingInstructions }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
func (o DatasetOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The sub-state of the dataset. IMPORT_DATASET - The dataset is being imported.
func (o DatasetOutput) LifecycleSubstate() pulumi.StringOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringOutput { return v.LifecycleSubstate }).(pulumi.StringOutput)
}

// The state of a dataset. CREATING - The dataset is being created.  It will transition to ACTIVE when it is ready for labeling. ACTIVE   - The dataset is ready for labeling. UPDATING - The dataset is being updated.  It and its related resources may be unavailable for other updates until it returns to ACTIVE. NEEDS_ATTENTION - A dataset updation operation has failed due to validation or other errors and needs attention. DELETING - The dataset and its related resources are being deleted. DELETED  - The dataset has been deleted and is no longer available. FAILED   - The dataset has failed due to validation or other errors.
func (o DatasetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created, in the timestamp format defined by RFC3339.
func (o DatasetOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated, in the timestamp format defined by RFC3339.
func (o DatasetOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *Dataset) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type DatasetArrayOutput struct{ *pulumi.OutputState }

func (DatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dataset)(nil)).Elem()
}

func (o DatasetArrayOutput) ToDatasetArrayOutput() DatasetArrayOutput {
	return o
}

func (o DatasetArrayOutput) ToDatasetArrayOutputWithContext(ctx context.Context) DatasetArrayOutput {
	return o
}

func (o DatasetArrayOutput) Index(i pulumi.IntInput) DatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Dataset {
		return vs[0].([]*Dataset)[vs[1].(int)]
	}).(DatasetOutput)
}

type DatasetMapOutput struct{ *pulumi.OutputState }

func (DatasetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dataset)(nil)).Elem()
}

func (o DatasetMapOutput) ToDatasetMapOutput() DatasetMapOutput {
	return o
}

func (o DatasetMapOutput) ToDatasetMapOutputWithContext(ctx context.Context) DatasetMapOutput {
	return o
}

func (o DatasetMapOutput) MapIndex(k pulumi.StringInput) DatasetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Dataset {
		return vs[0].(map[string]*Dataset)[vs[1].(string)]
	}).(DatasetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetInput)(nil)).Elem(), &Dataset{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetArrayInput)(nil)).Elem(), DatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetMapInput)(nil)).Elem(), DatasetMap{})
	pulumi.RegisterOutputType(DatasetOutput{})
	pulumi.RegisterOutputType(DatasetArrayOutput{})
	pulumi.RegisterOutputType(DatasetMapOutput{})
}
