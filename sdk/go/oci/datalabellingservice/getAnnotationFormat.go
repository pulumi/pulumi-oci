// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datalabellingservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Annotation Format resource in Oracle Cloud Infrastructure Data Labeling Service service.
//
// These are a static list in a given region.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataLabellingService"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := DataLabellingService.GetAnnotationFormat(ctx, &datalabellingservice.GetAnnotationFormatArgs{
// 			CompartmentId: _var.Compartment_id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetAnnotationFormat(ctx *pulumi.Context, args *GetAnnotationFormatArgs, opts ...pulumi.InvokeOption) (*GetAnnotationFormatResult, error) {
	var rv GetAnnotationFormatResult
	err := ctx.Invoke("oci:DataLabellingService/getAnnotationFormat:getAnnotationFormat", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAnnotationFormat.
type GetAnnotationFormatArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
}

// A collection of values returned by getAnnotationFormat.
type GetAnnotationFormatResult struct {
	CompartmentId string `pulumi:"compartmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of annotation formats.
	Items []GetAnnotationFormatItem `pulumi:"items"`
}

func GetAnnotationFormatOutput(ctx *pulumi.Context, args GetAnnotationFormatOutputArgs, opts ...pulumi.InvokeOption) GetAnnotationFormatResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAnnotationFormatResult, error) {
			args := v.(GetAnnotationFormatArgs)
			r, err := GetAnnotationFormat(ctx, &args, opts...)
			var s GetAnnotationFormatResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAnnotationFormatResultOutput)
}

// A collection of arguments for invoking getAnnotationFormat.
type GetAnnotationFormatOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
}

func (GetAnnotationFormatOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAnnotationFormatArgs)(nil)).Elem()
}

// A collection of values returned by getAnnotationFormat.
type GetAnnotationFormatResultOutput struct{ *pulumi.OutputState }

func (GetAnnotationFormatResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAnnotationFormatResult)(nil)).Elem()
}

func (o GetAnnotationFormatResultOutput) ToGetAnnotationFormatResultOutput() GetAnnotationFormatResultOutput {
	return o
}

func (o GetAnnotationFormatResultOutput) ToGetAnnotationFormatResultOutputWithContext(ctx context.Context) GetAnnotationFormatResultOutput {
	return o
}

func (o GetAnnotationFormatResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAnnotationFormatResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAnnotationFormatResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAnnotationFormatResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of annotation formats.
func (o GetAnnotationFormatResultOutput) Items() GetAnnotationFormatItemArrayOutput {
	return o.ApplyT(func(v GetAnnotationFormatResult) []GetAnnotationFormatItem { return v.Items }).(GetAnnotationFormatItemArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAnnotationFormatResultOutput{})
}
