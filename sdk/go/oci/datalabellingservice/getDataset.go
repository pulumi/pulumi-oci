// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datalabellingservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Dataset resource in Oracle Cloud Infrastructure Data Labeling Service service.
//
// # Gets a Dataset by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataLabellingService"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataLabellingService.GetDataset(ctx, &datalabellingservice.GetDatasetArgs{
//				DatasetId: oci_data_labeling_service_dataset.Test_dataset.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDataset(ctx *pulumi.Context, args *LookupDatasetArgs, opts ...pulumi.InvokeOption) (*LookupDatasetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDatasetResult
	err := ctx.Invoke("oci:DataLabellingService/getDataset:getDataset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataset.
type LookupDatasetArgs struct {
	// Unique Dataset OCID
	DatasetId string `pulumi:"datasetId"`
}

// A collection of values returned by getDataset.
type LookupDatasetResult struct {
	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	AdditionalProperties map[string]interface{} `pulumi:"additionalProperties"`
	// The annotation format name required for labeling records.
	AnnotationFormat *string `pulumi:"annotationFormat"`
	// The OCID of the compartment of the resource.
	CompartmentId *string `pulumi:"compartmentId"`
	// It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
	DatasetFormatDetails []GetDatasetDatasetFormatDetail `pulumi:"datasetFormatDetails"`
	DatasetId            string                          `pulumi:"datasetId"`
	// This allows the customer to specify the source of the dataset.
	DatasetSourceDetails []GetDatasetDatasetSourceDetail `pulumi:"datasetSourceDetails"`
	// The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A user provided description of the dataset
	Description *string `pulumi:"description"`
	// A user-friendly display name for the resource.
	DisplayName *string `pulumi:"displayName"`
	// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the Dataset.
	Id *string `pulumi:"id"`
	// Initial import dataset configuration. Allows user to create dataset from existing dataset files.
	InitialImportDatasetConfigurations []GetDatasetInitialImportDatasetConfiguration `pulumi:"initialImportDatasetConfigurations"`
	// The initial generate records configuration. It generates records from the dataset's source.
	InitialRecordGenerationConfigurations []GetDatasetInitialRecordGenerationConfiguration `pulumi:"initialRecordGenerationConfigurations"`
	// An ordered collection of labels that are unique by name.
	LabelSets []GetDatasetLabelSet `pulumi:"labelSets"`
	// The labeling instructions for human labelers in rich text format
	LabelingInstructions *string `pulumi:"labelingInstructions"`
	// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The sub-state of the dataset. IMPORT_DATASET - The dataset is being imported.
	LifecycleSubstate *string `pulumi:"lifecycleSubstate"`
	// The state of a dataset. CREATING - The dataset is being created.  It will transition to ACTIVE when it is ready for labeling. ACTIVE   - The dataset is ready for labeling. UPDATING - The dataset is being updated.  It and its related resources may be unavailable for other updates until it returns to ACTIVE. NEEDS_ATTENTION - A dataset updation operation has failed due to validation or other errors and needs attention. DELETING - The dataset and its related resources are being deleted. DELETED  - The dataset has been deleted and is no longer available. FAILED   - The dataset has failed due to validation or other errors.
	State *string `pulumi:"state"`
	// The date and time the resource was created, in the timestamp format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the resource was last updated, in the timestamp format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

func LookupDatasetOutput(ctx *pulumi.Context, args LookupDatasetOutputArgs, opts ...pulumi.InvokeOption) LookupDatasetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatasetResult, error) {
			args := v.(LookupDatasetArgs)
			r, err := LookupDataset(ctx, &args, opts...)
			var s LookupDatasetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatasetResultOutput)
}

// A collection of arguments for invoking getDataset.
type LookupDatasetOutputArgs struct {
	// Unique Dataset OCID
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
}

func (LookupDatasetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetArgs)(nil)).Elem()
}

// A collection of values returned by getDataset.
type LookupDatasetResultOutput struct{ *pulumi.OutputState }

func (LookupDatasetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetResult)(nil)).Elem()
}

func (o LookupDatasetResultOutput) ToLookupDatasetResultOutput() LookupDatasetResultOutput {
	return o
}

func (o LookupDatasetResultOutput) ToLookupDatasetResultOutputWithContext(ctx context.Context) LookupDatasetResultOutput {
	return o
}

// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
func (o LookupDatasetResultOutput) AdditionalProperties() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDatasetResult) map[string]interface{} { return v.AdditionalProperties }).(pulumi.MapOutput)
}

// The annotation format name required for labeling records.
func (o LookupDatasetResultOutput) AnnotationFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.AnnotationFormat }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment of the resource.
func (o LookupDatasetResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
func (o LookupDatasetResultOutput) DatasetFormatDetails() GetDatasetDatasetFormatDetailArrayOutput {
	return o.ApplyT(func(v LookupDatasetResult) []GetDatasetDatasetFormatDetail { return v.DatasetFormatDetails }).(GetDatasetDatasetFormatDetailArrayOutput)
}

func (o LookupDatasetResultOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetResult) string { return v.DatasetId }).(pulumi.StringOutput)
}

// This allows the customer to specify the source of the dataset.
func (o LookupDatasetResultOutput) DatasetSourceDetails() GetDatasetDatasetSourceDetailArrayOutput {
	return o.ApplyT(func(v LookupDatasetResult) []GetDatasetDatasetSourceDetail { return v.DatasetSourceDetails }).(GetDatasetDatasetSourceDetailArrayOutput)
}

// The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
func (o LookupDatasetResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDatasetResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A user provided description of the dataset
func (o LookupDatasetResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A user-friendly display name for the resource.
func (o LookupDatasetResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
func (o LookupDatasetResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDatasetResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the Dataset.
func (o LookupDatasetResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Initial import dataset configuration. Allows user to create dataset from existing dataset files.
func (o LookupDatasetResultOutput) InitialImportDatasetConfigurations() GetDatasetInitialImportDatasetConfigurationArrayOutput {
	return o.ApplyT(func(v LookupDatasetResult) []GetDatasetInitialImportDatasetConfiguration {
		return v.InitialImportDatasetConfigurations
	}).(GetDatasetInitialImportDatasetConfigurationArrayOutput)
}

// The initial generate records configuration. It generates records from the dataset's source.
func (o LookupDatasetResultOutput) InitialRecordGenerationConfigurations() GetDatasetInitialRecordGenerationConfigurationArrayOutput {
	return o.ApplyT(func(v LookupDatasetResult) []GetDatasetInitialRecordGenerationConfiguration {
		return v.InitialRecordGenerationConfigurations
	}).(GetDatasetInitialRecordGenerationConfigurationArrayOutput)
}

// An ordered collection of labels that are unique by name.
func (o LookupDatasetResultOutput) LabelSets() GetDatasetLabelSetArrayOutput {
	return o.ApplyT(func(v LookupDatasetResult) []GetDatasetLabelSet { return v.LabelSets }).(GetDatasetLabelSetArrayOutput)
}

// The labeling instructions for human labelers in rich text format
func (o LookupDatasetResultOutput) LabelingInstructions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.LabelingInstructions }).(pulumi.StringPtrOutput)
}

// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
func (o LookupDatasetResultOutput) LifecycleDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.LifecycleDetails }).(pulumi.StringPtrOutput)
}

// The sub-state of the dataset. IMPORT_DATASET - The dataset is being imported.
func (o LookupDatasetResultOutput) LifecycleSubstate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.LifecycleSubstate }).(pulumi.StringPtrOutput)
}

// The state of a dataset. CREATING - The dataset is being created.  It will transition to ACTIVE when it is ready for labeling. ACTIVE   - The dataset is ready for labeling. UPDATING - The dataset is being updated.  It and its related resources may be unavailable for other updates until it returns to ACTIVE. NEEDS_ATTENTION - A dataset updation operation has failed due to validation or other errors and needs attention. DELETING - The dataset and its related resources are being deleted. DELETED  - The dataset has been deleted and is no longer available. FAILED   - The dataset has failed due to validation or other errors.
func (o LookupDatasetResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The date and time the resource was created, in the timestamp format defined by RFC3339.
func (o LookupDatasetResultOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the resource was last updated, in the timestamp format defined by RFC3339.
func (o LookupDatasetResultOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatasetResultOutput{})
}
