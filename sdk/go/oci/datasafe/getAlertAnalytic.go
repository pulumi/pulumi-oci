// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Alert Analytic resource in Oracle Cloud Infrastructure Data Safe service.
//
// Returns aggregation details of alerts.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetAlertAnalytic(ctx, &datasafe.GetAlertAnalyticArgs{
//				CompartmentId:          _var.Compartment_id,
//				AccessLevel:            pulumi.StringRef(_var.Alert_analytic_access_level),
//				CompartmentIdInSubtree: pulumi.BoolRef(_var.Alert_analytic_compartment_id_in_subtree),
//				GroupBies:              _var.Alert_analytic_group_by,
//				QueryTimeZone:          pulumi.StringRef(_var.Alert_analytic_query_time_zone),
//				ScimQuery:              pulumi.StringRef(_var.Alert_analytic_scim_query),
//				SummaryFields:          _var.Alert_analytic_summary_field,
//				TimeEnded:              pulumi.StringRef(_var.Alert_analytic_time_ended),
//				TimeStarted:            pulumi.StringRef(_var.Alert_analytic_time_started),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAlertAnalytic(ctx *pulumi.Context, args *GetAlertAnalyticArgs, opts ...pulumi.InvokeOption) (*GetAlertAnalyticResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAlertAnalyticResult
	err := ctx.Invoke("oci:DataSafe/getAlertAnalytic:getAlertAnalytic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlertAnalytic.
type GetAlertAnalyticArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// A groupBy can only be used in combination with summaryField parameter. A groupBy value has to be a subset of the values mentioned in summaryField parameter.
	GroupBies []string `pulumi:"groupBies"`
	// Default time zone is UTC if no time zone provided. The date-time considerations of the resource will be in accordance with the specified time zone.
	QueryTimeZone *string `pulumi:"queryTimeZone"`
	// The scimQuery query parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.)
	//
	// **Example:** query=(timeCreated ge '2021-06-04T01-00-26') and (targetNames eq 'target_1') Supported fields: severity status alertType targetIds targetNames operationTime lifecycleState displayName timeCreated timeUpdated
	ScimQuery *string `pulumi:"scimQuery"`
	// Specifies a subset of summarized fields to be returned in the response.
	SummaryFields []string `pulumi:"summaryFields"`
	// An optional filter to return audit events whose creation time in the database is less than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeEnded *string `pulumi:"timeEnded"`
	// An optional filter to return audit events whose creation time in the database is greater than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeStarted *string `pulumi:"timeStarted"`
}

// A collection of values returned by getAlertAnalytic.
type GetAlertAnalyticResult struct {
	AccessLevel            *string `pulumi:"accessLevel"`
	CompartmentId          string  `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool   `pulumi:"compartmentIdInSubtree"`
	// GroupBy value used in aggregation.
	GroupBies []string `pulumi:"groupBies"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The aggregated data point items.
	Items         []GetAlertAnalyticItem `pulumi:"items"`
	QueryTimeZone *string                `pulumi:"queryTimeZone"`
	ScimQuery     *string                `pulumi:"scimQuery"`
	SummaryFields []string               `pulumi:"summaryFields"`
	// The time at which the aggregation ended.
	TimeEnded *string `pulumi:"timeEnded"`
	// The time at which the aggregation started.
	TimeStarted *string `pulumi:"timeStarted"`
}

func GetAlertAnalyticOutput(ctx *pulumi.Context, args GetAlertAnalyticOutputArgs, opts ...pulumi.InvokeOption) GetAlertAnalyticResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAlertAnalyticResult, error) {
			args := v.(GetAlertAnalyticArgs)
			r, err := GetAlertAnalytic(ctx, &args, opts...)
			var s GetAlertAnalyticResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAlertAnalyticResultOutput)
}

// A collection of arguments for invoking getAlertAnalytic.
type GetAlertAnalyticOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// A groupBy can only be used in combination with summaryField parameter. A groupBy value has to be a subset of the values mentioned in summaryField parameter.
	GroupBies pulumi.StringArrayInput `pulumi:"groupBies"`
	// Default time zone is UTC if no time zone provided. The date-time considerations of the resource will be in accordance with the specified time zone.
	QueryTimeZone pulumi.StringPtrInput `pulumi:"queryTimeZone"`
	// The scimQuery query parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.)
	//
	// **Example:** query=(timeCreated ge '2021-06-04T01-00-26') and (targetNames eq 'target_1') Supported fields: severity status alertType targetIds targetNames operationTime lifecycleState displayName timeCreated timeUpdated
	ScimQuery pulumi.StringPtrInput `pulumi:"scimQuery"`
	// Specifies a subset of summarized fields to be returned in the response.
	SummaryFields pulumi.StringArrayInput `pulumi:"summaryFields"`
	// An optional filter to return audit events whose creation time in the database is less than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeEnded pulumi.StringPtrInput `pulumi:"timeEnded"`
	// An optional filter to return audit events whose creation time in the database is greater than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeStarted pulumi.StringPtrInput `pulumi:"timeStarted"`
}

func (GetAlertAnalyticOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertAnalyticArgs)(nil)).Elem()
}

// A collection of values returned by getAlertAnalytic.
type GetAlertAnalyticResultOutput struct{ *pulumi.OutputState }

func (GetAlertAnalyticResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertAnalyticResult)(nil)).Elem()
}

func (o GetAlertAnalyticResultOutput) ToGetAlertAnalyticResultOutput() GetAlertAnalyticResultOutput {
	return o
}

func (o GetAlertAnalyticResultOutput) ToGetAlertAnalyticResultOutputWithContext(ctx context.Context) GetAlertAnalyticResultOutput {
	return o
}

func (o GetAlertAnalyticResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertAnalyticResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

func (o GetAlertAnalyticResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertAnalyticResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetAlertAnalyticResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAlertAnalyticResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// GroupBy value used in aggregation.
func (o GetAlertAnalyticResultOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertAnalyticResult) []string { return v.GroupBies }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAlertAnalyticResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertAnalyticResult) string { return v.Id }).(pulumi.StringOutput)
}

// The aggregated data point items.
func (o GetAlertAnalyticResultOutput) Items() GetAlertAnalyticItemArrayOutput {
	return o.ApplyT(func(v GetAlertAnalyticResult) []GetAlertAnalyticItem { return v.Items }).(GetAlertAnalyticItemArrayOutput)
}

func (o GetAlertAnalyticResultOutput) QueryTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertAnalyticResult) *string { return v.QueryTimeZone }).(pulumi.StringPtrOutput)
}

func (o GetAlertAnalyticResultOutput) ScimQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertAnalyticResult) *string { return v.ScimQuery }).(pulumi.StringPtrOutput)
}

func (o GetAlertAnalyticResultOutput) SummaryFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertAnalyticResult) []string { return v.SummaryFields }).(pulumi.StringArrayOutput)
}

// The time at which the aggregation ended.
func (o GetAlertAnalyticResultOutput) TimeEnded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertAnalyticResult) *string { return v.TimeEnded }).(pulumi.StringPtrOutput)
}

// The time at which the aggregation started.
func (o GetAlertAnalyticResultOutput) TimeStarted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertAnalyticResult) *string { return v.TimeStarted }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlertAnalyticResultOutput{})
}
