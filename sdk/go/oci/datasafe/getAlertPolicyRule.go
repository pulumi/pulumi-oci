// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Alert Policy Rule resource in Oracle Cloud Infrastructure Data Safe service.
//
// Lists the rules of the specified alert policy. The alert policy is said to be satisfied when all rules in the policy evaulate to true.
// If there are three rules: rule1,rule2 and rule3, the policy is satisfied if rule1 AND rule2 AND rule3 is True.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetAlertPolicyRule(ctx, &datasafe.GetAlertPolicyRuleArgs{
//				AlertPolicyId: testAlertPolicy.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAlertPolicyRule(ctx *pulumi.Context, args *GetAlertPolicyRuleArgs, opts ...pulumi.InvokeOption) (*GetAlertPolicyRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAlertPolicyRuleResult
	err := ctx.Invoke("oci:DataSafe/getAlertPolicyRule:getAlertPolicyRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlertPolicyRule.
type GetAlertPolicyRuleArgs struct {
	// The OCID of the alert policy.
	AlertPolicyId string `pulumi:"alertPolicyId"`
}

// A collection of values returned by getAlertPolicyRule.
type GetAlertPolicyRuleResult struct {
	AlertPolicyId string `pulumi:"alertPolicyId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Array of alert policy rules summary
	Items []GetAlertPolicyRuleItem `pulumi:"items"`
}

func GetAlertPolicyRuleOutput(ctx *pulumi.Context, args GetAlertPolicyRuleOutputArgs, opts ...pulumi.InvokeOption) GetAlertPolicyRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAlertPolicyRuleResult, error) {
			args := v.(GetAlertPolicyRuleArgs)
			r, err := GetAlertPolicyRule(ctx, &args, opts...)
			var s GetAlertPolicyRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAlertPolicyRuleResultOutput)
}

// A collection of arguments for invoking getAlertPolicyRule.
type GetAlertPolicyRuleOutputArgs struct {
	// The OCID of the alert policy.
	AlertPolicyId pulumi.StringInput `pulumi:"alertPolicyId"`
}

func (GetAlertPolicyRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertPolicyRuleArgs)(nil)).Elem()
}

// A collection of values returned by getAlertPolicyRule.
type GetAlertPolicyRuleResultOutput struct{ *pulumi.OutputState }

func (GetAlertPolicyRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertPolicyRuleResult)(nil)).Elem()
}

func (o GetAlertPolicyRuleResultOutput) ToGetAlertPolicyRuleResultOutput() GetAlertPolicyRuleResultOutput {
	return o
}

func (o GetAlertPolicyRuleResultOutput) ToGetAlertPolicyRuleResultOutputWithContext(ctx context.Context) GetAlertPolicyRuleResultOutput {
	return o
}

func (o GetAlertPolicyRuleResultOutput) AlertPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertPolicyRuleResult) string { return v.AlertPolicyId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAlertPolicyRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertPolicyRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Array of alert policy rules summary
func (o GetAlertPolicyRuleResultOutput) Items() GetAlertPolicyRuleItemArrayOutput {
	return o.ApplyT(func(v GetAlertPolicyRuleResult) []GetAlertPolicyRuleItem { return v.Items }).(GetAlertPolicyRuleItemArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlertPolicyRuleResultOutput{})
}
