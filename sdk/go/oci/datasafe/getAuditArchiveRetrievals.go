// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Audit Archive Retrievals in Oracle Cloud Infrastructure Data Safe service.
//
// Returns the list of audit archive retrieval.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetAuditArchiveRetrievals(ctx, &datasafe.GetAuditArchiveRetrievalsArgs{
//				CompartmentId:           compartmentId,
//				AccessLevel:             pulumi.StringRef(auditArchiveRetrievalAccessLevel),
//				AuditArchiveRetrievalId: pulumi.StringRef(testAuditArchiveRetrieval.Id),
//				CompartmentIdInSubtree:  pulumi.BoolRef(auditArchiveRetrievalCompartmentIdInSubtree),
//				DisplayName:             pulumi.StringRef(auditArchiveRetrievalDisplayName),
//				State:                   pulumi.StringRef(auditArchiveRetrievalState),
//				TargetId:                pulumi.StringRef(testTarget.Id),
//				TimeOfExpiry:            pulumi.StringRef(auditArchiveRetrievalTimeOfExpiry),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAuditArchiveRetrievals(ctx *pulumi.Context, args *GetAuditArchiveRetrievalsArgs, opts ...pulumi.InvokeOption) (*GetAuditArchiveRetrievalsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAuditArchiveRetrievalsResult
	err := ctx.Invoke("oci:DataSafe/getAuditArchiveRetrievals:getAuditArchiveRetrievals", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuditArchiveRetrievals.
type GetAuditArchiveRetrievalsArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// OCID of the archive retrieval.
	AuditArchiveRetrievalId *string `pulumi:"auditArchiveRetrievalId"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// A filter to return only resources that match the specified display name.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetAuditArchiveRetrievalsFilter `pulumi:"filters"`
	// A filter to return only resources that matches the specified lifecycle state.
	State *string `pulumi:"state"`
	// The OCID of the target associated with the archive retrieval.
	TargetId *string `pulumi:"targetId"`
	// The date time when retrieved archive data will be deleted from Data Safe and unloaded back into archival.
	TimeOfExpiry *string `pulumi:"timeOfExpiry"`
}

// A collection of values returned by getAuditArchiveRetrievals.
type GetAuditArchiveRetrievalsResult struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// The list of audit_archive_retrieval_collection.
	AuditArchiveRetrievalCollections []GetAuditArchiveRetrievalsAuditArchiveRetrievalCollection `pulumi:"auditArchiveRetrievalCollections"`
	AuditArchiveRetrievalId          *string                                                    `pulumi:"auditArchiveRetrievalId"`
	// The OCID of the compartment that contains archive retrieval.
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool  `pulumi:"compartmentIdInSubtree"`
	// The display name of the archive retrieval. The name does not have to be unique, and is changeable.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetAuditArchiveRetrievalsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current state of the archive retrieval.
	State *string `pulumi:"state"`
	// The OCID of the target associated with the archive retrieval.
	TargetId *string `pulumi:"targetId"`
	// The date time when retrieved archive data will be deleted from Data Safe and unloaded back into archival.
	TimeOfExpiry *string `pulumi:"timeOfExpiry"`
}

func GetAuditArchiveRetrievalsOutput(ctx *pulumi.Context, args GetAuditArchiveRetrievalsOutputArgs, opts ...pulumi.InvokeOption) GetAuditArchiveRetrievalsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAuditArchiveRetrievalsResult, error) {
			args := v.(GetAuditArchiveRetrievalsArgs)
			r, err := GetAuditArchiveRetrievals(ctx, &args, opts...)
			var s GetAuditArchiveRetrievalsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAuditArchiveRetrievalsResultOutput)
}

// A collection of arguments for invoking getAuditArchiveRetrievals.
type GetAuditArchiveRetrievalsOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// OCID of the archive retrieval.
	AuditArchiveRetrievalId pulumi.StringPtrInput `pulumi:"auditArchiveRetrievalId"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// A filter to return only resources that match the specified display name.
	DisplayName pulumi.StringPtrInput                     `pulumi:"displayName"`
	Filters     GetAuditArchiveRetrievalsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that matches the specified lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The OCID of the target associated with the archive retrieval.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
	// The date time when retrieved archive data will be deleted from Data Safe and unloaded back into archival.
	TimeOfExpiry pulumi.StringPtrInput `pulumi:"timeOfExpiry"`
}

func (GetAuditArchiveRetrievalsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuditArchiveRetrievalsArgs)(nil)).Elem()
}

// A collection of values returned by getAuditArchiveRetrievals.
type GetAuditArchiveRetrievalsResultOutput struct{ *pulumi.OutputState }

func (GetAuditArchiveRetrievalsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuditArchiveRetrievalsResult)(nil)).Elem()
}

func (o GetAuditArchiveRetrievalsResultOutput) ToGetAuditArchiveRetrievalsResultOutput() GetAuditArchiveRetrievalsResultOutput {
	return o
}

func (o GetAuditArchiveRetrievalsResultOutput) ToGetAuditArchiveRetrievalsResultOutputWithContext(ctx context.Context) GetAuditArchiveRetrievalsResultOutput {
	return o
}

func (o GetAuditArchiveRetrievalsResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuditArchiveRetrievalsResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// The list of audit_archive_retrieval_collection.
func (o GetAuditArchiveRetrievalsResultOutput) AuditArchiveRetrievalCollections() GetAuditArchiveRetrievalsAuditArchiveRetrievalCollectionArrayOutput {
	return o.ApplyT(func(v GetAuditArchiveRetrievalsResult) []GetAuditArchiveRetrievalsAuditArchiveRetrievalCollection {
		return v.AuditArchiveRetrievalCollections
	}).(GetAuditArchiveRetrievalsAuditArchiveRetrievalCollectionArrayOutput)
}

func (o GetAuditArchiveRetrievalsResultOutput) AuditArchiveRetrievalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuditArchiveRetrievalsResult) *string { return v.AuditArchiveRetrievalId }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment that contains archive retrieval.
func (o GetAuditArchiveRetrievalsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuditArchiveRetrievalsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetAuditArchiveRetrievalsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAuditArchiveRetrievalsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// The display name of the archive retrieval. The name does not have to be unique, and is changeable.
func (o GetAuditArchiveRetrievalsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuditArchiveRetrievalsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetAuditArchiveRetrievalsResultOutput) Filters() GetAuditArchiveRetrievalsFilterArrayOutput {
	return o.ApplyT(func(v GetAuditArchiveRetrievalsResult) []GetAuditArchiveRetrievalsFilter { return v.Filters }).(GetAuditArchiveRetrievalsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAuditArchiveRetrievalsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuditArchiveRetrievalsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the archive retrieval.
func (o GetAuditArchiveRetrievalsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuditArchiveRetrievalsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The OCID of the target associated with the archive retrieval.
func (o GetAuditArchiveRetrievalsResultOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuditArchiveRetrievalsResult) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

// The date time when retrieved archive data will be deleted from Data Safe and unloaded back into archival.
func (o GetAuditArchiveRetrievalsResultOutput) TimeOfExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuditArchiveRetrievalsResult) *string { return v.TimeOfExpiry }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAuditArchiveRetrievalsResultOutput{})
}
