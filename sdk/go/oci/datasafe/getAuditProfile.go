// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Audit Profile resource in Oracle Cloud Infrastructure Data Safe service.
//
// Gets the details of audit profile resource and associated audit trails of the audit profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.GetAuditProfile(ctx, &datasafe.GetAuditProfileArgs{
//				AuditProfileId: testAuditProfileOciDataSafeAuditProfile.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAuditProfile(ctx *pulumi.Context, args *LookupAuditProfileArgs, opts ...pulumi.InvokeOption) (*LookupAuditProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAuditProfileResult
	err := ctx.Invoke("oci:DataSafe/getAuditProfile:getAuditProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuditProfile.
type LookupAuditProfileArgs struct {
	// The OCID of the audit.
	AuditProfileId string `pulumi:"auditProfileId"`
}

// A collection of values returned by getAuditProfile.
type LookupAuditProfileResult struct {
	// Number of audit records collected in the current calendar month.  Audit records for the Data Safe service account are excluded and are not counted towards your monthly free limit.
	AuditCollectedVolume string `pulumi:"auditCollectedVolume"`
	// The OCID of the  parent audit.
	AuditProfileId string `pulumi:"auditProfileId"`
	// Contains the list of available audit trails on the target database.
	AuditTrails            []GetAuditProfileAuditTrail `pulumi:"auditTrails"`
	ChangeRetentionTrigger int                         `pulumi:"changeRetentionTrigger"`
	// The OCID of the compartment that contains the audit profile.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The description of the audit profile.
	Description string `pulumi:"description"`
	// The display name of the audit profile.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the audit profile.
	Id string `pulumi:"id"`
	// Indicates whether audit paid usage settings specified at the target database level override both the global settings and the target group level paid usage settings. Enabling paid usage continues the collection of audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. For more information, see [Data Safe Price List](https://www.oracle.com/cloud/price-list/#data-safe).
	IsOverrideGlobalPaidUsage bool `pulumi:"isOverrideGlobalPaidUsage"`
	// Indicates whether audit retention settings like online and offline months set at the  target level override both the global settings and the target group level audit retention settings.
	IsOverrideGlobalRetentionSetting bool `pulumi:"isOverrideGlobalRetentionSetting"`
	// Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. The default value is inherited from the global settings.  You can change at the global level or at the target level.
	IsPaidUsageEnabled bool `pulumi:"isPaidUsageEnabled"`
	// Details about the current state of the audit profile in Data Safe.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Number of months the audit records will be stored offline in the offline archive. Minimum: 0; Maximum: 72 months. If you have a requirement to store the audit data even longer in the offline archive, please contact the Oracle Support.
	OfflineMonths int `pulumi:"offlineMonths"`
	// The name or the OCID of the resource from which the offline month retention setting is sourced. For example, a global setting or a target database group OCID.
	OfflineMonthsSource string `pulumi:"offlineMonthsSource"`
	// Number of months the audit records will be stored online in the audit repository for immediate reporting and analysis.  Minimum: 1; Maximum: 12 months
	OnlineMonths int `pulumi:"onlineMonths"`
	// The name or the OCID of the resource from which the online month retention setting is sourced. For example, a global setting or a target database group OCID.
	OnlineMonthsSource string `pulumi:"onlineMonthsSource"`
	// The name or the OCID of the resource from which the paid usage setting is sourced. For example, a global setting or a target database group OCID.
	PaidUsageSource string `pulumi:"paidUsageSource"`
	// The current state of the audit profile.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The OCID of the target database or target database group for which the audit profile is created.
	TargetId string `pulumi:"targetId"`
	// The resource type that is represented by the audit profile.
	TargetType string `pulumi:"targetType"`
	// The date and time the audit profile was created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the audit profile was updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupAuditProfileOutput(ctx *pulumi.Context, args LookupAuditProfileOutputArgs, opts ...pulumi.InvokeOption) LookupAuditProfileResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAuditProfileResultOutput, error) {
			args := v.(LookupAuditProfileArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getAuditProfile:getAuditProfile", args, LookupAuditProfileResultOutput{}, options).(LookupAuditProfileResultOutput), nil
		}).(LookupAuditProfileResultOutput)
}

// A collection of arguments for invoking getAuditProfile.
type LookupAuditProfileOutputArgs struct {
	// The OCID of the audit.
	AuditProfileId pulumi.StringInput `pulumi:"auditProfileId"`
}

func (LookupAuditProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuditProfileArgs)(nil)).Elem()
}

// A collection of values returned by getAuditProfile.
type LookupAuditProfileResultOutput struct{ *pulumi.OutputState }

func (LookupAuditProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuditProfileResult)(nil)).Elem()
}

func (o LookupAuditProfileResultOutput) ToLookupAuditProfileResultOutput() LookupAuditProfileResultOutput {
	return o
}

func (o LookupAuditProfileResultOutput) ToLookupAuditProfileResultOutputWithContext(ctx context.Context) LookupAuditProfileResultOutput {
	return o
}

// Number of audit records collected in the current calendar month.  Audit records for the Data Safe service account are excluded and are not counted towards your monthly free limit.
func (o LookupAuditProfileResultOutput) AuditCollectedVolume() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.AuditCollectedVolume }).(pulumi.StringOutput)
}

// The OCID of the  parent audit.
func (o LookupAuditProfileResultOutput) AuditProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.AuditProfileId }).(pulumi.StringOutput)
}

// Contains the list of available audit trails on the target database.
func (o LookupAuditProfileResultOutput) AuditTrails() GetAuditProfileAuditTrailArrayOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) []GetAuditProfileAuditTrail { return v.AuditTrails }).(GetAuditProfileAuditTrailArrayOutput)
}

func (o LookupAuditProfileResultOutput) ChangeRetentionTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) int { return v.ChangeRetentionTrigger }).(pulumi.IntOutput)
}

// The OCID of the compartment that contains the audit profile.
func (o LookupAuditProfileResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
func (o LookupAuditProfileResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The description of the audit profile.
func (o LookupAuditProfileResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.Description }).(pulumi.StringOutput)
}

// The display name of the audit profile.
func (o LookupAuditProfileResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o LookupAuditProfileResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the audit profile.
func (o LookupAuditProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether audit paid usage settings specified at the target database level override both the global settings and the target group level paid usage settings. Enabling paid usage continues the collection of audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. For more information, see [Data Safe Price List](https://www.oracle.com/cloud/price-list/#data-safe).
func (o LookupAuditProfileResultOutput) IsOverrideGlobalPaidUsage() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) bool { return v.IsOverrideGlobalPaidUsage }).(pulumi.BoolOutput)
}

// Indicates whether audit retention settings like online and offline months set at the  target level override both the global settings and the target group level audit retention settings.
func (o LookupAuditProfileResultOutput) IsOverrideGlobalRetentionSetting() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) bool { return v.IsOverrideGlobalRetentionSetting }).(pulumi.BoolOutput)
}

// Indicates if you want to continue collecting audit records beyond the free limit of one million audit records per month per target database, potentially incurring additional charges. The default value is inherited from the global settings.  You can change at the global level or at the target level.
func (o LookupAuditProfileResultOutput) IsPaidUsageEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) bool { return v.IsPaidUsageEnabled }).(pulumi.BoolOutput)
}

// Details about the current state of the audit profile in Data Safe.
func (o LookupAuditProfileResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Number of months the audit records will be stored offline in the offline archive. Minimum: 0; Maximum: 72 months. If you have a requirement to store the audit data even longer in the offline archive, please contact the Oracle Support.
func (o LookupAuditProfileResultOutput) OfflineMonths() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) int { return v.OfflineMonths }).(pulumi.IntOutput)
}

// The name or the OCID of the resource from which the offline month retention setting is sourced. For example, a global setting or a target database group OCID.
func (o LookupAuditProfileResultOutput) OfflineMonthsSource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.OfflineMonthsSource }).(pulumi.StringOutput)
}

// Number of months the audit records will be stored online in the audit repository for immediate reporting and analysis.  Minimum: 1; Maximum: 12 months
func (o LookupAuditProfileResultOutput) OnlineMonths() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) int { return v.OnlineMonths }).(pulumi.IntOutput)
}

// The name or the OCID of the resource from which the online month retention setting is sourced. For example, a global setting or a target database group OCID.
func (o LookupAuditProfileResultOutput) OnlineMonthsSource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.OnlineMonthsSource }).(pulumi.StringOutput)
}

// The name or the OCID of the resource from which the paid usage setting is sourced. For example, a global setting or a target database group OCID.
func (o LookupAuditProfileResultOutput) PaidUsageSource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.PaidUsageSource }).(pulumi.StringOutput)
}

// The current state of the audit profile.
func (o LookupAuditProfileResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupAuditProfileResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The OCID of the target database or target database group for which the audit profile is created.
func (o LookupAuditProfileResultOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.TargetId }).(pulumi.StringOutput)
}

// The resource type that is represented by the audit profile.
func (o LookupAuditProfileResultOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.TargetType }).(pulumi.StringOutput)
}

// The date and time the audit profile was created, in the format defined by RFC3339.
func (o LookupAuditProfileResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the audit profile was updated, in the format defined by RFC3339.
func (o LookupAuditProfileResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditProfileResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAuditProfileResultOutput{})
}
