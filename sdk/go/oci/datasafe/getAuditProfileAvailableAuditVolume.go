// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Audit Profile Available Audit Volume resource in Oracle Cloud Infrastructure Data Safe service.
//
// Retrieves a list of audit trails, and associated audit event volume for each trail up to defined start date.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetAuditProfileAvailableAuditVolume(ctx, &datasafe.GetAuditProfileAvailableAuditVolumeArgs{
//				AuditProfileId:                  oci_data_safe_audit_profile.Test_audit_profile.Id,
//				WorkRequestId:                   oci_containerengine_work_request.Test_work_request.Id,
//				MonthInConsiderationGreaterThan: pulumi.StringRef(_var.Audit_profile_available_audit_volume_month_in_consideration_greater_than),
//				MonthInConsiderationLessThan:    pulumi.StringRef(_var.Audit_profile_available_audit_volume_month_in_consideration_less_than),
//				TrailLocation:                   pulumi.StringRef(_var.Audit_profile_available_audit_volume_trail_location),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAuditProfileAvailableAuditVolume(ctx *pulumi.Context, args *GetAuditProfileAvailableAuditVolumeArgs, opts ...pulumi.InvokeOption) (*GetAuditProfileAvailableAuditVolumeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAuditProfileAvailableAuditVolumeResult
	err := ctx.Invoke("oci:DataSafe/getAuditProfileAvailableAuditVolume:getAuditProfileAvailableAuditVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuditProfileAvailableAuditVolume.
type GetAuditProfileAvailableAuditVolumeArgs struct {
	// The OCID of the audit.
	AuditProfileId string `pulumi:"auditProfileId"`
	// Specifying `monthInConsiderationGreaterThan` parameter will retrieve all items for which the event month is greater than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T00:00:00.000Z
	MonthInConsiderationGreaterThan *string `pulumi:"monthInConsiderationGreaterThan"`
	// Specifying `monthInConsiderationLessThan` parameter will retrieve all items for which the event month is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T00:00:00.000Z
	MonthInConsiderationLessThan *string `pulumi:"monthInConsiderationLessThan"`
	// The audit trail location.
	TrailLocation *string `pulumi:"trailLocation"`
	// The OCID of the work request.
	WorkRequestId string `pulumi:"workRequestId"`
}

// A collection of values returned by getAuditProfileAvailableAuditVolume.
type GetAuditProfileAvailableAuditVolumeResult struct {
	// The OCID of the audit profile resource.
	AuditProfileId string `pulumi:"auditProfileId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Array of available audit volume summary.
	Items                           []GetAuditProfileAvailableAuditVolumeItem `pulumi:"items"`
	MonthInConsiderationGreaterThan *string                                   `pulumi:"monthInConsiderationGreaterThan"`
	MonthInConsiderationLessThan    *string                                   `pulumi:"monthInConsiderationLessThan"`
	// Audit trail location on the target database from where the audit data is being collected by Data Safe.
	TrailLocation *string `pulumi:"trailLocation"`
	WorkRequestId string  `pulumi:"workRequestId"`
}

func GetAuditProfileAvailableAuditVolumeOutput(ctx *pulumi.Context, args GetAuditProfileAvailableAuditVolumeOutputArgs, opts ...pulumi.InvokeOption) GetAuditProfileAvailableAuditVolumeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAuditProfileAvailableAuditVolumeResult, error) {
			args := v.(GetAuditProfileAvailableAuditVolumeArgs)
			r, err := GetAuditProfileAvailableAuditVolume(ctx, &args, opts...)
			var s GetAuditProfileAvailableAuditVolumeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAuditProfileAvailableAuditVolumeResultOutput)
}

// A collection of arguments for invoking getAuditProfileAvailableAuditVolume.
type GetAuditProfileAvailableAuditVolumeOutputArgs struct {
	// The OCID of the audit.
	AuditProfileId pulumi.StringInput `pulumi:"auditProfileId"`
	// Specifying `monthInConsiderationGreaterThan` parameter will retrieve all items for which the event month is greater than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T00:00:00.000Z
	MonthInConsiderationGreaterThan pulumi.StringPtrInput `pulumi:"monthInConsiderationGreaterThan"`
	// Specifying `monthInConsiderationLessThan` parameter will retrieve all items for which the event month is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T00:00:00.000Z
	MonthInConsiderationLessThan pulumi.StringPtrInput `pulumi:"monthInConsiderationLessThan"`
	// The audit trail location.
	TrailLocation pulumi.StringPtrInput `pulumi:"trailLocation"`
	// The OCID of the work request.
	WorkRequestId pulumi.StringInput `pulumi:"workRequestId"`
}

func (GetAuditProfileAvailableAuditVolumeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuditProfileAvailableAuditVolumeArgs)(nil)).Elem()
}

// A collection of values returned by getAuditProfileAvailableAuditVolume.
type GetAuditProfileAvailableAuditVolumeResultOutput struct{ *pulumi.OutputState }

func (GetAuditProfileAvailableAuditVolumeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuditProfileAvailableAuditVolumeResult)(nil)).Elem()
}

func (o GetAuditProfileAvailableAuditVolumeResultOutput) ToGetAuditProfileAvailableAuditVolumeResultOutput() GetAuditProfileAvailableAuditVolumeResultOutput {
	return o
}

func (o GetAuditProfileAvailableAuditVolumeResultOutput) ToGetAuditProfileAvailableAuditVolumeResultOutputWithContext(ctx context.Context) GetAuditProfileAvailableAuditVolumeResultOutput {
	return o
}

// The OCID of the audit profile resource.
func (o GetAuditProfileAvailableAuditVolumeResultOutput) AuditProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuditProfileAvailableAuditVolumeResult) string { return v.AuditProfileId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAuditProfileAvailableAuditVolumeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuditProfileAvailableAuditVolumeResult) string { return v.Id }).(pulumi.StringOutput)
}

// Array of available audit volume summary.
func (o GetAuditProfileAvailableAuditVolumeResultOutput) Items() GetAuditProfileAvailableAuditVolumeItemArrayOutput {
	return o.ApplyT(func(v GetAuditProfileAvailableAuditVolumeResult) []GetAuditProfileAvailableAuditVolumeItem {
		return v.Items
	}).(GetAuditProfileAvailableAuditVolumeItemArrayOutput)
}

func (o GetAuditProfileAvailableAuditVolumeResultOutput) MonthInConsiderationGreaterThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuditProfileAvailableAuditVolumeResult) *string { return v.MonthInConsiderationGreaterThan }).(pulumi.StringPtrOutput)
}

func (o GetAuditProfileAvailableAuditVolumeResultOutput) MonthInConsiderationLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuditProfileAvailableAuditVolumeResult) *string { return v.MonthInConsiderationLessThan }).(pulumi.StringPtrOutput)
}

// Audit trail location on the target database from where the audit data is being collected by Data Safe.
func (o GetAuditProfileAvailableAuditVolumeResultOutput) TrailLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuditProfileAvailableAuditVolumeResult) *string { return v.TrailLocation }).(pulumi.StringPtrOutput)
}

func (o GetAuditProfileAvailableAuditVolumeResultOutput) WorkRequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuditProfileAvailableAuditVolumeResult) string { return v.WorkRequestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAuditProfileAvailableAuditVolumeResultOutput{})
}
