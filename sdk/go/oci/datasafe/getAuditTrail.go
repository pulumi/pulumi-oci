// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Audit Trail resource in Oracle Cloud Infrastructure Data Safe service.
//
// Gets the details of audit trail.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.GetAuditTrail(ctx, &datasafe.GetAuditTrailArgs{
//				AuditTrailId: testAuditTrailOciDataSafeAuditTrail.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAuditTrail(ctx *pulumi.Context, args *LookupAuditTrailArgs, opts ...pulumi.InvokeOption) (*LookupAuditTrailResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAuditTrailResult
	err := ctx.Invoke("oci:DataSafe/getAuditTrail:getAuditTrail", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuditTrail.
type LookupAuditTrailArgs struct {
	// The OCID of the audit trail.
	AuditTrailId string `pulumi:"auditTrailId"`
}

// A collection of values returned by getAuditTrail.
type LookupAuditTrailResult struct {
	// The date from which the audit trail must start collecting data, in the format defined by RFC3339.
	AuditCollectionStartTime string `pulumi:"auditCollectionStartTime"`
	// The OCID of the  parent audit.
	AuditProfileId string `pulumi:"auditProfileId"`
	AuditTrailId   string `pulumi:"auditTrailId"`
	// The OCID of the compartment that contains the audit trail and is the same as the compartment of the audit profile resource.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The description of the audit trail.
	Description string `pulumi:"description"`
	// The display name of the audit trail.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the audit trail.
	Id string `pulumi:"id"`
	// Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database's audit trail does not become too large.
	IsAutoPurgeEnabled bool `pulumi:"isAutoPurgeEnabled"`
	// Details about the current state of the audit trail in Data Safe.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The secondary id assigned for the peer database registered with Data Safe.
	PeerTargetDatabaseKey int `pulumi:"peerTargetDatabaseKey"`
	// The details of the audit trail purge job that ran on the "purgeJobTime".
	PurgeJobDetails string `pulumi:"purgeJobDetails"`
	// The current status of the audit trail purge job.
	PurgeJobStatus string `pulumi:"purgeJobStatus"`
	// The date and time of the last purge job, which deletes audit data in the target database every seven days so that the database's audit trail does not become too large. In the format defined by RFC3339.
	PurgeJobTime  string `pulumi:"purgeJobTime"`
	ResumeTrigger int    `pulumi:"resumeTrigger"`
	// The current state of the audit trail.
	State string `pulumi:"state"`
	// The current sub-state of the audit trail.
	Status string `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The OCID of the Data Safe target for which the audit trail is created.
	TargetId string `pulumi:"targetId"`
	// The date and time the audit trail was created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time until when the audit events were collected from the target database by the Data Safe audit trail  collection process, in the format defined by RFC3339.
	TimeLastCollected string `pulumi:"timeLastCollected"`
	// The date and time the audit trail was updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
	TrailLocation string `pulumi:"trailLocation"`
	// The underlying source of unified audit trail.
	TrailSource string `pulumi:"trailSource"`
	// The OCID of the workrequest for audit trail which collects audit records.
	WorkRequestId string `pulumi:"workRequestId"`
}

func LookupAuditTrailOutput(ctx *pulumi.Context, args LookupAuditTrailOutputArgs, opts ...pulumi.InvokeOption) LookupAuditTrailResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAuditTrailResultOutput, error) {
			args := v.(LookupAuditTrailArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getAuditTrail:getAuditTrail", args, LookupAuditTrailResultOutput{}, options).(LookupAuditTrailResultOutput), nil
		}).(LookupAuditTrailResultOutput)
}

// A collection of arguments for invoking getAuditTrail.
type LookupAuditTrailOutputArgs struct {
	// The OCID of the audit trail.
	AuditTrailId pulumi.StringInput `pulumi:"auditTrailId"`
}

func (LookupAuditTrailOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuditTrailArgs)(nil)).Elem()
}

// A collection of values returned by getAuditTrail.
type LookupAuditTrailResultOutput struct{ *pulumi.OutputState }

func (LookupAuditTrailResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuditTrailResult)(nil)).Elem()
}

func (o LookupAuditTrailResultOutput) ToLookupAuditTrailResultOutput() LookupAuditTrailResultOutput {
	return o
}

func (o LookupAuditTrailResultOutput) ToLookupAuditTrailResultOutputWithContext(ctx context.Context) LookupAuditTrailResultOutput {
	return o
}

// The date from which the audit trail must start collecting data, in the format defined by RFC3339.
func (o LookupAuditTrailResultOutput) AuditCollectionStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.AuditCollectionStartTime }).(pulumi.StringOutput)
}

// The OCID of the  parent audit.
func (o LookupAuditTrailResultOutput) AuditProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.AuditProfileId }).(pulumi.StringOutput)
}

func (o LookupAuditTrailResultOutput) AuditTrailId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.AuditTrailId }).(pulumi.StringOutput)
}

// The OCID of the compartment that contains the audit trail and is the same as the compartment of the audit profile resource.
func (o LookupAuditTrailResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
func (o LookupAuditTrailResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The description of the audit trail.
func (o LookupAuditTrailResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.Description }).(pulumi.StringOutput)
}

// The display name of the audit trail.
func (o LookupAuditTrailResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o LookupAuditTrailResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the audit trail.
func (o LookupAuditTrailResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates if auto purge is enabled on the target database, which helps delete audit data in the target database every seven days so that the database's audit trail does not become too large.
func (o LookupAuditTrailResultOutput) IsAutoPurgeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) bool { return v.IsAutoPurgeEnabled }).(pulumi.BoolOutput)
}

// Details about the current state of the audit trail in Data Safe.
func (o LookupAuditTrailResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The secondary id assigned for the peer database registered with Data Safe.
func (o LookupAuditTrailResultOutput) PeerTargetDatabaseKey() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) int { return v.PeerTargetDatabaseKey }).(pulumi.IntOutput)
}

// The details of the audit trail purge job that ran on the "purgeJobTime".
func (o LookupAuditTrailResultOutput) PurgeJobDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.PurgeJobDetails }).(pulumi.StringOutput)
}

// The current status of the audit trail purge job.
func (o LookupAuditTrailResultOutput) PurgeJobStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.PurgeJobStatus }).(pulumi.StringOutput)
}

// The date and time of the last purge job, which deletes audit data in the target database every seven days so that the database's audit trail does not become too large. In the format defined by RFC3339.
func (o LookupAuditTrailResultOutput) PurgeJobTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.PurgeJobTime }).(pulumi.StringOutput)
}

func (o LookupAuditTrailResultOutput) ResumeTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) int { return v.ResumeTrigger }).(pulumi.IntOutput)
}

// The current state of the audit trail.
func (o LookupAuditTrailResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.State }).(pulumi.StringOutput)
}

// The current sub-state of the audit trail.
func (o LookupAuditTrailResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.Status }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupAuditTrailResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The OCID of the Data Safe target for which the audit trail is created.
func (o LookupAuditTrailResultOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.TargetId }).(pulumi.StringOutput)
}

// The date and time the audit trail was created, in the format defined by RFC3339.
func (o LookupAuditTrailResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time until when the audit events were collected from the target database by the Data Safe audit trail  collection process, in the format defined by RFC3339.
func (o LookupAuditTrailResultOutput) TimeLastCollected() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.TimeLastCollected }).(pulumi.StringOutput)
}

// The date and time the audit trail was updated, in the format defined by RFC3339.
func (o LookupAuditTrailResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// An audit trail location represents the source of audit records that provides documentary evidence of the sequence of activities in the target database.
func (o LookupAuditTrailResultOutput) TrailLocation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.TrailLocation }).(pulumi.StringOutput)
}

// The underlying source of unified audit trail.
func (o LookupAuditTrailResultOutput) TrailSource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.TrailSource }).(pulumi.StringOutput)
}

// The OCID of the workrequest for audit trail which collects audit records.
func (o LookupAuditTrailResultOutput) WorkRequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailResult) string { return v.WorkRequestId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAuditTrailResultOutput{})
}
