// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Discovery Analytics in Oracle Cloud Infrastructure Data Safe service.
//
// Gets consolidated discovery analytics data based on the specified query parameters.
// If CompartmentIdInSubtreeQueryParam is specified as true, the behaviour
// is equivalent to accessLevel "ACCESSIBLE" by default.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.GetDiscoveryAnalytics(ctx, &datasafe.GetDiscoveryAnalyticsArgs{
//				CompartmentId:          compartmentId,
//				CompartmentIdInSubtree: pulumi.BoolRef(discoveryAnalyticCompartmentIdInSubtree),
//				GroupBy:                pulumi.StringRef(discoveryAnalyticGroupBy),
//				IsCommon:               pulumi.BoolRef(discoveryAnalyticIsCommon),
//				SensitiveDataModelId:   pulumi.StringRef(testSensitiveDataModel.Id),
//				SensitiveTypeId:        pulumi.StringRef(testSensitiveType.Id),
//				TargetId:               pulumi.StringRef(testTarget.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDiscoveryAnalytics(ctx *pulumi.Context, args *GetDiscoveryAnalyticsArgs, opts ...pulumi.InvokeOption) (*GetDiscoveryAnalyticsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDiscoveryAnalyticsResult
	err := ctx.Invoke("oci:DataSafe/getDiscoveryAnalytics:getDiscoveryAnalytics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDiscoveryAnalytics.
type GetDiscoveryAnalyticsArgs struct {
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool                         `pulumi:"compartmentIdInSubtree"`
	Filters                []GetDiscoveryAnalyticsFilter `pulumi:"filters"`
	// Attribute by which the discovery analytics data should be grouped.
	GroupBy *string `pulumi:"groupBy"`
	// A filter to return only the common sensitive type resources. Common sensitive types belong to  library sensitive types which are frequently used to perform sensitive data discovery.
	IsCommon *bool `pulumi:"isCommon"`
	// A filter to return only the resources that match the specified sensitive data model OCID.
	SensitiveDataModelId *string `pulumi:"sensitiveDataModelId"`
	// A filter to return only items related to a specific sensitive type OCID.
	SensitiveTypeId *string `pulumi:"sensitiveTypeId"`
	// A filter to return only items related to a specific target OCID.
	TargetId *string `pulumi:"targetId"`
}

// A collection of values returned by getDiscoveryAnalytics.
type GetDiscoveryAnalyticsResult struct {
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool  `pulumi:"compartmentIdInSubtree"`
	// The list of discovery_analytics_collection.
	DiscoveryAnalyticsCollections []GetDiscoveryAnalyticsDiscoveryAnalyticsCollection `pulumi:"discoveryAnalyticsCollections"`
	Filters                       []GetDiscoveryAnalyticsFilter                       `pulumi:"filters"`
	GroupBy                       *string                                             `pulumi:"groupBy"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	IsCommon *bool  `pulumi:"isCommon"`
	// The OCID of the sensitive data model.
	SensitiveDataModelId *string `pulumi:"sensitiveDataModelId"`
	// The OCID of the sensitive type.
	SensitiveTypeId *string `pulumi:"sensitiveTypeId"`
	// The OCID of the target database.
	TargetId *string `pulumi:"targetId"`
}

func GetDiscoveryAnalyticsOutput(ctx *pulumi.Context, args GetDiscoveryAnalyticsOutputArgs, opts ...pulumi.InvokeOption) GetDiscoveryAnalyticsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDiscoveryAnalyticsResultOutput, error) {
			args := v.(GetDiscoveryAnalyticsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getDiscoveryAnalytics:getDiscoveryAnalytics", args, GetDiscoveryAnalyticsResultOutput{}, options).(GetDiscoveryAnalyticsResultOutput), nil
		}).(GetDiscoveryAnalyticsResultOutput)
}

// A collection of arguments for invoking getDiscoveryAnalytics.
type GetDiscoveryAnalyticsOutputArgs struct {
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput                   `pulumi:"compartmentIdInSubtree"`
	Filters                GetDiscoveryAnalyticsFilterArrayInput `pulumi:"filters"`
	// Attribute by which the discovery analytics data should be grouped.
	GroupBy pulumi.StringPtrInput `pulumi:"groupBy"`
	// A filter to return only the common sensitive type resources. Common sensitive types belong to  library sensitive types which are frequently used to perform sensitive data discovery.
	IsCommon pulumi.BoolPtrInput `pulumi:"isCommon"`
	// A filter to return only the resources that match the specified sensitive data model OCID.
	SensitiveDataModelId pulumi.StringPtrInput `pulumi:"sensitiveDataModelId"`
	// A filter to return only items related to a specific sensitive type OCID.
	SensitiveTypeId pulumi.StringPtrInput `pulumi:"sensitiveTypeId"`
	// A filter to return only items related to a specific target OCID.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (GetDiscoveryAnalyticsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiscoveryAnalyticsArgs)(nil)).Elem()
}

// A collection of values returned by getDiscoveryAnalytics.
type GetDiscoveryAnalyticsResultOutput struct{ *pulumi.OutputState }

func (GetDiscoveryAnalyticsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiscoveryAnalyticsResult)(nil)).Elem()
}

func (o GetDiscoveryAnalyticsResultOutput) ToGetDiscoveryAnalyticsResultOutput() GetDiscoveryAnalyticsResultOutput {
	return o
}

func (o GetDiscoveryAnalyticsResultOutput) ToGetDiscoveryAnalyticsResultOutputWithContext(ctx context.Context) GetDiscoveryAnalyticsResultOutput {
	return o
}

func (o GetDiscoveryAnalyticsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiscoveryAnalyticsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetDiscoveryAnalyticsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDiscoveryAnalyticsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// The list of discovery_analytics_collection.
func (o GetDiscoveryAnalyticsResultOutput) DiscoveryAnalyticsCollections() GetDiscoveryAnalyticsDiscoveryAnalyticsCollectionArrayOutput {
	return o.ApplyT(func(v GetDiscoveryAnalyticsResult) []GetDiscoveryAnalyticsDiscoveryAnalyticsCollection {
		return v.DiscoveryAnalyticsCollections
	}).(GetDiscoveryAnalyticsDiscoveryAnalyticsCollectionArrayOutput)
}

func (o GetDiscoveryAnalyticsResultOutput) Filters() GetDiscoveryAnalyticsFilterArrayOutput {
	return o.ApplyT(func(v GetDiscoveryAnalyticsResult) []GetDiscoveryAnalyticsFilter { return v.Filters }).(GetDiscoveryAnalyticsFilterArrayOutput)
}

func (o GetDiscoveryAnalyticsResultOutput) GroupBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDiscoveryAnalyticsResult) *string { return v.GroupBy }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDiscoveryAnalyticsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiscoveryAnalyticsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDiscoveryAnalyticsResultOutput) IsCommon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDiscoveryAnalyticsResult) *bool { return v.IsCommon }).(pulumi.BoolPtrOutput)
}

// The OCID of the sensitive data model.
func (o GetDiscoveryAnalyticsResultOutput) SensitiveDataModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDiscoveryAnalyticsResult) *string { return v.SensitiveDataModelId }).(pulumi.StringPtrOutput)
}

// The OCID of the sensitive type.
func (o GetDiscoveryAnalyticsResultOutput) SensitiveTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDiscoveryAnalyticsResult) *string { return v.SensitiveTypeId }).(pulumi.StringPtrOutput)
}

// The OCID of the target database.
func (o GetDiscoveryAnalyticsResultOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDiscoveryAnalyticsResult) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDiscoveryAnalyticsResultOutput{})
}
