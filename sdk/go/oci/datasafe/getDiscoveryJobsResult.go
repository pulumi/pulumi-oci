// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Discovery Jobs Result resource in Oracle Cloud Infrastructure Data Safe service.
//
// Gets the details of the specified discovery result.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetDiscoveryJobsResult(ctx, &datasafe.GetDiscoveryJobsResultArgs{
//				DiscoveryJobId: testDiscoveryJob.Id,
//				ResultKey:      discoveryJobsResultResultKey,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupDiscoveryJobsResult(ctx *pulumi.Context, args *LookupDiscoveryJobsResultArgs, opts ...pulumi.InvokeOption) (*LookupDiscoveryJobsResultResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDiscoveryJobsResultResult
	err := ctx.Invoke("oci:DataSafe/getDiscoveryJobsResult:getDiscoveryJobsResult", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDiscoveryJobsResult.
type LookupDiscoveryJobsResultArgs struct {
	// The OCID of the discovery job.
	DiscoveryJobId string `pulumi:"discoveryJobId"`
	// The unique key that identifies the discovery result.
	ResultKey string `pulumi:"resultKey"`
}

// A collection of values returned by getDiscoveryJobsResult.
type LookupDiscoveryJobsResultResult struct {
	// Unique keys identifying the columns that are application-level (non-dictionary) children of the sensitive column.
	AppDefinedChildColumnKeys []string `pulumi:"appDefinedChildColumnKeys"`
	// The name of the application. An application is an entity that is identified by a schema and stores sensitive information for that schema. Its value will be same as schemaName, if no value is passed.
	AppName string `pulumi:"appName"`
	// The name of the sensitive column.
	ColumnName string `pulumi:"columnName"`
	// The data type of the sensitive column.
	DataType string `pulumi:"dataType"`
	// Unique keys identifying the columns that are database-level (dictionary-defined) children of the sensitive column.
	DbDefinedChildColumnKeys []string `pulumi:"dbDefinedChildColumnKeys"`
	// The OCID of the discovery job.
	DiscoveryJobId string `pulumi:"discoveryJobId"`
	// The type of the discovery result. It can be one of the following three types: NEW: A new sensitive column in the target database that is not in the sensitive data model. DELETED: A column that is present in the sensitive data model but has been deleted from the target database. MODIFIED: A column that is present in the target database as well as the sensitive data model but some of its attributes have been modified.
	//
	// Deprecated: The 'oci_data_safe_discovery_jobs_result' resource has been deprecated. It is no longer supported.
	DiscoveryType string `pulumi:"discoveryType"`
	// The estimated number of data values the column has in the associated database.
	EstimatedDataValueCount string `pulumi:"estimatedDataValueCount"`
	Id                      string `pulumi:"id"`
	// Indicates whether the discovery result has been processed. You can update this attribute using the PatchDiscoveryJobResults operation to track whether the discovery result has already been processed and applied to the sensitive data model.
	IsResultApplied bool `pulumi:"isResultApplied"`
	// The unique key that identifies the discovery result.
	//
	// Deprecated: The 'oci_data_safe_discovery_jobs_result' resource has been deprecated. It is no longer supported.
	Key string `pulumi:"key"`
	// The attributes of a sensitive column that have been modified in the target database. It's populated only in the case of MODIFIED discovery results and shows the new values of the modified attributes.
	ModifiedAttributes []GetDiscoveryJobsResultModifiedAttribute `pulumi:"modifiedAttributes"`
	// The database object that contains the sensitive column.
	Object string `pulumi:"object"`
	// The type of the database object that contains the sensitive column.
	ObjectType string `pulumi:"objectType"`
	// Unique keys identifying the columns that are parents of the sensitive column. At present, it tracks a single parent only.
	ParentColumnKeys []string `pulumi:"parentColumnKeys"`
	// Specifies how to process the discovery result. It's set to NONE by default. Use the PatchDiscoveryJobResults operation to update this attribute. You can choose one of the following options: ACCEPT: To accept the discovery result and update the sensitive data model to reflect the changes. REJECT: To reject the discovery result so that it doesn't change the sensitive data model. INVALIDATE: To invalidate a newly discovered column. It adds the column to the sensitive data model but marks it as invalid. It helps track false positives and ensure that they aren't reported by future discovery jobs. After specifying the planned action, you can use the ApplyDiscoveryJobResults operation to automatically process the discovery results.
	PlannedAction string `pulumi:"plannedAction"`
	// The type of referential relationship the sensitive column has with its parent. NONE indicates that the sensitive column does not have a parent. DB_DEFINED indicates that the relationship is defined in the database dictionary. APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
	RelationType string `pulumi:"relationType"`
	ResultKey    string `pulumi:"resultKey"`
	// Original data values collected for the sensitive column from the associated database. Sample data helps review the column and ensure that it actually contains sensitive data. Note that sample data is retrieved by a data discovery job only if the isSampleDataCollectionEnabled attribute is set to true. At present, only one data value is collected per sensitive column.
	SampleDataValues []string `pulumi:"sampleDataValues"`
	// The database schema that contains the sensitive column.
	SchemaName string `pulumi:"schemaName"`
	// The unique key that identifies the sensitive column represented by the discovery result.
	SensitiveColumnkey string `pulumi:"sensitiveColumnkey"`
	// The OCID of the sensitive type associated with the sensitive column.
	SensitiveTypeId string `pulumi:"sensitiveTypeId"`
}

func LookupDiscoveryJobsResultOutput(ctx *pulumi.Context, args LookupDiscoveryJobsResultOutputArgs, opts ...pulumi.InvokeOption) LookupDiscoveryJobsResultResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDiscoveryJobsResultResult, error) {
			args := v.(LookupDiscoveryJobsResultArgs)
			r, err := LookupDiscoveryJobsResult(ctx, &args, opts...)
			var s LookupDiscoveryJobsResultResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDiscoveryJobsResultResultOutput)
}

// A collection of arguments for invoking getDiscoveryJobsResult.
type LookupDiscoveryJobsResultOutputArgs struct {
	// The OCID of the discovery job.
	DiscoveryJobId pulumi.StringInput `pulumi:"discoveryJobId"`
	// The unique key that identifies the discovery result.
	ResultKey pulumi.StringInput `pulumi:"resultKey"`
}

func (LookupDiscoveryJobsResultOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscoveryJobsResultArgs)(nil)).Elem()
}

// A collection of values returned by getDiscoveryJobsResult.
type LookupDiscoveryJobsResultResultOutput struct{ *pulumi.OutputState }

func (LookupDiscoveryJobsResultResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscoveryJobsResultResult)(nil)).Elem()
}

func (o LookupDiscoveryJobsResultResultOutput) ToLookupDiscoveryJobsResultResultOutput() LookupDiscoveryJobsResultResultOutput {
	return o
}

func (o LookupDiscoveryJobsResultResultOutput) ToLookupDiscoveryJobsResultResultOutputWithContext(ctx context.Context) LookupDiscoveryJobsResultResultOutput {
	return o
}

// Unique keys identifying the columns that are application-level (non-dictionary) children of the sensitive column.
func (o LookupDiscoveryJobsResultResultOutput) AppDefinedChildColumnKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) []string { return v.AppDefinedChildColumnKeys }).(pulumi.StringArrayOutput)
}

// The name of the application. An application is an entity that is identified by a schema and stores sensitive information for that schema. Its value will be same as schemaName, if no value is passed.
func (o LookupDiscoveryJobsResultResultOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.AppName }).(pulumi.StringOutput)
}

// The name of the sensitive column.
func (o LookupDiscoveryJobsResultResultOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.ColumnName }).(pulumi.StringOutput)
}

// The data type of the sensitive column.
func (o LookupDiscoveryJobsResultResultOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.DataType }).(pulumi.StringOutput)
}

// Unique keys identifying the columns that are database-level (dictionary-defined) children of the sensitive column.
func (o LookupDiscoveryJobsResultResultOutput) DbDefinedChildColumnKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) []string { return v.DbDefinedChildColumnKeys }).(pulumi.StringArrayOutput)
}

// The OCID of the discovery job.
func (o LookupDiscoveryJobsResultResultOutput) DiscoveryJobId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.DiscoveryJobId }).(pulumi.StringOutput)
}

// The type of the discovery result. It can be one of the following three types: NEW: A new sensitive column in the target database that is not in the sensitive data model. DELETED: A column that is present in the sensitive data model but has been deleted from the target database. MODIFIED: A column that is present in the target database as well as the sensitive data model but some of its attributes have been modified.
//
// Deprecated: The 'oci_data_safe_discovery_jobs_result' resource has been deprecated. It is no longer supported.
func (o LookupDiscoveryJobsResultResultOutput) DiscoveryType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.DiscoveryType }).(pulumi.StringOutput)
}

// The estimated number of data values the column has in the associated database.
func (o LookupDiscoveryJobsResultResultOutput) EstimatedDataValueCount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.EstimatedDataValueCount }).(pulumi.StringOutput)
}

func (o LookupDiscoveryJobsResultResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the discovery result has been processed. You can update this attribute using the PatchDiscoveryJobResults operation to track whether the discovery result has already been processed and applied to the sensitive data model.
func (o LookupDiscoveryJobsResultResultOutput) IsResultApplied() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) bool { return v.IsResultApplied }).(pulumi.BoolOutput)
}

// The unique key that identifies the discovery result.
//
// Deprecated: The 'oci_data_safe_discovery_jobs_result' resource has been deprecated. It is no longer supported.
func (o LookupDiscoveryJobsResultResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.Key }).(pulumi.StringOutput)
}

// The attributes of a sensitive column that have been modified in the target database. It's populated only in the case of MODIFIED discovery results and shows the new values of the modified attributes.
func (o LookupDiscoveryJobsResultResultOutput) ModifiedAttributes() GetDiscoveryJobsResultModifiedAttributeArrayOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) []GetDiscoveryJobsResultModifiedAttribute {
		return v.ModifiedAttributes
	}).(GetDiscoveryJobsResultModifiedAttributeArrayOutput)
}

// The database object that contains the sensitive column.
func (o LookupDiscoveryJobsResultResultOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.Object }).(pulumi.StringOutput)
}

// The type of the database object that contains the sensitive column.
func (o LookupDiscoveryJobsResultResultOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Unique keys identifying the columns that are parents of the sensitive column. At present, it tracks a single parent only.
func (o LookupDiscoveryJobsResultResultOutput) ParentColumnKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) []string { return v.ParentColumnKeys }).(pulumi.StringArrayOutput)
}

// Specifies how to process the discovery result. It's set to NONE by default. Use the PatchDiscoveryJobResults operation to update this attribute. You can choose one of the following options: ACCEPT: To accept the discovery result and update the sensitive data model to reflect the changes. REJECT: To reject the discovery result so that it doesn't change the sensitive data model. INVALIDATE: To invalidate a newly discovered column. It adds the column to the sensitive data model but marks it as invalid. It helps track false positives and ensure that they aren't reported by future discovery jobs. After specifying the planned action, you can use the ApplyDiscoveryJobResults operation to automatically process the discovery results.
func (o LookupDiscoveryJobsResultResultOutput) PlannedAction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.PlannedAction }).(pulumi.StringOutput)
}

// The type of referential relationship the sensitive column has with its parent. NONE indicates that the sensitive column does not have a parent. DB_DEFINED indicates that the relationship is defined in the database dictionary. APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
func (o LookupDiscoveryJobsResultResultOutput) RelationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.RelationType }).(pulumi.StringOutput)
}

func (o LookupDiscoveryJobsResultResultOutput) ResultKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.ResultKey }).(pulumi.StringOutput)
}

// Original data values collected for the sensitive column from the associated database. Sample data helps review the column and ensure that it actually contains sensitive data. Note that sample data is retrieved by a data discovery job only if the isSampleDataCollectionEnabled attribute is set to true. At present, only one data value is collected per sensitive column.
func (o LookupDiscoveryJobsResultResultOutput) SampleDataValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) []string { return v.SampleDataValues }).(pulumi.StringArrayOutput)
}

// The database schema that contains the sensitive column.
func (o LookupDiscoveryJobsResultResultOutput) SchemaName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.SchemaName }).(pulumi.StringOutput)
}

// The unique key that identifies the sensitive column represented by the discovery result.
func (o LookupDiscoveryJobsResultResultOutput) SensitiveColumnkey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.SensitiveColumnkey }).(pulumi.StringOutput)
}

// The OCID of the sensitive type associated with the sensitive column.
func (o LookupDiscoveryJobsResultResultOutput) SensitiveTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryJobsResultResult) string { return v.SensitiveTypeId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDiscoveryJobsResultResultOutput{})
}
