// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of List User Grants in Oracle Cloud Infrastructure Data Safe service.
//
// Gets a list of grants for a particular user in the specified user assessment. A user grant contains details such as the
// privilege name, type, category, and depth level. The depth level indicates how deep in the hierarchy of roles granted to
// roles a privilege grant is. The userKey in this operation is a system-generated identifier. Perform the operation ListUsers
// to get the userKey for a particular user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.GetListUserGrants(ctx, &datasafe.GetListUserGrantsArgs{
//				UserAssessmentId:               testUserAssessment.Id,
//				UserKey:                        listUserGrantUserKey,
//				DepthLevel:                     pulumi.IntRef(listUserGrantDepthLevel),
//				DepthLevelGreaterThanOrEqualTo: pulumi.IntRef(listUserGrantDepthLevelGreaterThanOrEqualTo),
//				DepthLevelLessThan:             pulumi.IntRef(listUserGrantDepthLevelLessThan),
//				GrantKey:                       pulumi.StringRef(listUserGrantGrantKey),
//				GrantName:                      pulumi.StringRef(listUserGrantGrantName),
//				PrivilegeCategory:              pulumi.StringRef(listUserGrantPrivilegeCategory),
//				PrivilegeType:                  pulumi.StringRef(listUserGrantPrivilegeType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetListUserGrants(ctx *pulumi.Context, args *GetListUserGrantsArgs, opts ...pulumi.InvokeOption) (*GetListUserGrantsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetListUserGrantsResult
	err := ctx.Invoke("oci:DataSafe/getListUserGrants:getListUserGrants", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getListUserGrants.
type GetListUserGrantsArgs struct {
	// A filter to return only items that match the specified user grant depth level.
	DepthLevel *int `pulumi:"depthLevel"`
	// A filter to return only items that are at a level greater than or equal to the specified user grant depth level.
	DepthLevelGreaterThanOrEqualTo *int `pulumi:"depthLevelGreaterThanOrEqualTo"`
	// A filter to return only items that are at a level less than the specified user grant depth level.
	DepthLevelLessThan *int                      `pulumi:"depthLevelLessThan"`
	Filters            []GetListUserGrantsFilter `pulumi:"filters"`
	// A filter to return only items that match the specified user grant key.
	GrantKey *string `pulumi:"grantKey"`
	// A filter to return only items that match the specified user grant name.
	GrantName *string `pulumi:"grantName"`
	// A filter to return only items that match the specified user privilege category.
	PrivilegeCategory *string `pulumi:"privilegeCategory"`
	// A filter to return only items that match the specified privilege grant type.
	PrivilegeType *string `pulumi:"privilegeType"`
	// The OCID of the user assessment.
	UserAssessmentId string `pulumi:"userAssessmentId"`
	// The unique user key. This is a system-generated identifier. ListUsers gets the user key for a user.
	UserKey string `pulumi:"userKey"`
}

// A collection of values returned by getListUserGrants.
type GetListUserGrantsResult struct {
	// The grant depth level of the indirect grant. An indirectly granted role/privilege is granted to the user through another role. The depth level indicates how deep a privilege is within the grant hierarchy.
	DepthLevel                     *int                      `pulumi:"depthLevel"`
	DepthLevelGreaterThanOrEqualTo *int                      `pulumi:"depthLevelGreaterThanOrEqualTo"`
	DepthLevelLessThan             *int                      `pulumi:"depthLevelLessThan"`
	Filters                        []GetListUserGrantsFilter `pulumi:"filters"`
	GrantKey                       *string                   `pulumi:"grantKey"`
	// The name of a user grant.
	GrantName *string `pulumi:"grantName"`
	// The list of grants.
	Grants []GetListUserGrantsGrant `pulumi:"grants"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The privilege category.
	PrivilegeCategory *string `pulumi:"privilegeCategory"`
	// The type of a user grant.
	PrivilegeType    *string `pulumi:"privilegeType"`
	UserAssessmentId string  `pulumi:"userAssessmentId"`
	UserKey          string  `pulumi:"userKey"`
}

func GetListUserGrantsOutput(ctx *pulumi.Context, args GetListUserGrantsOutputArgs, opts ...pulumi.InvokeOption) GetListUserGrantsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetListUserGrantsResultOutput, error) {
			args := v.(GetListUserGrantsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getListUserGrants:getListUserGrants", args, GetListUserGrantsResultOutput{}, options).(GetListUserGrantsResultOutput), nil
		}).(GetListUserGrantsResultOutput)
}

// A collection of arguments for invoking getListUserGrants.
type GetListUserGrantsOutputArgs struct {
	// A filter to return only items that match the specified user grant depth level.
	DepthLevel pulumi.IntPtrInput `pulumi:"depthLevel"`
	// A filter to return only items that are at a level greater than or equal to the specified user grant depth level.
	DepthLevelGreaterThanOrEqualTo pulumi.IntPtrInput `pulumi:"depthLevelGreaterThanOrEqualTo"`
	// A filter to return only items that are at a level less than the specified user grant depth level.
	DepthLevelLessThan pulumi.IntPtrInput                `pulumi:"depthLevelLessThan"`
	Filters            GetListUserGrantsFilterArrayInput `pulumi:"filters"`
	// A filter to return only items that match the specified user grant key.
	GrantKey pulumi.StringPtrInput `pulumi:"grantKey"`
	// A filter to return only items that match the specified user grant name.
	GrantName pulumi.StringPtrInput `pulumi:"grantName"`
	// A filter to return only items that match the specified user privilege category.
	PrivilegeCategory pulumi.StringPtrInput `pulumi:"privilegeCategory"`
	// A filter to return only items that match the specified privilege grant type.
	PrivilegeType pulumi.StringPtrInput `pulumi:"privilegeType"`
	// The OCID of the user assessment.
	UserAssessmentId pulumi.StringInput `pulumi:"userAssessmentId"`
	// The unique user key. This is a system-generated identifier. ListUsers gets the user key for a user.
	UserKey pulumi.StringInput `pulumi:"userKey"`
}

func (GetListUserGrantsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListUserGrantsArgs)(nil)).Elem()
}

// A collection of values returned by getListUserGrants.
type GetListUserGrantsResultOutput struct{ *pulumi.OutputState }

func (GetListUserGrantsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListUserGrantsResult)(nil)).Elem()
}

func (o GetListUserGrantsResultOutput) ToGetListUserGrantsResultOutput() GetListUserGrantsResultOutput {
	return o
}

func (o GetListUserGrantsResultOutput) ToGetListUserGrantsResultOutputWithContext(ctx context.Context) GetListUserGrantsResultOutput {
	return o
}

// The grant depth level of the indirect grant. An indirectly granted role/privilege is granted to the user through another role. The depth level indicates how deep a privilege is within the grant hierarchy.
func (o GetListUserGrantsResultOutput) DepthLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) *int { return v.DepthLevel }).(pulumi.IntPtrOutput)
}

func (o GetListUserGrantsResultOutput) DepthLevelGreaterThanOrEqualTo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) *int { return v.DepthLevelGreaterThanOrEqualTo }).(pulumi.IntPtrOutput)
}

func (o GetListUserGrantsResultOutput) DepthLevelLessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) *int { return v.DepthLevelLessThan }).(pulumi.IntPtrOutput)
}

func (o GetListUserGrantsResultOutput) Filters() GetListUserGrantsFilterArrayOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) []GetListUserGrantsFilter { return v.Filters }).(GetListUserGrantsFilterArrayOutput)
}

func (o GetListUserGrantsResultOutput) GrantKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) *string { return v.GrantKey }).(pulumi.StringPtrOutput)
}

// The name of a user grant.
func (o GetListUserGrantsResultOutput) GrantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) *string { return v.GrantName }).(pulumi.StringPtrOutput)
}

// The list of grants.
func (o GetListUserGrantsResultOutput) Grants() GetListUserGrantsGrantArrayOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) []GetListUserGrantsGrant { return v.Grants }).(GetListUserGrantsGrantArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetListUserGrantsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The privilege category.
func (o GetListUserGrantsResultOutput) PrivilegeCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) *string { return v.PrivilegeCategory }).(pulumi.StringPtrOutput)
}

// The type of a user grant.
func (o GetListUserGrantsResultOutput) PrivilegeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) *string { return v.PrivilegeType }).(pulumi.StringPtrOutput)
}

func (o GetListUserGrantsResultOutput) UserAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) string { return v.UserAssessmentId }).(pulumi.StringOutput)
}

func (o GetListUserGrantsResultOutput) UserKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetListUserGrantsResult) string { return v.UserKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetListUserGrantsResultOutput{})
}
