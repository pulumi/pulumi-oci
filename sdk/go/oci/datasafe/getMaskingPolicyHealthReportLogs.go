// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Masking Policy Health Report Logs in Oracle Cloud Infrastructure Data Safe service.
//
// Gets a list of errors and warnings from a masking policy health check.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetMaskingPolicyHealthReportLogs(ctx, &datasafe.GetMaskingPolicyHealthReportLogsArgs{
//				MaskingPolicyHealthReportId: testMaskingPolicyHealthReport.Id,
//				MessageType:                 pulumi.StringRef(maskingPolicyHealthReportLogMessageType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMaskingPolicyHealthReportLogs(ctx *pulumi.Context, args *GetMaskingPolicyHealthReportLogsArgs, opts ...pulumi.InvokeOption) (*GetMaskingPolicyHealthReportLogsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMaskingPolicyHealthReportLogsResult
	err := ctx.Invoke("oci:DataSafe/getMaskingPolicyHealthReportLogs:getMaskingPolicyHealthReportLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMaskingPolicyHealthReportLogs.
type GetMaskingPolicyHealthReportLogsArgs struct {
	Filters []GetMaskingPolicyHealthReportLogsFilter `pulumi:"filters"`
	// The OCID of the masking health report.
	MaskingPolicyHealthReportId string `pulumi:"maskingPolicyHealthReportId"`
	// A filter to return only the resources that match the specified log message type.
	MessageType *string `pulumi:"messageType"`
}

// A collection of values returned by getMaskingPolicyHealthReportLogs.
type GetMaskingPolicyHealthReportLogsResult struct {
	Filters []GetMaskingPolicyHealthReportLogsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                          string `pulumi:"id"`
	MaskingPolicyHealthReportId string `pulumi:"maskingPolicyHealthReportId"`
	// The list of masking_policy_health_report_log_collection.
	MaskingPolicyHealthReportLogCollections []GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollection `pulumi:"maskingPolicyHealthReportLogCollections"`
	// The log entry type.
	MessageType *string `pulumi:"messageType"`
}

func GetMaskingPolicyHealthReportLogsOutput(ctx *pulumi.Context, args GetMaskingPolicyHealthReportLogsOutputArgs, opts ...pulumi.InvokeOption) GetMaskingPolicyHealthReportLogsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMaskingPolicyHealthReportLogsResult, error) {
			args := v.(GetMaskingPolicyHealthReportLogsArgs)
			r, err := GetMaskingPolicyHealthReportLogs(ctx, &args, opts...)
			var s GetMaskingPolicyHealthReportLogsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMaskingPolicyHealthReportLogsResultOutput)
}

// A collection of arguments for invoking getMaskingPolicyHealthReportLogs.
type GetMaskingPolicyHealthReportLogsOutputArgs struct {
	Filters GetMaskingPolicyHealthReportLogsFilterArrayInput `pulumi:"filters"`
	// The OCID of the masking health report.
	MaskingPolicyHealthReportId pulumi.StringInput `pulumi:"maskingPolicyHealthReportId"`
	// A filter to return only the resources that match the specified log message type.
	MessageType pulumi.StringPtrInput `pulumi:"messageType"`
}

func (GetMaskingPolicyHealthReportLogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingPolicyHealthReportLogsArgs)(nil)).Elem()
}

// A collection of values returned by getMaskingPolicyHealthReportLogs.
type GetMaskingPolicyHealthReportLogsResultOutput struct{ *pulumi.OutputState }

func (GetMaskingPolicyHealthReportLogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingPolicyHealthReportLogsResult)(nil)).Elem()
}

func (o GetMaskingPolicyHealthReportLogsResultOutput) ToGetMaskingPolicyHealthReportLogsResultOutput() GetMaskingPolicyHealthReportLogsResultOutput {
	return o
}

func (o GetMaskingPolicyHealthReportLogsResultOutput) ToGetMaskingPolicyHealthReportLogsResultOutputWithContext(ctx context.Context) GetMaskingPolicyHealthReportLogsResultOutput {
	return o
}

func (o GetMaskingPolicyHealthReportLogsResultOutput) Filters() GetMaskingPolicyHealthReportLogsFilterArrayOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportLogsResult) []GetMaskingPolicyHealthReportLogsFilter {
		return v.Filters
	}).(GetMaskingPolicyHealthReportLogsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMaskingPolicyHealthReportLogsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportLogsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMaskingPolicyHealthReportLogsResultOutput) MaskingPolicyHealthReportId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportLogsResult) string { return v.MaskingPolicyHealthReportId }).(pulumi.StringOutput)
}

// The list of masking_policy_health_report_log_collection.
func (o GetMaskingPolicyHealthReportLogsResultOutput) MaskingPolicyHealthReportLogCollections() GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollectionArrayOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportLogsResult) []GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollection {
		return v.MaskingPolicyHealthReportLogCollections
	}).(GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollectionArrayOutput)
}

// The log entry type.
func (o GetMaskingPolicyHealthReportLogsResultOutput) MessageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportLogsResult) *string { return v.MessageType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMaskingPolicyHealthReportLogsResultOutput{})
}
