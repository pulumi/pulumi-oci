// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Masking Policy Health Reports in Oracle Cloud Infrastructure Data Safe service.
//
// Gets a list of masking policy health reports based on the specified query parameters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetMaskingPolicyHealthReports(ctx, &datasafe.GetMaskingPolicyHealthReportsArgs{
//				CompartmentId:               compartmentId,
//				AccessLevel:                 pulumi.StringRef(maskingPolicyHealthReportAccessLevel),
//				CompartmentIdInSubtree:      pulumi.BoolRef(maskingPolicyHealthReportCompartmentIdInSubtree),
//				DisplayName:                 pulumi.StringRef(maskingPolicyHealthReportDisplayName),
//				MaskingPolicyHealthReportId: pulumi.StringRef(testMaskingPolicyHealthReport.Id),
//				MaskingPolicyId:             pulumi.StringRef(testMaskingPolicy.Id),
//				State:                       pulumi.StringRef(maskingPolicyHealthReportState),
//				TargetId:                    pulumi.StringRef(testTarget.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMaskingPolicyHealthReports(ctx *pulumi.Context, args *GetMaskingPolicyHealthReportsArgs, opts ...pulumi.InvokeOption) (*GetMaskingPolicyHealthReportsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMaskingPolicyHealthReportsResult
	err := ctx.Invoke("oci:DataSafe/getMaskingPolicyHealthReports:getMaskingPolicyHealthReports", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMaskingPolicyHealthReports.
type GetMaskingPolicyHealthReportsArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// A filter to return only resources that match the specified display name.
	DisplayName *string                               `pulumi:"displayName"`
	Filters     []GetMaskingPolicyHealthReportsFilter `pulumi:"filters"`
	// A filter to return only the resources that match the specified masking policy health report OCID.
	MaskingPolicyHealthReportId *string `pulumi:"maskingPolicyHealthReportId"`
	// A filter to return only the resources that match the specified masking policy OCID.
	MaskingPolicyId *string `pulumi:"maskingPolicyId"`
	// A filter to return only the resources that match the specified lifecycle states.
	State *string `pulumi:"state"`
	// A filter to return only items related to a specific target OCID.
	TargetId *string `pulumi:"targetId"`
}

// A collection of values returned by getMaskingPolicyHealthReports.
type GetMaskingPolicyHealthReportsResult struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// The OCID of the compartment that contains the health report.
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool  `pulumi:"compartmentIdInSubtree"`
	// The display name of the health report.
	DisplayName *string                               `pulumi:"displayName"`
	Filters     []GetMaskingPolicyHealthReportsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of masking_policy_health_report_collection.
	MaskingPolicyHealthReportCollections []GetMaskingPolicyHealthReportsMaskingPolicyHealthReportCollection `pulumi:"maskingPolicyHealthReportCollections"`
	MaskingPolicyHealthReportId          *string                                                            `pulumi:"maskingPolicyHealthReportId"`
	// The OCID of the masking policy.
	MaskingPolicyId *string `pulumi:"maskingPolicyId"`
	// The current state of the health report.
	State *string `pulumi:"state"`
	// The OCID of the target database for which this report was created.
	TargetId *string `pulumi:"targetId"`
}

func GetMaskingPolicyHealthReportsOutput(ctx *pulumi.Context, args GetMaskingPolicyHealthReportsOutputArgs, opts ...pulumi.InvokeOption) GetMaskingPolicyHealthReportsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMaskingPolicyHealthReportsResult, error) {
			args := v.(GetMaskingPolicyHealthReportsArgs)
			r, err := GetMaskingPolicyHealthReports(ctx, &args, opts...)
			var s GetMaskingPolicyHealthReportsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMaskingPolicyHealthReportsResultOutput)
}

// A collection of arguments for invoking getMaskingPolicyHealthReports.
type GetMaskingPolicyHealthReportsOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// A filter to return only resources that match the specified display name.
	DisplayName pulumi.StringPtrInput                         `pulumi:"displayName"`
	Filters     GetMaskingPolicyHealthReportsFilterArrayInput `pulumi:"filters"`
	// A filter to return only the resources that match the specified masking policy health report OCID.
	MaskingPolicyHealthReportId pulumi.StringPtrInput `pulumi:"maskingPolicyHealthReportId"`
	// A filter to return only the resources that match the specified masking policy OCID.
	MaskingPolicyId pulumi.StringPtrInput `pulumi:"maskingPolicyId"`
	// A filter to return only the resources that match the specified lifecycle states.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return only items related to a specific target OCID.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (GetMaskingPolicyHealthReportsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingPolicyHealthReportsArgs)(nil)).Elem()
}

// A collection of values returned by getMaskingPolicyHealthReports.
type GetMaskingPolicyHealthReportsResultOutput struct{ *pulumi.OutputState }

func (GetMaskingPolicyHealthReportsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingPolicyHealthReportsResult)(nil)).Elem()
}

func (o GetMaskingPolicyHealthReportsResultOutput) ToGetMaskingPolicyHealthReportsResultOutput() GetMaskingPolicyHealthReportsResultOutput {
	return o
}

func (o GetMaskingPolicyHealthReportsResultOutput) ToGetMaskingPolicyHealthReportsResultOutputWithContext(ctx context.Context) GetMaskingPolicyHealthReportsResultOutput {
	return o
}

func (o GetMaskingPolicyHealthReportsResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportsResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment that contains the health report.
func (o GetMaskingPolicyHealthReportsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetMaskingPolicyHealthReportsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// The display name of the health report.
func (o GetMaskingPolicyHealthReportsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetMaskingPolicyHealthReportsResultOutput) Filters() GetMaskingPolicyHealthReportsFilterArrayOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportsResult) []GetMaskingPolicyHealthReportsFilter { return v.Filters }).(GetMaskingPolicyHealthReportsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMaskingPolicyHealthReportsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of masking_policy_health_report_collection.
func (o GetMaskingPolicyHealthReportsResultOutput) MaskingPolicyHealthReportCollections() GetMaskingPolicyHealthReportsMaskingPolicyHealthReportCollectionArrayOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportsResult) []GetMaskingPolicyHealthReportsMaskingPolicyHealthReportCollection {
		return v.MaskingPolicyHealthReportCollections
	}).(GetMaskingPolicyHealthReportsMaskingPolicyHealthReportCollectionArrayOutput)
}

func (o GetMaskingPolicyHealthReportsResultOutput) MaskingPolicyHealthReportId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportsResult) *string { return v.MaskingPolicyHealthReportId }).(pulumi.StringPtrOutput)
}

// The OCID of the masking policy.
func (o GetMaskingPolicyHealthReportsResultOutput) MaskingPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportsResult) *string { return v.MaskingPolicyId }).(pulumi.StringPtrOutput)
}

// The current state of the health report.
func (o GetMaskingPolicyHealthReportsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The OCID of the target database for which this report was created.
func (o GetMaskingPolicyHealthReportsResultOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingPolicyHealthReportsResult) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMaskingPolicyHealthReportsResultOutput{})
}
