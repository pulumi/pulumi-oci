// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Masking Report Masking Errors in Oracle Cloud Infrastructure Data Safe service.
//
// Gets a list of masking errors in a masking run based on the specified query parameters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.GetMaskingReportMaskingErrors(ctx, &datasafe.GetMaskingReportMaskingErrorsArgs{
//				MaskingReportId: testMaskingReport.Id,
//				StepName:        pulumi.StringRef(maskingReportMaskingErrorStepName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMaskingReportMaskingErrors(ctx *pulumi.Context, args *GetMaskingReportMaskingErrorsArgs, opts ...pulumi.InvokeOption) (*GetMaskingReportMaskingErrorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMaskingReportMaskingErrorsResult
	err := ctx.Invoke("oci:DataSafe/getMaskingReportMaskingErrors:getMaskingReportMaskingErrors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMaskingReportMaskingErrors.
type GetMaskingReportMaskingErrorsArgs struct {
	Filters []GetMaskingReportMaskingErrorsFilter `pulumi:"filters"`
	// The OCID of the masking report.
	MaskingReportId string `pulumi:"maskingReportId"`
	// A filter to return only masking errors that match the specified step name.
	StepName *string `pulumi:"stepName"`
}

// A collection of values returned by getMaskingReportMaskingErrors.
type GetMaskingReportMaskingErrorsResult struct {
	Filters []GetMaskingReportMaskingErrorsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of masking_error_collection.
	MaskingErrorCollections []GetMaskingReportMaskingErrorsMaskingErrorCollection `pulumi:"maskingErrorCollections"`
	MaskingReportId         string                                                `pulumi:"maskingReportId"`
	// The stepName of the masking error.
	StepName *string `pulumi:"stepName"`
}

func GetMaskingReportMaskingErrorsOutput(ctx *pulumi.Context, args GetMaskingReportMaskingErrorsOutputArgs, opts ...pulumi.InvokeOption) GetMaskingReportMaskingErrorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMaskingReportMaskingErrorsResultOutput, error) {
			args := v.(GetMaskingReportMaskingErrorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getMaskingReportMaskingErrors:getMaskingReportMaskingErrors", args, GetMaskingReportMaskingErrorsResultOutput{}, options).(GetMaskingReportMaskingErrorsResultOutput), nil
		}).(GetMaskingReportMaskingErrorsResultOutput)
}

// A collection of arguments for invoking getMaskingReportMaskingErrors.
type GetMaskingReportMaskingErrorsOutputArgs struct {
	Filters GetMaskingReportMaskingErrorsFilterArrayInput `pulumi:"filters"`
	// The OCID of the masking report.
	MaskingReportId pulumi.StringInput `pulumi:"maskingReportId"`
	// A filter to return only masking errors that match the specified step name.
	StepName pulumi.StringPtrInput `pulumi:"stepName"`
}

func (GetMaskingReportMaskingErrorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingReportMaskingErrorsArgs)(nil)).Elem()
}

// A collection of values returned by getMaskingReportMaskingErrors.
type GetMaskingReportMaskingErrorsResultOutput struct{ *pulumi.OutputState }

func (GetMaskingReportMaskingErrorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingReportMaskingErrorsResult)(nil)).Elem()
}

func (o GetMaskingReportMaskingErrorsResultOutput) ToGetMaskingReportMaskingErrorsResultOutput() GetMaskingReportMaskingErrorsResultOutput {
	return o
}

func (o GetMaskingReportMaskingErrorsResultOutput) ToGetMaskingReportMaskingErrorsResultOutputWithContext(ctx context.Context) GetMaskingReportMaskingErrorsResultOutput {
	return o
}

func (o GetMaskingReportMaskingErrorsResultOutput) Filters() GetMaskingReportMaskingErrorsFilterArrayOutput {
	return o.ApplyT(func(v GetMaskingReportMaskingErrorsResult) []GetMaskingReportMaskingErrorsFilter { return v.Filters }).(GetMaskingReportMaskingErrorsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMaskingReportMaskingErrorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingReportMaskingErrorsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of masking_error_collection.
func (o GetMaskingReportMaskingErrorsResultOutput) MaskingErrorCollections() GetMaskingReportMaskingErrorsMaskingErrorCollectionArrayOutput {
	return o.ApplyT(func(v GetMaskingReportMaskingErrorsResult) []GetMaskingReportMaskingErrorsMaskingErrorCollection {
		return v.MaskingErrorCollections
	}).(GetMaskingReportMaskingErrorsMaskingErrorCollectionArrayOutput)
}

func (o GetMaskingReportMaskingErrorsResultOutput) MaskingReportId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingReportMaskingErrorsResult) string { return v.MaskingReportId }).(pulumi.StringOutput)
}

// The stepName of the masking error.
func (o GetMaskingReportMaskingErrorsResultOutput) StepName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingReportMaskingErrorsResult) *string { return v.StepName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMaskingReportMaskingErrorsResultOutput{})
}
