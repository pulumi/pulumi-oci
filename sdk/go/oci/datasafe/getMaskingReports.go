// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Masking Reports in Oracle Cloud Infrastructure Data Safe service.
//
// Gets a list of masking reports based on the specified query parameters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetMaskingReports(ctx, &datasafe.GetMaskingReportsArgs{
//				CompartmentId:          _var.Compartment_id,
//				AccessLevel:            pulumi.StringRef(_var.Masking_report_access_level),
//				CompartmentIdInSubtree: pulumi.BoolRef(_var.Masking_report_compartment_id_in_subtree),
//				MaskingPolicyId:        pulumi.StringRef(oci_data_safe_masking_policy.Test_masking_policy.Id),
//				TargetId:               pulumi.StringRef(oci_cloud_guard_target.Test_target.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMaskingReports(ctx *pulumi.Context, args *GetMaskingReportsArgs, opts ...pulumi.InvokeOption) (*GetMaskingReportsResult, error) {
	var rv GetMaskingReportsResult
	err := ctx.Invoke("oci:DataSafe/getMaskingReports:getMaskingReports", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMaskingReports.
type GetMaskingReportsArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool                     `pulumi:"compartmentIdInSubtree"`
	Filters                []GetMaskingReportsFilter `pulumi:"filters"`
	// A filter to return only the resources that match the specified masking policy OCID.
	MaskingPolicyId *string `pulumi:"maskingPolicyId"`
	// A filter to return only items related to a specific target OCID.
	TargetId *string `pulumi:"targetId"`
}

// A collection of values returned by getMaskingReports.
type GetMaskingReportsResult struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// The OCID of the compartment that contains the masking report.
	CompartmentId          string                    `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool                     `pulumi:"compartmentIdInSubtree"`
	Filters                []GetMaskingReportsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the masking policy used.
	MaskingPolicyId *string `pulumi:"maskingPolicyId"`
	// The list of masking_report_collection.
	MaskingReportCollections []GetMaskingReportsMaskingReportCollection `pulumi:"maskingReportCollections"`
	// The OCID of the target database masked.
	TargetId *string `pulumi:"targetId"`
}

func GetMaskingReportsOutput(ctx *pulumi.Context, args GetMaskingReportsOutputArgs, opts ...pulumi.InvokeOption) GetMaskingReportsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMaskingReportsResult, error) {
			args := v.(GetMaskingReportsArgs)
			r, err := GetMaskingReports(ctx, &args, opts...)
			var s GetMaskingReportsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMaskingReportsResultOutput)
}

// A collection of arguments for invoking getMaskingReports.
type GetMaskingReportsOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput               `pulumi:"compartmentIdInSubtree"`
	Filters                GetMaskingReportsFilterArrayInput `pulumi:"filters"`
	// A filter to return only the resources that match the specified masking policy OCID.
	MaskingPolicyId pulumi.StringPtrInput `pulumi:"maskingPolicyId"`
	// A filter to return only items related to a specific target OCID.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (GetMaskingReportsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingReportsArgs)(nil)).Elem()
}

// A collection of values returned by getMaskingReports.
type GetMaskingReportsResultOutput struct{ *pulumi.OutputState }

func (GetMaskingReportsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingReportsResult)(nil)).Elem()
}

func (o GetMaskingReportsResultOutput) ToGetMaskingReportsResultOutput() GetMaskingReportsResultOutput {
	return o
}

func (o GetMaskingReportsResultOutput) ToGetMaskingReportsResultOutputWithContext(ctx context.Context) GetMaskingReportsResultOutput {
	return o
}

func (o GetMaskingReportsResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingReportsResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment that contains the masking report.
func (o GetMaskingReportsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingReportsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetMaskingReportsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMaskingReportsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetMaskingReportsResultOutput) Filters() GetMaskingReportsFilterArrayOutput {
	return o.ApplyT(func(v GetMaskingReportsResult) []GetMaskingReportsFilter { return v.Filters }).(GetMaskingReportsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMaskingReportsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingReportsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the masking policy used.
func (o GetMaskingReportsResultOutput) MaskingPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingReportsResult) *string { return v.MaskingPolicyId }).(pulumi.StringPtrOutput)
}

// The list of masking_report_collection.
func (o GetMaskingReportsResultOutput) MaskingReportCollections() GetMaskingReportsMaskingReportCollectionArrayOutput {
	return o.ApplyT(func(v GetMaskingReportsResult) []GetMaskingReportsMaskingReportCollection {
		return v.MaskingReportCollections
	}).(GetMaskingReportsMaskingReportCollectionArrayOutput)
}

// The OCID of the target database masked.
func (o GetMaskingReportsResultOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingReportsResult) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMaskingReportsResultOutput{})
}
