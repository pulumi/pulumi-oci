// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Masking Reports Masked Column resource in Oracle Cloud Infrastructure Data Safe service.
//
// Gets a list of masked columns present in the specified masking report and based on the specified query parameters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetMaskingReportsMaskedColumn(ctx, &datasafe.GetMaskingReportsMaskedColumnArgs{
//				MaskingReportId:     oci_data_safe_masking_report.Test_masking_report.Id,
//				ColumnNames:         _var.Masking_reports_masked_column_column_name,
//				MaskingColumnGroups: _var.Masking_reports_masked_column_masking_column_group,
//				Objects:             _var.Masking_reports_masked_column_object,
//				ObjectTypes:         _var.Masking_reports_masked_column_object_type,
//				SchemaNames:         _var.Masking_reports_masked_column_schema_name,
//				SensitiveTypeId:     pulumi.StringRef(oci_data_safe_sensitive_type.Test_sensitive_type.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMaskingReportsMaskedColumn(ctx *pulumi.Context, args *GetMaskingReportsMaskedColumnArgs, opts ...pulumi.InvokeOption) (*GetMaskingReportsMaskedColumnResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMaskingReportsMaskedColumnResult
	err := ctx.Invoke("oci:DataSafe/getMaskingReportsMaskedColumn:getMaskingReportsMaskedColumn", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMaskingReportsMaskedColumn.
type GetMaskingReportsMaskedColumnArgs struct {
	// A filter to return only a specific column based on column name.
	ColumnNames []string `pulumi:"columnNames"`
	// A filter to return only the resources that match the specified masking column group.
	MaskingColumnGroups []string `pulumi:"maskingColumnGroups"`
	// The OCID of the masking report.
	MaskingReportId string `pulumi:"maskingReportId"`
	// A filter to return only items related to a specific object type.
	ObjectTypes []string `pulumi:"objectTypes"`
	// A filter to return only items related to a specific object name.
	Objects []string `pulumi:"objects"`
	// A filter to return only items related to specific schema name.
	SchemaNames []string `pulumi:"schemaNames"`
	// A filter to return only items related to a specific sensitive type OCID.
	SensitiveTypeId *string `pulumi:"sensitiveTypeId"`
}

// A collection of values returned by getMaskingReportsMaskedColumn.
type GetMaskingReportsMaskedColumnResult struct {
	// The name of the masked column.
	ColumnNames []string `pulumi:"columnNames"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// An array of masking column summary objects.
	Items []GetMaskingReportsMaskedColumnItem `pulumi:"items"`
	// The masking group of the masked column.
	MaskingColumnGroups []string `pulumi:"maskingColumnGroups"`
	MaskingReportId     string   `pulumi:"maskingReportId"`
	// The type of the object (table or editioning view) that contains the masked column.
	ObjectTypes []string `pulumi:"objectTypes"`
	// The name of the object (table or editioning view) that contains the masked column.
	Objects []string `pulumi:"objects"`
	// The name of the schema that contains the masked column.
	SchemaNames []string `pulumi:"schemaNames"`
	// The OCID of the sensitive type associated with the masked column.
	SensitiveTypeId *string `pulumi:"sensitiveTypeId"`
}

func GetMaskingReportsMaskedColumnOutput(ctx *pulumi.Context, args GetMaskingReportsMaskedColumnOutputArgs, opts ...pulumi.InvokeOption) GetMaskingReportsMaskedColumnResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMaskingReportsMaskedColumnResult, error) {
			args := v.(GetMaskingReportsMaskedColumnArgs)
			r, err := GetMaskingReportsMaskedColumn(ctx, &args, opts...)
			var s GetMaskingReportsMaskedColumnResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMaskingReportsMaskedColumnResultOutput)
}

// A collection of arguments for invoking getMaskingReportsMaskedColumn.
type GetMaskingReportsMaskedColumnOutputArgs struct {
	// A filter to return only a specific column based on column name.
	ColumnNames pulumi.StringArrayInput `pulumi:"columnNames"`
	// A filter to return only the resources that match the specified masking column group.
	MaskingColumnGroups pulumi.StringArrayInput `pulumi:"maskingColumnGroups"`
	// The OCID of the masking report.
	MaskingReportId pulumi.StringInput `pulumi:"maskingReportId"`
	// A filter to return only items related to a specific object type.
	ObjectTypes pulumi.StringArrayInput `pulumi:"objectTypes"`
	// A filter to return only items related to a specific object name.
	Objects pulumi.StringArrayInput `pulumi:"objects"`
	// A filter to return only items related to specific schema name.
	SchemaNames pulumi.StringArrayInput `pulumi:"schemaNames"`
	// A filter to return only items related to a specific sensitive type OCID.
	SensitiveTypeId pulumi.StringPtrInput `pulumi:"sensitiveTypeId"`
}

func (GetMaskingReportsMaskedColumnOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingReportsMaskedColumnArgs)(nil)).Elem()
}

// A collection of values returned by getMaskingReportsMaskedColumn.
type GetMaskingReportsMaskedColumnResultOutput struct{ *pulumi.OutputState }

func (GetMaskingReportsMaskedColumnResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingReportsMaskedColumnResult)(nil)).Elem()
}

func (o GetMaskingReportsMaskedColumnResultOutput) ToGetMaskingReportsMaskedColumnResultOutput() GetMaskingReportsMaskedColumnResultOutput {
	return o
}

func (o GetMaskingReportsMaskedColumnResultOutput) ToGetMaskingReportsMaskedColumnResultOutputWithContext(ctx context.Context) GetMaskingReportsMaskedColumnResultOutput {
	return o
}

// The name of the masked column.
func (o GetMaskingReportsMaskedColumnResultOutput) ColumnNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMaskingReportsMaskedColumnResult) []string { return v.ColumnNames }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMaskingReportsMaskedColumnResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingReportsMaskedColumnResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of masking column summary objects.
func (o GetMaskingReportsMaskedColumnResultOutput) Items() GetMaskingReportsMaskedColumnItemArrayOutput {
	return o.ApplyT(func(v GetMaskingReportsMaskedColumnResult) []GetMaskingReportsMaskedColumnItem { return v.Items }).(GetMaskingReportsMaskedColumnItemArrayOutput)
}

// The masking group of the masked column.
func (o GetMaskingReportsMaskedColumnResultOutput) MaskingColumnGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMaskingReportsMaskedColumnResult) []string { return v.MaskingColumnGroups }).(pulumi.StringArrayOutput)
}

func (o GetMaskingReportsMaskedColumnResultOutput) MaskingReportId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingReportsMaskedColumnResult) string { return v.MaskingReportId }).(pulumi.StringOutput)
}

// The type of the object (table or editioning view) that contains the masked column.
func (o GetMaskingReportsMaskedColumnResultOutput) ObjectTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMaskingReportsMaskedColumnResult) []string { return v.ObjectTypes }).(pulumi.StringArrayOutput)
}

// The name of the object (table or editioning view) that contains the masked column.
func (o GetMaskingReportsMaskedColumnResultOutput) Objects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMaskingReportsMaskedColumnResult) []string { return v.Objects }).(pulumi.StringArrayOutput)
}

// The name of the schema that contains the masked column.
func (o GetMaskingReportsMaskedColumnResultOutput) SchemaNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMaskingReportsMaskedColumnResult) []string { return v.SchemaNames }).(pulumi.StringArrayOutput)
}

// The OCID of the sensitive type associated with the masked column.
func (o GetMaskingReportsMaskedColumnResultOutput) SensitiveTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMaskingReportsMaskedColumnResult) *string { return v.SensitiveTypeId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMaskingReportsMaskedColumnResultOutput{})
}
