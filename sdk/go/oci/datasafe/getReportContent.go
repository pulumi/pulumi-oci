// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides details about a specific Report Content resource in Oracle Cloud Infrastructure Data Safe service.
//
// Downloads the specified report in the form of PDF or XLXS.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetReportContent(ctx, &datasafe.GetReportContentArgs{
//				ReportId: oci_data_safe_report.Test_report.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetReportContent(ctx *pulumi.Context, args *GetReportContentArgs, opts ...pulumi.InvokeOption) (*GetReportContentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetReportContentResult
	err := ctx.Invoke("oci:DataSafe/getReportContent:getReportContent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReportContent.
type GetReportContentArgs struct {
	// Unique report identifier
	ReportId string `pulumi:"reportId"`
}

// A collection of values returned by getReportContent.
type GetReportContentResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	ReportId string `pulumi:"reportId"`
}

func GetReportContentOutput(ctx *pulumi.Context, args GetReportContentOutputArgs, opts ...pulumi.InvokeOption) GetReportContentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetReportContentResult, error) {
			args := v.(GetReportContentArgs)
			r, err := GetReportContent(ctx, &args, opts...)
			var s GetReportContentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetReportContentResultOutput)
}

// A collection of arguments for invoking getReportContent.
type GetReportContentOutputArgs struct {
	// Unique report identifier
	ReportId pulumi.StringInput `pulumi:"reportId"`
}

func (GetReportContentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReportContentArgs)(nil)).Elem()
}

// A collection of values returned by getReportContent.
type GetReportContentResultOutput struct{ *pulumi.OutputState }

func (GetReportContentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReportContentResult)(nil)).Elem()
}

func (o GetReportContentResultOutput) ToGetReportContentResultOutput() GetReportContentResultOutput {
	return o
}

func (o GetReportContentResultOutput) ToGetReportContentResultOutputWithContext(ctx context.Context) GetReportContentResultOutput {
	return o
}

func (o GetReportContentResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetReportContentResult] {
	return pulumix.Output[GetReportContentResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetReportContentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReportContentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetReportContentResultOutput) ReportId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReportContentResult) string { return v.ReportId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetReportContentResultOutput{})
}
