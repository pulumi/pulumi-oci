// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Report Definitions in Oracle Cloud Infrastructure Data Safe service.
//
// Gets a list of report definitions.
// The ListReportDefinitions operation returns only the report definitions in the specified `compartmentId`.
// It also returns the seeded report definitions which are available to all the compartments.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.GetReportDefinitions(ctx, &datasafe.GetReportDefinitionsArgs{
//				CompartmentId:          compartmentId,
//				AccessLevel:            pulumi.StringRef(reportDefinitionAccessLevel),
//				Category:               pulumi.StringRef(reportDefinitionCategory),
//				CompartmentIdInSubtree: pulumi.BoolRef(reportDefinitionCompartmentIdInSubtree),
//				DataSource:             pulumi.StringRef(reportDefinitionDataSource),
//				DisplayName:            pulumi.StringRef(reportDefinitionDisplayName),
//				IsSeeded:               pulumi.BoolRef(reportDefinitionIsSeeded),
//				State:                  pulumi.StringRef(reportDefinitionState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetReportDefinitions(ctx *pulumi.Context, args *GetReportDefinitionsArgs, opts ...pulumi.InvokeOption) (*GetReportDefinitionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetReportDefinitionsResult
	err := ctx.Invoke("oci:DataSafe/getReportDefinitions:getReportDefinitions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReportDefinitions.
type GetReportDefinitionsArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// An optional filter to return only resources that match the specified category.
	Category *string `pulumi:"category"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// Specifies the name of a resource that provides data for the report. For example  alerts, events.
	DataSource *string `pulumi:"dataSource"`
	// The name of the report definition to query.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetReportDefinitionsFilter `pulumi:"filters"`
	// A boolean flag indicating to list seeded report definitions. Set this parameter to get list of seeded report definitions.
	IsSeeded *bool `pulumi:"isSeeded"`
	// An optional filter to return only resources that match the specified lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getReportDefinitions.
type GetReportDefinitionsResult struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// Specifies the name of the category that this report belongs to.
	Category *string `pulumi:"category"`
	// The OCID of the compartment containing the report definition.
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool  `pulumi:"compartmentIdInSubtree"`
	// Specifies the name of a resource that provides data for the report. For example alerts, events.
	DataSource *string `pulumi:"dataSource"`
	// Name of the report definition.
	DisplayName *string                      `pulumi:"displayName"`
	Filters     []GetReportDefinitionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Signifies whether the definition is seeded or user defined. Values can either be 'true' or 'false'.
	IsSeeded *bool `pulumi:"isSeeded"`
	// The list of report_definition_collection.
	ReportDefinitionCollections []GetReportDefinitionsReportDefinitionCollection `pulumi:"reportDefinitionCollections"`
	// The current state of the report.
	State *string `pulumi:"state"`
}

func GetReportDefinitionsOutput(ctx *pulumi.Context, args GetReportDefinitionsOutputArgs, opts ...pulumi.InvokeOption) GetReportDefinitionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetReportDefinitionsResultOutput, error) {
			args := v.(GetReportDefinitionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getReportDefinitions:getReportDefinitions", args, GetReportDefinitionsResultOutput{}, options).(GetReportDefinitionsResultOutput), nil
		}).(GetReportDefinitionsResultOutput)
}

// A collection of arguments for invoking getReportDefinitions.
type GetReportDefinitionsOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// An optional filter to return only resources that match the specified category.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// Specifies the name of a resource that provides data for the report. For example  alerts, events.
	DataSource pulumi.StringPtrInput `pulumi:"dataSource"`
	// The name of the report definition to query.
	DisplayName pulumi.StringPtrInput                `pulumi:"displayName"`
	Filters     GetReportDefinitionsFilterArrayInput `pulumi:"filters"`
	// A boolean flag indicating to list seeded report definitions. Set this parameter to get list of seeded report definitions.
	IsSeeded pulumi.BoolPtrInput `pulumi:"isSeeded"`
	// An optional filter to return only resources that match the specified lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetReportDefinitionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReportDefinitionsArgs)(nil)).Elem()
}

// A collection of values returned by getReportDefinitions.
type GetReportDefinitionsResultOutput struct{ *pulumi.OutputState }

func (GetReportDefinitionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReportDefinitionsResult)(nil)).Elem()
}

func (o GetReportDefinitionsResultOutput) ToGetReportDefinitionsResultOutput() GetReportDefinitionsResultOutput {
	return o
}

func (o GetReportDefinitionsResultOutput) ToGetReportDefinitionsResultOutputWithContext(ctx context.Context) GetReportDefinitionsResultOutput {
	return o
}

func (o GetReportDefinitionsResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportDefinitionsResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// Specifies the name of the category that this report belongs to.
func (o GetReportDefinitionsResultOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportDefinitionsResult) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment containing the report definition.
func (o GetReportDefinitionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReportDefinitionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetReportDefinitionsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetReportDefinitionsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// Specifies the name of a resource that provides data for the report. For example alerts, events.
func (o GetReportDefinitionsResultOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportDefinitionsResult) *string { return v.DataSource }).(pulumi.StringPtrOutput)
}

// Name of the report definition.
func (o GetReportDefinitionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportDefinitionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetReportDefinitionsResultOutput) Filters() GetReportDefinitionsFilterArrayOutput {
	return o.ApplyT(func(v GetReportDefinitionsResult) []GetReportDefinitionsFilter { return v.Filters }).(GetReportDefinitionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetReportDefinitionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReportDefinitionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Signifies whether the definition is seeded or user defined. Values can either be 'true' or 'false'.
func (o GetReportDefinitionsResultOutput) IsSeeded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetReportDefinitionsResult) *bool { return v.IsSeeded }).(pulumi.BoolPtrOutput)
}

// The list of report_definition_collection.
func (o GetReportDefinitionsResultOutput) ReportDefinitionCollections() GetReportDefinitionsReportDefinitionCollectionArrayOutput {
	return o.ApplyT(func(v GetReportDefinitionsResult) []GetReportDefinitionsReportDefinitionCollection {
		return v.ReportDefinitionCollections
	}).(GetReportDefinitionsReportDefinitionCollectionArrayOutput)
}

// The current state of the report.
func (o GetReportDefinitionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportDefinitionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetReportDefinitionsResultOutput{})
}
