// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Reports in Oracle Cloud Infrastructure Data Safe service.
//
// Gets a list of all the reports in the compartment. It contains information such as report generation time.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetReports(ctx, &datasafe.GetReportsArgs{
//				CompartmentId:                     compartmentId,
//				AccessLevel:                       pulumi.StringRef(reportAccessLevel),
//				CompartmentIdInSubtree:            pulumi.BoolRef(reportCompartmentIdInSubtree),
//				DisplayName:                       pulumi.StringRef(reportDisplayName),
//				ReportDefinitionId:                pulumi.StringRef(testReportDefinition.Id),
//				State:                             pulumi.StringRef(reportState),
//				TimeGeneratedGreaterThanOrEqualTo: pulumi.StringRef(reportTimeGeneratedGreaterThanOrEqualTo),
//				TimeGeneratedLessThan:             pulumi.StringRef(reportTimeGeneratedLessThan),
//				Type:                              pulumi.StringRef(reportType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetReports(ctx *pulumi.Context, args *GetReportsArgs, opts ...pulumi.InvokeOption) (*GetReportsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetReportsResult
	err := ctx.Invoke("oci:DataSafe/getReports:getReports", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReports.
type GetReportsArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// The name of the report definition to query.
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetReportsFilter `pulumi:"filters"`
	// The ID of the report definition to filter the list of reports
	ReportDefinitionId *string `pulumi:"reportDefinitionId"`
	// An optional filter to return only resources that match the specified lifecycle state.
	State *string `pulumi:"state"`
	// A filter to return only the resources that were generated after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeGeneratedGreaterThanOrEqualToQueryParam parameter retrieves all resources generated after that date.
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimeGeneratedGreaterThanOrEqualTo *string `pulumi:"timeGeneratedGreaterThanOrEqualTo"`
	// Search for resources that were generated before a specific date. Specifying this parameter corresponding `timeGeneratedLessThan` parameter will retrieve all resources generated before the specified generated date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimeGeneratedLessThan *string `pulumi:"timeGeneratedLessThan"`
	// An optional filter to return only resources that match the specified type.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getReports.
type GetReportsResult struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// The OCID of the compartment containing the report.
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool  `pulumi:"compartmentIdInSubtree"`
	// Name of the report.
	DisplayName *string            `pulumi:"displayName"`
	Filters     []GetReportsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of report_collection.
	ReportCollections []GetReportsReportCollection `pulumi:"reportCollections"`
	// The OCID of the report definition.
	ReportDefinitionId *string `pulumi:"reportDefinitionId"`
	// The current state of the audit report.
	State                             *string `pulumi:"state"`
	TimeGeneratedGreaterThanOrEqualTo *string `pulumi:"timeGeneratedGreaterThanOrEqualTo"`
	TimeGeneratedLessThan             *string `pulumi:"timeGeneratedLessThan"`
	// The type of the audit report.
	Type *string `pulumi:"type"`
}

func GetReportsOutput(ctx *pulumi.Context, args GetReportsOutputArgs, opts ...pulumi.InvokeOption) GetReportsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetReportsResultOutput, error) {
			args := v.(GetReportsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetReportsResult
			secret, err := ctx.InvokePackageRaw("oci:DataSafe/getReports:getReports", args, &rv, "", opts...)
			if err != nil {
				return GetReportsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetReportsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetReportsResultOutput), nil
			}
			return output, nil
		}).(GetReportsResultOutput)
}

// A collection of arguments for invoking getReports.
type GetReportsOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// The name of the report definition to query.
	DisplayName pulumi.StringPtrInput      `pulumi:"displayName"`
	Filters     GetReportsFilterArrayInput `pulumi:"filters"`
	// The ID of the report definition to filter the list of reports
	ReportDefinitionId pulumi.StringPtrInput `pulumi:"reportDefinitionId"`
	// An optional filter to return only resources that match the specified lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return only the resources that were generated after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeGeneratedGreaterThanOrEqualToQueryParam parameter retrieves all resources generated after that date.
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimeGeneratedGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeGeneratedGreaterThanOrEqualTo"`
	// Search for resources that were generated before a specific date. Specifying this parameter corresponding `timeGeneratedLessThan` parameter will retrieve all resources generated before the specified generated date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimeGeneratedLessThan pulumi.StringPtrInput `pulumi:"timeGeneratedLessThan"`
	// An optional filter to return only resources that match the specified type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetReportsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReportsArgs)(nil)).Elem()
}

// A collection of values returned by getReports.
type GetReportsResultOutput struct{ *pulumi.OutputState }

func (GetReportsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReportsResult)(nil)).Elem()
}

func (o GetReportsResultOutput) ToGetReportsResultOutput() GetReportsResultOutput {
	return o
}

func (o GetReportsResultOutput) ToGetReportsResultOutputWithContext(ctx context.Context) GetReportsResultOutput {
	return o
}

func (o GetReportsResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportsResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment containing the report.
func (o GetReportsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReportsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetReportsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetReportsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// Name of the report.
func (o GetReportsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetReportsResultOutput) Filters() GetReportsFilterArrayOutput {
	return o.ApplyT(func(v GetReportsResult) []GetReportsFilter { return v.Filters }).(GetReportsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetReportsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReportsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of report_collection.
func (o GetReportsResultOutput) ReportCollections() GetReportsReportCollectionArrayOutput {
	return o.ApplyT(func(v GetReportsResult) []GetReportsReportCollection { return v.ReportCollections }).(GetReportsReportCollectionArrayOutput)
}

// The OCID of the report definition.
func (o GetReportsResultOutput) ReportDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportsResult) *string { return v.ReportDefinitionId }).(pulumi.StringPtrOutput)
}

// The current state of the audit report.
func (o GetReportsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetReportsResultOutput) TimeGeneratedGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportsResult) *string { return v.TimeGeneratedGreaterThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetReportsResultOutput) TimeGeneratedLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportsResult) *string { return v.TimeGeneratedLessThan }).(pulumi.StringPtrOutput)
}

// The type of the audit report.
func (o GetReportsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetReportsResultOutput{})
}
