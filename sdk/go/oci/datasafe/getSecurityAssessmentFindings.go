// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Security Assessment Findings in Oracle Cloud Infrastructure Data Safe service.
//
// List all the findings from all the targets in the specified assessment.
func GetSecurityAssessmentFindings(ctx *pulumi.Context, args *GetSecurityAssessmentFindingsArgs, opts ...pulumi.InvokeOption) (*GetSecurityAssessmentFindingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityAssessmentFindingsResult
	err := ctx.Invoke("oci:DataSafe/getSecurityAssessmentFindings:getSecurityAssessmentFindings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityAssessmentFindings.
type GetSecurityAssessmentFindingsArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool                                 `pulumi:"compartmentIdInSubtree"`
	Filters                []GetSecurityAssessmentFindingsFilter `pulumi:"filters"`
	// Each finding has a key. This key is same for the finding across targets
	FindingKey *string `pulumi:"findingKey"`
	// An optional filter to return only findings containing the specified reference.
	References *string `pulumi:"references"`
	// The OCID of the security assessment.
	SecurityAssessmentId string `pulumi:"securityAssessmentId"`
	// A filter to return only findings of a particular risk level.
	Severity *string `pulumi:"severity"`
}

// A collection of values returned by getSecurityAssessmentFindings.
type GetSecurityAssessmentFindingsResult struct {
	AccessLevel            *string                               `pulumi:"accessLevel"`
	CompartmentIdInSubtree *bool                                 `pulumi:"compartmentIdInSubtree"`
	Filters                []GetSecurityAssessmentFindingsFilter `pulumi:"filters"`
	FindingKey             *string                               `pulumi:"findingKey"`
	// The list of findings.
	Findings []GetSecurityAssessmentFindingsFinding `pulumi:"findings"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
	References           *string `pulumi:"references"`
	SecurityAssessmentId string  `pulumi:"securityAssessmentId"`
	// The severity of the finding as determined by security assessment and is same as oracleDefinedSeverity, unless modified by user.
	Severity *string `pulumi:"severity"`
}

func GetSecurityAssessmentFindingsOutput(ctx *pulumi.Context, args GetSecurityAssessmentFindingsOutputArgs, opts ...pulumi.InvokeOption) GetSecurityAssessmentFindingsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityAssessmentFindingsResult, error) {
			args := v.(GetSecurityAssessmentFindingsArgs)
			r, err := GetSecurityAssessmentFindings(ctx, &args, opts...)
			var s GetSecurityAssessmentFindingsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityAssessmentFindingsResultOutput)
}

// A collection of arguments for invoking getSecurityAssessmentFindings.
type GetSecurityAssessmentFindingsOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput                           `pulumi:"compartmentIdInSubtree"`
	Filters                GetSecurityAssessmentFindingsFilterArrayInput `pulumi:"filters"`
	// Each finding has a key. This key is same for the finding across targets
	FindingKey pulumi.StringPtrInput `pulumi:"findingKey"`
	// An optional filter to return only findings containing the specified reference.
	References pulumi.StringPtrInput `pulumi:"references"`
	// The OCID of the security assessment.
	SecurityAssessmentId pulumi.StringInput `pulumi:"securityAssessmentId"`
	// A filter to return only findings of a particular risk level.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
}

func (GetSecurityAssessmentFindingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityAssessmentFindingsArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityAssessmentFindings.
type GetSecurityAssessmentFindingsResultOutput struct{ *pulumi.OutputState }

func (GetSecurityAssessmentFindingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityAssessmentFindingsResult)(nil)).Elem()
}

func (o GetSecurityAssessmentFindingsResultOutput) ToGetSecurityAssessmentFindingsResultOutput() GetSecurityAssessmentFindingsResultOutput {
	return o
}

func (o GetSecurityAssessmentFindingsResultOutput) ToGetSecurityAssessmentFindingsResultOutputWithContext(ctx context.Context) GetSecurityAssessmentFindingsResultOutput {
	return o
}

func (o GetSecurityAssessmentFindingsResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

func (o GetSecurityAssessmentFindingsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetSecurityAssessmentFindingsResultOutput) Filters() GetSecurityAssessmentFindingsFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsResult) []GetSecurityAssessmentFindingsFilter { return v.Filters }).(GetSecurityAssessmentFindingsFilterArrayOutput)
}

func (o GetSecurityAssessmentFindingsResultOutput) FindingKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsResult) *string { return v.FindingKey }).(pulumi.StringPtrOutput)
}

// The list of findings.
func (o GetSecurityAssessmentFindingsResultOutput) Findings() GetSecurityAssessmentFindingsFindingArrayOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsResult) []GetSecurityAssessmentFindingsFinding { return v.Findings }).(GetSecurityAssessmentFindingsFindingArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecurityAssessmentFindingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
func (o GetSecurityAssessmentFindingsResultOutput) References() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsResult) *string { return v.References }).(pulumi.StringPtrOutput)
}

func (o GetSecurityAssessmentFindingsResultOutput) SecurityAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsResult) string { return v.SecurityAssessmentId }).(pulumi.StringOutput)
}

// The severity of the finding as determined by security assessment and is same as oracleDefinedSeverity, unless modified by user.
func (o GetSecurityAssessmentFindingsResultOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsResult) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityAssessmentFindingsResultOutput{})
}
