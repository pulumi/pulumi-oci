// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Security Assessment Findings Change Audit Logs in Oracle Cloud Infrastructure Data Safe service.
//
// List all changes made by user to risk level of findings of the specified assessment.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetSecurityAssessmentFindingsChangeAuditLogs(ctx, &datasafe.GetSecurityAssessmentFindingsChangeAuditLogsArgs{
//				SecurityAssessmentId:               testSecurityAssessment.Id,
//				FindingKey:                         pulumi.StringRef(securityAssessmentFindingsChangeAuditLogFindingKey),
//				FindingTitle:                       pulumi.StringRef(securityAssessmentFindingsChangeAuditLogFindingTitle),
//				IsRiskDeferred:                     pulumi.BoolRef(securityAssessmentFindingsChangeAuditLogIsRiskDeferred),
//				ModifiedBy:                         pulumi.StringRef(securityAssessmentFindingsChangeAuditLogModifiedBy),
//				Severity:                           pulumi.StringRef(securityAssessmentFindingsChangeAuditLogSeverity),
//				TimeUpdatedGreaterThanOrEqualTo:    pulumi.StringRef(securityAssessmentFindingsChangeAuditLogTimeUpdatedGreaterThanOrEqualTo),
//				TimeUpdatedLessThan:                pulumi.StringRef(securityAssessmentFindingsChangeAuditLogTimeUpdatedLessThan),
//				TimeValidUntilGreaterThanOrEqualTo: pulumi.StringRef(securityAssessmentFindingsChangeAuditLogTimeValidUntilGreaterThanOrEqualTo),
//				TimeValidUntilLessThan:             pulumi.StringRef(securityAssessmentFindingsChangeAuditLogTimeValidUntilLessThan),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetSecurityAssessmentFindingsChangeAuditLogs(ctx *pulumi.Context, args *GetSecurityAssessmentFindingsChangeAuditLogsArgs, opts ...pulumi.InvokeOption) (*GetSecurityAssessmentFindingsChangeAuditLogsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityAssessmentFindingsChangeAuditLogsResult
	err := ctx.Invoke("oci:DataSafe/getSecurityAssessmentFindingsChangeAuditLogs:getSecurityAssessmentFindingsChangeAuditLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityAssessmentFindingsChangeAuditLogs.
type GetSecurityAssessmentFindingsChangeAuditLogsArgs struct {
	Filters []GetSecurityAssessmentFindingsChangeAuditLogsFilter `pulumi:"filters"`
	// The unique key that identifies the finding. It is a string and unique within a security assessment.
	FindingKey *string `pulumi:"findingKey"`
	// The unique title that identifies the finding. It is a string and unique within a security assessment.
	FindingTitle *string `pulumi:"findingTitle"`
	// A filter to check findings whose risks were deferred by the user.
	IsRiskDeferred *bool `pulumi:"isRiskDeferred"`
	// A filter to check which user modified the risk level of the finding.
	ModifiedBy *string `pulumi:"modifiedBy"`
	// The OCID of the security assessment.
	SecurityAssessmentId string `pulumi:"securityAssessmentId"`
	// A filter to return only findings of a particular risk level.
	Severity *string `pulumi:"severity"`
	// Search for resources that were updated after a specific date. Specifying this parameter corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated after the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdatedGreaterThanOrEqualTo *string `pulumi:"timeUpdatedGreaterThanOrEqualTo"`
	// Search for resources that were updated before a specific date. Specifying this parameter corresponding `timeUpdatedLessThan` parameter will retrieve all resources updated before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdatedLessThan *string `pulumi:"timeUpdatedLessThan"`
	// Specifying `TimeValidUntilGreaterThanOrEqualToQueryParam` parameter  will retrieve all items for which the risk level modification by user will  no longer be valid greater than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T00:00:00.000Z
	TimeValidUntilGreaterThanOrEqualTo *string `pulumi:"timeValidUntilGreaterThanOrEqualTo"`
	// Specifying `TimeValidUntilLessThanQueryParam` parameter will retrieve all items for which the risk level modification by user will  be valid until less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T00:00:00.000Z
	TimeValidUntilLessThan *string `pulumi:"timeValidUntilLessThan"`
}

// A collection of values returned by getSecurityAssessmentFindingsChangeAuditLogs.
type GetSecurityAssessmentFindingsChangeAuditLogsResult struct {
	Filters []GetSecurityAssessmentFindingsChangeAuditLogsFilter `pulumi:"filters"`
	// The unique key that identifies the finding.
	FindingKey *string `pulumi:"findingKey"`
	// The short title for the finding whose risk is being modified.
	FindingTitle *string `pulumi:"findingTitle"`
	// The list of findings_change_audit_log_collection.
	FindingsChangeAuditLogCollections []GetSecurityAssessmentFindingsChangeAuditLogsFindingsChangeAuditLogCollection `pulumi:"findingsChangeAuditLogCollections"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Determines if the user has deferred the risk level of this finding when he is ok with it  and does not plan to do anything about it.
	IsRiskDeferred *bool `pulumi:"isRiskDeferred"`
	// The user who initiated change of risk level of the finding
	ModifiedBy           *string `pulumi:"modifiedBy"`
	SecurityAssessmentId string  `pulumi:"securityAssessmentId"`
	// The original severity / risk level of the finding as determined by security assessment.
	Severity                           *string `pulumi:"severity"`
	TimeUpdatedGreaterThanOrEqualTo    *string `pulumi:"timeUpdatedGreaterThanOrEqualTo"`
	TimeUpdatedLessThan                *string `pulumi:"timeUpdatedLessThan"`
	TimeValidUntilGreaterThanOrEqualTo *string `pulumi:"timeValidUntilGreaterThanOrEqualTo"`
	TimeValidUntilLessThan             *string `pulumi:"timeValidUntilLessThan"`
}

func GetSecurityAssessmentFindingsChangeAuditLogsOutput(ctx *pulumi.Context, args GetSecurityAssessmentFindingsChangeAuditLogsOutputArgs, opts ...pulumi.InvokeOption) GetSecurityAssessmentFindingsChangeAuditLogsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityAssessmentFindingsChangeAuditLogsResult, error) {
			args := v.(GetSecurityAssessmentFindingsChangeAuditLogsArgs)
			r, err := GetSecurityAssessmentFindingsChangeAuditLogs(ctx, &args, opts...)
			var s GetSecurityAssessmentFindingsChangeAuditLogsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityAssessmentFindingsChangeAuditLogsResultOutput)
}

// A collection of arguments for invoking getSecurityAssessmentFindingsChangeAuditLogs.
type GetSecurityAssessmentFindingsChangeAuditLogsOutputArgs struct {
	Filters GetSecurityAssessmentFindingsChangeAuditLogsFilterArrayInput `pulumi:"filters"`
	// The unique key that identifies the finding. It is a string and unique within a security assessment.
	FindingKey pulumi.StringPtrInput `pulumi:"findingKey"`
	// The unique title that identifies the finding. It is a string and unique within a security assessment.
	FindingTitle pulumi.StringPtrInput `pulumi:"findingTitle"`
	// A filter to check findings whose risks were deferred by the user.
	IsRiskDeferred pulumi.BoolPtrInput `pulumi:"isRiskDeferred"`
	// A filter to check which user modified the risk level of the finding.
	ModifiedBy pulumi.StringPtrInput `pulumi:"modifiedBy"`
	// The OCID of the security assessment.
	SecurityAssessmentId pulumi.StringInput `pulumi:"securityAssessmentId"`
	// A filter to return only findings of a particular risk level.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// Search for resources that were updated after a specific date. Specifying this parameter corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated after the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdatedGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeUpdatedGreaterThanOrEqualTo"`
	// Search for resources that were updated before a specific date. Specifying this parameter corresponding `timeUpdatedLessThan` parameter will retrieve all resources updated before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdatedLessThan pulumi.StringPtrInput `pulumi:"timeUpdatedLessThan"`
	// Specifying `TimeValidUntilGreaterThanOrEqualToQueryParam` parameter  will retrieve all items for which the risk level modification by user will  no longer be valid greater than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T00:00:00.000Z
	TimeValidUntilGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeValidUntilGreaterThanOrEqualTo"`
	// Specifying `TimeValidUntilLessThanQueryParam` parameter will retrieve all items for which the risk level modification by user will  be valid until less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T00:00:00.000Z
	TimeValidUntilLessThan pulumi.StringPtrInput `pulumi:"timeValidUntilLessThan"`
}

func (GetSecurityAssessmentFindingsChangeAuditLogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityAssessmentFindingsChangeAuditLogsArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityAssessmentFindingsChangeAuditLogs.
type GetSecurityAssessmentFindingsChangeAuditLogsResultOutput struct{ *pulumi.OutputState }

func (GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityAssessmentFindingsChangeAuditLogsResult)(nil)).Elem()
}

func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) ToGetSecurityAssessmentFindingsChangeAuditLogsResultOutput() GetSecurityAssessmentFindingsChangeAuditLogsResultOutput {
	return o
}

func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) ToGetSecurityAssessmentFindingsChangeAuditLogsResultOutputWithContext(ctx context.Context) GetSecurityAssessmentFindingsChangeAuditLogsResultOutput {
	return o
}

func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) Filters() GetSecurityAssessmentFindingsChangeAuditLogsFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) []GetSecurityAssessmentFindingsChangeAuditLogsFilter {
		return v.Filters
	}).(GetSecurityAssessmentFindingsChangeAuditLogsFilterArrayOutput)
}

// The unique key that identifies the finding.
func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) FindingKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) *string { return v.FindingKey }).(pulumi.StringPtrOutput)
}

// The short title for the finding whose risk is being modified.
func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) FindingTitle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) *string { return v.FindingTitle }).(pulumi.StringPtrOutput)
}

// The list of findings_change_audit_log_collection.
func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) FindingsChangeAuditLogCollections() GetSecurityAssessmentFindingsChangeAuditLogsFindingsChangeAuditLogCollectionArrayOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) []GetSecurityAssessmentFindingsChangeAuditLogsFindingsChangeAuditLogCollection {
		return v.FindingsChangeAuditLogCollections
	}).(GetSecurityAssessmentFindingsChangeAuditLogsFindingsChangeAuditLogCollectionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Determines if the user has deferred the risk level of this finding when he is ok with it  and does not plan to do anything about it.
func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) IsRiskDeferred() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) *bool { return v.IsRiskDeferred }).(pulumi.BoolPtrOutput)
}

// The user who initiated change of risk level of the finding
func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) ModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) *string { return v.ModifiedBy }).(pulumi.StringPtrOutput)
}

func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) SecurityAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) string { return v.SecurityAssessmentId }).(pulumi.StringOutput)
}

// The original severity / risk level of the finding as determined by security assessment.
func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) TimeUpdatedGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) *string {
		return v.TimeUpdatedGreaterThanOrEqualTo
	}).(pulumi.StringPtrOutput)
}

func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) TimeUpdatedLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) *string { return v.TimeUpdatedLessThan }).(pulumi.StringPtrOutput)
}

func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) TimeValidUntilGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) *string {
		return v.TimeValidUntilGreaterThanOrEqualTo
	}).(pulumi.StringPtrOutput)
}

func (o GetSecurityAssessmentFindingsChangeAuditLogsResultOutput) TimeValidUntilLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentFindingsChangeAuditLogsResult) *string { return v.TimeValidUntilLessThan }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityAssessmentFindingsChangeAuditLogsResultOutput{})
}
