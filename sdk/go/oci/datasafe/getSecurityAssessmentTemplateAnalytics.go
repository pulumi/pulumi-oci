// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Security Assessment Template Analytics in Oracle Cloud Infrastructure Data Safe service.
//
// Gets a list of template aggregated details in the specified compartment. This provides information about the
// overall template usage, by returning the count of the target databases/target groups using the templates. It also provides information
// about the statistics for the template baseline and the comparison related. If the comparison is done, it will show if there is any drift,
// and how many checks have drifts.
// The dimension field - isGroup identifies if the targetId belongs to a target group or a individual target.
// The dimension field - isCompared identifies if the comparison between the latest assessment and the template baseline assessment is done or not.
// The dimension field - isCompliant identifies if the latest assessment is compliant with the template baseline assessment or not.
// The dimension field - totalChecksFailed identifies how many checks in the template have drifts in the comparison.
//
// When you perform the ListTemplateAnalytics operation, if the parameter compartmentIdInSubtree is set to "true," and if the
// parameter accessLevel is set to ACCESSIBLE, then the operation returns statistics from the compartments in which the requestor has INSPECT
// permissions on at least one resource, directly or indirectly (in subcompartments). If the operation is performed at the
// root compartment and the requestor does not have access to at least one subcompartment of the compartment specified by
// compartmentId, then "Not Authorized" is returned.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.GetSecurityAssessmentTemplateAnalytics(ctx, &datasafe.GetSecurityAssessmentTemplateAnalyticsArgs{
//				CompartmentId:                compartmentId,
//				AccessLevel:                  pulumi.StringRef(securityAssessmentTemplateAnalyticAccessLevel),
//				CompartmentIdInSubtree:       pulumi.BoolRef(securityAssessmentTemplateAnalyticCompartmentIdInSubtree),
//				IsCompared:                   pulumi.BoolRef(securityAssessmentTemplateAnalyticIsCompared),
//				IsCompliant:                  pulumi.BoolRef(securityAssessmentTemplateAnalyticIsCompliant),
//				IsGroup:                      pulumi.BoolRef(securityAssessmentTemplateAnalyticIsGroup),
//				TargetDatabaseGroupId:        pulumi.StringRef(testTargetDatabaseGroup.Id),
//				TargetId:                     pulumi.StringRef(testTarget.Id),
//				TemplateAssessmentId:         pulumi.StringRef(testTemplateAssessment.Id),
//				TemplateBaselineAssessmentId: pulumi.StringRef(testTemplateBaselineAssessment.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecurityAssessmentTemplateAnalytics(ctx *pulumi.Context, args *GetSecurityAssessmentTemplateAnalyticsArgs, opts ...pulumi.InvokeOption) (*GetSecurityAssessmentTemplateAnalyticsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityAssessmentTemplateAnalyticsResult
	err := ctx.Invoke("oci:DataSafe/getSecurityAssessmentTemplateAnalytics:getSecurityAssessmentTemplateAnalytics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityAssessmentTemplateAnalytics.
type GetSecurityAssessmentTemplateAnalyticsArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool                                          `pulumi:"compartmentIdInSubtree"`
	Filters                []GetSecurityAssessmentTemplateAnalyticsFilter `pulumi:"filters"`
	// A filter to return only the statistics where the comparison between the latest assessment and the template baseline assessment is done.
	IsCompared *bool `pulumi:"isCompared"`
	// A filter to return only the statistics where the latest assessment is compliant with the template baseline assessment.
	IsCompliant *bool `pulumi:"isCompliant"`
	// A filter to return only the target group related information if the OCID belongs to a target group.
	IsGroup *bool `pulumi:"isGroup"`
	// A filter to return the target database group that matches the specified OCID.
	TargetDatabaseGroupId *string `pulumi:"targetDatabaseGroupId"`
	// A filter to return only items related to a specific target OCID.
	TargetId *string `pulumi:"targetId"`
	// The OCID of the security assessment of type TEMPLATE.
	TemplateAssessmentId *string `pulumi:"templateAssessmentId"`
	// The OCID of the security assessment of type TEMPLATE_BASELINE.
	TemplateBaselineAssessmentId *string `pulumi:"templateBaselineAssessmentId"`
}

// A collection of values returned by getSecurityAssessmentTemplateAnalytics.
type GetSecurityAssessmentTemplateAnalyticsResult struct {
	AccessLevel            *string                                        `pulumi:"accessLevel"`
	CompartmentId          string                                         `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool                                          `pulumi:"compartmentIdInSubtree"`
	Filters                []GetSecurityAssessmentTemplateAnalyticsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates whether or not the comparison between the latest assessment and the template baseline assessment is done. If the value is false, it means the comparison is not done yet.
	IsCompared *bool `pulumi:"isCompared"`
	// Indicates whether or not the latest assessment is compliant with the template baseline assessment. If the value is false, it means there is drift in the comparison report and the totalChecksFailed field will have a non-zero value.
	IsCompliant *bool `pulumi:"isCompliant"`
	// Indicates whether or not the template security assessment is applied to a target group.  If the value is false, it means the template security assessment is applied to a individual target.
	IsGroup *bool `pulumi:"isGroup"`
	// The OCID of the target database group that the group assessment is created for.  This field will be in the response if the template was applied on a target group.
	TargetDatabaseGroupId *string `pulumi:"targetDatabaseGroupId"`
	// The OCID of the target database. This field will be in the response if the template was applied on an individual target.
	TargetId *string `pulumi:"targetId"`
	// The list of template_analytics_collection.
	TemplateAnalyticsCollections []GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollection `pulumi:"templateAnalyticsCollections"`
	// The OCID of the security assessment of type TEMPLATE.
	TemplateAssessmentId *string `pulumi:"templateAssessmentId"`
	// The OCID of the security assessment of type TEMPLATE_BASELINE.
	TemplateBaselineAssessmentId *string `pulumi:"templateBaselineAssessmentId"`
}

func GetSecurityAssessmentTemplateAnalyticsOutput(ctx *pulumi.Context, args GetSecurityAssessmentTemplateAnalyticsOutputArgs, opts ...pulumi.InvokeOption) GetSecurityAssessmentTemplateAnalyticsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSecurityAssessmentTemplateAnalyticsResultOutput, error) {
			args := v.(GetSecurityAssessmentTemplateAnalyticsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getSecurityAssessmentTemplateAnalytics:getSecurityAssessmentTemplateAnalytics", args, GetSecurityAssessmentTemplateAnalyticsResultOutput{}, options).(GetSecurityAssessmentTemplateAnalyticsResultOutput), nil
		}).(GetSecurityAssessmentTemplateAnalyticsResultOutput)
}

// A collection of arguments for invoking getSecurityAssessmentTemplateAnalytics.
type GetSecurityAssessmentTemplateAnalyticsOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput                                    `pulumi:"compartmentIdInSubtree"`
	Filters                GetSecurityAssessmentTemplateAnalyticsFilterArrayInput `pulumi:"filters"`
	// A filter to return only the statistics where the comparison between the latest assessment and the template baseline assessment is done.
	IsCompared pulumi.BoolPtrInput `pulumi:"isCompared"`
	// A filter to return only the statistics where the latest assessment is compliant with the template baseline assessment.
	IsCompliant pulumi.BoolPtrInput `pulumi:"isCompliant"`
	// A filter to return only the target group related information if the OCID belongs to a target group.
	IsGroup pulumi.BoolPtrInput `pulumi:"isGroup"`
	// A filter to return the target database group that matches the specified OCID.
	TargetDatabaseGroupId pulumi.StringPtrInput `pulumi:"targetDatabaseGroupId"`
	// A filter to return only items related to a specific target OCID.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
	// The OCID of the security assessment of type TEMPLATE.
	TemplateAssessmentId pulumi.StringPtrInput `pulumi:"templateAssessmentId"`
	// The OCID of the security assessment of type TEMPLATE_BASELINE.
	TemplateBaselineAssessmentId pulumi.StringPtrInput `pulumi:"templateBaselineAssessmentId"`
}

func (GetSecurityAssessmentTemplateAnalyticsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityAssessmentTemplateAnalyticsArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityAssessmentTemplateAnalytics.
type GetSecurityAssessmentTemplateAnalyticsResultOutput struct{ *pulumi.OutputState }

func (GetSecurityAssessmentTemplateAnalyticsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityAssessmentTemplateAnalyticsResult)(nil)).Elem()
}

func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) ToGetSecurityAssessmentTemplateAnalyticsResultOutput() GetSecurityAssessmentTemplateAnalyticsResultOutput {
	return o
}

func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) ToGetSecurityAssessmentTemplateAnalyticsResultOutputWithContext(ctx context.Context) GetSecurityAssessmentTemplateAnalyticsResultOutput {
	return o
}

func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) Filters() GetSecurityAssessmentTemplateAnalyticsFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) []GetSecurityAssessmentTemplateAnalyticsFilter {
		return v.Filters
	}).(GetSecurityAssessmentTemplateAnalyticsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether or not the comparison between the latest assessment and the template baseline assessment is done. If the value is false, it means the comparison is not done yet.
func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) IsCompared() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) *bool { return v.IsCompared }).(pulumi.BoolPtrOutput)
}

// Indicates whether or not the latest assessment is compliant with the template baseline assessment. If the value is false, it means there is drift in the comparison report and the totalChecksFailed field will have a non-zero value.
func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) IsCompliant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) *bool { return v.IsCompliant }).(pulumi.BoolPtrOutput)
}

// Indicates whether or not the template security assessment is applied to a target group.  If the value is false, it means the template security assessment is applied to a individual target.
func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) IsGroup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) *bool { return v.IsGroup }).(pulumi.BoolPtrOutput)
}

// The OCID of the target database group that the group assessment is created for.  This field will be in the response if the template was applied on a target group.
func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) TargetDatabaseGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) *string { return v.TargetDatabaseGroupId }).(pulumi.StringPtrOutput)
}

// The OCID of the target database. This field will be in the response if the template was applied on an individual target.
func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

// The list of template_analytics_collection.
func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) TemplateAnalyticsCollections() GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollectionArrayOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) []GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollection {
		return v.TemplateAnalyticsCollections
	}).(GetSecurityAssessmentTemplateAnalyticsTemplateAnalyticsCollectionArrayOutput)
}

// The OCID of the security assessment of type TEMPLATE.
func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) TemplateAssessmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) *string { return v.TemplateAssessmentId }).(pulumi.StringPtrOutput)
}

// The OCID of the security assessment of type TEMPLATE_BASELINE.
func (o GetSecurityAssessmentTemplateAnalyticsResultOutput) TemplateBaselineAssessmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityAssessmentTemplateAnalyticsResult) *string { return v.TemplateBaselineAssessmentId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityAssessmentTemplateAnalyticsResultOutput{})
}
