// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Security Policy Report Database Table Access Entries in Oracle Cloud Infrastructure Data Safe service.
//
// Retrieves a list of all database table access entries in Data Safe.
//
// The ListDatabaseTableAccessEntries operation returns only the database table access reports for the specified security policy report.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetSecurityPolicyReportDatabaseTableAccessEntries(ctx, &datasafe.GetSecurityPolicyReportDatabaseTableAccessEntriesArgs{
//				SecurityPolicyReportId: testSecurityPolicyReport.Id,
//				ScimQuery:              pulumi.StringRef(securityPolicyReportDatabaseTableAccessEntryScimQuery),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecurityPolicyReportDatabaseTableAccessEntries(ctx *pulumi.Context, args *GetSecurityPolicyReportDatabaseTableAccessEntriesArgs, opts ...pulumi.InvokeOption) (*GetSecurityPolicyReportDatabaseTableAccessEntriesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityPolicyReportDatabaseTableAccessEntriesResult
	err := ctx.Invoke("oci:DataSafe/getSecurityPolicyReportDatabaseTableAccessEntries:getSecurityPolicyReportDatabaseTableAccessEntries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityPolicyReportDatabaseTableAccessEntries.
type GetSecurityPolicyReportDatabaseTableAccessEntriesArgs struct {
	Filters []GetSecurityPolicyReportDatabaseTableAccessEntriesFilter `pulumi:"filters"`
	// The scimQuery query parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.)
	//
	// **Example:** query=(accessType eq 'SELECT') and (grantee eq 'ADMIN')
	ScimQuery *string `pulumi:"scimQuery"`
	// The OCID of the security policy report resource.
	SecurityPolicyReportId string `pulumi:"securityPolicyReportId"`
}

// A collection of values returned by getSecurityPolicyReportDatabaseTableAccessEntries.
type GetSecurityPolicyReportDatabaseTableAccessEntriesResult struct {
	// The list of database_table_access_entry_collection.
	DatabaseTableAccessEntryCollections []GetSecurityPolicyReportDatabaseTableAccessEntriesDatabaseTableAccessEntryCollection `pulumi:"databaseTableAccessEntryCollections"`
	Filters                             []GetSecurityPolicyReportDatabaseTableAccessEntriesFilter                             `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                     string  `pulumi:"id"`
	ScimQuery              *string `pulumi:"scimQuery"`
	SecurityPolicyReportId string  `pulumi:"securityPolicyReportId"`
}

func GetSecurityPolicyReportDatabaseTableAccessEntriesOutput(ctx *pulumi.Context, args GetSecurityPolicyReportDatabaseTableAccessEntriesOutputArgs, opts ...pulumi.InvokeOption) GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityPolicyReportDatabaseTableAccessEntriesResult, error) {
			args := v.(GetSecurityPolicyReportDatabaseTableAccessEntriesArgs)
			r, err := GetSecurityPolicyReportDatabaseTableAccessEntries(ctx, &args, opts...)
			var s GetSecurityPolicyReportDatabaseTableAccessEntriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput)
}

// A collection of arguments for invoking getSecurityPolicyReportDatabaseTableAccessEntries.
type GetSecurityPolicyReportDatabaseTableAccessEntriesOutputArgs struct {
	Filters GetSecurityPolicyReportDatabaseTableAccessEntriesFilterArrayInput `pulumi:"filters"`
	// The scimQuery query parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.)
	//
	// **Example:** query=(accessType eq 'SELECT') and (grantee eq 'ADMIN')
	ScimQuery pulumi.StringPtrInput `pulumi:"scimQuery"`
	// The OCID of the security policy report resource.
	SecurityPolicyReportId pulumi.StringInput `pulumi:"securityPolicyReportId"`
}

func (GetSecurityPolicyReportDatabaseTableAccessEntriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPolicyReportDatabaseTableAccessEntriesArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityPolicyReportDatabaseTableAccessEntries.
type GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput struct{ *pulumi.OutputState }

func (GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPolicyReportDatabaseTableAccessEntriesResult)(nil)).Elem()
}

func (o GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput) ToGetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput() GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput {
	return o
}

func (o GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput) ToGetSecurityPolicyReportDatabaseTableAccessEntriesResultOutputWithContext(ctx context.Context) GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput {
	return o
}

// The list of database_table_access_entry_collection.
func (o GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput) DatabaseTableAccessEntryCollections() GetSecurityPolicyReportDatabaseTableAccessEntriesDatabaseTableAccessEntryCollectionArrayOutput {
	return o.ApplyT(func(v GetSecurityPolicyReportDatabaseTableAccessEntriesResult) []GetSecurityPolicyReportDatabaseTableAccessEntriesDatabaseTableAccessEntryCollection {
		return v.DatabaseTableAccessEntryCollections
	}).(GetSecurityPolicyReportDatabaseTableAccessEntriesDatabaseTableAccessEntryCollectionArrayOutput)
}

func (o GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput) Filters() GetSecurityPolicyReportDatabaseTableAccessEntriesFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityPolicyReportDatabaseTableAccessEntriesResult) []GetSecurityPolicyReportDatabaseTableAccessEntriesFilter {
		return v.Filters
	}).(GetSecurityPolicyReportDatabaseTableAccessEntriesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyReportDatabaseTableAccessEntriesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput) ScimQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityPolicyReportDatabaseTableAccessEntriesResult) *string { return v.ScimQuery }).(pulumi.StringPtrOutput)
}

func (o GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput) SecurityPolicyReportId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPolicyReportDatabaseTableAccessEntriesResult) string {
		return v.SecurityPolicyReportId
	}).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityPolicyReportDatabaseTableAccessEntriesResultOutput{})
}
