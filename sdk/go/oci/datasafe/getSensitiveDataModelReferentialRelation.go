// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Sensitive Data Model Referential Relation resource in Oracle Cloud Infrastructure Data Safe service.
//
// Gets the details of the specified referential relation.
//
// ## Example Usage
func LookupSensitiveDataModelReferentialRelation(ctx *pulumi.Context, args *LookupSensitiveDataModelReferentialRelationArgs, opts ...pulumi.InvokeOption) (*LookupSensitiveDataModelReferentialRelationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSensitiveDataModelReferentialRelationResult
	err := ctx.Invoke("oci:DataSafe/getSensitiveDataModelReferentialRelation:getSensitiveDataModelReferentialRelation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSensitiveDataModelReferentialRelation.
type LookupSensitiveDataModelReferentialRelationArgs struct {
	// The unique key that identifies the referential relation. It's numeric and unique within a sensitive data model.
	Key string `pulumi:"key"`
	// The OCID of the sensitive data model.
	SensitiveDataModelId string `pulumi:"sensitiveDataModelId"`
}

// A collection of values returned by getSensitiveDataModelReferentialRelation.
type LookupSensitiveDataModelReferentialRelationResult struct {
	// columnsInfo object has details of column group with schema details.
	Children []GetSensitiveDataModelReferentialRelationChild `pulumi:"children"`
	Id       string                                          `pulumi:"id"`
	// Determines if the columns present in the referential relation is present in the sensitive data model
	IsSensitive bool `pulumi:"isSensitive"`
	// The unique key that identifies the referential relation. It's numeric and unique within a sensitive data model.
	Key string `pulumi:"key"`
	// columnsInfo object has details of column group with schema details.
	Parents []GetSensitiveDataModelReferentialRelationParent `pulumi:"parents"`
	// The type of referential relationship the sensitive column has with its parent. NONE indicates that the sensitive column does not have a parent. DB_DEFINED indicates that the relationship is defined in the database dictionary. APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
	RelationType string `pulumi:"relationType"`
	// The OCID of the sensitive data model that contains the sensitive column.
	SensitiveDataModelId string `pulumi:"sensitiveDataModelId"`
	// The current state of the referential relation.
	State string `pulumi:"state"`
}

func LookupSensitiveDataModelReferentialRelationOutput(ctx *pulumi.Context, args LookupSensitiveDataModelReferentialRelationOutputArgs, opts ...pulumi.InvokeOption) LookupSensitiveDataModelReferentialRelationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSensitiveDataModelReferentialRelationResultOutput, error) {
			args := v.(LookupSensitiveDataModelReferentialRelationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getSensitiveDataModelReferentialRelation:getSensitiveDataModelReferentialRelation", args, LookupSensitiveDataModelReferentialRelationResultOutput{}, options).(LookupSensitiveDataModelReferentialRelationResultOutput), nil
		}).(LookupSensitiveDataModelReferentialRelationResultOutput)
}

// A collection of arguments for invoking getSensitiveDataModelReferentialRelation.
type LookupSensitiveDataModelReferentialRelationOutputArgs struct {
	// The unique key that identifies the referential relation. It's numeric and unique within a sensitive data model.
	Key pulumi.StringInput `pulumi:"key"`
	// The OCID of the sensitive data model.
	SensitiveDataModelId pulumi.StringInput `pulumi:"sensitiveDataModelId"`
}

func (LookupSensitiveDataModelReferentialRelationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSensitiveDataModelReferentialRelationArgs)(nil)).Elem()
}

// A collection of values returned by getSensitiveDataModelReferentialRelation.
type LookupSensitiveDataModelReferentialRelationResultOutput struct{ *pulumi.OutputState }

func (LookupSensitiveDataModelReferentialRelationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSensitiveDataModelReferentialRelationResult)(nil)).Elem()
}

func (o LookupSensitiveDataModelReferentialRelationResultOutput) ToLookupSensitiveDataModelReferentialRelationResultOutput() LookupSensitiveDataModelReferentialRelationResultOutput {
	return o
}

func (o LookupSensitiveDataModelReferentialRelationResultOutput) ToLookupSensitiveDataModelReferentialRelationResultOutputWithContext(ctx context.Context) LookupSensitiveDataModelReferentialRelationResultOutput {
	return o
}

// columnsInfo object has details of column group with schema details.
func (o LookupSensitiveDataModelReferentialRelationResultOutput) Children() GetSensitiveDataModelReferentialRelationChildArrayOutput {
	return o.ApplyT(func(v LookupSensitiveDataModelReferentialRelationResult) []GetSensitiveDataModelReferentialRelationChild {
		return v.Children
	}).(GetSensitiveDataModelReferentialRelationChildArrayOutput)
}

func (o LookupSensitiveDataModelReferentialRelationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSensitiveDataModelReferentialRelationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Determines if the columns present in the referential relation is present in the sensitive data model
func (o LookupSensitiveDataModelReferentialRelationResultOutput) IsSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSensitiveDataModelReferentialRelationResult) bool { return v.IsSensitive }).(pulumi.BoolOutput)
}

// The unique key that identifies the referential relation. It's numeric and unique within a sensitive data model.
func (o LookupSensitiveDataModelReferentialRelationResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSensitiveDataModelReferentialRelationResult) string { return v.Key }).(pulumi.StringOutput)
}

// columnsInfo object has details of column group with schema details.
func (o LookupSensitiveDataModelReferentialRelationResultOutput) Parents() GetSensitiveDataModelReferentialRelationParentArrayOutput {
	return o.ApplyT(func(v LookupSensitiveDataModelReferentialRelationResult) []GetSensitiveDataModelReferentialRelationParent {
		return v.Parents
	}).(GetSensitiveDataModelReferentialRelationParentArrayOutput)
}

// The type of referential relationship the sensitive column has with its parent. NONE indicates that the sensitive column does not have a parent. DB_DEFINED indicates that the relationship is defined in the database dictionary. APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
func (o LookupSensitiveDataModelReferentialRelationResultOutput) RelationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSensitiveDataModelReferentialRelationResult) string { return v.RelationType }).(pulumi.StringOutput)
}

// The OCID of the sensitive data model that contains the sensitive column.
func (o LookupSensitiveDataModelReferentialRelationResultOutput) SensitiveDataModelId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSensitiveDataModelReferentialRelationResult) string { return v.SensitiveDataModelId }).(pulumi.StringOutput)
}

// The current state of the referential relation.
func (o LookupSensitiveDataModelReferentialRelationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSensitiveDataModelReferentialRelationResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSensitiveDataModelReferentialRelationResultOutput{})
}
