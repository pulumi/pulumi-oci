// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Sql Collection Log Insights in Oracle Cloud Infrastructure Data Safe service.
//
// Retrieves a list of the SQL collection log analytics.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetSqlCollectionLogInsights(ctx, &datasafe.GetSqlCollectionLogInsightsArgs{
//				SqlCollectionId: oci_data_safe_sql_collection.Test_sql_collection.Id,
//				TimeEnded:       _var.Sql_collection_log_insight_time_ended,
//				TimeStarted:     _var.Sql_collection_log_insight_time_started,
//				GroupBy:         pulumi.StringRef(_var.Sql_collection_log_insight_group_by),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSqlCollectionLogInsights(ctx *pulumi.Context, args *GetSqlCollectionLogInsightsArgs, opts ...pulumi.InvokeOption) (*GetSqlCollectionLogInsightsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSqlCollectionLogInsightsResult
	err := ctx.Invoke("oci:DataSafe/getSqlCollectionLogInsights:getSqlCollectionLogInsights", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSqlCollectionLogInsights.
type GetSqlCollectionLogInsightsArgs struct {
	Filters []GetSqlCollectionLogInsightsFilter `pulumi:"filters"`
	// The group by parameter to summarize SQL collection log insights aggregation.
	GroupBy *string `pulumi:"groupBy"`
	// The OCID of the SQL collection resource.
	SqlCollectionId string `pulumi:"sqlCollectionId"`
	// An optional filter to return the stats of the SQL collection logs collected before the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeEnded string `pulumi:"timeEnded"`
	// An optional filter to return the stats of the SQL collection logs collected after the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeStarted string `pulumi:"timeStarted"`
}

// A collection of values returned by getSqlCollectionLogInsights.
type GetSqlCollectionLogInsightsResult struct {
	Filters []GetSqlCollectionLogInsightsFilter `pulumi:"filters"`
	GroupBy *string                             `pulumi:"groupBy"`
	// The provider-assigned unique ID for this managed resource.
	Id              string `pulumi:"id"`
	SqlCollectionId string `pulumi:"sqlCollectionId"`
	// The list of sql_collection_log_insights_collection.
	SqlCollectionLogInsightsCollections []GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollection `pulumi:"sqlCollectionLogInsightsCollections"`
	// The time at which the aggregation ended.
	TimeEnded string `pulumi:"timeEnded"`
	// The time at which the aggregation started.
	TimeStarted string `pulumi:"timeStarted"`
}

func GetSqlCollectionLogInsightsOutput(ctx *pulumi.Context, args GetSqlCollectionLogInsightsOutputArgs, opts ...pulumi.InvokeOption) GetSqlCollectionLogInsightsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSqlCollectionLogInsightsResult, error) {
			args := v.(GetSqlCollectionLogInsightsArgs)
			r, err := GetSqlCollectionLogInsights(ctx, &args, opts...)
			var s GetSqlCollectionLogInsightsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSqlCollectionLogInsightsResultOutput)
}

// A collection of arguments for invoking getSqlCollectionLogInsights.
type GetSqlCollectionLogInsightsOutputArgs struct {
	Filters GetSqlCollectionLogInsightsFilterArrayInput `pulumi:"filters"`
	// The group by parameter to summarize SQL collection log insights aggregation.
	GroupBy pulumi.StringPtrInput `pulumi:"groupBy"`
	// The OCID of the SQL collection resource.
	SqlCollectionId pulumi.StringInput `pulumi:"sqlCollectionId"`
	// An optional filter to return the stats of the SQL collection logs collected before the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeEnded pulumi.StringInput `pulumi:"timeEnded"`
	// An optional filter to return the stats of the SQL collection logs collected after the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeStarted pulumi.StringInput `pulumi:"timeStarted"`
}

func (GetSqlCollectionLogInsightsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlCollectionLogInsightsArgs)(nil)).Elem()
}

// A collection of values returned by getSqlCollectionLogInsights.
type GetSqlCollectionLogInsightsResultOutput struct{ *pulumi.OutputState }

func (GetSqlCollectionLogInsightsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlCollectionLogInsightsResult)(nil)).Elem()
}

func (o GetSqlCollectionLogInsightsResultOutput) ToGetSqlCollectionLogInsightsResultOutput() GetSqlCollectionLogInsightsResultOutput {
	return o
}

func (o GetSqlCollectionLogInsightsResultOutput) ToGetSqlCollectionLogInsightsResultOutputWithContext(ctx context.Context) GetSqlCollectionLogInsightsResultOutput {
	return o
}

func (o GetSqlCollectionLogInsightsResultOutput) Filters() GetSqlCollectionLogInsightsFilterArrayOutput {
	return o.ApplyT(func(v GetSqlCollectionLogInsightsResult) []GetSqlCollectionLogInsightsFilter { return v.Filters }).(GetSqlCollectionLogInsightsFilterArrayOutput)
}

func (o GetSqlCollectionLogInsightsResultOutput) GroupBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlCollectionLogInsightsResult) *string { return v.GroupBy }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSqlCollectionLogInsightsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlCollectionLogInsightsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSqlCollectionLogInsightsResultOutput) SqlCollectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlCollectionLogInsightsResult) string { return v.SqlCollectionId }).(pulumi.StringOutput)
}

// The list of sql_collection_log_insights_collection.
func (o GetSqlCollectionLogInsightsResultOutput) SqlCollectionLogInsightsCollections() GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollectionArrayOutput {
	return o.ApplyT(func(v GetSqlCollectionLogInsightsResult) []GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollection {
		return v.SqlCollectionLogInsightsCollections
	}).(GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollectionArrayOutput)
}

// The time at which the aggregation ended.
func (o GetSqlCollectionLogInsightsResultOutput) TimeEnded() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlCollectionLogInsightsResult) string { return v.TimeEnded }).(pulumi.StringOutput)
}

// The time at which the aggregation started.
func (o GetSqlCollectionLogInsightsResultOutput) TimeStarted() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlCollectionLogInsightsResult) string { return v.TimeStarted }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSqlCollectionLogInsightsResultOutput{})
}
