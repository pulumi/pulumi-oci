// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Sql Collections in Oracle Cloud Infrastructure Data Safe service.
//
// Retrieves a list of all SQL collections in Data Safe.
//
// The ListSqlCollections operation returns only the SQL collections in the specified `compartmentId`.
//
// The parameter `accessLevel` specifies whether to return only those compartments for which the
// requestor has INSPECT permissions on at least one resource directly
// or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
// Principal doesn't have access to even one of the child compartments. This is valid only when
// `compartmentIdInSubtree` is set to `true`.
//
// The parameter `compartmentIdInSubtree` applies when you perform ListSqlCollections on the
// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
// To get a full list of all compartments and subcompartments in the tenancy (root compartment),
// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetSqlCollections(ctx, &datasafe.GetSqlCollectionsArgs{
//				CompartmentId:                   _var.Compartment_id,
//				AccessLevel:                     pulumi.StringRef(_var.Sql_collection_access_level),
//				CompartmentIdInSubtree:          pulumi.BoolRef(_var.Sql_collection_compartment_id_in_subtree),
//				DbUserName:                      pulumi.StringRef(oci_identity_user.Test_user.Name),
//				DisplayName:                     pulumi.StringRef(_var.Sql_collection_display_name),
//				SqlCollectionId:                 pulumi.StringRef(oci_data_safe_sql_collection.Test_sql_collection.Id),
//				State:                           pulumi.StringRef(_var.Sql_collection_state),
//				TargetId:                        pulumi.StringRef(oci_cloud_guard_target.Test_target.Id),
//				TimeCreatedGreaterThanOrEqualTo: pulumi.StringRef(_var.Sql_collection_time_created_greater_than_or_equal_to),
//				TimeCreatedLessThan:             pulumi.StringRef(_var.Sql_collection_time_created_less_than),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSqlCollections(ctx *pulumi.Context, args *GetSqlCollectionsArgs, opts ...pulumi.InvokeOption) (*GetSqlCollectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSqlCollectionsResult
	err := ctx.Invoke("oci:DataSafe/getSqlCollections:getSqlCollections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSqlCollections.
type GetSqlCollectionsArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// A filter to return only items that match the specified user name.
	DbUserName *string `pulumi:"dbUserName"`
	// A filter to return only resources that match the specified display name.
	DisplayName *string                   `pulumi:"displayName"`
	Filters     []GetSqlCollectionsFilter `pulumi:"filters"`
	// An optional filter to return only resources that match the specified OCID of the SQL collection resource.
	SqlCollectionId *string `pulumi:"sqlCollectionId"`
	// The current state of the SQL collection.
	State *string `pulumi:"state"`
	// A filter to return only items related to a specific target OCID.
	TargetId *string `pulumi:"targetId"`
	// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimeCreatedGreaterThanOrEqualTo *string `pulumi:"timeCreatedGreaterThanOrEqualTo"`
	// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimeCreatedLessThan *string `pulumi:"timeCreatedLessThan"`
}

// A collection of values returned by getSqlCollections.
type GetSqlCollectionsResult struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// The OCID of the compartment containing the SQL collection.
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool  `pulumi:"compartmentIdInSubtree"`
	// The database user name.
	DbUserName *string `pulumi:"dbUserName"`
	// The display name of the SQL collection.
	DisplayName *string                   `pulumi:"displayName"`
	Filters     []GetSqlCollectionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of sql_collection_collection.
	SqlCollectionCollections []GetSqlCollectionsSqlCollectionCollection `pulumi:"sqlCollectionCollections"`
	SqlCollectionId          *string                                    `pulumi:"sqlCollectionId"`
	// The current state of the SQL collection.
	State *string `pulumi:"state"`
	// The OCID of the target corresponding to the security policy deployment.
	TargetId                        *string `pulumi:"targetId"`
	TimeCreatedGreaterThanOrEqualTo *string `pulumi:"timeCreatedGreaterThanOrEqualTo"`
	TimeCreatedLessThan             *string `pulumi:"timeCreatedLessThan"`
}

func GetSqlCollectionsOutput(ctx *pulumi.Context, args GetSqlCollectionsOutputArgs, opts ...pulumi.InvokeOption) GetSqlCollectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSqlCollectionsResult, error) {
			args := v.(GetSqlCollectionsArgs)
			r, err := GetSqlCollections(ctx, &args, opts...)
			var s GetSqlCollectionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSqlCollectionsResultOutput)
}

// A collection of arguments for invoking getSqlCollections.
type GetSqlCollectionsOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// A filter to return only items that match the specified user name.
	DbUserName pulumi.StringPtrInput `pulumi:"dbUserName"`
	// A filter to return only resources that match the specified display name.
	DisplayName pulumi.StringPtrInput             `pulumi:"displayName"`
	Filters     GetSqlCollectionsFilterArrayInput `pulumi:"filters"`
	// An optional filter to return only resources that match the specified OCID of the SQL collection resource.
	SqlCollectionId pulumi.StringPtrInput `pulumi:"sqlCollectionId"`
	// The current state of the SQL collection.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return only items related to a specific target OCID.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
	// A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimeCreatedGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeCreatedGreaterThanOrEqualTo"`
	// Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimeCreatedLessThan pulumi.StringPtrInput `pulumi:"timeCreatedLessThan"`
}

func (GetSqlCollectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlCollectionsArgs)(nil)).Elem()
}

// A collection of values returned by getSqlCollections.
type GetSqlCollectionsResultOutput struct{ *pulumi.OutputState }

func (GetSqlCollectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlCollectionsResult)(nil)).Elem()
}

func (o GetSqlCollectionsResultOutput) ToGetSqlCollectionsResultOutput() GetSqlCollectionsResultOutput {
	return o
}

func (o GetSqlCollectionsResultOutput) ToGetSqlCollectionsResultOutputWithContext(ctx context.Context) GetSqlCollectionsResultOutput {
	return o
}

func (o GetSqlCollectionsResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment containing the SQL collection.
func (o GetSqlCollectionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetSqlCollectionsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// The database user name.
func (o GetSqlCollectionsResultOutput) DbUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) *string { return v.DbUserName }).(pulumi.StringPtrOutput)
}

// The display name of the SQL collection.
func (o GetSqlCollectionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetSqlCollectionsResultOutput) Filters() GetSqlCollectionsFilterArrayOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) []GetSqlCollectionsFilter { return v.Filters }).(GetSqlCollectionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSqlCollectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of sql_collection_collection.
func (o GetSqlCollectionsResultOutput) SqlCollectionCollections() GetSqlCollectionsSqlCollectionCollectionArrayOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) []GetSqlCollectionsSqlCollectionCollection {
		return v.SqlCollectionCollections
	}).(GetSqlCollectionsSqlCollectionCollectionArrayOutput)
}

func (o GetSqlCollectionsResultOutput) SqlCollectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) *string { return v.SqlCollectionId }).(pulumi.StringPtrOutput)
}

// The current state of the SQL collection.
func (o GetSqlCollectionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The OCID of the target corresponding to the security policy deployment.
func (o GetSqlCollectionsResultOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func (o GetSqlCollectionsResultOutput) TimeCreatedGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) *string { return v.TimeCreatedGreaterThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetSqlCollectionsResultOutput) TimeCreatedLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSqlCollectionsResult) *string { return v.TimeCreatedLessThan }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSqlCollectionsResultOutput{})
}
