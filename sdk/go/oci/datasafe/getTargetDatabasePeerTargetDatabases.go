// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Target Database Peer Target Databases in Oracle Cloud Infrastructure Data Safe service.
//
// Lists all the peer target databases under the primary target database identified by the OCID passed as path parameter.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.GetTargetDatabasePeerTargetDatabases(ctx, &datasafe.GetTargetDatabasePeerTargetDatabasesArgs{
//				TargetDatabaseId: testTargetDatabase.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTargetDatabasePeerTargetDatabases(ctx *pulumi.Context, args *GetTargetDatabasePeerTargetDatabasesArgs, opts ...pulumi.InvokeOption) (*GetTargetDatabasePeerTargetDatabasesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTargetDatabasePeerTargetDatabasesResult
	err := ctx.Invoke("oci:DataSafe/getTargetDatabasePeerTargetDatabases:getTargetDatabasePeerTargetDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTargetDatabasePeerTargetDatabases.
type GetTargetDatabasePeerTargetDatabasesArgs struct {
	Filters []GetTargetDatabasePeerTargetDatabasesFilter `pulumi:"filters"`
	// The OCID of the Data Safe target database.
	TargetDatabaseId string `pulumi:"targetDatabaseId"`
}

// A collection of values returned by getTargetDatabasePeerTargetDatabases.
type GetTargetDatabasePeerTargetDatabasesResult struct {
	Filters []GetTargetDatabasePeerTargetDatabasesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of peer_target_database_collection.
	PeerTargetDatabaseCollections []GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollection `pulumi:"peerTargetDatabaseCollections"`
	TargetDatabaseId              string                                                             `pulumi:"targetDatabaseId"`
}

func GetTargetDatabasePeerTargetDatabasesOutput(ctx *pulumi.Context, args GetTargetDatabasePeerTargetDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetTargetDatabasePeerTargetDatabasesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTargetDatabasePeerTargetDatabasesResultOutput, error) {
			args := v.(GetTargetDatabasePeerTargetDatabasesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getTargetDatabasePeerTargetDatabases:getTargetDatabasePeerTargetDatabases", args, GetTargetDatabasePeerTargetDatabasesResultOutput{}, options).(GetTargetDatabasePeerTargetDatabasesResultOutput), nil
		}).(GetTargetDatabasePeerTargetDatabasesResultOutput)
}

// A collection of arguments for invoking getTargetDatabasePeerTargetDatabases.
type GetTargetDatabasePeerTargetDatabasesOutputArgs struct {
	Filters GetTargetDatabasePeerTargetDatabasesFilterArrayInput `pulumi:"filters"`
	// The OCID of the Data Safe target database.
	TargetDatabaseId pulumi.StringInput `pulumi:"targetDatabaseId"`
}

func (GetTargetDatabasePeerTargetDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetDatabasePeerTargetDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getTargetDatabasePeerTargetDatabases.
type GetTargetDatabasePeerTargetDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetTargetDatabasePeerTargetDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetDatabasePeerTargetDatabasesResult)(nil)).Elem()
}

func (o GetTargetDatabasePeerTargetDatabasesResultOutput) ToGetTargetDatabasePeerTargetDatabasesResultOutput() GetTargetDatabasePeerTargetDatabasesResultOutput {
	return o
}

func (o GetTargetDatabasePeerTargetDatabasesResultOutput) ToGetTargetDatabasePeerTargetDatabasesResultOutputWithContext(ctx context.Context) GetTargetDatabasePeerTargetDatabasesResultOutput {
	return o
}

func (o GetTargetDatabasePeerTargetDatabasesResultOutput) Filters() GetTargetDatabasePeerTargetDatabasesFilterArrayOutput {
	return o.ApplyT(func(v GetTargetDatabasePeerTargetDatabasesResult) []GetTargetDatabasePeerTargetDatabasesFilter {
		return v.Filters
	}).(GetTargetDatabasePeerTargetDatabasesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTargetDatabasePeerTargetDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetDatabasePeerTargetDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of peer_target_database_collection.
func (o GetTargetDatabasePeerTargetDatabasesResultOutput) PeerTargetDatabaseCollections() GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetTargetDatabasePeerTargetDatabasesResult) []GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollection {
		return v.PeerTargetDatabaseCollections
	}).(GetTargetDatabasePeerTargetDatabasesPeerTargetDatabaseCollectionArrayOutput)
}

func (o GetTargetDatabasePeerTargetDatabasesResultOutput) TargetDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetDatabasePeerTargetDatabasesResult) string { return v.TargetDatabaseId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTargetDatabasePeerTargetDatabasesResultOutput{})
}
