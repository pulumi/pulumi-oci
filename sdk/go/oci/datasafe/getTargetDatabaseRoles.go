// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Target Database Roles in Oracle Cloud Infrastructure Data Safe service.
//
// Returns a list of role metadata objects.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetTargetDatabaseRoles(ctx, &datasafe.GetTargetDatabaseRolesArgs{
//				TargetDatabaseId:   oci_data_safe_target_database.Test_target_database.Id,
//				AuthenticationType: pulumi.StringRef(_var.Target_database_role_authentication_type),
//				IsOracleMaintained: pulumi.BoolRef(_var.Target_database_role_is_oracle_maintained),
//				RoleNames:          _var.Target_database_role_role_name,
//				RoleNameContains:   pulumi.StringRef(_var.Target_database_role_role_name_contains),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTargetDatabaseRoles(ctx *pulumi.Context, args *GetTargetDatabaseRolesArgs, opts ...pulumi.InvokeOption) (*GetTargetDatabaseRolesResult, error) {
	var rv GetTargetDatabaseRolesResult
	err := ctx.Invoke("oci:DataSafe/getTargetDatabaseRoles:getTargetDatabaseRoles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTargetDatabaseRoles.
type GetTargetDatabaseRolesArgs struct {
	// A filter to return roles based on authentication type.
	AuthenticationType *string                        `pulumi:"authenticationType"`
	Filters            []GetTargetDatabaseRolesFilter `pulumi:"filters"`
	// A filter to return roles based on whether they are maintained by oracle or not.
	IsOracleMaintained *bool `pulumi:"isOracleMaintained"`
	// A filter to return only items if role name contains a specific string.
	RoleNameContains *string `pulumi:"roleNameContains"`
	// A filter to return only a specific role based on role name.
	RoleNames []string `pulumi:"roleNames"`
	// The OCID of the Data Safe target database.
	TargetDatabaseId string `pulumi:"targetDatabaseId"`
}

// A collection of values returned by getTargetDatabaseRoles.
type GetTargetDatabaseRolesResult struct {
	// Type of authentication.
	AuthenticationType *string                        `pulumi:"authenticationType"`
	Filters            []GetTargetDatabaseRolesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Is the role oracle maintained.
	IsOracleMaintained *bool   `pulumi:"isOracleMaintained"`
	RoleNameContains   *string `pulumi:"roleNameContains"`
	// Name of the role.
	RoleNames []string `pulumi:"roleNames"`
	// The list of roles.
	Roles            []GetTargetDatabaseRolesRole `pulumi:"roles"`
	TargetDatabaseId string                       `pulumi:"targetDatabaseId"`
}

func GetTargetDatabaseRolesOutput(ctx *pulumi.Context, args GetTargetDatabaseRolesOutputArgs, opts ...pulumi.InvokeOption) GetTargetDatabaseRolesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTargetDatabaseRolesResult, error) {
			args := v.(GetTargetDatabaseRolesArgs)
			r, err := GetTargetDatabaseRoles(ctx, &args, opts...)
			var s GetTargetDatabaseRolesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTargetDatabaseRolesResultOutput)
}

// A collection of arguments for invoking getTargetDatabaseRoles.
type GetTargetDatabaseRolesOutputArgs struct {
	// A filter to return roles based on authentication type.
	AuthenticationType pulumi.StringPtrInput                  `pulumi:"authenticationType"`
	Filters            GetTargetDatabaseRolesFilterArrayInput `pulumi:"filters"`
	// A filter to return roles based on whether they are maintained by oracle or not.
	IsOracleMaintained pulumi.BoolPtrInput `pulumi:"isOracleMaintained"`
	// A filter to return only items if role name contains a specific string.
	RoleNameContains pulumi.StringPtrInput `pulumi:"roleNameContains"`
	// A filter to return only a specific role based on role name.
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	// The OCID of the Data Safe target database.
	TargetDatabaseId pulumi.StringInput `pulumi:"targetDatabaseId"`
}

func (GetTargetDatabaseRolesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetDatabaseRolesArgs)(nil)).Elem()
}

// A collection of values returned by getTargetDatabaseRoles.
type GetTargetDatabaseRolesResultOutput struct{ *pulumi.OutputState }

func (GetTargetDatabaseRolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetDatabaseRolesResult)(nil)).Elem()
}

func (o GetTargetDatabaseRolesResultOutput) ToGetTargetDatabaseRolesResultOutput() GetTargetDatabaseRolesResultOutput {
	return o
}

func (o GetTargetDatabaseRolesResultOutput) ToGetTargetDatabaseRolesResultOutputWithContext(ctx context.Context) GetTargetDatabaseRolesResultOutput {
	return o
}

// Type of authentication.
func (o GetTargetDatabaseRolesResultOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTargetDatabaseRolesResult) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

func (o GetTargetDatabaseRolesResultOutput) Filters() GetTargetDatabaseRolesFilterArrayOutput {
	return o.ApplyT(func(v GetTargetDatabaseRolesResult) []GetTargetDatabaseRolesFilter { return v.Filters }).(GetTargetDatabaseRolesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTargetDatabaseRolesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetDatabaseRolesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Is the role oracle maintained.
func (o GetTargetDatabaseRolesResultOutput) IsOracleMaintained() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTargetDatabaseRolesResult) *bool { return v.IsOracleMaintained }).(pulumi.BoolPtrOutput)
}

func (o GetTargetDatabaseRolesResultOutput) RoleNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTargetDatabaseRolesResult) *string { return v.RoleNameContains }).(pulumi.StringPtrOutput)
}

// Name of the role.
func (o GetTargetDatabaseRolesResultOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetDatabaseRolesResult) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

// The list of roles.
func (o GetTargetDatabaseRolesResultOutput) Roles() GetTargetDatabaseRolesRoleArrayOutput {
	return o.ApplyT(func(v GetTargetDatabaseRolesResult) []GetTargetDatabaseRolesRole { return v.Roles }).(GetTargetDatabaseRolesRoleArrayOutput)
}

func (o GetTargetDatabaseRolesResultOutput) TargetDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetDatabaseRolesResult) string { return v.TargetDatabaseId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTargetDatabaseRolesResultOutput{})
}
