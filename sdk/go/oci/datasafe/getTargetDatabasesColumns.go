// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Target Databases Columns in Oracle Cloud Infrastructure Data Safe service.
//
// Returns a list of column metadata objects.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.GetTargetDatabasesColumns(ctx, &datasafe.GetTargetDatabasesColumnsArgs{
//				TargetDatabaseId:   testTargetDatabase.Id,
//				ColumnNames:        targetDatabasesColumnColumnName,
//				ColumnNameContains: pulumi.StringRef(targetDatabasesColumnColumnNameContains),
//				Datatypes:          targetDatabasesColumnDatatype,
//				SchemaNames:        targetDatabasesColumnSchemaName,
//				SchemaNameContains: pulumi.StringRef(targetDatabasesColumnSchemaNameContains),
//				TableNames:         testTable.Name,
//				TableNameContains:  pulumi.StringRef(targetDatabasesColumnTableNameContains),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTargetDatabasesColumns(ctx *pulumi.Context, args *GetTargetDatabasesColumnsArgs, opts ...pulumi.InvokeOption) (*GetTargetDatabasesColumnsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTargetDatabasesColumnsResult
	err := ctx.Invoke("oci:DataSafe/getTargetDatabasesColumns:getTargetDatabasesColumns", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTargetDatabasesColumns.
type GetTargetDatabasesColumnsArgs struct {
	// A filter to return only items if column name contains a specific string.
	ColumnNameContains *string `pulumi:"columnNameContains"`
	// A filter to return only a specific column based on column name.
	ColumnNames []string `pulumi:"columnNames"`
	// A filter to return only items related to specific datatype.
	Datatypes []string                          `pulumi:"datatypes"`
	Filters   []GetTargetDatabasesColumnsFilter `pulumi:"filters"`
	// A filter to return only items if schema name contains a specific string.
	SchemaNameContains *string `pulumi:"schemaNameContains"`
	// A filter to return only items related to specific schema name.
	SchemaNames []string `pulumi:"schemaNames"`
	// A filter to return only items if table name contains a specific string.
	TableNameContains *string `pulumi:"tableNameContains"`
	// A filter to return only items related to specific table name.
	TableNames []string `pulumi:"tableNames"`
	// The OCID of the Data Safe target database.
	TargetDatabaseId string `pulumi:"targetDatabaseId"`
}

// A collection of values returned by getTargetDatabasesColumns.
type GetTargetDatabasesColumnsResult struct {
	ColumnNameContains *string `pulumi:"columnNameContains"`
	// Name of the column.
	ColumnNames []string `pulumi:"columnNames"`
	// The list of columns.
	Columns   []GetTargetDatabasesColumnsColumn `pulumi:"columns"`
	Datatypes []string                          `pulumi:"datatypes"`
	Filters   []GetTargetDatabasesColumnsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string  `pulumi:"id"`
	SchemaNameContains *string `pulumi:"schemaNameContains"`
	// Name of the schema.
	SchemaNames       []string `pulumi:"schemaNames"`
	TableNameContains *string  `pulumi:"tableNameContains"`
	// Name of the table.
	TableNames       []string `pulumi:"tableNames"`
	TargetDatabaseId string   `pulumi:"targetDatabaseId"`
}

func GetTargetDatabasesColumnsOutput(ctx *pulumi.Context, args GetTargetDatabasesColumnsOutputArgs, opts ...pulumi.InvokeOption) GetTargetDatabasesColumnsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTargetDatabasesColumnsResultOutput, error) {
			args := v.(GetTargetDatabasesColumnsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getTargetDatabasesColumns:getTargetDatabasesColumns", args, GetTargetDatabasesColumnsResultOutput{}, options).(GetTargetDatabasesColumnsResultOutput), nil
		}).(GetTargetDatabasesColumnsResultOutput)
}

// A collection of arguments for invoking getTargetDatabasesColumns.
type GetTargetDatabasesColumnsOutputArgs struct {
	// A filter to return only items if column name contains a specific string.
	ColumnNameContains pulumi.StringPtrInput `pulumi:"columnNameContains"`
	// A filter to return only a specific column based on column name.
	ColumnNames pulumi.StringArrayInput `pulumi:"columnNames"`
	// A filter to return only items related to specific datatype.
	Datatypes pulumi.StringArrayInput                   `pulumi:"datatypes"`
	Filters   GetTargetDatabasesColumnsFilterArrayInput `pulumi:"filters"`
	// A filter to return only items if schema name contains a specific string.
	SchemaNameContains pulumi.StringPtrInput `pulumi:"schemaNameContains"`
	// A filter to return only items related to specific schema name.
	SchemaNames pulumi.StringArrayInput `pulumi:"schemaNames"`
	// A filter to return only items if table name contains a specific string.
	TableNameContains pulumi.StringPtrInput `pulumi:"tableNameContains"`
	// A filter to return only items related to specific table name.
	TableNames pulumi.StringArrayInput `pulumi:"tableNames"`
	// The OCID of the Data Safe target database.
	TargetDatabaseId pulumi.StringInput `pulumi:"targetDatabaseId"`
}

func (GetTargetDatabasesColumnsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetDatabasesColumnsArgs)(nil)).Elem()
}

// A collection of values returned by getTargetDatabasesColumns.
type GetTargetDatabasesColumnsResultOutput struct{ *pulumi.OutputState }

func (GetTargetDatabasesColumnsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetDatabasesColumnsResult)(nil)).Elem()
}

func (o GetTargetDatabasesColumnsResultOutput) ToGetTargetDatabasesColumnsResultOutput() GetTargetDatabasesColumnsResultOutput {
	return o
}

func (o GetTargetDatabasesColumnsResultOutput) ToGetTargetDatabasesColumnsResultOutputWithContext(ctx context.Context) GetTargetDatabasesColumnsResultOutput {
	return o
}

func (o GetTargetDatabasesColumnsResultOutput) ColumnNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTargetDatabasesColumnsResult) *string { return v.ColumnNameContains }).(pulumi.StringPtrOutput)
}

// Name of the column.
func (o GetTargetDatabasesColumnsResultOutput) ColumnNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetDatabasesColumnsResult) []string { return v.ColumnNames }).(pulumi.StringArrayOutput)
}

// The list of columns.
func (o GetTargetDatabasesColumnsResultOutput) Columns() GetTargetDatabasesColumnsColumnArrayOutput {
	return o.ApplyT(func(v GetTargetDatabasesColumnsResult) []GetTargetDatabasesColumnsColumn { return v.Columns }).(GetTargetDatabasesColumnsColumnArrayOutput)
}

func (o GetTargetDatabasesColumnsResultOutput) Datatypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetDatabasesColumnsResult) []string { return v.Datatypes }).(pulumi.StringArrayOutput)
}

func (o GetTargetDatabasesColumnsResultOutput) Filters() GetTargetDatabasesColumnsFilterArrayOutput {
	return o.ApplyT(func(v GetTargetDatabasesColumnsResult) []GetTargetDatabasesColumnsFilter { return v.Filters }).(GetTargetDatabasesColumnsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTargetDatabasesColumnsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetDatabasesColumnsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTargetDatabasesColumnsResultOutput) SchemaNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTargetDatabasesColumnsResult) *string { return v.SchemaNameContains }).(pulumi.StringPtrOutput)
}

// Name of the schema.
func (o GetTargetDatabasesColumnsResultOutput) SchemaNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetDatabasesColumnsResult) []string { return v.SchemaNames }).(pulumi.StringArrayOutput)
}

func (o GetTargetDatabasesColumnsResultOutput) TableNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTargetDatabasesColumnsResult) *string { return v.TableNameContains }).(pulumi.StringPtrOutput)
}

// Name of the table.
func (o GetTargetDatabasesColumnsResultOutput) TableNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetDatabasesColumnsResult) []string { return v.TableNames }).(pulumi.StringArrayOutput)
}

func (o GetTargetDatabasesColumnsResultOutput) TargetDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetDatabasesColumnsResult) string { return v.TargetDatabaseId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTargetDatabasesColumnsResultOutput{})
}
