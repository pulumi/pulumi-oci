// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Target Databases Schemas in Oracle Cloud Infrastructure Data Safe service.
//
// Returns list of schema.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetTargetDatabasesSchemas(ctx, &datasafe.GetTargetDatabasesSchemasArgs{
//				TargetDatabaseId:   testTargetDatabase.Id,
//				IsOracleMaintained: pulumi.BoolRef(targetDatabasesSchemaIsOracleMaintained),
//				SchemaNames:        targetDatabasesSchemaSchemaName,
//				SchemaNameContains: pulumi.StringRef(targetDatabasesSchemaSchemaNameContains),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTargetDatabasesSchemas(ctx *pulumi.Context, args *GetTargetDatabasesSchemasArgs, opts ...pulumi.InvokeOption) (*GetTargetDatabasesSchemasResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTargetDatabasesSchemasResult
	err := ctx.Invoke("oci:DataSafe/getTargetDatabasesSchemas:getTargetDatabasesSchemas", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTargetDatabasesSchemas.
type GetTargetDatabasesSchemasArgs struct {
	Filters []GetTargetDatabasesSchemasFilter `pulumi:"filters"`
	// A filter to return only items related to specific type of schema.
	IsOracleMaintained *bool `pulumi:"isOracleMaintained"`
	// A filter to return only items if schema name contains a specific string.
	SchemaNameContains *string `pulumi:"schemaNameContains"`
	// A filter to return only items related to specific schema name.
	SchemaNames []string `pulumi:"schemaNames"`
	// The OCID of the Data Safe target database.
	TargetDatabaseId string `pulumi:"targetDatabaseId"`
}

// A collection of values returned by getTargetDatabasesSchemas.
type GetTargetDatabasesSchemasResult struct {
	Filters []GetTargetDatabasesSchemasFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates if the schema is oracle supplied.
	IsOracleMaintained *bool   `pulumi:"isOracleMaintained"`
	SchemaNameContains *string `pulumi:"schemaNameContains"`
	// Name of the schema.
	SchemaNames []string `pulumi:"schemaNames"`
	// The list of schemas.
	Schemas          []GetTargetDatabasesSchemasSchema `pulumi:"schemas"`
	TargetDatabaseId string                            `pulumi:"targetDatabaseId"`
}

func GetTargetDatabasesSchemasOutput(ctx *pulumi.Context, args GetTargetDatabasesSchemasOutputArgs, opts ...pulumi.InvokeOption) GetTargetDatabasesSchemasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTargetDatabasesSchemasResult, error) {
			args := v.(GetTargetDatabasesSchemasArgs)
			r, err := GetTargetDatabasesSchemas(ctx, &args, opts...)
			var s GetTargetDatabasesSchemasResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTargetDatabasesSchemasResultOutput)
}

// A collection of arguments for invoking getTargetDatabasesSchemas.
type GetTargetDatabasesSchemasOutputArgs struct {
	Filters GetTargetDatabasesSchemasFilterArrayInput `pulumi:"filters"`
	// A filter to return only items related to specific type of schema.
	IsOracleMaintained pulumi.BoolPtrInput `pulumi:"isOracleMaintained"`
	// A filter to return only items if schema name contains a specific string.
	SchemaNameContains pulumi.StringPtrInput `pulumi:"schemaNameContains"`
	// A filter to return only items related to specific schema name.
	SchemaNames pulumi.StringArrayInput `pulumi:"schemaNames"`
	// The OCID of the Data Safe target database.
	TargetDatabaseId pulumi.StringInput `pulumi:"targetDatabaseId"`
}

func (GetTargetDatabasesSchemasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetDatabasesSchemasArgs)(nil)).Elem()
}

// A collection of values returned by getTargetDatabasesSchemas.
type GetTargetDatabasesSchemasResultOutput struct{ *pulumi.OutputState }

func (GetTargetDatabasesSchemasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetDatabasesSchemasResult)(nil)).Elem()
}

func (o GetTargetDatabasesSchemasResultOutput) ToGetTargetDatabasesSchemasResultOutput() GetTargetDatabasesSchemasResultOutput {
	return o
}

func (o GetTargetDatabasesSchemasResultOutput) ToGetTargetDatabasesSchemasResultOutputWithContext(ctx context.Context) GetTargetDatabasesSchemasResultOutput {
	return o
}

func (o GetTargetDatabasesSchemasResultOutput) Filters() GetTargetDatabasesSchemasFilterArrayOutput {
	return o.ApplyT(func(v GetTargetDatabasesSchemasResult) []GetTargetDatabasesSchemasFilter { return v.Filters }).(GetTargetDatabasesSchemasFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTargetDatabasesSchemasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetDatabasesSchemasResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates if the schema is oracle supplied.
func (o GetTargetDatabasesSchemasResultOutput) IsOracleMaintained() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTargetDatabasesSchemasResult) *bool { return v.IsOracleMaintained }).(pulumi.BoolPtrOutput)
}

func (o GetTargetDatabasesSchemasResultOutput) SchemaNameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTargetDatabasesSchemasResult) *string { return v.SchemaNameContains }).(pulumi.StringPtrOutput)
}

// Name of the schema.
func (o GetTargetDatabasesSchemasResultOutput) SchemaNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTargetDatabasesSchemasResult) []string { return v.SchemaNames }).(pulumi.StringArrayOutput)
}

// The list of schemas.
func (o GetTargetDatabasesSchemasResultOutput) Schemas() GetTargetDatabasesSchemasSchemaArrayOutput {
	return o.ApplyT(func(v GetTargetDatabasesSchemasResult) []GetTargetDatabasesSchemasSchema { return v.Schemas }).(GetTargetDatabasesSchemasSchemaArrayOutput)
}

func (o GetTargetDatabasesSchemasResultOutput) TargetDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetDatabasesSchemasResult) string { return v.TargetDatabaseId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTargetDatabasesSchemasResultOutput{})
}
