// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Unified Audit Policy Definitions in Oracle Cloud Infrastructure Data Safe service.
//
// Retrieves a list of all unified audit policy definitions in Data Safe.
//
// The ListUnifiedAuditPolicyDefinitions operation returns only the unified audit policy definitions in the specified `compartmentId`.
//
// The parameter `accessLevel` specifies whether to return only those compartments for which the
// requester has INSPECT permissions on at least one resource directly
// or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
// Principal doesn't have access to even one of the child compartments. This is valid only when
// `compartmentIdInSubtree` is set to `true`.
//
// The parameter `compartmentIdInSubtree` applies when you perform ListUnifiedAuditPolicyDefinitions on the
// `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
// To get a full list of all compartments and subcompartments in the tenancy (root compartment),
// set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.GetUnifiedAuditPolicyDefinitions(ctx, &datasafe.GetUnifiedAuditPolicyDefinitionsArgs{
//				CompartmentId:                  compartmentId,
//				AccessLevel:                    pulumi.StringRef(unifiedAuditPolicyDefinitionAccessLevel),
//				CompartmentIdInSubtree:         pulumi.BoolRef(unifiedAuditPolicyDefinitionCompartmentIdInSubtree),
//				DisplayName:                    pulumi.StringRef(unifiedAuditPolicyDefinitionDisplayName),
//				IsSeeded:                       pulumi.BoolRef(unifiedAuditPolicyDefinitionIsSeeded),
//				State:                          pulumi.StringRef(unifiedAuditPolicyDefinitionState),
//				UnifiedAuditPolicyCategory:     pulumi.StringRef(unifiedAuditPolicyDefinitionUnifiedAuditPolicyCategory),
//				UnifiedAuditPolicyDefinitionId: pulumi.StringRef(testUnifiedAuditPolicyDefinition.Id),
//				UnifiedAuditPolicyName:         pulumi.StringRef(testUnifiedAuditPolicy.Name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUnifiedAuditPolicyDefinitions(ctx *pulumi.Context, args *GetUnifiedAuditPolicyDefinitionsArgs, opts ...pulumi.InvokeOption) (*GetUnifiedAuditPolicyDefinitionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUnifiedAuditPolicyDefinitionsResult
	err := ctx.Invoke("oci:DataSafe/getUnifiedAuditPolicyDefinitions:getUnifiedAuditPolicyDefinitions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUnifiedAuditPolicyDefinitions.
type GetUnifiedAuditPolicyDefinitionsArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// A filter to return only resources that match the specified display name.
	DisplayName *string                                  `pulumi:"displayName"`
	Filters     []GetUnifiedAuditPolicyDefinitionsFilter `pulumi:"filters"`
	// A boolean flag indicating to list seeded unified audit policy definitions. Set this parameter to get list of seeded unified audit policy definitions.
	IsSeeded *bool `pulumi:"isSeeded"`
	// The current state of the unified audit policy definition.
	State *string `pulumi:"state"`
	// The category to which the unified audit policy definition belongs to.
	UnifiedAuditPolicyCategory *string `pulumi:"unifiedAuditPolicyCategory"`
	// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
	UnifiedAuditPolicyDefinitionId *string `pulumi:"unifiedAuditPolicyDefinitionId"`
	// The name of the unified audit policy.
	UnifiedAuditPolicyName *string `pulumi:"unifiedAuditPolicyName"`
}

// A collection of values returned by getUnifiedAuditPolicyDefinitions.
type GetUnifiedAuditPolicyDefinitionsResult struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// The OCID of the compartment containing the unified audit policy definition.
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool  `pulumi:"compartmentIdInSubtree"`
	// The display name of the unified audit policy definition.
	DisplayName *string                                  `pulumi:"displayName"`
	Filters     []GetUnifiedAuditPolicyDefinitionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Signifies whether the unified audit policy definition is seeded or not.
	IsSeeded *bool `pulumi:"isSeeded"`
	// The current state of the unified audit policy definition.
	State                      *string `pulumi:"state"`
	UnifiedAuditPolicyCategory *string `pulumi:"unifiedAuditPolicyCategory"`
	// The list of unified_audit_policy_definition_collection.
	UnifiedAuditPolicyDefinitionCollections []GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection `pulumi:"unifiedAuditPolicyDefinitionCollections"`
	UnifiedAuditPolicyDefinitionId          *string                                                                  `pulumi:"unifiedAuditPolicyDefinitionId"`
	UnifiedAuditPolicyName                  *string                                                                  `pulumi:"unifiedAuditPolicyName"`
}

func GetUnifiedAuditPolicyDefinitionsOutput(ctx *pulumi.Context, args GetUnifiedAuditPolicyDefinitionsOutputArgs, opts ...pulumi.InvokeOption) GetUnifiedAuditPolicyDefinitionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUnifiedAuditPolicyDefinitionsResultOutput, error) {
			args := v.(GetUnifiedAuditPolicyDefinitionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getUnifiedAuditPolicyDefinitions:getUnifiedAuditPolicyDefinitions", args, GetUnifiedAuditPolicyDefinitionsResultOutput{}, options).(GetUnifiedAuditPolicyDefinitionsResultOutput), nil
		}).(GetUnifiedAuditPolicyDefinitionsResultOutput)
}

// A collection of arguments for invoking getUnifiedAuditPolicyDefinitions.
type GetUnifiedAuditPolicyDefinitionsOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// A filter to return only resources that match the specified display name.
	DisplayName pulumi.StringPtrInput                            `pulumi:"displayName"`
	Filters     GetUnifiedAuditPolicyDefinitionsFilterArrayInput `pulumi:"filters"`
	// A boolean flag indicating to list seeded unified audit policy definitions. Set this parameter to get list of seeded unified audit policy definitions.
	IsSeeded pulumi.BoolPtrInput `pulumi:"isSeeded"`
	// The current state of the unified audit policy definition.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The category to which the unified audit policy definition belongs to.
	UnifiedAuditPolicyCategory pulumi.StringPtrInput `pulumi:"unifiedAuditPolicyCategory"`
	// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
	UnifiedAuditPolicyDefinitionId pulumi.StringPtrInput `pulumi:"unifiedAuditPolicyDefinitionId"`
	// The name of the unified audit policy.
	UnifiedAuditPolicyName pulumi.StringPtrInput `pulumi:"unifiedAuditPolicyName"`
}

func (GetUnifiedAuditPolicyDefinitionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsArgs)(nil)).Elem()
}

// A collection of values returned by getUnifiedAuditPolicyDefinitions.
type GetUnifiedAuditPolicyDefinitionsResultOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPolicyDefinitionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsResult)(nil)).Elem()
}

func (o GetUnifiedAuditPolicyDefinitionsResultOutput) ToGetUnifiedAuditPolicyDefinitionsResultOutput() GetUnifiedAuditPolicyDefinitionsResultOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsResultOutput) ToGetUnifiedAuditPolicyDefinitionsResultOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsResultOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment containing the unified audit policy definition.
func (o GetUnifiedAuditPolicyDefinitionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetUnifiedAuditPolicyDefinitionsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// The display name of the unified audit policy definition.
func (o GetUnifiedAuditPolicyDefinitionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetUnifiedAuditPolicyDefinitionsResultOutput) Filters() GetUnifiedAuditPolicyDefinitionsFilterArrayOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) []GetUnifiedAuditPolicyDefinitionsFilter {
		return v.Filters
	}).(GetUnifiedAuditPolicyDefinitionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUnifiedAuditPolicyDefinitionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Signifies whether the unified audit policy definition is seeded or not.
func (o GetUnifiedAuditPolicyDefinitionsResultOutput) IsSeeded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) *bool { return v.IsSeeded }).(pulumi.BoolPtrOutput)
}

// The current state of the unified audit policy definition.
func (o GetUnifiedAuditPolicyDefinitionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetUnifiedAuditPolicyDefinitionsResultOutput) UnifiedAuditPolicyCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) *string { return v.UnifiedAuditPolicyCategory }).(pulumi.StringPtrOutput)
}

// The list of unified_audit_policy_definition_collection.
func (o GetUnifiedAuditPolicyDefinitionsResultOutput) UnifiedAuditPolicyDefinitionCollections() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) []GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection {
		return v.UnifiedAuditPolicyDefinitionCollections
	}).(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput)
}

func (o GetUnifiedAuditPolicyDefinitionsResultOutput) UnifiedAuditPolicyDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) *string { return v.UnifiedAuditPolicyDefinitionId }).(pulumi.StringPtrOutput)
}

func (o GetUnifiedAuditPolicyDefinitionsResultOutput) UnifiedAuditPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsResult) *string { return v.UnifiedAuditPolicyName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUnifiedAuditPolicyDefinitionsResultOutput{})
}
