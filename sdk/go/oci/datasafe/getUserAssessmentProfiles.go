// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of User Assessment Profiles in Oracle Cloud Infrastructure Data Safe service.
//
// Gets a list of user profiles containing the profile details along with the target id and user counts.
//
// The ListProfiles operation returns only the profiles belonging to a certain target. If compartment type user assessment
// id is provided, then profile information for all the targets belonging to the pertaining compartment is returned.
// The list does not include any subcompartments of the compartment under consideration.
//
// The parameter 'accessLevel' specifies whether to return only those compartments for which the requestor has
// INSPECT permissions on at least one resource directly or indirectly (ACCESSIBLE) (the resource can be in a
// subcompartment) or to return Not Authorized if Principal doesn't have access to even one of the child compartments.
// This is valid only when 'compartmentIdInSubtree' is set to 'true'.
//
// The parameter 'compartmentIdInSubtree' applies when you perform ListUserProfiles on the 'compartmentId' belonging
// to the assessmentId passed and when it is set to true, the entire hierarchy of compartments can be returned.
// To get a full list of all compartments and subcompartments in the tenancy (root compartment), set the parameter
// 'compartmentIdInSubtree' to true and 'accessLevel' to ACCESSIBLE.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.GetUserAssessmentProfiles(ctx, &datasafe.GetUserAssessmentProfilesArgs{
//				CompartmentId:                         compartmentId,
//				UserAssessmentId:                      testUserAssessment.Id,
//				AccessLevel:                           pulumi.StringRef(userAssessmentProfileAccessLevel),
//				CompartmentIdInSubtree:                pulumi.BoolRef(userAssessmentProfileCompartmentIdInSubtree),
//				FailedLoginAttemptsGreaterThanOrEqual: pulumi.StringRef(userAssessmentProfileFailedLoginAttemptsGreaterThanOrEqual),
//				FailedLoginAttemptsLessThan:           pulumi.StringRef(userAssessmentProfileFailedLoginAttemptsLessThan),
//				InactiveAccountTimeGreaterThanOrEqual: pulumi.StringRef(userAssessmentProfileInactiveAccountTimeGreaterThanOrEqual),
//				InactiveAccountTimeLessThan:           pulumi.StringRef(userAssessmentProfileInactiveAccountTimeLessThan),
//				IsUserCreated:                         pulumi.BoolRef(userAssessmentProfileIsUserCreated),
//				PasswordLockTimeGreaterThanOrEqual:    pulumi.StringRef(userAssessmentProfilePasswordLockTimeGreaterThanOrEqual),
//				PasswordLockTimeLessThan:              pulumi.StringRef(userAssessmentProfilePasswordLockTimeLessThan),
//				PasswordVerificationFunction:          pulumi.StringRef(userAssessmentProfilePasswordVerificationFunction),
//				ProfileName:                           pulumi.StringRef(testProfile.Name),
//				SessionsPerUserGreaterThanOrEqual:     pulumi.StringRef(userAssessmentProfileSessionsPerUserGreaterThanOrEqual),
//				SessionsPerUserLessThan:               pulumi.StringRef(userAssessmentProfileSessionsPerUserLessThan),
//				TargetId:                              pulumi.StringRef(testTarget.Id),
//				UserCountGreaterThanOrEqual:           pulumi.StringRef(userAssessmentProfileUserCountGreaterThanOrEqual),
//				UserCountLessThan:                     pulumi.StringRef(userAssessmentProfileUserCountLessThan),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserAssessmentProfiles(ctx *pulumi.Context, args *GetUserAssessmentProfilesArgs, opts ...pulumi.InvokeOption) (*GetUserAssessmentProfilesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserAssessmentProfilesResult
	err := ctx.Invoke("oci:DataSafe/getUserAssessmentProfiles:getUserAssessmentProfiles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserAssessmentProfiles.
type GetUserAssessmentProfilesArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// An optional filter to return the profiles having allow failed login attempts number greater than or equal to the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	FailedLoginAttemptsGreaterThanOrEqual *string `pulumi:"failedLoginAttemptsGreaterThanOrEqual"`
	// An optional filter to return the profiles having failed login attempts number less than the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	FailedLoginAttemptsLessThan *string                           `pulumi:"failedLoginAttemptsLessThan"`
	Filters                     []GetUserAssessmentProfilesFilter `pulumi:"filters"`
	// An optional filter to return the profiles allowing inactive account time in days greater than or equal to the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	InactiveAccountTimeGreaterThanOrEqual *string `pulumi:"inactiveAccountTimeGreaterThanOrEqual"`
	// An optional filter to return the profiles  allowing inactive account time in days less than the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	InactiveAccountTimeLessThan *string `pulumi:"inactiveAccountTimeLessThan"`
	// An optional filter to return the user created profiles.
	IsUserCreated *bool `pulumi:"isUserCreated"`
	// An optional filter to return the profiles having password lock number greater than or equal to the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	PasswordLockTimeGreaterThanOrEqual *string `pulumi:"passwordLockTimeGreaterThanOrEqual"`
	// An optional filter to return the profiles having password lock number less than the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	PasswordLockTimeLessThan *string `pulumi:"passwordLockTimeLessThan"`
	// An optional filter to filter the profiles based on password verification function.
	PasswordVerificationFunction *string `pulumi:"passwordVerificationFunction"`
	// A filter to return only items that match the specified profile name.
	ProfileName *string `pulumi:"profileName"`
	// An optional filter to return the profiles permitting the user to spawn multiple sessions having count. greater than or equal to the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	SessionsPerUserGreaterThanOrEqual *string `pulumi:"sessionsPerUserGreaterThanOrEqual"`
	// An optional filter to return the profiles permitting the user to spawn multiple sessions having count less than the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	SessionsPerUserLessThan *string `pulumi:"sessionsPerUserLessThan"`
	// A filter to return only items related to a specific target OCID.
	TargetId *string `pulumi:"targetId"`
	// The OCID of the user assessment.
	UserAssessmentId string `pulumi:"userAssessmentId"`
	// An optional filter to return the profiles having user count greater than or equal to the provided value.
	UserCountGreaterThanOrEqual *string `pulumi:"userCountGreaterThanOrEqual"`
	// An optional filter to return the profiles having user count less than the provided value.
	UserCountLessThan *string `pulumi:"userCountLessThan"`
}

// A collection of values returned by getUserAssessmentProfiles.
type GetUserAssessmentProfilesResult struct {
	AccessLevel *string `pulumi:"accessLevel"`
	// The OCID of the compartment that contains the user assessment.
	CompartmentId                         string                            `pulumi:"compartmentId"`
	CompartmentIdInSubtree                *bool                             `pulumi:"compartmentIdInSubtree"`
	FailedLoginAttemptsGreaterThanOrEqual *string                           `pulumi:"failedLoginAttemptsGreaterThanOrEqual"`
	FailedLoginAttemptsLessThan           *string                           `pulumi:"failedLoginAttemptsLessThan"`
	Filters                               []GetUserAssessmentProfilesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                                    string  `pulumi:"id"`
	InactiveAccountTimeGreaterThanOrEqual *string `pulumi:"inactiveAccountTimeGreaterThanOrEqual"`
	InactiveAccountTimeLessThan           *string `pulumi:"inactiveAccountTimeLessThan"`
	// Represents if the profile is created by user.
	IsUserCreated                      *bool   `pulumi:"isUserCreated"`
	PasswordLockTimeGreaterThanOrEqual *string `pulumi:"passwordLockTimeGreaterThanOrEqual"`
	PasswordLockTimeLessThan           *string `pulumi:"passwordLockTimeLessThan"`
	// Name of the PL/SQL that can be used for password verification.
	PasswordVerificationFunction *string `pulumi:"passwordVerificationFunction"`
	// The name of the profile.
	ProfileName *string `pulumi:"profileName"`
	// The list of profiles.
	Profiles                          []GetUserAssessmentProfilesProfile `pulumi:"profiles"`
	SessionsPerUserGreaterThanOrEqual *string                            `pulumi:"sessionsPerUserGreaterThanOrEqual"`
	SessionsPerUserLessThan           *string                            `pulumi:"sessionsPerUserLessThan"`
	// The OCID of the target database.
	TargetId *string `pulumi:"targetId"`
	// The OCID of the latest user assessment corresponding to the target under consideration. A compartment  type assessment can also be passed to profiles from all the targets from the corresponding compartment.
	UserAssessmentId            string  `pulumi:"userAssessmentId"`
	UserCountGreaterThanOrEqual *string `pulumi:"userCountGreaterThanOrEqual"`
	UserCountLessThan           *string `pulumi:"userCountLessThan"`
}

func GetUserAssessmentProfilesOutput(ctx *pulumi.Context, args GetUserAssessmentProfilesOutputArgs, opts ...pulumi.InvokeOption) GetUserAssessmentProfilesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUserAssessmentProfilesResultOutput, error) {
			args := v.(GetUserAssessmentProfilesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetUserAssessmentProfilesResult
			secret, err := ctx.InvokePackageRaw("oci:DataSafe/getUserAssessmentProfiles:getUserAssessmentProfiles", args, &rv, "", opts...)
			if err != nil {
				return GetUserAssessmentProfilesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetUserAssessmentProfilesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetUserAssessmentProfilesResultOutput), nil
			}
			return output, nil
		}).(GetUserAssessmentProfilesResultOutput)
}

// A collection of arguments for invoking getUserAssessmentProfiles.
type GetUserAssessmentProfilesOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// An optional filter to return the profiles having allow failed login attempts number greater than or equal to the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	FailedLoginAttemptsGreaterThanOrEqual pulumi.StringPtrInput `pulumi:"failedLoginAttemptsGreaterThanOrEqual"`
	// An optional filter to return the profiles having failed login attempts number less than the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	FailedLoginAttemptsLessThan pulumi.StringPtrInput                     `pulumi:"failedLoginAttemptsLessThan"`
	Filters                     GetUserAssessmentProfilesFilterArrayInput `pulumi:"filters"`
	// An optional filter to return the profiles allowing inactive account time in days greater than or equal to the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	InactiveAccountTimeGreaterThanOrEqual pulumi.StringPtrInput `pulumi:"inactiveAccountTimeGreaterThanOrEqual"`
	// An optional filter to return the profiles  allowing inactive account time in days less than the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	InactiveAccountTimeLessThan pulumi.StringPtrInput `pulumi:"inactiveAccountTimeLessThan"`
	// An optional filter to return the user created profiles.
	IsUserCreated pulumi.BoolPtrInput `pulumi:"isUserCreated"`
	// An optional filter to return the profiles having password lock number greater than or equal to the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	PasswordLockTimeGreaterThanOrEqual pulumi.StringPtrInput `pulumi:"passwordLockTimeGreaterThanOrEqual"`
	// An optional filter to return the profiles having password lock number less than the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	PasswordLockTimeLessThan pulumi.StringPtrInput `pulumi:"passwordLockTimeLessThan"`
	// An optional filter to filter the profiles based on password verification function.
	PasswordVerificationFunction pulumi.StringPtrInput `pulumi:"passwordVerificationFunction"`
	// A filter to return only items that match the specified profile name.
	ProfileName pulumi.StringPtrInput `pulumi:"profileName"`
	// An optional filter to return the profiles permitting the user to spawn multiple sessions having count. greater than or equal to the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	SessionsPerUserGreaterThanOrEqual pulumi.StringPtrInput `pulumi:"sessionsPerUserGreaterThanOrEqual"`
	// An optional filter to return the profiles permitting the user to spawn multiple sessions having count less than the provided value. String value is used for accommodating the "UNLIMITED" and "DEFAULT" values.
	SessionsPerUserLessThan pulumi.StringPtrInput `pulumi:"sessionsPerUserLessThan"`
	// A filter to return only items related to a specific target OCID.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
	// The OCID of the user assessment.
	UserAssessmentId pulumi.StringInput `pulumi:"userAssessmentId"`
	// An optional filter to return the profiles having user count greater than or equal to the provided value.
	UserCountGreaterThanOrEqual pulumi.StringPtrInput `pulumi:"userCountGreaterThanOrEqual"`
	// An optional filter to return the profiles having user count less than the provided value.
	UserCountLessThan pulumi.StringPtrInput `pulumi:"userCountLessThan"`
}

func (GetUserAssessmentProfilesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentProfilesArgs)(nil)).Elem()
}

// A collection of values returned by getUserAssessmentProfiles.
type GetUserAssessmentProfilesResultOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentProfilesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentProfilesResult)(nil)).Elem()
}

func (o GetUserAssessmentProfilesResultOutput) ToGetUserAssessmentProfilesResultOutput() GetUserAssessmentProfilesResultOutput {
	return o
}

func (o GetUserAssessmentProfilesResultOutput) ToGetUserAssessmentProfilesResultOutputWithContext(ctx context.Context) GetUserAssessmentProfilesResultOutput {
	return o
}

func (o GetUserAssessmentProfilesResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment that contains the user assessment.
func (o GetUserAssessmentProfilesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetUserAssessmentProfilesResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetUserAssessmentProfilesResultOutput) FailedLoginAttemptsGreaterThanOrEqual() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.FailedLoginAttemptsGreaterThanOrEqual }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentProfilesResultOutput) FailedLoginAttemptsLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.FailedLoginAttemptsLessThan }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentProfilesResultOutput) Filters() GetUserAssessmentProfilesFilterArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) []GetUserAssessmentProfilesFilter { return v.Filters }).(GetUserAssessmentProfilesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserAssessmentProfilesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserAssessmentProfilesResultOutput) InactiveAccountTimeGreaterThanOrEqual() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.InactiveAccountTimeGreaterThanOrEqual }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentProfilesResultOutput) InactiveAccountTimeLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.InactiveAccountTimeLessThan }).(pulumi.StringPtrOutput)
}

// Represents if the profile is created by user.
func (o GetUserAssessmentProfilesResultOutput) IsUserCreated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *bool { return v.IsUserCreated }).(pulumi.BoolPtrOutput)
}

func (o GetUserAssessmentProfilesResultOutput) PasswordLockTimeGreaterThanOrEqual() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.PasswordLockTimeGreaterThanOrEqual }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentProfilesResultOutput) PasswordLockTimeLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.PasswordLockTimeLessThan }).(pulumi.StringPtrOutput)
}

// Name of the PL/SQL that can be used for password verification.
func (o GetUserAssessmentProfilesResultOutput) PasswordVerificationFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.PasswordVerificationFunction }).(pulumi.StringPtrOutput)
}

// The name of the profile.
func (o GetUserAssessmentProfilesResultOutput) ProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.ProfileName }).(pulumi.StringPtrOutput)
}

// The list of profiles.
func (o GetUserAssessmentProfilesResultOutput) Profiles() GetUserAssessmentProfilesProfileArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) []GetUserAssessmentProfilesProfile { return v.Profiles }).(GetUserAssessmentProfilesProfileArrayOutput)
}

func (o GetUserAssessmentProfilesResultOutput) SessionsPerUserGreaterThanOrEqual() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.SessionsPerUserGreaterThanOrEqual }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentProfilesResultOutput) SessionsPerUserLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.SessionsPerUserLessThan }).(pulumi.StringPtrOutput)
}

// The OCID of the target database.
func (o GetUserAssessmentProfilesResultOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

// The OCID of the latest user assessment corresponding to the target under consideration. A compartment  type assessment can also be passed to profiles from all the targets from the corresponding compartment.
func (o GetUserAssessmentProfilesResultOutput) UserAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) string { return v.UserAssessmentId }).(pulumi.StringOutput)
}

func (o GetUserAssessmentProfilesResultOutput) UserCountGreaterThanOrEqual() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.UserCountGreaterThanOrEqual }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentProfilesResultOutput) UserCountLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesResult) *string { return v.UserCountLessThan }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserAssessmentProfilesResultOutput{})
}
