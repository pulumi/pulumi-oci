// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of User Assessment User Analytics in Oracle Cloud Infrastructure Data Safe service.
//
// Gets a list of aggregated user details from the specified user assessment. This provides information about the overall state.
// of database user security.  For example, the user details include how many users have the DBA role and how many users are in
// the critical category. This data is especially useful content for dashboards or to support analytics.
//
// When you perform the ListUserAnalytics operation, if the parameter compartmentIdInSubtree is set to "true," and if the
// parameter accessLevel is set to ACCESSIBLE, then the operation returns compartments in which the requestor has INSPECT
// permissions on at least one resource, directly or indirectly (in subcompartments). If the operation is performed at the
// root compartment and the requestor does not have access to at least one subcompartment of the compartment specified by
// compartmentId, then "Not Authorized" is returned.
//
// The parameter compartmentIdInSubtree applies when you perform ListUserAnalytics on the compartmentId passed and when it is
// set to true, the entire hierarchy of compartments can be returned.
//
// To use ListUserAnalytics to get a full list of all compartments and subcompartments in the tenancy from the root compartment,
// set the parameter compartmentIdInSubtree to true and accessLevel to ACCESSIBLE.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.GetUserAssessmentUserAnalytics(ctx, &datasafe.GetUserAssessmentUserAnalyticsArgs{
//				UserAssessmentId:                  testUserAssessment.Id,
//				AccessLevel:                       pulumi.StringRef(userAssessmentUserAnalyticAccessLevel),
//				AccountStatus:                     pulumi.StringRef(userAssessmentUserAnalyticAccountStatus),
//				AuthenticationType:                pulumi.StringRef(userAssessmentUserAnalyticAuthenticationType),
//				CompartmentIdInSubtree:            pulumi.BoolRef(userAssessmentUserAnalyticCompartmentIdInSubtree),
//				TargetId:                          pulumi.StringRef(testTarget.Id),
//				TimeLastLoginGreaterThanOrEqualTo: pulumi.StringRef(userAssessmentUserAnalyticTimeLastLoginGreaterThanOrEqualTo),
//				TimeLastLoginLessThan:             pulumi.StringRef(userAssessmentUserAnalyticTimeLastLoginLessThan),
//				TimePasswordLastChangedGreaterThanOrEqualTo: pulumi.StringRef(userAssessmentUserAnalyticTimePasswordLastChangedGreaterThanOrEqualTo),
//				TimePasswordLastChangedLessThan:             pulumi.StringRef(userAssessmentUserAnalyticTimePasswordLastChangedLessThan),
//				TimeUserCreatedGreaterThanOrEqualTo:         pulumi.StringRef(userAssessmentUserAnalyticTimeUserCreatedGreaterThanOrEqualTo),
//				TimeUserCreatedLessThan:                     pulumi.StringRef(userAssessmentUserAnalyticTimeUserCreatedLessThan),
//				UserCategory:                                pulumi.StringRef(userAssessmentUserAnalyticUserCategory),
//				UserKey:                                     pulumi.StringRef(userAssessmentUserAnalyticUserKey),
//				UserName:                                    pulumi.StringRef(testUser.Name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserAssessmentUserAnalytics(ctx *pulumi.Context, args *GetUserAssessmentUserAnalyticsArgs, opts ...pulumi.InvokeOption) (*GetUserAssessmentUserAnalyticsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserAssessmentUserAnalyticsResult
	err := ctx.Invoke("oci:DataSafe/getUserAssessmentUserAnalytics:getUserAssessmentUserAnalytics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserAssessmentUserAnalytics.
type GetUserAssessmentUserAnalyticsArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel *string `pulumi:"accessLevel"`
	// A filter to return only items that match the specified account status.
	AccountStatus *string `pulumi:"accountStatus"`
	// A filter to return only items that match the specified authentication type.
	AuthenticationType *string `pulumi:"authenticationType"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree *bool                                  `pulumi:"compartmentIdInSubtree"`
	Filters                []GetUserAssessmentUserAnalyticsFilter `pulumi:"filters"`
	// A filter to return only items related to a specific target OCID.
	TargetId *string `pulumi:"targetId"`
	// A filter to return users whose last login time in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimeLastLoginGreaterThanOrEqualTo *string `pulumi:"timeLastLoginGreaterThanOrEqualTo"`
	// A filter to return users whose last login time in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
	TimeLastLoginLessThan *string `pulumi:"timeLastLoginLessThan"`
	// A filter to return users whose last password change in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimePasswordLastChangedGreaterThanOrEqualTo *string `pulumi:"timePasswordLastChangedGreaterThanOrEqualTo"`
	// A filter to return users whose last password change in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimePasswordLastChangedLessThan *string `pulumi:"timePasswordLastChangedLessThan"`
	// A filter to return users whose creation time in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
	TimeUserCreatedGreaterThanOrEqualTo *string `pulumi:"timeUserCreatedGreaterThanOrEqualTo"`
	// A filter to return users whose creation time in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
	TimeUserCreatedLessThan *string `pulumi:"timeUserCreatedLessThan"`
	// The OCID of the user assessment.
	UserAssessmentId string `pulumi:"userAssessmentId"`
	// A filter to return only items that match the specified user category.
	UserCategory *string `pulumi:"userCategory"`
	// A filter to return only items that match the specified user key.
	UserKey *string `pulumi:"userKey"`
	// A filter to return only items that match the specified user name.
	UserName *string `pulumi:"userName"`
}

// A collection of values returned by getUserAssessmentUserAnalytics.
type GetUserAssessmentUserAnalyticsResult struct {
	AccessLevel            *string                                `pulumi:"accessLevel"`
	AccountStatus          *string                                `pulumi:"accountStatus"`
	AuthenticationType     *string                                `pulumi:"authenticationType"`
	CompartmentIdInSubtree *bool                                  `pulumi:"compartmentIdInSubtree"`
	Filters                []GetUserAssessmentUserAnalyticsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                                          string  `pulumi:"id"`
	TargetId                                    *string `pulumi:"targetId"`
	TimeLastLoginGreaterThanOrEqualTo           *string `pulumi:"timeLastLoginGreaterThanOrEqualTo"`
	TimeLastLoginLessThan                       *string `pulumi:"timeLastLoginLessThan"`
	TimePasswordLastChangedGreaterThanOrEqualTo *string `pulumi:"timePasswordLastChangedGreaterThanOrEqualTo"`
	TimePasswordLastChangedLessThan             *string `pulumi:"timePasswordLastChangedLessThan"`
	TimeUserCreatedGreaterThanOrEqualTo         *string `pulumi:"timeUserCreatedGreaterThanOrEqualTo"`
	TimeUserCreatedLessThan                     *string `pulumi:"timeUserCreatedLessThan"`
	// The list of user_aggregations.
	UserAggregations []GetUserAssessmentUserAnalyticsUserAggregation `pulumi:"userAggregations"`
	UserAssessmentId string                                          `pulumi:"userAssessmentId"`
	UserCategory     *string                                         `pulumi:"userCategory"`
	UserKey          *string                                         `pulumi:"userKey"`
	UserName         *string                                         `pulumi:"userName"`
}

func GetUserAssessmentUserAnalyticsOutput(ctx *pulumi.Context, args GetUserAssessmentUserAnalyticsOutputArgs, opts ...pulumi.InvokeOption) GetUserAssessmentUserAnalyticsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUserAssessmentUserAnalyticsResultOutput, error) {
			args := v.(GetUserAssessmentUserAnalyticsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataSafe/getUserAssessmentUserAnalytics:getUserAssessmentUserAnalytics", args, GetUserAssessmentUserAnalyticsResultOutput{}, options).(GetUserAssessmentUserAnalyticsResultOutput), nil
		}).(GetUserAssessmentUserAnalyticsResultOutput)
}

// A collection of arguments for invoking getUserAssessmentUserAnalytics.
type GetUserAssessmentUserAnalyticsOutputArgs struct {
	// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
	AccessLevel pulumi.StringPtrInput `pulumi:"accessLevel"`
	// A filter to return only items that match the specified account status.
	AccountStatus pulumi.StringPtrInput `pulumi:"accountStatus"`
	// A filter to return only items that match the specified authentication type.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
	CompartmentIdInSubtree pulumi.BoolPtrInput                            `pulumi:"compartmentIdInSubtree"`
	Filters                GetUserAssessmentUserAnalyticsFilterArrayInput `pulumi:"filters"`
	// A filter to return only items related to a specific target OCID.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
	// A filter to return users whose last login time in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimeLastLoginGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeLastLoginGreaterThanOrEqualTo"`
	// A filter to return users whose last login time in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
	TimeLastLoginLessThan pulumi.StringPtrInput `pulumi:"timeLastLoginLessThan"`
	// A filter to return users whose last password change in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimePasswordLastChangedGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timePasswordLastChangedGreaterThanOrEqualTo"`
	// A filter to return users whose last password change in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	//
	// **Example:** 2016-12-19T16:39:57.600Z
	TimePasswordLastChangedLessThan pulumi.StringPtrInput `pulumi:"timePasswordLastChangedLessThan"`
	// A filter to return users whose creation time in the database is greater than or equal to the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
	TimeUserCreatedGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeUserCreatedGreaterThanOrEqualTo"`
	// A filter to return users whose creation time in the database is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). **Example:** 2016-12-19T16:39:57.600Z
	TimeUserCreatedLessThan pulumi.StringPtrInput `pulumi:"timeUserCreatedLessThan"`
	// The OCID of the user assessment.
	UserAssessmentId pulumi.StringInput `pulumi:"userAssessmentId"`
	// A filter to return only items that match the specified user category.
	UserCategory pulumi.StringPtrInput `pulumi:"userCategory"`
	// A filter to return only items that match the specified user key.
	UserKey pulumi.StringPtrInput `pulumi:"userKey"`
	// A filter to return only items that match the specified user name.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (GetUserAssessmentUserAnalyticsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAnalyticsArgs)(nil)).Elem()
}

// A collection of values returned by getUserAssessmentUserAnalytics.
type GetUserAssessmentUserAnalyticsResultOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAnalyticsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAnalyticsResult)(nil)).Elem()
}

func (o GetUserAssessmentUserAnalyticsResultOutput) ToGetUserAssessmentUserAnalyticsResultOutput() GetUserAssessmentUserAnalyticsResultOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsResultOutput) ToGetUserAssessmentUserAnalyticsResultOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsResultOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsResultOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.AccessLevel }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) AccountStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.AccountStatus }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) Filters() GetUserAssessmentUserAnalyticsFilterArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) []GetUserAssessmentUserAnalyticsFilter { return v.Filters }).(GetUserAssessmentUserAnalyticsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserAssessmentUserAnalyticsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) TimeLastLoginGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.TimeLastLoginGreaterThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) TimeLastLoginLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.TimeLastLoginLessThan }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) TimePasswordLastChangedGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string {
		return v.TimePasswordLastChangedGreaterThanOrEqualTo
	}).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) TimePasswordLastChangedLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.TimePasswordLastChangedLessThan }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) TimeUserCreatedGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.TimeUserCreatedGreaterThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) TimeUserCreatedLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.TimeUserCreatedLessThan }).(pulumi.StringPtrOutput)
}

// The list of user_aggregations.
func (o GetUserAssessmentUserAnalyticsResultOutput) UserAggregations() GetUserAssessmentUserAnalyticsUserAggregationArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) []GetUserAssessmentUserAnalyticsUserAggregation {
		return v.UserAggregations
	}).(GetUserAssessmentUserAnalyticsUserAggregationArrayOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) UserAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) string { return v.UserAssessmentId }).(pulumi.StringOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) UserCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.UserCategory }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) UserKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.UserKey }).(pulumi.StringPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserAssessmentUserAnalyticsResultOutput{})
}
