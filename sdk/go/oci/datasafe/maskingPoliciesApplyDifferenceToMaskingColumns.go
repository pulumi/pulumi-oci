// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MaskingPoliciesApplyDifferenceToMaskingColumns struct {
	pulumi.CustomResourceState

	MaskingPolicyId              pulumi.StringOutput `pulumi:"maskingPolicyId"`
	SdmMaskingPolicyDifferenceId pulumi.StringOutput `pulumi:"sdmMaskingPolicyDifferenceId"`
}

// NewMaskingPoliciesApplyDifferenceToMaskingColumns registers a new resource with the given unique name, arguments, and options.
func NewMaskingPoliciesApplyDifferenceToMaskingColumns(ctx *pulumi.Context,
	name string, args *MaskingPoliciesApplyDifferenceToMaskingColumnsArgs, opts ...pulumi.ResourceOption) (*MaskingPoliciesApplyDifferenceToMaskingColumns, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MaskingPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'MaskingPolicyId'")
	}
	if args.SdmMaskingPolicyDifferenceId == nil {
		return nil, errors.New("invalid value for required argument 'SdmMaskingPolicyDifferenceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MaskingPoliciesApplyDifferenceToMaskingColumns
	err := ctx.RegisterResource("oci:DataSafe/maskingPoliciesApplyDifferenceToMaskingColumns:MaskingPoliciesApplyDifferenceToMaskingColumns", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMaskingPoliciesApplyDifferenceToMaskingColumns gets an existing MaskingPoliciesApplyDifferenceToMaskingColumns resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMaskingPoliciesApplyDifferenceToMaskingColumns(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MaskingPoliciesApplyDifferenceToMaskingColumnsState, opts ...pulumi.ResourceOption) (*MaskingPoliciesApplyDifferenceToMaskingColumns, error) {
	var resource MaskingPoliciesApplyDifferenceToMaskingColumns
	err := ctx.ReadResource("oci:DataSafe/maskingPoliciesApplyDifferenceToMaskingColumns:MaskingPoliciesApplyDifferenceToMaskingColumns", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MaskingPoliciesApplyDifferenceToMaskingColumns resources.
type maskingPoliciesApplyDifferenceToMaskingColumnsState struct {
	MaskingPolicyId              *string `pulumi:"maskingPolicyId"`
	SdmMaskingPolicyDifferenceId *string `pulumi:"sdmMaskingPolicyDifferenceId"`
}

type MaskingPoliciesApplyDifferenceToMaskingColumnsState struct {
	MaskingPolicyId              pulumi.StringPtrInput
	SdmMaskingPolicyDifferenceId pulumi.StringPtrInput
}

func (MaskingPoliciesApplyDifferenceToMaskingColumnsState) ElementType() reflect.Type {
	return reflect.TypeOf((*maskingPoliciesApplyDifferenceToMaskingColumnsState)(nil)).Elem()
}

type maskingPoliciesApplyDifferenceToMaskingColumnsArgs struct {
	MaskingPolicyId              string `pulumi:"maskingPolicyId"`
	SdmMaskingPolicyDifferenceId string `pulumi:"sdmMaskingPolicyDifferenceId"`
}

// The set of arguments for constructing a MaskingPoliciesApplyDifferenceToMaskingColumns resource.
type MaskingPoliciesApplyDifferenceToMaskingColumnsArgs struct {
	MaskingPolicyId              pulumi.StringInput
	SdmMaskingPolicyDifferenceId pulumi.StringInput
}

func (MaskingPoliciesApplyDifferenceToMaskingColumnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*maskingPoliciesApplyDifferenceToMaskingColumnsArgs)(nil)).Elem()
}

type MaskingPoliciesApplyDifferenceToMaskingColumnsInput interface {
	pulumi.Input

	ToMaskingPoliciesApplyDifferenceToMaskingColumnsOutput() MaskingPoliciesApplyDifferenceToMaskingColumnsOutput
	ToMaskingPoliciesApplyDifferenceToMaskingColumnsOutputWithContext(ctx context.Context) MaskingPoliciesApplyDifferenceToMaskingColumnsOutput
}

func (*MaskingPoliciesApplyDifferenceToMaskingColumns) ElementType() reflect.Type {
	return reflect.TypeOf((**MaskingPoliciesApplyDifferenceToMaskingColumns)(nil)).Elem()
}

func (i *MaskingPoliciesApplyDifferenceToMaskingColumns) ToMaskingPoliciesApplyDifferenceToMaskingColumnsOutput() MaskingPoliciesApplyDifferenceToMaskingColumnsOutput {
	return i.ToMaskingPoliciesApplyDifferenceToMaskingColumnsOutputWithContext(context.Background())
}

func (i *MaskingPoliciesApplyDifferenceToMaskingColumns) ToMaskingPoliciesApplyDifferenceToMaskingColumnsOutputWithContext(ctx context.Context) MaskingPoliciesApplyDifferenceToMaskingColumnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaskingPoliciesApplyDifferenceToMaskingColumnsOutput)
}

// MaskingPoliciesApplyDifferenceToMaskingColumnsArrayInput is an input type that accepts MaskingPoliciesApplyDifferenceToMaskingColumnsArray and MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput values.
// You can construct a concrete instance of `MaskingPoliciesApplyDifferenceToMaskingColumnsArrayInput` via:
//
//	MaskingPoliciesApplyDifferenceToMaskingColumnsArray{ MaskingPoliciesApplyDifferenceToMaskingColumnsArgs{...} }
type MaskingPoliciesApplyDifferenceToMaskingColumnsArrayInput interface {
	pulumi.Input

	ToMaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput() MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput
	ToMaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutputWithContext(context.Context) MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput
}

type MaskingPoliciesApplyDifferenceToMaskingColumnsArray []MaskingPoliciesApplyDifferenceToMaskingColumnsInput

func (MaskingPoliciesApplyDifferenceToMaskingColumnsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MaskingPoliciesApplyDifferenceToMaskingColumns)(nil)).Elem()
}

func (i MaskingPoliciesApplyDifferenceToMaskingColumnsArray) ToMaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput() MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput {
	return i.ToMaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutputWithContext(context.Background())
}

func (i MaskingPoliciesApplyDifferenceToMaskingColumnsArray) ToMaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutputWithContext(ctx context.Context) MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput)
}

// MaskingPoliciesApplyDifferenceToMaskingColumnsMapInput is an input type that accepts MaskingPoliciesApplyDifferenceToMaskingColumnsMap and MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput values.
// You can construct a concrete instance of `MaskingPoliciesApplyDifferenceToMaskingColumnsMapInput` via:
//
//	MaskingPoliciesApplyDifferenceToMaskingColumnsMap{ "key": MaskingPoliciesApplyDifferenceToMaskingColumnsArgs{...} }
type MaskingPoliciesApplyDifferenceToMaskingColumnsMapInput interface {
	pulumi.Input

	ToMaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput() MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput
	ToMaskingPoliciesApplyDifferenceToMaskingColumnsMapOutputWithContext(context.Context) MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput
}

type MaskingPoliciesApplyDifferenceToMaskingColumnsMap map[string]MaskingPoliciesApplyDifferenceToMaskingColumnsInput

func (MaskingPoliciesApplyDifferenceToMaskingColumnsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MaskingPoliciesApplyDifferenceToMaskingColumns)(nil)).Elem()
}

func (i MaskingPoliciesApplyDifferenceToMaskingColumnsMap) ToMaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput() MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput {
	return i.ToMaskingPoliciesApplyDifferenceToMaskingColumnsMapOutputWithContext(context.Background())
}

func (i MaskingPoliciesApplyDifferenceToMaskingColumnsMap) ToMaskingPoliciesApplyDifferenceToMaskingColumnsMapOutputWithContext(ctx context.Context) MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput)
}

type MaskingPoliciesApplyDifferenceToMaskingColumnsOutput struct{ *pulumi.OutputState }

func (MaskingPoliciesApplyDifferenceToMaskingColumnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaskingPoliciesApplyDifferenceToMaskingColumns)(nil)).Elem()
}

func (o MaskingPoliciesApplyDifferenceToMaskingColumnsOutput) ToMaskingPoliciesApplyDifferenceToMaskingColumnsOutput() MaskingPoliciesApplyDifferenceToMaskingColumnsOutput {
	return o
}

func (o MaskingPoliciesApplyDifferenceToMaskingColumnsOutput) ToMaskingPoliciesApplyDifferenceToMaskingColumnsOutputWithContext(ctx context.Context) MaskingPoliciesApplyDifferenceToMaskingColumnsOutput {
	return o
}

func (o MaskingPoliciesApplyDifferenceToMaskingColumnsOutput) MaskingPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesApplyDifferenceToMaskingColumns) pulumi.StringOutput { return v.MaskingPolicyId }).(pulumi.StringOutput)
}

func (o MaskingPoliciesApplyDifferenceToMaskingColumnsOutput) SdmMaskingPolicyDifferenceId() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesApplyDifferenceToMaskingColumns) pulumi.StringOutput {
		return v.SdmMaskingPolicyDifferenceId
	}).(pulumi.StringOutput)
}

type MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput struct{ *pulumi.OutputState }

func (MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MaskingPoliciesApplyDifferenceToMaskingColumns)(nil)).Elem()
}

func (o MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput) ToMaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput() MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput {
	return o
}

func (o MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput) ToMaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutputWithContext(ctx context.Context) MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput {
	return o
}

func (o MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput) Index(i pulumi.IntInput) MaskingPoliciesApplyDifferenceToMaskingColumnsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MaskingPoliciesApplyDifferenceToMaskingColumns {
		return vs[0].([]*MaskingPoliciesApplyDifferenceToMaskingColumns)[vs[1].(int)]
	}).(MaskingPoliciesApplyDifferenceToMaskingColumnsOutput)
}

type MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput struct{ *pulumi.OutputState }

func (MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MaskingPoliciesApplyDifferenceToMaskingColumns)(nil)).Elem()
}

func (o MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput) ToMaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput() MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput {
	return o
}

func (o MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput) ToMaskingPoliciesApplyDifferenceToMaskingColumnsMapOutputWithContext(ctx context.Context) MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput {
	return o
}

func (o MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput) MapIndex(k pulumi.StringInput) MaskingPoliciesApplyDifferenceToMaskingColumnsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MaskingPoliciesApplyDifferenceToMaskingColumns {
		return vs[0].(map[string]*MaskingPoliciesApplyDifferenceToMaskingColumns)[vs[1].(string)]
	}).(MaskingPoliciesApplyDifferenceToMaskingColumnsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MaskingPoliciesApplyDifferenceToMaskingColumnsInput)(nil)).Elem(), &MaskingPoliciesApplyDifferenceToMaskingColumns{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaskingPoliciesApplyDifferenceToMaskingColumnsArrayInput)(nil)).Elem(), MaskingPoliciesApplyDifferenceToMaskingColumnsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaskingPoliciesApplyDifferenceToMaskingColumnsMapInput)(nil)).Elem(), MaskingPoliciesApplyDifferenceToMaskingColumnsMap{})
	pulumi.RegisterOutputType(MaskingPoliciesApplyDifferenceToMaskingColumnsOutput{})
	pulumi.RegisterOutputType(MaskingPoliciesApplyDifferenceToMaskingColumnsArrayOutput{})
	pulumi.RegisterOutputType(MaskingPoliciesApplyDifferenceToMaskingColumnsMapOutput{})
}
