// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Masking Policies Masking Column resource in Oracle Cloud Infrastructure Data Safe service.
//
// Creates a new masking column in the specified masking policy. Use this operation
// to add parent columns only. It automatically adds the child columns from the
// associated sensitive data model or target database. If you provide the
// sensitiveTypeId attribute but not the maskingFormats attribute, it automatically
// assigns the default masking format associated with the specified sensitive type.
// Alternatively, if you provide the maskingFormats attribute, the specified masking
// formats are assigned to the column.
//
// Using the maskingFormats attribute, you can assign one or more masking formats
// to a column. You need to specify a condition as part of each masking format. It
// enables you to do <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>
// so that you can mask the column data values differently using different
// masking conditions. A masking format can have one or more format entries. The
// combined output of all the format entries is used for masking. It provides the
// flexibility to define a masking format that can generate different parts of a data
// value separately and then combine them to get the final data value for masking.
//
// You can use the maskingColumnGroup attribute to group the columns that you would
// like to mask together. It enables you to do <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037">group or compound masking</a> that ensures that the
// masked data across the columns in a group continue to retain the same logical relationship.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.NewMaskingPoliciesMaskingColumn(ctx, "test_masking_policies_masking_column", &DataSafe.MaskingPoliciesMaskingColumnArgs{
//				ColumnName:         pulumi.Any(maskingPoliciesMaskingColumnColumnName),
//				MaskingPolicyId:    pulumi.Any(testMaskingPolicy.Id),
//				Object:             pulumi.Any(maskingPoliciesMaskingColumnObject),
//				SchemaName:         pulumi.Any(maskingPoliciesMaskingColumnSchemaName),
//				IsMaskingEnabled:   pulumi.Any(maskingPoliciesMaskingColumnIsMaskingEnabled),
//				MaskingColumnGroup: pulumi.Any(maskingPoliciesMaskingColumnMaskingColumnGroup),
//				MaskingFormats: datasafe.MaskingPoliciesMaskingColumnMaskingFormatArray{
//					&datasafe.MaskingPoliciesMaskingColumnMaskingFormatArgs{
//						FormatEntries: datasafe.MaskingPoliciesMaskingColumnMaskingFormatFormatEntryArray{
//							&datasafe.MaskingPoliciesMaskingColumnMaskingFormatFormatEntryArgs{
//								Type:                   pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesType),
//								ColumnName:             pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesColumnName),
//								Description:            pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesDescription),
//								EndDate:                pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesEndDate),
//								EndLength:              pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesEndLength),
//								EndValue:               pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesEndValue),
//								FixedNumber:            pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesFixedNumber),
//								FixedString:            pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesFixedString),
//								GroupingColumns:        pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesGroupingColumns),
//								Length:                 pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesLength),
//								LibraryMaskingFormatId: pulumi.Any(testLibraryMaskingFormat.Id),
//								Pattern:                pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesPattern),
//								PostProcessingFunction: pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesPostProcessingFunction),
//								RandomLists:            pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesRandomList),
//								RegularExpression:      pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesRegularExpression),
//								ReplaceWith:            pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesReplaceWith),
//								SchemaName:             pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesSchemaName),
//								SqlExpression:          pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesSqlExpression),
//								StartDate:              pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesStartDate),
//								StartLength:            pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesStartLength),
//								StartPosition:          pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesStartPosition),
//								StartValue:             pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesStartValue),
//								TableName:              pulumi.Any(testTable.Name),
//								UserDefinedFunction:    pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsFormatEntriesUserDefinedFunction),
//							},
//						},
//						Condition:   pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsCondition),
//						Description: pulumi.Any(maskingPoliciesMaskingColumnMaskingFormatsDescription),
//					},
//				},
//				ObjectType:      pulumi.Any(maskingPoliciesMaskingColumnObjectType),
//				SensitiveTypeId: pulumi.Any(testSensitiveType.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// MaskingPoliciesMaskingColumns can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataSafe/maskingPoliciesMaskingColumn:MaskingPoliciesMaskingColumn test_masking_policies_masking_column "maskingPolicies/{maskingPolicyId}/maskingColumns/{maskingColumnKey}"
// ```
type MaskingPoliciesMaskingColumn struct {
	pulumi.CustomResourceState

	// An array of child columns that are in referential relationship with the masking column.
	ChildColumns pulumi.StringArrayOutput `pulumi:"childColumns"`
	// (Updatable) The name of the substitution column.
	ColumnName pulumi.StringOutput `pulumi:"columnName"`
	// The data type of the masking column.
	DataType pulumi.StringOutput `pulumi:"dataType"`
	// (Updatable) Indicates whether data masking is enabled for the masking column. Set it to false if  you don't want to mask the column.
	IsMaskingEnabled pulumi.BoolOutput `pulumi:"isMaskingEnabled"`
	// The unique key that identifies the masking column. It's numeric and unique within a masking policy.
	Key pulumi.StringOutput `pulumi:"key"`
	// Details about the current state of the masking column.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) The group of the masking column. It's a masking group identifier and can be any string  of acceptable length. All the columns in a group are masked together to ensure that  the masked data across these columns continue to retain the same logical relationship.  For more details, check  <a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037>Group Masking in the Data Safe documentation.</a>
	MaskingColumnGroup pulumi.StringOutput `pulumi:"maskingColumnGroup"`
	// (Updatable) The masking formats to be assigned to the masking column. You can specify a condition  as part of each masking format. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions. A masking format can have one or more format  entries. The combined output of all the format entries is used for masking. It  provides the flexibility to define a masking format that can generate different parts  of a data value separately and then combine them to get the final data value for masking.
	MaskingFormats MaskingPoliciesMaskingColumnMaskingFormatArrayOutput `pulumi:"maskingFormats"`
	// The OCID of the masking policy.
	MaskingPolicyId pulumi.StringOutput `pulumi:"maskingPolicyId"`
	// The name of the object (table or editioning view) that contains the database column. This attribute cannot be updated for an existing masking column.
	Object pulumi.StringOutput `pulumi:"object"`
	// (Updatable) The type of the object that contains the database column.
	ObjectType pulumi.StringOutput `pulumi:"objectType"`
	// The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
	SchemaName pulumi.StringOutput `pulumi:"schemaName"`
	// (Updatable) The OCID of the sensitive type to be associated with the masking column. Note that  if the maskingFormats attribute isn't provided while creating a masking column,   the default masking format associated with the specified sensitive type is assigned  to the masking column.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveTypeId pulumi.StringOutput `pulumi:"sensitiveTypeId"`
	// The current state of the masking column.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewMaskingPoliciesMaskingColumn registers a new resource with the given unique name, arguments, and options.
func NewMaskingPoliciesMaskingColumn(ctx *pulumi.Context,
	name string, args *MaskingPoliciesMaskingColumnArgs, opts ...pulumi.ResourceOption) (*MaskingPoliciesMaskingColumn, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ColumnName == nil {
		return nil, errors.New("invalid value for required argument 'ColumnName'")
	}
	if args.MaskingPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'MaskingPolicyId'")
	}
	if args.Object == nil {
		return nil, errors.New("invalid value for required argument 'Object'")
	}
	if args.SchemaName == nil {
		return nil, errors.New("invalid value for required argument 'SchemaName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MaskingPoliciesMaskingColumn
	err := ctx.RegisterResource("oci:DataSafe/maskingPoliciesMaskingColumn:MaskingPoliciesMaskingColumn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMaskingPoliciesMaskingColumn gets an existing MaskingPoliciesMaskingColumn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMaskingPoliciesMaskingColumn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MaskingPoliciesMaskingColumnState, opts ...pulumi.ResourceOption) (*MaskingPoliciesMaskingColumn, error) {
	var resource MaskingPoliciesMaskingColumn
	err := ctx.ReadResource("oci:DataSafe/maskingPoliciesMaskingColumn:MaskingPoliciesMaskingColumn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MaskingPoliciesMaskingColumn resources.
type maskingPoliciesMaskingColumnState struct {
	// An array of child columns that are in referential relationship with the masking column.
	ChildColumns []string `pulumi:"childColumns"`
	// (Updatable) The name of the substitution column.
	ColumnName *string `pulumi:"columnName"`
	// The data type of the masking column.
	DataType *string `pulumi:"dataType"`
	// (Updatable) Indicates whether data masking is enabled for the masking column. Set it to false if  you don't want to mask the column.
	IsMaskingEnabled *bool `pulumi:"isMaskingEnabled"`
	// The unique key that identifies the masking column. It's numeric and unique within a masking policy.
	Key *string `pulumi:"key"`
	// Details about the current state of the masking column.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) The group of the masking column. It's a masking group identifier and can be any string  of acceptable length. All the columns in a group are masked together to ensure that  the masked data across these columns continue to retain the same logical relationship.  For more details, check  <a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037>Group Masking in the Data Safe documentation.</a>
	MaskingColumnGroup *string `pulumi:"maskingColumnGroup"`
	// (Updatable) The masking formats to be assigned to the masking column. You can specify a condition  as part of each masking format. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions. A masking format can have one or more format  entries. The combined output of all the format entries is used for masking. It  provides the flexibility to define a masking format that can generate different parts  of a data value separately and then combine them to get the final data value for masking.
	MaskingFormats []MaskingPoliciesMaskingColumnMaskingFormat `pulumi:"maskingFormats"`
	// The OCID of the masking policy.
	MaskingPolicyId *string `pulumi:"maskingPolicyId"`
	// The name of the object (table or editioning view) that contains the database column. This attribute cannot be updated for an existing masking column.
	Object *string `pulumi:"object"`
	// (Updatable) The type of the object that contains the database column.
	ObjectType *string `pulumi:"objectType"`
	// The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
	SchemaName *string `pulumi:"schemaName"`
	// (Updatable) The OCID of the sensitive type to be associated with the masking column. Note that  if the maskingFormats attribute isn't provided while creating a masking column,   the default masking format associated with the specified sensitive type is assigned  to the masking column.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveTypeId *string `pulumi:"sensitiveTypeId"`
	// The current state of the masking column.
	State *string `pulumi:"state"`
	// The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type MaskingPoliciesMaskingColumnState struct {
	// An array of child columns that are in referential relationship with the masking column.
	ChildColumns pulumi.StringArrayInput
	// (Updatable) The name of the substitution column.
	ColumnName pulumi.StringPtrInput
	// The data type of the masking column.
	DataType pulumi.StringPtrInput
	// (Updatable) Indicates whether data masking is enabled for the masking column. Set it to false if  you don't want to mask the column.
	IsMaskingEnabled pulumi.BoolPtrInput
	// The unique key that identifies the masking column. It's numeric and unique within a masking policy.
	Key pulumi.StringPtrInput
	// Details about the current state of the masking column.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) The group of the masking column. It's a masking group identifier and can be any string  of acceptable length. All the columns in a group are masked together to ensure that  the masked data across these columns continue to retain the same logical relationship.  For more details, check  <a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037>Group Masking in the Data Safe documentation.</a>
	MaskingColumnGroup pulumi.StringPtrInput
	// (Updatable) The masking formats to be assigned to the masking column. You can specify a condition  as part of each masking format. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions. A masking format can have one or more format  entries. The combined output of all the format entries is used for masking. It  provides the flexibility to define a masking format that can generate different parts  of a data value separately and then combine them to get the final data value for masking.
	MaskingFormats MaskingPoliciesMaskingColumnMaskingFormatArrayInput
	// The OCID of the masking policy.
	MaskingPolicyId pulumi.StringPtrInput
	// The name of the object (table or editioning view) that contains the database column. This attribute cannot be updated for an existing masking column.
	Object pulumi.StringPtrInput
	// (Updatable) The type of the object that contains the database column.
	ObjectType pulumi.StringPtrInput
	// The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
	SchemaName pulumi.StringPtrInput
	// (Updatable) The OCID of the sensitive type to be associated with the masking column. Note that  if the maskingFormats attribute isn't provided while creating a masking column,   the default masking format associated with the specified sensitive type is assigned  to the masking column.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveTypeId pulumi.StringPtrInput
	// The current state of the masking column.
	State pulumi.StringPtrInput
	// The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
}

func (MaskingPoliciesMaskingColumnState) ElementType() reflect.Type {
	return reflect.TypeOf((*maskingPoliciesMaskingColumnState)(nil)).Elem()
}

type maskingPoliciesMaskingColumnArgs struct {
	// (Updatable) The name of the substitution column.
	ColumnName string `pulumi:"columnName"`
	// (Updatable) Indicates whether data masking is enabled for the masking column. Set it to false if  you don't want to mask the column.
	IsMaskingEnabled *bool `pulumi:"isMaskingEnabled"`
	// (Updatable) The group of the masking column. It's a masking group identifier and can be any string  of acceptable length. All the columns in a group are masked together to ensure that  the masked data across these columns continue to retain the same logical relationship.  For more details, check  <a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037>Group Masking in the Data Safe documentation.</a>
	MaskingColumnGroup *string `pulumi:"maskingColumnGroup"`
	// (Updatable) The masking formats to be assigned to the masking column. You can specify a condition  as part of each masking format. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions. A masking format can have one or more format  entries. The combined output of all the format entries is used for masking. It  provides the flexibility to define a masking format that can generate different parts  of a data value separately and then combine them to get the final data value for masking.
	MaskingFormats []MaskingPoliciesMaskingColumnMaskingFormat `pulumi:"maskingFormats"`
	// The OCID of the masking policy.
	MaskingPolicyId string `pulumi:"maskingPolicyId"`
	// The name of the object (table or editioning view) that contains the database column. This attribute cannot be updated for an existing masking column.
	Object string `pulumi:"object"`
	// (Updatable) The type of the object that contains the database column.
	ObjectType *string `pulumi:"objectType"`
	// The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
	SchemaName string `pulumi:"schemaName"`
	// (Updatable) The OCID of the sensitive type to be associated with the masking column. Note that  if the maskingFormats attribute isn't provided while creating a masking column,   the default masking format associated with the specified sensitive type is assigned  to the masking column.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveTypeId *string `pulumi:"sensitiveTypeId"`
}

// The set of arguments for constructing a MaskingPoliciesMaskingColumn resource.
type MaskingPoliciesMaskingColumnArgs struct {
	// (Updatable) The name of the substitution column.
	ColumnName pulumi.StringInput
	// (Updatable) Indicates whether data masking is enabled for the masking column. Set it to false if  you don't want to mask the column.
	IsMaskingEnabled pulumi.BoolPtrInput
	// (Updatable) The group of the masking column. It's a masking group identifier and can be any string  of acceptable length. All the columns in a group are masked together to ensure that  the masked data across these columns continue to retain the same logical relationship.  For more details, check  <a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037>Group Masking in the Data Safe documentation.</a>
	MaskingColumnGroup pulumi.StringPtrInput
	// (Updatable) The masking formats to be assigned to the masking column. You can specify a condition  as part of each masking format. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions. A masking format can have one or more format  entries. The combined output of all the format entries is used for masking. It  provides the flexibility to define a masking format that can generate different parts  of a data value separately and then combine them to get the final data value for masking.
	MaskingFormats MaskingPoliciesMaskingColumnMaskingFormatArrayInput
	// The OCID of the masking policy.
	MaskingPolicyId pulumi.StringInput
	// The name of the object (table or editioning view) that contains the database column. This attribute cannot be updated for an existing masking column.
	Object pulumi.StringInput
	// (Updatable) The type of the object that contains the database column.
	ObjectType pulumi.StringPtrInput
	// The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
	SchemaName pulumi.StringInput
	// (Updatable) The OCID of the sensitive type to be associated with the masking column. Note that  if the maskingFormats attribute isn't provided while creating a masking column,   the default masking format associated with the specified sensitive type is assigned  to the masking column.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveTypeId pulumi.StringPtrInput
}

func (MaskingPoliciesMaskingColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*maskingPoliciesMaskingColumnArgs)(nil)).Elem()
}

type MaskingPoliciesMaskingColumnInput interface {
	pulumi.Input

	ToMaskingPoliciesMaskingColumnOutput() MaskingPoliciesMaskingColumnOutput
	ToMaskingPoliciesMaskingColumnOutputWithContext(ctx context.Context) MaskingPoliciesMaskingColumnOutput
}

func (*MaskingPoliciesMaskingColumn) ElementType() reflect.Type {
	return reflect.TypeOf((**MaskingPoliciesMaskingColumn)(nil)).Elem()
}

func (i *MaskingPoliciesMaskingColumn) ToMaskingPoliciesMaskingColumnOutput() MaskingPoliciesMaskingColumnOutput {
	return i.ToMaskingPoliciesMaskingColumnOutputWithContext(context.Background())
}

func (i *MaskingPoliciesMaskingColumn) ToMaskingPoliciesMaskingColumnOutputWithContext(ctx context.Context) MaskingPoliciesMaskingColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaskingPoliciesMaskingColumnOutput)
}

// MaskingPoliciesMaskingColumnArrayInput is an input type that accepts MaskingPoliciesMaskingColumnArray and MaskingPoliciesMaskingColumnArrayOutput values.
// You can construct a concrete instance of `MaskingPoliciesMaskingColumnArrayInput` via:
//
//	MaskingPoliciesMaskingColumnArray{ MaskingPoliciesMaskingColumnArgs{...} }
type MaskingPoliciesMaskingColumnArrayInput interface {
	pulumi.Input

	ToMaskingPoliciesMaskingColumnArrayOutput() MaskingPoliciesMaskingColumnArrayOutput
	ToMaskingPoliciesMaskingColumnArrayOutputWithContext(context.Context) MaskingPoliciesMaskingColumnArrayOutput
}

type MaskingPoliciesMaskingColumnArray []MaskingPoliciesMaskingColumnInput

func (MaskingPoliciesMaskingColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MaskingPoliciesMaskingColumn)(nil)).Elem()
}

func (i MaskingPoliciesMaskingColumnArray) ToMaskingPoliciesMaskingColumnArrayOutput() MaskingPoliciesMaskingColumnArrayOutput {
	return i.ToMaskingPoliciesMaskingColumnArrayOutputWithContext(context.Background())
}

func (i MaskingPoliciesMaskingColumnArray) ToMaskingPoliciesMaskingColumnArrayOutputWithContext(ctx context.Context) MaskingPoliciesMaskingColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaskingPoliciesMaskingColumnArrayOutput)
}

// MaskingPoliciesMaskingColumnMapInput is an input type that accepts MaskingPoliciesMaskingColumnMap and MaskingPoliciesMaskingColumnMapOutput values.
// You can construct a concrete instance of `MaskingPoliciesMaskingColumnMapInput` via:
//
//	MaskingPoliciesMaskingColumnMap{ "key": MaskingPoliciesMaskingColumnArgs{...} }
type MaskingPoliciesMaskingColumnMapInput interface {
	pulumi.Input

	ToMaskingPoliciesMaskingColumnMapOutput() MaskingPoliciesMaskingColumnMapOutput
	ToMaskingPoliciesMaskingColumnMapOutputWithContext(context.Context) MaskingPoliciesMaskingColumnMapOutput
}

type MaskingPoliciesMaskingColumnMap map[string]MaskingPoliciesMaskingColumnInput

func (MaskingPoliciesMaskingColumnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MaskingPoliciesMaskingColumn)(nil)).Elem()
}

func (i MaskingPoliciesMaskingColumnMap) ToMaskingPoliciesMaskingColumnMapOutput() MaskingPoliciesMaskingColumnMapOutput {
	return i.ToMaskingPoliciesMaskingColumnMapOutputWithContext(context.Background())
}

func (i MaskingPoliciesMaskingColumnMap) ToMaskingPoliciesMaskingColumnMapOutputWithContext(ctx context.Context) MaskingPoliciesMaskingColumnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaskingPoliciesMaskingColumnMapOutput)
}

type MaskingPoliciesMaskingColumnOutput struct{ *pulumi.OutputState }

func (MaskingPoliciesMaskingColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaskingPoliciesMaskingColumn)(nil)).Elem()
}

func (o MaskingPoliciesMaskingColumnOutput) ToMaskingPoliciesMaskingColumnOutput() MaskingPoliciesMaskingColumnOutput {
	return o
}

func (o MaskingPoliciesMaskingColumnOutput) ToMaskingPoliciesMaskingColumnOutputWithContext(ctx context.Context) MaskingPoliciesMaskingColumnOutput {
	return o
}

// An array of child columns that are in referential relationship with the masking column.
func (o MaskingPoliciesMaskingColumnOutput) ChildColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringArrayOutput { return v.ChildColumns }).(pulumi.StringArrayOutput)
}

// (Updatable) The name of the substitution column.
func (o MaskingPoliciesMaskingColumnOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.ColumnName }).(pulumi.StringOutput)
}

// The data type of the masking column.
func (o MaskingPoliciesMaskingColumnOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.DataType }).(pulumi.StringOutput)
}

// (Updatable) Indicates whether data masking is enabled for the masking column. Set it to false if  you don't want to mask the column.
func (o MaskingPoliciesMaskingColumnOutput) IsMaskingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.BoolOutput { return v.IsMaskingEnabled }).(pulumi.BoolOutput)
}

// The unique key that identifies the masking column. It's numeric and unique within a masking policy.
func (o MaskingPoliciesMaskingColumnOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Details about the current state of the masking column.
func (o MaskingPoliciesMaskingColumnOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) The group of the masking column. It's a masking group identifier and can be any string  of acceptable length. All the columns in a group are masked together to ensure that  the masked data across these columns continue to retain the same logical relationship.  For more details, check  <a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037>Group Masking in the Data Safe documentation.</a>
func (o MaskingPoliciesMaskingColumnOutput) MaskingColumnGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.MaskingColumnGroup }).(pulumi.StringOutput)
}

// (Updatable) The masking formats to be assigned to the masking column. You can specify a condition  as part of each masking format. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions. A masking format can have one or more format  entries. The combined output of all the format entries is used for masking. It  provides the flexibility to define a masking format that can generate different parts  of a data value separately and then combine them to get the final data value for masking.
func (o MaskingPoliciesMaskingColumnOutput) MaskingFormats() MaskingPoliciesMaskingColumnMaskingFormatArrayOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) MaskingPoliciesMaskingColumnMaskingFormatArrayOutput {
		return v.MaskingFormats
	}).(MaskingPoliciesMaskingColumnMaskingFormatArrayOutput)
}

// The OCID of the masking policy.
func (o MaskingPoliciesMaskingColumnOutput) MaskingPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.MaskingPolicyId }).(pulumi.StringOutput)
}

// The name of the object (table or editioning view) that contains the database column. This attribute cannot be updated for an existing masking column.
func (o MaskingPoliciesMaskingColumnOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.Object }).(pulumi.StringOutput)
}

// (Updatable) The type of the object that contains the database column.
func (o MaskingPoliciesMaskingColumnOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.ObjectType }).(pulumi.StringOutput)
}

// The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
func (o MaskingPoliciesMaskingColumnOutput) SchemaName() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.SchemaName }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the sensitive type to be associated with the masking column. Note that  if the maskingFormats attribute isn't provided while creating a masking column,   the default masking format associated with the specified sensitive type is assigned  to the masking column.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o MaskingPoliciesMaskingColumnOutput) SensitiveTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.SensitiveTypeId }).(pulumi.StringOutput)
}

// The current state of the masking column.
func (o MaskingPoliciesMaskingColumnOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o MaskingPoliciesMaskingColumnOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o MaskingPoliciesMaskingColumnOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *MaskingPoliciesMaskingColumn) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type MaskingPoliciesMaskingColumnArrayOutput struct{ *pulumi.OutputState }

func (MaskingPoliciesMaskingColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MaskingPoliciesMaskingColumn)(nil)).Elem()
}

func (o MaskingPoliciesMaskingColumnArrayOutput) ToMaskingPoliciesMaskingColumnArrayOutput() MaskingPoliciesMaskingColumnArrayOutput {
	return o
}

func (o MaskingPoliciesMaskingColumnArrayOutput) ToMaskingPoliciesMaskingColumnArrayOutputWithContext(ctx context.Context) MaskingPoliciesMaskingColumnArrayOutput {
	return o
}

func (o MaskingPoliciesMaskingColumnArrayOutput) Index(i pulumi.IntInput) MaskingPoliciesMaskingColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MaskingPoliciesMaskingColumn {
		return vs[0].([]*MaskingPoliciesMaskingColumn)[vs[1].(int)]
	}).(MaskingPoliciesMaskingColumnOutput)
}

type MaskingPoliciesMaskingColumnMapOutput struct{ *pulumi.OutputState }

func (MaskingPoliciesMaskingColumnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MaskingPoliciesMaskingColumn)(nil)).Elem()
}

func (o MaskingPoliciesMaskingColumnMapOutput) ToMaskingPoliciesMaskingColumnMapOutput() MaskingPoliciesMaskingColumnMapOutput {
	return o
}

func (o MaskingPoliciesMaskingColumnMapOutput) ToMaskingPoliciesMaskingColumnMapOutputWithContext(ctx context.Context) MaskingPoliciesMaskingColumnMapOutput {
	return o
}

func (o MaskingPoliciesMaskingColumnMapOutput) MapIndex(k pulumi.StringInput) MaskingPoliciesMaskingColumnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MaskingPoliciesMaskingColumn {
		return vs[0].(map[string]*MaskingPoliciesMaskingColumn)[vs[1].(string)]
	}).(MaskingPoliciesMaskingColumnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MaskingPoliciesMaskingColumnInput)(nil)).Elem(), &MaskingPoliciesMaskingColumn{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaskingPoliciesMaskingColumnArrayInput)(nil)).Elem(), MaskingPoliciesMaskingColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaskingPoliciesMaskingColumnMapInput)(nil)).Elem(), MaskingPoliciesMaskingColumnMap{})
	pulumi.RegisterOutputType(MaskingPoliciesMaskingColumnOutput{})
	pulumi.RegisterOutputType(MaskingPoliciesMaskingColumnArrayOutput{})
	pulumi.RegisterOutputType(MaskingPoliciesMaskingColumnMapOutput{})
}
