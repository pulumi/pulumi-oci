// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem struct {
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Lists the audit policy provisioning conditions.
	Conditions []GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition `pulumi:"conditions"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The description of the unified audit policy.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the specified display name.
	DisplayName string `pulumi:"displayName"`
	// Indicates on whom the audit policy is enabled.
	EnabledEntities string `pulumi:"enabledEntities"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the unified audit policy.
	Id string `pulumi:"id"`
	// A boolean flag indicating to list seeded unified audit policies. Set this parameter to get list of seeded unified audit policies.
	IsSeeded bool `pulumi:"isSeeded"`
	// The details of the current state of the unified audit policy in Data Safe.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// An optional filter to return only resources that match the specified OCID of the security policy resource.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	// The current state of the Unified Audit policy.
	State string `pulumi:"state"`
	// Indicates whether the policy has been enabled or disabled.
	Status string `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the the unified audit policy was created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
	UnifiedAuditPolicyDefinitionId string `pulumi:"unifiedAuditPolicyDefinitionId"`
}

// GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemInput is an input type that accepts GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArgs and GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemInput` via:
//
//	GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArgs{...}
type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemInput interface {
	pulumi.Input

	ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput
	ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutputWithContext(context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput
}

type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArgs struct {
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Lists the audit policy provisioning conditions.
	Conditions GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayInput `pulumi:"conditions"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The description of the unified audit policy.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the specified display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Indicates on whom the audit policy is enabled.
	EnabledEntities pulumi.StringInput `pulumi:"enabledEntities"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the unified audit policy.
	Id pulumi.StringInput `pulumi:"id"`
	// A boolean flag indicating to list seeded unified audit policies. Set this parameter to get list of seeded unified audit policies.
	IsSeeded pulumi.BoolInput `pulumi:"isSeeded"`
	// The details of the current state of the unified audit policy in Data Safe.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// An optional filter to return only resources that match the specified OCID of the security policy resource.
	SecurityPolicyId pulumi.StringInput `pulumi:"securityPolicyId"`
	// The current state of the Unified Audit policy.
	State pulumi.StringInput `pulumi:"state"`
	// Indicates whether the policy has been enabled or disabled.
	Status pulumi.StringInput `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time the the unified audit policy was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
	UnifiedAuditPolicyDefinitionId pulumi.StringInput `pulumi:"unifiedAuditPolicyDefinitionId"`
}

func (GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem)(nil)).Elem()
}

func (i GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArgs) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput {
	return i.ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArgs) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutputWithContext(ctx context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput)
}

// GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayInput is an input type that accepts GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArray and GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayInput` via:
//
//	GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArray{ GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArgs{...} }
type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayInput interface {
	pulumi.Input

	ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput
	ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutputWithContext(context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput
}

type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArray []GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemInput

func (GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem)(nil)).Elem()
}

func (i GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArray) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput {
	return i.ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArray) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput)
}

type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem)(nil)).Elem()
}

func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput {
	return o
}

func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutputWithContext(ctx context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput {
	return o
}

// A filter to return only resources that match the specified compartment OCID.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Lists the audit policy provisioning conditions.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) Conditions() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) []GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition {
		return v.Conditions
	}).(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) map[string]string {
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// The description of the unified audit policy.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the specified display name.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Indicates on whom the audit policy is enabled.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) EnabledEntities() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string { return v.EnabledEntities }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) map[string]string {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// The OCID of the unified audit policy.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A boolean flag indicating to list seeded unified audit policies. Set this parameter to get list of seeded unified audit policies.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) IsSeeded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) bool { return v.IsSeeded }).(pulumi.BoolOutput)
}

// The details of the current state of the unified audit policy in Data Safe.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// An optional filter to return only resources that match the specified OCID of the security policy resource.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

// The current state of the Unified Audit policy.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Indicates whether the policy has been enabled or disabled.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string { return v.Status }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the the unified audit policy was created, in the format defined by RFC3339.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput) UnifiedAuditPolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem) string {
		return v.UnifiedAuditPolicyDefinitionId
	}).(pulumi.StringOutput)
}

type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem)(nil)).Elem()
}

func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput {
	return o
}

func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput {
	return o
}

func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput) Index(i pulumi.IntInput) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem {
		return vs[0].([]GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItem)[vs[1].(int)]
	}).(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput)
}

type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition struct {
	// The OCID of the attribute set.
	AttributeSetId string `pulumi:"attributeSetId"`
	// Specifies whether to include or exclude the specified users or roles.
	EntitySelection string `pulumi:"entitySelection"`
	// The type of users or roles that the unified audit policy is applied to.
	EntityType string `pulumi:"entityType"`
	// The operation status that the policy must be enabled for.
	OperationStatus string `pulumi:"operationStatus"`
	// List of roles that the policy must be enabled for.
	RoleNames []string `pulumi:"roleNames"`
	// The list of users that the unified audit policy is enabled for.
	UserNames []string `pulumi:"userNames"`
}

// GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionInput is an input type that accepts GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArgs and GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionInput` via:
//
//	GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArgs{...}
type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionInput interface {
	pulumi.Input

	ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput
	ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutputWithContext(context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput
}

type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArgs struct {
	// The OCID of the attribute set.
	AttributeSetId pulumi.StringInput `pulumi:"attributeSetId"`
	// Specifies whether to include or exclude the specified users or roles.
	EntitySelection pulumi.StringInput `pulumi:"entitySelection"`
	// The type of users or roles that the unified audit policy is applied to.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The operation status that the policy must be enabled for.
	OperationStatus pulumi.StringInput `pulumi:"operationStatus"`
	// List of roles that the policy must be enabled for.
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	// The list of users that the unified audit policy is enabled for.
	UserNames pulumi.StringArrayInput `pulumi:"userNames"`
}

func (GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition)(nil)).Elem()
}

func (i GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArgs) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput {
	return i.ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArgs) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutputWithContext(ctx context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput)
}

// GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayInput is an input type that accepts GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArray and GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayInput` via:
//
//	GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArray{ GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArgs{...} }
type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayInput interface {
	pulumi.Input

	ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput
	ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutputWithContext(context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput
}

type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArray []GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionInput

func (GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition)(nil)).Elem()
}

func (i GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArray) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput {
	return i.ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArray) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput)
}

type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition)(nil)).Elem()
}

func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput {
	return o
}

func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutputWithContext(ctx context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput {
	return o
}

// The OCID of the attribute set.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput) AttributeSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition) string {
		return v.AttributeSetId
	}).(pulumi.StringOutput)
}

// Specifies whether to include or exclude the specified users or roles.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput) EntitySelection() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition) string {
		return v.EntitySelection
	}).(pulumi.StringOutput)
}

// The type of users or roles that the unified audit policy is applied to.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition) string { return v.EntityType }).(pulumi.StringOutput)
}

// The operation status that the policy must be enabled for.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput) OperationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition) string {
		return v.OperationStatus
	}).(pulumi.StringOutput)
}

// List of roles that the policy must be enabled for.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

// The list of users that the unified audit policy is enabled for.
func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput) UserNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition) []string { return v.UserNames }).(pulumi.StringArrayOutput)
}

type GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition)(nil)).Elem()
}

func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput() GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput {
	return o
}

func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput) ToGetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput {
	return o
}

func (o GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput) Index(i pulumi.IntInput) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition {
		return vs[0].([]GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemCondition)[vs[1].(int)]
	}).(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput)
}

type GetUnifiedAuditPolicyCondition struct {
	// The OCID of the attribute set.
	AttributeSetId string `pulumi:"attributeSetId"`
	// Specifies whether to include or exclude the specified users or roles.
	EntitySelection string `pulumi:"entitySelection"`
	// The type of users or roles that the unified audit policy is applied to.
	EntityType string `pulumi:"entityType"`
	// The operation status that the policy must be enabled for.
	OperationStatus string `pulumi:"operationStatus"`
	// List of roles that the policy must be enabled for.
	RoleNames []string `pulumi:"roleNames"`
	// The list of users that the unified audit policy is enabled for.
	UserNames []string `pulumi:"userNames"`
}

// GetUnifiedAuditPolicyConditionInput is an input type that accepts GetUnifiedAuditPolicyConditionArgs and GetUnifiedAuditPolicyConditionOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPolicyConditionInput` via:
//
//	GetUnifiedAuditPolicyConditionArgs{...}
type GetUnifiedAuditPolicyConditionInput interface {
	pulumi.Input

	ToGetUnifiedAuditPolicyConditionOutput() GetUnifiedAuditPolicyConditionOutput
	ToGetUnifiedAuditPolicyConditionOutputWithContext(context.Context) GetUnifiedAuditPolicyConditionOutput
}

type GetUnifiedAuditPolicyConditionArgs struct {
	// The OCID of the attribute set.
	AttributeSetId pulumi.StringInput `pulumi:"attributeSetId"`
	// Specifies whether to include or exclude the specified users or roles.
	EntitySelection pulumi.StringInput `pulumi:"entitySelection"`
	// The type of users or roles that the unified audit policy is applied to.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The operation status that the policy must be enabled for.
	OperationStatus pulumi.StringInput `pulumi:"operationStatus"`
	// List of roles that the policy must be enabled for.
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	// The list of users that the unified audit policy is enabled for.
	UserNames pulumi.StringArrayInput `pulumi:"userNames"`
}

func (GetUnifiedAuditPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPolicyCondition)(nil)).Elem()
}

func (i GetUnifiedAuditPolicyConditionArgs) ToGetUnifiedAuditPolicyConditionOutput() GetUnifiedAuditPolicyConditionOutput {
	return i.ToGetUnifiedAuditPolicyConditionOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPolicyConditionArgs) ToGetUnifiedAuditPolicyConditionOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPolicyConditionOutput)
}

// GetUnifiedAuditPolicyConditionArrayInput is an input type that accepts GetUnifiedAuditPolicyConditionArray and GetUnifiedAuditPolicyConditionArrayOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPolicyConditionArrayInput` via:
//
//	GetUnifiedAuditPolicyConditionArray{ GetUnifiedAuditPolicyConditionArgs{...} }
type GetUnifiedAuditPolicyConditionArrayInput interface {
	pulumi.Input

	ToGetUnifiedAuditPolicyConditionArrayOutput() GetUnifiedAuditPolicyConditionArrayOutput
	ToGetUnifiedAuditPolicyConditionArrayOutputWithContext(context.Context) GetUnifiedAuditPolicyConditionArrayOutput
}

type GetUnifiedAuditPolicyConditionArray []GetUnifiedAuditPolicyConditionInput

func (GetUnifiedAuditPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPolicyCondition)(nil)).Elem()
}

func (i GetUnifiedAuditPolicyConditionArray) ToGetUnifiedAuditPolicyConditionArrayOutput() GetUnifiedAuditPolicyConditionArrayOutput {
	return i.ToGetUnifiedAuditPolicyConditionArrayOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPolicyConditionArray) ToGetUnifiedAuditPolicyConditionArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPolicyConditionArrayOutput)
}

type GetUnifiedAuditPolicyConditionOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPolicyCondition)(nil)).Elem()
}

func (o GetUnifiedAuditPolicyConditionOutput) ToGetUnifiedAuditPolicyConditionOutput() GetUnifiedAuditPolicyConditionOutput {
	return o
}

func (o GetUnifiedAuditPolicyConditionOutput) ToGetUnifiedAuditPolicyConditionOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyConditionOutput {
	return o
}

// The OCID of the attribute set.
func (o GetUnifiedAuditPolicyConditionOutput) AttributeSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyCondition) string { return v.AttributeSetId }).(pulumi.StringOutput)
}

// Specifies whether to include or exclude the specified users or roles.
func (o GetUnifiedAuditPolicyConditionOutput) EntitySelection() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyCondition) string { return v.EntitySelection }).(pulumi.StringOutput)
}

// The type of users or roles that the unified audit policy is applied to.
func (o GetUnifiedAuditPolicyConditionOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyCondition) string { return v.EntityType }).(pulumi.StringOutput)
}

// The operation status that the policy must be enabled for.
func (o GetUnifiedAuditPolicyConditionOutput) OperationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyCondition) string { return v.OperationStatus }).(pulumi.StringOutput)
}

// List of roles that the policy must be enabled for.
func (o GetUnifiedAuditPolicyConditionOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyCondition) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

// The list of users that the unified audit policy is enabled for.
func (o GetUnifiedAuditPolicyConditionOutput) UserNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyCondition) []string { return v.UserNames }).(pulumi.StringArrayOutput)
}

type GetUnifiedAuditPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPolicyCondition)(nil)).Elem()
}

func (o GetUnifiedAuditPolicyConditionArrayOutput) ToGetUnifiedAuditPolicyConditionArrayOutput() GetUnifiedAuditPolicyConditionArrayOutput {
	return o
}

func (o GetUnifiedAuditPolicyConditionArrayOutput) ToGetUnifiedAuditPolicyConditionArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyConditionArrayOutput {
	return o
}

func (o GetUnifiedAuditPolicyConditionArrayOutput) Index(i pulumi.IntInput) GetUnifiedAuditPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUnifiedAuditPolicyCondition {
		return vs[0].([]GetUnifiedAuditPolicyCondition)[vs[1].(int)]
	}).(GetUnifiedAuditPolicyConditionOutput)
}

type GetUnifiedAuditPolicyDefinitionsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetUnifiedAuditPolicyDefinitionsFilterInput is an input type that accepts GetUnifiedAuditPolicyDefinitionsFilterArgs and GetUnifiedAuditPolicyDefinitionsFilterOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPolicyDefinitionsFilterInput` via:
//
//	GetUnifiedAuditPolicyDefinitionsFilterArgs{...}
type GetUnifiedAuditPolicyDefinitionsFilterInput interface {
	pulumi.Input

	ToGetUnifiedAuditPolicyDefinitionsFilterOutput() GetUnifiedAuditPolicyDefinitionsFilterOutput
	ToGetUnifiedAuditPolicyDefinitionsFilterOutputWithContext(context.Context) GetUnifiedAuditPolicyDefinitionsFilterOutput
}

type GetUnifiedAuditPolicyDefinitionsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUnifiedAuditPolicyDefinitionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsFilter)(nil)).Elem()
}

func (i GetUnifiedAuditPolicyDefinitionsFilterArgs) ToGetUnifiedAuditPolicyDefinitionsFilterOutput() GetUnifiedAuditPolicyDefinitionsFilterOutput {
	return i.ToGetUnifiedAuditPolicyDefinitionsFilterOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPolicyDefinitionsFilterArgs) ToGetUnifiedAuditPolicyDefinitionsFilterOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPolicyDefinitionsFilterOutput)
}

// GetUnifiedAuditPolicyDefinitionsFilterArrayInput is an input type that accepts GetUnifiedAuditPolicyDefinitionsFilterArray and GetUnifiedAuditPolicyDefinitionsFilterArrayOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPolicyDefinitionsFilterArrayInput` via:
//
//	GetUnifiedAuditPolicyDefinitionsFilterArray{ GetUnifiedAuditPolicyDefinitionsFilterArgs{...} }
type GetUnifiedAuditPolicyDefinitionsFilterArrayInput interface {
	pulumi.Input

	ToGetUnifiedAuditPolicyDefinitionsFilterArrayOutput() GetUnifiedAuditPolicyDefinitionsFilterArrayOutput
	ToGetUnifiedAuditPolicyDefinitionsFilterArrayOutputWithContext(context.Context) GetUnifiedAuditPolicyDefinitionsFilterArrayOutput
}

type GetUnifiedAuditPolicyDefinitionsFilterArray []GetUnifiedAuditPolicyDefinitionsFilterInput

func (GetUnifiedAuditPolicyDefinitionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPolicyDefinitionsFilter)(nil)).Elem()
}

func (i GetUnifiedAuditPolicyDefinitionsFilterArray) ToGetUnifiedAuditPolicyDefinitionsFilterArrayOutput() GetUnifiedAuditPolicyDefinitionsFilterArrayOutput {
	return i.ToGetUnifiedAuditPolicyDefinitionsFilterArrayOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPolicyDefinitionsFilterArray) ToGetUnifiedAuditPolicyDefinitionsFilterArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPolicyDefinitionsFilterArrayOutput)
}

type GetUnifiedAuditPolicyDefinitionsFilterOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPolicyDefinitionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsFilter)(nil)).Elem()
}

func (o GetUnifiedAuditPolicyDefinitionsFilterOutput) ToGetUnifiedAuditPolicyDefinitionsFilterOutput() GetUnifiedAuditPolicyDefinitionsFilterOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsFilterOutput) ToGetUnifiedAuditPolicyDefinitionsFilterOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsFilterOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUnifiedAuditPolicyDefinitionsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetUnifiedAuditPolicyDefinitionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUnifiedAuditPolicyDefinitionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPolicyDefinitionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPolicyDefinitionsFilter)(nil)).Elem()
}

func (o GetUnifiedAuditPolicyDefinitionsFilterArrayOutput) ToGetUnifiedAuditPolicyDefinitionsFilterArrayOutput() GetUnifiedAuditPolicyDefinitionsFilterArrayOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsFilterArrayOutput) ToGetUnifiedAuditPolicyDefinitionsFilterArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsFilterArrayOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsFilterArrayOutput) Index(i pulumi.IntInput) GetUnifiedAuditPolicyDefinitionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUnifiedAuditPolicyDefinitionsFilter {
		return vs[0].([]GetUnifiedAuditPolicyDefinitionsFilter)[vs[1].(int)]
	}).(GetUnifiedAuditPolicyDefinitionsFilterOutput)
}

type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection struct {
	Items []GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem `pulumi:"items"`
}

// GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionInput is an input type that accepts GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArgs and GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionInput` via:
//
//	GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArgs{...}
type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionInput interface {
	pulumi.Input

	ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput
	ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutputWithContext(context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput
}

type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArgs struct {
	Items GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayInput `pulumi:"items"`
}

func (GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection)(nil)).Elem()
}

func (i GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArgs) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput {
	return i.ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArgs) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput)
}

// GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayInput is an input type that accepts GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArray and GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayInput` via:
//
//	GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArray{ GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArgs{...} }
type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayInput interface {
	pulumi.Input

	ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput
	ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutputWithContext(context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput
}

type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArray []GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionInput

func (GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection)(nil)).Elem()
}

func (i GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArray) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput {
	return i.ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArray) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput)
}

type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection)(nil)).Elem()
}

func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput) Items() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection) []GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem {
		return v.Items
	}).(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput)
}

type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection)(nil)).Elem()
}

func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput) Index(i pulumi.IntInput) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection {
		return vs[0].([]GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollection)[vs[1].(int)]
	}).(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput)
}

type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem struct {
	// The category to which the unified audit policy belongs in the target database.
	AuditPolicyCategory string `pulumi:"auditPolicyCategory"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The description of the unified audit policy definition.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the specified display name.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the unified audit policy definition.
	Id string `pulumi:"id"`
	// A boolean flag indicating to list seeded unified audit policy definitions. Set this parameter to get list of seeded unified audit policy definitions.
	IsSeeded bool `pulumi:"isSeeded"`
	// Details about the current state of the unified audit policy definition.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The definition of the unified audit policy to be provisioned in the target database.
	PolicyDefinitionStatement string `pulumi:"policyDefinitionStatement"`
	// The unified audit policy name in the target database.
	PolicyName string `pulumi:"policyName"`
	// The current state of the unified audit policy definition.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the unified audit policy was created, in the format defined by RFC3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
	TimeUpdated string `pulumi:"timeUpdated"`
	// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
	UnifiedAuditPolicyDefinitionId string `pulumi:"unifiedAuditPolicyDefinitionId"`
}

// GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemInput is an input type that accepts GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArgs and GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemInput` via:
//
//	GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArgs{...}
type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemInput interface {
	pulumi.Input

	ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput
	ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutputWithContext(context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput
}

type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArgs struct {
	// The category to which the unified audit policy belongs in the target database.
	AuditPolicyCategory pulumi.StringInput `pulumi:"auditPolicyCategory"`
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The description of the unified audit policy definition.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the specified display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the unified audit policy definition.
	Id pulumi.StringInput `pulumi:"id"`
	// A boolean flag indicating to list seeded unified audit policy definitions. Set this parameter to get list of seeded unified audit policy definitions.
	IsSeeded pulumi.BoolInput `pulumi:"isSeeded"`
	// Details about the current state of the unified audit policy definition.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The definition of the unified audit policy to be provisioned in the target database.
	PolicyDefinitionStatement pulumi.StringInput `pulumi:"policyDefinitionStatement"`
	// The unified audit policy name in the target database.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// The current state of the unified audit policy definition.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// The time the unified audit policy was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
	UnifiedAuditPolicyDefinitionId pulumi.StringInput `pulumi:"unifiedAuditPolicyDefinitionId"`
}

func (GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem)(nil)).Elem()
}

func (i GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArgs) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput {
	return i.ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArgs) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput)
}

// GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayInput is an input type that accepts GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArray and GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayInput` via:
//
//	GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArray{ GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArgs{...} }
type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayInput interface {
	pulumi.Input

	ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput
	ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutputWithContext(context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput
}

type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArray []GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemInput

func (GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem)(nil)).Elem()
}

func (i GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArray) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput {
	return i.ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArray) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput)
}

type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem)(nil)).Elem()
}

func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput {
	return o
}

// The category to which the unified audit policy belongs in the target database.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) AuditPolicyCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string {
		return v.AuditPolicyCategory
	}).(pulumi.StringOutput)
}

// A filter to return only resources that match the specified compartment OCID.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string {
		return v.CompartmentId
	}).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) map[string]string {
		return v.DefinedTags
	}).(pulumi.StringMapOutput)
}

// The description of the unified audit policy definition.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// A filter to return only resources that match the specified display name.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string {
		return v.DisplayName
	}).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) map[string]string {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// The OCID of the unified audit policy definition.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// A boolean flag indicating to list seeded unified audit policy definitions. Set this parameter to get list of seeded unified audit policy definitions.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) IsSeeded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) bool {
		return v.IsSeeded
	}).(pulumi.BoolOutput)
}

// Details about the current state of the unified audit policy definition.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string {
		return v.LifecycleDetails
	}).(pulumi.StringOutput)
}

// The definition of the unified audit policy to be provisioned in the target database.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) PolicyDefinitionStatement() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string {
		return v.PolicyDefinitionStatement
	}).(pulumi.StringOutput)
}

// The unified audit policy name in the target database.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string {
		return v.PolicyName
	}).(pulumi.StringOutput)
}

// The current state of the unified audit policy definition.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string {
		return v.State
	}).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) map[string]string {
		return v.SystemTags
	}).(pulumi.StringMapOutput)
}

// The time the unified audit policy was created, in the format defined by RFC3339.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string {
		return v.TimeCreated
	}).(pulumi.StringOutput)
}

// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string {
		return v.TimeUpdated
	}).(pulumi.StringOutput)
}

// An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput) UnifiedAuditPolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem) string {
		return v.UnifiedAuditPolicyDefinitionId
	}).(pulumi.StringOutput)
}

type GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem)(nil)).Elem()
}

func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput() GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput) ToGetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutputWithContext(ctx context.Context) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput {
	return o
}

func (o GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput) Index(i pulumi.IntInput) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem {
		return vs[0].([]GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItem)[vs[1].(int)]
	}).(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput)
}

type GetUserAssessmentComparisonSummary struct {
	Baselines []GetUserAssessmentComparisonSummaryBaseline `pulumi:"baselines"`
	Currents  []GetUserAssessmentComparisonSummaryCurrent  `pulumi:"currents"`
	Status    string                                       `pulumi:"status"`
}

// GetUserAssessmentComparisonSummaryInput is an input type that accepts GetUserAssessmentComparisonSummaryArgs and GetUserAssessmentComparisonSummaryOutput values.
// You can construct a concrete instance of `GetUserAssessmentComparisonSummaryInput` via:
//
//	GetUserAssessmentComparisonSummaryArgs{...}
type GetUserAssessmentComparisonSummaryInput interface {
	pulumi.Input

	ToGetUserAssessmentComparisonSummaryOutput() GetUserAssessmentComparisonSummaryOutput
	ToGetUserAssessmentComparisonSummaryOutputWithContext(context.Context) GetUserAssessmentComparisonSummaryOutput
}

type GetUserAssessmentComparisonSummaryArgs struct {
	Baselines GetUserAssessmentComparisonSummaryBaselineArrayInput `pulumi:"baselines"`
	Currents  GetUserAssessmentComparisonSummaryCurrentArrayInput  `pulumi:"currents"`
	Status    pulumi.StringInput                                   `pulumi:"status"`
}

func (GetUserAssessmentComparisonSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentComparisonSummary)(nil)).Elem()
}

func (i GetUserAssessmentComparisonSummaryArgs) ToGetUserAssessmentComparisonSummaryOutput() GetUserAssessmentComparisonSummaryOutput {
	return i.ToGetUserAssessmentComparisonSummaryOutputWithContext(context.Background())
}

func (i GetUserAssessmentComparisonSummaryArgs) ToGetUserAssessmentComparisonSummaryOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentComparisonSummaryOutput)
}

// GetUserAssessmentComparisonSummaryArrayInput is an input type that accepts GetUserAssessmentComparisonSummaryArray and GetUserAssessmentComparisonSummaryArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentComparisonSummaryArrayInput` via:
//
//	GetUserAssessmentComparisonSummaryArray{ GetUserAssessmentComparisonSummaryArgs{...} }
type GetUserAssessmentComparisonSummaryArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentComparisonSummaryArrayOutput() GetUserAssessmentComparisonSummaryArrayOutput
	ToGetUserAssessmentComparisonSummaryArrayOutputWithContext(context.Context) GetUserAssessmentComparisonSummaryArrayOutput
}

type GetUserAssessmentComparisonSummaryArray []GetUserAssessmentComparisonSummaryInput

func (GetUserAssessmentComparisonSummaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentComparisonSummary)(nil)).Elem()
}

func (i GetUserAssessmentComparisonSummaryArray) ToGetUserAssessmentComparisonSummaryArrayOutput() GetUserAssessmentComparisonSummaryArrayOutput {
	return i.ToGetUserAssessmentComparisonSummaryArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentComparisonSummaryArray) ToGetUserAssessmentComparisonSummaryArrayOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentComparisonSummaryArrayOutput)
}

type GetUserAssessmentComparisonSummaryOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentComparisonSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentComparisonSummary)(nil)).Elem()
}

func (o GetUserAssessmentComparisonSummaryOutput) ToGetUserAssessmentComparisonSummaryOutput() GetUserAssessmentComparisonSummaryOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryOutput) ToGetUserAssessmentComparisonSummaryOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryOutput) Baselines() GetUserAssessmentComparisonSummaryBaselineArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentComparisonSummary) []GetUserAssessmentComparisonSummaryBaseline {
		return v.Baselines
	}).(GetUserAssessmentComparisonSummaryBaselineArrayOutput)
}

func (o GetUserAssessmentComparisonSummaryOutput) Currents() GetUserAssessmentComparisonSummaryCurrentArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentComparisonSummary) []GetUserAssessmentComparisonSummaryCurrent {
		return v.Currents
	}).(GetUserAssessmentComparisonSummaryCurrentArrayOutput)
}

func (o GetUserAssessmentComparisonSummaryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentComparisonSummary) string { return v.Status }).(pulumi.StringOutput)
}

type GetUserAssessmentComparisonSummaryArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentComparisonSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentComparisonSummary)(nil)).Elem()
}

func (o GetUserAssessmentComparisonSummaryArrayOutput) ToGetUserAssessmentComparisonSummaryArrayOutput() GetUserAssessmentComparisonSummaryArrayOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryArrayOutput) ToGetUserAssessmentComparisonSummaryArrayOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryArrayOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentComparisonSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentComparisonSummary {
		return vs[0].([]GetUserAssessmentComparisonSummary)[vs[1].(int)]
	}).(GetUserAssessmentComparisonSummaryOutput)
}

type GetUserAssessmentComparisonSummaryBaseline struct {
	TargetId string `pulumi:"targetId"`
	// The OCID of the user assessment.
	UserAssessmentId string `pulumi:"userAssessmentId"`
}

// GetUserAssessmentComparisonSummaryBaselineInput is an input type that accepts GetUserAssessmentComparisonSummaryBaselineArgs and GetUserAssessmentComparisonSummaryBaselineOutput values.
// You can construct a concrete instance of `GetUserAssessmentComparisonSummaryBaselineInput` via:
//
//	GetUserAssessmentComparisonSummaryBaselineArgs{...}
type GetUserAssessmentComparisonSummaryBaselineInput interface {
	pulumi.Input

	ToGetUserAssessmentComparisonSummaryBaselineOutput() GetUserAssessmentComparisonSummaryBaselineOutput
	ToGetUserAssessmentComparisonSummaryBaselineOutputWithContext(context.Context) GetUserAssessmentComparisonSummaryBaselineOutput
}

type GetUserAssessmentComparisonSummaryBaselineArgs struct {
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// The OCID of the user assessment.
	UserAssessmentId pulumi.StringInput `pulumi:"userAssessmentId"`
}

func (GetUserAssessmentComparisonSummaryBaselineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentComparisonSummaryBaseline)(nil)).Elem()
}

func (i GetUserAssessmentComparisonSummaryBaselineArgs) ToGetUserAssessmentComparisonSummaryBaselineOutput() GetUserAssessmentComparisonSummaryBaselineOutput {
	return i.ToGetUserAssessmentComparisonSummaryBaselineOutputWithContext(context.Background())
}

func (i GetUserAssessmentComparisonSummaryBaselineArgs) ToGetUserAssessmentComparisonSummaryBaselineOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryBaselineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentComparisonSummaryBaselineOutput)
}

// GetUserAssessmentComparisonSummaryBaselineArrayInput is an input type that accepts GetUserAssessmentComparisonSummaryBaselineArray and GetUserAssessmentComparisonSummaryBaselineArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentComparisonSummaryBaselineArrayInput` via:
//
//	GetUserAssessmentComparisonSummaryBaselineArray{ GetUserAssessmentComparisonSummaryBaselineArgs{...} }
type GetUserAssessmentComparisonSummaryBaselineArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentComparisonSummaryBaselineArrayOutput() GetUserAssessmentComparisonSummaryBaselineArrayOutput
	ToGetUserAssessmentComparisonSummaryBaselineArrayOutputWithContext(context.Context) GetUserAssessmentComparisonSummaryBaselineArrayOutput
}

type GetUserAssessmentComparisonSummaryBaselineArray []GetUserAssessmentComparisonSummaryBaselineInput

func (GetUserAssessmentComparisonSummaryBaselineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentComparisonSummaryBaseline)(nil)).Elem()
}

func (i GetUserAssessmentComparisonSummaryBaselineArray) ToGetUserAssessmentComparisonSummaryBaselineArrayOutput() GetUserAssessmentComparisonSummaryBaselineArrayOutput {
	return i.ToGetUserAssessmentComparisonSummaryBaselineArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentComparisonSummaryBaselineArray) ToGetUserAssessmentComparisonSummaryBaselineArrayOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryBaselineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentComparisonSummaryBaselineArrayOutput)
}

type GetUserAssessmentComparisonSummaryBaselineOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentComparisonSummaryBaselineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentComparisonSummaryBaseline)(nil)).Elem()
}

func (o GetUserAssessmentComparisonSummaryBaselineOutput) ToGetUserAssessmentComparisonSummaryBaselineOutput() GetUserAssessmentComparisonSummaryBaselineOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryBaselineOutput) ToGetUserAssessmentComparisonSummaryBaselineOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryBaselineOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryBaselineOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentComparisonSummaryBaseline) string { return v.TargetId }).(pulumi.StringOutput)
}

// The OCID of the user assessment.
func (o GetUserAssessmentComparisonSummaryBaselineOutput) UserAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentComparisonSummaryBaseline) string { return v.UserAssessmentId }).(pulumi.StringOutput)
}

type GetUserAssessmentComparisonSummaryBaselineArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentComparisonSummaryBaselineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentComparisonSummaryBaseline)(nil)).Elem()
}

func (o GetUserAssessmentComparisonSummaryBaselineArrayOutput) ToGetUserAssessmentComparisonSummaryBaselineArrayOutput() GetUserAssessmentComparisonSummaryBaselineArrayOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryBaselineArrayOutput) ToGetUserAssessmentComparisonSummaryBaselineArrayOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryBaselineArrayOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryBaselineArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentComparisonSummaryBaselineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentComparisonSummaryBaseline {
		return vs[0].([]GetUserAssessmentComparisonSummaryBaseline)[vs[1].(int)]
	}).(GetUserAssessmentComparisonSummaryBaselineOutput)
}

type GetUserAssessmentComparisonSummaryCurrent struct {
	TargetId string `pulumi:"targetId"`
	// The OCID of the user assessment.
	UserAssessmentId string `pulumi:"userAssessmentId"`
}

// GetUserAssessmentComparisonSummaryCurrentInput is an input type that accepts GetUserAssessmentComparisonSummaryCurrentArgs and GetUserAssessmentComparisonSummaryCurrentOutput values.
// You can construct a concrete instance of `GetUserAssessmentComparisonSummaryCurrentInput` via:
//
//	GetUserAssessmentComparisonSummaryCurrentArgs{...}
type GetUserAssessmentComparisonSummaryCurrentInput interface {
	pulumi.Input

	ToGetUserAssessmentComparisonSummaryCurrentOutput() GetUserAssessmentComparisonSummaryCurrentOutput
	ToGetUserAssessmentComparisonSummaryCurrentOutputWithContext(context.Context) GetUserAssessmentComparisonSummaryCurrentOutput
}

type GetUserAssessmentComparisonSummaryCurrentArgs struct {
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// The OCID of the user assessment.
	UserAssessmentId pulumi.StringInput `pulumi:"userAssessmentId"`
}

func (GetUserAssessmentComparisonSummaryCurrentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentComparisonSummaryCurrent)(nil)).Elem()
}

func (i GetUserAssessmentComparisonSummaryCurrentArgs) ToGetUserAssessmentComparisonSummaryCurrentOutput() GetUserAssessmentComparisonSummaryCurrentOutput {
	return i.ToGetUserAssessmentComparisonSummaryCurrentOutputWithContext(context.Background())
}

func (i GetUserAssessmentComparisonSummaryCurrentArgs) ToGetUserAssessmentComparisonSummaryCurrentOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryCurrentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentComparisonSummaryCurrentOutput)
}

// GetUserAssessmentComparisonSummaryCurrentArrayInput is an input type that accepts GetUserAssessmentComparisonSummaryCurrentArray and GetUserAssessmentComparisonSummaryCurrentArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentComparisonSummaryCurrentArrayInput` via:
//
//	GetUserAssessmentComparisonSummaryCurrentArray{ GetUserAssessmentComparisonSummaryCurrentArgs{...} }
type GetUserAssessmentComparisonSummaryCurrentArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentComparisonSummaryCurrentArrayOutput() GetUserAssessmentComparisonSummaryCurrentArrayOutput
	ToGetUserAssessmentComparisonSummaryCurrentArrayOutputWithContext(context.Context) GetUserAssessmentComparisonSummaryCurrentArrayOutput
}

type GetUserAssessmentComparisonSummaryCurrentArray []GetUserAssessmentComparisonSummaryCurrentInput

func (GetUserAssessmentComparisonSummaryCurrentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentComparisonSummaryCurrent)(nil)).Elem()
}

func (i GetUserAssessmentComparisonSummaryCurrentArray) ToGetUserAssessmentComparisonSummaryCurrentArrayOutput() GetUserAssessmentComparisonSummaryCurrentArrayOutput {
	return i.ToGetUserAssessmentComparisonSummaryCurrentArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentComparisonSummaryCurrentArray) ToGetUserAssessmentComparisonSummaryCurrentArrayOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryCurrentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentComparisonSummaryCurrentArrayOutput)
}

type GetUserAssessmentComparisonSummaryCurrentOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentComparisonSummaryCurrentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentComparisonSummaryCurrent)(nil)).Elem()
}

func (o GetUserAssessmentComparisonSummaryCurrentOutput) ToGetUserAssessmentComparisonSummaryCurrentOutput() GetUserAssessmentComparisonSummaryCurrentOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryCurrentOutput) ToGetUserAssessmentComparisonSummaryCurrentOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryCurrentOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryCurrentOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentComparisonSummaryCurrent) string { return v.TargetId }).(pulumi.StringOutput)
}

// The OCID of the user assessment.
func (o GetUserAssessmentComparisonSummaryCurrentOutput) UserAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentComparisonSummaryCurrent) string { return v.UserAssessmentId }).(pulumi.StringOutput)
}

type GetUserAssessmentComparisonSummaryCurrentArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentComparisonSummaryCurrentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentComparisonSummaryCurrent)(nil)).Elem()
}

func (o GetUserAssessmentComparisonSummaryCurrentArrayOutput) ToGetUserAssessmentComparisonSummaryCurrentArrayOutput() GetUserAssessmentComparisonSummaryCurrentArrayOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryCurrentArrayOutput) ToGetUserAssessmentComparisonSummaryCurrentArrayOutputWithContext(ctx context.Context) GetUserAssessmentComparisonSummaryCurrentArrayOutput {
	return o
}

func (o GetUserAssessmentComparisonSummaryCurrentArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentComparisonSummaryCurrentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentComparisonSummaryCurrent {
		return vs[0].([]GetUserAssessmentComparisonSummaryCurrent)[vs[1].(int)]
	}).(GetUserAssessmentComparisonSummaryCurrentOutput)
}

type GetUserAssessmentIgnoredTarget struct {
	LifecycleState string `pulumi:"lifecycleState"`
	TargetId       string `pulumi:"targetId"`
	// The OCID of the user assessment.
	UserAssessmentId string `pulumi:"userAssessmentId"`
}

// GetUserAssessmentIgnoredTargetInput is an input type that accepts GetUserAssessmentIgnoredTargetArgs and GetUserAssessmentIgnoredTargetOutput values.
// You can construct a concrete instance of `GetUserAssessmentIgnoredTargetInput` via:
//
//	GetUserAssessmentIgnoredTargetArgs{...}
type GetUserAssessmentIgnoredTargetInput interface {
	pulumi.Input

	ToGetUserAssessmentIgnoredTargetOutput() GetUserAssessmentIgnoredTargetOutput
	ToGetUserAssessmentIgnoredTargetOutputWithContext(context.Context) GetUserAssessmentIgnoredTargetOutput
}

type GetUserAssessmentIgnoredTargetArgs struct {
	LifecycleState pulumi.StringInput `pulumi:"lifecycleState"`
	TargetId       pulumi.StringInput `pulumi:"targetId"`
	// The OCID of the user assessment.
	UserAssessmentId pulumi.StringInput `pulumi:"userAssessmentId"`
}

func (GetUserAssessmentIgnoredTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentIgnoredTarget)(nil)).Elem()
}

func (i GetUserAssessmentIgnoredTargetArgs) ToGetUserAssessmentIgnoredTargetOutput() GetUserAssessmentIgnoredTargetOutput {
	return i.ToGetUserAssessmentIgnoredTargetOutputWithContext(context.Background())
}

func (i GetUserAssessmentIgnoredTargetArgs) ToGetUserAssessmentIgnoredTargetOutputWithContext(ctx context.Context) GetUserAssessmentIgnoredTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentIgnoredTargetOutput)
}

// GetUserAssessmentIgnoredTargetArrayInput is an input type that accepts GetUserAssessmentIgnoredTargetArray and GetUserAssessmentIgnoredTargetArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentIgnoredTargetArrayInput` via:
//
//	GetUserAssessmentIgnoredTargetArray{ GetUserAssessmentIgnoredTargetArgs{...} }
type GetUserAssessmentIgnoredTargetArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentIgnoredTargetArrayOutput() GetUserAssessmentIgnoredTargetArrayOutput
	ToGetUserAssessmentIgnoredTargetArrayOutputWithContext(context.Context) GetUserAssessmentIgnoredTargetArrayOutput
}

type GetUserAssessmentIgnoredTargetArray []GetUserAssessmentIgnoredTargetInput

func (GetUserAssessmentIgnoredTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentIgnoredTarget)(nil)).Elem()
}

func (i GetUserAssessmentIgnoredTargetArray) ToGetUserAssessmentIgnoredTargetArrayOutput() GetUserAssessmentIgnoredTargetArrayOutput {
	return i.ToGetUserAssessmentIgnoredTargetArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentIgnoredTargetArray) ToGetUserAssessmentIgnoredTargetArrayOutputWithContext(ctx context.Context) GetUserAssessmentIgnoredTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentIgnoredTargetArrayOutput)
}

type GetUserAssessmentIgnoredTargetOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentIgnoredTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentIgnoredTarget)(nil)).Elem()
}

func (o GetUserAssessmentIgnoredTargetOutput) ToGetUserAssessmentIgnoredTargetOutput() GetUserAssessmentIgnoredTargetOutput {
	return o
}

func (o GetUserAssessmentIgnoredTargetOutput) ToGetUserAssessmentIgnoredTargetOutputWithContext(ctx context.Context) GetUserAssessmentIgnoredTargetOutput {
	return o
}

func (o GetUserAssessmentIgnoredTargetOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentIgnoredTarget) string { return v.LifecycleState }).(pulumi.StringOutput)
}

func (o GetUserAssessmentIgnoredTargetOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentIgnoredTarget) string { return v.TargetId }).(pulumi.StringOutput)
}

// The OCID of the user assessment.
func (o GetUserAssessmentIgnoredTargetOutput) UserAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentIgnoredTarget) string { return v.UserAssessmentId }).(pulumi.StringOutput)
}

type GetUserAssessmentIgnoredTargetArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentIgnoredTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentIgnoredTarget)(nil)).Elem()
}

func (o GetUserAssessmentIgnoredTargetArrayOutput) ToGetUserAssessmentIgnoredTargetArrayOutput() GetUserAssessmentIgnoredTargetArrayOutput {
	return o
}

func (o GetUserAssessmentIgnoredTargetArrayOutput) ToGetUserAssessmentIgnoredTargetArrayOutputWithContext(ctx context.Context) GetUserAssessmentIgnoredTargetArrayOutput {
	return o
}

func (o GetUserAssessmentIgnoredTargetArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentIgnoredTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentIgnoredTarget {
		return vs[0].([]GetUserAssessmentIgnoredTarget)[vs[1].(int)]
	}).(GetUserAssessmentIgnoredTargetOutput)
}

type GetUserAssessmentPasswordExpiryDateAnalyticsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetUserAssessmentPasswordExpiryDateAnalyticsFilterInput is an input type that accepts GetUserAssessmentPasswordExpiryDateAnalyticsFilterArgs and GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput values.
// You can construct a concrete instance of `GetUserAssessmentPasswordExpiryDateAnalyticsFilterInput` via:
//
//	GetUserAssessmentPasswordExpiryDateAnalyticsFilterArgs{...}
type GetUserAssessmentPasswordExpiryDateAnalyticsFilterInput interface {
	pulumi.Input

	ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput() GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput
	ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterOutputWithContext(context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput
}

type GetUserAssessmentPasswordExpiryDateAnalyticsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUserAssessmentPasswordExpiryDateAnalyticsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsFilter)(nil)).Elem()
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsFilterArgs) ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput() GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput {
	return i.ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterOutputWithContext(context.Background())
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsFilterArgs) ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput)
}

// GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayInput is an input type that accepts GetUserAssessmentPasswordExpiryDateAnalyticsFilterArray and GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayInput` via:
//
//	GetUserAssessmentPasswordExpiryDateAnalyticsFilterArray{ GetUserAssessmentPasswordExpiryDateAnalyticsFilterArgs{...} }
type GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput() GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput
	ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutputWithContext(context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput
}

type GetUserAssessmentPasswordExpiryDateAnalyticsFilterArray []GetUserAssessmentPasswordExpiryDateAnalyticsFilterInput

func (GetUserAssessmentPasswordExpiryDateAnalyticsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentPasswordExpiryDateAnalyticsFilter)(nil)).Elem()
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsFilterArray) ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput() GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput {
	return i.ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsFilterArray) ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput)
}

type GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsFilter)(nil)).Elem()
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput() GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput {
	return o
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput {
	return o
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentPasswordExpiryDateAnalyticsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentPasswordExpiryDateAnalyticsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentPasswordExpiryDateAnalyticsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentPasswordExpiryDateAnalyticsFilter)(nil)).Elem()
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput() GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput {
	return o
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput {
	return o
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentPasswordExpiryDateAnalyticsFilter {
		return vs[0].([]GetUserAssessmentPasswordExpiryDateAnalyticsFilter)[vs[1].(int)]
	}).(GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput)
}

type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregation struct {
	// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
	Items []GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItem `pulumi:"items"`
}

// GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationInput is an input type that accepts GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArgs and GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput values.
// You can construct a concrete instance of `GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationInput` via:
//
//	GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArgs{...}
type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationInput interface {
	pulumi.Input

	ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput
	ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutputWithContext(context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput
}

type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArgs struct {
	// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
	Items GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayInput `pulumi:"items"`
}

func (GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregation)(nil)).Elem()
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArgs) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput {
	return i.ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutputWithContext(context.Background())
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArgs) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput)
}

// GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayInput is an input type that accepts GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArray and GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayInput` via:
//
//	GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArray{ GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArgs{...} }
type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput
	ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutputWithContext(context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput
}

type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArray []GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationInput

func (GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregation)(nil)).Elem()
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArray) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput {
	return i.ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArray) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput)
}

type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregation)(nil)).Elem()
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput {
	return o
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput {
	return o
}

// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
func (o GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput) Items() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregation) []GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItem {
		return v.Items
	}).(GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput)
}

type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregation)(nil)).Elem()
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput {
	return o
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput {
	return o
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregation {
		return vs[0].([]GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregation)[vs[1].(int)]
	}).(GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput)
}

type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItem struct {
}

// GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemInput is an input type that accepts GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArgs and GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput values.
// You can construct a concrete instance of `GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemInput` via:
//
//	GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArgs{...}
type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemInput interface {
	pulumi.Input

	ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput
	ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutputWithContext(context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput
}

type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArgs struct {
}

func (GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItem)(nil)).Elem()
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArgs) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput {
	return i.ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutputWithContext(context.Background())
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArgs) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput)
}

// GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayInput is an input type that accepts GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArray and GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayInput` via:
//
//	GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArray{ GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArgs{...} }
type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput
	ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutputWithContext(context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput
}

type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArray []GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemInput

func (GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItem)(nil)).Elem()
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArray) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput {
	return i.ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArray) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput)
}

type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItem)(nil)).Elem()
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput {
	return o
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput {
	return o
}

type GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItem)(nil)).Elem()
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput() GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput {
	return o
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput) ToGetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutputWithContext(ctx context.Context) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput {
	return o
}

func (o GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItem {
		return vs[0].([]GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItem)[vs[1].(int)]
	}).(GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput)
}

type GetUserAssessmentProfileAnalyticsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetUserAssessmentProfileAnalyticsFilterInput is an input type that accepts GetUserAssessmentProfileAnalyticsFilterArgs and GetUserAssessmentProfileAnalyticsFilterOutput values.
// You can construct a concrete instance of `GetUserAssessmentProfileAnalyticsFilterInput` via:
//
//	GetUserAssessmentProfileAnalyticsFilterArgs{...}
type GetUserAssessmentProfileAnalyticsFilterInput interface {
	pulumi.Input

	ToGetUserAssessmentProfileAnalyticsFilterOutput() GetUserAssessmentProfileAnalyticsFilterOutput
	ToGetUserAssessmentProfileAnalyticsFilterOutputWithContext(context.Context) GetUserAssessmentProfileAnalyticsFilterOutput
}

type GetUserAssessmentProfileAnalyticsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUserAssessmentProfileAnalyticsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentProfileAnalyticsFilter)(nil)).Elem()
}

func (i GetUserAssessmentProfileAnalyticsFilterArgs) ToGetUserAssessmentProfileAnalyticsFilterOutput() GetUserAssessmentProfileAnalyticsFilterOutput {
	return i.ToGetUserAssessmentProfileAnalyticsFilterOutputWithContext(context.Background())
}

func (i GetUserAssessmentProfileAnalyticsFilterArgs) ToGetUserAssessmentProfileAnalyticsFilterOutputWithContext(ctx context.Context) GetUserAssessmentProfileAnalyticsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentProfileAnalyticsFilterOutput)
}

// GetUserAssessmentProfileAnalyticsFilterArrayInput is an input type that accepts GetUserAssessmentProfileAnalyticsFilterArray and GetUserAssessmentProfileAnalyticsFilterArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentProfileAnalyticsFilterArrayInput` via:
//
//	GetUserAssessmentProfileAnalyticsFilterArray{ GetUserAssessmentProfileAnalyticsFilterArgs{...} }
type GetUserAssessmentProfileAnalyticsFilterArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentProfileAnalyticsFilterArrayOutput() GetUserAssessmentProfileAnalyticsFilterArrayOutput
	ToGetUserAssessmentProfileAnalyticsFilterArrayOutputWithContext(context.Context) GetUserAssessmentProfileAnalyticsFilterArrayOutput
}

type GetUserAssessmentProfileAnalyticsFilterArray []GetUserAssessmentProfileAnalyticsFilterInput

func (GetUserAssessmentProfileAnalyticsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentProfileAnalyticsFilter)(nil)).Elem()
}

func (i GetUserAssessmentProfileAnalyticsFilterArray) ToGetUserAssessmentProfileAnalyticsFilterArrayOutput() GetUserAssessmentProfileAnalyticsFilterArrayOutput {
	return i.ToGetUserAssessmentProfileAnalyticsFilterArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentProfileAnalyticsFilterArray) ToGetUserAssessmentProfileAnalyticsFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentProfileAnalyticsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentProfileAnalyticsFilterArrayOutput)
}

type GetUserAssessmentProfileAnalyticsFilterOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentProfileAnalyticsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentProfileAnalyticsFilter)(nil)).Elem()
}

func (o GetUserAssessmentProfileAnalyticsFilterOutput) ToGetUserAssessmentProfileAnalyticsFilterOutput() GetUserAssessmentProfileAnalyticsFilterOutput {
	return o
}

func (o GetUserAssessmentProfileAnalyticsFilterOutput) ToGetUserAssessmentProfileAnalyticsFilterOutputWithContext(ctx context.Context) GetUserAssessmentProfileAnalyticsFilterOutput {
	return o
}

func (o GetUserAssessmentProfileAnalyticsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfileAnalyticsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserAssessmentProfileAnalyticsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfileAnalyticsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetUserAssessmentProfileAnalyticsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentProfileAnalyticsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUserAssessmentProfileAnalyticsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentProfileAnalyticsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentProfileAnalyticsFilter)(nil)).Elem()
}

func (o GetUserAssessmentProfileAnalyticsFilterArrayOutput) ToGetUserAssessmentProfileAnalyticsFilterArrayOutput() GetUserAssessmentProfileAnalyticsFilterArrayOutput {
	return o
}

func (o GetUserAssessmentProfileAnalyticsFilterArrayOutput) ToGetUserAssessmentProfileAnalyticsFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentProfileAnalyticsFilterArrayOutput {
	return o
}

func (o GetUserAssessmentProfileAnalyticsFilterArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentProfileAnalyticsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentProfileAnalyticsFilter {
		return vs[0].([]GetUserAssessmentProfileAnalyticsFilter)[vs[1].(int)]
	}).(GetUserAssessmentProfileAnalyticsFilterOutput)
}

type GetUserAssessmentProfileAnalyticsProfileAggregation struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The array of profile aggregation data.
	Items []interface{} `pulumi:"items"`
}

// GetUserAssessmentProfileAnalyticsProfileAggregationInput is an input type that accepts GetUserAssessmentProfileAnalyticsProfileAggregationArgs and GetUserAssessmentProfileAnalyticsProfileAggregationOutput values.
// You can construct a concrete instance of `GetUserAssessmentProfileAnalyticsProfileAggregationInput` via:
//
//	GetUserAssessmentProfileAnalyticsProfileAggregationArgs{...}
type GetUserAssessmentProfileAnalyticsProfileAggregationInput interface {
	pulumi.Input

	ToGetUserAssessmentProfileAnalyticsProfileAggregationOutput() GetUserAssessmentProfileAnalyticsProfileAggregationOutput
	ToGetUserAssessmentProfileAnalyticsProfileAggregationOutputWithContext(context.Context) GetUserAssessmentProfileAnalyticsProfileAggregationOutput
}

type GetUserAssessmentProfileAnalyticsProfileAggregationArgs struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The array of profile aggregation data.
	Items pulumi.ArrayInput `pulumi:"items"`
}

func (GetUserAssessmentProfileAnalyticsProfileAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentProfileAnalyticsProfileAggregation)(nil)).Elem()
}

func (i GetUserAssessmentProfileAnalyticsProfileAggregationArgs) ToGetUserAssessmentProfileAnalyticsProfileAggregationOutput() GetUserAssessmentProfileAnalyticsProfileAggregationOutput {
	return i.ToGetUserAssessmentProfileAnalyticsProfileAggregationOutputWithContext(context.Background())
}

func (i GetUserAssessmentProfileAnalyticsProfileAggregationArgs) ToGetUserAssessmentProfileAnalyticsProfileAggregationOutputWithContext(ctx context.Context) GetUserAssessmentProfileAnalyticsProfileAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentProfileAnalyticsProfileAggregationOutput)
}

// GetUserAssessmentProfileAnalyticsProfileAggregationArrayInput is an input type that accepts GetUserAssessmentProfileAnalyticsProfileAggregationArray and GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentProfileAnalyticsProfileAggregationArrayInput` via:
//
//	GetUserAssessmentProfileAnalyticsProfileAggregationArray{ GetUserAssessmentProfileAnalyticsProfileAggregationArgs{...} }
type GetUserAssessmentProfileAnalyticsProfileAggregationArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput() GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput
	ToGetUserAssessmentProfileAnalyticsProfileAggregationArrayOutputWithContext(context.Context) GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput
}

type GetUserAssessmentProfileAnalyticsProfileAggregationArray []GetUserAssessmentProfileAnalyticsProfileAggregationInput

func (GetUserAssessmentProfileAnalyticsProfileAggregationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentProfileAnalyticsProfileAggregation)(nil)).Elem()
}

func (i GetUserAssessmentProfileAnalyticsProfileAggregationArray) ToGetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput() GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput {
	return i.ToGetUserAssessmentProfileAnalyticsProfileAggregationArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentProfileAnalyticsProfileAggregationArray) ToGetUserAssessmentProfileAnalyticsProfileAggregationArrayOutputWithContext(ctx context.Context) GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput)
}

type GetUserAssessmentProfileAnalyticsProfileAggregationOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentProfileAnalyticsProfileAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentProfileAnalyticsProfileAggregation)(nil)).Elem()
}

func (o GetUserAssessmentProfileAnalyticsProfileAggregationOutput) ToGetUserAssessmentProfileAnalyticsProfileAggregationOutput() GetUserAssessmentProfileAnalyticsProfileAggregationOutput {
	return o
}

func (o GetUserAssessmentProfileAnalyticsProfileAggregationOutput) ToGetUserAssessmentProfileAnalyticsProfileAggregationOutputWithContext(ctx context.Context) GetUserAssessmentProfileAnalyticsProfileAggregationOutput {
	return o
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
func (o GetUserAssessmentProfileAnalyticsProfileAggregationOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserAssessmentProfileAnalyticsProfileAggregation) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o GetUserAssessmentProfileAnalyticsProfileAggregationOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserAssessmentProfileAnalyticsProfileAggregation) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The array of profile aggregation data.
func (o GetUserAssessmentProfileAnalyticsProfileAggregationOutput) Items() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentProfileAnalyticsProfileAggregation) []interface{} { return v.Items }).(pulumi.ArrayOutput)
}

type GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentProfileAnalyticsProfileAggregation)(nil)).Elem()
}

func (o GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput) ToGetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput() GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput {
	return o
}

func (o GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput) ToGetUserAssessmentProfileAnalyticsProfileAggregationArrayOutputWithContext(ctx context.Context) GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput {
	return o
}

func (o GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentProfileAnalyticsProfileAggregationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentProfileAnalyticsProfileAggregation {
		return vs[0].([]GetUserAssessmentProfileAnalyticsProfileAggregation)[vs[1].(int)]
	}).(GetUserAssessmentProfileAnalyticsProfileAggregationOutput)
}

type GetUserAssessmentProfilesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetUserAssessmentProfilesFilterInput is an input type that accepts GetUserAssessmentProfilesFilterArgs and GetUserAssessmentProfilesFilterOutput values.
// You can construct a concrete instance of `GetUserAssessmentProfilesFilterInput` via:
//
//	GetUserAssessmentProfilesFilterArgs{...}
type GetUserAssessmentProfilesFilterInput interface {
	pulumi.Input

	ToGetUserAssessmentProfilesFilterOutput() GetUserAssessmentProfilesFilterOutput
	ToGetUserAssessmentProfilesFilterOutputWithContext(context.Context) GetUserAssessmentProfilesFilterOutput
}

type GetUserAssessmentProfilesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUserAssessmentProfilesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentProfilesFilter)(nil)).Elem()
}

func (i GetUserAssessmentProfilesFilterArgs) ToGetUserAssessmentProfilesFilterOutput() GetUserAssessmentProfilesFilterOutput {
	return i.ToGetUserAssessmentProfilesFilterOutputWithContext(context.Background())
}

func (i GetUserAssessmentProfilesFilterArgs) ToGetUserAssessmentProfilesFilterOutputWithContext(ctx context.Context) GetUserAssessmentProfilesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentProfilesFilterOutput)
}

// GetUserAssessmentProfilesFilterArrayInput is an input type that accepts GetUserAssessmentProfilesFilterArray and GetUserAssessmentProfilesFilterArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentProfilesFilterArrayInput` via:
//
//	GetUserAssessmentProfilesFilterArray{ GetUserAssessmentProfilesFilterArgs{...} }
type GetUserAssessmentProfilesFilterArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentProfilesFilterArrayOutput() GetUserAssessmentProfilesFilterArrayOutput
	ToGetUserAssessmentProfilesFilterArrayOutputWithContext(context.Context) GetUserAssessmentProfilesFilterArrayOutput
}

type GetUserAssessmentProfilesFilterArray []GetUserAssessmentProfilesFilterInput

func (GetUserAssessmentProfilesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentProfilesFilter)(nil)).Elem()
}

func (i GetUserAssessmentProfilesFilterArray) ToGetUserAssessmentProfilesFilterArrayOutput() GetUserAssessmentProfilesFilterArrayOutput {
	return i.ToGetUserAssessmentProfilesFilterArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentProfilesFilterArray) ToGetUserAssessmentProfilesFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentProfilesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentProfilesFilterArrayOutput)
}

type GetUserAssessmentProfilesFilterOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentProfilesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentProfilesFilter)(nil)).Elem()
}

func (o GetUserAssessmentProfilesFilterOutput) ToGetUserAssessmentProfilesFilterOutput() GetUserAssessmentProfilesFilterOutput {
	return o
}

func (o GetUserAssessmentProfilesFilterOutput) ToGetUserAssessmentProfilesFilterOutputWithContext(ctx context.Context) GetUserAssessmentProfilesFilterOutput {
	return o
}

func (o GetUserAssessmentProfilesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserAssessmentProfilesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetUserAssessmentProfilesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUserAssessmentProfilesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentProfilesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentProfilesFilter)(nil)).Elem()
}

func (o GetUserAssessmentProfilesFilterArrayOutput) ToGetUserAssessmentProfilesFilterArrayOutput() GetUserAssessmentProfilesFilterArrayOutput {
	return o
}

func (o GetUserAssessmentProfilesFilterArrayOutput) ToGetUserAssessmentProfilesFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentProfilesFilterArrayOutput {
	return o
}

func (o GetUserAssessmentProfilesFilterArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentProfilesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentProfilesFilter {
		return vs[0].([]GetUserAssessmentProfilesFilter)[vs[1].(int)]
	}).(GetUserAssessmentProfilesFilterOutput)
}

type GetUserAssessmentProfilesProfile struct {
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Specify the total resource cost for a session, expressed in service units. Oracle Database calculates the total service units as a weighted sum of CPU_PER_SESSION, CONNECT_TIME, LOGICAL_READS_PER_SESSION, and PRIVATE_SGA.
	CompositeLimit string `pulumi:"compositeLimit"`
	// Specify the total elapsed time limit for a session, expressed in minutes.
	ConnectTime string `pulumi:"connectTime"`
	// Specify the CPU time limit for a call (a parse, execute, or fetch), expressed in hundredths of seconds.
	CpuPerCall string `pulumi:"cpuPerCall"`
	// Specify the CPU time limit for a session, expressed in hundredth of seconds.
	CpuPerSession string `pulumi:"cpuPerSession"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Maximum times the user is allowed in fail login before the user account is locked.
	FailedLoginAttempts string `pulumi:"failedLoginAttempts"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Specify the permitted periods of continuous inactive time during a  session, expressed in minutes.
	IdleTime string `pulumi:"idleTime"`
	// The permitted periods of continuous inactive time during a session, expressed in minutes. Long-running queries and other operations are not subjected to this limit.
	InactiveAccountTime string `pulumi:"inactiveAccountTime"`
	// An optional filter to return the user created profiles.
	IsUserCreated bool `pulumi:"isUserCreated"`
	// Specify the permitted the number of data blocks read for a call to process a SQL statement (a parse, execute, or fetch).
	LogicalReadsPerCall string `pulumi:"logicalReadsPerCall"`
	// Specify the permitted number of data blocks read in a session, including blocks read from memory and disk.
	LogicalReadsPerSession string `pulumi:"logicalReadsPerSession"`
	// Number of grace days for user to change password.
	PasswordGraceTime string `pulumi:"passwordGraceTime"`
	// Number of days the password is valid before expiry.
	PasswordLifeTime string `pulumi:"passwordLifeTime"`
	// Number of days the user account remains locked after failed login.
	PasswordLockTime string `pulumi:"passwordLockTime"`
	// Number of day after the user can use the already used password.
	PasswordReuseMax string `pulumi:"passwordReuseMax"`
	// Number of days before which a password cannot be reused.
	PasswordReuseTime string `pulumi:"passwordReuseTime"`
	// Number of days the password rollover is allowed. Minimum value can be 1/24 day (1 hour) to 60 days.
	PasswordRolloverTime string `pulumi:"passwordRolloverTime"`
	// An optional filter to filter the profiles based on password verification function.
	PasswordVerificationFunction string `pulumi:"passwordVerificationFunction"`
	// Details about the PL/SQL that can be used for password verification.
	PasswordVerificationFunctionDetails string `pulumi:"passwordVerificationFunctionDetails"`
	// Specify the amount of private space a session can allocate in the shared pool of the system global area (SGA), expressed in bytes.
	PrivateSga string `pulumi:"privateSga"`
	// A filter to return only items that match the specified profile name.
	ProfileName string `pulumi:"profileName"`
	// Specify the number of concurrent sessions to which you want to limit the user.
	SessionsPerUser string `pulumi:"sessionsPerUser"`
	// A filter to return only items related to a specific target OCID.
	TargetId string `pulumi:"targetId"`
	// The OCID of the user assessment.
	UserAssessmentId string `pulumi:"userAssessmentId"`
	// The number of users that have a given profile.
	UserCount int `pulumi:"userCount"`
}

// GetUserAssessmentProfilesProfileInput is an input type that accepts GetUserAssessmentProfilesProfileArgs and GetUserAssessmentProfilesProfileOutput values.
// You can construct a concrete instance of `GetUserAssessmentProfilesProfileInput` via:
//
//	GetUserAssessmentProfilesProfileArgs{...}
type GetUserAssessmentProfilesProfileInput interface {
	pulumi.Input

	ToGetUserAssessmentProfilesProfileOutput() GetUserAssessmentProfilesProfileOutput
	ToGetUserAssessmentProfilesProfileOutputWithContext(context.Context) GetUserAssessmentProfilesProfileOutput
}

type GetUserAssessmentProfilesProfileArgs struct {
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Specify the total resource cost for a session, expressed in service units. Oracle Database calculates the total service units as a weighted sum of CPU_PER_SESSION, CONNECT_TIME, LOGICAL_READS_PER_SESSION, and PRIVATE_SGA.
	CompositeLimit pulumi.StringInput `pulumi:"compositeLimit"`
	// Specify the total elapsed time limit for a session, expressed in minutes.
	ConnectTime pulumi.StringInput `pulumi:"connectTime"`
	// Specify the CPU time limit for a call (a parse, execute, or fetch), expressed in hundredths of seconds.
	CpuPerCall pulumi.StringInput `pulumi:"cpuPerCall"`
	// Specify the CPU time limit for a session, expressed in hundredth of seconds.
	CpuPerSession pulumi.StringInput `pulumi:"cpuPerSession"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Maximum times the user is allowed in fail login before the user account is locked.
	FailedLoginAttempts pulumi.StringInput `pulumi:"failedLoginAttempts"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Specify the permitted periods of continuous inactive time during a  session, expressed in minutes.
	IdleTime pulumi.StringInput `pulumi:"idleTime"`
	// The permitted periods of continuous inactive time during a session, expressed in minutes. Long-running queries and other operations are not subjected to this limit.
	InactiveAccountTime pulumi.StringInput `pulumi:"inactiveAccountTime"`
	// An optional filter to return the user created profiles.
	IsUserCreated pulumi.BoolInput `pulumi:"isUserCreated"`
	// Specify the permitted the number of data blocks read for a call to process a SQL statement (a parse, execute, or fetch).
	LogicalReadsPerCall pulumi.StringInput `pulumi:"logicalReadsPerCall"`
	// Specify the permitted number of data blocks read in a session, including blocks read from memory and disk.
	LogicalReadsPerSession pulumi.StringInput `pulumi:"logicalReadsPerSession"`
	// Number of grace days for user to change password.
	PasswordGraceTime pulumi.StringInput `pulumi:"passwordGraceTime"`
	// Number of days the password is valid before expiry.
	PasswordLifeTime pulumi.StringInput `pulumi:"passwordLifeTime"`
	// Number of days the user account remains locked after failed login.
	PasswordLockTime pulumi.StringInput `pulumi:"passwordLockTime"`
	// Number of day after the user can use the already used password.
	PasswordReuseMax pulumi.StringInput `pulumi:"passwordReuseMax"`
	// Number of days before which a password cannot be reused.
	PasswordReuseTime pulumi.StringInput `pulumi:"passwordReuseTime"`
	// Number of days the password rollover is allowed. Minimum value can be 1/24 day (1 hour) to 60 days.
	PasswordRolloverTime pulumi.StringInput `pulumi:"passwordRolloverTime"`
	// An optional filter to filter the profiles based on password verification function.
	PasswordVerificationFunction pulumi.StringInput `pulumi:"passwordVerificationFunction"`
	// Details about the PL/SQL that can be used for password verification.
	PasswordVerificationFunctionDetails pulumi.StringInput `pulumi:"passwordVerificationFunctionDetails"`
	// Specify the amount of private space a session can allocate in the shared pool of the system global area (SGA), expressed in bytes.
	PrivateSga pulumi.StringInput `pulumi:"privateSga"`
	// A filter to return only items that match the specified profile name.
	ProfileName pulumi.StringInput `pulumi:"profileName"`
	// Specify the number of concurrent sessions to which you want to limit the user.
	SessionsPerUser pulumi.StringInput `pulumi:"sessionsPerUser"`
	// A filter to return only items related to a specific target OCID.
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// The OCID of the user assessment.
	UserAssessmentId pulumi.StringInput `pulumi:"userAssessmentId"`
	// The number of users that have a given profile.
	UserCount pulumi.IntInput `pulumi:"userCount"`
}

func (GetUserAssessmentProfilesProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentProfilesProfile)(nil)).Elem()
}

func (i GetUserAssessmentProfilesProfileArgs) ToGetUserAssessmentProfilesProfileOutput() GetUserAssessmentProfilesProfileOutput {
	return i.ToGetUserAssessmentProfilesProfileOutputWithContext(context.Background())
}

func (i GetUserAssessmentProfilesProfileArgs) ToGetUserAssessmentProfilesProfileOutputWithContext(ctx context.Context) GetUserAssessmentProfilesProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentProfilesProfileOutput)
}

// GetUserAssessmentProfilesProfileArrayInput is an input type that accepts GetUserAssessmentProfilesProfileArray and GetUserAssessmentProfilesProfileArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentProfilesProfileArrayInput` via:
//
//	GetUserAssessmentProfilesProfileArray{ GetUserAssessmentProfilesProfileArgs{...} }
type GetUserAssessmentProfilesProfileArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentProfilesProfileArrayOutput() GetUserAssessmentProfilesProfileArrayOutput
	ToGetUserAssessmentProfilesProfileArrayOutputWithContext(context.Context) GetUserAssessmentProfilesProfileArrayOutput
}

type GetUserAssessmentProfilesProfileArray []GetUserAssessmentProfilesProfileInput

func (GetUserAssessmentProfilesProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentProfilesProfile)(nil)).Elem()
}

func (i GetUserAssessmentProfilesProfileArray) ToGetUserAssessmentProfilesProfileArrayOutput() GetUserAssessmentProfilesProfileArrayOutput {
	return i.ToGetUserAssessmentProfilesProfileArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentProfilesProfileArray) ToGetUserAssessmentProfilesProfileArrayOutputWithContext(ctx context.Context) GetUserAssessmentProfilesProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentProfilesProfileArrayOutput)
}

type GetUserAssessmentProfilesProfileOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentProfilesProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentProfilesProfile)(nil)).Elem()
}

func (o GetUserAssessmentProfilesProfileOutput) ToGetUserAssessmentProfilesProfileOutput() GetUserAssessmentProfilesProfileOutput {
	return o
}

func (o GetUserAssessmentProfilesProfileOutput) ToGetUserAssessmentProfilesProfileOutputWithContext(ctx context.Context) GetUserAssessmentProfilesProfileOutput {
	return o
}

// A filter to return only resources that match the specified compartment OCID.
func (o GetUserAssessmentProfilesProfileOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Specify the total resource cost for a session, expressed in service units. Oracle Database calculates the total service units as a weighted sum of CPU_PER_SESSION, CONNECT_TIME, LOGICAL_READS_PER_SESSION, and PRIVATE_SGA.
func (o GetUserAssessmentProfilesProfileOutput) CompositeLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.CompositeLimit }).(pulumi.StringOutput)
}

// Specify the total elapsed time limit for a session, expressed in minutes.
func (o GetUserAssessmentProfilesProfileOutput) ConnectTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.ConnectTime }).(pulumi.StringOutput)
}

// Specify the CPU time limit for a call (a parse, execute, or fetch), expressed in hundredths of seconds.
func (o GetUserAssessmentProfilesProfileOutput) CpuPerCall() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.CpuPerCall }).(pulumi.StringOutput)
}

// Specify the CPU time limit for a session, expressed in hundredth of seconds.
func (o GetUserAssessmentProfilesProfileOutput) CpuPerSession() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.CpuPerSession }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
func (o GetUserAssessmentProfilesProfileOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Maximum times the user is allowed in fail login before the user account is locked.
func (o GetUserAssessmentProfilesProfileOutput) FailedLoginAttempts() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.FailedLoginAttempts }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o GetUserAssessmentProfilesProfileOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Specify the permitted periods of continuous inactive time during a  session, expressed in minutes.
func (o GetUserAssessmentProfilesProfileOutput) IdleTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.IdleTime }).(pulumi.StringOutput)
}

// The permitted periods of continuous inactive time during a session, expressed in minutes. Long-running queries and other operations are not subjected to this limit.
func (o GetUserAssessmentProfilesProfileOutput) InactiveAccountTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.InactiveAccountTime }).(pulumi.StringOutput)
}

// An optional filter to return the user created profiles.
func (o GetUserAssessmentProfilesProfileOutput) IsUserCreated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) bool { return v.IsUserCreated }).(pulumi.BoolOutput)
}

// Specify the permitted the number of data blocks read for a call to process a SQL statement (a parse, execute, or fetch).
func (o GetUserAssessmentProfilesProfileOutput) LogicalReadsPerCall() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.LogicalReadsPerCall }).(pulumi.StringOutput)
}

// Specify the permitted number of data blocks read in a session, including blocks read from memory and disk.
func (o GetUserAssessmentProfilesProfileOutput) LogicalReadsPerSession() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.LogicalReadsPerSession }).(pulumi.StringOutput)
}

// Number of grace days for user to change password.
func (o GetUserAssessmentProfilesProfileOutput) PasswordGraceTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.PasswordGraceTime }).(pulumi.StringOutput)
}

// Number of days the password is valid before expiry.
func (o GetUserAssessmentProfilesProfileOutput) PasswordLifeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.PasswordLifeTime }).(pulumi.StringOutput)
}

// Number of days the user account remains locked after failed login.
func (o GetUserAssessmentProfilesProfileOutput) PasswordLockTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.PasswordLockTime }).(pulumi.StringOutput)
}

// Number of day after the user can use the already used password.
func (o GetUserAssessmentProfilesProfileOutput) PasswordReuseMax() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.PasswordReuseMax }).(pulumi.StringOutput)
}

// Number of days before which a password cannot be reused.
func (o GetUserAssessmentProfilesProfileOutput) PasswordReuseTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.PasswordReuseTime }).(pulumi.StringOutput)
}

// Number of days the password rollover is allowed. Minimum value can be 1/24 day (1 hour) to 60 days.
func (o GetUserAssessmentProfilesProfileOutput) PasswordRolloverTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.PasswordRolloverTime }).(pulumi.StringOutput)
}

// An optional filter to filter the profiles based on password verification function.
func (o GetUserAssessmentProfilesProfileOutput) PasswordVerificationFunction() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.PasswordVerificationFunction }).(pulumi.StringOutput)
}

// Details about the PL/SQL that can be used for password verification.
func (o GetUserAssessmentProfilesProfileOutput) PasswordVerificationFunctionDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.PasswordVerificationFunctionDetails }).(pulumi.StringOutput)
}

// Specify the amount of private space a session can allocate in the shared pool of the system global area (SGA), expressed in bytes.
func (o GetUserAssessmentProfilesProfileOutput) PrivateSga() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.PrivateSga }).(pulumi.StringOutput)
}

// A filter to return only items that match the specified profile name.
func (o GetUserAssessmentProfilesProfileOutput) ProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.ProfileName }).(pulumi.StringOutput)
}

// Specify the number of concurrent sessions to which you want to limit the user.
func (o GetUserAssessmentProfilesProfileOutput) SessionsPerUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.SessionsPerUser }).(pulumi.StringOutput)
}

// A filter to return only items related to a specific target OCID.
func (o GetUserAssessmentProfilesProfileOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.TargetId }).(pulumi.StringOutput)
}

// The OCID of the user assessment.
func (o GetUserAssessmentProfilesProfileOutput) UserAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) string { return v.UserAssessmentId }).(pulumi.StringOutput)
}

// The number of users that have a given profile.
func (o GetUserAssessmentProfilesProfileOutput) UserCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserAssessmentProfilesProfile) int { return v.UserCount }).(pulumi.IntOutput)
}

type GetUserAssessmentProfilesProfileArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentProfilesProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentProfilesProfile)(nil)).Elem()
}

func (o GetUserAssessmentProfilesProfileArrayOutput) ToGetUserAssessmentProfilesProfileArrayOutput() GetUserAssessmentProfilesProfileArrayOutput {
	return o
}

func (o GetUserAssessmentProfilesProfileArrayOutput) ToGetUserAssessmentProfilesProfileArrayOutputWithContext(ctx context.Context) GetUserAssessmentProfilesProfileArrayOutput {
	return o
}

func (o GetUserAssessmentProfilesProfileArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentProfilesProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentProfilesProfile {
		return vs[0].([]GetUserAssessmentProfilesProfile)[vs[1].(int)]
	}).(GetUserAssessmentProfilesProfileOutput)
}

type GetUserAssessmentUserAccessAnalyticsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetUserAssessmentUserAccessAnalyticsFilterInput is an input type that accepts GetUserAssessmentUserAccessAnalyticsFilterArgs and GetUserAssessmentUserAccessAnalyticsFilterOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAccessAnalyticsFilterInput` via:
//
//	GetUserAssessmentUserAccessAnalyticsFilterArgs{...}
type GetUserAssessmentUserAccessAnalyticsFilterInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAccessAnalyticsFilterOutput() GetUserAssessmentUserAccessAnalyticsFilterOutput
	ToGetUserAssessmentUserAccessAnalyticsFilterOutputWithContext(context.Context) GetUserAssessmentUserAccessAnalyticsFilterOutput
}

type GetUserAssessmentUserAccessAnalyticsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUserAssessmentUserAccessAnalyticsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsFilter)(nil)).Elem()
}

func (i GetUserAssessmentUserAccessAnalyticsFilterArgs) ToGetUserAssessmentUserAccessAnalyticsFilterOutput() GetUserAssessmentUserAccessAnalyticsFilterOutput {
	return i.ToGetUserAssessmentUserAccessAnalyticsFilterOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAccessAnalyticsFilterArgs) ToGetUserAssessmentUserAccessAnalyticsFilterOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAccessAnalyticsFilterOutput)
}

// GetUserAssessmentUserAccessAnalyticsFilterArrayInput is an input type that accepts GetUserAssessmentUserAccessAnalyticsFilterArray and GetUserAssessmentUserAccessAnalyticsFilterArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAccessAnalyticsFilterArrayInput` via:
//
//	GetUserAssessmentUserAccessAnalyticsFilterArray{ GetUserAssessmentUserAccessAnalyticsFilterArgs{...} }
type GetUserAssessmentUserAccessAnalyticsFilterArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAccessAnalyticsFilterArrayOutput() GetUserAssessmentUserAccessAnalyticsFilterArrayOutput
	ToGetUserAssessmentUserAccessAnalyticsFilterArrayOutputWithContext(context.Context) GetUserAssessmentUserAccessAnalyticsFilterArrayOutput
}

type GetUserAssessmentUserAccessAnalyticsFilterArray []GetUserAssessmentUserAccessAnalyticsFilterInput

func (GetUserAssessmentUserAccessAnalyticsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAccessAnalyticsFilter)(nil)).Elem()
}

func (i GetUserAssessmentUserAccessAnalyticsFilterArray) ToGetUserAssessmentUserAccessAnalyticsFilterArrayOutput() GetUserAssessmentUserAccessAnalyticsFilterArrayOutput {
	return i.ToGetUserAssessmentUserAccessAnalyticsFilterArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAccessAnalyticsFilterArray) ToGetUserAssessmentUserAccessAnalyticsFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAccessAnalyticsFilterArrayOutput)
}

type GetUserAssessmentUserAccessAnalyticsFilterOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAccessAnalyticsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsFilter)(nil)).Elem()
}

func (o GetUserAssessmentUserAccessAnalyticsFilterOutput) ToGetUserAssessmentUserAccessAnalyticsFilterOutput() GetUserAssessmentUserAccessAnalyticsFilterOutput {
	return o
}

func (o GetUserAssessmentUserAccessAnalyticsFilterOutput) ToGetUserAssessmentUserAccessAnalyticsFilterOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsFilterOutput {
	return o
}

func (o GetUserAssessmentUserAccessAnalyticsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAccessAnalyticsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserAssessmentUserAccessAnalyticsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAccessAnalyticsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetUserAssessmentUserAccessAnalyticsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAccessAnalyticsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUserAssessmentUserAccessAnalyticsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAccessAnalyticsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAccessAnalyticsFilter)(nil)).Elem()
}

func (o GetUserAssessmentUserAccessAnalyticsFilterArrayOutput) ToGetUserAssessmentUserAccessAnalyticsFilterArrayOutput() GetUserAssessmentUserAccessAnalyticsFilterArrayOutput {
	return o
}

func (o GetUserAssessmentUserAccessAnalyticsFilterArrayOutput) ToGetUserAssessmentUserAccessAnalyticsFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsFilterArrayOutput {
	return o
}

func (o GetUserAssessmentUserAccessAnalyticsFilterArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentUserAccessAnalyticsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentUserAccessAnalyticsFilter {
		return vs[0].([]GetUserAssessmentUserAccessAnalyticsFilter)[vs[1].(int)]
	}).(GetUserAssessmentUserAccessAnalyticsFilterOutput)
}

type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection struct {
	// An array of user access analytics summary objects.
	Items []GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItem `pulumi:"items"`
}

// GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionInput is an input type that accepts GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArgs and GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionInput` via:
//
//	GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArgs{...}
type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput
	ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutputWithContext(context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput
}

type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArgs struct {
	// An array of user access analytics summary objects.
	Items GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayInput `pulumi:"items"`
}

func (GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection)(nil)).Elem()
}

func (i GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArgs) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput {
	return i.ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArgs) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput)
}

// GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayInput is an input type that accepts GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArray and GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayInput` via:
//
//	GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArray{ GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArgs{...} }
type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput
	ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutputWithContext(context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput
}

type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArray []GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionInput

func (GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection)(nil)).Elem()
}

func (i GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArray) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput {
	return i.ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArray) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput)
}

type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection)(nil)).Elem()
}

func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput {
	return o
}

func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput {
	return o
}

// An array of user access analytics summary objects.
func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput) Items() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection) []GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItem {
		return v.Items
	}).(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput)
}

type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection)(nil)).Elem()
}

func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput {
	return o
}

func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput {
	return o
}

func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection {
		return vs[0].([]GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollection)[vs[1].(int)]
	}).(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput)
}

type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItem struct {
	// The total count of schemas a user can access
	UserAssessmentUserAccessAnalyticCount string `pulumi:"userAssessmentUserAccessAnalyticCount"`
	// Name of the user.
	UserName string `pulumi:"userName"`
}

// GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemInput is an input type that accepts GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArgs and GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemInput` via:
//
//	GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArgs{...}
type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput
	ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutputWithContext(context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput
}

type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArgs struct {
	// The total count of schemas a user can access
	UserAssessmentUserAccessAnalyticCount pulumi.StringInput `pulumi:"userAssessmentUserAccessAnalyticCount"`
	// Name of the user.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItem)(nil)).Elem()
}

func (i GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArgs) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput {
	return i.ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArgs) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput)
}

// GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayInput is an input type that accepts GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArray and GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayInput` via:
//
//	GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArray{ GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArgs{...} }
type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput
	ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutputWithContext(context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput
}

type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArray []GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemInput

func (GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItem)(nil)).Elem()
}

func (i GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArray) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput {
	return i.ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArray) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput)
}

type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItem)(nil)).Elem()
}

func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput {
	return o
}

func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput {
	return o
}

// The total count of schemas a user can access
func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput) UserAssessmentUserAccessAnalyticCount() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItem) string {
		return v.UserAssessmentUserAccessAnalyticCount
	}).(pulumi.StringOutput)
}

// Name of the user.
func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItem) string {
		return v.UserName
	}).(pulumi.StringOutput)
}

type GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItem)(nil)).Elem()
}

func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput() GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput {
	return o
}

func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput) ToGetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput {
	return o
}

func (o GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItem {
		return vs[0].([]GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItem)[vs[1].(int)]
	}).(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput)
}

type GetUserAssessmentUserAnalyticsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetUserAssessmentUserAnalyticsFilterInput is an input type that accepts GetUserAssessmentUserAnalyticsFilterArgs and GetUserAssessmentUserAnalyticsFilterOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAnalyticsFilterInput` via:
//
//	GetUserAssessmentUserAnalyticsFilterArgs{...}
type GetUserAssessmentUserAnalyticsFilterInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAnalyticsFilterOutput() GetUserAssessmentUserAnalyticsFilterOutput
	ToGetUserAssessmentUserAnalyticsFilterOutputWithContext(context.Context) GetUserAssessmentUserAnalyticsFilterOutput
}

type GetUserAssessmentUserAnalyticsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUserAssessmentUserAnalyticsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAnalyticsFilter)(nil)).Elem()
}

func (i GetUserAssessmentUserAnalyticsFilterArgs) ToGetUserAssessmentUserAnalyticsFilterOutput() GetUserAssessmentUserAnalyticsFilterOutput {
	return i.ToGetUserAssessmentUserAnalyticsFilterOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAnalyticsFilterArgs) ToGetUserAssessmentUserAnalyticsFilterOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAnalyticsFilterOutput)
}

// GetUserAssessmentUserAnalyticsFilterArrayInput is an input type that accepts GetUserAssessmentUserAnalyticsFilterArray and GetUserAssessmentUserAnalyticsFilterArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAnalyticsFilterArrayInput` via:
//
//	GetUserAssessmentUserAnalyticsFilterArray{ GetUserAssessmentUserAnalyticsFilterArgs{...} }
type GetUserAssessmentUserAnalyticsFilterArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAnalyticsFilterArrayOutput() GetUserAssessmentUserAnalyticsFilterArrayOutput
	ToGetUserAssessmentUserAnalyticsFilterArrayOutputWithContext(context.Context) GetUserAssessmentUserAnalyticsFilterArrayOutput
}

type GetUserAssessmentUserAnalyticsFilterArray []GetUserAssessmentUserAnalyticsFilterInput

func (GetUserAssessmentUserAnalyticsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAnalyticsFilter)(nil)).Elem()
}

func (i GetUserAssessmentUserAnalyticsFilterArray) ToGetUserAssessmentUserAnalyticsFilterArrayOutput() GetUserAssessmentUserAnalyticsFilterArrayOutput {
	return i.ToGetUserAssessmentUserAnalyticsFilterArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAnalyticsFilterArray) ToGetUserAssessmentUserAnalyticsFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAnalyticsFilterArrayOutput)
}

type GetUserAssessmentUserAnalyticsFilterOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAnalyticsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAnalyticsFilter)(nil)).Elem()
}

func (o GetUserAssessmentUserAnalyticsFilterOutput) ToGetUserAssessmentUserAnalyticsFilterOutput() GetUserAssessmentUserAnalyticsFilterOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsFilterOutput) ToGetUserAssessmentUserAnalyticsFilterOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsFilterOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserAssessmentUserAnalyticsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetUserAssessmentUserAnalyticsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUserAssessmentUserAnalyticsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAnalyticsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAnalyticsFilter)(nil)).Elem()
}

func (o GetUserAssessmentUserAnalyticsFilterArrayOutput) ToGetUserAssessmentUserAnalyticsFilterArrayOutput() GetUserAssessmentUserAnalyticsFilterArrayOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsFilterArrayOutput) ToGetUserAssessmentUserAnalyticsFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsFilterArrayOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsFilterArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentUserAnalyticsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentUserAnalyticsFilter {
		return vs[0].([]GetUserAssessmentUserAnalyticsFilter)[vs[1].(int)]
	}).(GetUserAssessmentUserAnalyticsFilterOutput)
}

type GetUserAssessmentUserAnalyticsUserAggregation struct {
	// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
	Items []GetUserAssessmentUserAnalyticsUserAggregationItem `pulumi:"items"`
}

// GetUserAssessmentUserAnalyticsUserAggregationInput is an input type that accepts GetUserAssessmentUserAnalyticsUserAggregationArgs and GetUserAssessmentUserAnalyticsUserAggregationOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAnalyticsUserAggregationInput` via:
//
//	GetUserAssessmentUserAnalyticsUserAggregationArgs{...}
type GetUserAssessmentUserAnalyticsUserAggregationInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAnalyticsUserAggregationOutput() GetUserAssessmentUserAnalyticsUserAggregationOutput
	ToGetUserAssessmentUserAnalyticsUserAggregationOutputWithContext(context.Context) GetUserAssessmentUserAnalyticsUserAggregationOutput
}

type GetUserAssessmentUserAnalyticsUserAggregationArgs struct {
	// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
	Items GetUserAssessmentUserAnalyticsUserAggregationItemArrayInput `pulumi:"items"`
}

func (GetUserAssessmentUserAnalyticsUserAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAnalyticsUserAggregation)(nil)).Elem()
}

func (i GetUserAssessmentUserAnalyticsUserAggregationArgs) ToGetUserAssessmentUserAnalyticsUserAggregationOutput() GetUserAssessmentUserAnalyticsUserAggregationOutput {
	return i.ToGetUserAssessmentUserAnalyticsUserAggregationOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAnalyticsUserAggregationArgs) ToGetUserAssessmentUserAnalyticsUserAggregationOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsUserAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAnalyticsUserAggregationOutput)
}

// GetUserAssessmentUserAnalyticsUserAggregationArrayInput is an input type that accepts GetUserAssessmentUserAnalyticsUserAggregationArray and GetUserAssessmentUserAnalyticsUserAggregationArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAnalyticsUserAggregationArrayInput` via:
//
//	GetUserAssessmentUserAnalyticsUserAggregationArray{ GetUserAssessmentUserAnalyticsUserAggregationArgs{...} }
type GetUserAssessmentUserAnalyticsUserAggregationArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAnalyticsUserAggregationArrayOutput() GetUserAssessmentUserAnalyticsUserAggregationArrayOutput
	ToGetUserAssessmentUserAnalyticsUserAggregationArrayOutputWithContext(context.Context) GetUserAssessmentUserAnalyticsUserAggregationArrayOutput
}

type GetUserAssessmentUserAnalyticsUserAggregationArray []GetUserAssessmentUserAnalyticsUserAggregationInput

func (GetUserAssessmentUserAnalyticsUserAggregationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAnalyticsUserAggregation)(nil)).Elem()
}

func (i GetUserAssessmentUserAnalyticsUserAggregationArray) ToGetUserAssessmentUserAnalyticsUserAggregationArrayOutput() GetUserAssessmentUserAnalyticsUserAggregationArrayOutput {
	return i.ToGetUserAssessmentUserAnalyticsUserAggregationArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAnalyticsUserAggregationArray) ToGetUserAssessmentUserAnalyticsUserAggregationArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsUserAggregationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAnalyticsUserAggregationArrayOutput)
}

type GetUserAssessmentUserAnalyticsUserAggregationOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAnalyticsUserAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAnalyticsUserAggregation)(nil)).Elem()
}

func (o GetUserAssessmentUserAnalyticsUserAggregationOutput) ToGetUserAssessmentUserAnalyticsUserAggregationOutput() GetUserAssessmentUserAnalyticsUserAggregationOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsUserAggregationOutput) ToGetUserAssessmentUserAnalyticsUserAggregationOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsUserAggregationOutput {
	return o
}

// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
func (o GetUserAssessmentUserAnalyticsUserAggregationOutput) Items() GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentUserAnalyticsUserAggregation) []GetUserAssessmentUserAnalyticsUserAggregationItem {
		return v.Items
	}).(GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput)
}

type GetUserAssessmentUserAnalyticsUserAggregationArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAnalyticsUserAggregationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAnalyticsUserAggregation)(nil)).Elem()
}

func (o GetUserAssessmentUserAnalyticsUserAggregationArrayOutput) ToGetUserAssessmentUserAnalyticsUserAggregationArrayOutput() GetUserAssessmentUserAnalyticsUserAggregationArrayOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsUserAggregationArrayOutput) ToGetUserAssessmentUserAnalyticsUserAggregationArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsUserAggregationArrayOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsUserAggregationArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentUserAnalyticsUserAggregationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentUserAnalyticsUserAggregation {
		return vs[0].([]GetUserAssessmentUserAnalyticsUserAggregation)[vs[1].(int)]
	}).(GetUserAssessmentUserAnalyticsUserAggregationOutput)
}

type GetUserAssessmentUserAnalyticsUserAggregationItem struct {
}

// GetUserAssessmentUserAnalyticsUserAggregationItemInput is an input type that accepts GetUserAssessmentUserAnalyticsUserAggregationItemArgs and GetUserAssessmentUserAnalyticsUserAggregationItemOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAnalyticsUserAggregationItemInput` via:
//
//	GetUserAssessmentUserAnalyticsUserAggregationItemArgs{...}
type GetUserAssessmentUserAnalyticsUserAggregationItemInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAnalyticsUserAggregationItemOutput() GetUserAssessmentUserAnalyticsUserAggregationItemOutput
	ToGetUserAssessmentUserAnalyticsUserAggregationItemOutputWithContext(context.Context) GetUserAssessmentUserAnalyticsUserAggregationItemOutput
}

type GetUserAssessmentUserAnalyticsUserAggregationItemArgs struct {
}

func (GetUserAssessmentUserAnalyticsUserAggregationItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAnalyticsUserAggregationItem)(nil)).Elem()
}

func (i GetUserAssessmentUserAnalyticsUserAggregationItemArgs) ToGetUserAssessmentUserAnalyticsUserAggregationItemOutput() GetUserAssessmentUserAnalyticsUserAggregationItemOutput {
	return i.ToGetUserAssessmentUserAnalyticsUserAggregationItemOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAnalyticsUserAggregationItemArgs) ToGetUserAssessmentUserAnalyticsUserAggregationItemOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsUserAggregationItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAnalyticsUserAggregationItemOutput)
}

// GetUserAssessmentUserAnalyticsUserAggregationItemArrayInput is an input type that accepts GetUserAssessmentUserAnalyticsUserAggregationItemArray and GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentUserAnalyticsUserAggregationItemArrayInput` via:
//
//	GetUserAssessmentUserAnalyticsUserAggregationItemArray{ GetUserAssessmentUserAnalyticsUserAggregationItemArgs{...} }
type GetUserAssessmentUserAnalyticsUserAggregationItemArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput() GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput
	ToGetUserAssessmentUserAnalyticsUserAggregationItemArrayOutputWithContext(context.Context) GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput
}

type GetUserAssessmentUserAnalyticsUserAggregationItemArray []GetUserAssessmentUserAnalyticsUserAggregationItemInput

func (GetUserAssessmentUserAnalyticsUserAggregationItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAnalyticsUserAggregationItem)(nil)).Elem()
}

func (i GetUserAssessmentUserAnalyticsUserAggregationItemArray) ToGetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput() GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput {
	return i.ToGetUserAssessmentUserAnalyticsUserAggregationItemArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentUserAnalyticsUserAggregationItemArray) ToGetUserAssessmentUserAnalyticsUserAggregationItemArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput)
}

type GetUserAssessmentUserAnalyticsUserAggregationItemOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAnalyticsUserAggregationItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUserAnalyticsUserAggregationItem)(nil)).Elem()
}

func (o GetUserAssessmentUserAnalyticsUserAggregationItemOutput) ToGetUserAssessmentUserAnalyticsUserAggregationItemOutput() GetUserAssessmentUserAnalyticsUserAggregationItemOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsUserAggregationItemOutput) ToGetUserAssessmentUserAnalyticsUserAggregationItemOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsUserAggregationItemOutput {
	return o
}

type GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUserAnalyticsUserAggregationItem)(nil)).Elem()
}

func (o GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput) ToGetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput() GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput) ToGetUserAssessmentUserAnalyticsUserAggregationItemArrayOutputWithContext(ctx context.Context) GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput {
	return o
}

func (o GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentUserAnalyticsUserAggregationItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentUserAnalyticsUserAggregationItem {
		return vs[0].([]GetUserAssessmentUserAnalyticsUserAggregationItem)[vs[1].(int)]
	}).(GetUserAssessmentUserAnalyticsUserAggregationItemOutput)
}

type GetUserAssessmentUsersFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetUserAssessmentUsersFilterInput is an input type that accepts GetUserAssessmentUsersFilterArgs and GetUserAssessmentUsersFilterOutput values.
// You can construct a concrete instance of `GetUserAssessmentUsersFilterInput` via:
//
//	GetUserAssessmentUsersFilterArgs{...}
type GetUserAssessmentUsersFilterInput interface {
	pulumi.Input

	ToGetUserAssessmentUsersFilterOutput() GetUserAssessmentUsersFilterOutput
	ToGetUserAssessmentUsersFilterOutputWithContext(context.Context) GetUserAssessmentUsersFilterOutput
}

type GetUserAssessmentUsersFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUserAssessmentUsersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUsersFilter)(nil)).Elem()
}

func (i GetUserAssessmentUsersFilterArgs) ToGetUserAssessmentUsersFilterOutput() GetUserAssessmentUsersFilterOutput {
	return i.ToGetUserAssessmentUsersFilterOutputWithContext(context.Background())
}

func (i GetUserAssessmentUsersFilterArgs) ToGetUserAssessmentUsersFilterOutputWithContext(ctx context.Context) GetUserAssessmentUsersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUsersFilterOutput)
}

// GetUserAssessmentUsersFilterArrayInput is an input type that accepts GetUserAssessmentUsersFilterArray and GetUserAssessmentUsersFilterArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentUsersFilterArrayInput` via:
//
//	GetUserAssessmentUsersFilterArray{ GetUserAssessmentUsersFilterArgs{...} }
type GetUserAssessmentUsersFilterArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentUsersFilterArrayOutput() GetUserAssessmentUsersFilterArrayOutput
	ToGetUserAssessmentUsersFilterArrayOutputWithContext(context.Context) GetUserAssessmentUsersFilterArrayOutput
}

type GetUserAssessmentUsersFilterArray []GetUserAssessmentUsersFilterInput

func (GetUserAssessmentUsersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUsersFilter)(nil)).Elem()
}

func (i GetUserAssessmentUsersFilterArray) ToGetUserAssessmentUsersFilterArrayOutput() GetUserAssessmentUsersFilterArrayOutput {
	return i.ToGetUserAssessmentUsersFilterArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentUsersFilterArray) ToGetUserAssessmentUsersFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentUsersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUsersFilterArrayOutput)
}

type GetUserAssessmentUsersFilterOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUsersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUsersFilter)(nil)).Elem()
}

func (o GetUserAssessmentUsersFilterOutput) ToGetUserAssessmentUsersFilterOutput() GetUserAssessmentUsersFilterOutput {
	return o
}

func (o GetUserAssessmentUsersFilterOutput) ToGetUserAssessmentUsersFilterOutputWithContext(ctx context.Context) GetUserAssessmentUsersFilterOutput {
	return o
}

func (o GetUserAssessmentUsersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserAssessmentUsersFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetUserAssessmentUsersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUserAssessmentUsersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUsersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUsersFilter)(nil)).Elem()
}

func (o GetUserAssessmentUsersFilterArrayOutput) ToGetUserAssessmentUsersFilterArrayOutput() GetUserAssessmentUsersFilterArrayOutput {
	return o
}

func (o GetUserAssessmentUsersFilterArrayOutput) ToGetUserAssessmentUsersFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentUsersFilterArrayOutput {
	return o
}

func (o GetUserAssessmentUsersFilterArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentUsersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentUsersFilter {
		return vs[0].([]GetUserAssessmentUsersFilter)[vs[1].(int)]
	}).(GetUserAssessmentUsersFilterOutput)
}

type GetUserAssessmentUsersUser struct {
	// A filter to return only items that match the specified account status.
	AccountStatus string `pulumi:"accountStatus"`
	// The admin roles granted to the user.
	AdminRoles []string `pulumi:"adminRoles"`
	// A filter to return only items that match the criteria that all schemas can be accessed by a user.
	AreAllSchemasAccessible bool `pulumi:"areAllSchemasAccessible"`
	// A filter to return only items that match the specified authentication type.
	AuthenticationType string `pulumi:"authenticationType"`
	// The unique user key. This is a system-generated identifier. Use ListUsers to get the user key for a user.
	Key string `pulumi:"key"`
	// A filter to return items that contain the specified schema list.
	SchemaLists []string `pulumi:"schemaLists"`
	// A filter to return only items related to a specific target OCID.
	TargetId string `pulumi:"targetId"`
	// The date and time the user last logged in, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeLastLogin string `pulumi:"timeLastLogin"`
	// The date and time the user password was last changed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimePasswordChanged string `pulumi:"timePasswordChanged"`
	// The date and time the user's password will expire, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimePasswordExpiry string `pulumi:"timePasswordExpiry"`
	// The date and time the user was created in the database, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUserCreated string `pulumi:"timeUserCreated"`
	// A filter to return only items that match the specified user category.
	UserCategory string `pulumi:"userCategory"`
	// A filter to return only items that match the specified user name.
	UserName string `pulumi:"userName"`
	// A filter to return only items that match the specified user profile.
	UserProfile string `pulumi:"userProfile"`
	// The user type, which can be a combination of the following:
	UserTypes []string `pulumi:"userTypes"`
}

// GetUserAssessmentUsersUserInput is an input type that accepts GetUserAssessmentUsersUserArgs and GetUserAssessmentUsersUserOutput values.
// You can construct a concrete instance of `GetUserAssessmentUsersUserInput` via:
//
//	GetUserAssessmentUsersUserArgs{...}
type GetUserAssessmentUsersUserInput interface {
	pulumi.Input

	ToGetUserAssessmentUsersUserOutput() GetUserAssessmentUsersUserOutput
	ToGetUserAssessmentUsersUserOutputWithContext(context.Context) GetUserAssessmentUsersUserOutput
}

type GetUserAssessmentUsersUserArgs struct {
	// A filter to return only items that match the specified account status.
	AccountStatus pulumi.StringInput `pulumi:"accountStatus"`
	// The admin roles granted to the user.
	AdminRoles pulumi.StringArrayInput `pulumi:"adminRoles"`
	// A filter to return only items that match the criteria that all schemas can be accessed by a user.
	AreAllSchemasAccessible pulumi.BoolInput `pulumi:"areAllSchemasAccessible"`
	// A filter to return only items that match the specified authentication type.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The unique user key. This is a system-generated identifier. Use ListUsers to get the user key for a user.
	Key pulumi.StringInput `pulumi:"key"`
	// A filter to return items that contain the specified schema list.
	SchemaLists pulumi.StringArrayInput `pulumi:"schemaLists"`
	// A filter to return only items related to a specific target OCID.
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// The date and time the user last logged in, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeLastLogin pulumi.StringInput `pulumi:"timeLastLogin"`
	// The date and time the user password was last changed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimePasswordChanged pulumi.StringInput `pulumi:"timePasswordChanged"`
	// The date and time the user's password will expire, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimePasswordExpiry pulumi.StringInput `pulumi:"timePasswordExpiry"`
	// The date and time the user was created in the database, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUserCreated pulumi.StringInput `pulumi:"timeUserCreated"`
	// A filter to return only items that match the specified user category.
	UserCategory pulumi.StringInput `pulumi:"userCategory"`
	// A filter to return only items that match the specified user name.
	UserName pulumi.StringInput `pulumi:"userName"`
	// A filter to return only items that match the specified user profile.
	UserProfile pulumi.StringInput `pulumi:"userProfile"`
	// The user type, which can be a combination of the following:
	UserTypes pulumi.StringArrayInput `pulumi:"userTypes"`
}

func (GetUserAssessmentUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUsersUser)(nil)).Elem()
}

func (i GetUserAssessmentUsersUserArgs) ToGetUserAssessmentUsersUserOutput() GetUserAssessmentUsersUserOutput {
	return i.ToGetUserAssessmentUsersUserOutputWithContext(context.Background())
}

func (i GetUserAssessmentUsersUserArgs) ToGetUserAssessmentUsersUserOutputWithContext(ctx context.Context) GetUserAssessmentUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUsersUserOutput)
}

// GetUserAssessmentUsersUserArrayInput is an input type that accepts GetUserAssessmentUsersUserArray and GetUserAssessmentUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentUsersUserArrayInput` via:
//
//	GetUserAssessmentUsersUserArray{ GetUserAssessmentUsersUserArgs{...} }
type GetUserAssessmentUsersUserArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentUsersUserArrayOutput() GetUserAssessmentUsersUserArrayOutput
	ToGetUserAssessmentUsersUserArrayOutputWithContext(context.Context) GetUserAssessmentUsersUserArrayOutput
}

type GetUserAssessmentUsersUserArray []GetUserAssessmentUsersUserInput

func (GetUserAssessmentUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUsersUser)(nil)).Elem()
}

func (i GetUserAssessmentUsersUserArray) ToGetUserAssessmentUsersUserArrayOutput() GetUserAssessmentUsersUserArrayOutput {
	return i.ToGetUserAssessmentUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentUsersUserArray) ToGetUserAssessmentUsersUserArrayOutputWithContext(ctx context.Context) GetUserAssessmentUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentUsersUserArrayOutput)
}

type GetUserAssessmentUsersUserOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentUsersUser)(nil)).Elem()
}

func (o GetUserAssessmentUsersUserOutput) ToGetUserAssessmentUsersUserOutput() GetUserAssessmentUsersUserOutput {
	return o
}

func (o GetUserAssessmentUsersUserOutput) ToGetUserAssessmentUsersUserOutputWithContext(ctx context.Context) GetUserAssessmentUsersUserOutput {
	return o
}

// A filter to return only items that match the specified account status.
func (o GetUserAssessmentUsersUserOutput) AccountStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) string { return v.AccountStatus }).(pulumi.StringOutput)
}

// The admin roles granted to the user.
func (o GetUserAssessmentUsersUserOutput) AdminRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) []string { return v.AdminRoles }).(pulumi.StringArrayOutput)
}

// A filter to return only items that match the criteria that all schemas can be accessed by a user.
func (o GetUserAssessmentUsersUserOutput) AreAllSchemasAccessible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) bool { return v.AreAllSchemasAccessible }).(pulumi.BoolOutput)
}

// A filter to return only items that match the specified authentication type.
func (o GetUserAssessmentUsersUserOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The unique user key. This is a system-generated identifier. Use ListUsers to get the user key for a user.
func (o GetUserAssessmentUsersUserOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) string { return v.Key }).(pulumi.StringOutput)
}

// A filter to return items that contain the specified schema list.
func (o GetUserAssessmentUsersUserOutput) SchemaLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) []string { return v.SchemaLists }).(pulumi.StringArrayOutput)
}

// A filter to return only items related to a specific target OCID.
func (o GetUserAssessmentUsersUserOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) string { return v.TargetId }).(pulumi.StringOutput)
}

// The date and time the user last logged in, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetUserAssessmentUsersUserOutput) TimeLastLogin() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) string { return v.TimeLastLogin }).(pulumi.StringOutput)
}

// The date and time the user password was last changed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetUserAssessmentUsersUserOutput) TimePasswordChanged() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) string { return v.TimePasswordChanged }).(pulumi.StringOutput)
}

// The date and time the user's password will expire, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetUserAssessmentUsersUserOutput) TimePasswordExpiry() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) string { return v.TimePasswordExpiry }).(pulumi.StringOutput)
}

// The date and time the user was created in the database, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetUserAssessmentUsersUserOutput) TimeUserCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) string { return v.TimeUserCreated }).(pulumi.StringOutput)
}

// A filter to return only items that match the specified user category.
func (o GetUserAssessmentUsersUserOutput) UserCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) string { return v.UserCategory }).(pulumi.StringOutput)
}

// A filter to return only items that match the specified user name.
func (o GetUserAssessmentUsersUserOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) string { return v.UserName }).(pulumi.StringOutput)
}

// A filter to return only items that match the specified user profile.
func (o GetUserAssessmentUsersUserOutput) UserProfile() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) string { return v.UserProfile }).(pulumi.StringOutput)
}

// The user type, which can be a combination of the following:
func (o GetUserAssessmentUsersUserOutput) UserTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentUsersUser) []string { return v.UserTypes }).(pulumi.StringArrayOutput)
}

type GetUserAssessmentUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentUsersUser)(nil)).Elem()
}

func (o GetUserAssessmentUsersUserArrayOutput) ToGetUserAssessmentUsersUserArrayOutput() GetUserAssessmentUsersUserArrayOutput {
	return o
}

func (o GetUserAssessmentUsersUserArrayOutput) ToGetUserAssessmentUsersUserArrayOutputWithContext(ctx context.Context) GetUserAssessmentUsersUserArrayOutput {
	return o
}

func (o GetUserAssessmentUsersUserArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentUsersUser {
		return vs[0].([]GetUserAssessmentUsersUser)[vs[1].(int)]
	}).(GetUserAssessmentUsersUserOutput)
}

type GetUserAssessmentsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetUserAssessmentsFilterInput is an input type that accepts GetUserAssessmentsFilterArgs and GetUserAssessmentsFilterOutput values.
// You can construct a concrete instance of `GetUserAssessmentsFilterInput` via:
//
//	GetUserAssessmentsFilterArgs{...}
type GetUserAssessmentsFilterInput interface {
	pulumi.Input

	ToGetUserAssessmentsFilterOutput() GetUserAssessmentsFilterOutput
	ToGetUserAssessmentsFilterOutputWithContext(context.Context) GetUserAssessmentsFilterOutput
}

type GetUserAssessmentsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetUserAssessmentsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentsFilter)(nil)).Elem()
}

func (i GetUserAssessmentsFilterArgs) ToGetUserAssessmentsFilterOutput() GetUserAssessmentsFilterOutput {
	return i.ToGetUserAssessmentsFilterOutputWithContext(context.Background())
}

func (i GetUserAssessmentsFilterArgs) ToGetUserAssessmentsFilterOutputWithContext(ctx context.Context) GetUserAssessmentsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentsFilterOutput)
}

// GetUserAssessmentsFilterArrayInput is an input type that accepts GetUserAssessmentsFilterArray and GetUserAssessmentsFilterArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentsFilterArrayInput` via:
//
//	GetUserAssessmentsFilterArray{ GetUserAssessmentsFilterArgs{...} }
type GetUserAssessmentsFilterArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentsFilterArrayOutput() GetUserAssessmentsFilterArrayOutput
	ToGetUserAssessmentsFilterArrayOutputWithContext(context.Context) GetUserAssessmentsFilterArrayOutput
}

type GetUserAssessmentsFilterArray []GetUserAssessmentsFilterInput

func (GetUserAssessmentsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentsFilter)(nil)).Elem()
}

func (i GetUserAssessmentsFilterArray) ToGetUserAssessmentsFilterArrayOutput() GetUserAssessmentsFilterArrayOutput {
	return i.ToGetUserAssessmentsFilterArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentsFilterArray) ToGetUserAssessmentsFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentsFilterArrayOutput)
}

type GetUserAssessmentsFilterOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentsFilter)(nil)).Elem()
}

func (o GetUserAssessmentsFilterOutput) ToGetUserAssessmentsFilterOutput() GetUserAssessmentsFilterOutput {
	return o
}

func (o GetUserAssessmentsFilterOutput) ToGetUserAssessmentsFilterOutputWithContext(ctx context.Context) GetUserAssessmentsFilterOutput {
	return o
}

func (o GetUserAssessmentsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserAssessmentsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserAssessmentsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetUserAssessmentsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetUserAssessmentsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentsFilter)(nil)).Elem()
}

func (o GetUserAssessmentsFilterArrayOutput) ToGetUserAssessmentsFilterArrayOutput() GetUserAssessmentsFilterArrayOutput {
	return o
}

func (o GetUserAssessmentsFilterArrayOutput) ToGetUserAssessmentsFilterArrayOutputWithContext(ctx context.Context) GetUserAssessmentsFilterArrayOutput {
	return o
}

func (o GetUserAssessmentsFilterArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentsFilter {
		return vs[0].([]GetUserAssessmentsFilter)[vs[1].(int)]
	}).(GetUserAssessmentsFilterOutput)
}

type GetUserAssessmentsIgnoredTarget struct {
	LifecycleState string `pulumi:"lifecycleState"`
	// A filter to return only items related to a specific target OCID.
	TargetId         string `pulumi:"targetId"`
	UserAssessmentId string `pulumi:"userAssessmentId"`
}

// GetUserAssessmentsIgnoredTargetInput is an input type that accepts GetUserAssessmentsIgnoredTargetArgs and GetUserAssessmentsIgnoredTargetOutput values.
// You can construct a concrete instance of `GetUserAssessmentsIgnoredTargetInput` via:
//
//	GetUserAssessmentsIgnoredTargetArgs{...}
type GetUserAssessmentsIgnoredTargetInput interface {
	pulumi.Input

	ToGetUserAssessmentsIgnoredTargetOutput() GetUserAssessmentsIgnoredTargetOutput
	ToGetUserAssessmentsIgnoredTargetOutputWithContext(context.Context) GetUserAssessmentsIgnoredTargetOutput
}

type GetUserAssessmentsIgnoredTargetArgs struct {
	LifecycleState pulumi.StringInput `pulumi:"lifecycleState"`
	// A filter to return only items related to a specific target OCID.
	TargetId         pulumi.StringInput `pulumi:"targetId"`
	UserAssessmentId pulumi.StringInput `pulumi:"userAssessmentId"`
}

func (GetUserAssessmentsIgnoredTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentsIgnoredTarget)(nil)).Elem()
}

func (i GetUserAssessmentsIgnoredTargetArgs) ToGetUserAssessmentsIgnoredTargetOutput() GetUserAssessmentsIgnoredTargetOutput {
	return i.ToGetUserAssessmentsIgnoredTargetOutputWithContext(context.Background())
}

func (i GetUserAssessmentsIgnoredTargetArgs) ToGetUserAssessmentsIgnoredTargetOutputWithContext(ctx context.Context) GetUserAssessmentsIgnoredTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentsIgnoredTargetOutput)
}

// GetUserAssessmentsIgnoredTargetArrayInput is an input type that accepts GetUserAssessmentsIgnoredTargetArray and GetUserAssessmentsIgnoredTargetArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentsIgnoredTargetArrayInput` via:
//
//	GetUserAssessmentsIgnoredTargetArray{ GetUserAssessmentsIgnoredTargetArgs{...} }
type GetUserAssessmentsIgnoredTargetArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentsIgnoredTargetArrayOutput() GetUserAssessmentsIgnoredTargetArrayOutput
	ToGetUserAssessmentsIgnoredTargetArrayOutputWithContext(context.Context) GetUserAssessmentsIgnoredTargetArrayOutput
}

type GetUserAssessmentsIgnoredTargetArray []GetUserAssessmentsIgnoredTargetInput

func (GetUserAssessmentsIgnoredTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentsIgnoredTarget)(nil)).Elem()
}

func (i GetUserAssessmentsIgnoredTargetArray) ToGetUserAssessmentsIgnoredTargetArrayOutput() GetUserAssessmentsIgnoredTargetArrayOutput {
	return i.ToGetUserAssessmentsIgnoredTargetArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentsIgnoredTargetArray) ToGetUserAssessmentsIgnoredTargetArrayOutputWithContext(ctx context.Context) GetUserAssessmentsIgnoredTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentsIgnoredTargetArrayOutput)
}

type GetUserAssessmentsIgnoredTargetOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentsIgnoredTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentsIgnoredTarget)(nil)).Elem()
}

func (o GetUserAssessmentsIgnoredTargetOutput) ToGetUserAssessmentsIgnoredTargetOutput() GetUserAssessmentsIgnoredTargetOutput {
	return o
}

func (o GetUserAssessmentsIgnoredTargetOutput) ToGetUserAssessmentsIgnoredTargetOutputWithContext(ctx context.Context) GetUserAssessmentsIgnoredTargetOutput {
	return o
}

func (o GetUserAssessmentsIgnoredTargetOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsIgnoredTarget) string { return v.LifecycleState }).(pulumi.StringOutput)
}

// A filter to return only items related to a specific target OCID.
func (o GetUserAssessmentsIgnoredTargetOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsIgnoredTarget) string { return v.TargetId }).(pulumi.StringOutput)
}

func (o GetUserAssessmentsIgnoredTargetOutput) UserAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsIgnoredTarget) string { return v.UserAssessmentId }).(pulumi.StringOutput)
}

type GetUserAssessmentsIgnoredTargetArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentsIgnoredTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentsIgnoredTarget)(nil)).Elem()
}

func (o GetUserAssessmentsIgnoredTargetArrayOutput) ToGetUserAssessmentsIgnoredTargetArrayOutput() GetUserAssessmentsIgnoredTargetArrayOutput {
	return o
}

func (o GetUserAssessmentsIgnoredTargetArrayOutput) ToGetUserAssessmentsIgnoredTargetArrayOutputWithContext(ctx context.Context) GetUserAssessmentsIgnoredTargetArrayOutput {
	return o
}

func (o GetUserAssessmentsIgnoredTargetArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentsIgnoredTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentsIgnoredTarget {
		return vs[0].([]GetUserAssessmentsIgnoredTarget)[vs[1].(int)]
	}).(GetUserAssessmentsIgnoredTargetOutput)
}

type GetUserAssessmentsUserAssessment struct {
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The description of the user assessment.
	Description string `pulumi:"description"`
	// A filter to return only resources that match the specified display name.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the user assessment.
	Id string `pulumi:"id"`
	// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
	IgnoredAssessmentIds []string `pulumi:"ignoredAssessmentIds"`
	// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
	IgnoredTargets []GetUserAssessmentsUserAssessmentIgnoredTarget `pulumi:"ignoredTargets"`
	// Indicates whether the assessment is scheduled to run.
	IsAssessmentScheduled bool `pulumi:"isAssessmentScheduled"`
	// A filter to return only user assessments that are set as baseline.
	IsBaseline bool `pulumi:"isBaseline"`
	// Indicates if the user assessment deviates from the baseline.
	IsDeviatedFromBaseline bool `pulumi:"isDeviatedFromBaseline"`
	// The OCID of the last user assessment baseline against which the latest assessment was compared.
	LastComparedBaselineId string `pulumi:"lastComparedBaselineId"`
	// Details about the current state of the user assessment.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Schedule of the assessment that runs periodically in this specified format: <version-string>;<version-specific-schedule>
	Schedule string `pulumi:"schedule"`
	// The OCID of the user assessment that is responsible for creating this scheduled save assessment.
	ScheduleAssessmentId string `pulumi:"scheduleAssessmentId"`
	// The current state of the user assessment.
	State string `pulumi:"state"`
	// Map that contains maps of values. Example: `{"Operations": {"CostCenter": "42"}}`
	Statistics string `pulumi:"statistics"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// A filter to return the target database group that matches the specified OCID.
	TargetDatabaseGroupId string `pulumi:"targetDatabaseGroupId"`
	// A filter to return only items related to a specific target OCID.
	TargetId string `pulumi:"targetId"`
	// Array of database target OCIDs.
	TargetIds []string `pulumi:"targetIds"`
	// A filter to return only only target database resources or target database group resources.
	TargetType string `pulumi:"targetType"`
	// The date and time the user assessment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the user assessment was last executed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeLastAssessed string `pulumi:"timeLastAssessed"`
	// The date and time the user assessment was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
	// A filter to return user assessments that were created by either the system or by a user only.
	TriggeredBy string `pulumi:"triggeredBy"`
	// A filter to return only items that match the specified assessment type.
	Type string `pulumi:"type"`
}

// GetUserAssessmentsUserAssessmentInput is an input type that accepts GetUserAssessmentsUserAssessmentArgs and GetUserAssessmentsUserAssessmentOutput values.
// You can construct a concrete instance of `GetUserAssessmentsUserAssessmentInput` via:
//
//	GetUserAssessmentsUserAssessmentArgs{...}
type GetUserAssessmentsUserAssessmentInput interface {
	pulumi.Input

	ToGetUserAssessmentsUserAssessmentOutput() GetUserAssessmentsUserAssessmentOutput
	ToGetUserAssessmentsUserAssessmentOutputWithContext(context.Context) GetUserAssessmentsUserAssessmentOutput
}

type GetUserAssessmentsUserAssessmentArgs struct {
	// A filter to return only resources that match the specified compartment OCID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The description of the user assessment.
	Description pulumi.StringInput `pulumi:"description"`
	// A filter to return only resources that match the specified display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the user assessment.
	Id pulumi.StringInput `pulumi:"id"`
	// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
	IgnoredAssessmentIds pulumi.StringArrayInput `pulumi:"ignoredAssessmentIds"`
	// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
	IgnoredTargets GetUserAssessmentsUserAssessmentIgnoredTargetArrayInput `pulumi:"ignoredTargets"`
	// Indicates whether the assessment is scheduled to run.
	IsAssessmentScheduled pulumi.BoolInput `pulumi:"isAssessmentScheduled"`
	// A filter to return only user assessments that are set as baseline.
	IsBaseline pulumi.BoolInput `pulumi:"isBaseline"`
	// Indicates if the user assessment deviates from the baseline.
	IsDeviatedFromBaseline pulumi.BoolInput `pulumi:"isDeviatedFromBaseline"`
	// The OCID of the last user assessment baseline against which the latest assessment was compared.
	LastComparedBaselineId pulumi.StringInput `pulumi:"lastComparedBaselineId"`
	// Details about the current state of the user assessment.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Schedule of the assessment that runs periodically in this specified format: <version-string>;<version-specific-schedule>
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The OCID of the user assessment that is responsible for creating this scheduled save assessment.
	ScheduleAssessmentId pulumi.StringInput `pulumi:"scheduleAssessmentId"`
	// The current state of the user assessment.
	State pulumi.StringInput `pulumi:"state"`
	// Map that contains maps of values. Example: `{"Operations": {"CostCenter": "42"}}`
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput `pulumi:"systemTags"`
	// A filter to return the target database group that matches the specified OCID.
	TargetDatabaseGroupId pulumi.StringInput `pulumi:"targetDatabaseGroupId"`
	// A filter to return only items related to a specific target OCID.
	TargetId pulumi.StringInput `pulumi:"targetId"`
	// Array of database target OCIDs.
	TargetIds pulumi.StringArrayInput `pulumi:"targetIds"`
	// A filter to return only only target database resources or target database group resources.
	TargetType pulumi.StringInput `pulumi:"targetType"`
	// The date and time the user assessment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the user assessment was last executed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeLastAssessed pulumi.StringInput `pulumi:"timeLastAssessed"`
	// The date and time the user assessment was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
	// A filter to return user assessments that were created by either the system or by a user only.
	TriggeredBy pulumi.StringInput `pulumi:"triggeredBy"`
	// A filter to return only items that match the specified assessment type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetUserAssessmentsUserAssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentsUserAssessment)(nil)).Elem()
}

func (i GetUserAssessmentsUserAssessmentArgs) ToGetUserAssessmentsUserAssessmentOutput() GetUserAssessmentsUserAssessmentOutput {
	return i.ToGetUserAssessmentsUserAssessmentOutputWithContext(context.Background())
}

func (i GetUserAssessmentsUserAssessmentArgs) ToGetUserAssessmentsUserAssessmentOutputWithContext(ctx context.Context) GetUserAssessmentsUserAssessmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentsUserAssessmentOutput)
}

// GetUserAssessmentsUserAssessmentArrayInput is an input type that accepts GetUserAssessmentsUserAssessmentArray and GetUserAssessmentsUserAssessmentArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentsUserAssessmentArrayInput` via:
//
//	GetUserAssessmentsUserAssessmentArray{ GetUserAssessmentsUserAssessmentArgs{...} }
type GetUserAssessmentsUserAssessmentArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentsUserAssessmentArrayOutput() GetUserAssessmentsUserAssessmentArrayOutput
	ToGetUserAssessmentsUserAssessmentArrayOutputWithContext(context.Context) GetUserAssessmentsUserAssessmentArrayOutput
}

type GetUserAssessmentsUserAssessmentArray []GetUserAssessmentsUserAssessmentInput

func (GetUserAssessmentsUserAssessmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentsUserAssessment)(nil)).Elem()
}

func (i GetUserAssessmentsUserAssessmentArray) ToGetUserAssessmentsUserAssessmentArrayOutput() GetUserAssessmentsUserAssessmentArrayOutput {
	return i.ToGetUserAssessmentsUserAssessmentArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentsUserAssessmentArray) ToGetUserAssessmentsUserAssessmentArrayOutputWithContext(ctx context.Context) GetUserAssessmentsUserAssessmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentsUserAssessmentArrayOutput)
}

type GetUserAssessmentsUserAssessmentOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentsUserAssessmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentsUserAssessment)(nil)).Elem()
}

func (o GetUserAssessmentsUserAssessmentOutput) ToGetUserAssessmentsUserAssessmentOutput() GetUserAssessmentsUserAssessmentOutput {
	return o
}

func (o GetUserAssessmentsUserAssessmentOutput) ToGetUserAssessmentsUserAssessmentOutputWithContext(ctx context.Context) GetUserAssessmentsUserAssessmentOutput {
	return o
}

// A filter to return only resources that match the specified compartment OCID.
func (o GetUserAssessmentsUserAssessmentOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
func (o GetUserAssessmentsUserAssessmentOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The description of the user assessment.
func (o GetUserAssessmentsUserAssessmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.Description }).(pulumi.StringOutput)
}

// A filter to return only resources that match the specified display name.
func (o GetUserAssessmentsUserAssessmentOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o GetUserAssessmentsUserAssessmentOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the user assessment.
func (o GetUserAssessmentsUserAssessmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.Id }).(pulumi.StringOutput)
}

// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
func (o GetUserAssessmentsUserAssessmentOutput) IgnoredAssessmentIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) []string { return v.IgnoredAssessmentIds }).(pulumi.StringArrayOutput)
}

// List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
func (o GetUserAssessmentsUserAssessmentOutput) IgnoredTargets() GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) []GetUserAssessmentsUserAssessmentIgnoredTarget {
		return v.IgnoredTargets
	}).(GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput)
}

// Indicates whether the assessment is scheduled to run.
func (o GetUserAssessmentsUserAssessmentOutput) IsAssessmentScheduled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) bool { return v.IsAssessmentScheduled }).(pulumi.BoolOutput)
}

// A filter to return only user assessments that are set as baseline.
func (o GetUserAssessmentsUserAssessmentOutput) IsBaseline() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) bool { return v.IsBaseline }).(pulumi.BoolOutput)
}

// Indicates if the user assessment deviates from the baseline.
func (o GetUserAssessmentsUserAssessmentOutput) IsDeviatedFromBaseline() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) bool { return v.IsDeviatedFromBaseline }).(pulumi.BoolOutput)
}

// The OCID of the last user assessment baseline against which the latest assessment was compared.
func (o GetUserAssessmentsUserAssessmentOutput) LastComparedBaselineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.LastComparedBaselineId }).(pulumi.StringOutput)
}

// Details about the current state of the user assessment.
func (o GetUserAssessmentsUserAssessmentOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Schedule of the assessment that runs periodically in this specified format: <version-string>;<version-specific-schedule>
func (o GetUserAssessmentsUserAssessmentOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.Schedule }).(pulumi.StringOutput)
}

// The OCID of the user assessment that is responsible for creating this scheduled save assessment.
func (o GetUserAssessmentsUserAssessmentOutput) ScheduleAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.ScheduleAssessmentId }).(pulumi.StringOutput)
}

// The current state of the user assessment.
func (o GetUserAssessmentsUserAssessmentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.State }).(pulumi.StringOutput)
}

// Map that contains maps of values. Example: `{"Operations": {"CostCenter": "42"}}`
func (o GetUserAssessmentsUserAssessmentOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.Statistics }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetUserAssessmentsUserAssessmentOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// A filter to return the target database group that matches the specified OCID.
func (o GetUserAssessmentsUserAssessmentOutput) TargetDatabaseGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.TargetDatabaseGroupId }).(pulumi.StringOutput)
}

// A filter to return only items related to a specific target OCID.
func (o GetUserAssessmentsUserAssessmentOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.TargetId }).(pulumi.StringOutput)
}

// Array of database target OCIDs.
func (o GetUserAssessmentsUserAssessmentOutput) TargetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) []string { return v.TargetIds }).(pulumi.StringArrayOutput)
}

// A filter to return only only target database resources or target database group resources.
func (o GetUserAssessmentsUserAssessmentOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.TargetType }).(pulumi.StringOutput)
}

// The date and time the user assessment was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetUserAssessmentsUserAssessmentOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the user assessment was last executed, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetUserAssessmentsUserAssessmentOutput) TimeLastAssessed() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.TimeLastAssessed }).(pulumi.StringOutput)
}

// The date and time the user assessment was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o GetUserAssessmentsUserAssessmentOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// A filter to return user assessments that were created by either the system or by a user only.
func (o GetUserAssessmentsUserAssessmentOutput) TriggeredBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.TriggeredBy }).(pulumi.StringOutput)
}

// A filter to return only items that match the specified assessment type.
func (o GetUserAssessmentsUserAssessmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessment) string { return v.Type }).(pulumi.StringOutput)
}

type GetUserAssessmentsUserAssessmentArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentsUserAssessmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentsUserAssessment)(nil)).Elem()
}

func (o GetUserAssessmentsUserAssessmentArrayOutput) ToGetUserAssessmentsUserAssessmentArrayOutput() GetUserAssessmentsUserAssessmentArrayOutput {
	return o
}

func (o GetUserAssessmentsUserAssessmentArrayOutput) ToGetUserAssessmentsUserAssessmentArrayOutputWithContext(ctx context.Context) GetUserAssessmentsUserAssessmentArrayOutput {
	return o
}

func (o GetUserAssessmentsUserAssessmentArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentsUserAssessmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentsUserAssessment {
		return vs[0].([]GetUserAssessmentsUserAssessment)[vs[1].(int)]
	}).(GetUserAssessmentsUserAssessmentOutput)
}

type GetUserAssessmentsUserAssessmentIgnoredTarget struct {
	LifecycleState string `pulumi:"lifecycleState"`
	// A filter to return only items related to a specific target OCID.
	TargetId         string `pulumi:"targetId"`
	UserAssessmentId string `pulumi:"userAssessmentId"`
}

// GetUserAssessmentsUserAssessmentIgnoredTargetInput is an input type that accepts GetUserAssessmentsUserAssessmentIgnoredTargetArgs and GetUserAssessmentsUserAssessmentIgnoredTargetOutput values.
// You can construct a concrete instance of `GetUserAssessmentsUserAssessmentIgnoredTargetInput` via:
//
//	GetUserAssessmentsUserAssessmentIgnoredTargetArgs{...}
type GetUserAssessmentsUserAssessmentIgnoredTargetInput interface {
	pulumi.Input

	ToGetUserAssessmentsUserAssessmentIgnoredTargetOutput() GetUserAssessmentsUserAssessmentIgnoredTargetOutput
	ToGetUserAssessmentsUserAssessmentIgnoredTargetOutputWithContext(context.Context) GetUserAssessmentsUserAssessmentIgnoredTargetOutput
}

type GetUserAssessmentsUserAssessmentIgnoredTargetArgs struct {
	LifecycleState pulumi.StringInput `pulumi:"lifecycleState"`
	// A filter to return only items related to a specific target OCID.
	TargetId         pulumi.StringInput `pulumi:"targetId"`
	UserAssessmentId pulumi.StringInput `pulumi:"userAssessmentId"`
}

func (GetUserAssessmentsUserAssessmentIgnoredTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentsUserAssessmentIgnoredTarget)(nil)).Elem()
}

func (i GetUserAssessmentsUserAssessmentIgnoredTargetArgs) ToGetUserAssessmentsUserAssessmentIgnoredTargetOutput() GetUserAssessmentsUserAssessmentIgnoredTargetOutput {
	return i.ToGetUserAssessmentsUserAssessmentIgnoredTargetOutputWithContext(context.Background())
}

func (i GetUserAssessmentsUserAssessmentIgnoredTargetArgs) ToGetUserAssessmentsUserAssessmentIgnoredTargetOutputWithContext(ctx context.Context) GetUserAssessmentsUserAssessmentIgnoredTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentsUserAssessmentIgnoredTargetOutput)
}

// GetUserAssessmentsUserAssessmentIgnoredTargetArrayInput is an input type that accepts GetUserAssessmentsUserAssessmentIgnoredTargetArray and GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput values.
// You can construct a concrete instance of `GetUserAssessmentsUserAssessmentIgnoredTargetArrayInput` via:
//
//	GetUserAssessmentsUserAssessmentIgnoredTargetArray{ GetUserAssessmentsUserAssessmentIgnoredTargetArgs{...} }
type GetUserAssessmentsUserAssessmentIgnoredTargetArrayInput interface {
	pulumi.Input

	ToGetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput() GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput
	ToGetUserAssessmentsUserAssessmentIgnoredTargetArrayOutputWithContext(context.Context) GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput
}

type GetUserAssessmentsUserAssessmentIgnoredTargetArray []GetUserAssessmentsUserAssessmentIgnoredTargetInput

func (GetUserAssessmentsUserAssessmentIgnoredTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentsUserAssessmentIgnoredTarget)(nil)).Elem()
}

func (i GetUserAssessmentsUserAssessmentIgnoredTargetArray) ToGetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput() GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput {
	return i.ToGetUserAssessmentsUserAssessmentIgnoredTargetArrayOutputWithContext(context.Background())
}

func (i GetUserAssessmentsUserAssessmentIgnoredTargetArray) ToGetUserAssessmentsUserAssessmentIgnoredTargetArrayOutputWithContext(ctx context.Context) GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput)
}

type GetUserAssessmentsUserAssessmentIgnoredTargetOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentsUserAssessmentIgnoredTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAssessmentsUserAssessmentIgnoredTarget)(nil)).Elem()
}

func (o GetUserAssessmentsUserAssessmentIgnoredTargetOutput) ToGetUserAssessmentsUserAssessmentIgnoredTargetOutput() GetUserAssessmentsUserAssessmentIgnoredTargetOutput {
	return o
}

func (o GetUserAssessmentsUserAssessmentIgnoredTargetOutput) ToGetUserAssessmentsUserAssessmentIgnoredTargetOutputWithContext(ctx context.Context) GetUserAssessmentsUserAssessmentIgnoredTargetOutput {
	return o
}

func (o GetUserAssessmentsUserAssessmentIgnoredTargetOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessmentIgnoredTarget) string { return v.LifecycleState }).(pulumi.StringOutput)
}

// A filter to return only items related to a specific target OCID.
func (o GetUserAssessmentsUserAssessmentIgnoredTargetOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessmentIgnoredTarget) string { return v.TargetId }).(pulumi.StringOutput)
}

func (o GetUserAssessmentsUserAssessmentIgnoredTargetOutput) UserAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserAssessmentsUserAssessmentIgnoredTarget) string { return v.UserAssessmentId }).(pulumi.StringOutput)
}

type GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput struct{ *pulumi.OutputState }

func (GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAssessmentsUserAssessmentIgnoredTarget)(nil)).Elem()
}

func (o GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput) ToGetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput() GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput {
	return o
}

func (o GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput) ToGetUserAssessmentsUserAssessmentIgnoredTargetArrayOutputWithContext(ctx context.Context) GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput {
	return o
}

func (o GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput) Index(i pulumi.IntInput) GetUserAssessmentsUserAssessmentIgnoredTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAssessmentsUserAssessmentIgnoredTarget {
		return vs[0].([]GetUserAssessmentsUserAssessmentIgnoredTarget)[vs[1].(int)]
	}).(GetUserAssessmentsUserAssessmentIgnoredTargetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemInput)(nil)).Elem(), GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayInput)(nil)).Elem(), GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionInput)(nil)).Elem(), GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayInput)(nil)).Elem(), GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPolicyConditionInput)(nil)).Elem(), GetUnifiedAuditPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPolicyConditionArrayInput)(nil)).Elem(), GetUnifiedAuditPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsFilterInput)(nil)).Elem(), GetUnifiedAuditPolicyDefinitionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsFilterArrayInput)(nil)).Elem(), GetUnifiedAuditPolicyDefinitionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionInput)(nil)).Elem(), GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayInput)(nil)).Elem(), GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemInput)(nil)).Elem(), GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayInput)(nil)).Elem(), GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentComparisonSummaryInput)(nil)).Elem(), GetUserAssessmentComparisonSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentComparisonSummaryArrayInput)(nil)).Elem(), GetUserAssessmentComparisonSummaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentComparisonSummaryBaselineInput)(nil)).Elem(), GetUserAssessmentComparisonSummaryBaselineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentComparisonSummaryBaselineArrayInput)(nil)).Elem(), GetUserAssessmentComparisonSummaryBaselineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentComparisonSummaryCurrentInput)(nil)).Elem(), GetUserAssessmentComparisonSummaryCurrentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentComparisonSummaryCurrentArrayInput)(nil)).Elem(), GetUserAssessmentComparisonSummaryCurrentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentIgnoredTargetInput)(nil)).Elem(), GetUserAssessmentIgnoredTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentIgnoredTargetArrayInput)(nil)).Elem(), GetUserAssessmentIgnoredTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsFilterInput)(nil)).Elem(), GetUserAssessmentPasswordExpiryDateAnalyticsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayInput)(nil)).Elem(), GetUserAssessmentPasswordExpiryDateAnalyticsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationInput)(nil)).Elem(), GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayInput)(nil)).Elem(), GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemInput)(nil)).Elem(), GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayInput)(nil)).Elem(), GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentProfileAnalyticsFilterInput)(nil)).Elem(), GetUserAssessmentProfileAnalyticsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentProfileAnalyticsFilterArrayInput)(nil)).Elem(), GetUserAssessmentProfileAnalyticsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentProfileAnalyticsProfileAggregationInput)(nil)).Elem(), GetUserAssessmentProfileAnalyticsProfileAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentProfileAnalyticsProfileAggregationArrayInput)(nil)).Elem(), GetUserAssessmentProfileAnalyticsProfileAggregationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentProfilesFilterInput)(nil)).Elem(), GetUserAssessmentProfilesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentProfilesFilterArrayInput)(nil)).Elem(), GetUserAssessmentProfilesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentProfilesProfileInput)(nil)).Elem(), GetUserAssessmentProfilesProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentProfilesProfileArrayInput)(nil)).Elem(), GetUserAssessmentProfilesProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsFilterInput)(nil)).Elem(), GetUserAssessmentUserAccessAnalyticsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsFilterArrayInput)(nil)).Elem(), GetUserAssessmentUserAccessAnalyticsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionInput)(nil)).Elem(), GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayInput)(nil)).Elem(), GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemInput)(nil)).Elem(), GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayInput)(nil)).Elem(), GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAnalyticsFilterInput)(nil)).Elem(), GetUserAssessmentUserAnalyticsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAnalyticsFilterArrayInput)(nil)).Elem(), GetUserAssessmentUserAnalyticsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAnalyticsUserAggregationInput)(nil)).Elem(), GetUserAssessmentUserAnalyticsUserAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAnalyticsUserAggregationArrayInput)(nil)).Elem(), GetUserAssessmentUserAnalyticsUserAggregationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAnalyticsUserAggregationItemInput)(nil)).Elem(), GetUserAssessmentUserAnalyticsUserAggregationItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUserAnalyticsUserAggregationItemArrayInput)(nil)).Elem(), GetUserAssessmentUserAnalyticsUserAggregationItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUsersFilterInput)(nil)).Elem(), GetUserAssessmentUsersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUsersFilterArrayInput)(nil)).Elem(), GetUserAssessmentUsersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUsersUserInput)(nil)).Elem(), GetUserAssessmentUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentUsersUserArrayInput)(nil)).Elem(), GetUserAssessmentUsersUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentsFilterInput)(nil)).Elem(), GetUserAssessmentsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentsFilterArrayInput)(nil)).Elem(), GetUserAssessmentsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentsIgnoredTargetInput)(nil)).Elem(), GetUserAssessmentsIgnoredTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentsIgnoredTargetArrayInput)(nil)).Elem(), GetUserAssessmentsIgnoredTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentsUserAssessmentInput)(nil)).Elem(), GetUserAssessmentsUserAssessmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentsUserAssessmentArrayInput)(nil)).Elem(), GetUserAssessmentsUserAssessmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentsUserAssessmentIgnoredTargetInput)(nil)).Elem(), GetUserAssessmentsUserAssessmentIgnoredTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAssessmentsUserAssessmentIgnoredTargetArrayInput)(nil)).Elem(), GetUserAssessmentsUserAssessmentIgnoredTargetArray{})
	pulumi.RegisterOutputType(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemOutput{})
	pulumi.RegisterOutputType(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionOutput{})
	pulumi.RegisterOutputType(GetUnifiedAuditPoliciesUnifiedAuditPolicyCollectionItemConditionArrayOutput{})
	pulumi.RegisterOutputType(GetUnifiedAuditPolicyConditionOutput{})
	pulumi.RegisterOutputType(GetUnifiedAuditPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(GetUnifiedAuditPolicyDefinitionsFilterOutput{})
	pulumi.RegisterOutputType(GetUnifiedAuditPolicyDefinitionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionOutput{})
	pulumi.RegisterOutputType(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemOutput{})
	pulumi.RegisterOutputType(GetUnifiedAuditPolicyDefinitionsUnifiedAuditPolicyDefinitionCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentComparisonSummaryOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentComparisonSummaryArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentComparisonSummaryBaselineOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentComparisonSummaryBaselineArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentComparisonSummaryCurrentOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentComparisonSummaryCurrentArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentIgnoredTargetOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentIgnoredTargetArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentPasswordExpiryDateAnalyticsFilterOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentPasswordExpiryDateAnalyticsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentPasswordExpiryDateAnalyticsUserAggregationItemArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentProfileAnalyticsFilterOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentProfileAnalyticsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentProfileAnalyticsProfileAggregationOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentProfileAnalyticsProfileAggregationArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentProfilesFilterOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentProfilesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentProfilesProfileOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentProfilesProfileArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAccessAnalyticsFilterOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAccessAnalyticsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAccessAnalyticsUserAccessAnalyticsCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAnalyticsFilterOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAnalyticsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAnalyticsUserAggregationOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAnalyticsUserAggregationArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAnalyticsUserAggregationItemOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUserAnalyticsUserAggregationItemArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUsersFilterOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUsersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUsersUserOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentUsersUserArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentsFilterOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentsIgnoredTargetOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentsIgnoredTargetArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentsUserAssessmentOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentsUserAssessmentArrayOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentsUserAssessmentIgnoredTargetOutput{})
	pulumi.RegisterOutputType(GetUserAssessmentsUserAssessmentIgnoredTargetArrayOutput{})
}
