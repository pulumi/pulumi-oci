// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Security Assessment Check resource in Oracle Cloud Infrastructure Data Safe service.
//
//	Patches one or more checks in the specified template type security assessment. Use it to add or delete checks.
//
// To add check, use CreateCheckDetails as the patch value.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.NewSecurityAssessmentCheck(ctx, "test_security_assessment_check", &datasafe.SecurityAssessmentCheckArgs{
//				SecurityAssessmentId: pulumi.Any(testSecurityAssessment.Id),
//				PatchOperations: datasafe.SecurityAssessmentCheckPatchOperationArray{
//					&datasafe.SecurityAssessmentCheckPatchOperationArgs{
//						Operation: pulumi.Any(securityAssessmentCheckPatchOperationsOperation),
//						Selection: pulumi.Any(securityAssessmentCheckPatchOperationsSelection),
//						Value:     pulumi.Any(securityAssessmentCheckPatchOperationsValue),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SecurityAssessmentChecks can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataSafe/securityAssessmentCheck:SecurityAssessmentCheck test_security_assessment_check "securityAssessments/{securityAssessmentId}/checks"
// ```
type SecurityAssessmentCheck struct {
	pulumi.CustomResourceState

	// The category to which the check belongs to.
	Category pulumi.StringOutput `pulumi:"category"`
	// A unique identifier for the check.
	Key pulumi.StringOutput `pulumi:"key"`
	// Provides a recommended approach to take to remediate the check reported.
	Oneline pulumi.StringOutput `pulumi:"oneline"`
	// (Updatable)
	PatchOperations SecurityAssessmentCheckPatchOperationArrayOutput `pulumi:"patchOperations"`
	// Provides information on whether the check is related to a CIS Oracle Database Benchmark recommendation, STIG rule, GDPR Article/Recital or related to the Oracle Best Practice.
	References SecurityAssessmentCheckReferenceArrayOutput `pulumi:"references"`
	// The explanation of the issue in this check. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
	Remarks pulumi.StringOutput `pulumi:"remarks"`
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecurityAssessmentId pulumi.StringOutput `pulumi:"securityAssessmentId"`
	// The severity of the check as suggested by Data Safe security assessment. This will be the default severity in the template baseline security assessment.
	SuggestedSeverity pulumi.StringOutput `pulumi:"suggestedSeverity"`
	// The short title for the check.
	Title pulumi.StringOutput `pulumi:"title"`
}

// NewSecurityAssessmentCheck registers a new resource with the given unique name, arguments, and options.
func NewSecurityAssessmentCheck(ctx *pulumi.Context,
	name string, args *SecurityAssessmentCheckArgs, opts ...pulumi.ResourceOption) (*SecurityAssessmentCheck, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityAssessmentId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityAssessmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityAssessmentCheck
	err := ctx.RegisterResource("oci:DataSafe/securityAssessmentCheck:SecurityAssessmentCheck", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityAssessmentCheck gets an existing SecurityAssessmentCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityAssessmentCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityAssessmentCheckState, opts ...pulumi.ResourceOption) (*SecurityAssessmentCheck, error) {
	var resource SecurityAssessmentCheck
	err := ctx.ReadResource("oci:DataSafe/securityAssessmentCheck:SecurityAssessmentCheck", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityAssessmentCheck resources.
type securityAssessmentCheckState struct {
	// The category to which the check belongs to.
	Category *string `pulumi:"category"`
	// A unique identifier for the check.
	Key *string `pulumi:"key"`
	// Provides a recommended approach to take to remediate the check reported.
	Oneline *string `pulumi:"oneline"`
	// (Updatable)
	PatchOperations []SecurityAssessmentCheckPatchOperation `pulumi:"patchOperations"`
	// Provides information on whether the check is related to a CIS Oracle Database Benchmark recommendation, STIG rule, GDPR Article/Recital or related to the Oracle Best Practice.
	References []SecurityAssessmentCheckReference `pulumi:"references"`
	// The explanation of the issue in this check. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
	Remarks *string `pulumi:"remarks"`
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecurityAssessmentId *string `pulumi:"securityAssessmentId"`
	// The severity of the check as suggested by Data Safe security assessment. This will be the default severity in the template baseline security assessment.
	SuggestedSeverity *string `pulumi:"suggestedSeverity"`
	// The short title for the check.
	Title *string `pulumi:"title"`
}

type SecurityAssessmentCheckState struct {
	// The category to which the check belongs to.
	Category pulumi.StringPtrInput
	// A unique identifier for the check.
	Key pulumi.StringPtrInput
	// Provides a recommended approach to take to remediate the check reported.
	Oneline pulumi.StringPtrInput
	// (Updatable)
	PatchOperations SecurityAssessmentCheckPatchOperationArrayInput
	// Provides information on whether the check is related to a CIS Oracle Database Benchmark recommendation, STIG rule, GDPR Article/Recital or related to the Oracle Best Practice.
	References SecurityAssessmentCheckReferenceArrayInput
	// The explanation of the issue in this check. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
	Remarks pulumi.StringPtrInput
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecurityAssessmentId pulumi.StringPtrInput
	// The severity of the check as suggested by Data Safe security assessment. This will be the default severity in the template baseline security assessment.
	SuggestedSeverity pulumi.StringPtrInput
	// The short title for the check.
	Title pulumi.StringPtrInput
}

func (SecurityAssessmentCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityAssessmentCheckState)(nil)).Elem()
}

type securityAssessmentCheckArgs struct {
	// (Updatable)
	PatchOperations []SecurityAssessmentCheckPatchOperation `pulumi:"patchOperations"`
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecurityAssessmentId string `pulumi:"securityAssessmentId"`
}

// The set of arguments for constructing a SecurityAssessmentCheck resource.
type SecurityAssessmentCheckArgs struct {
	// (Updatable)
	PatchOperations SecurityAssessmentCheckPatchOperationArrayInput
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecurityAssessmentId pulumi.StringInput
}

func (SecurityAssessmentCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityAssessmentCheckArgs)(nil)).Elem()
}

type SecurityAssessmentCheckInput interface {
	pulumi.Input

	ToSecurityAssessmentCheckOutput() SecurityAssessmentCheckOutput
	ToSecurityAssessmentCheckOutputWithContext(ctx context.Context) SecurityAssessmentCheckOutput
}

func (*SecurityAssessmentCheck) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityAssessmentCheck)(nil)).Elem()
}

func (i *SecurityAssessmentCheck) ToSecurityAssessmentCheckOutput() SecurityAssessmentCheckOutput {
	return i.ToSecurityAssessmentCheckOutputWithContext(context.Background())
}

func (i *SecurityAssessmentCheck) ToSecurityAssessmentCheckOutputWithContext(ctx context.Context) SecurityAssessmentCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAssessmentCheckOutput)
}

// SecurityAssessmentCheckArrayInput is an input type that accepts SecurityAssessmentCheckArray and SecurityAssessmentCheckArrayOutput values.
// You can construct a concrete instance of `SecurityAssessmentCheckArrayInput` via:
//
//	SecurityAssessmentCheckArray{ SecurityAssessmentCheckArgs{...} }
type SecurityAssessmentCheckArrayInput interface {
	pulumi.Input

	ToSecurityAssessmentCheckArrayOutput() SecurityAssessmentCheckArrayOutput
	ToSecurityAssessmentCheckArrayOutputWithContext(context.Context) SecurityAssessmentCheckArrayOutput
}

type SecurityAssessmentCheckArray []SecurityAssessmentCheckInput

func (SecurityAssessmentCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityAssessmentCheck)(nil)).Elem()
}

func (i SecurityAssessmentCheckArray) ToSecurityAssessmentCheckArrayOutput() SecurityAssessmentCheckArrayOutput {
	return i.ToSecurityAssessmentCheckArrayOutputWithContext(context.Background())
}

func (i SecurityAssessmentCheckArray) ToSecurityAssessmentCheckArrayOutputWithContext(ctx context.Context) SecurityAssessmentCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAssessmentCheckArrayOutput)
}

// SecurityAssessmentCheckMapInput is an input type that accepts SecurityAssessmentCheckMap and SecurityAssessmentCheckMapOutput values.
// You can construct a concrete instance of `SecurityAssessmentCheckMapInput` via:
//
//	SecurityAssessmentCheckMap{ "key": SecurityAssessmentCheckArgs{...} }
type SecurityAssessmentCheckMapInput interface {
	pulumi.Input

	ToSecurityAssessmentCheckMapOutput() SecurityAssessmentCheckMapOutput
	ToSecurityAssessmentCheckMapOutputWithContext(context.Context) SecurityAssessmentCheckMapOutput
}

type SecurityAssessmentCheckMap map[string]SecurityAssessmentCheckInput

func (SecurityAssessmentCheckMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityAssessmentCheck)(nil)).Elem()
}

func (i SecurityAssessmentCheckMap) ToSecurityAssessmentCheckMapOutput() SecurityAssessmentCheckMapOutput {
	return i.ToSecurityAssessmentCheckMapOutputWithContext(context.Background())
}

func (i SecurityAssessmentCheckMap) ToSecurityAssessmentCheckMapOutputWithContext(ctx context.Context) SecurityAssessmentCheckMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAssessmentCheckMapOutput)
}

type SecurityAssessmentCheckOutput struct{ *pulumi.OutputState }

func (SecurityAssessmentCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityAssessmentCheck)(nil)).Elem()
}

func (o SecurityAssessmentCheckOutput) ToSecurityAssessmentCheckOutput() SecurityAssessmentCheckOutput {
	return o
}

func (o SecurityAssessmentCheckOutput) ToSecurityAssessmentCheckOutputWithContext(ctx context.Context) SecurityAssessmentCheckOutput {
	return o
}

// The category to which the check belongs to.
func (o SecurityAssessmentCheckOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentCheck) pulumi.StringOutput { return v.Category }).(pulumi.StringOutput)
}

// A unique identifier for the check.
func (o SecurityAssessmentCheckOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentCheck) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Provides a recommended approach to take to remediate the check reported.
func (o SecurityAssessmentCheckOutput) Oneline() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentCheck) pulumi.StringOutput { return v.Oneline }).(pulumi.StringOutput)
}

// (Updatable)
func (o SecurityAssessmentCheckOutput) PatchOperations() SecurityAssessmentCheckPatchOperationArrayOutput {
	return o.ApplyT(func(v *SecurityAssessmentCheck) SecurityAssessmentCheckPatchOperationArrayOutput {
		return v.PatchOperations
	}).(SecurityAssessmentCheckPatchOperationArrayOutput)
}

// Provides information on whether the check is related to a CIS Oracle Database Benchmark recommendation, STIG rule, GDPR Article/Recital or related to the Oracle Best Practice.
func (o SecurityAssessmentCheckOutput) References() SecurityAssessmentCheckReferenceArrayOutput {
	return o.ApplyT(func(v *SecurityAssessmentCheck) SecurityAssessmentCheckReferenceArrayOutput { return v.References }).(SecurityAssessmentCheckReferenceArrayOutput)
}

// The explanation of the issue in this check. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
func (o SecurityAssessmentCheckOutput) Remarks() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentCheck) pulumi.StringOutput { return v.Remarks }).(pulumi.StringOutput)
}

// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o SecurityAssessmentCheckOutput) SecurityAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentCheck) pulumi.StringOutput { return v.SecurityAssessmentId }).(pulumi.StringOutput)
}

// The severity of the check as suggested by Data Safe security assessment. This will be the default severity in the template baseline security assessment.
func (o SecurityAssessmentCheckOutput) SuggestedSeverity() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentCheck) pulumi.StringOutput { return v.SuggestedSeverity }).(pulumi.StringOutput)
}

// The short title for the check.
func (o SecurityAssessmentCheckOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentCheck) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

type SecurityAssessmentCheckArrayOutput struct{ *pulumi.OutputState }

func (SecurityAssessmentCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityAssessmentCheck)(nil)).Elem()
}

func (o SecurityAssessmentCheckArrayOutput) ToSecurityAssessmentCheckArrayOutput() SecurityAssessmentCheckArrayOutput {
	return o
}

func (o SecurityAssessmentCheckArrayOutput) ToSecurityAssessmentCheckArrayOutputWithContext(ctx context.Context) SecurityAssessmentCheckArrayOutput {
	return o
}

func (o SecurityAssessmentCheckArrayOutput) Index(i pulumi.IntInput) SecurityAssessmentCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityAssessmentCheck {
		return vs[0].([]*SecurityAssessmentCheck)[vs[1].(int)]
	}).(SecurityAssessmentCheckOutput)
}

type SecurityAssessmentCheckMapOutput struct{ *pulumi.OutputState }

func (SecurityAssessmentCheckMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityAssessmentCheck)(nil)).Elem()
}

func (o SecurityAssessmentCheckMapOutput) ToSecurityAssessmentCheckMapOutput() SecurityAssessmentCheckMapOutput {
	return o
}

func (o SecurityAssessmentCheckMapOutput) ToSecurityAssessmentCheckMapOutputWithContext(ctx context.Context) SecurityAssessmentCheckMapOutput {
	return o
}

func (o SecurityAssessmentCheckMapOutput) MapIndex(k pulumi.StringInput) SecurityAssessmentCheckOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityAssessmentCheck {
		return vs[0].(map[string]*SecurityAssessmentCheck)[vs[1].(string)]
	}).(SecurityAssessmentCheckOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAssessmentCheckInput)(nil)).Elem(), &SecurityAssessmentCheck{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAssessmentCheckArrayInput)(nil)).Elem(), SecurityAssessmentCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAssessmentCheckMapInput)(nil)).Elem(), SecurityAssessmentCheckMap{})
	pulumi.RegisterOutputType(SecurityAssessmentCheckOutput{})
	pulumi.RegisterOutputType(SecurityAssessmentCheckArrayOutput{})
	pulumi.RegisterOutputType(SecurityAssessmentCheckMapOutput{})
}
