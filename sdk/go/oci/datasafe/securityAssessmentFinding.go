// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Security Assessment Finding resource in Oracle Cloud Infrastructure Data Safe service.
//
//	Patches one or more findings in the specified template baseline type security assessment. Use it to modify max allowed risk level in template baseline.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.NewSecurityAssessmentFinding(ctx, "test_security_assessment_finding", &datasafe.SecurityAssessmentFindingArgs{
//				SecurityAssessmentId: pulumi.Any(testSecurityAssessment.Id),
//				PatchOperations: datasafe.SecurityAssessmentFindingPatchOperationArray{
//					&datasafe.SecurityAssessmentFindingPatchOperationArgs{
//						Operation: pulumi.Any(securityAssessmentFindingPatchOperationsOperation),
//						Selection: pulumi.Any(securityAssessmentFindingPatchOperationsSelection),
//						Value:     pulumi.Any(securityAssessmentFindingPatchOperationsValue),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SecurityAssessmentFindings can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataSafe/securityAssessmentFinding:SecurityAssessmentFinding test_security_assessment_finding "securityAssessments/{securityAssessmentId}/findings"
// ```
type SecurityAssessmentFinding struct {
	pulumi.CustomResourceState

	// The OCID of the assessment that generated this finding.
	AssessmentId pulumi.StringOutput `pulumi:"assessmentId"`
	// The category to which the finding belongs to.
	Category pulumi.StringOutput `pulumi:"category"`
	// The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
	Details pulumi.StringArrayOutput `pulumi:"details"`
	// Determines if this risk level has changed on the target database since the last time 'severity' was modified by user.
	HasTargetDbRiskLevelChanged pulumi.BoolOutput `pulumi:"hasTargetDbRiskLevelChanged"`
	// Determines if this risk level was modified by user.
	IsRiskModified pulumi.BoolOutput `pulumi:"isRiskModified"`
	// Indicates whether a given finding is marked as topFinding or not.
	IsTopFinding pulumi.BoolOutput `pulumi:"isTopFinding"`
	// User provided reason for accepting or modifying this finding if they choose to do so.
	Justification pulumi.StringOutput `pulumi:"justification"`
	// The unique finding key. This is a system-generated identifier. To get the finding key for a finding, use ListFindings.
	Key pulumi.StringOutput `pulumi:"key"`
	// Details about the current state of the finding.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Provides a recommended approach to take to remediate the finding reported.
	Oneline pulumi.StringOutput `pulumi:"oneline"`
	// The severity of the finding as determined by security assessment. This cannot be modified by user.
	OracleDefinedSeverity pulumi.StringOutput `pulumi:"oracleDefinedSeverity"`
	// (Updatable)
	PatchOperations SecurityAssessmentFindingPatchOperationArrayOutput `pulumi:"patchOperations"`
	// Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
	References SecurityAssessmentFindingReferenceArrayOutput `pulumi:"references"`
	// The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
	Remarks pulumi.StringOutput `pulumi:"remarks"`
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecurityAssessmentId pulumi.StringOutput `pulumi:"securityAssessmentId"`
	// The severity of the finding as determined by security assessment and is same as oracleDefinedSeverity, unless modified by user.
	Severity pulumi.StringOutput `pulumi:"severity"`
	// The current state of the finding.
	State pulumi.StringOutput `pulumi:"state"`
	// The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
	Summary pulumi.StringOutput `pulumi:"summary"`
	// The OCID of the target database.
	TargetId pulumi.StringOutput `pulumi:"targetId"`
	// The date and time the risk level of finding was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// The time until which the change in severity(deferred / modified) of this finding is valid.
	TimeValidUntil pulumi.StringOutput `pulumi:"timeValidUntil"`
	// The short title for the finding.
	Title pulumi.StringOutput `pulumi:"title"`
}

// NewSecurityAssessmentFinding registers a new resource with the given unique name, arguments, and options.
func NewSecurityAssessmentFinding(ctx *pulumi.Context,
	name string, args *SecurityAssessmentFindingArgs, opts ...pulumi.ResourceOption) (*SecurityAssessmentFinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityAssessmentId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityAssessmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityAssessmentFinding
	err := ctx.RegisterResource("oci:DataSafe/securityAssessmentFinding:SecurityAssessmentFinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityAssessmentFinding gets an existing SecurityAssessmentFinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityAssessmentFinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityAssessmentFindingState, opts ...pulumi.ResourceOption) (*SecurityAssessmentFinding, error) {
	var resource SecurityAssessmentFinding
	err := ctx.ReadResource("oci:DataSafe/securityAssessmentFinding:SecurityAssessmentFinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityAssessmentFinding resources.
type securityAssessmentFindingState struct {
	// The OCID of the assessment that generated this finding.
	AssessmentId *string `pulumi:"assessmentId"`
	// The category to which the finding belongs to.
	Category *string `pulumi:"category"`
	// The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
	Details []string `pulumi:"details"`
	// Determines if this risk level has changed on the target database since the last time 'severity' was modified by user.
	HasTargetDbRiskLevelChanged *bool `pulumi:"hasTargetDbRiskLevelChanged"`
	// Determines if this risk level was modified by user.
	IsRiskModified *bool `pulumi:"isRiskModified"`
	// Indicates whether a given finding is marked as topFinding or not.
	IsTopFinding *bool `pulumi:"isTopFinding"`
	// User provided reason for accepting or modifying this finding if they choose to do so.
	Justification *string `pulumi:"justification"`
	// The unique finding key. This is a system-generated identifier. To get the finding key for a finding, use ListFindings.
	Key *string `pulumi:"key"`
	// Details about the current state of the finding.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Provides a recommended approach to take to remediate the finding reported.
	Oneline *string `pulumi:"oneline"`
	// The severity of the finding as determined by security assessment. This cannot be modified by user.
	OracleDefinedSeverity *string `pulumi:"oracleDefinedSeverity"`
	// (Updatable)
	PatchOperations []SecurityAssessmentFindingPatchOperation `pulumi:"patchOperations"`
	// Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
	References []SecurityAssessmentFindingReference `pulumi:"references"`
	// The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
	Remarks *string `pulumi:"remarks"`
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecurityAssessmentId *string `pulumi:"securityAssessmentId"`
	// The severity of the finding as determined by security assessment and is same as oracleDefinedSeverity, unless modified by user.
	Severity *string `pulumi:"severity"`
	// The current state of the finding.
	State *string `pulumi:"state"`
	// The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
	Summary *string `pulumi:"summary"`
	// The OCID of the target database.
	TargetId *string `pulumi:"targetId"`
	// The date and time the risk level of finding was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The time until which the change in severity(deferred / modified) of this finding is valid.
	TimeValidUntil *string `pulumi:"timeValidUntil"`
	// The short title for the finding.
	Title *string `pulumi:"title"`
}

type SecurityAssessmentFindingState struct {
	// The OCID of the assessment that generated this finding.
	AssessmentId pulumi.StringPtrInput
	// The category to which the finding belongs to.
	Category pulumi.StringPtrInput
	// The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
	Details pulumi.StringArrayInput
	// Determines if this risk level has changed on the target database since the last time 'severity' was modified by user.
	HasTargetDbRiskLevelChanged pulumi.BoolPtrInput
	// Determines if this risk level was modified by user.
	IsRiskModified pulumi.BoolPtrInput
	// Indicates whether a given finding is marked as topFinding or not.
	IsTopFinding pulumi.BoolPtrInput
	// User provided reason for accepting or modifying this finding if they choose to do so.
	Justification pulumi.StringPtrInput
	// The unique finding key. This is a system-generated identifier. To get the finding key for a finding, use ListFindings.
	Key pulumi.StringPtrInput
	// Details about the current state of the finding.
	LifecycleDetails pulumi.StringPtrInput
	// Provides a recommended approach to take to remediate the finding reported.
	Oneline pulumi.StringPtrInput
	// The severity of the finding as determined by security assessment. This cannot be modified by user.
	OracleDefinedSeverity pulumi.StringPtrInput
	// (Updatable)
	PatchOperations SecurityAssessmentFindingPatchOperationArrayInput
	// Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
	References SecurityAssessmentFindingReferenceArrayInput
	// The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
	Remarks pulumi.StringPtrInput
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecurityAssessmentId pulumi.StringPtrInput
	// The severity of the finding as determined by security assessment and is same as oracleDefinedSeverity, unless modified by user.
	Severity pulumi.StringPtrInput
	// The current state of the finding.
	State pulumi.StringPtrInput
	// The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
	Summary pulumi.StringPtrInput
	// The OCID of the target database.
	TargetId pulumi.StringPtrInput
	// The date and time the risk level of finding was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
	// The time until which the change in severity(deferred / modified) of this finding is valid.
	TimeValidUntil pulumi.StringPtrInput
	// The short title for the finding.
	Title pulumi.StringPtrInput
}

func (SecurityAssessmentFindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityAssessmentFindingState)(nil)).Elem()
}

type securityAssessmentFindingArgs struct {
	// (Updatable)
	PatchOperations []SecurityAssessmentFindingPatchOperation `pulumi:"patchOperations"`
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecurityAssessmentId string `pulumi:"securityAssessmentId"`
}

// The set of arguments for constructing a SecurityAssessmentFinding resource.
type SecurityAssessmentFindingArgs struct {
	// (Updatable)
	PatchOperations SecurityAssessmentFindingPatchOperationArrayInput
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SecurityAssessmentId pulumi.StringInput
}

func (SecurityAssessmentFindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityAssessmentFindingArgs)(nil)).Elem()
}

type SecurityAssessmentFindingInput interface {
	pulumi.Input

	ToSecurityAssessmentFindingOutput() SecurityAssessmentFindingOutput
	ToSecurityAssessmentFindingOutputWithContext(ctx context.Context) SecurityAssessmentFindingOutput
}

func (*SecurityAssessmentFinding) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityAssessmentFinding)(nil)).Elem()
}

func (i *SecurityAssessmentFinding) ToSecurityAssessmentFindingOutput() SecurityAssessmentFindingOutput {
	return i.ToSecurityAssessmentFindingOutputWithContext(context.Background())
}

func (i *SecurityAssessmentFinding) ToSecurityAssessmentFindingOutputWithContext(ctx context.Context) SecurityAssessmentFindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAssessmentFindingOutput)
}

// SecurityAssessmentFindingArrayInput is an input type that accepts SecurityAssessmentFindingArray and SecurityAssessmentFindingArrayOutput values.
// You can construct a concrete instance of `SecurityAssessmentFindingArrayInput` via:
//
//	SecurityAssessmentFindingArray{ SecurityAssessmentFindingArgs{...} }
type SecurityAssessmentFindingArrayInput interface {
	pulumi.Input

	ToSecurityAssessmentFindingArrayOutput() SecurityAssessmentFindingArrayOutput
	ToSecurityAssessmentFindingArrayOutputWithContext(context.Context) SecurityAssessmentFindingArrayOutput
}

type SecurityAssessmentFindingArray []SecurityAssessmentFindingInput

func (SecurityAssessmentFindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityAssessmentFinding)(nil)).Elem()
}

func (i SecurityAssessmentFindingArray) ToSecurityAssessmentFindingArrayOutput() SecurityAssessmentFindingArrayOutput {
	return i.ToSecurityAssessmentFindingArrayOutputWithContext(context.Background())
}

func (i SecurityAssessmentFindingArray) ToSecurityAssessmentFindingArrayOutputWithContext(ctx context.Context) SecurityAssessmentFindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAssessmentFindingArrayOutput)
}

// SecurityAssessmentFindingMapInput is an input type that accepts SecurityAssessmentFindingMap and SecurityAssessmentFindingMapOutput values.
// You can construct a concrete instance of `SecurityAssessmentFindingMapInput` via:
//
//	SecurityAssessmentFindingMap{ "key": SecurityAssessmentFindingArgs{...} }
type SecurityAssessmentFindingMapInput interface {
	pulumi.Input

	ToSecurityAssessmentFindingMapOutput() SecurityAssessmentFindingMapOutput
	ToSecurityAssessmentFindingMapOutputWithContext(context.Context) SecurityAssessmentFindingMapOutput
}

type SecurityAssessmentFindingMap map[string]SecurityAssessmentFindingInput

func (SecurityAssessmentFindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityAssessmentFinding)(nil)).Elem()
}

func (i SecurityAssessmentFindingMap) ToSecurityAssessmentFindingMapOutput() SecurityAssessmentFindingMapOutput {
	return i.ToSecurityAssessmentFindingMapOutputWithContext(context.Background())
}

func (i SecurityAssessmentFindingMap) ToSecurityAssessmentFindingMapOutputWithContext(ctx context.Context) SecurityAssessmentFindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAssessmentFindingMapOutput)
}

type SecurityAssessmentFindingOutput struct{ *pulumi.OutputState }

func (SecurityAssessmentFindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityAssessmentFinding)(nil)).Elem()
}

func (o SecurityAssessmentFindingOutput) ToSecurityAssessmentFindingOutput() SecurityAssessmentFindingOutput {
	return o
}

func (o SecurityAssessmentFindingOutput) ToSecurityAssessmentFindingOutputWithContext(ctx context.Context) SecurityAssessmentFindingOutput {
	return o
}

// The OCID of the assessment that generated this finding.
func (o SecurityAssessmentFindingOutput) AssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.AssessmentId }).(pulumi.StringOutput)
}

// The category to which the finding belongs to.
func (o SecurityAssessmentFindingOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.Category }).(pulumi.StringOutput)
}

// The details of the finding. Provides detailed information to explain the finding summary, typically results from the assessed database, followed by any recommendations for changes.
func (o SecurityAssessmentFindingOutput) Details() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringArrayOutput { return v.Details }).(pulumi.StringArrayOutput)
}

// Determines if this risk level has changed on the target database since the last time 'severity' was modified by user.
func (o SecurityAssessmentFindingOutput) HasTargetDbRiskLevelChanged() pulumi.BoolOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.BoolOutput { return v.HasTargetDbRiskLevelChanged }).(pulumi.BoolOutput)
}

// Determines if this risk level was modified by user.
func (o SecurityAssessmentFindingOutput) IsRiskModified() pulumi.BoolOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.BoolOutput { return v.IsRiskModified }).(pulumi.BoolOutput)
}

// Indicates whether a given finding is marked as topFinding or not.
func (o SecurityAssessmentFindingOutput) IsTopFinding() pulumi.BoolOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.BoolOutput { return v.IsTopFinding }).(pulumi.BoolOutput)
}

// User provided reason for accepting or modifying this finding if they choose to do so.
func (o SecurityAssessmentFindingOutput) Justification() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.Justification }).(pulumi.StringOutput)
}

// The unique finding key. This is a system-generated identifier. To get the finding key for a finding, use ListFindings.
func (o SecurityAssessmentFindingOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Details about the current state of the finding.
func (o SecurityAssessmentFindingOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Provides a recommended approach to take to remediate the finding reported.
func (o SecurityAssessmentFindingOutput) Oneline() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.Oneline }).(pulumi.StringOutput)
}

// The severity of the finding as determined by security assessment. This cannot be modified by user.
func (o SecurityAssessmentFindingOutput) OracleDefinedSeverity() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.OracleDefinedSeverity }).(pulumi.StringOutput)
}

// (Updatable)
func (o SecurityAssessmentFindingOutput) PatchOperations() SecurityAssessmentFindingPatchOperationArrayOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) SecurityAssessmentFindingPatchOperationArrayOutput {
		return v.PatchOperations
	}).(SecurityAssessmentFindingPatchOperationArrayOutput)
}

// Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
func (o SecurityAssessmentFindingOutput) References() SecurityAssessmentFindingReferenceArrayOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) SecurityAssessmentFindingReferenceArrayOutput { return v.References }).(SecurityAssessmentFindingReferenceArrayOutput)
}

// The explanation of the issue in this finding. It explains the reason for the rule and, if a risk is reported, it may also explain the recommended actions for remediation.
func (o SecurityAssessmentFindingOutput) Remarks() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.Remarks }).(pulumi.StringOutput)
}

// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o SecurityAssessmentFindingOutput) SecurityAssessmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.SecurityAssessmentId }).(pulumi.StringOutput)
}

// The severity of the finding as determined by security assessment and is same as oracleDefinedSeverity, unless modified by user.
func (o SecurityAssessmentFindingOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

// The current state of the finding.
func (o SecurityAssessmentFindingOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The brief summary of the finding. When the finding is informational, the summary typically reports only the number of data elements that were examined.
func (o SecurityAssessmentFindingOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.Summary }).(pulumi.StringOutput)
}

// The OCID of the target database.
func (o SecurityAssessmentFindingOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

// The date and time the risk level of finding was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o SecurityAssessmentFindingOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The time until which the change in severity(deferred / modified) of this finding is valid.
func (o SecurityAssessmentFindingOutput) TimeValidUntil() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.TimeValidUntil }).(pulumi.StringOutput)
}

// The short title for the finding.
func (o SecurityAssessmentFindingOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityAssessmentFinding) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

type SecurityAssessmentFindingArrayOutput struct{ *pulumi.OutputState }

func (SecurityAssessmentFindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityAssessmentFinding)(nil)).Elem()
}

func (o SecurityAssessmentFindingArrayOutput) ToSecurityAssessmentFindingArrayOutput() SecurityAssessmentFindingArrayOutput {
	return o
}

func (o SecurityAssessmentFindingArrayOutput) ToSecurityAssessmentFindingArrayOutputWithContext(ctx context.Context) SecurityAssessmentFindingArrayOutput {
	return o
}

func (o SecurityAssessmentFindingArrayOutput) Index(i pulumi.IntInput) SecurityAssessmentFindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityAssessmentFinding {
		return vs[0].([]*SecurityAssessmentFinding)[vs[1].(int)]
	}).(SecurityAssessmentFindingOutput)
}

type SecurityAssessmentFindingMapOutput struct{ *pulumi.OutputState }

func (SecurityAssessmentFindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityAssessmentFinding)(nil)).Elem()
}

func (o SecurityAssessmentFindingMapOutput) ToSecurityAssessmentFindingMapOutput() SecurityAssessmentFindingMapOutput {
	return o
}

func (o SecurityAssessmentFindingMapOutput) ToSecurityAssessmentFindingMapOutputWithContext(ctx context.Context) SecurityAssessmentFindingMapOutput {
	return o
}

func (o SecurityAssessmentFindingMapOutput) MapIndex(k pulumi.StringInput) SecurityAssessmentFindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityAssessmentFinding {
		return vs[0].(map[string]*SecurityAssessmentFinding)[vs[1].(string)]
	}).(SecurityAssessmentFindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAssessmentFindingInput)(nil)).Elem(), &SecurityAssessmentFinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAssessmentFindingArrayInput)(nil)).Elem(), SecurityAssessmentFindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityAssessmentFindingMapInput)(nil)).Elem(), SecurityAssessmentFindingMap{})
	pulumi.RegisterOutputType(SecurityAssessmentFindingOutput{})
	pulumi.RegisterOutputType(SecurityAssessmentFindingArrayOutput{})
	pulumi.RegisterOutputType(SecurityAssessmentFindingMapOutput{})
}
