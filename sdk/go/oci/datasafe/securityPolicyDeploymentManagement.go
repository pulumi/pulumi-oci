// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SecurityPolicyDeploymentManagement struct {
	pulumi.CustomResourceState

	CompartmentId    pulumi.StringOutput `pulumi:"compartmentId"`
	DefinedTags      pulumi.MapOutput    `pulumi:"definedTags"`
	Description      pulumi.StringOutput `pulumi:"description"`
	DisplayName      pulumi.StringOutput `pulumi:"displayName"`
	FreeformTags     pulumi.MapOutput    `pulumi:"freeformTags"`
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
	State            pulumi.StringOutput `pulumi:"state"`
	SystemTags       pulumi.MapOutput    `pulumi:"systemTags"`
	TargetId         pulumi.StringOutput `pulumi:"targetId"`
	TimeCreated      pulumi.StringOutput `pulumi:"timeCreated"`
	TimeUpdated      pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewSecurityPolicyDeploymentManagement registers a new resource with the given unique name, arguments, and options.
func NewSecurityPolicyDeploymentManagement(ctx *pulumi.Context,
	name string, args *SecurityPolicyDeploymentManagementArgs, opts ...pulumi.ResourceOption) (*SecurityPolicyDeploymentManagement, error) {
	if args == nil {
		args = &SecurityPolicyDeploymentManagementArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityPolicyDeploymentManagement
	err := ctx.RegisterResource("oci:DataSafe/securityPolicyDeploymentManagement:SecurityPolicyDeploymentManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityPolicyDeploymentManagement gets an existing SecurityPolicyDeploymentManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityPolicyDeploymentManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityPolicyDeploymentManagementState, opts ...pulumi.ResourceOption) (*SecurityPolicyDeploymentManagement, error) {
	var resource SecurityPolicyDeploymentManagement
	err := ctx.ReadResource("oci:DataSafe/securityPolicyDeploymentManagement:SecurityPolicyDeploymentManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityPolicyDeploymentManagement resources.
type securityPolicyDeploymentManagementState struct {
	CompartmentId    *string                `pulumi:"compartmentId"`
	DefinedTags      map[string]interface{} `pulumi:"definedTags"`
	Description      *string                `pulumi:"description"`
	DisplayName      *string                `pulumi:"displayName"`
	FreeformTags     map[string]interface{} `pulumi:"freeformTags"`
	LifecycleDetails *string                `pulumi:"lifecycleDetails"`
	SecurityPolicyId *string                `pulumi:"securityPolicyId"`
	State            *string                `pulumi:"state"`
	SystemTags       map[string]interface{} `pulumi:"systemTags"`
	TargetId         *string                `pulumi:"targetId"`
	TimeCreated      *string                `pulumi:"timeCreated"`
	TimeUpdated      *string                `pulumi:"timeUpdated"`
}

type SecurityPolicyDeploymentManagementState struct {
	CompartmentId    pulumi.StringPtrInput
	DefinedTags      pulumi.MapInput
	Description      pulumi.StringPtrInput
	DisplayName      pulumi.StringPtrInput
	FreeformTags     pulumi.MapInput
	LifecycleDetails pulumi.StringPtrInput
	SecurityPolicyId pulumi.StringPtrInput
	State            pulumi.StringPtrInput
	SystemTags       pulumi.MapInput
	TargetId         pulumi.StringPtrInput
	TimeCreated      pulumi.StringPtrInput
	TimeUpdated      pulumi.StringPtrInput
}

func (SecurityPolicyDeploymentManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityPolicyDeploymentManagementState)(nil)).Elem()
}

type securityPolicyDeploymentManagementArgs struct {
	CompartmentId *string                `pulumi:"compartmentId"`
	DefinedTags   map[string]interface{} `pulumi:"definedTags"`
	Description   *string                `pulumi:"description"`
	DisplayName   *string                `pulumi:"displayName"`
	FreeformTags  map[string]interface{} `pulumi:"freeformTags"`
	TargetId      *string                `pulumi:"targetId"`
}

// The set of arguments for constructing a SecurityPolicyDeploymentManagement resource.
type SecurityPolicyDeploymentManagementArgs struct {
	CompartmentId pulumi.StringPtrInput
	DefinedTags   pulumi.MapInput
	Description   pulumi.StringPtrInput
	DisplayName   pulumi.StringPtrInput
	FreeformTags  pulumi.MapInput
	TargetId      pulumi.StringPtrInput
}

func (SecurityPolicyDeploymentManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityPolicyDeploymentManagementArgs)(nil)).Elem()
}

type SecurityPolicyDeploymentManagementInput interface {
	pulumi.Input

	ToSecurityPolicyDeploymentManagementOutput() SecurityPolicyDeploymentManagementOutput
	ToSecurityPolicyDeploymentManagementOutputWithContext(ctx context.Context) SecurityPolicyDeploymentManagementOutput
}

func (*SecurityPolicyDeploymentManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyDeploymentManagement)(nil)).Elem()
}

func (i *SecurityPolicyDeploymentManagement) ToSecurityPolicyDeploymentManagementOutput() SecurityPolicyDeploymentManagementOutput {
	return i.ToSecurityPolicyDeploymentManagementOutputWithContext(context.Background())
}

func (i *SecurityPolicyDeploymentManagement) ToSecurityPolicyDeploymentManagementOutputWithContext(ctx context.Context) SecurityPolicyDeploymentManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyDeploymentManagementOutput)
}

func (i *SecurityPolicyDeploymentManagement) ToOutput(ctx context.Context) pulumix.Output[*SecurityPolicyDeploymentManagement] {
	return pulumix.Output[*SecurityPolicyDeploymentManagement]{
		OutputState: i.ToSecurityPolicyDeploymentManagementOutputWithContext(ctx).OutputState,
	}
}

// SecurityPolicyDeploymentManagementArrayInput is an input type that accepts SecurityPolicyDeploymentManagementArray and SecurityPolicyDeploymentManagementArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyDeploymentManagementArrayInput` via:
//
//	SecurityPolicyDeploymentManagementArray{ SecurityPolicyDeploymentManagementArgs{...} }
type SecurityPolicyDeploymentManagementArrayInput interface {
	pulumi.Input

	ToSecurityPolicyDeploymentManagementArrayOutput() SecurityPolicyDeploymentManagementArrayOutput
	ToSecurityPolicyDeploymentManagementArrayOutputWithContext(context.Context) SecurityPolicyDeploymentManagementArrayOutput
}

type SecurityPolicyDeploymentManagementArray []SecurityPolicyDeploymentManagementInput

func (SecurityPolicyDeploymentManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityPolicyDeploymentManagement)(nil)).Elem()
}

func (i SecurityPolicyDeploymentManagementArray) ToSecurityPolicyDeploymentManagementArrayOutput() SecurityPolicyDeploymentManagementArrayOutput {
	return i.ToSecurityPolicyDeploymentManagementArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyDeploymentManagementArray) ToSecurityPolicyDeploymentManagementArrayOutputWithContext(ctx context.Context) SecurityPolicyDeploymentManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyDeploymentManagementArrayOutput)
}

func (i SecurityPolicyDeploymentManagementArray) ToOutput(ctx context.Context) pulumix.Output[[]*SecurityPolicyDeploymentManagement] {
	return pulumix.Output[[]*SecurityPolicyDeploymentManagement]{
		OutputState: i.ToSecurityPolicyDeploymentManagementArrayOutputWithContext(ctx).OutputState,
	}
}

// SecurityPolicyDeploymentManagementMapInput is an input type that accepts SecurityPolicyDeploymentManagementMap and SecurityPolicyDeploymentManagementMapOutput values.
// You can construct a concrete instance of `SecurityPolicyDeploymentManagementMapInput` via:
//
//	SecurityPolicyDeploymentManagementMap{ "key": SecurityPolicyDeploymentManagementArgs{...} }
type SecurityPolicyDeploymentManagementMapInput interface {
	pulumi.Input

	ToSecurityPolicyDeploymentManagementMapOutput() SecurityPolicyDeploymentManagementMapOutput
	ToSecurityPolicyDeploymentManagementMapOutputWithContext(context.Context) SecurityPolicyDeploymentManagementMapOutput
}

type SecurityPolicyDeploymentManagementMap map[string]SecurityPolicyDeploymentManagementInput

func (SecurityPolicyDeploymentManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityPolicyDeploymentManagement)(nil)).Elem()
}

func (i SecurityPolicyDeploymentManagementMap) ToSecurityPolicyDeploymentManagementMapOutput() SecurityPolicyDeploymentManagementMapOutput {
	return i.ToSecurityPolicyDeploymentManagementMapOutputWithContext(context.Background())
}

func (i SecurityPolicyDeploymentManagementMap) ToSecurityPolicyDeploymentManagementMapOutputWithContext(ctx context.Context) SecurityPolicyDeploymentManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyDeploymentManagementMapOutput)
}

func (i SecurityPolicyDeploymentManagementMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SecurityPolicyDeploymentManagement] {
	return pulumix.Output[map[string]*SecurityPolicyDeploymentManagement]{
		OutputState: i.ToSecurityPolicyDeploymentManagementMapOutputWithContext(ctx).OutputState,
	}
}

type SecurityPolicyDeploymentManagementOutput struct{ *pulumi.OutputState }

func (SecurityPolicyDeploymentManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyDeploymentManagement)(nil)).Elem()
}

func (o SecurityPolicyDeploymentManagementOutput) ToSecurityPolicyDeploymentManagementOutput() SecurityPolicyDeploymentManagementOutput {
	return o
}

func (o SecurityPolicyDeploymentManagementOutput) ToSecurityPolicyDeploymentManagementOutputWithContext(ctx context.Context) SecurityPolicyDeploymentManagementOutput {
	return o
}

func (o SecurityPolicyDeploymentManagementOutput) ToOutput(ctx context.Context) pulumix.Output[*SecurityPolicyDeploymentManagement] {
	return pulumix.Output[*SecurityPolicyDeploymentManagement]{
		OutputState: o.OutputState,
	}
}

func (o SecurityPolicyDeploymentManagementOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o SecurityPolicyDeploymentManagementOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

func (o SecurityPolicyDeploymentManagementOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o SecurityPolicyDeploymentManagementOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o SecurityPolicyDeploymentManagementOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

func (o SecurityPolicyDeploymentManagementOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o SecurityPolicyDeploymentManagementOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

func (o SecurityPolicyDeploymentManagementOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o SecurityPolicyDeploymentManagementOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

func (o SecurityPolicyDeploymentManagementOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

func (o SecurityPolicyDeploymentManagementOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

func (o SecurityPolicyDeploymentManagementOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityPolicyDeploymentManagement) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type SecurityPolicyDeploymentManagementArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyDeploymentManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityPolicyDeploymentManagement)(nil)).Elem()
}

func (o SecurityPolicyDeploymentManagementArrayOutput) ToSecurityPolicyDeploymentManagementArrayOutput() SecurityPolicyDeploymentManagementArrayOutput {
	return o
}

func (o SecurityPolicyDeploymentManagementArrayOutput) ToSecurityPolicyDeploymentManagementArrayOutputWithContext(ctx context.Context) SecurityPolicyDeploymentManagementArrayOutput {
	return o
}

func (o SecurityPolicyDeploymentManagementArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SecurityPolicyDeploymentManagement] {
	return pulumix.Output[[]*SecurityPolicyDeploymentManagement]{
		OutputState: o.OutputState,
	}
}

func (o SecurityPolicyDeploymentManagementArrayOutput) Index(i pulumi.IntInput) SecurityPolicyDeploymentManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityPolicyDeploymentManagement {
		return vs[0].([]*SecurityPolicyDeploymentManagement)[vs[1].(int)]
	}).(SecurityPolicyDeploymentManagementOutput)
}

type SecurityPolicyDeploymentManagementMapOutput struct{ *pulumi.OutputState }

func (SecurityPolicyDeploymentManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityPolicyDeploymentManagement)(nil)).Elem()
}

func (o SecurityPolicyDeploymentManagementMapOutput) ToSecurityPolicyDeploymentManagementMapOutput() SecurityPolicyDeploymentManagementMapOutput {
	return o
}

func (o SecurityPolicyDeploymentManagementMapOutput) ToSecurityPolicyDeploymentManagementMapOutputWithContext(ctx context.Context) SecurityPolicyDeploymentManagementMapOutput {
	return o
}

func (o SecurityPolicyDeploymentManagementMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SecurityPolicyDeploymentManagement] {
	return pulumix.Output[map[string]*SecurityPolicyDeploymentManagement]{
		OutputState: o.OutputState,
	}
}

func (o SecurityPolicyDeploymentManagementMapOutput) MapIndex(k pulumi.StringInput) SecurityPolicyDeploymentManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityPolicyDeploymentManagement {
		return vs[0].(map[string]*SecurityPolicyDeploymentManagement)[vs[1].(string)]
	}).(SecurityPolicyDeploymentManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyDeploymentManagementInput)(nil)).Elem(), &SecurityPolicyDeploymentManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyDeploymentManagementArrayInput)(nil)).Elem(), SecurityPolicyDeploymentManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyDeploymentManagementMapInput)(nil)).Elem(), SecurityPolicyDeploymentManagementMap{})
	pulumi.RegisterOutputType(SecurityPolicyDeploymentManagementOutput{})
	pulumi.RegisterOutputType(SecurityPolicyDeploymentManagementArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyDeploymentManagementMapOutput{})
}
