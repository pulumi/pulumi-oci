// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Sensitive Data Model resource in Oracle Cloud Infrastructure Data Safe service.
//
// Creates a new sensitive data model. If schemas and sensitive types are provided, it automatically runs data discovery
// and adds the discovered columns to the sensitive data model. Otherwise, it creates an empty sensitive data model
// that can be updated later.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.NewSensitiveDataModel(ctx, "test_sensitive_data_model", &DataSafe.SensitiveDataModelArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				TargetId:      pulumi.Any(testTarget.Id),
//				AppSuiteName:  pulumi.Any(sensitiveDataModelAppSuiteName),
//				DefinedTags: pulumi.Map{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				Description: pulumi.Any(sensitiveDataModelDescription),
//				DisplayName: pulumi.Any(sensitiveDataModelDisplayName),
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//				IsAppDefinedRelationDiscoveryEnabled: pulumi.Any(sensitiveDataModelIsAppDefinedRelationDiscoveryEnabled),
//				IsIncludeAllSchemas:                  pulumi.Any(sensitiveDataModelIsIncludeAllSchemas),
//				IsIncludeAllSensitiveTypes:           pulumi.Any(sensitiveDataModelIsIncludeAllSensitiveTypes),
//				IsSampleDataCollectionEnabled:        pulumi.Any(sensitiveDataModelIsSampleDataCollectionEnabled),
//				SchemasForDiscoveries:                pulumi.Any(sensitiveDataModelSchemasForDiscovery),
//				SensitiveTypeIdsForDiscoveries:       pulumi.Any(sensitiveDataModelSensitiveTypeIdsForDiscovery),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// SensitiveDataModels can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataSafe/sensitiveDataModel:SensitiveDataModel test_sensitive_data_model "id"
// ```
type SensitiveDataModel struct {
	pulumi.CustomResourceState

	// (Updatable) The application suite name identifying a collection of applications. It's useful only if maintaining a sensitive data model for a suite of applications.
	AppSuiteName pulumi.StringOutput `pulumi:"appSuiteName"`
	// (Updatable) The OCID of the compartment where the sensitive data model should be created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description of the sensitive data model.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The display name of the sensitive data model. The name does not have to be unique, and it's changeable.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Indicates if data discovery jobs should identify potential application-level (non-dictionary) referential relationships between columns. Note that data discovery automatically identifies and adds database-level (dictionary-defined) relationships. This option helps identify application-level relationships that are not defined in the database dictionary, which in turn, helps identify additional sensitive columns and preserve referential integrity during data masking. It's disabled by default and should be used only if there is a need to identify application-level relationships.
	IsAppDefinedRelationDiscoveryEnabled pulumi.BoolOutput `pulumi:"isAppDefinedRelationDiscoveryEnabled"`
	// Indicates if all the schemas in the associated target database should be scanned by data discovery jobs. If it is set to true, sensitive data is discovered in all schemas (except for schemas maintained by Oracle).
	IsIncludeAllSchemas pulumi.BoolOutput `pulumi:"isIncludeAllSchemas"`
	// Indicates if all the existing sensitive types should be used by data discovery jobs. If it's set to true, the sensitiveTypeIdsForDiscovery attribute is ignored and all sensitive types are used for data discovery.
	IsIncludeAllSensitiveTypes pulumi.BoolOutput `pulumi:"isIncludeAllSensitiveTypes"`
	// (Updatable) Indicates if data discovery jobs should collect and store sample data values for the discovered columns. Sample data helps review the discovered columns and ensure that they actually contain sensitive data. As it collects original data from the target database, it's disabled by default and should be used only if it's acceptable to store sample data in Data Safe's repository in Oracle Cloud. Note that sample data values are not collected for columns with the following data types: LONG, LOB, RAW, XMLTYPE and BFILE.
	IsSampleDataCollectionEnabled pulumi.BoolOutput `pulumi:"isSampleDataCollectionEnabled"`
	// (Updatable) The schemas to be scanned by data discovery jobs.
	SchemasForDiscoveries pulumi.StringArrayOutput `pulumi:"schemasForDiscoveries"`
	// (Updatable) The OCIDs of the sensitive types to be used by data discovery jobs. If OCID of a sensitive category is provided, all its child sensitive types are used for data discovery.
	SensitiveTypeIdsForDiscoveries pulumi.StringArrayOutput `pulumi:"sensitiveTypeIdsForDiscoveries"`
	// The current state of the sensitive data model.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// (Updatable) The OCID of the reference target database to be associated with the sensitive data model. All operations such as performing data discovery and adding columns manually are done in the context of the associated target database.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetId pulumi.StringOutput `pulumi:"targetId"`
	// The date and time the sensitive data model was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the sensitive data model was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewSensitiveDataModel registers a new resource with the given unique name, arguments, and options.
func NewSensitiveDataModel(ctx *pulumi.Context,
	name string, args *SensitiveDataModelArgs, opts ...pulumi.ResourceOption) (*SensitiveDataModel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.TargetId == nil {
		return nil, errors.New("invalid value for required argument 'TargetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SensitiveDataModel
	err := ctx.RegisterResource("oci:DataSafe/sensitiveDataModel:SensitiveDataModel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSensitiveDataModel gets an existing SensitiveDataModel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSensitiveDataModel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SensitiveDataModelState, opts ...pulumi.ResourceOption) (*SensitiveDataModel, error) {
	var resource SensitiveDataModel
	err := ctx.ReadResource("oci:DataSafe/sensitiveDataModel:SensitiveDataModel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SensitiveDataModel resources.
type sensitiveDataModelState struct {
	// (Updatable) The application suite name identifying a collection of applications. It's useful only if maintaining a sensitive data model for a suite of applications.
	AppSuiteName *string `pulumi:"appSuiteName"`
	// (Updatable) The OCID of the compartment where the sensitive data model should be created.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description of the sensitive data model.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the sensitive data model. The name does not have to be unique, and it's changeable.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Indicates if data discovery jobs should identify potential application-level (non-dictionary) referential relationships between columns. Note that data discovery automatically identifies and adds database-level (dictionary-defined) relationships. This option helps identify application-level relationships that are not defined in the database dictionary, which in turn, helps identify additional sensitive columns and preserve referential integrity during data masking. It's disabled by default and should be used only if there is a need to identify application-level relationships.
	IsAppDefinedRelationDiscoveryEnabled *bool `pulumi:"isAppDefinedRelationDiscoveryEnabled"`
	// Indicates if all the schemas in the associated target database should be scanned by data discovery jobs. If it is set to true, sensitive data is discovered in all schemas (except for schemas maintained by Oracle).
	IsIncludeAllSchemas *bool `pulumi:"isIncludeAllSchemas"`
	// Indicates if all the existing sensitive types should be used by data discovery jobs. If it's set to true, the sensitiveTypeIdsForDiscovery attribute is ignored and all sensitive types are used for data discovery.
	IsIncludeAllSensitiveTypes *bool `pulumi:"isIncludeAllSensitiveTypes"`
	// (Updatable) Indicates if data discovery jobs should collect and store sample data values for the discovered columns. Sample data helps review the discovered columns and ensure that they actually contain sensitive data. As it collects original data from the target database, it's disabled by default and should be used only if it's acceptable to store sample data in Data Safe's repository in Oracle Cloud. Note that sample data values are not collected for columns with the following data types: LONG, LOB, RAW, XMLTYPE and BFILE.
	IsSampleDataCollectionEnabled *bool `pulumi:"isSampleDataCollectionEnabled"`
	// (Updatable) The schemas to be scanned by data discovery jobs.
	SchemasForDiscoveries []string `pulumi:"schemasForDiscoveries"`
	// (Updatable) The OCIDs of the sensitive types to be used by data discovery jobs. If OCID of a sensitive category is provided, all its child sensitive types are used for data discovery.
	SensitiveTypeIdsForDiscoveries []string `pulumi:"sensitiveTypeIdsForDiscoveries"`
	// The current state of the sensitive data model.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// (Updatable) The OCID of the reference target database to be associated with the sensitive data model. All operations such as performing data discovery and adding columns manually are done in the context of the associated target database.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetId *string `pulumi:"targetId"`
	// The date and time the sensitive data model was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the sensitive data model was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type SensitiveDataModelState struct {
	// (Updatable) The application suite name identifying a collection of applications. It's useful only if maintaining a sensitive data model for a suite of applications.
	AppSuiteName pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment where the sensitive data model should be created.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description of the sensitive data model.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the sensitive data model. The name does not have to be unique, and it's changeable.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Indicates if data discovery jobs should identify potential application-level (non-dictionary) referential relationships between columns. Note that data discovery automatically identifies and adds database-level (dictionary-defined) relationships. This option helps identify application-level relationships that are not defined in the database dictionary, which in turn, helps identify additional sensitive columns and preserve referential integrity during data masking. It's disabled by default and should be used only if there is a need to identify application-level relationships.
	IsAppDefinedRelationDiscoveryEnabled pulumi.BoolPtrInput
	// Indicates if all the schemas in the associated target database should be scanned by data discovery jobs. If it is set to true, sensitive data is discovered in all schemas (except for schemas maintained by Oracle).
	IsIncludeAllSchemas pulumi.BoolPtrInput
	// Indicates if all the existing sensitive types should be used by data discovery jobs. If it's set to true, the sensitiveTypeIdsForDiscovery attribute is ignored and all sensitive types are used for data discovery.
	IsIncludeAllSensitiveTypes pulumi.BoolPtrInput
	// (Updatable) Indicates if data discovery jobs should collect and store sample data values for the discovered columns. Sample data helps review the discovered columns and ensure that they actually contain sensitive data. As it collects original data from the target database, it's disabled by default and should be used only if it's acceptable to store sample data in Data Safe's repository in Oracle Cloud. Note that sample data values are not collected for columns with the following data types: LONG, LOB, RAW, XMLTYPE and BFILE.
	IsSampleDataCollectionEnabled pulumi.BoolPtrInput
	// (Updatable) The schemas to be scanned by data discovery jobs.
	SchemasForDiscoveries pulumi.StringArrayInput
	// (Updatable) The OCIDs of the sensitive types to be used by data discovery jobs. If OCID of a sensitive category is provided, all its child sensitive types are used for data discovery.
	SensitiveTypeIdsForDiscoveries pulumi.StringArrayInput
	// The current state of the sensitive data model.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// (Updatable) The OCID of the reference target database to be associated with the sensitive data model. All operations such as performing data discovery and adding columns manually are done in the context of the associated target database.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetId pulumi.StringPtrInput
	// The date and time the sensitive data model was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// The date and time the sensitive data model was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
}

func (SensitiveDataModelState) ElementType() reflect.Type {
	return reflect.TypeOf((*sensitiveDataModelState)(nil)).Elem()
}

type sensitiveDataModelArgs struct {
	// (Updatable) The application suite name identifying a collection of applications. It's useful only if maintaining a sensitive data model for a suite of applications.
	AppSuiteName *string `pulumi:"appSuiteName"`
	// (Updatable) The OCID of the compartment where the sensitive data model should be created.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description of the sensitive data model.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the sensitive data model. The name does not have to be unique, and it's changeable.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Indicates if data discovery jobs should identify potential application-level (non-dictionary) referential relationships between columns. Note that data discovery automatically identifies and adds database-level (dictionary-defined) relationships. This option helps identify application-level relationships that are not defined in the database dictionary, which in turn, helps identify additional sensitive columns and preserve referential integrity during data masking. It's disabled by default and should be used only if there is a need to identify application-level relationships.
	IsAppDefinedRelationDiscoveryEnabled *bool `pulumi:"isAppDefinedRelationDiscoveryEnabled"`
	// Indicates if all the schemas in the associated target database should be scanned by data discovery jobs. If it is set to true, sensitive data is discovered in all schemas (except for schemas maintained by Oracle).
	IsIncludeAllSchemas *bool `pulumi:"isIncludeAllSchemas"`
	// Indicates if all the existing sensitive types should be used by data discovery jobs. If it's set to true, the sensitiveTypeIdsForDiscovery attribute is ignored and all sensitive types are used for data discovery.
	IsIncludeAllSensitiveTypes *bool `pulumi:"isIncludeAllSensitiveTypes"`
	// (Updatable) Indicates if data discovery jobs should collect and store sample data values for the discovered columns. Sample data helps review the discovered columns and ensure that they actually contain sensitive data. As it collects original data from the target database, it's disabled by default and should be used only if it's acceptable to store sample data in Data Safe's repository in Oracle Cloud. Note that sample data values are not collected for columns with the following data types: LONG, LOB, RAW, XMLTYPE and BFILE.
	IsSampleDataCollectionEnabled *bool `pulumi:"isSampleDataCollectionEnabled"`
	// (Updatable) The schemas to be scanned by data discovery jobs.
	SchemasForDiscoveries []string `pulumi:"schemasForDiscoveries"`
	// (Updatable) The OCIDs of the sensitive types to be used by data discovery jobs. If OCID of a sensitive category is provided, all its child sensitive types are used for data discovery.
	SensitiveTypeIdsForDiscoveries []string `pulumi:"sensitiveTypeIdsForDiscoveries"`
	// (Updatable) The OCID of the reference target database to be associated with the sensitive data model. All operations such as performing data discovery and adding columns manually are done in the context of the associated target database.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetId string `pulumi:"targetId"`
}

// The set of arguments for constructing a SensitiveDataModel resource.
type SensitiveDataModelArgs struct {
	// (Updatable) The application suite name identifying a collection of applications. It's useful only if maintaining a sensitive data model for a suite of applications.
	AppSuiteName pulumi.StringPtrInput
	// (Updatable) The OCID of the compartment where the sensitive data model should be created.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description of the sensitive data model.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the sensitive data model. The name does not have to be unique, and it's changeable.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Indicates if data discovery jobs should identify potential application-level (non-dictionary) referential relationships between columns. Note that data discovery automatically identifies and adds database-level (dictionary-defined) relationships. This option helps identify application-level relationships that are not defined in the database dictionary, which in turn, helps identify additional sensitive columns and preserve referential integrity during data masking. It's disabled by default and should be used only if there is a need to identify application-level relationships.
	IsAppDefinedRelationDiscoveryEnabled pulumi.BoolPtrInput
	// Indicates if all the schemas in the associated target database should be scanned by data discovery jobs. If it is set to true, sensitive data is discovered in all schemas (except for schemas maintained by Oracle).
	IsIncludeAllSchemas pulumi.BoolPtrInput
	// Indicates if all the existing sensitive types should be used by data discovery jobs. If it's set to true, the sensitiveTypeIdsForDiscovery attribute is ignored and all sensitive types are used for data discovery.
	IsIncludeAllSensitiveTypes pulumi.BoolPtrInput
	// (Updatable) Indicates if data discovery jobs should collect and store sample data values for the discovered columns. Sample data helps review the discovered columns and ensure that they actually contain sensitive data. As it collects original data from the target database, it's disabled by default and should be used only if it's acceptable to store sample data in Data Safe's repository in Oracle Cloud. Note that sample data values are not collected for columns with the following data types: LONG, LOB, RAW, XMLTYPE and BFILE.
	IsSampleDataCollectionEnabled pulumi.BoolPtrInput
	// (Updatable) The schemas to be scanned by data discovery jobs.
	SchemasForDiscoveries pulumi.StringArrayInput
	// (Updatable) The OCIDs of the sensitive types to be used by data discovery jobs. If OCID of a sensitive category is provided, all its child sensitive types are used for data discovery.
	SensitiveTypeIdsForDiscoveries pulumi.StringArrayInput
	// (Updatable) The OCID of the reference target database to be associated with the sensitive data model. All operations such as performing data discovery and adding columns manually are done in the context of the associated target database.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TargetId pulumi.StringInput
}

func (SensitiveDataModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sensitiveDataModelArgs)(nil)).Elem()
}

type SensitiveDataModelInput interface {
	pulumi.Input

	ToSensitiveDataModelOutput() SensitiveDataModelOutput
	ToSensitiveDataModelOutputWithContext(ctx context.Context) SensitiveDataModelOutput
}

func (*SensitiveDataModel) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataModel)(nil)).Elem()
}

func (i *SensitiveDataModel) ToSensitiveDataModelOutput() SensitiveDataModelOutput {
	return i.ToSensitiveDataModelOutputWithContext(context.Background())
}

func (i *SensitiveDataModel) ToSensitiveDataModelOutputWithContext(ctx context.Context) SensitiveDataModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataModelOutput)
}

// SensitiveDataModelArrayInput is an input type that accepts SensitiveDataModelArray and SensitiveDataModelArrayOutput values.
// You can construct a concrete instance of `SensitiveDataModelArrayInput` via:
//
//	SensitiveDataModelArray{ SensitiveDataModelArgs{...} }
type SensitiveDataModelArrayInput interface {
	pulumi.Input

	ToSensitiveDataModelArrayOutput() SensitiveDataModelArrayOutput
	ToSensitiveDataModelArrayOutputWithContext(context.Context) SensitiveDataModelArrayOutput
}

type SensitiveDataModelArray []SensitiveDataModelInput

func (SensitiveDataModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SensitiveDataModel)(nil)).Elem()
}

func (i SensitiveDataModelArray) ToSensitiveDataModelArrayOutput() SensitiveDataModelArrayOutput {
	return i.ToSensitiveDataModelArrayOutputWithContext(context.Background())
}

func (i SensitiveDataModelArray) ToSensitiveDataModelArrayOutputWithContext(ctx context.Context) SensitiveDataModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataModelArrayOutput)
}

// SensitiveDataModelMapInput is an input type that accepts SensitiveDataModelMap and SensitiveDataModelMapOutput values.
// You can construct a concrete instance of `SensitiveDataModelMapInput` via:
//
//	SensitiveDataModelMap{ "key": SensitiveDataModelArgs{...} }
type SensitiveDataModelMapInput interface {
	pulumi.Input

	ToSensitiveDataModelMapOutput() SensitiveDataModelMapOutput
	ToSensitiveDataModelMapOutputWithContext(context.Context) SensitiveDataModelMapOutput
}

type SensitiveDataModelMap map[string]SensitiveDataModelInput

func (SensitiveDataModelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SensitiveDataModel)(nil)).Elem()
}

func (i SensitiveDataModelMap) ToSensitiveDataModelMapOutput() SensitiveDataModelMapOutput {
	return i.ToSensitiveDataModelMapOutputWithContext(context.Background())
}

func (i SensitiveDataModelMap) ToSensitiveDataModelMapOutputWithContext(ctx context.Context) SensitiveDataModelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataModelMapOutput)
}

type SensitiveDataModelOutput struct{ *pulumi.OutputState }

func (SensitiveDataModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataModel)(nil)).Elem()
}

func (o SensitiveDataModelOutput) ToSensitiveDataModelOutput() SensitiveDataModelOutput {
	return o
}

func (o SensitiveDataModelOutput) ToSensitiveDataModelOutputWithContext(ctx context.Context) SensitiveDataModelOutput {
	return o
}

// (Updatable) The application suite name identifying a collection of applications. It's useful only if maintaining a sensitive data model for a suite of applications.
func (o SensitiveDataModelOutput) AppSuiteName() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.StringOutput { return v.AppSuiteName }).(pulumi.StringOutput)
}

// (Updatable) The OCID of the compartment where the sensitive data model should be created.
func (o SensitiveDataModelOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
func (o SensitiveDataModelOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) The description of the sensitive data model.
func (o SensitiveDataModelOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The display name of the sensitive data model. The name does not have to be unique, and it's changeable.
func (o SensitiveDataModelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o SensitiveDataModelOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) Indicates if data discovery jobs should identify potential application-level (non-dictionary) referential relationships between columns. Note that data discovery automatically identifies and adds database-level (dictionary-defined) relationships. This option helps identify application-level relationships that are not defined in the database dictionary, which in turn, helps identify additional sensitive columns and preserve referential integrity during data masking. It's disabled by default and should be used only if there is a need to identify application-level relationships.
func (o SensitiveDataModelOutput) IsAppDefinedRelationDiscoveryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.BoolOutput { return v.IsAppDefinedRelationDiscoveryEnabled }).(pulumi.BoolOutput)
}

// Indicates if all the schemas in the associated target database should be scanned by data discovery jobs. If it is set to true, sensitive data is discovered in all schemas (except for schemas maintained by Oracle).
func (o SensitiveDataModelOutput) IsIncludeAllSchemas() pulumi.BoolOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.BoolOutput { return v.IsIncludeAllSchemas }).(pulumi.BoolOutput)
}

// Indicates if all the existing sensitive types should be used by data discovery jobs. If it's set to true, the sensitiveTypeIdsForDiscovery attribute is ignored and all sensitive types are used for data discovery.
func (o SensitiveDataModelOutput) IsIncludeAllSensitiveTypes() pulumi.BoolOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.BoolOutput { return v.IsIncludeAllSensitiveTypes }).(pulumi.BoolOutput)
}

// (Updatable) Indicates if data discovery jobs should collect and store sample data values for the discovered columns. Sample data helps review the discovered columns and ensure that they actually contain sensitive data. As it collects original data from the target database, it's disabled by default and should be used only if it's acceptable to store sample data in Data Safe's repository in Oracle Cloud. Note that sample data values are not collected for columns with the following data types: LONG, LOB, RAW, XMLTYPE and BFILE.
func (o SensitiveDataModelOutput) IsSampleDataCollectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.BoolOutput { return v.IsSampleDataCollectionEnabled }).(pulumi.BoolOutput)
}

// (Updatable) The schemas to be scanned by data discovery jobs.
func (o SensitiveDataModelOutput) SchemasForDiscoveries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.StringArrayOutput { return v.SchemasForDiscoveries }).(pulumi.StringArrayOutput)
}

// (Updatable) The OCIDs of the sensitive types to be used by data discovery jobs. If OCID of a sensitive category is provided, all its child sensitive types are used for data discovery.
func (o SensitiveDataModelOutput) SensitiveTypeIdsForDiscoveries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.StringArrayOutput { return v.SensitiveTypeIdsForDiscoveries }).(pulumi.StringArrayOutput)
}

// The current state of the sensitive data model.
func (o SensitiveDataModelOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o SensitiveDataModelOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// (Updatable) The OCID of the reference target database to be associated with the sensitive data model. All operations such as performing data discovery and adding columns manually are done in the context of the associated target database.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o SensitiveDataModelOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

// The date and time the sensitive data model was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o SensitiveDataModelOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the sensitive data model was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o SensitiveDataModelOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModel) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type SensitiveDataModelArrayOutput struct{ *pulumi.OutputState }

func (SensitiveDataModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SensitiveDataModel)(nil)).Elem()
}

func (o SensitiveDataModelArrayOutput) ToSensitiveDataModelArrayOutput() SensitiveDataModelArrayOutput {
	return o
}

func (o SensitiveDataModelArrayOutput) ToSensitiveDataModelArrayOutputWithContext(ctx context.Context) SensitiveDataModelArrayOutput {
	return o
}

func (o SensitiveDataModelArrayOutput) Index(i pulumi.IntInput) SensitiveDataModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SensitiveDataModel {
		return vs[0].([]*SensitiveDataModel)[vs[1].(int)]
	}).(SensitiveDataModelOutput)
}

type SensitiveDataModelMapOutput struct{ *pulumi.OutputState }

func (SensitiveDataModelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SensitiveDataModel)(nil)).Elem()
}

func (o SensitiveDataModelMapOutput) ToSensitiveDataModelMapOutput() SensitiveDataModelMapOutput {
	return o
}

func (o SensitiveDataModelMapOutput) ToSensitiveDataModelMapOutputWithContext(ctx context.Context) SensitiveDataModelMapOutput {
	return o
}

func (o SensitiveDataModelMapOutput) MapIndex(k pulumi.StringInput) SensitiveDataModelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SensitiveDataModel {
		return vs[0].(map[string]*SensitiveDataModel)[vs[1].(string)]
	}).(SensitiveDataModelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataModelInput)(nil)).Elem(), &SensitiveDataModel{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataModelArrayInput)(nil)).Elem(), SensitiveDataModelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataModelMapInput)(nil)).Elem(), SensitiveDataModelMap{})
	pulumi.RegisterOutputType(SensitiveDataModelOutput{})
	pulumi.RegisterOutputType(SensitiveDataModelArrayOutput{})
	pulumi.RegisterOutputType(SensitiveDataModelMapOutput{})
}
