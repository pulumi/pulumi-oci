// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Sensitive Data Model Referential Relation resource in Oracle Cloud Infrastructure Data Safe service.
//
// Creates a new referential relation in the specified sensitive data model.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.NewSensitiveDataModelReferentialRelation(ctx, "test_sensitive_data_model_referential_relation", &datasafe.SensitiveDataModelReferentialRelationArgs{
//				Child: &datasafe.SensitiveDataModelReferentialRelationChildArgs{
//					AppName:          pulumi.Any(sensitiveDataModelReferentialRelationChildAppName),
//					ColumnGroups:     pulumi.Any(sensitiveDataModelReferentialRelationChildColumnGroup),
//					Object:           pulumi.Any(sensitiveDataModelReferentialRelationChildObject),
//					ObjectType:       pulumi.Any(sensitiveDataModelReferentialRelationChildObjectType),
//					SchemaName:       pulumi.Any(sensitiveDataModelReferentialRelationChildSchemaName),
//					SensitiveTypeIds: pulumi.Any(sensitiveDataModelReferentialRelationChildSensitiveTypeIds),
//				},
//				Parent: &datasafe.SensitiveDataModelReferentialRelationParentArgs{
//					AppName:          pulumi.Any(sensitiveDataModelReferentialRelationParentAppName),
//					ColumnGroups:     pulumi.Any(sensitiveDataModelReferentialRelationParentColumnGroup),
//					Object:           pulumi.Any(sensitiveDataModelReferentialRelationParentObject),
//					ObjectType:       pulumi.Any(sensitiveDataModelReferentialRelationParentObjectType),
//					SchemaName:       pulumi.Any(sensitiveDataModelReferentialRelationParentSchemaName),
//					SensitiveTypeIds: pulumi.Any(sensitiveDataModelReferentialRelationParentSensitiveTypeIds),
//				},
//				RelationType:         pulumi.Any(sensitiveDataModelReferentialRelationRelationType),
//				SensitiveDataModelId: pulumi.Any(testSensitiveDataModel.Id),
//				IsSensitive:          pulumi.Any(sensitiveDataModelReferentialRelationIsSensitive),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SensitiveDataModelReferentialRelations can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataSafe/sensitiveDataModelReferentialRelation:SensitiveDataModelReferentialRelation test_sensitive_data_model_referential_relation "sensitiveDataModels/{sensitiveDataModelId}/referentialRelations/{referentialRelationKey}"
// ```
type SensitiveDataModelReferentialRelation struct {
	pulumi.CustomResourceState

	// columnsInfo object has details of column group with schema details.
	Child SensitiveDataModelReferentialRelationChildOutput `pulumi:"child"`
	// Add to sensitive data model if passed true. If false is passed, then the columns will not be added in the sensitive data model as sensitive columns and  if sensitive type OCIDs are assigned to the columns, then the sensitive type OCIDs will not be retained.
	IsSensitive pulumi.BoolOutput `pulumi:"isSensitive"`
	// The unique key that identifies the referential relation. It's numeric and unique within a sensitive data model.
	Key pulumi.StringOutput `pulumi:"key"`
	// columnsInfo object has details of column group with schema details.
	Parent SensitiveDataModelReferentialRelationParentOutput `pulumi:"parent"`
	// The type of referential relationship the sensitive column has with its parent.  DB_DEFINED indicates that the relationship is defined in the database dictionary.  APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
	RelationType pulumi.StringOutput `pulumi:"relationType"`
	// The OCID of the sensitive data model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveDataModelId pulumi.StringOutput `pulumi:"sensitiveDataModelId"`
	// The current state of the referential relation.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewSensitiveDataModelReferentialRelation registers a new resource with the given unique name, arguments, and options.
func NewSensitiveDataModelReferentialRelation(ctx *pulumi.Context,
	name string, args *SensitiveDataModelReferentialRelationArgs, opts ...pulumi.ResourceOption) (*SensitiveDataModelReferentialRelation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Child == nil {
		return nil, errors.New("invalid value for required argument 'Child'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.RelationType == nil {
		return nil, errors.New("invalid value for required argument 'RelationType'")
	}
	if args.SensitiveDataModelId == nil {
		return nil, errors.New("invalid value for required argument 'SensitiveDataModelId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SensitiveDataModelReferentialRelation
	err := ctx.RegisterResource("oci:DataSafe/sensitiveDataModelReferentialRelation:SensitiveDataModelReferentialRelation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSensitiveDataModelReferentialRelation gets an existing SensitiveDataModelReferentialRelation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSensitiveDataModelReferentialRelation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SensitiveDataModelReferentialRelationState, opts ...pulumi.ResourceOption) (*SensitiveDataModelReferentialRelation, error) {
	var resource SensitiveDataModelReferentialRelation
	err := ctx.ReadResource("oci:DataSafe/sensitiveDataModelReferentialRelation:SensitiveDataModelReferentialRelation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SensitiveDataModelReferentialRelation resources.
type sensitiveDataModelReferentialRelationState struct {
	// columnsInfo object has details of column group with schema details.
	Child *SensitiveDataModelReferentialRelationChild `pulumi:"child"`
	// Add to sensitive data model if passed true. If false is passed, then the columns will not be added in the sensitive data model as sensitive columns and  if sensitive type OCIDs are assigned to the columns, then the sensitive type OCIDs will not be retained.
	IsSensitive *bool `pulumi:"isSensitive"`
	// The unique key that identifies the referential relation. It's numeric and unique within a sensitive data model.
	Key *string `pulumi:"key"`
	// columnsInfo object has details of column group with schema details.
	Parent *SensitiveDataModelReferentialRelationParent `pulumi:"parent"`
	// The type of referential relationship the sensitive column has with its parent.  DB_DEFINED indicates that the relationship is defined in the database dictionary.  APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
	RelationType *string `pulumi:"relationType"`
	// The OCID of the sensitive data model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveDataModelId *string `pulumi:"sensitiveDataModelId"`
	// The current state of the referential relation.
	State *string `pulumi:"state"`
}

type SensitiveDataModelReferentialRelationState struct {
	// columnsInfo object has details of column group with schema details.
	Child SensitiveDataModelReferentialRelationChildPtrInput
	// Add to sensitive data model if passed true. If false is passed, then the columns will not be added in the sensitive data model as sensitive columns and  if sensitive type OCIDs are assigned to the columns, then the sensitive type OCIDs will not be retained.
	IsSensitive pulumi.BoolPtrInput
	// The unique key that identifies the referential relation. It's numeric and unique within a sensitive data model.
	Key pulumi.StringPtrInput
	// columnsInfo object has details of column group with schema details.
	Parent SensitiveDataModelReferentialRelationParentPtrInput
	// The type of referential relationship the sensitive column has with its parent.  DB_DEFINED indicates that the relationship is defined in the database dictionary.  APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
	RelationType pulumi.StringPtrInput
	// The OCID of the sensitive data model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveDataModelId pulumi.StringPtrInput
	// The current state of the referential relation.
	State pulumi.StringPtrInput
}

func (SensitiveDataModelReferentialRelationState) ElementType() reflect.Type {
	return reflect.TypeOf((*sensitiveDataModelReferentialRelationState)(nil)).Elem()
}

type sensitiveDataModelReferentialRelationArgs struct {
	// columnsInfo object has details of column group with schema details.
	Child SensitiveDataModelReferentialRelationChild `pulumi:"child"`
	// Add to sensitive data model if passed true. If false is passed, then the columns will not be added in the sensitive data model as sensitive columns and  if sensitive type OCIDs are assigned to the columns, then the sensitive type OCIDs will not be retained.
	IsSensitive *bool `pulumi:"isSensitive"`
	// columnsInfo object has details of column group with schema details.
	Parent SensitiveDataModelReferentialRelationParent `pulumi:"parent"`
	// The type of referential relationship the sensitive column has with its parent.  DB_DEFINED indicates that the relationship is defined in the database dictionary.  APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
	RelationType string `pulumi:"relationType"`
	// The OCID of the sensitive data model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveDataModelId string `pulumi:"sensitiveDataModelId"`
}

// The set of arguments for constructing a SensitiveDataModelReferentialRelation resource.
type SensitiveDataModelReferentialRelationArgs struct {
	// columnsInfo object has details of column group with schema details.
	Child SensitiveDataModelReferentialRelationChildInput
	// Add to sensitive data model if passed true. If false is passed, then the columns will not be added in the sensitive data model as sensitive columns and  if sensitive type OCIDs are assigned to the columns, then the sensitive type OCIDs will not be retained.
	IsSensitive pulumi.BoolPtrInput
	// columnsInfo object has details of column group with schema details.
	Parent SensitiveDataModelReferentialRelationParentInput
	// The type of referential relationship the sensitive column has with its parent.  DB_DEFINED indicates that the relationship is defined in the database dictionary.  APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
	RelationType pulumi.StringInput
	// The OCID of the sensitive data model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveDataModelId pulumi.StringInput
}

func (SensitiveDataModelReferentialRelationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sensitiveDataModelReferentialRelationArgs)(nil)).Elem()
}

type SensitiveDataModelReferentialRelationInput interface {
	pulumi.Input

	ToSensitiveDataModelReferentialRelationOutput() SensitiveDataModelReferentialRelationOutput
	ToSensitiveDataModelReferentialRelationOutputWithContext(ctx context.Context) SensitiveDataModelReferentialRelationOutput
}

func (*SensitiveDataModelReferentialRelation) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataModelReferentialRelation)(nil)).Elem()
}

func (i *SensitiveDataModelReferentialRelation) ToSensitiveDataModelReferentialRelationOutput() SensitiveDataModelReferentialRelationOutput {
	return i.ToSensitiveDataModelReferentialRelationOutputWithContext(context.Background())
}

func (i *SensitiveDataModelReferentialRelation) ToSensitiveDataModelReferentialRelationOutputWithContext(ctx context.Context) SensitiveDataModelReferentialRelationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataModelReferentialRelationOutput)
}

// SensitiveDataModelReferentialRelationArrayInput is an input type that accepts SensitiveDataModelReferentialRelationArray and SensitiveDataModelReferentialRelationArrayOutput values.
// You can construct a concrete instance of `SensitiveDataModelReferentialRelationArrayInput` via:
//
//	SensitiveDataModelReferentialRelationArray{ SensitiveDataModelReferentialRelationArgs{...} }
type SensitiveDataModelReferentialRelationArrayInput interface {
	pulumi.Input

	ToSensitiveDataModelReferentialRelationArrayOutput() SensitiveDataModelReferentialRelationArrayOutput
	ToSensitiveDataModelReferentialRelationArrayOutputWithContext(context.Context) SensitiveDataModelReferentialRelationArrayOutput
}

type SensitiveDataModelReferentialRelationArray []SensitiveDataModelReferentialRelationInput

func (SensitiveDataModelReferentialRelationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SensitiveDataModelReferentialRelation)(nil)).Elem()
}

func (i SensitiveDataModelReferentialRelationArray) ToSensitiveDataModelReferentialRelationArrayOutput() SensitiveDataModelReferentialRelationArrayOutput {
	return i.ToSensitiveDataModelReferentialRelationArrayOutputWithContext(context.Background())
}

func (i SensitiveDataModelReferentialRelationArray) ToSensitiveDataModelReferentialRelationArrayOutputWithContext(ctx context.Context) SensitiveDataModelReferentialRelationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataModelReferentialRelationArrayOutput)
}

// SensitiveDataModelReferentialRelationMapInput is an input type that accepts SensitiveDataModelReferentialRelationMap and SensitiveDataModelReferentialRelationMapOutput values.
// You can construct a concrete instance of `SensitiveDataModelReferentialRelationMapInput` via:
//
//	SensitiveDataModelReferentialRelationMap{ "key": SensitiveDataModelReferentialRelationArgs{...} }
type SensitiveDataModelReferentialRelationMapInput interface {
	pulumi.Input

	ToSensitiveDataModelReferentialRelationMapOutput() SensitiveDataModelReferentialRelationMapOutput
	ToSensitiveDataModelReferentialRelationMapOutputWithContext(context.Context) SensitiveDataModelReferentialRelationMapOutput
}

type SensitiveDataModelReferentialRelationMap map[string]SensitiveDataModelReferentialRelationInput

func (SensitiveDataModelReferentialRelationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SensitiveDataModelReferentialRelation)(nil)).Elem()
}

func (i SensitiveDataModelReferentialRelationMap) ToSensitiveDataModelReferentialRelationMapOutput() SensitiveDataModelReferentialRelationMapOutput {
	return i.ToSensitiveDataModelReferentialRelationMapOutputWithContext(context.Background())
}

func (i SensitiveDataModelReferentialRelationMap) ToSensitiveDataModelReferentialRelationMapOutputWithContext(ctx context.Context) SensitiveDataModelReferentialRelationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataModelReferentialRelationMapOutput)
}

type SensitiveDataModelReferentialRelationOutput struct{ *pulumi.OutputState }

func (SensitiveDataModelReferentialRelationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataModelReferentialRelation)(nil)).Elem()
}

func (o SensitiveDataModelReferentialRelationOutput) ToSensitiveDataModelReferentialRelationOutput() SensitiveDataModelReferentialRelationOutput {
	return o
}

func (o SensitiveDataModelReferentialRelationOutput) ToSensitiveDataModelReferentialRelationOutputWithContext(ctx context.Context) SensitiveDataModelReferentialRelationOutput {
	return o
}

// columnsInfo object has details of column group with schema details.
func (o SensitiveDataModelReferentialRelationOutput) Child() SensitiveDataModelReferentialRelationChildOutput {
	return o.ApplyT(func(v *SensitiveDataModelReferentialRelation) SensitiveDataModelReferentialRelationChildOutput {
		return v.Child
	}).(SensitiveDataModelReferentialRelationChildOutput)
}

// Add to sensitive data model if passed true. If false is passed, then the columns will not be added in the sensitive data model as sensitive columns and  if sensitive type OCIDs are assigned to the columns, then the sensitive type OCIDs will not be retained.
func (o SensitiveDataModelReferentialRelationOutput) IsSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v *SensitiveDataModelReferentialRelation) pulumi.BoolOutput { return v.IsSensitive }).(pulumi.BoolOutput)
}

// The unique key that identifies the referential relation. It's numeric and unique within a sensitive data model.
func (o SensitiveDataModelReferentialRelationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModelReferentialRelation) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// columnsInfo object has details of column group with schema details.
func (o SensitiveDataModelReferentialRelationOutput) Parent() SensitiveDataModelReferentialRelationParentOutput {
	return o.ApplyT(func(v *SensitiveDataModelReferentialRelation) SensitiveDataModelReferentialRelationParentOutput {
		return v.Parent
	}).(SensitiveDataModelReferentialRelationParentOutput)
}

// The type of referential relationship the sensitive column has with its parent.  DB_DEFINED indicates that the relationship is defined in the database dictionary.  APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
func (o SensitiveDataModelReferentialRelationOutput) RelationType() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModelReferentialRelation) pulumi.StringOutput { return v.RelationType }).(pulumi.StringOutput)
}

// The OCID of the sensitive data model.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o SensitiveDataModelReferentialRelationOutput) SensitiveDataModelId() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModelReferentialRelation) pulumi.StringOutput { return v.SensitiveDataModelId }).(pulumi.StringOutput)
}

// The current state of the referential relation.
func (o SensitiveDataModelReferentialRelationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveDataModelReferentialRelation) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

type SensitiveDataModelReferentialRelationArrayOutput struct{ *pulumi.OutputState }

func (SensitiveDataModelReferentialRelationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SensitiveDataModelReferentialRelation)(nil)).Elem()
}

func (o SensitiveDataModelReferentialRelationArrayOutput) ToSensitiveDataModelReferentialRelationArrayOutput() SensitiveDataModelReferentialRelationArrayOutput {
	return o
}

func (o SensitiveDataModelReferentialRelationArrayOutput) ToSensitiveDataModelReferentialRelationArrayOutputWithContext(ctx context.Context) SensitiveDataModelReferentialRelationArrayOutput {
	return o
}

func (o SensitiveDataModelReferentialRelationArrayOutput) Index(i pulumi.IntInput) SensitiveDataModelReferentialRelationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SensitiveDataModelReferentialRelation {
		return vs[0].([]*SensitiveDataModelReferentialRelation)[vs[1].(int)]
	}).(SensitiveDataModelReferentialRelationOutput)
}

type SensitiveDataModelReferentialRelationMapOutput struct{ *pulumi.OutputState }

func (SensitiveDataModelReferentialRelationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SensitiveDataModelReferentialRelation)(nil)).Elem()
}

func (o SensitiveDataModelReferentialRelationMapOutput) ToSensitiveDataModelReferentialRelationMapOutput() SensitiveDataModelReferentialRelationMapOutput {
	return o
}

func (o SensitiveDataModelReferentialRelationMapOutput) ToSensitiveDataModelReferentialRelationMapOutputWithContext(ctx context.Context) SensitiveDataModelReferentialRelationMapOutput {
	return o
}

func (o SensitiveDataModelReferentialRelationMapOutput) MapIndex(k pulumi.StringInput) SensitiveDataModelReferentialRelationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SensitiveDataModelReferentialRelation {
		return vs[0].(map[string]*SensitiveDataModelReferentialRelation)[vs[1].(string)]
	}).(SensitiveDataModelReferentialRelationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataModelReferentialRelationInput)(nil)).Elem(), &SensitiveDataModelReferentialRelation{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataModelReferentialRelationArrayInput)(nil)).Elem(), SensitiveDataModelReferentialRelationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataModelReferentialRelationMapInput)(nil)).Elem(), SensitiveDataModelReferentialRelationMap{})
	pulumi.RegisterOutputType(SensitiveDataModelReferentialRelationOutput{})
	pulumi.RegisterOutputType(SensitiveDataModelReferentialRelationArrayOutput{})
	pulumi.RegisterOutputType(SensitiveDataModelReferentialRelationMapOutput{})
}
