// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Sensitive Types Export resource in Oracle Cloud Infrastructure Data Safe service.
//
// Generates a downloadable file corresponding to the specified list of sensitive types. It's a prerequisite for the
// DownloadSensitiveTypesExport operation. Use this endpoint to generate a sensitive Types Export file and then use
// DownloadSensitiveTypesExport to download the generated file.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.NewSensitiveTypesExport(ctx, "test_sensitive_types_export", &datasafe.SensitiveTypesExportArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				Description: pulumi.Any(sensitiveTypesExportDescription),
//				DisplayName: pulumi.Any(sensitiveTypesExportDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				IsIncludeAllSensitiveTypes: pulumi.Any(sensitiveTypesExportIsIncludeAllSensitiveTypes),
//				SensitiveTypeIdsForExports: pulumi.Any(sensitiveTypesExportSensitiveTypeIdsForExport),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SensitiveTypesExports can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataSafe/sensitiveTypesExport:SensitiveTypesExport test_sensitive_types_export "id"
// ```
type SensitiveTypesExport struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment where the sensitive types export should be created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) The description of the sensitive types export.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The display name of the sensitive types export. The name does not have to be unique, and it's changeable.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Indicates if all the existing user-defined sensitive types are used for export. If it's set to true, the sensitiveTypeIdsForExport attribute is ignored and all user-defined sensitive types are used.
	IsIncludeAllSensitiveTypes pulumi.BoolOutput `pulumi:"isIncludeAllSensitiveTypes"`
	// The OCIDs of the sensitive types used to create sensitive types export.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveTypeIdsForExports pulumi.StringArrayOutput `pulumi:"sensitiveTypeIdsForExports"`
	// The current state of the sensitive types export.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the sensitive types export was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the sensitive types export was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewSensitiveTypesExport registers a new resource with the given unique name, arguments, and options.
func NewSensitiveTypesExport(ctx *pulumi.Context,
	name string, args *SensitiveTypesExportArgs, opts ...pulumi.ResourceOption) (*SensitiveTypesExport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SensitiveTypesExport
	err := ctx.RegisterResource("oci:DataSafe/sensitiveTypesExport:SensitiveTypesExport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSensitiveTypesExport gets an existing SensitiveTypesExport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSensitiveTypesExport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SensitiveTypesExportState, opts ...pulumi.ResourceOption) (*SensitiveTypesExport, error) {
	var resource SensitiveTypesExport
	err := ctx.ReadResource("oci:DataSafe/sensitiveTypesExport:SensitiveTypesExport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SensitiveTypesExport resources.
type sensitiveTypesExportState struct {
	// (Updatable) The OCID of the compartment where the sensitive types export should be created.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The description of the sensitive types export.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the sensitive types export. The name does not have to be unique, and it's changeable.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Indicates if all the existing user-defined sensitive types are used for export. If it's set to true, the sensitiveTypeIdsForExport attribute is ignored and all user-defined sensitive types are used.
	IsIncludeAllSensitiveTypes *bool `pulumi:"isIncludeAllSensitiveTypes"`
	// The OCIDs of the sensitive types used to create sensitive types export.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveTypeIdsForExports []string `pulumi:"sensitiveTypeIdsForExports"`
	// The current state of the sensitive types export.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the sensitive types export was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the sensitive types export was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type SensitiveTypesExportState struct {
	// (Updatable) The OCID of the compartment where the sensitive types export should be created.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) The description of the sensitive types export.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the sensitive types export. The name does not have to be unique, and it's changeable.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Indicates if all the existing user-defined sensitive types are used for export. If it's set to true, the sensitiveTypeIdsForExport attribute is ignored and all user-defined sensitive types are used.
	IsIncludeAllSensitiveTypes pulumi.BoolPtrInput
	// The OCIDs of the sensitive types used to create sensitive types export.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveTypeIdsForExports pulumi.StringArrayInput
	// The current state of the sensitive types export.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The date and time the sensitive types export was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// The date and time the sensitive types export was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
}

func (SensitiveTypesExportState) ElementType() reflect.Type {
	return reflect.TypeOf((*sensitiveTypesExportState)(nil)).Elem()
}

type sensitiveTypesExportArgs struct {
	// (Updatable) The OCID of the compartment where the sensitive types export should be created.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The description of the sensitive types export.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the sensitive types export. The name does not have to be unique, and it's changeable.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Indicates if all the existing user-defined sensitive types are used for export. If it's set to true, the sensitiveTypeIdsForExport attribute is ignored and all user-defined sensitive types are used.
	IsIncludeAllSensitiveTypes *bool `pulumi:"isIncludeAllSensitiveTypes"`
	// The OCIDs of the sensitive types used to create sensitive types export.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveTypeIdsForExports []string `pulumi:"sensitiveTypeIdsForExports"`
}

// The set of arguments for constructing a SensitiveTypesExport resource.
type SensitiveTypesExportArgs struct {
	// (Updatable) The OCID of the compartment where the sensitive types export should be created.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) The description of the sensitive types export.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the sensitive types export. The name does not have to be unique, and it's changeable.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Indicates if all the existing user-defined sensitive types are used for export. If it's set to true, the sensitiveTypeIdsForExport attribute is ignored and all user-defined sensitive types are used.
	IsIncludeAllSensitiveTypes pulumi.BoolPtrInput
	// The OCIDs of the sensitive types used to create sensitive types export.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	SensitiveTypeIdsForExports pulumi.StringArrayInput
}

func (SensitiveTypesExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sensitiveTypesExportArgs)(nil)).Elem()
}

type SensitiveTypesExportInput interface {
	pulumi.Input

	ToSensitiveTypesExportOutput() SensitiveTypesExportOutput
	ToSensitiveTypesExportOutputWithContext(ctx context.Context) SensitiveTypesExportOutput
}

func (*SensitiveTypesExport) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveTypesExport)(nil)).Elem()
}

func (i *SensitiveTypesExport) ToSensitiveTypesExportOutput() SensitiveTypesExportOutput {
	return i.ToSensitiveTypesExportOutputWithContext(context.Background())
}

func (i *SensitiveTypesExport) ToSensitiveTypesExportOutputWithContext(ctx context.Context) SensitiveTypesExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveTypesExportOutput)
}

// SensitiveTypesExportArrayInput is an input type that accepts SensitiveTypesExportArray and SensitiveTypesExportArrayOutput values.
// You can construct a concrete instance of `SensitiveTypesExportArrayInput` via:
//
//	SensitiveTypesExportArray{ SensitiveTypesExportArgs{...} }
type SensitiveTypesExportArrayInput interface {
	pulumi.Input

	ToSensitiveTypesExportArrayOutput() SensitiveTypesExportArrayOutput
	ToSensitiveTypesExportArrayOutputWithContext(context.Context) SensitiveTypesExportArrayOutput
}

type SensitiveTypesExportArray []SensitiveTypesExportInput

func (SensitiveTypesExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SensitiveTypesExport)(nil)).Elem()
}

func (i SensitiveTypesExportArray) ToSensitiveTypesExportArrayOutput() SensitiveTypesExportArrayOutput {
	return i.ToSensitiveTypesExportArrayOutputWithContext(context.Background())
}

func (i SensitiveTypesExportArray) ToSensitiveTypesExportArrayOutputWithContext(ctx context.Context) SensitiveTypesExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveTypesExportArrayOutput)
}

// SensitiveTypesExportMapInput is an input type that accepts SensitiveTypesExportMap and SensitiveTypesExportMapOutput values.
// You can construct a concrete instance of `SensitiveTypesExportMapInput` via:
//
//	SensitiveTypesExportMap{ "key": SensitiveTypesExportArgs{...} }
type SensitiveTypesExportMapInput interface {
	pulumi.Input

	ToSensitiveTypesExportMapOutput() SensitiveTypesExportMapOutput
	ToSensitiveTypesExportMapOutputWithContext(context.Context) SensitiveTypesExportMapOutput
}

type SensitiveTypesExportMap map[string]SensitiveTypesExportInput

func (SensitiveTypesExportMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SensitiveTypesExport)(nil)).Elem()
}

func (i SensitiveTypesExportMap) ToSensitiveTypesExportMapOutput() SensitiveTypesExportMapOutput {
	return i.ToSensitiveTypesExportMapOutputWithContext(context.Background())
}

func (i SensitiveTypesExportMap) ToSensitiveTypesExportMapOutputWithContext(ctx context.Context) SensitiveTypesExportMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveTypesExportMapOutput)
}

type SensitiveTypesExportOutput struct{ *pulumi.OutputState }

func (SensitiveTypesExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveTypesExport)(nil)).Elem()
}

func (o SensitiveTypesExportOutput) ToSensitiveTypesExportOutput() SensitiveTypesExportOutput {
	return o
}

func (o SensitiveTypesExportOutput) ToSensitiveTypesExportOutputWithContext(ctx context.Context) SensitiveTypesExportOutput {
	return o
}

// (Updatable) The OCID of the compartment where the sensitive types export should be created.
func (o SensitiveTypesExportOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveTypesExport) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
func (o SensitiveTypesExportOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SensitiveTypesExport) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) The description of the sensitive types export.
func (o SensitiveTypesExportOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveTypesExport) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The display name of the sensitive types export. The name does not have to be unique, and it's changeable.
func (o SensitiveTypesExportOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveTypesExport) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o SensitiveTypesExportOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SensitiveTypesExport) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Indicates if all the existing user-defined sensitive types are used for export. If it's set to true, the sensitiveTypeIdsForExport attribute is ignored and all user-defined sensitive types are used.
func (o SensitiveTypesExportOutput) IsIncludeAllSensitiveTypes() pulumi.BoolOutput {
	return o.ApplyT(func(v *SensitiveTypesExport) pulumi.BoolOutput { return v.IsIncludeAllSensitiveTypes }).(pulumi.BoolOutput)
}

// The OCIDs of the sensitive types used to create sensitive types export.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o SensitiveTypesExportOutput) SensitiveTypeIdsForExports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SensitiveTypesExport) pulumi.StringArrayOutput { return v.SensitiveTypeIdsForExports }).(pulumi.StringArrayOutput)
}

// The current state of the sensitive types export.
func (o SensitiveTypesExportOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveTypesExport) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o SensitiveTypesExportOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SensitiveTypesExport) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the sensitive types export was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o SensitiveTypesExportOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveTypesExport) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the sensitive types export was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
func (o SensitiveTypesExportOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *SensitiveTypesExport) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type SensitiveTypesExportArrayOutput struct{ *pulumi.OutputState }

func (SensitiveTypesExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SensitiveTypesExport)(nil)).Elem()
}

func (o SensitiveTypesExportArrayOutput) ToSensitiveTypesExportArrayOutput() SensitiveTypesExportArrayOutput {
	return o
}

func (o SensitiveTypesExportArrayOutput) ToSensitiveTypesExportArrayOutputWithContext(ctx context.Context) SensitiveTypesExportArrayOutput {
	return o
}

func (o SensitiveTypesExportArrayOutput) Index(i pulumi.IntInput) SensitiveTypesExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SensitiveTypesExport {
		return vs[0].([]*SensitiveTypesExport)[vs[1].(int)]
	}).(SensitiveTypesExportOutput)
}

type SensitiveTypesExportMapOutput struct{ *pulumi.OutputState }

func (SensitiveTypesExportMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SensitiveTypesExport)(nil)).Elem()
}

func (o SensitiveTypesExportMapOutput) ToSensitiveTypesExportMapOutput() SensitiveTypesExportMapOutput {
	return o
}

func (o SensitiveTypesExportMapOutput) ToSensitiveTypesExportMapOutputWithContext(ctx context.Context) SensitiveTypesExportMapOutput {
	return o
}

func (o SensitiveTypesExportMapOutput) MapIndex(k pulumi.StringInput) SensitiveTypesExportOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SensitiveTypesExport {
		return vs[0].(map[string]*SensitiveTypesExport)[vs[1].(string)]
	}).(SensitiveTypesExportOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveTypesExportInput)(nil)).Elem(), &SensitiveTypesExport{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveTypesExportArrayInput)(nil)).Elem(), SensitiveTypesExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveTypesExportMapInput)(nil)).Elem(), SensitiveTypesExportMap{})
	pulumi.RegisterOutputType(SensitiveTypesExportOutput{})
	pulumi.RegisterOutputType(SensitiveTypesExportArrayOutput{})
	pulumi.RegisterOutputType(SensitiveTypesExportMapOutput{})
}
