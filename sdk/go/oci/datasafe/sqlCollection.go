// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Sql Collection resource in Oracle Cloud Infrastructure Data Safe service.
//
// Creates a new SQL collection resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.NewSqlCollection(ctx, "testSqlCollection", &DataSafe.SqlCollectionArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				DbUserName:    pulumi.Any(oci_identity_user.Test_user.Name),
//				TargetId:      pulumi.Any(oci_cloud_guard_target.Test_target.Id),
//				DefinedTags: pulumi.Map{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				Description: pulumi.Any(_var.Sql_collection_description),
//				DisplayName: pulumi.Any(_var.Sql_collection_display_name),
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//				SqlLevel: pulumi.Any(_var.Sql_collection_sql_level),
//				Status:   pulumi.Any(_var.Sql_collection_status),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SqlCollections can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DataSafe/sqlCollection:SqlCollection test_sql_collection "id"
//
// ```
type SqlCollection struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment containing the SQL collection.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The database user name.
	DbUserName pulumi.StringOutput `pulumi:"dbUserName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description of the SQL collection.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
	GenerateSqlFirewallPolicyTrigger pulumi.BoolPtrOutput `pulumi:"generateSqlFirewallPolicyTrigger"`
	// Details about the current state of the SQL collection in Data Safe.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
	PurgeLogsTrigger pulumi.BoolPtrOutput `pulumi:"purgeLogsTrigger"`
	// (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
	RefreshLogInsightsTrigger pulumi.BoolPtrOutput `pulumi:"refreshLogInsightsTrigger"`
	// Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
	SqlLevel pulumi.StringOutput `pulumi:"sqlLevel"`
	// (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
	StartTrigger pulumi.BoolPtrOutput `pulumi:"startTrigger"`
	// The current state of the SQL collection.
	State pulumi.StringOutput `pulumi:"state"`
	// Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
	Status pulumi.StringOutput `pulumi:"status"`
	// (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StopTrigger pulumi.BoolPtrOutput `pulumi:"stopTrigger"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The OCID of the target corresponding to the security policy deployment.
	TargetId pulumi.StringOutput `pulumi:"targetId"`
	// The time that the SQL collection was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
	TimeLastStarted pulumi.StringOutput `pulumi:"timeLastStarted"`
	// The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
	TimeLastStopped pulumi.StringOutput `pulumi:"timeLastStopped"`
	// The last date and time the SQL collection was updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewSqlCollection registers a new resource with the given unique name, arguments, and options.
func NewSqlCollection(ctx *pulumi.Context,
	name string, args *SqlCollectionArgs, opts ...pulumi.ResourceOption) (*SqlCollection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DbUserName == nil {
		return nil, errors.New("invalid value for required argument 'DbUserName'")
	}
	if args.TargetId == nil {
		return nil, errors.New("invalid value for required argument 'TargetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SqlCollection
	err := ctx.RegisterResource("oci:DataSafe/sqlCollection:SqlCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlCollection gets an existing SqlCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlCollectionState, opts ...pulumi.ResourceOption) (*SqlCollection, error) {
	var resource SqlCollection
	err := ctx.ReadResource("oci:DataSafe/sqlCollection:SqlCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlCollection resources.
type sqlCollectionState struct {
	// (Updatable) The OCID of the compartment containing the SQL collection.
	CompartmentId *string `pulumi:"compartmentId"`
	// The database user name.
	DbUserName *string `pulumi:"dbUserName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description of the SQL collection.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
	GenerateSqlFirewallPolicyTrigger *bool `pulumi:"generateSqlFirewallPolicyTrigger"`
	// Details about the current state of the SQL collection in Data Safe.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
	PurgeLogsTrigger *bool `pulumi:"purgeLogsTrigger"`
	// (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
	RefreshLogInsightsTrigger *bool `pulumi:"refreshLogInsightsTrigger"`
	// Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
	SqlLevel *string `pulumi:"sqlLevel"`
	// (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
	StartTrigger *bool `pulumi:"startTrigger"`
	// The current state of the SQL collection.
	State *string `pulumi:"state"`
	// Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
	Status *string `pulumi:"status"`
	// (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StopTrigger *bool `pulumi:"stopTrigger"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The OCID of the target corresponding to the security policy deployment.
	TargetId *string `pulumi:"targetId"`
	// The time that the SQL collection was created, in the format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
	TimeLastStarted *string `pulumi:"timeLastStarted"`
	// The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
	TimeLastStopped *string `pulumi:"timeLastStopped"`
	// The last date and time the SQL collection was updated, in the format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type SqlCollectionState struct {
	// (Updatable) The OCID of the compartment containing the SQL collection.
	CompartmentId pulumi.StringPtrInput
	// The database user name.
	DbUserName pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description of the SQL collection.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
	GenerateSqlFirewallPolicyTrigger pulumi.BoolPtrInput
	// Details about the current state of the SQL collection in Data Safe.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
	PurgeLogsTrigger pulumi.BoolPtrInput
	// (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
	RefreshLogInsightsTrigger pulumi.BoolPtrInput
	// Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
	SqlLevel pulumi.StringPtrInput
	// (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
	StartTrigger pulumi.BoolPtrInput
	// The current state of the SQL collection.
	State pulumi.StringPtrInput
	// Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
	Status pulumi.StringPtrInput
	// (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StopTrigger pulumi.BoolPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The OCID of the target corresponding to the security policy deployment.
	TargetId pulumi.StringPtrInput
	// The time that the SQL collection was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
	TimeLastStarted pulumi.StringPtrInput
	// The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
	TimeLastStopped pulumi.StringPtrInput
	// The last date and time the SQL collection was updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
}

func (SqlCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlCollectionState)(nil)).Elem()
}

type sqlCollectionArgs struct {
	// (Updatable) The OCID of the compartment containing the SQL collection.
	CompartmentId string `pulumi:"compartmentId"`
	// The database user name.
	DbUserName string `pulumi:"dbUserName"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description of the SQL collection.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
	GenerateSqlFirewallPolicyTrigger *bool `pulumi:"generateSqlFirewallPolicyTrigger"`
	// (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
	PurgeLogsTrigger *bool `pulumi:"purgeLogsTrigger"`
	// (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
	RefreshLogInsightsTrigger *bool `pulumi:"refreshLogInsightsTrigger"`
	// Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
	SqlLevel *string `pulumi:"sqlLevel"`
	// (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
	StartTrigger *bool `pulumi:"startTrigger"`
	// Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
	Status *string `pulumi:"status"`
	// (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StopTrigger *bool `pulumi:"stopTrigger"`
	// The OCID of the target corresponding to the security policy deployment.
	TargetId string `pulumi:"targetId"`
}

// The set of arguments for constructing a SqlCollection resource.
type SqlCollectionArgs struct {
	// (Updatable) The OCID of the compartment containing the SQL collection.
	CompartmentId pulumi.StringInput
	// The database user name.
	DbUserName pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description of the SQL collection.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
	GenerateSqlFirewallPolicyTrigger pulumi.BoolPtrInput
	// (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
	PurgeLogsTrigger pulumi.BoolPtrInput
	// (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
	RefreshLogInsightsTrigger pulumi.BoolPtrInput
	// Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
	SqlLevel pulumi.StringPtrInput
	// (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
	StartTrigger pulumi.BoolPtrInput
	// Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
	Status pulumi.StringPtrInput
	// (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	StopTrigger pulumi.BoolPtrInput
	// The OCID of the target corresponding to the security policy deployment.
	TargetId pulumi.StringInput
}

func (SqlCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlCollectionArgs)(nil)).Elem()
}

type SqlCollectionInput interface {
	pulumi.Input

	ToSqlCollectionOutput() SqlCollectionOutput
	ToSqlCollectionOutputWithContext(ctx context.Context) SqlCollectionOutput
}

func (*SqlCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlCollection)(nil)).Elem()
}

func (i *SqlCollection) ToSqlCollectionOutput() SqlCollectionOutput {
	return i.ToSqlCollectionOutputWithContext(context.Background())
}

func (i *SqlCollection) ToSqlCollectionOutputWithContext(ctx context.Context) SqlCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlCollectionOutput)
}

// SqlCollectionArrayInput is an input type that accepts SqlCollectionArray and SqlCollectionArrayOutput values.
// You can construct a concrete instance of `SqlCollectionArrayInput` via:
//
//	SqlCollectionArray{ SqlCollectionArgs{...} }
type SqlCollectionArrayInput interface {
	pulumi.Input

	ToSqlCollectionArrayOutput() SqlCollectionArrayOutput
	ToSqlCollectionArrayOutputWithContext(context.Context) SqlCollectionArrayOutput
}

type SqlCollectionArray []SqlCollectionInput

func (SqlCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SqlCollection)(nil)).Elem()
}

func (i SqlCollectionArray) ToSqlCollectionArrayOutput() SqlCollectionArrayOutput {
	return i.ToSqlCollectionArrayOutputWithContext(context.Background())
}

func (i SqlCollectionArray) ToSqlCollectionArrayOutputWithContext(ctx context.Context) SqlCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlCollectionArrayOutput)
}

// SqlCollectionMapInput is an input type that accepts SqlCollectionMap and SqlCollectionMapOutput values.
// You can construct a concrete instance of `SqlCollectionMapInput` via:
//
//	SqlCollectionMap{ "key": SqlCollectionArgs{...} }
type SqlCollectionMapInput interface {
	pulumi.Input

	ToSqlCollectionMapOutput() SqlCollectionMapOutput
	ToSqlCollectionMapOutputWithContext(context.Context) SqlCollectionMapOutput
}

type SqlCollectionMap map[string]SqlCollectionInput

func (SqlCollectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SqlCollection)(nil)).Elem()
}

func (i SqlCollectionMap) ToSqlCollectionMapOutput() SqlCollectionMapOutput {
	return i.ToSqlCollectionMapOutputWithContext(context.Background())
}

func (i SqlCollectionMap) ToSqlCollectionMapOutputWithContext(ctx context.Context) SqlCollectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlCollectionMapOutput)
}

type SqlCollectionOutput struct{ *pulumi.OutputState }

func (SqlCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlCollection)(nil)).Elem()
}

func (o SqlCollectionOutput) ToSqlCollectionOutput() SqlCollectionOutput {
	return o
}

func (o SqlCollectionOutput) ToSqlCollectionOutputWithContext(ctx context.Context) SqlCollectionOutput {
	return o
}

// (Updatable) The OCID of the compartment containing the SQL collection.
func (o SqlCollectionOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The database user name.
func (o SqlCollectionOutput) DbUserName() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.DbUserName }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
func (o SqlCollectionOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) The description of the SQL collection.
func (o SqlCollectionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
func (o SqlCollectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o SqlCollectionOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
func (o SqlCollectionOutput) GenerateSqlFirewallPolicyTrigger() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.BoolPtrOutput { return v.GenerateSqlFirewallPolicyTrigger }).(pulumi.BoolPtrOutput)
}

// Details about the current state of the SQL collection in Data Safe.
func (o SqlCollectionOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
func (o SqlCollectionOutput) PurgeLogsTrigger() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.BoolPtrOutput { return v.PurgeLogsTrigger }).(pulumi.BoolPtrOutput)
}

// (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
func (o SqlCollectionOutput) RefreshLogInsightsTrigger() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.BoolPtrOutput { return v.RefreshLogInsightsTrigger }).(pulumi.BoolPtrOutput)
}

// Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
func (o SqlCollectionOutput) SqlLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.SqlLevel }).(pulumi.StringOutput)
}

// (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
func (o SqlCollectionOutput) StartTrigger() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.BoolPtrOutput { return v.StartTrigger }).(pulumi.BoolPtrOutput)
}

// The current state of the SQL collection.
func (o SqlCollectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
func (o SqlCollectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o SqlCollectionOutput) StopTrigger() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.BoolPtrOutput { return v.StopTrigger }).(pulumi.BoolPtrOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o SqlCollectionOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The OCID of the target corresponding to the security policy deployment.
func (o SqlCollectionOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

// The time that the SQL collection was created, in the format defined by RFC3339.
func (o SqlCollectionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
func (o SqlCollectionOutput) TimeLastStarted() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.TimeLastStarted }).(pulumi.StringOutput)
}

// The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
func (o SqlCollectionOutput) TimeLastStopped() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.TimeLastStopped }).(pulumi.StringOutput)
}

// The last date and time the SQL collection was updated, in the format defined by RFC3339.
func (o SqlCollectionOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlCollection) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type SqlCollectionArrayOutput struct{ *pulumi.OutputState }

func (SqlCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SqlCollection)(nil)).Elem()
}

func (o SqlCollectionArrayOutput) ToSqlCollectionArrayOutput() SqlCollectionArrayOutput {
	return o
}

func (o SqlCollectionArrayOutput) ToSqlCollectionArrayOutputWithContext(ctx context.Context) SqlCollectionArrayOutput {
	return o
}

func (o SqlCollectionArrayOutput) Index(i pulumi.IntInput) SqlCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SqlCollection {
		return vs[0].([]*SqlCollection)[vs[1].(int)]
	}).(SqlCollectionOutput)
}

type SqlCollectionMapOutput struct{ *pulumi.OutputState }

func (SqlCollectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SqlCollection)(nil)).Elem()
}

func (o SqlCollectionMapOutput) ToSqlCollectionMapOutput() SqlCollectionMapOutput {
	return o
}

func (o SqlCollectionMapOutput) ToSqlCollectionMapOutputWithContext(ctx context.Context) SqlCollectionMapOutput {
	return o
}

func (o SqlCollectionMapOutput) MapIndex(k pulumi.StringInput) SqlCollectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SqlCollection {
		return vs[0].(map[string]*SqlCollection)[vs[1].(string)]
	}).(SqlCollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SqlCollectionInput)(nil)).Elem(), &SqlCollection{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlCollectionArrayInput)(nil)).Elem(), SqlCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlCollectionMapInput)(nil)).Elem(), SqlCollectionMap{})
	pulumi.RegisterOutputType(SqlCollectionOutput{})
	pulumi.RegisterOutputType(SqlCollectionArrayOutput{})
	pulumi.RegisterOutputType(SqlCollectionMapOutput{})
}
