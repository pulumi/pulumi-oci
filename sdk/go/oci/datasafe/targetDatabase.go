// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource provides the Target Database resource in Oracle Cloud Infrastructure Data Safe service.
//
// Registers the specified database with Data Safe and creates a Data Safe target database in the Data Safe Console.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataSafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataSafe.NewTargetDatabase(ctx, "testTargetDatabase", &DataSafe.TargetDatabaseArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				DatabaseDetails: &datasafe.TargetDatabaseDatabaseDetailsArgs{
//					DatabaseType:         pulumi.Any(_var.Target_database_database_details_database_type),
//					InfrastructureType:   pulumi.Any(_var.Target_database_database_details_infrastructure_type),
//					AutonomousDatabaseId: pulumi.Any(oci_database_autonomous_database.Test_autonomous_database.Id),
//					DbSystemId:           pulumi.Any(oci_database_db_system.Test_db_system.Id),
//					InstanceId:           pulumi.Any(oci_core_instance.Test_instance.Id),
//					IpAddresses:          pulumi.Any(_var.Target_database_database_details_ip_addresses),
//					ListenerPort:         pulumi.Any(_var.Target_database_database_details_listener_port),
//					ServiceName:          pulumi.Any(oci_core_service.Test_service.Name),
//					VmClusterId:          pulumi.Any(oci_database_vm_cluster.Test_vm_cluster.Id),
//				},
//				ConnectionOption: &datasafe.TargetDatabaseConnectionOptionArgs{
//					ConnectionType:            pulumi.Any(_var.Target_database_connection_option_connection_type),
//					DatasafePrivateEndpointId: pulumi.Any(oci_dataflow_private_endpoint.Test_private_endpoint.Id),
//					OnPremConnectorId:         pulumi.Any(oci_data_safe_on_prem_connector.Test_on_prem_connector.Id),
//				},
//				Credentials: &datasafe.TargetDatabaseCredentialsArgs{
//					Password: pulumi.Any(_var.Target_database_credentials_password),
//					UserName: pulumi.Any(oci_identity_user.Test_user.Name),
//				},
//				DefinedTags: pulumi.Map{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				Description: pulumi.Any(_var.Target_database_description),
//				DisplayName: pulumi.Any(_var.Target_database_display_name),
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//				TlsConfig: &datasafe.TargetDatabaseTlsConfigArgs{
//					Status:               pulumi.Any(_var.Target_database_tls_config_status),
//					CertificateStoreType: pulumi.Any(_var.Target_database_tls_config_certificate_store_type),
//					KeyStoreContent:      pulumi.Any(_var.Target_database_tls_config_key_store_content),
//					StorePassword:        pulumi.Any(_var.Target_database_tls_config_store_password),
//					TrustStoreContent:    pulumi.Any(_var.Target_database_tls_config_trust_store_content),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// TargetDatabases can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DataSafe/targetDatabase:TargetDatabase test_target_database "id"
//
// ```
type TargetDatabase struct {
	pulumi.CustomResourceState

	// The OCIDs of associated resources like database, Data Safe private endpoint etc.
	AssociatedResourceIds pulumi.StringArrayOutput `pulumi:"associatedResourceIds"`
	// (Updatable) The OCID of the compartment in which to create the Data Safe target database.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Types of connection supported by Data Safe.
	ConnectionOption TargetDatabaseConnectionOptionOutput `pulumi:"connectionOption"`
	// (Updatable) The database credentials required for Data Safe to connect to the database.
	Credentials TargetDatabaseCredentialsOutput `pulumi:"credentials"`
	// (Updatable) Details of the database for the registration in Data Safe.
	DatabaseDetails TargetDatabaseDatabaseDetailsOutput `pulumi:"databaseDetails"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) The description of the target database in Data Safe.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The display name of the target database in Data Safe. The name is modifiable and does not need to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Details about the current state of the target database in Data Safe.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The current state of the target database in Data Safe.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The date and time the database was registered in Data Safe and created as a target database in Data Safe.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time of the target database update in Data Safe.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) The details required to establish a TLS enabled connection.
	TlsConfig TargetDatabaseTlsConfigOutput `pulumi:"tlsConfig"`
}

// NewTargetDatabase registers a new resource with the given unique name, arguments, and options.
func NewTargetDatabase(ctx *pulumi.Context,
	name string, args *TargetDatabaseArgs, opts ...pulumi.ResourceOption) (*TargetDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DatabaseDetails == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseDetails'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TargetDatabase
	err := ctx.RegisterResource("oci:DataSafe/targetDatabase:TargetDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTargetDatabase gets an existing TargetDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTargetDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TargetDatabaseState, opts ...pulumi.ResourceOption) (*TargetDatabase, error) {
	var resource TargetDatabase
	err := ctx.ReadResource("oci:DataSafe/targetDatabase:TargetDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TargetDatabase resources.
type targetDatabaseState struct {
	// The OCIDs of associated resources like database, Data Safe private endpoint etc.
	AssociatedResourceIds []string `pulumi:"associatedResourceIds"`
	// (Updatable) The OCID of the compartment in which to create the Data Safe target database.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Types of connection supported by Data Safe.
	ConnectionOption *TargetDatabaseConnectionOption `pulumi:"connectionOption"`
	// (Updatable) The database credentials required for Data Safe to connect to the database.
	Credentials *TargetDatabaseCredentials `pulumi:"credentials"`
	// (Updatable) Details of the database for the registration in Data Safe.
	DatabaseDetails *TargetDatabaseDatabaseDetails `pulumi:"databaseDetails"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description of the target database in Data Safe.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the target database in Data Safe. The name is modifiable and does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Details about the current state of the target database in Data Safe.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The current state of the target database in Data Safe.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the database was registered in Data Safe and created as a target database in Data Safe.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time of the target database update in Data Safe.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) The details required to establish a TLS enabled connection.
	TlsConfig *TargetDatabaseTlsConfig `pulumi:"tlsConfig"`
}

type TargetDatabaseState struct {
	// The OCIDs of associated resources like database, Data Safe private endpoint etc.
	AssociatedResourceIds pulumi.StringArrayInput
	// (Updatable) The OCID of the compartment in which to create the Data Safe target database.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Types of connection supported by Data Safe.
	ConnectionOption TargetDatabaseConnectionOptionPtrInput
	// (Updatable) The database credentials required for Data Safe to connect to the database.
	Credentials TargetDatabaseCredentialsPtrInput
	// (Updatable) Details of the database for the registration in Data Safe.
	DatabaseDetails TargetDatabaseDatabaseDetailsPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description of the target database in Data Safe.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the target database in Data Safe. The name is modifiable and does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Details about the current state of the target database in Data Safe.
	LifecycleDetails pulumi.StringPtrInput
	// The current state of the target database in Data Safe.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The date and time the database was registered in Data Safe and created as a target database in Data Safe.
	TimeCreated pulumi.StringPtrInput
	// The date and time of the target database update in Data Safe.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) The details required to establish a TLS enabled connection.
	TlsConfig TargetDatabaseTlsConfigPtrInput
}

func (TargetDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*targetDatabaseState)(nil)).Elem()
}

type targetDatabaseArgs struct {
	// (Updatable) The OCID of the compartment in which to create the Data Safe target database.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Types of connection supported by Data Safe.
	ConnectionOption *TargetDatabaseConnectionOption `pulumi:"connectionOption"`
	// (Updatable) The database credentials required for Data Safe to connect to the database.
	Credentials *TargetDatabaseCredentials `pulumi:"credentials"`
	// (Updatable) Details of the database for the registration in Data Safe.
	DatabaseDetails TargetDatabaseDatabaseDetails `pulumi:"databaseDetails"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) The description of the target database in Data Safe.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the target database in Data Safe. The name is modifiable and does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) The details required to establish a TLS enabled connection.
	TlsConfig *TargetDatabaseTlsConfig `pulumi:"tlsConfig"`
}

// The set of arguments for constructing a TargetDatabase resource.
type TargetDatabaseArgs struct {
	// (Updatable) The OCID of the compartment in which to create the Data Safe target database.
	CompartmentId pulumi.StringInput
	// (Updatable) Types of connection supported by Data Safe.
	ConnectionOption TargetDatabaseConnectionOptionPtrInput
	// (Updatable) The database credentials required for Data Safe to connect to the database.
	Credentials TargetDatabaseCredentialsPtrInput
	// (Updatable) Details of the database for the registration in Data Safe.
	DatabaseDetails TargetDatabaseDatabaseDetailsInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) The description of the target database in Data Safe.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the target database in Data Safe. The name is modifiable and does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// (Updatable) The details required to establish a TLS enabled connection.
	TlsConfig TargetDatabaseTlsConfigPtrInput
}

func (TargetDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*targetDatabaseArgs)(nil)).Elem()
}

type TargetDatabaseInput interface {
	pulumi.Input

	ToTargetDatabaseOutput() TargetDatabaseOutput
	ToTargetDatabaseOutputWithContext(ctx context.Context) TargetDatabaseOutput
}

func (*TargetDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetDatabase)(nil)).Elem()
}

func (i *TargetDatabase) ToTargetDatabaseOutput() TargetDatabaseOutput {
	return i.ToTargetDatabaseOutputWithContext(context.Background())
}

func (i *TargetDatabase) ToTargetDatabaseOutputWithContext(ctx context.Context) TargetDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetDatabaseOutput)
}

func (i *TargetDatabase) ToOutput(ctx context.Context) pulumix.Output[*TargetDatabase] {
	return pulumix.Output[*TargetDatabase]{
		OutputState: i.ToTargetDatabaseOutputWithContext(ctx).OutputState,
	}
}

// TargetDatabaseArrayInput is an input type that accepts TargetDatabaseArray and TargetDatabaseArrayOutput values.
// You can construct a concrete instance of `TargetDatabaseArrayInput` via:
//
//	TargetDatabaseArray{ TargetDatabaseArgs{...} }
type TargetDatabaseArrayInput interface {
	pulumi.Input

	ToTargetDatabaseArrayOutput() TargetDatabaseArrayOutput
	ToTargetDatabaseArrayOutputWithContext(context.Context) TargetDatabaseArrayOutput
}

type TargetDatabaseArray []TargetDatabaseInput

func (TargetDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TargetDatabase)(nil)).Elem()
}

func (i TargetDatabaseArray) ToTargetDatabaseArrayOutput() TargetDatabaseArrayOutput {
	return i.ToTargetDatabaseArrayOutputWithContext(context.Background())
}

func (i TargetDatabaseArray) ToTargetDatabaseArrayOutputWithContext(ctx context.Context) TargetDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetDatabaseArrayOutput)
}

func (i TargetDatabaseArray) ToOutput(ctx context.Context) pulumix.Output[[]*TargetDatabase] {
	return pulumix.Output[[]*TargetDatabase]{
		OutputState: i.ToTargetDatabaseArrayOutputWithContext(ctx).OutputState,
	}
}

// TargetDatabaseMapInput is an input type that accepts TargetDatabaseMap and TargetDatabaseMapOutput values.
// You can construct a concrete instance of `TargetDatabaseMapInput` via:
//
//	TargetDatabaseMap{ "key": TargetDatabaseArgs{...} }
type TargetDatabaseMapInput interface {
	pulumi.Input

	ToTargetDatabaseMapOutput() TargetDatabaseMapOutput
	ToTargetDatabaseMapOutputWithContext(context.Context) TargetDatabaseMapOutput
}

type TargetDatabaseMap map[string]TargetDatabaseInput

func (TargetDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TargetDatabase)(nil)).Elem()
}

func (i TargetDatabaseMap) ToTargetDatabaseMapOutput() TargetDatabaseMapOutput {
	return i.ToTargetDatabaseMapOutputWithContext(context.Background())
}

func (i TargetDatabaseMap) ToTargetDatabaseMapOutputWithContext(ctx context.Context) TargetDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetDatabaseMapOutput)
}

func (i TargetDatabaseMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*TargetDatabase] {
	return pulumix.Output[map[string]*TargetDatabase]{
		OutputState: i.ToTargetDatabaseMapOutputWithContext(ctx).OutputState,
	}
}

type TargetDatabaseOutput struct{ *pulumi.OutputState }

func (TargetDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetDatabase)(nil)).Elem()
}

func (o TargetDatabaseOutput) ToTargetDatabaseOutput() TargetDatabaseOutput {
	return o
}

func (o TargetDatabaseOutput) ToTargetDatabaseOutputWithContext(ctx context.Context) TargetDatabaseOutput {
	return o
}

func (o TargetDatabaseOutput) ToOutput(ctx context.Context) pulumix.Output[*TargetDatabase] {
	return pulumix.Output[*TargetDatabase]{
		OutputState: o.OutputState,
	}
}

// The OCIDs of associated resources like database, Data Safe private endpoint etc.
func (o TargetDatabaseOutput) AssociatedResourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TargetDatabase) pulumi.StringArrayOutput { return v.AssociatedResourceIds }).(pulumi.StringArrayOutput)
}

// (Updatable) The OCID of the compartment in which to create the Data Safe target database.
func (o TargetDatabaseOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetDatabase) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Types of connection supported by Data Safe.
func (o TargetDatabaseOutput) ConnectionOption() TargetDatabaseConnectionOptionOutput {
	return o.ApplyT(func(v *TargetDatabase) TargetDatabaseConnectionOptionOutput { return v.ConnectionOption }).(TargetDatabaseConnectionOptionOutput)
}

// (Updatable) The database credentials required for Data Safe to connect to the database.
func (o TargetDatabaseOutput) Credentials() TargetDatabaseCredentialsOutput {
	return o.ApplyT(func(v *TargetDatabase) TargetDatabaseCredentialsOutput { return v.Credentials }).(TargetDatabaseCredentialsOutput)
}

// (Updatable) Details of the database for the registration in Data Safe.
func (o TargetDatabaseOutput) DatabaseDetails() TargetDatabaseDatabaseDetailsOutput {
	return o.ApplyT(func(v *TargetDatabase) TargetDatabaseDatabaseDetailsOutput { return v.DatabaseDetails }).(TargetDatabaseDatabaseDetailsOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
func (o TargetDatabaseOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *TargetDatabase) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) The description of the target database in Data Safe.
func (o TargetDatabaseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetDatabase) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The display name of the target database in Data Safe. The name is modifiable and does not need to be unique.
func (o TargetDatabaseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetDatabase) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o TargetDatabaseOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *TargetDatabase) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// Details about the current state of the target database in Data Safe.
func (o TargetDatabaseOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetDatabase) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The current state of the target database in Data Safe.
func (o TargetDatabaseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetDatabase) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o TargetDatabaseOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *TargetDatabase) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the database was registered in Data Safe and created as a target database in Data Safe.
func (o TargetDatabaseOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetDatabase) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time of the target database update in Data Safe.
func (o TargetDatabaseOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetDatabase) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) The details required to establish a TLS enabled connection.
func (o TargetDatabaseOutput) TlsConfig() TargetDatabaseTlsConfigOutput {
	return o.ApplyT(func(v *TargetDatabase) TargetDatabaseTlsConfigOutput { return v.TlsConfig }).(TargetDatabaseTlsConfigOutput)
}

type TargetDatabaseArrayOutput struct{ *pulumi.OutputState }

func (TargetDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TargetDatabase)(nil)).Elem()
}

func (o TargetDatabaseArrayOutput) ToTargetDatabaseArrayOutput() TargetDatabaseArrayOutput {
	return o
}

func (o TargetDatabaseArrayOutput) ToTargetDatabaseArrayOutputWithContext(ctx context.Context) TargetDatabaseArrayOutput {
	return o
}

func (o TargetDatabaseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*TargetDatabase] {
	return pulumix.Output[[]*TargetDatabase]{
		OutputState: o.OutputState,
	}
}

func (o TargetDatabaseArrayOutput) Index(i pulumi.IntInput) TargetDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TargetDatabase {
		return vs[0].([]*TargetDatabase)[vs[1].(int)]
	}).(TargetDatabaseOutput)
}

type TargetDatabaseMapOutput struct{ *pulumi.OutputState }

func (TargetDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TargetDatabase)(nil)).Elem()
}

func (o TargetDatabaseMapOutput) ToTargetDatabaseMapOutput() TargetDatabaseMapOutput {
	return o
}

func (o TargetDatabaseMapOutput) ToTargetDatabaseMapOutputWithContext(ctx context.Context) TargetDatabaseMapOutput {
	return o
}

func (o TargetDatabaseMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*TargetDatabase] {
	return pulumix.Output[map[string]*TargetDatabase]{
		OutputState: o.OutputState,
	}
}

func (o TargetDatabaseMapOutput) MapIndex(k pulumi.StringInput) TargetDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TargetDatabase {
		return vs[0].(map[string]*TargetDatabase)[vs[1].(string)]
	}).(TargetDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TargetDatabaseInput)(nil)).Elem(), &TargetDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetDatabaseArrayInput)(nil)).Elem(), TargetDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetDatabaseMapInput)(nil)).Elem(), TargetDatabaseMap{})
	pulumi.RegisterOutputType(TargetDatabaseOutput{})
	pulumi.RegisterOutputType(TargetDatabaseArrayOutput{})
	pulumi.RegisterOutputType(TargetDatabaseMapOutput{})
}
