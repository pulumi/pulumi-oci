// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasafe

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Unified Audit Policy resource in Oracle Cloud Infrastructure Data Safe service.
//
// Creates the specified unified audit policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datasafe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datasafe.NewUnifiedAuditPolicy(ctx, "test_unified_audit_policy", &datasafe.UnifiedAuditPolicyArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				Conditions: datasafe.UnifiedAuditPolicyConditionArray{
//					&datasafe.UnifiedAuditPolicyConditionArgs{
//						EntitySelection: pulumi.Any(unifiedAuditPolicyConditionsEntitySelection),
//						EntityType:      pulumi.Any(unifiedAuditPolicyConditionsEntityType),
//						OperationStatus: pulumi.Any(unifiedAuditPolicyConditionsOperationStatus),
//						AttributeSetId:  pulumi.Any(testAttributeSet.Id),
//						RoleNames:       pulumi.Any(unifiedAuditPolicyConditionsRoleNames),
//						UserNames:       pulumi.Any(unifiedAuditPolicyConditionsUserNames),
//					},
//				},
//				SecurityPolicyId:               pulumi.Any(testSecurityPolicy.Id),
//				Status:                         pulumi.Any(unifiedAuditPolicyStatus),
//				UnifiedAuditPolicyDefinitionId: pulumi.Any(testUnifiedAuditPolicyDefinition.Id),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				Description: pulumi.Any(unifiedAuditPolicyDescription),
//				DisplayName: pulumi.Any(unifiedAuditPolicyDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// UnifiedAuditPolicies can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataSafe/unifiedAuditPolicy:UnifiedAuditPolicy test_unified_audit_policy "id"
// ```
type UnifiedAuditPolicy struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment in which to create the unified audit policy.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Lists the audit policy provisioning conditions.
	Conditions UnifiedAuditPolicyConditionArrayOutput `pulumi:"conditions"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) The description of the unified audit policy in Data Safe.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Indicates on whom the audit policy is enabled.
	EnabledEntities pulumi.StringOutput `pulumi:"enabledEntities"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Indicates whether the unified audit policy is seeded or not.
	IsSeeded pulumi.BoolOutput `pulumi:"isSeeded"`
	// The details of the current state of the unified audit policy in Data Safe.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The OCID of the security policy corresponding to the unified audit policy.
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
	// The current state of the unified audit policy.
	State pulumi.StringOutput `pulumi:"state"`
	// (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
	Status pulumi.StringOutput `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The time the the unified audit policy was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// The OCID of the associated unified audit policy definition.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UnifiedAuditPolicyDefinitionId pulumi.StringOutput `pulumi:"unifiedAuditPolicyDefinitionId"`
}

// NewUnifiedAuditPolicy registers a new resource with the given unique name, arguments, and options.
func NewUnifiedAuditPolicy(ctx *pulumi.Context,
	name string, args *UnifiedAuditPolicyArgs, opts ...pulumi.ResourceOption) (*UnifiedAuditPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.Conditions == nil {
		return nil, errors.New("invalid value for required argument 'Conditions'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	if args.UnifiedAuditPolicyDefinitionId == nil {
		return nil, errors.New("invalid value for required argument 'UnifiedAuditPolicyDefinitionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UnifiedAuditPolicy
	err := ctx.RegisterResource("oci:DataSafe/unifiedAuditPolicy:UnifiedAuditPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUnifiedAuditPolicy gets an existing UnifiedAuditPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUnifiedAuditPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UnifiedAuditPolicyState, opts ...pulumi.ResourceOption) (*UnifiedAuditPolicy, error) {
	var resource UnifiedAuditPolicy
	err := ctx.ReadResource("oci:DataSafe/unifiedAuditPolicy:UnifiedAuditPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UnifiedAuditPolicy resources.
type unifiedAuditPolicyState struct {
	// (Updatable) The OCID of the compartment in which to create the unified audit policy.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Lists the audit policy provisioning conditions.
	Conditions []UnifiedAuditPolicyCondition `pulumi:"conditions"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The description of the unified audit policy in Data Safe.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// Indicates on whom the audit policy is enabled.
	EnabledEntities *string `pulumi:"enabledEntities"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Indicates whether the unified audit policy is seeded or not.
	IsSeeded *bool `pulumi:"isSeeded"`
	// The details of the current state of the unified audit policy in Data Safe.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The OCID of the security policy corresponding to the unified audit policy.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
	// The current state of the unified audit policy.
	State *string `pulumi:"state"`
	// (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
	Status *string `pulumi:"status"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the the unified audit policy was created, in the format defined by RFC3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// The OCID of the associated unified audit policy definition.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UnifiedAuditPolicyDefinitionId *string `pulumi:"unifiedAuditPolicyDefinitionId"`
}

type UnifiedAuditPolicyState struct {
	// (Updatable) The OCID of the compartment in which to create the unified audit policy.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Lists the audit policy provisioning conditions.
	Conditions UnifiedAuditPolicyConditionArrayInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) The description of the unified audit policy in Data Safe.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// Indicates on whom the audit policy is enabled.
	EnabledEntities pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Indicates whether the unified audit policy is seeded or not.
	IsSeeded pulumi.BoolPtrInput
	// The details of the current state of the unified audit policy in Data Safe.
	LifecycleDetails pulumi.StringPtrInput
	// The OCID of the security policy corresponding to the unified audit policy.
	SecurityPolicyId pulumi.StringPtrInput
	// The current state of the unified audit policy.
	State pulumi.StringPtrInput
	// (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
	Status pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The time the the unified audit policy was created, in the format defined by RFC3339.
	TimeCreated pulumi.StringPtrInput
	// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
	TimeUpdated pulumi.StringPtrInput
	// The OCID of the associated unified audit policy definition.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UnifiedAuditPolicyDefinitionId pulumi.StringPtrInput
}

func (UnifiedAuditPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*unifiedAuditPolicyState)(nil)).Elem()
}

type unifiedAuditPolicyArgs struct {
	// (Updatable) The OCID of the compartment in which to create the unified audit policy.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Lists the audit policy provisioning conditions.
	Conditions []UnifiedAuditPolicyCondition `pulumi:"conditions"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The description of the unified audit policy in Data Safe.
	Description *string `pulumi:"description"`
	// (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the security policy corresponding to the unified audit policy.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	// (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
	Status string `pulumi:"status"`
	// The OCID of the associated unified audit policy definition.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UnifiedAuditPolicyDefinitionId string `pulumi:"unifiedAuditPolicyDefinitionId"`
}

// The set of arguments for constructing a UnifiedAuditPolicy resource.
type UnifiedAuditPolicyArgs struct {
	// (Updatable) The OCID of the compartment in which to create the unified audit policy.
	CompartmentId pulumi.StringInput
	// (Updatable) Lists the audit policy provisioning conditions.
	Conditions UnifiedAuditPolicyConditionArrayInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) The description of the unified audit policy in Data Safe.
	Description pulumi.StringPtrInput
	// (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// The OCID of the security policy corresponding to the unified audit policy.
	SecurityPolicyId pulumi.StringInput
	// (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
	Status pulumi.StringInput
	// The OCID of the associated unified audit policy definition.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UnifiedAuditPolicyDefinitionId pulumi.StringInput
}

func (UnifiedAuditPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*unifiedAuditPolicyArgs)(nil)).Elem()
}

type UnifiedAuditPolicyInput interface {
	pulumi.Input

	ToUnifiedAuditPolicyOutput() UnifiedAuditPolicyOutput
	ToUnifiedAuditPolicyOutputWithContext(ctx context.Context) UnifiedAuditPolicyOutput
}

func (*UnifiedAuditPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**UnifiedAuditPolicy)(nil)).Elem()
}

func (i *UnifiedAuditPolicy) ToUnifiedAuditPolicyOutput() UnifiedAuditPolicyOutput {
	return i.ToUnifiedAuditPolicyOutputWithContext(context.Background())
}

func (i *UnifiedAuditPolicy) ToUnifiedAuditPolicyOutputWithContext(ctx context.Context) UnifiedAuditPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnifiedAuditPolicyOutput)
}

// UnifiedAuditPolicyArrayInput is an input type that accepts UnifiedAuditPolicyArray and UnifiedAuditPolicyArrayOutput values.
// You can construct a concrete instance of `UnifiedAuditPolicyArrayInput` via:
//
//	UnifiedAuditPolicyArray{ UnifiedAuditPolicyArgs{...} }
type UnifiedAuditPolicyArrayInput interface {
	pulumi.Input

	ToUnifiedAuditPolicyArrayOutput() UnifiedAuditPolicyArrayOutput
	ToUnifiedAuditPolicyArrayOutputWithContext(context.Context) UnifiedAuditPolicyArrayOutput
}

type UnifiedAuditPolicyArray []UnifiedAuditPolicyInput

func (UnifiedAuditPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UnifiedAuditPolicy)(nil)).Elem()
}

func (i UnifiedAuditPolicyArray) ToUnifiedAuditPolicyArrayOutput() UnifiedAuditPolicyArrayOutput {
	return i.ToUnifiedAuditPolicyArrayOutputWithContext(context.Background())
}

func (i UnifiedAuditPolicyArray) ToUnifiedAuditPolicyArrayOutputWithContext(ctx context.Context) UnifiedAuditPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnifiedAuditPolicyArrayOutput)
}

// UnifiedAuditPolicyMapInput is an input type that accepts UnifiedAuditPolicyMap and UnifiedAuditPolicyMapOutput values.
// You can construct a concrete instance of `UnifiedAuditPolicyMapInput` via:
//
//	UnifiedAuditPolicyMap{ "key": UnifiedAuditPolicyArgs{...} }
type UnifiedAuditPolicyMapInput interface {
	pulumi.Input

	ToUnifiedAuditPolicyMapOutput() UnifiedAuditPolicyMapOutput
	ToUnifiedAuditPolicyMapOutputWithContext(context.Context) UnifiedAuditPolicyMapOutput
}

type UnifiedAuditPolicyMap map[string]UnifiedAuditPolicyInput

func (UnifiedAuditPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UnifiedAuditPolicy)(nil)).Elem()
}

func (i UnifiedAuditPolicyMap) ToUnifiedAuditPolicyMapOutput() UnifiedAuditPolicyMapOutput {
	return i.ToUnifiedAuditPolicyMapOutputWithContext(context.Background())
}

func (i UnifiedAuditPolicyMap) ToUnifiedAuditPolicyMapOutputWithContext(ctx context.Context) UnifiedAuditPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnifiedAuditPolicyMapOutput)
}

type UnifiedAuditPolicyOutput struct{ *pulumi.OutputState }

func (UnifiedAuditPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UnifiedAuditPolicy)(nil)).Elem()
}

func (o UnifiedAuditPolicyOutput) ToUnifiedAuditPolicyOutput() UnifiedAuditPolicyOutput {
	return o
}

func (o UnifiedAuditPolicyOutput) ToUnifiedAuditPolicyOutputWithContext(ctx context.Context) UnifiedAuditPolicyOutput {
	return o
}

// (Updatable) The OCID of the compartment in which to create the unified audit policy.
func (o UnifiedAuditPolicyOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Lists the audit policy provisioning conditions.
func (o UnifiedAuditPolicyOutput) Conditions() UnifiedAuditPolicyConditionArrayOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) UnifiedAuditPolicyConditionArrayOutput { return v.Conditions }).(UnifiedAuditPolicyConditionArrayOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
func (o UnifiedAuditPolicyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) The description of the unified audit policy in Data Safe.
func (o UnifiedAuditPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
func (o UnifiedAuditPolicyOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Indicates on whom the audit policy is enabled.
func (o UnifiedAuditPolicyOutput) EnabledEntities() pulumi.StringOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringOutput { return v.EnabledEntities }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
func (o UnifiedAuditPolicyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Indicates whether the unified audit policy is seeded or not.
func (o UnifiedAuditPolicyOutput) IsSeeded() pulumi.BoolOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.BoolOutput { return v.IsSeeded }).(pulumi.BoolOutput)
}

// The details of the current state of the unified audit policy in Data Safe.
func (o UnifiedAuditPolicyOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of the security policy corresponding to the unified audit policy.
func (o UnifiedAuditPolicyOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

// The current state of the unified audit policy.
func (o UnifiedAuditPolicyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
func (o UnifiedAuditPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o UnifiedAuditPolicyOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the the unified audit policy was created, in the format defined by RFC3339.
func (o UnifiedAuditPolicyOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The last date and time the unified audit policy was updated, in the format defined by RFC3339.
func (o UnifiedAuditPolicyOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The OCID of the associated unified audit policy definition.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o UnifiedAuditPolicyOutput) UnifiedAuditPolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v *UnifiedAuditPolicy) pulumi.StringOutput { return v.UnifiedAuditPolicyDefinitionId }).(pulumi.StringOutput)
}

type UnifiedAuditPolicyArrayOutput struct{ *pulumi.OutputState }

func (UnifiedAuditPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UnifiedAuditPolicy)(nil)).Elem()
}

func (o UnifiedAuditPolicyArrayOutput) ToUnifiedAuditPolicyArrayOutput() UnifiedAuditPolicyArrayOutput {
	return o
}

func (o UnifiedAuditPolicyArrayOutput) ToUnifiedAuditPolicyArrayOutputWithContext(ctx context.Context) UnifiedAuditPolicyArrayOutput {
	return o
}

func (o UnifiedAuditPolicyArrayOutput) Index(i pulumi.IntInput) UnifiedAuditPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UnifiedAuditPolicy {
		return vs[0].([]*UnifiedAuditPolicy)[vs[1].(int)]
	}).(UnifiedAuditPolicyOutput)
}

type UnifiedAuditPolicyMapOutput struct{ *pulumi.OutputState }

func (UnifiedAuditPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UnifiedAuditPolicy)(nil)).Elem()
}

func (o UnifiedAuditPolicyMapOutput) ToUnifiedAuditPolicyMapOutput() UnifiedAuditPolicyMapOutput {
	return o
}

func (o UnifiedAuditPolicyMapOutput) ToUnifiedAuditPolicyMapOutputWithContext(ctx context.Context) UnifiedAuditPolicyMapOutput {
	return o
}

func (o UnifiedAuditPolicyMapOutput) MapIndex(k pulumi.StringInput) UnifiedAuditPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UnifiedAuditPolicy {
		return vs[0].(map[string]*UnifiedAuditPolicy)[vs[1].(string)]
	}).(UnifiedAuditPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UnifiedAuditPolicyInput)(nil)).Elem(), &UnifiedAuditPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*UnifiedAuditPolicyArrayInput)(nil)).Elem(), UnifiedAuditPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UnifiedAuditPolicyMapInput)(nil)).Elem(), UnifiedAuditPolicyMap{})
	pulumi.RegisterOutputType(UnifiedAuditPolicyOutput{})
	pulumi.RegisterOutputType(UnifiedAuditPolicyArrayOutput{})
	pulumi.RegisterOutputType(UnifiedAuditPolicyMapOutput{})
}
