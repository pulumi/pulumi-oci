// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datascience

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Job Shapes in Oracle Cloud Infrastructure Data Science service.
//
// List job shapes available in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DataScience"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DataScience.GetJobShapes(ctx, &datascience.GetJobShapesArgs{
//				CompartmentId: _var.Compartment_id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetJobShapes(ctx *pulumi.Context, args *GetJobShapesArgs, opts ...pulumi.InvokeOption) (*GetJobShapesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetJobShapesResult
	err := ctx.Invoke("oci:DataScience/getJobShapes:getJobShapes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getJobShapes.
type GetJobShapesArgs struct {
	// <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string               `pulumi:"compartmentId"`
	Filters       []GetJobShapesFilter `pulumi:"filters"`
}

// A collection of values returned by getJobShapes.
type GetJobShapesResult struct {
	CompartmentId string               `pulumi:"compartmentId"`
	Filters       []GetJobShapesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The list of job_shapes.
	JobShapes []GetJobShapesJobShape `pulumi:"jobShapes"`
}

func GetJobShapesOutput(ctx *pulumi.Context, args GetJobShapesOutputArgs, opts ...pulumi.InvokeOption) GetJobShapesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetJobShapesResult, error) {
			args := v.(GetJobShapesArgs)
			r, err := GetJobShapes(ctx, &args, opts...)
			var s GetJobShapesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetJobShapesResultOutput)
}

// A collection of arguments for invoking getJobShapes.
type GetJobShapesOutputArgs struct {
	// <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput           `pulumi:"compartmentId"`
	Filters       GetJobShapesFilterArrayInput `pulumi:"filters"`
}

func (GetJobShapesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobShapesArgs)(nil)).Elem()
}

// A collection of values returned by getJobShapes.
type GetJobShapesResultOutput struct{ *pulumi.OutputState }

func (GetJobShapesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobShapesResult)(nil)).Elem()
}

func (o GetJobShapesResultOutput) ToGetJobShapesResultOutput() GetJobShapesResultOutput {
	return o
}

func (o GetJobShapesResultOutput) ToGetJobShapesResultOutputWithContext(ctx context.Context) GetJobShapesResultOutput {
	return o
}

func (o GetJobShapesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobShapesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetJobShapesResultOutput) Filters() GetJobShapesFilterArrayOutput {
	return o.ApplyT(func(v GetJobShapesResult) []GetJobShapesFilter { return v.Filters }).(GetJobShapesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetJobShapesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetJobShapesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of job_shapes.
func (o GetJobShapesResultOutput) JobShapes() GetJobShapesJobShapeArrayOutput {
	return o.ApplyT(func(v GetJobShapesResult) []GetJobShapesJobShape { return v.JobShapes }).(GetJobShapesJobShapeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetJobShapesResultOutput{})
}
