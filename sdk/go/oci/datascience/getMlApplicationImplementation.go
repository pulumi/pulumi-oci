// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datascience

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Ml Application Implementation resource in Oracle Cloud Infrastructure Data Science service.
//
// # Gets a MlApplicationImplementation by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datascience"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datascience.GetMlApplicationImplementation(ctx, &datascience.GetMlApplicationImplementationArgs{
//				MlApplicationImplementationId: testMlApplicationImplementationOciDatascienceMlApplicationImplementation.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMlApplicationImplementation(ctx *pulumi.Context, args *LookupMlApplicationImplementationArgs, opts ...pulumi.InvokeOption) (*LookupMlApplicationImplementationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMlApplicationImplementationResult
	err := ctx.Invoke("oci:DataScience/getMlApplicationImplementation:getMlApplicationImplementation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMlApplicationImplementation.
type LookupMlApplicationImplementationArgs struct {
	// unique MlApplicationImplementation identifier
	MlApplicationImplementationId string `pulumi:"mlApplicationImplementationId"`
}

// A collection of values returned by getMlApplicationImplementation.
type LookupMlApplicationImplementationResult struct {
	// List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
	AllowedMigrationDestinations []string `pulumi:"allowedMigrationDestinations"`
	// List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
	ApplicationComponents []GetMlApplicationImplementationApplicationComponent `pulumi:"applicationComponents"`
	// The OCID of the compartment where ML Application Implementation is created.
	CompartmentId string `pulumi:"compartmentId"`
	// Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
	ConfigurationSchemas []GetMlApplicationImplementationConfigurationSchema `pulumi:"configurationSchemas"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// short description of the argument
	Description string `pulumi:"description"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the MlApplicationImplementation. Unique identifier that is immutable after creation.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Configuration of Logging for ML Application Implementation.
	Loggings []GetMlApplicationImplementationLogging `pulumi:"loggings"`
	// The OCID of the ML Application implemented by this ML Application Implementation.
	MlApplicationId               string `pulumi:"mlApplicationId"`
	MlApplicationImplementationId string `pulumi:"mlApplicationImplementationId"`
	// The name of ML Application (based on mlApplicationId)
	MlApplicationName    string            `pulumi:"mlApplicationName"`
	MlApplicationPackage map[string]string `pulumi:"mlApplicationPackage"`
	// List of ML Application package arguments provided during ML Application package upload.
	MlApplicationPackageArguments []GetMlApplicationImplementationMlApplicationPackageArgument `pulumi:"mlApplicationPackageArguments"`
	// ML Application Implementation name which is unique for given ML Application.
	Name                string            `pulumi:"name"`
	OpcMlAppPackageArgs map[string]string `pulumi:"opcMlAppPackageArgs"`
	// The version of ML Application Package (e.g. "1.2" or "2.0.4") defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
	PackageVersion string `pulumi:"packageVersion"`
	// The current state of the MlApplicationImplementation.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
	TimeCreated string `pulumi:"timeCreated"`
	// Time of last MlApplicationImplementation update in the format defined by RFC 3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupMlApplicationImplementationOutput(ctx *pulumi.Context, args LookupMlApplicationImplementationOutputArgs, opts ...pulumi.InvokeOption) LookupMlApplicationImplementationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMlApplicationImplementationResultOutput, error) {
			args := v.(LookupMlApplicationImplementationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataScience/getMlApplicationImplementation:getMlApplicationImplementation", args, LookupMlApplicationImplementationResultOutput{}, options).(LookupMlApplicationImplementationResultOutput), nil
		}).(LookupMlApplicationImplementationResultOutput)
}

// A collection of arguments for invoking getMlApplicationImplementation.
type LookupMlApplicationImplementationOutputArgs struct {
	// unique MlApplicationImplementation identifier
	MlApplicationImplementationId pulumi.StringInput `pulumi:"mlApplicationImplementationId"`
}

func (LookupMlApplicationImplementationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMlApplicationImplementationArgs)(nil)).Elem()
}

// A collection of values returned by getMlApplicationImplementation.
type LookupMlApplicationImplementationResultOutput struct{ *pulumi.OutputState }

func (LookupMlApplicationImplementationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMlApplicationImplementationResult)(nil)).Elem()
}

func (o LookupMlApplicationImplementationResultOutput) ToLookupMlApplicationImplementationResultOutput() LookupMlApplicationImplementationResultOutput {
	return o
}

func (o LookupMlApplicationImplementationResultOutput) ToLookupMlApplicationImplementationResultOutputWithContext(ctx context.Context) LookupMlApplicationImplementationResultOutput {
	return o
}

// List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
func (o LookupMlApplicationImplementationResultOutput) AllowedMigrationDestinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) []string { return v.AllowedMigrationDestinations }).(pulumi.StringArrayOutput)
}

// List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
func (o LookupMlApplicationImplementationResultOutput) ApplicationComponents() GetMlApplicationImplementationApplicationComponentArrayOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) []GetMlApplicationImplementationApplicationComponent {
		return v.ApplicationComponents
	}).(GetMlApplicationImplementationApplicationComponentArrayOutput)
}

// The OCID of the compartment where ML Application Implementation is created.
func (o LookupMlApplicationImplementationResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
func (o LookupMlApplicationImplementationResultOutput) ConfigurationSchemas() GetMlApplicationImplementationConfigurationSchemaArrayOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) []GetMlApplicationImplementationConfigurationSchema {
		return v.ConfigurationSchemas
	}).(GetMlApplicationImplementationConfigurationSchemaArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupMlApplicationImplementationResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// short description of the argument
func (o LookupMlApplicationImplementationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.Description }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupMlApplicationImplementationResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the MlApplicationImplementation. Unique identifier that is immutable after creation.
func (o LookupMlApplicationImplementationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupMlApplicationImplementationResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Configuration of Logging for ML Application Implementation.
func (o LookupMlApplicationImplementationResultOutput) Loggings() GetMlApplicationImplementationLoggingArrayOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) []GetMlApplicationImplementationLogging {
		return v.Loggings
	}).(GetMlApplicationImplementationLoggingArrayOutput)
}

// The OCID of the ML Application implemented by this ML Application Implementation.
func (o LookupMlApplicationImplementationResultOutput) MlApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.MlApplicationId }).(pulumi.StringOutput)
}

func (o LookupMlApplicationImplementationResultOutput) MlApplicationImplementationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.MlApplicationImplementationId }).(pulumi.StringOutput)
}

// The name of ML Application (based on mlApplicationId)
func (o LookupMlApplicationImplementationResultOutput) MlApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.MlApplicationName }).(pulumi.StringOutput)
}

func (o LookupMlApplicationImplementationResultOutput) MlApplicationPackage() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) map[string]string { return v.MlApplicationPackage }).(pulumi.StringMapOutput)
}

// List of ML Application package arguments provided during ML Application package upload.
func (o LookupMlApplicationImplementationResultOutput) MlApplicationPackageArguments() GetMlApplicationImplementationMlApplicationPackageArgumentArrayOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) []GetMlApplicationImplementationMlApplicationPackageArgument {
		return v.MlApplicationPackageArguments
	}).(GetMlApplicationImplementationMlApplicationPackageArgumentArrayOutput)
}

// ML Application Implementation name which is unique for given ML Application.
func (o LookupMlApplicationImplementationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMlApplicationImplementationResultOutput) OpcMlAppPackageArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) map[string]string { return v.OpcMlAppPackageArgs }).(pulumi.StringMapOutput)
}

// The version of ML Application Package (e.g. "1.2" or "2.0.4") defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
func (o LookupMlApplicationImplementationResultOutput) PackageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.PackageVersion }).(pulumi.StringOutput)
}

// The current state of the MlApplicationImplementation.
func (o LookupMlApplicationImplementationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupMlApplicationImplementationResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
func (o LookupMlApplicationImplementationResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time of last MlApplicationImplementation update in the format defined by RFC 3339.
func (o LookupMlApplicationImplementationResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationImplementationResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMlApplicationImplementationResultOutput{})
}
