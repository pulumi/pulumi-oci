// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datascience

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Ml Application Implementations in Oracle Cloud Infrastructure Data Science service.
//
// Returns a list of MlApplicationImplementations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datascience"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datascience.GetMlApplicationImplementations(ctx, &datascience.GetMlApplicationImplementationsArgs{
//				CompartmentId:                 compartmentId,
//				CompartmentIdInSubtree:        pulumi.BoolRef(mlApplicationImplementationCompartmentIdInSubtree),
//				MlApplicationId:               pulumi.StringRef(testMlApplication.Id),
//				MlApplicationImplementationId: pulumi.StringRef(testMlApplicationImplementation.Id),
//				Name:                          pulumi.StringRef(mlApplicationImplementationName),
//				State:                         pulumi.StringRef(mlApplicationImplementationState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMlApplicationImplementations(ctx *pulumi.Context, args *GetMlApplicationImplementationsArgs, opts ...pulumi.InvokeOption) (*GetMlApplicationImplementationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMlApplicationImplementationsResult
	err := ctx.Invoke("oci:DataScience/getMlApplicationImplementations:getMlApplicationImplementations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMlApplicationImplementations.
type GetMlApplicationImplementationsArgs struct {
	// <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// If it is true search must include all results from descendant compartments. Value true is allowed only if compartmentId refers to root compartment.
	CompartmentIdInSubtree *bool                                   `pulumi:"compartmentIdInSubtree"`
	Filters                []GetMlApplicationImplementationsFilter `pulumi:"filters"`
	// unique MlApplication identifier
	MlApplicationId *string `pulumi:"mlApplicationId"`
	// unique MlApplicationImplementation identifier
	MlApplicationImplementationId *string `pulumi:"mlApplicationImplementationId"`
	// A filter to return only resources that match the entire name given.
	Name *string `pulumi:"name"`
	// A filter to return only resources with lifecycleState matching the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getMlApplicationImplementations.
type GetMlApplicationImplementationsResult struct {
	// The OCID of the compartment where ML Application Implementation is created.
	CompartmentId          string                                  `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool                                   `pulumi:"compartmentIdInSubtree"`
	Filters                []GetMlApplicationImplementationsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of the ML Application implemented by this ML Application Implementation.
	MlApplicationId *string `pulumi:"mlApplicationId"`
	// The list of ml_application_implementation_collection.
	MlApplicationImplementationCollections []GetMlApplicationImplementationsMlApplicationImplementationCollection `pulumi:"mlApplicationImplementationCollections"`
	MlApplicationImplementationId          *string                                                                `pulumi:"mlApplicationImplementationId"`
	// ML Application Implementation name which is unique for given ML Application.
	Name *string `pulumi:"name"`
	// The current state of the MlApplicationImplementation.
	State *string `pulumi:"state"`
}

func GetMlApplicationImplementationsOutput(ctx *pulumi.Context, args GetMlApplicationImplementationsOutputArgs, opts ...pulumi.InvokeOption) GetMlApplicationImplementationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMlApplicationImplementationsResultOutput, error) {
			args := v.(GetMlApplicationImplementationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataScience/getMlApplicationImplementations:getMlApplicationImplementations", args, GetMlApplicationImplementationsResultOutput{}, options).(GetMlApplicationImplementationsResultOutput), nil
		}).(GetMlApplicationImplementationsResultOutput)
}

// A collection of arguments for invoking getMlApplicationImplementations.
type GetMlApplicationImplementationsOutputArgs struct {
	// <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// If it is true search must include all results from descendant compartments. Value true is allowed only if compartmentId refers to root compartment.
	CompartmentIdInSubtree pulumi.BoolPtrInput                             `pulumi:"compartmentIdInSubtree"`
	Filters                GetMlApplicationImplementationsFilterArrayInput `pulumi:"filters"`
	// unique MlApplication identifier
	MlApplicationId pulumi.StringPtrInput `pulumi:"mlApplicationId"`
	// unique MlApplicationImplementation identifier
	MlApplicationImplementationId pulumi.StringPtrInput `pulumi:"mlApplicationImplementationId"`
	// A filter to return only resources that match the entire name given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only resources with lifecycleState matching the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetMlApplicationImplementationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMlApplicationImplementationsArgs)(nil)).Elem()
}

// A collection of values returned by getMlApplicationImplementations.
type GetMlApplicationImplementationsResultOutput struct{ *pulumi.OutputState }

func (GetMlApplicationImplementationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMlApplicationImplementationsResult)(nil)).Elem()
}

func (o GetMlApplicationImplementationsResultOutput) ToGetMlApplicationImplementationsResultOutput() GetMlApplicationImplementationsResultOutput {
	return o
}

func (o GetMlApplicationImplementationsResultOutput) ToGetMlApplicationImplementationsResultOutputWithContext(ctx context.Context) GetMlApplicationImplementationsResultOutput {
	return o
}

// The OCID of the compartment where ML Application Implementation is created.
func (o GetMlApplicationImplementationsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMlApplicationImplementationsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetMlApplicationImplementationsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetMlApplicationImplementationsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetMlApplicationImplementationsResultOutput) Filters() GetMlApplicationImplementationsFilterArrayOutput {
	return o.ApplyT(func(v GetMlApplicationImplementationsResult) []GetMlApplicationImplementationsFilter {
		return v.Filters
	}).(GetMlApplicationImplementationsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMlApplicationImplementationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMlApplicationImplementationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the ML Application implemented by this ML Application Implementation.
func (o GetMlApplicationImplementationsResultOutput) MlApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMlApplicationImplementationsResult) *string { return v.MlApplicationId }).(pulumi.StringPtrOutput)
}

// The list of ml_application_implementation_collection.
func (o GetMlApplicationImplementationsResultOutput) MlApplicationImplementationCollections() GetMlApplicationImplementationsMlApplicationImplementationCollectionArrayOutput {
	return o.ApplyT(func(v GetMlApplicationImplementationsResult) []GetMlApplicationImplementationsMlApplicationImplementationCollection {
		return v.MlApplicationImplementationCollections
	}).(GetMlApplicationImplementationsMlApplicationImplementationCollectionArrayOutput)
}

func (o GetMlApplicationImplementationsResultOutput) MlApplicationImplementationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMlApplicationImplementationsResult) *string { return v.MlApplicationImplementationId }).(pulumi.StringPtrOutput)
}

// ML Application Implementation name which is unique for given ML Application.
func (o GetMlApplicationImplementationsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMlApplicationImplementationsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The current state of the MlApplicationImplementation.
func (o GetMlApplicationImplementationsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMlApplicationImplementationsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMlApplicationImplementationsResultOutput{})
}
