// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datascience

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Ml Application Instance resource in Oracle Cloud Infrastructure Data Science service.
//
// # Gets a MlApplicationInstance by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datascience"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datascience.GetMlApplicationInstance(ctx, &datascience.GetMlApplicationInstanceArgs{
//				MlApplicationInstanceId: testMlApplicationInstanceOciDatascienceMlApplicationInstance.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMlApplicationInstance(ctx *pulumi.Context, args *LookupMlApplicationInstanceArgs, opts ...pulumi.InvokeOption) (*LookupMlApplicationInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMlApplicationInstanceResult
	err := ctx.Invoke("oci:DataScience/getMlApplicationInstance:getMlApplicationInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMlApplicationInstance.
type LookupMlApplicationInstanceArgs struct {
	// unique MlApplicationInstance identifier
	MlApplicationInstanceId string `pulumi:"mlApplicationInstanceId"`
}

// A collection of values returned by getMlApplicationInstance.
type LookupMlApplicationInstanceResult struct {
	// AuthN/Z configuration for online prediction
	AuthConfigurations []GetMlApplicationInstanceAuthConfiguration `pulumi:"authConfigurations"`
	// The OCID of the compartment where the MlApplicationInstance is created.
	CompartmentId string `pulumi:"compartmentId"`
	// Data that are used for provisioning of the given MlApplicationInstance. These are validated against configurationSchema defined in referenced MlApplicationImplementation.
	Configurations []GetMlApplicationInstanceConfiguration `pulumi:"configurations"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The name of MlApplicationInstance. System will generate displayName when not provided during creation.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the MlApplicationInstance. Unique identifier that is immutable after creation
	Id string `pulumi:"id"`
	// States whether the MlApplicationInstance is supposed to be in ACTIVE lifecycle state.
	IsEnabled bool `pulumi:"isEnabled"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The current substate of the MlApplicationInstance. The substate has MlApplicationInstance specific values in comparison with lifecycleState which has standard values common for all Oracle Cloud Infrastructure resources. The NEEDS_ATTENTION and FAILED substates are deprecated in favor of (NON_)?RECOVERABLE_(PROVIDER|SERVICE)_ISSUE and will be removed in next release.
	LifecycleSubstate string `pulumi:"lifecycleSubstate"`
	// The OCID of ML Application. This resource is an instance of ML Application referenced by this OCID.
	MlApplicationId string `pulumi:"mlApplicationId"`
	// The OCID of ML Application Implementation selected as a certain solution for a given ML problem (ML Application)
	MlApplicationImplementationId string `pulumi:"mlApplicationImplementationId"`
	// The name of Ml Application Implementation (based on mlApplicationImplementationId)
	MlApplicationImplementationName string `pulumi:"mlApplicationImplementationName"`
	MlApplicationInstanceId         string `pulumi:"mlApplicationInstanceId"`
	// The name of ML Application (based on mlApplicationId).
	MlApplicationName string `pulumi:"mlApplicationName"`
	// Prediction endpoint related information.
	PredictionEndpointDetails []GetMlApplicationInstancePredictionEndpointDetail `pulumi:"predictionEndpointDetails"`
	// The current state of the MlApplicationInstance.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the the MlApplication was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// Time of last MlApplicationInstance update in the format defined by RFC 3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupMlApplicationInstanceOutput(ctx *pulumi.Context, args LookupMlApplicationInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupMlApplicationInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMlApplicationInstanceResultOutput, error) {
			args := v.(LookupMlApplicationInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataScience/getMlApplicationInstance:getMlApplicationInstance", args, LookupMlApplicationInstanceResultOutput{}, options).(LookupMlApplicationInstanceResultOutput), nil
		}).(LookupMlApplicationInstanceResultOutput)
}

// A collection of arguments for invoking getMlApplicationInstance.
type LookupMlApplicationInstanceOutputArgs struct {
	// unique MlApplicationInstance identifier
	MlApplicationInstanceId pulumi.StringInput `pulumi:"mlApplicationInstanceId"`
}

func (LookupMlApplicationInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMlApplicationInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getMlApplicationInstance.
type LookupMlApplicationInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupMlApplicationInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMlApplicationInstanceResult)(nil)).Elem()
}

func (o LookupMlApplicationInstanceResultOutput) ToLookupMlApplicationInstanceResultOutput() LookupMlApplicationInstanceResultOutput {
	return o
}

func (o LookupMlApplicationInstanceResultOutput) ToLookupMlApplicationInstanceResultOutputWithContext(ctx context.Context) LookupMlApplicationInstanceResultOutput {
	return o
}

// AuthN/Z configuration for online prediction
func (o LookupMlApplicationInstanceResultOutput) AuthConfigurations() GetMlApplicationInstanceAuthConfigurationArrayOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) []GetMlApplicationInstanceAuthConfiguration {
		return v.AuthConfigurations
	}).(GetMlApplicationInstanceAuthConfigurationArrayOutput)
}

// The OCID of the compartment where the MlApplicationInstance is created.
func (o LookupMlApplicationInstanceResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Data that are used for provisioning of the given MlApplicationInstance. These are validated against configurationSchema defined in referenced MlApplicationImplementation.
func (o LookupMlApplicationInstanceResultOutput) Configurations() GetMlApplicationInstanceConfigurationArrayOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) []GetMlApplicationInstanceConfiguration {
		return v.Configurations
	}).(GetMlApplicationInstanceConfigurationArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupMlApplicationInstanceResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The name of MlApplicationInstance. System will generate displayName when not provided during creation.
func (o LookupMlApplicationInstanceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupMlApplicationInstanceResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the MlApplicationInstance. Unique identifier that is immutable after creation
func (o LookupMlApplicationInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// States whether the MlApplicationInstance is supposed to be in ACTIVE lifecycle state.
func (o LookupMlApplicationInstanceResultOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupMlApplicationInstanceResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The current substate of the MlApplicationInstance. The substate has MlApplicationInstance specific values in comparison with lifecycleState which has standard values common for all Oracle Cloud Infrastructure resources. The NEEDS_ATTENTION and FAILED substates are deprecated in favor of (NON_)?RECOVERABLE_(PROVIDER|SERVICE)_ISSUE and will be removed in next release.
func (o LookupMlApplicationInstanceResultOutput) LifecycleSubstate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.LifecycleSubstate }).(pulumi.StringOutput)
}

// The OCID of ML Application. This resource is an instance of ML Application referenced by this OCID.
func (o LookupMlApplicationInstanceResultOutput) MlApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.MlApplicationId }).(pulumi.StringOutput)
}

// The OCID of ML Application Implementation selected as a certain solution for a given ML problem (ML Application)
func (o LookupMlApplicationInstanceResultOutput) MlApplicationImplementationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.MlApplicationImplementationId }).(pulumi.StringOutput)
}

// The name of Ml Application Implementation (based on mlApplicationImplementationId)
func (o LookupMlApplicationInstanceResultOutput) MlApplicationImplementationName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.MlApplicationImplementationName }).(pulumi.StringOutput)
}

func (o LookupMlApplicationInstanceResultOutput) MlApplicationInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.MlApplicationInstanceId }).(pulumi.StringOutput)
}

// The name of ML Application (based on mlApplicationId).
func (o LookupMlApplicationInstanceResultOutput) MlApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.MlApplicationName }).(pulumi.StringOutput)
}

// Prediction endpoint related information.
func (o LookupMlApplicationInstanceResultOutput) PredictionEndpointDetails() GetMlApplicationInstancePredictionEndpointDetailArrayOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) []GetMlApplicationInstancePredictionEndpointDetail {
		return v.PredictionEndpointDetails
	}).(GetMlApplicationInstancePredictionEndpointDetailArrayOutput)
}

// The current state of the MlApplicationInstance.
func (o LookupMlApplicationInstanceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupMlApplicationInstanceResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the the MlApplication was created. An RFC3339 formatted datetime string
func (o LookupMlApplicationInstanceResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time of last MlApplicationInstance update in the format defined by RFC 3339.
func (o LookupMlApplicationInstanceResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMlApplicationInstanceResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMlApplicationInstanceResultOutput{})
}
