// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datascience

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Ml Application Instances in Oracle Cloud Infrastructure Data Science service.
//
// Returns a list of MlApplicationsInstances.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datascience"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datascience.GetMlApplicationInstances(ctx, &datascience.GetMlApplicationInstancesArgs{
//				CompartmentId:   compartmentId,
//				DisplayName:     pulumi.StringRef(mlApplicationInstanceDisplayName),
//				MlApplicationId: pulumi.StringRef(testMlApplication.Id),
//				State:           pulumi.StringRef(mlApplicationInstanceState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMlApplicationInstances(ctx *pulumi.Context, args *GetMlApplicationInstancesArgs, opts ...pulumi.InvokeOption) (*GetMlApplicationInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMlApplicationInstancesResult
	err := ctx.Invoke("oci:DataScience/getMlApplicationInstances:getMlApplicationInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMlApplicationInstances.
type GetMlApplicationInstancesArgs struct {
	// <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// <b>Filter</b> results by its user-friendly name.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetMlApplicationInstancesFilter `pulumi:"filters"`
	// unique MlApplication identifier
	MlApplicationId *string `pulumi:"mlApplicationId"`
	// A filter to return only resources matching the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getMlApplicationInstances.
type GetMlApplicationInstancesResult struct {
	// The OCID of the compartment where the MlApplicationInstance is created.
	CompartmentId string `pulumi:"compartmentId"`
	// The name of MlApplicationInstance. System will generate displayName when not provided during creation.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetMlApplicationInstancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The OCID of ML Application. This resource is an instance of ML Application referenced by this OCID.
	MlApplicationId *string `pulumi:"mlApplicationId"`
	// The list of ml_application_instance_collection.
	MlApplicationInstanceCollections []GetMlApplicationInstancesMlApplicationInstanceCollection `pulumi:"mlApplicationInstanceCollections"`
	// The current state of the MlApplicationInstance.
	State *string `pulumi:"state"`
}

func GetMlApplicationInstancesOutput(ctx *pulumi.Context, args GetMlApplicationInstancesOutputArgs, opts ...pulumi.InvokeOption) GetMlApplicationInstancesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMlApplicationInstancesResultOutput, error) {
			args := v.(GetMlApplicationInstancesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataScience/getMlApplicationInstances:getMlApplicationInstances", args, GetMlApplicationInstancesResultOutput{}, options).(GetMlApplicationInstancesResultOutput), nil
		}).(GetMlApplicationInstancesResultOutput)
}

// A collection of arguments for invoking getMlApplicationInstances.
type GetMlApplicationInstancesOutputArgs struct {
	// <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// <b>Filter</b> results by its user-friendly name.
	DisplayName pulumi.StringPtrInput                     `pulumi:"displayName"`
	Filters     GetMlApplicationInstancesFilterArrayInput `pulumi:"filters"`
	// unique MlApplication identifier
	MlApplicationId pulumi.StringPtrInput `pulumi:"mlApplicationId"`
	// A filter to return only resources matching the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetMlApplicationInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMlApplicationInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getMlApplicationInstances.
type GetMlApplicationInstancesResultOutput struct{ *pulumi.OutputState }

func (GetMlApplicationInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMlApplicationInstancesResult)(nil)).Elem()
}

func (o GetMlApplicationInstancesResultOutput) ToGetMlApplicationInstancesResultOutput() GetMlApplicationInstancesResultOutput {
	return o
}

func (o GetMlApplicationInstancesResultOutput) ToGetMlApplicationInstancesResultOutputWithContext(ctx context.Context) GetMlApplicationInstancesResultOutput {
	return o
}

// The OCID of the compartment where the MlApplicationInstance is created.
func (o GetMlApplicationInstancesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMlApplicationInstancesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The name of MlApplicationInstance. System will generate displayName when not provided during creation.
func (o GetMlApplicationInstancesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMlApplicationInstancesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetMlApplicationInstancesResultOutput) Filters() GetMlApplicationInstancesFilterArrayOutput {
	return o.ApplyT(func(v GetMlApplicationInstancesResult) []GetMlApplicationInstancesFilter { return v.Filters }).(GetMlApplicationInstancesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMlApplicationInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMlApplicationInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of ML Application. This resource is an instance of ML Application referenced by this OCID.
func (o GetMlApplicationInstancesResultOutput) MlApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMlApplicationInstancesResult) *string { return v.MlApplicationId }).(pulumi.StringPtrOutput)
}

// The list of ml_application_instance_collection.
func (o GetMlApplicationInstancesResultOutput) MlApplicationInstanceCollections() GetMlApplicationInstancesMlApplicationInstanceCollectionArrayOutput {
	return o.ApplyT(func(v GetMlApplicationInstancesResult) []GetMlApplicationInstancesMlApplicationInstanceCollection {
		return v.MlApplicationInstanceCollections
	}).(GetMlApplicationInstancesMlApplicationInstanceCollectionArrayOutput)
}

// The current state of the MlApplicationInstance.
func (o GetMlApplicationInstancesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMlApplicationInstancesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMlApplicationInstancesResultOutput{})
}
