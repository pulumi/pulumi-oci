// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datascience

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Data Science service.
//
// # Gets a Schedule by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datascience"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datascience.GetSchedule(ctx, &datascience.GetScheduleArgs{
//				ScheduleId: testScheduleOciDatascienceSchedule.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSchedule(ctx *pulumi.Context, args *LookupScheduleArgs, opts ...pulumi.InvokeOption) (*LookupScheduleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupScheduleResult
	err := ctx.Invoke("oci:DataScience/getSchedule:getSchedule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSchedule.
type LookupScheduleArgs struct {
	// unique Schedule identifier
	ScheduleId string `pulumi:"scheduleId"`
}

// A collection of values returned by getSchedule.
type LookupScheduleResult struct {
	// The schedule action
	Actions []GetScheduleAction `pulumi:"actions"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the schedule.
	CompartmentId string `pulumi:"compartmentId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the schedule.
	CreatedBy string `pulumi:"createdBy"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A short description of the schedule.
	Description string `pulumi:"description"`
	// A user-friendly display name for the resource. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the schedule.
	Id string `pulumi:"id"`
	// Details about the action performed by the last schedule execution. Example: `Invoked ML Application trigger.`
	LastScheduleRunDetails string `pulumi:"lastScheduleRunDetails"`
	// A message describing the current state in more detail.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Custom logging details for schedule execution.
	LogDetails []GetScheduleLogDetail `pulumi:"logDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project associated with the schedule.
	ProjectId  string `pulumi:"projectId"`
	ScheduleId string `pulumi:"scheduleId"`
	// The current state of the schedule.           Example: `ACTIVE`
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the schedule was created. Format is defined by RFC3339.           Example: `2022-08-05T01:02:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The last schedule execution time. Format is defined by RFC3339. Example: `2022-08-05T01:02:29.600Z`
	TimeLastScheduleRun string `pulumi:"timeLastScheduleRun"`
	// The next scheduled execution time for the schedule. Format is defined by RFC3339. Example: `2022-08-05T01:02:29.600Z`
	TimeNextScheduledRun string `pulumi:"timeNextScheduledRun"`
	// The date and time the schedule was updated. Format is defined by RFC3339.           Example: `2022-09-05T01:02:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// The trigger of the schedule can be UNIX cron or iCal expression or simple interval
	Triggers []GetScheduleTrigger `pulumi:"triggers"`
}

func LookupScheduleOutput(ctx *pulumi.Context, args LookupScheduleOutputArgs, opts ...pulumi.InvokeOption) LookupScheduleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupScheduleResultOutput, error) {
			args := v.(LookupScheduleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DataScience/getSchedule:getSchedule", args, LookupScheduleResultOutput{}, options).(LookupScheduleResultOutput), nil
		}).(LookupScheduleResultOutput)
}

// A collection of arguments for invoking getSchedule.
type LookupScheduleOutputArgs struct {
	// unique Schedule identifier
	ScheduleId pulumi.StringInput `pulumi:"scheduleId"`
}

func (LookupScheduleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduleArgs)(nil)).Elem()
}

// A collection of values returned by getSchedule.
type LookupScheduleResultOutput struct{ *pulumi.OutputState }

func (LookupScheduleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupScheduleResult)(nil)).Elem()
}

func (o LookupScheduleResultOutput) ToLookupScheduleResultOutput() LookupScheduleResultOutput {
	return o
}

func (o LookupScheduleResultOutput) ToLookupScheduleResultOutputWithContext(ctx context.Context) LookupScheduleResultOutput {
	return o
}

// The schedule action
func (o LookupScheduleResultOutput) Actions() GetScheduleActionArrayOutput {
	return o.ApplyT(func(v LookupScheduleResult) []GetScheduleAction { return v.Actions }).(GetScheduleActionArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the schedule.
func (o LookupScheduleResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the schedule.
func (o LookupScheduleResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o LookupScheduleResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduleResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A short description of the schedule.
func (o LookupScheduleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly display name for the resource. Avoid entering confidential information.
func (o LookupScheduleResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o LookupScheduleResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduleResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the schedule.
func (o LookupScheduleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Details about the action performed by the last schedule execution. Example: `Invoked ML Application trigger.`
func (o LookupScheduleResultOutput) LastScheduleRunDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.LastScheduleRunDetails }).(pulumi.StringOutput)
}

// A message describing the current state in more detail.
func (o LookupScheduleResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Custom logging details for schedule execution.
func (o LookupScheduleResultOutput) LogDetails() GetScheduleLogDetailArrayOutput {
	return o.ApplyT(func(v LookupScheduleResult) []GetScheduleLogDetail { return v.LogDetails }).(GetScheduleLogDetailArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project associated with the schedule.
func (o LookupScheduleResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupScheduleResultOutput) ScheduleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.ScheduleId }).(pulumi.StringOutput)
}

// The current state of the schedule.           Example: `ACTIVE`
func (o LookupScheduleResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupScheduleResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupScheduleResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the schedule was created. Format is defined by RFC3339.           Example: `2022-08-05T01:02:29.600Z`
func (o LookupScheduleResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The last schedule execution time. Format is defined by RFC3339. Example: `2022-08-05T01:02:29.600Z`
func (o LookupScheduleResultOutput) TimeLastScheduleRun() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeLastScheduleRun }).(pulumi.StringOutput)
}

// The next scheduled execution time for the schedule. Format is defined by RFC3339. Example: `2022-08-05T01:02:29.600Z`
func (o LookupScheduleResultOutput) TimeNextScheduledRun() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeNextScheduledRun }).(pulumi.StringOutput)
}

// The date and time the schedule was updated. Format is defined by RFC3339.           Example: `2022-09-05T01:02:29.600Z`
func (o LookupScheduleResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupScheduleResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The trigger of the schedule can be UNIX cron or iCal expression or simple interval
func (o LookupScheduleResultOutput) Triggers() GetScheduleTriggerArrayOutput {
	return o.ApplyT(func(v LookupScheduleResult) []GetScheduleTrigger { return v.Triggers }).(GetScheduleTriggerArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupScheduleResultOutput{})
}
