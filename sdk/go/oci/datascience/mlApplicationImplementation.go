// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datascience

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Ml Application Implementation resource in Oracle Cloud Infrastructure Data Science service.
//
// Creates a new MlApplicationImplementation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/datascience"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datascience.NewMlApplicationImplementation(ctx, "test_ml_application_implementation", &datascience.MlApplicationImplementationArgs{
//				CompartmentId:   pulumi.Any(compartmentId),
//				MlApplicationId: pulumi.Any(testMlApplication.Id),
//				Name:            pulumi.Any(mlApplicationImplementationName),
//				MlApplicationPackage: pulumi.StringMap{
//					"source_type": pulumi.Any(mlApplicationPackageSourceType),
//					"uri":         pulumi.Any(mlApplicationPackageUri),
//				},
//				OpcMlAppPackageArgs:          pulumi.Any(opcMlAppPackageArgs),
//				AllowedMigrationDestinations: pulumi.Any(mlApplicationImplementationAllowedMigrationDestinations),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				Logging: &datascience.MlApplicationImplementationLoggingArgs{
//					AggregatedInstanceViewLog: &datascience.MlApplicationImplementationLoggingAggregatedInstanceViewLogArgs{
//						EnableLogging: pulumi.Any(mlApplicationImplementationLoggingAggregatedInstanceViewLogEnableLogging),
//						LogGroupId:    pulumi.Any(testLogGroup.Id),
//						LogId:         pulumi.Any(testLog.Id),
//					},
//					ImplementationLog: &datascience.MlApplicationImplementationLoggingImplementationLogArgs{
//						EnableLogging: pulumi.Any(mlApplicationImplementationLoggingImplementationLogEnableLogging),
//						LogGroupId:    pulumi.Any(testLogGroup.Id),
//						LogId:         pulumi.Any(testLog.Id),
//					},
//					TriggerLog: &datascience.MlApplicationImplementationLoggingTriggerLogArgs{
//						EnableLogging: pulumi.Any(mlApplicationImplementationLoggingTriggerLogEnableLogging),
//						LogGroupId:    pulumi.Any(testLogGroup.Id),
//						LogId:         pulumi.Any(testLog.Id),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// MlApplicationImplementations can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataScience/mlApplicationImplementation:MlApplicationImplementation test_ml_application_implementation "id"
// ```
type MlApplicationImplementation struct {
	pulumi.CustomResourceState

	// (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
	AllowedMigrationDestinations pulumi.StringArrayOutput `pulumi:"allowedMigrationDestinations"`
	// List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
	ApplicationComponents MlApplicationImplementationApplicationComponentArrayOutput `pulumi:"applicationComponents"`
	// (Updatable) The OCID of the compartment where ML Application Implementation is created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
	ConfigurationSchemas MlApplicationImplementationConfigurationSchemaArrayOutput `pulumi:"configurationSchemas"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// short description of the argument
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) Configuration of Logging for ML Application Implementation.
	Logging MlApplicationImplementationLoggingOutput `pulumi:"logging"`
	// The OCID of the ML Application implemented by this ML Application Implementation
	MlApplicationId pulumi.StringOutput `pulumi:"mlApplicationId"`
	// The name of ML Application (based on mlApplicationId)
	MlApplicationName pulumi.StringOutput `pulumi:"mlApplicationName"`
	// (Updatable) Configuration of The ML Application Package to upload.
	MlApplicationPackage pulumi.StringMapOutput `pulumi:"mlApplicationPackage"`
	// List of ML Application package arguments provided during ML Application package upload.
	MlApplicationPackageArguments MlApplicationImplementationMlApplicationPackageArgumentArrayOutput `pulumi:"mlApplicationPackageArguments"`
	// ML Application Implementation name which is unique for given ML Application.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
	OpcMlAppPackageArgs pulumi.StringMapOutput `pulumi:"opcMlAppPackageArgs"`
	// The version of ML Application Package (e.g. "1.2" or "2.0.4") defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
	PackageVersion pulumi.StringOutput `pulumi:"packageVersion"`
	// The current state of the MlApplicationImplementation.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Time of last MlApplicationImplementation update in the format defined by RFC 3339.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewMlApplicationImplementation registers a new resource with the given unique name, arguments, and options.
func NewMlApplicationImplementation(ctx *pulumi.Context,
	name string, args *MlApplicationImplementationArgs, opts ...pulumi.ResourceOption) (*MlApplicationImplementation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.MlApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'MlApplicationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MlApplicationImplementation
	err := ctx.RegisterResource("oci:DataScience/mlApplicationImplementation:MlApplicationImplementation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMlApplicationImplementation gets an existing MlApplicationImplementation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMlApplicationImplementation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MlApplicationImplementationState, opts ...pulumi.ResourceOption) (*MlApplicationImplementation, error) {
	var resource MlApplicationImplementation
	err := ctx.ReadResource("oci:DataScience/mlApplicationImplementation:MlApplicationImplementation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MlApplicationImplementation resources.
type mlApplicationImplementationState struct {
	// (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
	AllowedMigrationDestinations []string `pulumi:"allowedMigrationDestinations"`
	// List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
	ApplicationComponents []MlApplicationImplementationApplicationComponent `pulumi:"applicationComponents"`
	// (Updatable) The OCID of the compartment where ML Application Implementation is created.
	CompartmentId *string `pulumi:"compartmentId"`
	// Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
	ConfigurationSchemas []MlApplicationImplementationConfigurationSchema `pulumi:"configurationSchemas"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// short description of the argument
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) Configuration of Logging for ML Application Implementation.
	Logging *MlApplicationImplementationLogging `pulumi:"logging"`
	// The OCID of the ML Application implemented by this ML Application Implementation
	MlApplicationId *string `pulumi:"mlApplicationId"`
	// The name of ML Application (based on mlApplicationId)
	MlApplicationName *string `pulumi:"mlApplicationName"`
	// (Updatable) Configuration of The ML Application Package to upload.
	MlApplicationPackage map[string]string `pulumi:"mlApplicationPackage"`
	// List of ML Application package arguments provided during ML Application package upload.
	MlApplicationPackageArguments []MlApplicationImplementationMlApplicationPackageArgument `pulumi:"mlApplicationPackageArguments"`
	// ML Application Implementation name which is unique for given ML Application.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name *string `pulumi:"name"`
	// (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
	OpcMlAppPackageArgs map[string]string `pulumi:"opcMlAppPackageArgs"`
	// The version of ML Application Package (e.g. "1.2" or "2.0.4") defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
	PackageVersion *string `pulumi:"packageVersion"`
	// The current state of the MlApplicationImplementation.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// Time of last MlApplicationImplementation update in the format defined by RFC 3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type MlApplicationImplementationState struct {
	// (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
	AllowedMigrationDestinations pulumi.StringArrayInput
	// List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
	ApplicationComponents MlApplicationImplementationApplicationComponentArrayInput
	// (Updatable) The OCID of the compartment where ML Application Implementation is created.
	CompartmentId pulumi.StringPtrInput
	// Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
	ConfigurationSchemas MlApplicationImplementationConfigurationSchemaArrayInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// short description of the argument
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) Configuration of Logging for ML Application Implementation.
	Logging MlApplicationImplementationLoggingPtrInput
	// The OCID of the ML Application implemented by this ML Application Implementation
	MlApplicationId pulumi.StringPtrInput
	// The name of ML Application (based on mlApplicationId)
	MlApplicationName pulumi.StringPtrInput
	// (Updatable) Configuration of The ML Application Package to upload.
	MlApplicationPackage pulumi.StringMapInput
	// List of ML Application package arguments provided during ML Application package upload.
	MlApplicationPackageArguments MlApplicationImplementationMlApplicationPackageArgumentArrayInput
	// ML Application Implementation name which is unique for given ML Application.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name pulumi.StringPtrInput
	// (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
	OpcMlAppPackageArgs pulumi.StringMapInput
	// The version of ML Application Package (e.g. "1.2" or "2.0.4") defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
	PackageVersion pulumi.StringPtrInput
	// The current state of the MlApplicationImplementation.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
	TimeCreated pulumi.StringPtrInput
	// Time of last MlApplicationImplementation update in the format defined by RFC 3339.
	TimeUpdated pulumi.StringPtrInput
}

func (MlApplicationImplementationState) ElementType() reflect.Type {
	return reflect.TypeOf((*mlApplicationImplementationState)(nil)).Elem()
}

type mlApplicationImplementationArgs struct {
	// (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
	AllowedMigrationDestinations []string `pulumi:"allowedMigrationDestinations"`
	// (Updatable) The OCID of the compartment where ML Application Implementation is created.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Configuration of Logging for ML Application Implementation.
	Logging *MlApplicationImplementationLogging `pulumi:"logging"`
	// The OCID of the ML Application implemented by this ML Application Implementation
	MlApplicationId string `pulumi:"mlApplicationId"`
	// (Updatable) Configuration of The ML Application Package to upload.
	MlApplicationPackage map[string]string `pulumi:"mlApplicationPackage"`
	// ML Application Implementation name which is unique for given ML Application.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name *string `pulumi:"name"`
	// (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
	OpcMlAppPackageArgs map[string]string `pulumi:"opcMlAppPackageArgs"`
}

// The set of arguments for constructing a MlApplicationImplementation resource.
type MlApplicationImplementationArgs struct {
	// (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
	AllowedMigrationDestinations pulumi.StringArrayInput
	// (Updatable) The OCID of the compartment where ML Application Implementation is created.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Configuration of Logging for ML Application Implementation.
	Logging MlApplicationImplementationLoggingPtrInput
	// The OCID of the ML Application implemented by this ML Application Implementation
	MlApplicationId pulumi.StringInput
	// (Updatable) Configuration of The ML Application Package to upload.
	MlApplicationPackage pulumi.StringMapInput
	// ML Application Implementation name which is unique for given ML Application.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name pulumi.StringPtrInput
	// (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
	OpcMlAppPackageArgs pulumi.StringMapInput
}

func (MlApplicationImplementationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mlApplicationImplementationArgs)(nil)).Elem()
}

type MlApplicationImplementationInput interface {
	pulumi.Input

	ToMlApplicationImplementationOutput() MlApplicationImplementationOutput
	ToMlApplicationImplementationOutputWithContext(ctx context.Context) MlApplicationImplementationOutput
}

func (*MlApplicationImplementation) ElementType() reflect.Type {
	return reflect.TypeOf((**MlApplicationImplementation)(nil)).Elem()
}

func (i *MlApplicationImplementation) ToMlApplicationImplementationOutput() MlApplicationImplementationOutput {
	return i.ToMlApplicationImplementationOutputWithContext(context.Background())
}

func (i *MlApplicationImplementation) ToMlApplicationImplementationOutputWithContext(ctx context.Context) MlApplicationImplementationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MlApplicationImplementationOutput)
}

// MlApplicationImplementationArrayInput is an input type that accepts MlApplicationImplementationArray and MlApplicationImplementationArrayOutput values.
// You can construct a concrete instance of `MlApplicationImplementationArrayInput` via:
//
//	MlApplicationImplementationArray{ MlApplicationImplementationArgs{...} }
type MlApplicationImplementationArrayInput interface {
	pulumi.Input

	ToMlApplicationImplementationArrayOutput() MlApplicationImplementationArrayOutput
	ToMlApplicationImplementationArrayOutputWithContext(context.Context) MlApplicationImplementationArrayOutput
}

type MlApplicationImplementationArray []MlApplicationImplementationInput

func (MlApplicationImplementationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MlApplicationImplementation)(nil)).Elem()
}

func (i MlApplicationImplementationArray) ToMlApplicationImplementationArrayOutput() MlApplicationImplementationArrayOutput {
	return i.ToMlApplicationImplementationArrayOutputWithContext(context.Background())
}

func (i MlApplicationImplementationArray) ToMlApplicationImplementationArrayOutputWithContext(ctx context.Context) MlApplicationImplementationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MlApplicationImplementationArrayOutput)
}

// MlApplicationImplementationMapInput is an input type that accepts MlApplicationImplementationMap and MlApplicationImplementationMapOutput values.
// You can construct a concrete instance of `MlApplicationImplementationMapInput` via:
//
//	MlApplicationImplementationMap{ "key": MlApplicationImplementationArgs{...} }
type MlApplicationImplementationMapInput interface {
	pulumi.Input

	ToMlApplicationImplementationMapOutput() MlApplicationImplementationMapOutput
	ToMlApplicationImplementationMapOutputWithContext(context.Context) MlApplicationImplementationMapOutput
}

type MlApplicationImplementationMap map[string]MlApplicationImplementationInput

func (MlApplicationImplementationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MlApplicationImplementation)(nil)).Elem()
}

func (i MlApplicationImplementationMap) ToMlApplicationImplementationMapOutput() MlApplicationImplementationMapOutput {
	return i.ToMlApplicationImplementationMapOutputWithContext(context.Background())
}

func (i MlApplicationImplementationMap) ToMlApplicationImplementationMapOutputWithContext(ctx context.Context) MlApplicationImplementationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MlApplicationImplementationMapOutput)
}

type MlApplicationImplementationOutput struct{ *pulumi.OutputState }

func (MlApplicationImplementationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MlApplicationImplementation)(nil)).Elem()
}

func (o MlApplicationImplementationOutput) ToMlApplicationImplementationOutput() MlApplicationImplementationOutput {
	return o
}

func (o MlApplicationImplementationOutput) ToMlApplicationImplementationOutputWithContext(ctx context.Context) MlApplicationImplementationOutput {
	return o
}

// (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
func (o MlApplicationImplementationOutput) AllowedMigrationDestinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringArrayOutput { return v.AllowedMigrationDestinations }).(pulumi.StringArrayOutput)
}

// List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
func (o MlApplicationImplementationOutput) ApplicationComponents() MlApplicationImplementationApplicationComponentArrayOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) MlApplicationImplementationApplicationComponentArrayOutput {
		return v.ApplicationComponents
	}).(MlApplicationImplementationApplicationComponentArrayOutput)
}

// (Updatable) The OCID of the compartment where ML Application Implementation is created.
func (o MlApplicationImplementationOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
func (o MlApplicationImplementationOutput) ConfigurationSchemas() MlApplicationImplementationConfigurationSchemaArrayOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) MlApplicationImplementationConfigurationSchemaArrayOutput {
		return v.ConfigurationSchemas
	}).(MlApplicationImplementationConfigurationSchemaArrayOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o MlApplicationImplementationOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// short description of the argument
func (o MlApplicationImplementationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o MlApplicationImplementationOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o MlApplicationImplementationOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) Configuration of Logging for ML Application Implementation.
func (o MlApplicationImplementationOutput) Logging() MlApplicationImplementationLoggingOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) MlApplicationImplementationLoggingOutput { return v.Logging }).(MlApplicationImplementationLoggingOutput)
}

// The OCID of the ML Application implemented by this ML Application Implementation
func (o MlApplicationImplementationOutput) MlApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringOutput { return v.MlApplicationId }).(pulumi.StringOutput)
}

// The name of ML Application (based on mlApplicationId)
func (o MlApplicationImplementationOutput) MlApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringOutput { return v.MlApplicationName }).(pulumi.StringOutput)
}

// (Updatable) Configuration of The ML Application Package to upload.
func (o MlApplicationImplementationOutput) MlApplicationPackage() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringMapOutput { return v.MlApplicationPackage }).(pulumi.StringMapOutput)
}

// List of ML Application package arguments provided during ML Application package upload.
func (o MlApplicationImplementationOutput) MlApplicationPackageArguments() MlApplicationImplementationMlApplicationPackageArgumentArrayOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) MlApplicationImplementationMlApplicationPackageArgumentArrayOutput {
		return v.MlApplicationPackageArguments
	}).(MlApplicationImplementationMlApplicationPackageArgumentArrayOutput)
}

// ML Application Implementation name which is unique for given ML Application.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o MlApplicationImplementationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
func (o MlApplicationImplementationOutput) OpcMlAppPackageArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringMapOutput { return v.OpcMlAppPackageArgs }).(pulumi.StringMapOutput)
}

// The version of ML Application Package (e.g. "1.2" or "2.0.4") defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
func (o MlApplicationImplementationOutput) PackageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringOutput { return v.PackageVersion }).(pulumi.StringOutput)
}

// The current state of the MlApplicationImplementation.
func (o MlApplicationImplementationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o MlApplicationImplementationOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
func (o MlApplicationImplementationOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time of last MlApplicationImplementation update in the format defined by RFC 3339.
func (o MlApplicationImplementationOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *MlApplicationImplementation) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type MlApplicationImplementationArrayOutput struct{ *pulumi.OutputState }

func (MlApplicationImplementationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MlApplicationImplementation)(nil)).Elem()
}

func (o MlApplicationImplementationArrayOutput) ToMlApplicationImplementationArrayOutput() MlApplicationImplementationArrayOutput {
	return o
}

func (o MlApplicationImplementationArrayOutput) ToMlApplicationImplementationArrayOutputWithContext(ctx context.Context) MlApplicationImplementationArrayOutput {
	return o
}

func (o MlApplicationImplementationArrayOutput) Index(i pulumi.IntInput) MlApplicationImplementationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MlApplicationImplementation {
		return vs[0].([]*MlApplicationImplementation)[vs[1].(int)]
	}).(MlApplicationImplementationOutput)
}

type MlApplicationImplementationMapOutput struct{ *pulumi.OutputState }

func (MlApplicationImplementationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MlApplicationImplementation)(nil)).Elem()
}

func (o MlApplicationImplementationMapOutput) ToMlApplicationImplementationMapOutput() MlApplicationImplementationMapOutput {
	return o
}

func (o MlApplicationImplementationMapOutput) ToMlApplicationImplementationMapOutputWithContext(ctx context.Context) MlApplicationImplementationMapOutput {
	return o
}

func (o MlApplicationImplementationMapOutput) MapIndex(k pulumi.StringInput) MlApplicationImplementationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MlApplicationImplementation {
		return vs[0].(map[string]*MlApplicationImplementation)[vs[1].(string)]
	}).(MlApplicationImplementationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MlApplicationImplementationInput)(nil)).Elem(), &MlApplicationImplementation{})
	pulumi.RegisterInputType(reflect.TypeOf((*MlApplicationImplementationArrayInput)(nil)).Elem(), MlApplicationImplementationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MlApplicationImplementationMapInput)(nil)).Elem(), MlApplicationImplementationMap{})
	pulumi.RegisterOutputType(MlApplicationImplementationOutput{})
	pulumi.RegisterOutputType(MlApplicationImplementationArrayOutput{})
	pulumi.RegisterOutputType(MlApplicationImplementationMapOutput{})
}
