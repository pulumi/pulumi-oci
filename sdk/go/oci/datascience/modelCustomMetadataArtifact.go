// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datascience

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Model Custom Metadata Artifact resource in Oracle Cloud Infrastructure Data Science service.
//
// Creates model custom metadata artifact for specified model.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datascience"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datascience.NewModelCustomMetadataArtifact(ctx, "test_model_custom_metadata_artifact", &datascience.ModelCustomMetadataArtifactArgs{
//				ModelCustomMetadatumArtifact: pulumi.Any(modelCustomMetadataArtifactModelCustomMetadatumArtifact),
//				ContentLength:                pulumi.Any(modelCustomMetadataArtifactContentLength),
//				MetadatumKeyName:             pulumi.Any(testKey.Name),
//				ModelId:                      pulumi.Any(testModel.Id),
//				ContentDisposition:           pulumi.Any(modelCustomMetadataArtifactContentDisposition),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ModelCustomMetadataArtifacts can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataScience/modelCustomMetadataArtifact:ModelCustomMetadataArtifact test_model_custom_metadata_artifact "id"
// ```
type ModelCustomMetadataArtifact struct {
	pulumi.CustomResourceState

	// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition pulumi.StringOutput `pulumi:"contentDisposition"`
	// (Updatable) The content length of the body.
	ContentLength pulumi.StringOutput `pulumi:"contentLength"`
	// The name of the model metadatum in the metadata.
	MetadatumKeyName pulumi.StringOutput `pulumi:"metadatumKeyName"`
	// (Updatable) The model custom metadata artifact to upload.
	ModelCustomMetadatumArtifact pulumi.StringOutput `pulumi:"modelCustomMetadatumArtifact"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelId pulumi.StringOutput `pulumi:"modelId"`
}

// NewModelCustomMetadataArtifact registers a new resource with the given unique name, arguments, and options.
func NewModelCustomMetadataArtifact(ctx *pulumi.Context,
	name string, args *ModelCustomMetadataArtifactArgs, opts ...pulumi.ResourceOption) (*ModelCustomMetadataArtifact, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContentLength == nil {
		return nil, errors.New("invalid value for required argument 'ContentLength'")
	}
	if args.MetadatumKeyName == nil {
		return nil, errors.New("invalid value for required argument 'MetadatumKeyName'")
	}
	if args.ModelCustomMetadatumArtifact == nil {
		return nil, errors.New("invalid value for required argument 'ModelCustomMetadatumArtifact'")
	}
	if args.ModelId == nil {
		return nil, errors.New("invalid value for required argument 'ModelId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ModelCustomMetadataArtifact
	err := ctx.RegisterResource("oci:DataScience/modelCustomMetadataArtifact:ModelCustomMetadataArtifact", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetModelCustomMetadataArtifact gets an existing ModelCustomMetadataArtifact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetModelCustomMetadataArtifact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ModelCustomMetadataArtifactState, opts ...pulumi.ResourceOption) (*ModelCustomMetadataArtifact, error) {
	var resource ModelCustomMetadataArtifact
	err := ctx.ReadResource("oci:DataScience/modelCustomMetadataArtifact:ModelCustomMetadataArtifact", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ModelCustomMetadataArtifact resources.
type modelCustomMetadataArtifactState struct {
	// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition *string `pulumi:"contentDisposition"`
	// (Updatable) The content length of the body.
	ContentLength *string `pulumi:"contentLength"`
	// The name of the model metadatum in the metadata.
	MetadatumKeyName *string `pulumi:"metadatumKeyName"`
	// (Updatable) The model custom metadata artifact to upload.
	ModelCustomMetadatumArtifact *string `pulumi:"modelCustomMetadatumArtifact"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelId *string `pulumi:"modelId"`
}

type ModelCustomMetadataArtifactState struct {
	// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition pulumi.StringPtrInput
	// (Updatable) The content length of the body.
	ContentLength pulumi.StringPtrInput
	// The name of the model metadatum in the metadata.
	MetadatumKeyName pulumi.StringPtrInput
	// (Updatable) The model custom metadata artifact to upload.
	ModelCustomMetadatumArtifact pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelId pulumi.StringPtrInput
}

func (ModelCustomMetadataArtifactState) ElementType() reflect.Type {
	return reflect.TypeOf((*modelCustomMetadataArtifactState)(nil)).Elem()
}

type modelCustomMetadataArtifactArgs struct {
	// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition *string `pulumi:"contentDisposition"`
	// (Updatable) The content length of the body.
	ContentLength string `pulumi:"contentLength"`
	// The name of the model metadatum in the metadata.
	MetadatumKeyName string `pulumi:"metadatumKeyName"`
	// (Updatable) The model custom metadata artifact to upload.
	ModelCustomMetadatumArtifact string `pulumi:"modelCustomMetadatumArtifact"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelId string `pulumi:"modelId"`
}

// The set of arguments for constructing a ModelCustomMetadataArtifact resource.
type ModelCustomMetadataArtifactArgs struct {
	// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition pulumi.StringPtrInput
	// (Updatable) The content length of the body.
	ContentLength pulumi.StringInput
	// The name of the model metadatum in the metadata.
	MetadatumKeyName pulumi.StringInput
	// (Updatable) The model custom metadata artifact to upload.
	ModelCustomMetadatumArtifact pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelId pulumi.StringInput
}

func (ModelCustomMetadataArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*modelCustomMetadataArtifactArgs)(nil)).Elem()
}

type ModelCustomMetadataArtifactInput interface {
	pulumi.Input

	ToModelCustomMetadataArtifactOutput() ModelCustomMetadataArtifactOutput
	ToModelCustomMetadataArtifactOutputWithContext(ctx context.Context) ModelCustomMetadataArtifactOutput
}

func (*ModelCustomMetadataArtifact) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCustomMetadataArtifact)(nil)).Elem()
}

func (i *ModelCustomMetadataArtifact) ToModelCustomMetadataArtifactOutput() ModelCustomMetadataArtifactOutput {
	return i.ToModelCustomMetadataArtifactOutputWithContext(context.Background())
}

func (i *ModelCustomMetadataArtifact) ToModelCustomMetadataArtifactOutputWithContext(ctx context.Context) ModelCustomMetadataArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCustomMetadataArtifactOutput)
}

// ModelCustomMetadataArtifactArrayInput is an input type that accepts ModelCustomMetadataArtifactArray and ModelCustomMetadataArtifactArrayOutput values.
// You can construct a concrete instance of `ModelCustomMetadataArtifactArrayInput` via:
//
//	ModelCustomMetadataArtifactArray{ ModelCustomMetadataArtifactArgs{...} }
type ModelCustomMetadataArtifactArrayInput interface {
	pulumi.Input

	ToModelCustomMetadataArtifactArrayOutput() ModelCustomMetadataArtifactArrayOutput
	ToModelCustomMetadataArtifactArrayOutputWithContext(context.Context) ModelCustomMetadataArtifactArrayOutput
}

type ModelCustomMetadataArtifactArray []ModelCustomMetadataArtifactInput

func (ModelCustomMetadataArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ModelCustomMetadataArtifact)(nil)).Elem()
}

func (i ModelCustomMetadataArtifactArray) ToModelCustomMetadataArtifactArrayOutput() ModelCustomMetadataArtifactArrayOutput {
	return i.ToModelCustomMetadataArtifactArrayOutputWithContext(context.Background())
}

func (i ModelCustomMetadataArtifactArray) ToModelCustomMetadataArtifactArrayOutputWithContext(ctx context.Context) ModelCustomMetadataArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCustomMetadataArtifactArrayOutput)
}

// ModelCustomMetadataArtifactMapInput is an input type that accepts ModelCustomMetadataArtifactMap and ModelCustomMetadataArtifactMapOutput values.
// You can construct a concrete instance of `ModelCustomMetadataArtifactMapInput` via:
//
//	ModelCustomMetadataArtifactMap{ "key": ModelCustomMetadataArtifactArgs{...} }
type ModelCustomMetadataArtifactMapInput interface {
	pulumi.Input

	ToModelCustomMetadataArtifactMapOutput() ModelCustomMetadataArtifactMapOutput
	ToModelCustomMetadataArtifactMapOutputWithContext(context.Context) ModelCustomMetadataArtifactMapOutput
}

type ModelCustomMetadataArtifactMap map[string]ModelCustomMetadataArtifactInput

func (ModelCustomMetadataArtifactMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ModelCustomMetadataArtifact)(nil)).Elem()
}

func (i ModelCustomMetadataArtifactMap) ToModelCustomMetadataArtifactMapOutput() ModelCustomMetadataArtifactMapOutput {
	return i.ToModelCustomMetadataArtifactMapOutputWithContext(context.Background())
}

func (i ModelCustomMetadataArtifactMap) ToModelCustomMetadataArtifactMapOutputWithContext(ctx context.Context) ModelCustomMetadataArtifactMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelCustomMetadataArtifactMapOutput)
}

type ModelCustomMetadataArtifactOutput struct{ *pulumi.OutputState }

func (ModelCustomMetadataArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelCustomMetadataArtifact)(nil)).Elem()
}

func (o ModelCustomMetadataArtifactOutput) ToModelCustomMetadataArtifactOutput() ModelCustomMetadataArtifactOutput {
	return o
}

func (o ModelCustomMetadataArtifactOutput) ToModelCustomMetadataArtifactOutputWithContext(ctx context.Context) ModelCustomMetadataArtifactOutput {
	return o
}

// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
func (o ModelCustomMetadataArtifactOutput) ContentDisposition() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelCustomMetadataArtifact) pulumi.StringOutput { return v.ContentDisposition }).(pulumi.StringOutput)
}

// (Updatable) The content length of the body.
func (o ModelCustomMetadataArtifactOutput) ContentLength() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelCustomMetadataArtifact) pulumi.StringOutput { return v.ContentLength }).(pulumi.StringOutput)
}

// The name of the model metadatum in the metadata.
func (o ModelCustomMetadataArtifactOutput) MetadatumKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelCustomMetadataArtifact) pulumi.StringOutput { return v.MetadatumKeyName }).(pulumi.StringOutput)
}

// (Updatable) The model custom metadata artifact to upload.
func (o ModelCustomMetadataArtifactOutput) ModelCustomMetadatumArtifact() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelCustomMetadataArtifact) pulumi.StringOutput { return v.ModelCustomMetadatumArtifact }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelCustomMetadataArtifactOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelCustomMetadataArtifact) pulumi.StringOutput { return v.ModelId }).(pulumi.StringOutput)
}

type ModelCustomMetadataArtifactArrayOutput struct{ *pulumi.OutputState }

func (ModelCustomMetadataArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ModelCustomMetadataArtifact)(nil)).Elem()
}

func (o ModelCustomMetadataArtifactArrayOutput) ToModelCustomMetadataArtifactArrayOutput() ModelCustomMetadataArtifactArrayOutput {
	return o
}

func (o ModelCustomMetadataArtifactArrayOutput) ToModelCustomMetadataArtifactArrayOutputWithContext(ctx context.Context) ModelCustomMetadataArtifactArrayOutput {
	return o
}

func (o ModelCustomMetadataArtifactArrayOutput) Index(i pulumi.IntInput) ModelCustomMetadataArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ModelCustomMetadataArtifact {
		return vs[0].([]*ModelCustomMetadataArtifact)[vs[1].(int)]
	}).(ModelCustomMetadataArtifactOutput)
}

type ModelCustomMetadataArtifactMapOutput struct{ *pulumi.OutputState }

func (ModelCustomMetadataArtifactMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ModelCustomMetadataArtifact)(nil)).Elem()
}

func (o ModelCustomMetadataArtifactMapOutput) ToModelCustomMetadataArtifactMapOutput() ModelCustomMetadataArtifactMapOutput {
	return o
}

func (o ModelCustomMetadataArtifactMapOutput) ToModelCustomMetadataArtifactMapOutputWithContext(ctx context.Context) ModelCustomMetadataArtifactMapOutput {
	return o
}

func (o ModelCustomMetadataArtifactMapOutput) MapIndex(k pulumi.StringInput) ModelCustomMetadataArtifactOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ModelCustomMetadataArtifact {
		return vs[0].(map[string]*ModelCustomMetadataArtifact)[vs[1].(string)]
	}).(ModelCustomMetadataArtifactOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCustomMetadataArtifactInput)(nil)).Elem(), &ModelCustomMetadataArtifact{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCustomMetadataArtifactArrayInput)(nil)).Elem(), ModelCustomMetadataArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelCustomMetadataArtifactMapInput)(nil)).Elem(), ModelCustomMetadataArtifactMap{})
	pulumi.RegisterOutputType(ModelCustomMetadataArtifactOutput{})
	pulumi.RegisterOutputType(ModelCustomMetadataArtifactArrayOutput{})
	pulumi.RegisterOutputType(ModelCustomMetadataArtifactMapOutput{})
}
