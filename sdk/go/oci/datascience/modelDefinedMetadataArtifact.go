// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datascience

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Model Defined Metadata Artifact resource in Oracle Cloud Infrastructure Data Science service.
//
// Creates model defined metadata artifact for specified model.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datascience"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datascience.NewModelDefinedMetadataArtifact(ctx, "test_model_defined_metadata_artifact", &datascience.ModelDefinedMetadataArtifactArgs{
//				ModelDefinedMetadatumArtifact: pulumi.Any(modelDefinedMetadataArtifactModelDefinedMetadatumArtifact),
//				ContentLength:                 pulumi.Any(modelDefinedMetadataArtifactContentLength),
//				MetadatumKeyName:              pulumi.Any(testKey.Name),
//				ModelId:                       pulumi.Any(testModel.Id),
//				ContentDisposition:            pulumi.Any(modelDefinedMetadataArtifactContentDisposition),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ModelDefinedMetadataArtifacts can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataScience/modelDefinedMetadataArtifact:ModelDefinedMetadataArtifact test_model_defined_metadata_artifact "id"
// ```
type ModelDefinedMetadataArtifact struct {
	pulumi.CustomResourceState

	// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition pulumi.StringOutput `pulumi:"contentDisposition"`
	// (Updatable) The content length of the body.
	ContentLength pulumi.StringOutput `pulumi:"contentLength"`
	// The name of the model metadatum in the metadata.
	MetadatumKeyName pulumi.StringOutput `pulumi:"metadatumKeyName"`
	// (Updatable) The model defined metadata artifact to upload.
	ModelDefinedMetadatumArtifact pulumi.StringOutput `pulumi:"modelDefinedMetadatumArtifact"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelId pulumi.StringOutput `pulumi:"modelId"`
}

// NewModelDefinedMetadataArtifact registers a new resource with the given unique name, arguments, and options.
func NewModelDefinedMetadataArtifact(ctx *pulumi.Context,
	name string, args *ModelDefinedMetadataArtifactArgs, opts ...pulumi.ResourceOption) (*ModelDefinedMetadataArtifact, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContentLength == nil {
		return nil, errors.New("invalid value for required argument 'ContentLength'")
	}
	if args.MetadatumKeyName == nil {
		return nil, errors.New("invalid value for required argument 'MetadatumKeyName'")
	}
	if args.ModelDefinedMetadatumArtifact == nil {
		return nil, errors.New("invalid value for required argument 'ModelDefinedMetadatumArtifact'")
	}
	if args.ModelId == nil {
		return nil, errors.New("invalid value for required argument 'ModelId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ModelDefinedMetadataArtifact
	err := ctx.RegisterResource("oci:DataScience/modelDefinedMetadataArtifact:ModelDefinedMetadataArtifact", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetModelDefinedMetadataArtifact gets an existing ModelDefinedMetadataArtifact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetModelDefinedMetadataArtifact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ModelDefinedMetadataArtifactState, opts ...pulumi.ResourceOption) (*ModelDefinedMetadataArtifact, error) {
	var resource ModelDefinedMetadataArtifact
	err := ctx.ReadResource("oci:DataScience/modelDefinedMetadataArtifact:ModelDefinedMetadataArtifact", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ModelDefinedMetadataArtifact resources.
type modelDefinedMetadataArtifactState struct {
	// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition *string `pulumi:"contentDisposition"`
	// (Updatable) The content length of the body.
	ContentLength *string `pulumi:"contentLength"`
	// The name of the model metadatum in the metadata.
	MetadatumKeyName *string `pulumi:"metadatumKeyName"`
	// (Updatable) The model defined metadata artifact to upload.
	ModelDefinedMetadatumArtifact *string `pulumi:"modelDefinedMetadatumArtifact"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelId *string `pulumi:"modelId"`
}

type ModelDefinedMetadataArtifactState struct {
	// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition pulumi.StringPtrInput
	// (Updatable) The content length of the body.
	ContentLength pulumi.StringPtrInput
	// The name of the model metadatum in the metadata.
	MetadatumKeyName pulumi.StringPtrInput
	// (Updatable) The model defined metadata artifact to upload.
	ModelDefinedMetadatumArtifact pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelId pulumi.StringPtrInput
}

func (ModelDefinedMetadataArtifactState) ElementType() reflect.Type {
	return reflect.TypeOf((*modelDefinedMetadataArtifactState)(nil)).Elem()
}

type modelDefinedMetadataArtifactArgs struct {
	// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition *string `pulumi:"contentDisposition"`
	// (Updatable) The content length of the body.
	ContentLength string `pulumi:"contentLength"`
	// The name of the model metadatum in the metadata.
	MetadatumKeyName string `pulumi:"metadatumKeyName"`
	// (Updatable) The model defined metadata artifact to upload.
	ModelDefinedMetadatumArtifact string `pulumi:"modelDefinedMetadatumArtifact"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelId string `pulumi:"modelId"`
}

// The set of arguments for constructing a ModelDefinedMetadataArtifact resource.
type ModelDefinedMetadataArtifactArgs struct {
	// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition pulumi.StringPtrInput
	// (Updatable) The content length of the body.
	ContentLength pulumi.StringInput
	// The name of the model metadatum in the metadata.
	MetadatumKeyName pulumi.StringInput
	// (Updatable) The model defined metadata artifact to upload.
	ModelDefinedMetadatumArtifact pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelId pulumi.StringInput
}

func (ModelDefinedMetadataArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*modelDefinedMetadataArtifactArgs)(nil)).Elem()
}

type ModelDefinedMetadataArtifactInput interface {
	pulumi.Input

	ToModelDefinedMetadataArtifactOutput() ModelDefinedMetadataArtifactOutput
	ToModelDefinedMetadataArtifactOutputWithContext(ctx context.Context) ModelDefinedMetadataArtifactOutput
}

func (*ModelDefinedMetadataArtifact) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDefinedMetadataArtifact)(nil)).Elem()
}

func (i *ModelDefinedMetadataArtifact) ToModelDefinedMetadataArtifactOutput() ModelDefinedMetadataArtifactOutput {
	return i.ToModelDefinedMetadataArtifactOutputWithContext(context.Background())
}

func (i *ModelDefinedMetadataArtifact) ToModelDefinedMetadataArtifactOutputWithContext(ctx context.Context) ModelDefinedMetadataArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDefinedMetadataArtifactOutput)
}

// ModelDefinedMetadataArtifactArrayInput is an input type that accepts ModelDefinedMetadataArtifactArray and ModelDefinedMetadataArtifactArrayOutput values.
// You can construct a concrete instance of `ModelDefinedMetadataArtifactArrayInput` via:
//
//	ModelDefinedMetadataArtifactArray{ ModelDefinedMetadataArtifactArgs{...} }
type ModelDefinedMetadataArtifactArrayInput interface {
	pulumi.Input

	ToModelDefinedMetadataArtifactArrayOutput() ModelDefinedMetadataArtifactArrayOutput
	ToModelDefinedMetadataArtifactArrayOutputWithContext(context.Context) ModelDefinedMetadataArtifactArrayOutput
}

type ModelDefinedMetadataArtifactArray []ModelDefinedMetadataArtifactInput

func (ModelDefinedMetadataArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ModelDefinedMetadataArtifact)(nil)).Elem()
}

func (i ModelDefinedMetadataArtifactArray) ToModelDefinedMetadataArtifactArrayOutput() ModelDefinedMetadataArtifactArrayOutput {
	return i.ToModelDefinedMetadataArtifactArrayOutputWithContext(context.Background())
}

func (i ModelDefinedMetadataArtifactArray) ToModelDefinedMetadataArtifactArrayOutputWithContext(ctx context.Context) ModelDefinedMetadataArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDefinedMetadataArtifactArrayOutput)
}

// ModelDefinedMetadataArtifactMapInput is an input type that accepts ModelDefinedMetadataArtifactMap and ModelDefinedMetadataArtifactMapOutput values.
// You can construct a concrete instance of `ModelDefinedMetadataArtifactMapInput` via:
//
//	ModelDefinedMetadataArtifactMap{ "key": ModelDefinedMetadataArtifactArgs{...} }
type ModelDefinedMetadataArtifactMapInput interface {
	pulumi.Input

	ToModelDefinedMetadataArtifactMapOutput() ModelDefinedMetadataArtifactMapOutput
	ToModelDefinedMetadataArtifactMapOutputWithContext(context.Context) ModelDefinedMetadataArtifactMapOutput
}

type ModelDefinedMetadataArtifactMap map[string]ModelDefinedMetadataArtifactInput

func (ModelDefinedMetadataArtifactMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ModelDefinedMetadataArtifact)(nil)).Elem()
}

func (i ModelDefinedMetadataArtifactMap) ToModelDefinedMetadataArtifactMapOutput() ModelDefinedMetadataArtifactMapOutput {
	return i.ToModelDefinedMetadataArtifactMapOutputWithContext(context.Background())
}

func (i ModelDefinedMetadataArtifactMap) ToModelDefinedMetadataArtifactMapOutputWithContext(ctx context.Context) ModelDefinedMetadataArtifactMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelDefinedMetadataArtifactMapOutput)
}

type ModelDefinedMetadataArtifactOutput struct{ *pulumi.OutputState }

func (ModelDefinedMetadataArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelDefinedMetadataArtifact)(nil)).Elem()
}

func (o ModelDefinedMetadataArtifactOutput) ToModelDefinedMetadataArtifactOutput() ModelDefinedMetadataArtifactOutput {
	return o
}

func (o ModelDefinedMetadataArtifactOutput) ToModelDefinedMetadataArtifactOutputWithContext(ctx context.Context) ModelDefinedMetadataArtifactOutput {
	return o
}

// (Updatable) This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
func (o ModelDefinedMetadataArtifactOutput) ContentDisposition() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelDefinedMetadataArtifact) pulumi.StringOutput { return v.ContentDisposition }).(pulumi.StringOutput)
}

// (Updatable) The content length of the body.
func (o ModelDefinedMetadataArtifactOutput) ContentLength() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelDefinedMetadataArtifact) pulumi.StringOutput { return v.ContentLength }).(pulumi.StringOutput)
}

// The name of the model metadatum in the metadata.
func (o ModelDefinedMetadataArtifactOutput) MetadatumKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelDefinedMetadataArtifact) pulumi.StringOutput { return v.MetadatumKeyName }).(pulumi.StringOutput)
}

// (Updatable) The model defined metadata artifact to upload.
func (o ModelDefinedMetadataArtifactOutput) ModelDefinedMetadatumArtifact() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelDefinedMetadataArtifact) pulumi.StringOutput { return v.ModelDefinedMetadatumArtifact }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelDefinedMetadataArtifactOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelDefinedMetadataArtifact) pulumi.StringOutput { return v.ModelId }).(pulumi.StringOutput)
}

type ModelDefinedMetadataArtifactArrayOutput struct{ *pulumi.OutputState }

func (ModelDefinedMetadataArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ModelDefinedMetadataArtifact)(nil)).Elem()
}

func (o ModelDefinedMetadataArtifactArrayOutput) ToModelDefinedMetadataArtifactArrayOutput() ModelDefinedMetadataArtifactArrayOutput {
	return o
}

func (o ModelDefinedMetadataArtifactArrayOutput) ToModelDefinedMetadataArtifactArrayOutputWithContext(ctx context.Context) ModelDefinedMetadataArtifactArrayOutput {
	return o
}

func (o ModelDefinedMetadataArtifactArrayOutput) Index(i pulumi.IntInput) ModelDefinedMetadataArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ModelDefinedMetadataArtifact {
		return vs[0].([]*ModelDefinedMetadataArtifact)[vs[1].(int)]
	}).(ModelDefinedMetadataArtifactOutput)
}

type ModelDefinedMetadataArtifactMapOutput struct{ *pulumi.OutputState }

func (ModelDefinedMetadataArtifactMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ModelDefinedMetadataArtifact)(nil)).Elem()
}

func (o ModelDefinedMetadataArtifactMapOutput) ToModelDefinedMetadataArtifactMapOutput() ModelDefinedMetadataArtifactMapOutput {
	return o
}

func (o ModelDefinedMetadataArtifactMapOutput) ToModelDefinedMetadataArtifactMapOutputWithContext(ctx context.Context) ModelDefinedMetadataArtifactMapOutput {
	return o
}

func (o ModelDefinedMetadataArtifactMapOutput) MapIndex(k pulumi.StringInput) ModelDefinedMetadataArtifactOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ModelDefinedMetadataArtifact {
		return vs[0].(map[string]*ModelDefinedMetadataArtifact)[vs[1].(string)]
	}).(ModelDefinedMetadataArtifactOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModelDefinedMetadataArtifactInput)(nil)).Elem(), &ModelDefinedMetadataArtifact{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelDefinedMetadataArtifactArrayInput)(nil)).Elem(), ModelDefinedMetadataArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelDefinedMetadataArtifactMapInput)(nil)).Elem(), ModelDefinedMetadataArtifactMap{})
	pulumi.RegisterOutputType(ModelDefinedMetadataArtifactOutput{})
	pulumi.RegisterOutputType(ModelDefinedMetadataArtifactArrayOutput{})
	pulumi.RegisterOutputType(ModelDefinedMetadataArtifactMapOutput{})
}
