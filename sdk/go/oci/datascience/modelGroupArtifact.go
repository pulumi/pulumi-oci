// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datascience

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Model Group Artifact resource in Oracle Cloud Infrastructure Data Science service.
//
// Creates artifact for the Model Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/datascience"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datascience.NewModelGroupArtifact(ctx, "test_model_group_artifact", &datascience.ModelGroupArtifactArgs{
//				ModelGroupArtifact: pulumi.Any(modelGroupArtifactModelGroupArtifact),
//				ContentLength:      pulumi.Any(modelGroupArtifactContentLength),
//				ModelGroupId:       pulumi.Any(testModelGroup.Id),
//				ContentDisposition: pulumi.Any(modelGroupArtifactContentDisposition),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ModelGroupArtifacts can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DataScience/modelGroupArtifact:ModelGroupArtifact test_model_group_artifact "id"
// ```
type ModelGroupArtifact struct {
	pulumi.CustomResourceState

	// This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition pulumi.StringOutput `pulumi:"contentDisposition"`
	// The content length of the body.
	ContentLength pulumi.StringOutput `pulumi:"contentLength"`
	// The model group artifact to upload.
	ModelGroupArtifact pulumi.StringOutput `pulumi:"modelGroupArtifact"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the modelGroup.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelGroupId pulumi.StringOutput `pulumi:"modelGroupId"`
}

// NewModelGroupArtifact registers a new resource with the given unique name, arguments, and options.
func NewModelGroupArtifact(ctx *pulumi.Context,
	name string, args *ModelGroupArtifactArgs, opts ...pulumi.ResourceOption) (*ModelGroupArtifact, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContentLength == nil {
		return nil, errors.New("invalid value for required argument 'ContentLength'")
	}
	if args.ModelGroupArtifact == nil {
		return nil, errors.New("invalid value for required argument 'ModelGroupArtifact'")
	}
	if args.ModelGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ModelGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ModelGroupArtifact
	err := ctx.RegisterResource("oci:DataScience/modelGroupArtifact:ModelGroupArtifact", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetModelGroupArtifact gets an existing ModelGroupArtifact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetModelGroupArtifact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ModelGroupArtifactState, opts ...pulumi.ResourceOption) (*ModelGroupArtifact, error) {
	var resource ModelGroupArtifact
	err := ctx.ReadResource("oci:DataScience/modelGroupArtifact:ModelGroupArtifact", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ModelGroupArtifact resources.
type modelGroupArtifactState struct {
	// This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition *string `pulumi:"contentDisposition"`
	// The content length of the body.
	ContentLength *string `pulumi:"contentLength"`
	// The model group artifact to upload.
	ModelGroupArtifact *string `pulumi:"modelGroupArtifact"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the modelGroup.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelGroupId *string `pulumi:"modelGroupId"`
}

type ModelGroupArtifactState struct {
	// This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition pulumi.StringPtrInput
	// The content length of the body.
	ContentLength pulumi.StringPtrInput
	// The model group artifact to upload.
	ModelGroupArtifact pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the modelGroup.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelGroupId pulumi.StringPtrInput
}

func (ModelGroupArtifactState) ElementType() reflect.Type {
	return reflect.TypeOf((*modelGroupArtifactState)(nil)).Elem()
}

type modelGroupArtifactArgs struct {
	// This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition *string `pulumi:"contentDisposition"`
	// The content length of the body.
	ContentLength string `pulumi:"contentLength"`
	// The model group artifact to upload.
	ModelGroupArtifact string `pulumi:"modelGroupArtifact"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the modelGroup.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelGroupId string `pulumi:"modelGroupId"`
}

// The set of arguments for constructing a ModelGroupArtifact resource.
type ModelGroupArtifactArgs struct {
	// This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
	ContentDisposition pulumi.StringPtrInput
	// The content length of the body.
	ContentLength pulumi.StringInput
	// The model group artifact to upload.
	ModelGroupArtifact pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the modelGroup.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ModelGroupId pulumi.StringInput
}

func (ModelGroupArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*modelGroupArtifactArgs)(nil)).Elem()
}

type ModelGroupArtifactInput interface {
	pulumi.Input

	ToModelGroupArtifactOutput() ModelGroupArtifactOutput
	ToModelGroupArtifactOutputWithContext(ctx context.Context) ModelGroupArtifactOutput
}

func (*ModelGroupArtifact) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelGroupArtifact)(nil)).Elem()
}

func (i *ModelGroupArtifact) ToModelGroupArtifactOutput() ModelGroupArtifactOutput {
	return i.ToModelGroupArtifactOutputWithContext(context.Background())
}

func (i *ModelGroupArtifact) ToModelGroupArtifactOutputWithContext(ctx context.Context) ModelGroupArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelGroupArtifactOutput)
}

// ModelGroupArtifactArrayInput is an input type that accepts ModelGroupArtifactArray and ModelGroupArtifactArrayOutput values.
// You can construct a concrete instance of `ModelGroupArtifactArrayInput` via:
//
//	ModelGroupArtifactArray{ ModelGroupArtifactArgs{...} }
type ModelGroupArtifactArrayInput interface {
	pulumi.Input

	ToModelGroupArtifactArrayOutput() ModelGroupArtifactArrayOutput
	ToModelGroupArtifactArrayOutputWithContext(context.Context) ModelGroupArtifactArrayOutput
}

type ModelGroupArtifactArray []ModelGroupArtifactInput

func (ModelGroupArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ModelGroupArtifact)(nil)).Elem()
}

func (i ModelGroupArtifactArray) ToModelGroupArtifactArrayOutput() ModelGroupArtifactArrayOutput {
	return i.ToModelGroupArtifactArrayOutputWithContext(context.Background())
}

func (i ModelGroupArtifactArray) ToModelGroupArtifactArrayOutputWithContext(ctx context.Context) ModelGroupArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelGroupArtifactArrayOutput)
}

// ModelGroupArtifactMapInput is an input type that accepts ModelGroupArtifactMap and ModelGroupArtifactMapOutput values.
// You can construct a concrete instance of `ModelGroupArtifactMapInput` via:
//
//	ModelGroupArtifactMap{ "key": ModelGroupArtifactArgs{...} }
type ModelGroupArtifactMapInput interface {
	pulumi.Input

	ToModelGroupArtifactMapOutput() ModelGroupArtifactMapOutput
	ToModelGroupArtifactMapOutputWithContext(context.Context) ModelGroupArtifactMapOutput
}

type ModelGroupArtifactMap map[string]ModelGroupArtifactInput

func (ModelGroupArtifactMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ModelGroupArtifact)(nil)).Elem()
}

func (i ModelGroupArtifactMap) ToModelGroupArtifactMapOutput() ModelGroupArtifactMapOutput {
	return i.ToModelGroupArtifactMapOutputWithContext(context.Background())
}

func (i ModelGroupArtifactMap) ToModelGroupArtifactMapOutputWithContext(ctx context.Context) ModelGroupArtifactMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelGroupArtifactMapOutput)
}

type ModelGroupArtifactOutput struct{ *pulumi.OutputState }

func (ModelGroupArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModelGroupArtifact)(nil)).Elem()
}

func (o ModelGroupArtifactOutput) ToModelGroupArtifactOutput() ModelGroupArtifactOutput {
	return o
}

func (o ModelGroupArtifactOutput) ToModelGroupArtifactOutputWithContext(ctx context.Context) ModelGroupArtifactOutput {
	return o
}

// This header allows you to specify a filename during upload. This file name is used to dispose of the file contents while downloading the file. If this optional field is not populated in the request, then the OCID of the model is used for the file name when downloading. Example: `{"Content-Disposition": "attachment" "filename"="model.tar.gz" "Content-Length": "2347" "Content-Type": "application/gzip"}`
func (o ModelGroupArtifactOutput) ContentDisposition() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelGroupArtifact) pulumi.StringOutput { return v.ContentDisposition }).(pulumi.StringOutput)
}

// The content length of the body.
func (o ModelGroupArtifactOutput) ContentLength() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelGroupArtifact) pulumi.StringOutput { return v.ContentLength }).(pulumi.StringOutput)
}

// The model group artifact to upload.
func (o ModelGroupArtifactOutput) ModelGroupArtifact() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelGroupArtifact) pulumi.StringOutput { return v.ModelGroupArtifact }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the modelGroup.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ModelGroupArtifactOutput) ModelGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ModelGroupArtifact) pulumi.StringOutput { return v.ModelGroupId }).(pulumi.StringOutput)
}

type ModelGroupArtifactArrayOutput struct{ *pulumi.OutputState }

func (ModelGroupArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ModelGroupArtifact)(nil)).Elem()
}

func (o ModelGroupArtifactArrayOutput) ToModelGroupArtifactArrayOutput() ModelGroupArtifactArrayOutput {
	return o
}

func (o ModelGroupArtifactArrayOutput) ToModelGroupArtifactArrayOutputWithContext(ctx context.Context) ModelGroupArtifactArrayOutput {
	return o
}

func (o ModelGroupArtifactArrayOutput) Index(i pulumi.IntInput) ModelGroupArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ModelGroupArtifact {
		return vs[0].([]*ModelGroupArtifact)[vs[1].(int)]
	}).(ModelGroupArtifactOutput)
}

type ModelGroupArtifactMapOutput struct{ *pulumi.OutputState }

func (ModelGroupArtifactMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ModelGroupArtifact)(nil)).Elem()
}

func (o ModelGroupArtifactMapOutput) ToModelGroupArtifactMapOutput() ModelGroupArtifactMapOutput {
	return o
}

func (o ModelGroupArtifactMapOutput) ToModelGroupArtifactMapOutputWithContext(ctx context.Context) ModelGroupArtifactMapOutput {
	return o
}

func (o ModelGroupArtifactMapOutput) MapIndex(k pulumi.StringInput) ModelGroupArtifactOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ModelGroupArtifact {
		return vs[0].(map[string]*ModelGroupArtifact)[vs[1].(string)]
	}).(ModelGroupArtifactOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ModelGroupArtifactInput)(nil)).Elem(), &ModelGroupArtifact{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelGroupArtifactArrayInput)(nil)).Elem(), ModelGroupArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ModelGroupArtifactMapInput)(nil)).Elem(), ModelGroupArtifactMap{})
	pulumi.RegisterOutputType(ModelGroupArtifactOutput{})
	pulumi.RegisterOutputType(ModelGroupArtifactArrayOutput{})
	pulumi.RegisterOutputType(ModelGroupArtifactMapOutput{})
}
