// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dblm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Patch Management resource in Oracle Cloud Infrastructure Dblm service.
//
// Overview of Patch Management.
func GetPatchManagement(ctx *pulumi.Context, args *GetPatchManagementArgs, opts ...pulumi.InvokeOption) (*GetPatchManagementResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPatchManagementResult
	err := ctx.Invoke("oci:Dblm/getPatchManagement:getPatchManagement", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPatchManagement.
type GetPatchManagementArgs struct {
	// The required ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only database that match the given release version.
	DatabaseRelease *string `pulumi:"databaseRelease"`
	// A filter to return only resources whose timeStarted is greater than or equal to the given date-time.
	TimeStartedGreaterThanOrEqualTo *string `pulumi:"timeStartedGreaterThanOrEqualTo"`
	// A filter to return only resources whose timeStarted is less than the given date-time.
	TimeStartedLessThan *string `pulumi:"timeStartedLessThan"`
}

// A collection of values returned by getPatchManagement.
type GetPatchManagementResult struct {
	// Compartment Identifier
	CompartmentId   string  `pulumi:"compartmentId"`
	DatabaseRelease *string `pulumi:"databaseRelease"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Summary of image patches recommended to install.
	ImagesPatchRecommendationSummaries []GetPatchManagementImagesPatchRecommendationSummary `pulumi:"imagesPatchRecommendationSummaries"`
	// A message describing the status of the feature's state
	Message string `pulumi:"message"`
	// Summary of patch operations.
	PatchOperationsSummaries []GetPatchManagementPatchOperationsSummary `pulumi:"patchOperationsSummaries"`
	// resources objects
	Resources []GetPatchManagementResource `pulumi:"resources"`
	// Summary of image patches to be compliant to install.
	ResourcesPatchComplianceSummaries []GetPatchManagementResourcesPatchComplianceSummary `pulumi:"resourcesPatchComplianceSummaries"`
	// The current state of the feature.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the Vulnerability was enabled. An RFC3339 formatted datetime string.
	TimeEnabled                     string  `pulumi:"timeEnabled"`
	TimeStartedGreaterThanOrEqualTo *string `pulumi:"timeStartedGreaterThanOrEqualTo"`
	TimeStartedLessThan             *string `pulumi:"timeStartedLessThan"`
}

func GetPatchManagementOutput(ctx *pulumi.Context, args GetPatchManagementOutputArgs, opts ...pulumi.InvokeOption) GetPatchManagementResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPatchManagementResultOutput, error) {
			args := v.(GetPatchManagementArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Dblm/getPatchManagement:getPatchManagement", args, GetPatchManagementResultOutput{}, options).(GetPatchManagementResultOutput), nil
		}).(GetPatchManagementResultOutput)
}

// A collection of arguments for invoking getPatchManagement.
type GetPatchManagementOutputArgs struct {
	// The required ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only database that match the given release version.
	DatabaseRelease pulumi.StringPtrInput `pulumi:"databaseRelease"`
	// A filter to return only resources whose timeStarted is greater than or equal to the given date-time.
	TimeStartedGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeStartedGreaterThanOrEqualTo"`
	// A filter to return only resources whose timeStarted is less than the given date-time.
	TimeStartedLessThan pulumi.StringPtrInput `pulumi:"timeStartedLessThan"`
}

func (GetPatchManagementOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchManagementArgs)(nil)).Elem()
}

// A collection of values returned by getPatchManagement.
type GetPatchManagementResultOutput struct{ *pulumi.OutputState }

func (GetPatchManagementResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchManagementResult)(nil)).Elem()
}

func (o GetPatchManagementResultOutput) ToGetPatchManagementResultOutput() GetPatchManagementResultOutput {
	return o
}

func (o GetPatchManagementResultOutput) ToGetPatchManagementResultOutputWithContext(ctx context.Context) GetPatchManagementResultOutput {
	return o
}

// Compartment Identifier
func (o GetPatchManagementResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchManagementResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetPatchManagementResultOutput) DatabaseRelease() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchManagementResult) *string { return v.DatabaseRelease }).(pulumi.StringPtrOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetPatchManagementResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPatchManagementResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetPatchManagementResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPatchManagementResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPatchManagementResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchManagementResult) string { return v.Id }).(pulumi.StringOutput)
}

// Summary of image patches recommended to install.
func (o GetPatchManagementResultOutput) ImagesPatchRecommendationSummaries() GetPatchManagementImagesPatchRecommendationSummaryArrayOutput {
	return o.ApplyT(func(v GetPatchManagementResult) []GetPatchManagementImagesPatchRecommendationSummary {
		return v.ImagesPatchRecommendationSummaries
	}).(GetPatchManagementImagesPatchRecommendationSummaryArrayOutput)
}

// A message describing the status of the feature's state
func (o GetPatchManagementResultOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchManagementResult) string { return v.Message }).(pulumi.StringOutput)
}

// Summary of patch operations.
func (o GetPatchManagementResultOutput) PatchOperationsSummaries() GetPatchManagementPatchOperationsSummaryArrayOutput {
	return o.ApplyT(func(v GetPatchManagementResult) []GetPatchManagementPatchOperationsSummary {
		return v.PatchOperationsSummaries
	}).(GetPatchManagementPatchOperationsSummaryArrayOutput)
}

// resources objects
func (o GetPatchManagementResultOutput) Resources() GetPatchManagementResourceArrayOutput {
	return o.ApplyT(func(v GetPatchManagementResult) []GetPatchManagementResource { return v.Resources }).(GetPatchManagementResourceArrayOutput)
}

// Summary of image patches to be compliant to install.
func (o GetPatchManagementResultOutput) ResourcesPatchComplianceSummaries() GetPatchManagementResourcesPatchComplianceSummaryArrayOutput {
	return o.ApplyT(func(v GetPatchManagementResult) []GetPatchManagementResourcesPatchComplianceSummary {
		return v.ResourcesPatchComplianceSummaries
	}).(GetPatchManagementResourcesPatchComplianceSummaryArrayOutput)
}

// The current state of the feature.
func (o GetPatchManagementResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchManagementResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetPatchManagementResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPatchManagementResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the Vulnerability was enabled. An RFC3339 formatted datetime string.
func (o GetPatchManagementResultOutput) TimeEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchManagementResult) string { return v.TimeEnabled }).(pulumi.StringOutput)
}

func (o GetPatchManagementResultOutput) TimeStartedGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchManagementResult) *string { return v.TimeStartedGreaterThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetPatchManagementResultOutput) TimeStartedLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchManagementResult) *string { return v.TimeStartedLessThan }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPatchManagementResultOutput{})
}
