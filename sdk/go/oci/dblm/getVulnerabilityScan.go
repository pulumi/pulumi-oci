// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dblm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Vulnerability Scan resource in Oracle Cloud Infrastructure Dblm service.
//
// Gets information about a VulnerabilityScan.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/dblm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dblm.GetVulnerabilityScan(ctx, &dblm.GetVulnerabilityScanArgs{
//				VulnerabilityScanId: testVulnerabilityScanOciDblmVulnerabilityScan.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVulnerabilityScan(ctx *pulumi.Context, args *LookupVulnerabilityScanArgs, opts ...pulumi.InvokeOption) (*LookupVulnerabilityScanResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVulnerabilityScanResult
	err := ctx.Invoke("oci:Dblm/getVulnerabilityScan:getVulnerabilityScan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVulnerabilityScan.
type LookupVulnerabilityScanArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VulnerabilityScan.
	VulnerabilityScanId string `pulumi:"vulnerabilityScanId"`
}

// A collection of values returned by getVulnerabilityScan.
type LookupVulnerabilityScanResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly name. It does not have to be unique, and it is changeable.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VulnerabilityScan.
	Id string `pulumi:"id"`
	// The current state of the VulnerabilityScan.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the VulnerabilityScan was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the VulnerabilityScan was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeEnded           string `pulumi:"timeEnded"`
	VulnerabilityScanId string `pulumi:"vulnerabilityScanId"`
	// The message of the vulnerability scan status.
	VulnerabilityScanMessage string `pulumi:"vulnerabilityScanMessage"`
	// The status of the vulnerability scan.
	VulnerabilityScanStatus string `pulumi:"vulnerabilityScanStatus"`
	// Scan type is CVE, PATCH or IMAGE_PATCH
	VulnerabilityScanType string `pulumi:"vulnerabilityScanType"`
}

func LookupVulnerabilityScanOutput(ctx *pulumi.Context, args LookupVulnerabilityScanOutputArgs, opts ...pulumi.InvokeOption) LookupVulnerabilityScanResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVulnerabilityScanResultOutput, error) {
			args := v.(LookupVulnerabilityScanArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Dblm/getVulnerabilityScan:getVulnerabilityScan", args, LookupVulnerabilityScanResultOutput{}, options).(LookupVulnerabilityScanResultOutput), nil
		}).(LookupVulnerabilityScanResultOutput)
}

// A collection of arguments for invoking getVulnerabilityScan.
type LookupVulnerabilityScanOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VulnerabilityScan.
	VulnerabilityScanId pulumi.StringInput `pulumi:"vulnerabilityScanId"`
}

func (LookupVulnerabilityScanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVulnerabilityScanArgs)(nil)).Elem()
}

// A collection of values returned by getVulnerabilityScan.
type LookupVulnerabilityScanResultOutput struct{ *pulumi.OutputState }

func (LookupVulnerabilityScanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVulnerabilityScanResult)(nil)).Elem()
}

func (o LookupVulnerabilityScanResultOutput) ToLookupVulnerabilityScanResultOutput() LookupVulnerabilityScanResultOutput {
	return o
}

func (o LookupVulnerabilityScanResultOutput) ToLookupVulnerabilityScanResultOutputWithContext(ctx context.Context) LookupVulnerabilityScanResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupVulnerabilityScanResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupVulnerabilityScanResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly name. It does not have to be unique, and it is changeable.
func (o LookupVulnerabilityScanResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupVulnerabilityScanResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VulnerabilityScan.
func (o LookupVulnerabilityScanResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current state of the VulnerabilityScan.
func (o LookupVulnerabilityScanResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupVulnerabilityScanResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the VulnerabilityScan was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupVulnerabilityScanResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the VulnerabilityScan was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupVulnerabilityScanResultOutput) TimeEnded() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) string { return v.TimeEnded }).(pulumi.StringOutput)
}

func (o LookupVulnerabilityScanResultOutput) VulnerabilityScanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) string { return v.VulnerabilityScanId }).(pulumi.StringOutput)
}

// The message of the vulnerability scan status.
func (o LookupVulnerabilityScanResultOutput) VulnerabilityScanMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) string { return v.VulnerabilityScanMessage }).(pulumi.StringOutput)
}

// The status of the vulnerability scan.
func (o LookupVulnerabilityScanResultOutput) VulnerabilityScanStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) string { return v.VulnerabilityScanStatus }).(pulumi.StringOutput)
}

// Scan type is CVE, PATCH or IMAGE_PATCH
func (o LookupVulnerabilityScanResultOutput) VulnerabilityScanType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityScanResult) string { return v.VulnerabilityScanType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVulnerabilityScanResultOutput{})
}
