// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package delegateaccesscontrol

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Delegated Resource Access Request Audit Log Report resource in Oracle Cloud Infrastructure Delegate Access Control service.
//
// Gets the audit log report for the given Delegated Resource Access Request.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DelegateAccessControl"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DelegateAccessControl.GetDelegatedResourceAccessRequestAuditLogReport(ctx, &delegateaccesscontrol.GetDelegatedResourceAccessRequestAuditLogReportArgs{
//				DelegatedResourceAccessRequestId: testDelegatedResourceAccessRequest.Id,
//				IsProcessTreeEnabled:             pulumi.BoolRef(delegatedResourceAccessRequestAuditLogReportIsProcessTreeEnabled),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDelegatedResourceAccessRequestAuditLogReport(ctx *pulumi.Context, args *GetDelegatedResourceAccessRequestAuditLogReportArgs, opts ...pulumi.InvokeOption) (*GetDelegatedResourceAccessRequestAuditLogReportResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDelegatedResourceAccessRequestAuditLogReportResult
	err := ctx.Invoke("oci:DelegateAccessControl/getDelegatedResourceAccessRequestAuditLogReport:getDelegatedResourceAccessRequestAuditLogReport", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDelegatedResourceAccessRequestAuditLogReport.
type GetDelegatedResourceAccessRequestAuditLogReportArgs struct {
	// Unique Delegated Resource Access Request identifier
	DelegatedResourceAccessRequestId string `pulumi:"delegatedResourceAccessRequestId"`
	// Set to true to enable process tree computation in audit report
	IsProcessTreeEnabled *bool `pulumi:"isProcessTreeEnabled"`
}

// A collection of values returned by getDelegatedResourceAccessRequestAuditLogReport.
type GetDelegatedResourceAccessRequestAuditLogReportResult struct {
	// Status of the audit report
	AuditReportStatus                string `pulumi:"auditReportStatus"`
	DelegatedResourceAccessRequestId string `pulumi:"delegatedResourceAccessRequestId"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string `pulumi:"id"`
	IsProcessTreeEnabled *bool  `pulumi:"isProcessTreeEnabled"`
	// The process tree data
	ProcessTree string `pulumi:"processTree"`
	// Audit log report.
	Report string `pulumi:"report"`
	// Time when the audit report was generated [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
	TimeReportGenerated string `pulumi:"timeReportGenerated"`
}

func GetDelegatedResourceAccessRequestAuditLogReportOutput(ctx *pulumi.Context, args GetDelegatedResourceAccessRequestAuditLogReportOutputArgs, opts ...pulumi.InvokeOption) GetDelegatedResourceAccessRequestAuditLogReportResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDelegatedResourceAccessRequestAuditLogReportResultOutput, error) {
			args := v.(GetDelegatedResourceAccessRequestAuditLogReportArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DelegateAccessControl/getDelegatedResourceAccessRequestAuditLogReport:getDelegatedResourceAccessRequestAuditLogReport", args, GetDelegatedResourceAccessRequestAuditLogReportResultOutput{}, options).(GetDelegatedResourceAccessRequestAuditLogReportResultOutput), nil
		}).(GetDelegatedResourceAccessRequestAuditLogReportResultOutput)
}

// A collection of arguments for invoking getDelegatedResourceAccessRequestAuditLogReport.
type GetDelegatedResourceAccessRequestAuditLogReportOutputArgs struct {
	// Unique Delegated Resource Access Request identifier
	DelegatedResourceAccessRequestId pulumi.StringInput `pulumi:"delegatedResourceAccessRequestId"`
	// Set to true to enable process tree computation in audit report
	IsProcessTreeEnabled pulumi.BoolPtrInput `pulumi:"isProcessTreeEnabled"`
}

func (GetDelegatedResourceAccessRequestAuditLogReportOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegatedResourceAccessRequestAuditLogReportArgs)(nil)).Elem()
}

// A collection of values returned by getDelegatedResourceAccessRequestAuditLogReport.
type GetDelegatedResourceAccessRequestAuditLogReportResultOutput struct{ *pulumi.OutputState }

func (GetDelegatedResourceAccessRequestAuditLogReportResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegatedResourceAccessRequestAuditLogReportResult)(nil)).Elem()
}

func (o GetDelegatedResourceAccessRequestAuditLogReportResultOutput) ToGetDelegatedResourceAccessRequestAuditLogReportResultOutput() GetDelegatedResourceAccessRequestAuditLogReportResultOutput {
	return o
}

func (o GetDelegatedResourceAccessRequestAuditLogReportResultOutput) ToGetDelegatedResourceAccessRequestAuditLogReportResultOutputWithContext(ctx context.Context) GetDelegatedResourceAccessRequestAuditLogReportResultOutput {
	return o
}

// Status of the audit report
func (o GetDelegatedResourceAccessRequestAuditLogReportResultOutput) AuditReportStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedResourceAccessRequestAuditLogReportResult) string { return v.AuditReportStatus }).(pulumi.StringOutput)
}

func (o GetDelegatedResourceAccessRequestAuditLogReportResultOutput) DelegatedResourceAccessRequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedResourceAccessRequestAuditLogReportResult) string {
		return v.DelegatedResourceAccessRequestId
	}).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDelegatedResourceAccessRequestAuditLogReportResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedResourceAccessRequestAuditLogReportResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDelegatedResourceAccessRequestAuditLogReportResultOutput) IsProcessTreeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDelegatedResourceAccessRequestAuditLogReportResult) *bool { return v.IsProcessTreeEnabled }).(pulumi.BoolPtrOutput)
}

// The process tree data
func (o GetDelegatedResourceAccessRequestAuditLogReportResultOutput) ProcessTree() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedResourceAccessRequestAuditLogReportResult) string { return v.ProcessTree }).(pulumi.StringOutput)
}

// Audit log report.
func (o GetDelegatedResourceAccessRequestAuditLogReportResultOutput) Report() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedResourceAccessRequestAuditLogReportResult) string { return v.Report }).(pulumi.StringOutput)
}

// Time when the audit report was generated [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
func (o GetDelegatedResourceAccessRequestAuditLogReportResultOutput) TimeReportGenerated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedResourceAccessRequestAuditLogReportResult) string { return v.TimeReportGenerated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDelegatedResourceAccessRequestAuditLogReportResultOutput{})
}
