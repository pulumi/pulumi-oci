// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package delegateaccesscontrol

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Delegation Controls in Oracle Cloud Infrastructure Delegate Access Control service.
//
// Lists the Delegation Controls in the compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/delegateaccesscontrol"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := delegateaccesscontrol.GetDelegationControls(ctx, &delegateaccesscontrol.GetDelegationControlsArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(delegationControlDisplayName),
//				ResourceId:    pulumi.StringRef(testResource.Id),
//				ResourceType:  pulumi.StringRef(delegationControlResourceType),
//				State:         pulumi.StringRef(delegationControlState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDelegationControls(ctx *pulumi.Context, args *GetDelegationControlsArgs, opts ...pulumi.InvokeOption) (*GetDelegationControlsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDelegationControlsResult
	err := ctx.Invoke("oci:DelegateAccessControl/getDelegationControls:getDelegationControls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDelegationControls.
type GetDelegationControlsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return Delegation Control resources that match the given display name.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetDelegationControlsFilter `pulumi:"filters"`
	// A filter to return Delegation Control resources that match the given resource ID.
	ResourceId *string `pulumi:"resourceId"`
	// A filter to return only resources that match the given resource type.
	ResourceType *string `pulumi:"resourceType"`
	// A filter to return only Delegation Control resources whose lifecycleState matches the given Delegation Control lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDelegationControls.
type GetDelegationControlsResult struct {
	// The OCID of the compartment that contains the Delegation Control.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of delegation_control_summary_collection.
	DelegationControlSummaryCollections []GetDelegationControlsDelegationControlSummaryCollection `pulumi:"delegationControlSummaryCollections"`
	// Name of the Delegation Control. The name does not need to be unique.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetDelegationControlsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	ResourceId *string `pulumi:"resourceId"`
	// Resource type for which the Delegation Control is applicable to.
	ResourceType *string `pulumi:"resourceType"`
	// The current lifecycle state of the Delegation Control.
	State *string `pulumi:"state"`
}

func GetDelegationControlsOutput(ctx *pulumi.Context, args GetDelegationControlsOutputArgs, opts ...pulumi.InvokeOption) GetDelegationControlsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDelegationControlsResultOutput, error) {
			args := v.(GetDelegationControlsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DelegateAccessControl/getDelegationControls:getDelegationControls", args, GetDelegationControlsResultOutput{}, options).(GetDelegationControlsResultOutput), nil
		}).(GetDelegationControlsResultOutput)
}

// A collection of arguments for invoking getDelegationControls.
type GetDelegationControlsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return Delegation Control resources that match the given display name.
	DisplayName pulumi.StringPtrInput                 `pulumi:"displayName"`
	Filters     GetDelegationControlsFilterArrayInput `pulumi:"filters"`
	// A filter to return Delegation Control resources that match the given resource ID.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// A filter to return only resources that match the given resource type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// A filter to return only Delegation Control resources whose lifecycleState matches the given Delegation Control lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDelegationControlsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegationControlsArgs)(nil)).Elem()
}

// A collection of values returned by getDelegationControls.
type GetDelegationControlsResultOutput struct{ *pulumi.OutputState }

func (GetDelegationControlsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegationControlsResult)(nil)).Elem()
}

func (o GetDelegationControlsResultOutput) ToGetDelegationControlsResultOutput() GetDelegationControlsResultOutput {
	return o
}

func (o GetDelegationControlsResultOutput) ToGetDelegationControlsResultOutputWithContext(ctx context.Context) GetDelegationControlsResultOutput {
	return o
}

// The OCID of the compartment that contains the Delegation Control.
func (o GetDelegationControlsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegationControlsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of delegation_control_summary_collection.
func (o GetDelegationControlsResultOutput) DelegationControlSummaryCollections() GetDelegationControlsDelegationControlSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetDelegationControlsResult) []GetDelegationControlsDelegationControlSummaryCollection {
		return v.DelegationControlSummaryCollections
	}).(GetDelegationControlsDelegationControlSummaryCollectionArrayOutput)
}

// Name of the Delegation Control. The name does not need to be unique.
func (o GetDelegationControlsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDelegationControlsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDelegationControlsResultOutput) Filters() GetDelegationControlsFilterArrayOutput {
	return o.ApplyT(func(v GetDelegationControlsResult) []GetDelegationControlsFilter { return v.Filters }).(GetDelegationControlsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDelegationControlsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegationControlsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDelegationControlsResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDelegationControlsResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Resource type for which the Delegation Control is applicable to.
func (o GetDelegationControlsResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDelegationControlsResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The current lifecycle state of the Delegation Control.
func (o GetDelegationControlsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDelegationControlsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDelegationControlsResultOutput{})
}
