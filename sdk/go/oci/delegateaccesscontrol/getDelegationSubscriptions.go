// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package delegateaccesscontrol

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Delegation Subscriptions in Oracle Cloud Infrastructure Delegate Access Control service.
//
// Lists the Delegation Subscriptions in Delegation Control.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/delegateaccesscontrol"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := delegateaccesscontrol.GetDelegationSubscriptions(ctx, &delegateaccesscontrol.GetDelegationSubscriptionsArgs{
//				CompartmentId: compartmentId,
//				DisplayName:   pulumi.StringRef(delegationSubscriptionDisplayName),
//				State:         pulumi.StringRef(delegationSubscriptionState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDelegationSubscriptions(ctx *pulumi.Context, args *GetDelegationSubscriptionsArgs, opts ...pulumi.InvokeOption) (*GetDelegationSubscriptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDelegationSubscriptionsResult
	err := ctx.Invoke("oci:DelegateAccessControl/getDelegationSubscriptions:getDelegationSubscriptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDelegationSubscriptions.
type GetDelegationSubscriptionsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return Delegation Subscription resources that match the given display name.
	DisplayName *string                            `pulumi:"displayName"`
	Filters     []GetDelegationSubscriptionsFilter `pulumi:"filters"`
	// A filter to return only Delegation Subscription resources whose lifecycleState matches the given Delegation Subscription lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDelegationSubscriptions.
type GetDelegationSubscriptionsResult struct {
	// The OCID of the compartment that contains the Delegation Subscription.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of delegation_subscription_summary_collection.
	DelegationSubscriptionSummaryCollections []GetDelegationSubscriptionsDelegationSubscriptionSummaryCollection `pulumi:"delegationSubscriptionSummaryCollections"`
	// Display name
	DisplayName *string                            `pulumi:"displayName"`
	Filters     []GetDelegationSubscriptionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The current lifecycle state of the Service Provider.
	State *string `pulumi:"state"`
}

func GetDelegationSubscriptionsOutput(ctx *pulumi.Context, args GetDelegationSubscriptionsOutputArgs, opts ...pulumi.InvokeOption) GetDelegationSubscriptionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDelegationSubscriptionsResultOutput, error) {
			args := v.(GetDelegationSubscriptionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DelegateAccessControl/getDelegationSubscriptions:getDelegationSubscriptions", args, GetDelegationSubscriptionsResultOutput{}, options).(GetDelegationSubscriptionsResultOutput), nil
		}).(GetDelegationSubscriptionsResultOutput)
}

// A collection of arguments for invoking getDelegationSubscriptions.
type GetDelegationSubscriptionsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return Delegation Subscription resources that match the given display name.
	DisplayName pulumi.StringPtrInput                      `pulumi:"displayName"`
	Filters     GetDelegationSubscriptionsFilterArrayInput `pulumi:"filters"`
	// A filter to return only Delegation Subscription resources whose lifecycleState matches the given Delegation Subscription lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDelegationSubscriptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegationSubscriptionsArgs)(nil)).Elem()
}

// A collection of values returned by getDelegationSubscriptions.
type GetDelegationSubscriptionsResultOutput struct{ *pulumi.OutputState }

func (GetDelegationSubscriptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegationSubscriptionsResult)(nil)).Elem()
}

func (o GetDelegationSubscriptionsResultOutput) ToGetDelegationSubscriptionsResultOutput() GetDelegationSubscriptionsResultOutput {
	return o
}

func (o GetDelegationSubscriptionsResultOutput) ToGetDelegationSubscriptionsResultOutputWithContext(ctx context.Context) GetDelegationSubscriptionsResultOutput {
	return o
}

// The OCID of the compartment that contains the Delegation Subscription.
func (o GetDelegationSubscriptionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegationSubscriptionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of delegation_subscription_summary_collection.
func (o GetDelegationSubscriptionsResultOutput) DelegationSubscriptionSummaryCollections() GetDelegationSubscriptionsDelegationSubscriptionSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetDelegationSubscriptionsResult) []GetDelegationSubscriptionsDelegationSubscriptionSummaryCollection {
		return v.DelegationSubscriptionSummaryCollections
	}).(GetDelegationSubscriptionsDelegationSubscriptionSummaryCollectionArrayOutput)
}

// Display name
func (o GetDelegationSubscriptionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDelegationSubscriptionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDelegationSubscriptionsResultOutput) Filters() GetDelegationSubscriptionsFilterArrayOutput {
	return o.ApplyT(func(v GetDelegationSubscriptionsResult) []GetDelegationSubscriptionsFilter { return v.Filters }).(GetDelegationSubscriptionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDelegationSubscriptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegationSubscriptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The current lifecycle state of the Service Provider.
func (o GetDelegationSubscriptionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDelegationSubscriptionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDelegationSubscriptionsResultOutput{})
}
