// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package delegateaccesscontrol

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Service Provider Action resource in Oracle Cloud Infrastructure Delegate Access Control service.
//
// Gets the Service Provider Action associated with the specified Service Provider Action ID.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/delegateaccesscontrol"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := delegateaccesscontrol.GetServiceProviderAction(ctx, &delegateaccesscontrol.GetServiceProviderActionArgs{
//				ServiceProviderActionId: testServiceProviderActionOciDelegateAccessControlServiceProviderAction.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetServiceProviderAction(ctx *pulumi.Context, args *GetServiceProviderActionArgs, opts ...pulumi.InvokeOption) (*GetServiceProviderActionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceProviderActionResult
	err := ctx.Invoke("oci:DelegateAccessControl/getServiceProviderAction:getServiceProviderAction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceProviderAction.
type GetServiceProviderActionArgs struct {
	// Unique Oracle supplied identifier associated with the Service Provider Action.
	ServiceProviderActionId string `pulumi:"serviceProviderActionId"`
}

// A collection of values returned by getServiceProviderAction.
type GetServiceProviderActionResult struct {
	// Name of the infrastructure layer associated with the Service Provider Action.
	Component string `pulumi:"component"`
	// Display Name of the Service Provider Action.
	CustomerDisplayName string `pulumi:"customerDisplayName"`
	// Description of the Service Provider Action in terms of associated risk profile, and characteristics of the operating system commands made available to the support operator under this Service Provider Action.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the property
	Name string `pulumi:"name"`
	// Fine grained properties associated with the Delegation Control.
	Properties []GetServiceProviderActionProperty `pulumi:"properties"`
	// resourceType for which the ServiceProviderAction is applicable
	ResourceType            string `pulumi:"resourceType"`
	ServiceProviderActionId string `pulumi:"serviceProviderActionId"`
	// List of Service Provider Service Types that this Service Provider Action is applicable to.
	ServiceProviderServiceTypes []string `pulumi:"serviceProviderServiceTypes"`
	// The current lifecycle state of the Service Provider Action.
	State string `pulumi:"state"`
}

func GetServiceProviderActionOutput(ctx *pulumi.Context, args GetServiceProviderActionOutputArgs, opts ...pulumi.InvokeOption) GetServiceProviderActionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetServiceProviderActionResultOutput, error) {
			args := v.(GetServiceProviderActionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DelegateAccessControl/getServiceProviderAction:getServiceProviderAction", args, GetServiceProviderActionResultOutput{}, options).(GetServiceProviderActionResultOutput), nil
		}).(GetServiceProviderActionResultOutput)
}

// A collection of arguments for invoking getServiceProviderAction.
type GetServiceProviderActionOutputArgs struct {
	// Unique Oracle supplied identifier associated with the Service Provider Action.
	ServiceProviderActionId pulumi.StringInput `pulumi:"serviceProviderActionId"`
}

func (GetServiceProviderActionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceProviderActionArgs)(nil)).Elem()
}

// A collection of values returned by getServiceProviderAction.
type GetServiceProviderActionResultOutput struct{ *pulumi.OutputState }

func (GetServiceProviderActionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceProviderActionResult)(nil)).Elem()
}

func (o GetServiceProviderActionResultOutput) ToGetServiceProviderActionResultOutput() GetServiceProviderActionResultOutput {
	return o
}

func (o GetServiceProviderActionResultOutput) ToGetServiceProviderActionResultOutputWithContext(ctx context.Context) GetServiceProviderActionResultOutput {
	return o
}

// Name of the infrastructure layer associated with the Service Provider Action.
func (o GetServiceProviderActionResultOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProviderActionResult) string { return v.Component }).(pulumi.StringOutput)
}

// Display Name of the Service Provider Action.
func (o GetServiceProviderActionResultOutput) CustomerDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProviderActionResult) string { return v.CustomerDisplayName }).(pulumi.StringOutput)
}

// Description of the Service Provider Action in terms of associated risk profile, and characteristics of the operating system commands made available to the support operator under this Service Provider Action.
func (o GetServiceProviderActionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProviderActionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServiceProviderActionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProviderActionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the property
func (o GetServiceProviderActionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProviderActionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Fine grained properties associated with the Delegation Control.
func (o GetServiceProviderActionResultOutput) Properties() GetServiceProviderActionPropertyArrayOutput {
	return o.ApplyT(func(v GetServiceProviderActionResult) []GetServiceProviderActionProperty { return v.Properties }).(GetServiceProviderActionPropertyArrayOutput)
}

// resourceType for which the ServiceProviderAction is applicable
func (o GetServiceProviderActionResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProviderActionResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o GetServiceProviderActionResultOutput) ServiceProviderActionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProviderActionResult) string { return v.ServiceProviderActionId }).(pulumi.StringOutput)
}

// List of Service Provider Service Types that this Service Provider Action is applicable to.
func (o GetServiceProviderActionResultOutput) ServiceProviderServiceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceProviderActionResult) []string { return v.ServiceProviderServiceTypes }).(pulumi.StringArrayOutput)
}

// The current lifecycle state of the Service Provider Action.
func (o GetServiceProviderActionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProviderActionResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServiceProviderActionResultOutput{})
}
