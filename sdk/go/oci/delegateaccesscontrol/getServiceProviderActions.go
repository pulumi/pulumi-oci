// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package delegateaccesscontrol

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Service Provider Actions in Oracle Cloud Infrastructure Delegate Access Control service.
//
// Lists all the ServiceProviderActions available in the system.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DelegateAccessControl"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DelegateAccessControl.GetServiceProviderActions(ctx, &delegateaccesscontrol.GetServiceProviderActionsArgs{
//				CompartmentId:               compartmentId,
//				Name:                        pulumi.StringRef(serviceProviderActionName),
//				ResourceType:                pulumi.StringRef(serviceProviderActionResourceType),
//				ServiceProviderServiceTypes: serviceProviderActionServiceProviderServiceType,
//				State:                       pulumi.StringRef(serviceProviderActionState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetServiceProviderActions(ctx *pulumi.Context, args *GetServiceProviderActionsArgs, opts ...pulumi.InvokeOption) (*GetServiceProviderActionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceProviderActionsResult
	err := ctx.Invoke("oci:DelegateAccessControl/getServiceProviderActions:getServiceProviderActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceProviderActions.
type GetServiceProviderActionsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string                            `pulumi:"compartmentId"`
	Filters       []GetServiceProviderActionsFilter `pulumi:"filters"`
	// A filter to return only resources that match the entire name given.
	Name *string `pulumi:"name"`
	// A filter to return only resources that match the given resource type.
	ResourceType *string `pulumi:"resourceType"`
	// A filter to return only resources that match the given Service Provider service type.
	ServiceProviderServiceTypes []string `pulumi:"serviceProviderServiceTypes"`
	// A filter to return only resources whose lifecycleState matches the given Service Provider Action lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getServiceProviderActions.
type GetServiceProviderActionsResult struct {
	CompartmentId string                            `pulumi:"compartmentId"`
	Filters       []GetServiceProviderActionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the property
	Name *string `pulumi:"name"`
	// resourceType for which the ServiceProviderAction is applicable
	ResourceType *string `pulumi:"resourceType"`
	// The list of service_provider_action_summary_collection.
	ServiceProviderActionSummaryCollections []GetServiceProviderActionsServiceProviderActionSummaryCollection `pulumi:"serviceProviderActionSummaryCollections"`
	ServiceProviderServiceTypes             []string                                                          `pulumi:"serviceProviderServiceTypes"`
	// The current lifecycle state of the Service Provider Action.
	State *string `pulumi:"state"`
}

func GetServiceProviderActionsOutput(ctx *pulumi.Context, args GetServiceProviderActionsOutputArgs, opts ...pulumi.InvokeOption) GetServiceProviderActionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServiceProviderActionsResult, error) {
			args := v.(GetServiceProviderActionsArgs)
			r, err := GetServiceProviderActions(ctx, &args, opts...)
			var s GetServiceProviderActionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetServiceProviderActionsResultOutput)
}

// A collection of arguments for invoking getServiceProviderActions.
type GetServiceProviderActionsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput                        `pulumi:"compartmentId"`
	Filters       GetServiceProviderActionsFilterArrayInput `pulumi:"filters"`
	// A filter to return only resources that match the entire name given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only resources that match the given resource type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// A filter to return only resources that match the given Service Provider service type.
	ServiceProviderServiceTypes pulumi.StringArrayInput `pulumi:"serviceProviderServiceTypes"`
	// A filter to return only resources whose lifecycleState matches the given Service Provider Action lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetServiceProviderActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceProviderActionsArgs)(nil)).Elem()
}

// A collection of values returned by getServiceProviderActions.
type GetServiceProviderActionsResultOutput struct{ *pulumi.OutputState }

func (GetServiceProviderActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceProviderActionsResult)(nil)).Elem()
}

func (o GetServiceProviderActionsResultOutput) ToGetServiceProviderActionsResultOutput() GetServiceProviderActionsResultOutput {
	return o
}

func (o GetServiceProviderActionsResultOutput) ToGetServiceProviderActionsResultOutputWithContext(ctx context.Context) GetServiceProviderActionsResultOutput {
	return o
}

func (o GetServiceProviderActionsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProviderActionsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetServiceProviderActionsResultOutput) Filters() GetServiceProviderActionsFilterArrayOutput {
	return o.ApplyT(func(v GetServiceProviderActionsResult) []GetServiceProviderActionsFilter { return v.Filters }).(GetServiceProviderActionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServiceProviderActionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProviderActionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the property
func (o GetServiceProviderActionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceProviderActionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// resourceType for which the ServiceProviderAction is applicable
func (o GetServiceProviderActionsResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceProviderActionsResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The list of service_provider_action_summary_collection.
func (o GetServiceProviderActionsResultOutput) ServiceProviderActionSummaryCollections() GetServiceProviderActionsServiceProviderActionSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetServiceProviderActionsResult) []GetServiceProviderActionsServiceProviderActionSummaryCollection {
		return v.ServiceProviderActionSummaryCollections
	}).(GetServiceProviderActionsServiceProviderActionSummaryCollectionArrayOutput)
}

func (o GetServiceProviderActionsResultOutput) ServiceProviderServiceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceProviderActionsResult) []string { return v.ServiceProviderServiceTypes }).(pulumi.StringArrayOutput)
}

// The current lifecycle state of the Service Provider Action.
func (o GetServiceProviderActionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceProviderActionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServiceProviderActionsResultOutput{})
}
