// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package delegateaccesscontrol

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Service Providers in Oracle Cloud Infrastructure Delegate Access Control service.
//
// Lists the Service Providers.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DelegateAccessControl"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DelegateAccessControl.GetServiceProviders(ctx, &delegateaccesscontrol.GetServiceProvidersArgs{
//				CompartmentId:         compartmentId,
//				Name:                  pulumi.StringRef(serviceProviderName),
//				ServiceProviderType:   pulumi.StringRef(serviceProviderServiceProviderType),
//				State:                 pulumi.StringRef(serviceProviderState),
//				SupportedResourceType: pulumi.StringRef(serviceProviderSupportedResourceType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetServiceProviders(ctx *pulumi.Context, args *GetServiceProvidersArgs, opts ...pulumi.InvokeOption) (*GetServiceProvidersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceProvidersResult
	err := ctx.Invoke("oci:DelegateAccessControl/getServiceProviders:getServiceProviders", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceProviders.
type GetServiceProvidersArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string                      `pulumi:"compartmentId"`
	Filters       []GetServiceProvidersFilter `pulumi:"filters"`
	// A filter to return Service Provider resources that match the given name.
	Name *string `pulumi:"name"`
	// A filter to return only Service Provider resources whose provider type matches the given provider type.
	ServiceProviderType *string `pulumi:"serviceProviderType"`
	// A filter to return only Service Provider resources whose lifecycleState matches the given Service Provider lifecycle state.
	State *string `pulumi:"state"`
	// A filter to return only Service Provider resources whose supported resource type matches the given resource type.
	SupportedResourceType *string `pulumi:"supportedResourceType"`
}

// A collection of values returned by getServiceProviders.
type GetServiceProvidersResult struct {
	// The OCID of the compartment that contains the Delegation Control.
	CompartmentId string                      `pulumi:"compartmentId"`
	Filters       []GetServiceProvidersFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique name of the Service Provider.
	Name *string `pulumi:"name"`
	// The list of service_provider_summary_collection.
	ServiceProviderSummaryCollections []GetServiceProvidersServiceProviderSummaryCollection `pulumi:"serviceProviderSummaryCollections"`
	// Service Provider type.
	ServiceProviderType *string `pulumi:"serviceProviderType"`
	// The current lifecycle state of the Service Provider.
	State                 *string `pulumi:"state"`
	SupportedResourceType *string `pulumi:"supportedResourceType"`
}

func GetServiceProvidersOutput(ctx *pulumi.Context, args GetServiceProvidersOutputArgs, opts ...pulumi.InvokeOption) GetServiceProvidersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServiceProvidersResultOutput, error) {
			args := v.(GetServiceProvidersArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetServiceProvidersResult
			secret, err := ctx.InvokePackageRaw("oci:DelegateAccessControl/getServiceProviders:getServiceProviders", args, &rv, "", opts...)
			if err != nil {
				return GetServiceProvidersResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetServiceProvidersResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetServiceProvidersResultOutput), nil
			}
			return output, nil
		}).(GetServiceProvidersResultOutput)
}

// A collection of arguments for invoking getServiceProviders.
type GetServiceProvidersOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput                  `pulumi:"compartmentId"`
	Filters       GetServiceProvidersFilterArrayInput `pulumi:"filters"`
	// A filter to return Service Provider resources that match the given name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A filter to return only Service Provider resources whose provider type matches the given provider type.
	ServiceProviderType pulumi.StringPtrInput `pulumi:"serviceProviderType"`
	// A filter to return only Service Provider resources whose lifecycleState matches the given Service Provider lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return only Service Provider resources whose supported resource type matches the given resource type.
	SupportedResourceType pulumi.StringPtrInput `pulumi:"supportedResourceType"`
}

func (GetServiceProvidersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceProvidersArgs)(nil)).Elem()
}

// A collection of values returned by getServiceProviders.
type GetServiceProvidersResultOutput struct{ *pulumi.OutputState }

func (GetServiceProvidersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceProvidersResult)(nil)).Elem()
}

func (o GetServiceProvidersResultOutput) ToGetServiceProvidersResultOutput() GetServiceProvidersResultOutput {
	return o
}

func (o GetServiceProvidersResultOutput) ToGetServiceProvidersResultOutputWithContext(ctx context.Context) GetServiceProvidersResultOutput {
	return o
}

// The OCID of the compartment that contains the Delegation Control.
func (o GetServiceProvidersResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProvidersResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetServiceProvidersResultOutput) Filters() GetServiceProvidersFilterArrayOutput {
	return o.ApplyT(func(v GetServiceProvidersResult) []GetServiceProvidersFilter { return v.Filters }).(GetServiceProvidersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServiceProvidersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceProvidersResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique name of the Service Provider.
func (o GetServiceProvidersResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceProvidersResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of service_provider_summary_collection.
func (o GetServiceProvidersResultOutput) ServiceProviderSummaryCollections() GetServiceProvidersServiceProviderSummaryCollectionArrayOutput {
	return o.ApplyT(func(v GetServiceProvidersResult) []GetServiceProvidersServiceProviderSummaryCollection {
		return v.ServiceProviderSummaryCollections
	}).(GetServiceProvidersServiceProviderSummaryCollectionArrayOutput)
}

// Service Provider type.
func (o GetServiceProvidersResultOutput) ServiceProviderType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceProvidersResult) *string { return v.ServiceProviderType }).(pulumi.StringPtrOutput)
}

// The current lifecycle state of the Service Provider.
func (o GetServiceProvidersResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceProvidersResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetServiceProvidersResultOutput) SupportedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceProvidersResult) *string { return v.SupportedResourceType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServiceProvidersResultOutput{})
}
