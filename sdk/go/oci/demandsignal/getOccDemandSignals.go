// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package demandsignal

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Occ Demand Signals in Oracle Cloud Infrastructure Demand Signal service.
//
// Gets a list of OccDemandSignals.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DemandSignal"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DemandSignal.GetOccDemandSignals(ctx, &demandsignal.GetOccDemandSignalsArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(occDemandSignalDisplayName),
//				Id:            pulumi.StringRef(occDemandSignalId),
//				State:         pulumi.StringRef(occDemandSignalState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOccDemandSignals(ctx *pulumi.Context, args *GetOccDemandSignalsArgs, opts ...pulumi.InvokeOption) (*GetOccDemandSignalsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOccDemandSignalsResult
	err := ctx.Invoke("oci:DemandSignal/getOccDemandSignals:getOccDemandSignals", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOccDemandSignals.
type GetOccDemandSignalsArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetOccDemandSignalsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OccDemandSignal.
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getOccDemandSignals.
type GetOccDemandSignalsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetOccDemandSignalsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OccDemandSignal.
	Id *string `pulumi:"id"`
	// The list of occ_demand_signal_collection.
	OccDemandSignalCollections []GetOccDemandSignalsOccDemandSignalCollection `pulumi:"occDemandSignalCollections"`
	// The current state of the OccDemandSignal.
	State *string `pulumi:"state"`
}

func GetOccDemandSignalsOutput(ctx *pulumi.Context, args GetOccDemandSignalsOutputArgs, opts ...pulumi.InvokeOption) GetOccDemandSignalsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOccDemandSignalsResult, error) {
			args := v.(GetOccDemandSignalsArgs)
			r, err := GetOccDemandSignals(ctx, &args, opts...)
			var s GetOccDemandSignalsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOccDemandSignalsResultOutput)
}

// A collection of arguments for invoking getOccDemandSignals.
type GetOccDemandSignalsOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringPtrInput               `pulumi:"displayName"`
	Filters     GetOccDemandSignalsFilterArrayInput `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OccDemandSignal.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetOccDemandSignalsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsArgs)(nil)).Elem()
}

// A collection of values returned by getOccDemandSignals.
type GetOccDemandSignalsResultOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsResult)(nil)).Elem()
}

func (o GetOccDemandSignalsResultOutput) ToGetOccDemandSignalsResultOutput() GetOccDemandSignalsResultOutput {
	return o
}

func (o GetOccDemandSignalsResultOutput) ToGetOccDemandSignalsResultOutputWithContext(ctx context.Context) GetOccDemandSignalsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetOccDemandSignalsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccDemandSignalsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.
func (o GetOccDemandSignalsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccDemandSignalsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetOccDemandSignalsResultOutput) Filters() GetOccDemandSignalsFilterArrayOutput {
	return o.ApplyT(func(v GetOccDemandSignalsResult) []GetOccDemandSignalsFilter { return v.Filters }).(GetOccDemandSignalsFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OccDemandSignal.
func (o GetOccDemandSignalsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccDemandSignalsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of occ_demand_signal_collection.
func (o GetOccDemandSignalsResultOutput) OccDemandSignalCollections() GetOccDemandSignalsOccDemandSignalCollectionArrayOutput {
	return o.ApplyT(func(v GetOccDemandSignalsResult) []GetOccDemandSignalsOccDemandSignalCollection {
		return v.OccDemandSignalCollections
	}).(GetOccDemandSignalsOccDemandSignalCollectionArrayOutput)
}

// The current state of the OccDemandSignal.
func (o GetOccDemandSignalsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetOccDemandSignalsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOccDemandSignalsResultOutput{})
}
