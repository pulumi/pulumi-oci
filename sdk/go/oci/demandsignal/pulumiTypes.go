// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package demandsignal

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type OccDemandSignalOccDemandSignal struct {
	// The name of the resource for the data.
	ResourceType string `pulumi:"resourceType"`
	// The units of the data.
	Units string `pulumi:"units"`
	// The values of forecast.
	Values []OccDemandSignalOccDemandSignalValue `pulumi:"values"`
}

// OccDemandSignalOccDemandSignalInput is an input type that accepts OccDemandSignalOccDemandSignalArgs and OccDemandSignalOccDemandSignalOutput values.
// You can construct a concrete instance of `OccDemandSignalOccDemandSignalInput` via:
//
//	OccDemandSignalOccDemandSignalArgs{...}
type OccDemandSignalOccDemandSignalInput interface {
	pulumi.Input

	ToOccDemandSignalOccDemandSignalOutput() OccDemandSignalOccDemandSignalOutput
	ToOccDemandSignalOccDemandSignalOutputWithContext(context.Context) OccDemandSignalOccDemandSignalOutput
}

type OccDemandSignalOccDemandSignalArgs struct {
	// The name of the resource for the data.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The units of the data.
	Units pulumi.StringInput `pulumi:"units"`
	// The values of forecast.
	Values OccDemandSignalOccDemandSignalValueArrayInput `pulumi:"values"`
}

func (OccDemandSignalOccDemandSignalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OccDemandSignalOccDemandSignal)(nil)).Elem()
}

func (i OccDemandSignalOccDemandSignalArgs) ToOccDemandSignalOccDemandSignalOutput() OccDemandSignalOccDemandSignalOutput {
	return i.ToOccDemandSignalOccDemandSignalOutputWithContext(context.Background())
}

func (i OccDemandSignalOccDemandSignalArgs) ToOccDemandSignalOccDemandSignalOutputWithContext(ctx context.Context) OccDemandSignalOccDemandSignalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccDemandSignalOccDemandSignalOutput)
}

// OccDemandSignalOccDemandSignalArrayInput is an input type that accepts OccDemandSignalOccDemandSignalArray and OccDemandSignalOccDemandSignalArrayOutput values.
// You can construct a concrete instance of `OccDemandSignalOccDemandSignalArrayInput` via:
//
//	OccDemandSignalOccDemandSignalArray{ OccDemandSignalOccDemandSignalArgs{...} }
type OccDemandSignalOccDemandSignalArrayInput interface {
	pulumi.Input

	ToOccDemandSignalOccDemandSignalArrayOutput() OccDemandSignalOccDemandSignalArrayOutput
	ToOccDemandSignalOccDemandSignalArrayOutputWithContext(context.Context) OccDemandSignalOccDemandSignalArrayOutput
}

type OccDemandSignalOccDemandSignalArray []OccDemandSignalOccDemandSignalInput

func (OccDemandSignalOccDemandSignalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OccDemandSignalOccDemandSignal)(nil)).Elem()
}

func (i OccDemandSignalOccDemandSignalArray) ToOccDemandSignalOccDemandSignalArrayOutput() OccDemandSignalOccDemandSignalArrayOutput {
	return i.ToOccDemandSignalOccDemandSignalArrayOutputWithContext(context.Background())
}

func (i OccDemandSignalOccDemandSignalArray) ToOccDemandSignalOccDemandSignalArrayOutputWithContext(ctx context.Context) OccDemandSignalOccDemandSignalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccDemandSignalOccDemandSignalArrayOutput)
}

type OccDemandSignalOccDemandSignalOutput struct{ *pulumi.OutputState }

func (OccDemandSignalOccDemandSignalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OccDemandSignalOccDemandSignal)(nil)).Elem()
}

func (o OccDemandSignalOccDemandSignalOutput) ToOccDemandSignalOccDemandSignalOutput() OccDemandSignalOccDemandSignalOutput {
	return o
}

func (o OccDemandSignalOccDemandSignalOutput) ToOccDemandSignalOccDemandSignalOutputWithContext(ctx context.Context) OccDemandSignalOccDemandSignalOutput {
	return o
}

// The name of the resource for the data.
func (o OccDemandSignalOccDemandSignalOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v OccDemandSignalOccDemandSignal) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The units of the data.
func (o OccDemandSignalOccDemandSignalOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v OccDemandSignalOccDemandSignal) string { return v.Units }).(pulumi.StringOutput)
}

// The values of forecast.
func (o OccDemandSignalOccDemandSignalOutput) Values() OccDemandSignalOccDemandSignalValueArrayOutput {
	return o.ApplyT(func(v OccDemandSignalOccDemandSignal) []OccDemandSignalOccDemandSignalValue { return v.Values }).(OccDemandSignalOccDemandSignalValueArrayOutput)
}

type OccDemandSignalOccDemandSignalArrayOutput struct{ *pulumi.OutputState }

func (OccDemandSignalOccDemandSignalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OccDemandSignalOccDemandSignal)(nil)).Elem()
}

func (o OccDemandSignalOccDemandSignalArrayOutput) ToOccDemandSignalOccDemandSignalArrayOutput() OccDemandSignalOccDemandSignalArrayOutput {
	return o
}

func (o OccDemandSignalOccDemandSignalArrayOutput) ToOccDemandSignalOccDemandSignalArrayOutputWithContext(ctx context.Context) OccDemandSignalOccDemandSignalArrayOutput {
	return o
}

func (o OccDemandSignalOccDemandSignalArrayOutput) Index(i pulumi.IntInput) OccDemandSignalOccDemandSignalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OccDemandSignalOccDemandSignal {
		return vs[0].([]OccDemandSignalOccDemandSignal)[vs[1].(int)]
	}).(OccDemandSignalOccDemandSignalOutput)
}

type OccDemandSignalOccDemandSignalValue struct {
	// Space provided for users to make comments regarding the value.
	Comments *string `pulumi:"comments"`
	// The date of the Demand Signal Value.
	TimeExpected string `pulumi:"timeExpected"`
	// The Demand Signal Value.
	Value float64 `pulumi:"value"`
}

// OccDemandSignalOccDemandSignalValueInput is an input type that accepts OccDemandSignalOccDemandSignalValueArgs and OccDemandSignalOccDemandSignalValueOutput values.
// You can construct a concrete instance of `OccDemandSignalOccDemandSignalValueInput` via:
//
//	OccDemandSignalOccDemandSignalValueArgs{...}
type OccDemandSignalOccDemandSignalValueInput interface {
	pulumi.Input

	ToOccDemandSignalOccDemandSignalValueOutput() OccDemandSignalOccDemandSignalValueOutput
	ToOccDemandSignalOccDemandSignalValueOutputWithContext(context.Context) OccDemandSignalOccDemandSignalValueOutput
}

type OccDemandSignalOccDemandSignalValueArgs struct {
	// Space provided for users to make comments regarding the value.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// The date of the Demand Signal Value.
	TimeExpected pulumi.StringInput `pulumi:"timeExpected"`
	// The Demand Signal Value.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (OccDemandSignalOccDemandSignalValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OccDemandSignalOccDemandSignalValue)(nil)).Elem()
}

func (i OccDemandSignalOccDemandSignalValueArgs) ToOccDemandSignalOccDemandSignalValueOutput() OccDemandSignalOccDemandSignalValueOutput {
	return i.ToOccDemandSignalOccDemandSignalValueOutputWithContext(context.Background())
}

func (i OccDemandSignalOccDemandSignalValueArgs) ToOccDemandSignalOccDemandSignalValueOutputWithContext(ctx context.Context) OccDemandSignalOccDemandSignalValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccDemandSignalOccDemandSignalValueOutput)
}

// OccDemandSignalOccDemandSignalValueArrayInput is an input type that accepts OccDemandSignalOccDemandSignalValueArray and OccDemandSignalOccDemandSignalValueArrayOutput values.
// You can construct a concrete instance of `OccDemandSignalOccDemandSignalValueArrayInput` via:
//
//	OccDemandSignalOccDemandSignalValueArray{ OccDemandSignalOccDemandSignalValueArgs{...} }
type OccDemandSignalOccDemandSignalValueArrayInput interface {
	pulumi.Input

	ToOccDemandSignalOccDemandSignalValueArrayOutput() OccDemandSignalOccDemandSignalValueArrayOutput
	ToOccDemandSignalOccDemandSignalValueArrayOutputWithContext(context.Context) OccDemandSignalOccDemandSignalValueArrayOutput
}

type OccDemandSignalOccDemandSignalValueArray []OccDemandSignalOccDemandSignalValueInput

func (OccDemandSignalOccDemandSignalValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OccDemandSignalOccDemandSignalValue)(nil)).Elem()
}

func (i OccDemandSignalOccDemandSignalValueArray) ToOccDemandSignalOccDemandSignalValueArrayOutput() OccDemandSignalOccDemandSignalValueArrayOutput {
	return i.ToOccDemandSignalOccDemandSignalValueArrayOutputWithContext(context.Background())
}

func (i OccDemandSignalOccDemandSignalValueArray) ToOccDemandSignalOccDemandSignalValueArrayOutputWithContext(ctx context.Context) OccDemandSignalOccDemandSignalValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccDemandSignalOccDemandSignalValueArrayOutput)
}

type OccDemandSignalOccDemandSignalValueOutput struct{ *pulumi.OutputState }

func (OccDemandSignalOccDemandSignalValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OccDemandSignalOccDemandSignalValue)(nil)).Elem()
}

func (o OccDemandSignalOccDemandSignalValueOutput) ToOccDemandSignalOccDemandSignalValueOutput() OccDemandSignalOccDemandSignalValueOutput {
	return o
}

func (o OccDemandSignalOccDemandSignalValueOutput) ToOccDemandSignalOccDemandSignalValueOutputWithContext(ctx context.Context) OccDemandSignalOccDemandSignalValueOutput {
	return o
}

// Space provided for users to make comments regarding the value.
func (o OccDemandSignalOccDemandSignalValueOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OccDemandSignalOccDemandSignalValue) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// The date of the Demand Signal Value.
func (o OccDemandSignalOccDemandSignalValueOutput) TimeExpected() pulumi.StringOutput {
	return o.ApplyT(func(v OccDemandSignalOccDemandSignalValue) string { return v.TimeExpected }).(pulumi.StringOutput)
}

// The Demand Signal Value.
func (o OccDemandSignalOccDemandSignalValueOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v OccDemandSignalOccDemandSignalValue) float64 { return v.Value }).(pulumi.Float64Output)
}

type OccDemandSignalOccDemandSignalValueArrayOutput struct{ *pulumi.OutputState }

func (OccDemandSignalOccDemandSignalValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OccDemandSignalOccDemandSignalValue)(nil)).Elem()
}

func (o OccDemandSignalOccDemandSignalValueArrayOutput) ToOccDemandSignalOccDemandSignalValueArrayOutput() OccDemandSignalOccDemandSignalValueArrayOutput {
	return o
}

func (o OccDemandSignalOccDemandSignalValueArrayOutput) ToOccDemandSignalOccDemandSignalValueArrayOutputWithContext(ctx context.Context) OccDemandSignalOccDemandSignalValueArrayOutput {
	return o
}

func (o OccDemandSignalOccDemandSignalValueArrayOutput) Index(i pulumi.IntInput) OccDemandSignalOccDemandSignalValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OccDemandSignalOccDemandSignalValue {
		return vs[0].([]OccDemandSignalOccDemandSignalValue)[vs[1].(int)]
	}).(OccDemandSignalOccDemandSignalValueOutput)
}

type OccDemandSignalPatchOperation struct {
	// (Updatable)
	From string `pulumi:"from"`
	// (Updatable) The operation can be one of these values: `INSERT`, `INSERT_MULTIPLE`, `MERGE`, `MOVE`, `PROHIBIT`, `REMOVE`, `REPLACE`, `REQUIRE`
	Operation string `pulumi:"operation"`
	// (Updatable)
	Position *string `pulumi:"position"`
	// (Updatable)
	SelectedItem *string `pulumi:"selectedItem"`
	// (Updatable)
	Selection string `pulumi:"selection"`
	// (Updatable)
	Value map[string]interface{} `pulumi:"value"`
}

// OccDemandSignalPatchOperationInput is an input type that accepts OccDemandSignalPatchOperationArgs and OccDemandSignalPatchOperationOutput values.
// You can construct a concrete instance of `OccDemandSignalPatchOperationInput` via:
//
//	OccDemandSignalPatchOperationArgs{...}
type OccDemandSignalPatchOperationInput interface {
	pulumi.Input

	ToOccDemandSignalPatchOperationOutput() OccDemandSignalPatchOperationOutput
	ToOccDemandSignalPatchOperationOutputWithContext(context.Context) OccDemandSignalPatchOperationOutput
}

type OccDemandSignalPatchOperationArgs struct {
	// (Updatable)
	From pulumi.StringInput `pulumi:"from"`
	// (Updatable) The operation can be one of these values: `INSERT`, `INSERT_MULTIPLE`, `MERGE`, `MOVE`, `PROHIBIT`, `REMOVE`, `REPLACE`, `REQUIRE`
	Operation pulumi.StringInput `pulumi:"operation"`
	// (Updatable)
	Position pulumi.StringPtrInput `pulumi:"position"`
	// (Updatable)
	SelectedItem pulumi.StringPtrInput `pulumi:"selectedItem"`
	// (Updatable)
	Selection pulumi.StringInput `pulumi:"selection"`
	// (Updatable)
	Value pulumi.MapInput `pulumi:"value"`
}

func (OccDemandSignalPatchOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OccDemandSignalPatchOperation)(nil)).Elem()
}

func (i OccDemandSignalPatchOperationArgs) ToOccDemandSignalPatchOperationOutput() OccDemandSignalPatchOperationOutput {
	return i.ToOccDemandSignalPatchOperationOutputWithContext(context.Background())
}

func (i OccDemandSignalPatchOperationArgs) ToOccDemandSignalPatchOperationOutputWithContext(ctx context.Context) OccDemandSignalPatchOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccDemandSignalPatchOperationOutput)
}

// OccDemandSignalPatchOperationArrayInput is an input type that accepts OccDemandSignalPatchOperationArray and OccDemandSignalPatchOperationArrayOutput values.
// You can construct a concrete instance of `OccDemandSignalPatchOperationArrayInput` via:
//
//	OccDemandSignalPatchOperationArray{ OccDemandSignalPatchOperationArgs{...} }
type OccDemandSignalPatchOperationArrayInput interface {
	pulumi.Input

	ToOccDemandSignalPatchOperationArrayOutput() OccDemandSignalPatchOperationArrayOutput
	ToOccDemandSignalPatchOperationArrayOutputWithContext(context.Context) OccDemandSignalPatchOperationArrayOutput
}

type OccDemandSignalPatchOperationArray []OccDemandSignalPatchOperationInput

func (OccDemandSignalPatchOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OccDemandSignalPatchOperation)(nil)).Elem()
}

func (i OccDemandSignalPatchOperationArray) ToOccDemandSignalPatchOperationArrayOutput() OccDemandSignalPatchOperationArrayOutput {
	return i.ToOccDemandSignalPatchOperationArrayOutputWithContext(context.Background())
}

func (i OccDemandSignalPatchOperationArray) ToOccDemandSignalPatchOperationArrayOutputWithContext(ctx context.Context) OccDemandSignalPatchOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OccDemandSignalPatchOperationArrayOutput)
}

type OccDemandSignalPatchOperationOutput struct{ *pulumi.OutputState }

func (OccDemandSignalPatchOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OccDemandSignalPatchOperation)(nil)).Elem()
}

func (o OccDemandSignalPatchOperationOutput) ToOccDemandSignalPatchOperationOutput() OccDemandSignalPatchOperationOutput {
	return o
}

func (o OccDemandSignalPatchOperationOutput) ToOccDemandSignalPatchOperationOutputWithContext(ctx context.Context) OccDemandSignalPatchOperationOutput {
	return o
}

// (Updatable)
func (o OccDemandSignalPatchOperationOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v OccDemandSignalPatchOperation) string { return v.From }).(pulumi.StringOutput)
}

// (Updatable) The operation can be one of these values: `INSERT`, `INSERT_MULTIPLE`, `MERGE`, `MOVE`, `PROHIBIT`, `REMOVE`, `REPLACE`, `REQUIRE`
func (o OccDemandSignalPatchOperationOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v OccDemandSignalPatchOperation) string { return v.Operation }).(pulumi.StringOutput)
}

// (Updatable)
func (o OccDemandSignalPatchOperationOutput) Position() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OccDemandSignalPatchOperation) *string { return v.Position }).(pulumi.StringPtrOutput)
}

// (Updatable)
func (o OccDemandSignalPatchOperationOutput) SelectedItem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OccDemandSignalPatchOperation) *string { return v.SelectedItem }).(pulumi.StringPtrOutput)
}

// (Updatable)
func (o OccDemandSignalPatchOperationOutput) Selection() pulumi.StringOutput {
	return o.ApplyT(func(v OccDemandSignalPatchOperation) string { return v.Selection }).(pulumi.StringOutput)
}

// (Updatable)
func (o OccDemandSignalPatchOperationOutput) Value() pulumi.MapOutput {
	return o.ApplyT(func(v OccDemandSignalPatchOperation) map[string]interface{} { return v.Value }).(pulumi.MapOutput)
}

type OccDemandSignalPatchOperationArrayOutput struct{ *pulumi.OutputState }

func (OccDemandSignalPatchOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OccDemandSignalPatchOperation)(nil)).Elem()
}

func (o OccDemandSignalPatchOperationArrayOutput) ToOccDemandSignalPatchOperationArrayOutput() OccDemandSignalPatchOperationArrayOutput {
	return o
}

func (o OccDemandSignalPatchOperationArrayOutput) ToOccDemandSignalPatchOperationArrayOutputWithContext(ctx context.Context) OccDemandSignalPatchOperationArrayOutput {
	return o
}

func (o OccDemandSignalPatchOperationArrayOutput) Index(i pulumi.IntInput) OccDemandSignalPatchOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OccDemandSignalPatchOperation {
		return vs[0].([]OccDemandSignalPatchOperation)[vs[1].(int)]
	}).(OccDemandSignalPatchOperationOutput)
}

type GetOccDemandSignalOccDemandSignal struct {
	// The name of the resource for the data.
	ResourceType string `pulumi:"resourceType"`
	// The units of the data.
	Units string `pulumi:"units"`
	// The values of forecast.
	Values []GetOccDemandSignalOccDemandSignalValue `pulumi:"values"`
}

// GetOccDemandSignalOccDemandSignalInput is an input type that accepts GetOccDemandSignalOccDemandSignalArgs and GetOccDemandSignalOccDemandSignalOutput values.
// You can construct a concrete instance of `GetOccDemandSignalOccDemandSignalInput` via:
//
//	GetOccDemandSignalOccDemandSignalArgs{...}
type GetOccDemandSignalOccDemandSignalInput interface {
	pulumi.Input

	ToGetOccDemandSignalOccDemandSignalOutput() GetOccDemandSignalOccDemandSignalOutput
	ToGetOccDemandSignalOccDemandSignalOutputWithContext(context.Context) GetOccDemandSignalOccDemandSignalOutput
}

type GetOccDemandSignalOccDemandSignalArgs struct {
	// The name of the resource for the data.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The units of the data.
	Units pulumi.StringInput `pulumi:"units"`
	// The values of forecast.
	Values GetOccDemandSignalOccDemandSignalValueArrayInput `pulumi:"values"`
}

func (GetOccDemandSignalOccDemandSignalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalOccDemandSignal)(nil)).Elem()
}

func (i GetOccDemandSignalOccDemandSignalArgs) ToGetOccDemandSignalOccDemandSignalOutput() GetOccDemandSignalOccDemandSignalOutput {
	return i.ToGetOccDemandSignalOccDemandSignalOutputWithContext(context.Background())
}

func (i GetOccDemandSignalOccDemandSignalArgs) ToGetOccDemandSignalOccDemandSignalOutputWithContext(ctx context.Context) GetOccDemandSignalOccDemandSignalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalOccDemandSignalOutput)
}

// GetOccDemandSignalOccDemandSignalArrayInput is an input type that accepts GetOccDemandSignalOccDemandSignalArray and GetOccDemandSignalOccDemandSignalArrayOutput values.
// You can construct a concrete instance of `GetOccDemandSignalOccDemandSignalArrayInput` via:
//
//	GetOccDemandSignalOccDemandSignalArray{ GetOccDemandSignalOccDemandSignalArgs{...} }
type GetOccDemandSignalOccDemandSignalArrayInput interface {
	pulumi.Input

	ToGetOccDemandSignalOccDemandSignalArrayOutput() GetOccDemandSignalOccDemandSignalArrayOutput
	ToGetOccDemandSignalOccDemandSignalArrayOutputWithContext(context.Context) GetOccDemandSignalOccDemandSignalArrayOutput
}

type GetOccDemandSignalOccDemandSignalArray []GetOccDemandSignalOccDemandSignalInput

func (GetOccDemandSignalOccDemandSignalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalOccDemandSignal)(nil)).Elem()
}

func (i GetOccDemandSignalOccDemandSignalArray) ToGetOccDemandSignalOccDemandSignalArrayOutput() GetOccDemandSignalOccDemandSignalArrayOutput {
	return i.ToGetOccDemandSignalOccDemandSignalArrayOutputWithContext(context.Background())
}

func (i GetOccDemandSignalOccDemandSignalArray) ToGetOccDemandSignalOccDemandSignalArrayOutputWithContext(ctx context.Context) GetOccDemandSignalOccDemandSignalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalOccDemandSignalArrayOutput)
}

type GetOccDemandSignalOccDemandSignalOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalOccDemandSignalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalOccDemandSignal)(nil)).Elem()
}

func (o GetOccDemandSignalOccDemandSignalOutput) ToGetOccDemandSignalOccDemandSignalOutput() GetOccDemandSignalOccDemandSignalOutput {
	return o
}

func (o GetOccDemandSignalOccDemandSignalOutput) ToGetOccDemandSignalOccDemandSignalOutputWithContext(ctx context.Context) GetOccDemandSignalOccDemandSignalOutput {
	return o
}

// The name of the resource for the data.
func (o GetOccDemandSignalOccDemandSignalOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalOccDemandSignal) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The units of the data.
func (o GetOccDemandSignalOccDemandSignalOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalOccDemandSignal) string { return v.Units }).(pulumi.StringOutput)
}

// The values of forecast.
func (o GetOccDemandSignalOccDemandSignalOutput) Values() GetOccDemandSignalOccDemandSignalValueArrayOutput {
	return o.ApplyT(func(v GetOccDemandSignalOccDemandSignal) []GetOccDemandSignalOccDemandSignalValue { return v.Values }).(GetOccDemandSignalOccDemandSignalValueArrayOutput)
}

type GetOccDemandSignalOccDemandSignalArrayOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalOccDemandSignalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalOccDemandSignal)(nil)).Elem()
}

func (o GetOccDemandSignalOccDemandSignalArrayOutput) ToGetOccDemandSignalOccDemandSignalArrayOutput() GetOccDemandSignalOccDemandSignalArrayOutput {
	return o
}

func (o GetOccDemandSignalOccDemandSignalArrayOutput) ToGetOccDemandSignalOccDemandSignalArrayOutputWithContext(ctx context.Context) GetOccDemandSignalOccDemandSignalArrayOutput {
	return o
}

func (o GetOccDemandSignalOccDemandSignalArrayOutput) Index(i pulumi.IntInput) GetOccDemandSignalOccDemandSignalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOccDemandSignalOccDemandSignal {
		return vs[0].([]GetOccDemandSignalOccDemandSignal)[vs[1].(int)]
	}).(GetOccDemandSignalOccDemandSignalOutput)
}

type GetOccDemandSignalOccDemandSignalValue struct {
	// Space provided for users to make comments regarding the value.
	Comments string `pulumi:"comments"`
	// The date of the Demand Signal Value.
	TimeExpected string `pulumi:"timeExpected"`
	// The Demand Signal Value.
	Value float64 `pulumi:"value"`
}

// GetOccDemandSignalOccDemandSignalValueInput is an input type that accepts GetOccDemandSignalOccDemandSignalValueArgs and GetOccDemandSignalOccDemandSignalValueOutput values.
// You can construct a concrete instance of `GetOccDemandSignalOccDemandSignalValueInput` via:
//
//	GetOccDemandSignalOccDemandSignalValueArgs{...}
type GetOccDemandSignalOccDemandSignalValueInput interface {
	pulumi.Input

	ToGetOccDemandSignalOccDemandSignalValueOutput() GetOccDemandSignalOccDemandSignalValueOutput
	ToGetOccDemandSignalOccDemandSignalValueOutputWithContext(context.Context) GetOccDemandSignalOccDemandSignalValueOutput
}

type GetOccDemandSignalOccDemandSignalValueArgs struct {
	// Space provided for users to make comments regarding the value.
	Comments pulumi.StringInput `pulumi:"comments"`
	// The date of the Demand Signal Value.
	TimeExpected pulumi.StringInput `pulumi:"timeExpected"`
	// The Demand Signal Value.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetOccDemandSignalOccDemandSignalValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalOccDemandSignalValue)(nil)).Elem()
}

func (i GetOccDemandSignalOccDemandSignalValueArgs) ToGetOccDemandSignalOccDemandSignalValueOutput() GetOccDemandSignalOccDemandSignalValueOutput {
	return i.ToGetOccDemandSignalOccDemandSignalValueOutputWithContext(context.Background())
}

func (i GetOccDemandSignalOccDemandSignalValueArgs) ToGetOccDemandSignalOccDemandSignalValueOutputWithContext(ctx context.Context) GetOccDemandSignalOccDemandSignalValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalOccDemandSignalValueOutput)
}

// GetOccDemandSignalOccDemandSignalValueArrayInput is an input type that accepts GetOccDemandSignalOccDemandSignalValueArray and GetOccDemandSignalOccDemandSignalValueArrayOutput values.
// You can construct a concrete instance of `GetOccDemandSignalOccDemandSignalValueArrayInput` via:
//
//	GetOccDemandSignalOccDemandSignalValueArray{ GetOccDemandSignalOccDemandSignalValueArgs{...} }
type GetOccDemandSignalOccDemandSignalValueArrayInput interface {
	pulumi.Input

	ToGetOccDemandSignalOccDemandSignalValueArrayOutput() GetOccDemandSignalOccDemandSignalValueArrayOutput
	ToGetOccDemandSignalOccDemandSignalValueArrayOutputWithContext(context.Context) GetOccDemandSignalOccDemandSignalValueArrayOutput
}

type GetOccDemandSignalOccDemandSignalValueArray []GetOccDemandSignalOccDemandSignalValueInput

func (GetOccDemandSignalOccDemandSignalValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalOccDemandSignalValue)(nil)).Elem()
}

func (i GetOccDemandSignalOccDemandSignalValueArray) ToGetOccDemandSignalOccDemandSignalValueArrayOutput() GetOccDemandSignalOccDemandSignalValueArrayOutput {
	return i.ToGetOccDemandSignalOccDemandSignalValueArrayOutputWithContext(context.Background())
}

func (i GetOccDemandSignalOccDemandSignalValueArray) ToGetOccDemandSignalOccDemandSignalValueArrayOutputWithContext(ctx context.Context) GetOccDemandSignalOccDemandSignalValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalOccDemandSignalValueArrayOutput)
}

type GetOccDemandSignalOccDemandSignalValueOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalOccDemandSignalValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalOccDemandSignalValue)(nil)).Elem()
}

func (o GetOccDemandSignalOccDemandSignalValueOutput) ToGetOccDemandSignalOccDemandSignalValueOutput() GetOccDemandSignalOccDemandSignalValueOutput {
	return o
}

func (o GetOccDemandSignalOccDemandSignalValueOutput) ToGetOccDemandSignalOccDemandSignalValueOutputWithContext(ctx context.Context) GetOccDemandSignalOccDemandSignalValueOutput {
	return o
}

// Space provided for users to make comments regarding the value.
func (o GetOccDemandSignalOccDemandSignalValueOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalOccDemandSignalValue) string { return v.Comments }).(pulumi.StringOutput)
}

// The date of the Demand Signal Value.
func (o GetOccDemandSignalOccDemandSignalValueOutput) TimeExpected() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalOccDemandSignalValue) string { return v.TimeExpected }).(pulumi.StringOutput)
}

// The Demand Signal Value.
func (o GetOccDemandSignalOccDemandSignalValueOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetOccDemandSignalOccDemandSignalValue) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetOccDemandSignalOccDemandSignalValueArrayOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalOccDemandSignalValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalOccDemandSignalValue)(nil)).Elem()
}

func (o GetOccDemandSignalOccDemandSignalValueArrayOutput) ToGetOccDemandSignalOccDemandSignalValueArrayOutput() GetOccDemandSignalOccDemandSignalValueArrayOutput {
	return o
}

func (o GetOccDemandSignalOccDemandSignalValueArrayOutput) ToGetOccDemandSignalOccDemandSignalValueArrayOutputWithContext(ctx context.Context) GetOccDemandSignalOccDemandSignalValueArrayOutput {
	return o
}

func (o GetOccDemandSignalOccDemandSignalValueArrayOutput) Index(i pulumi.IntInput) GetOccDemandSignalOccDemandSignalValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOccDemandSignalOccDemandSignalValue {
		return vs[0].([]GetOccDemandSignalOccDemandSignalValue)[vs[1].(int)]
	}).(GetOccDemandSignalOccDemandSignalValueOutput)
}

type GetOccDemandSignalPatchOperation struct {
	From         string `pulumi:"from"`
	Operation    string `pulumi:"operation"`
	Position     string `pulumi:"position"`
	SelectedItem string `pulumi:"selectedItem"`
	Selection    string `pulumi:"selection"`
	// The Demand Signal Value.
	Value map[string]interface{} `pulumi:"value"`
}

// GetOccDemandSignalPatchOperationInput is an input type that accepts GetOccDemandSignalPatchOperationArgs and GetOccDemandSignalPatchOperationOutput values.
// You can construct a concrete instance of `GetOccDemandSignalPatchOperationInput` via:
//
//	GetOccDemandSignalPatchOperationArgs{...}
type GetOccDemandSignalPatchOperationInput interface {
	pulumi.Input

	ToGetOccDemandSignalPatchOperationOutput() GetOccDemandSignalPatchOperationOutput
	ToGetOccDemandSignalPatchOperationOutputWithContext(context.Context) GetOccDemandSignalPatchOperationOutput
}

type GetOccDemandSignalPatchOperationArgs struct {
	From         pulumi.StringInput `pulumi:"from"`
	Operation    pulumi.StringInput `pulumi:"operation"`
	Position     pulumi.StringInput `pulumi:"position"`
	SelectedItem pulumi.StringInput `pulumi:"selectedItem"`
	Selection    pulumi.StringInput `pulumi:"selection"`
	// The Demand Signal Value.
	Value pulumi.MapInput `pulumi:"value"`
}

func (GetOccDemandSignalPatchOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalPatchOperation)(nil)).Elem()
}

func (i GetOccDemandSignalPatchOperationArgs) ToGetOccDemandSignalPatchOperationOutput() GetOccDemandSignalPatchOperationOutput {
	return i.ToGetOccDemandSignalPatchOperationOutputWithContext(context.Background())
}

func (i GetOccDemandSignalPatchOperationArgs) ToGetOccDemandSignalPatchOperationOutputWithContext(ctx context.Context) GetOccDemandSignalPatchOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalPatchOperationOutput)
}

// GetOccDemandSignalPatchOperationArrayInput is an input type that accepts GetOccDemandSignalPatchOperationArray and GetOccDemandSignalPatchOperationArrayOutput values.
// You can construct a concrete instance of `GetOccDemandSignalPatchOperationArrayInput` via:
//
//	GetOccDemandSignalPatchOperationArray{ GetOccDemandSignalPatchOperationArgs{...} }
type GetOccDemandSignalPatchOperationArrayInput interface {
	pulumi.Input

	ToGetOccDemandSignalPatchOperationArrayOutput() GetOccDemandSignalPatchOperationArrayOutput
	ToGetOccDemandSignalPatchOperationArrayOutputWithContext(context.Context) GetOccDemandSignalPatchOperationArrayOutput
}

type GetOccDemandSignalPatchOperationArray []GetOccDemandSignalPatchOperationInput

func (GetOccDemandSignalPatchOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalPatchOperation)(nil)).Elem()
}

func (i GetOccDemandSignalPatchOperationArray) ToGetOccDemandSignalPatchOperationArrayOutput() GetOccDemandSignalPatchOperationArrayOutput {
	return i.ToGetOccDemandSignalPatchOperationArrayOutputWithContext(context.Background())
}

func (i GetOccDemandSignalPatchOperationArray) ToGetOccDemandSignalPatchOperationArrayOutputWithContext(ctx context.Context) GetOccDemandSignalPatchOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalPatchOperationArrayOutput)
}

type GetOccDemandSignalPatchOperationOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalPatchOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalPatchOperation)(nil)).Elem()
}

func (o GetOccDemandSignalPatchOperationOutput) ToGetOccDemandSignalPatchOperationOutput() GetOccDemandSignalPatchOperationOutput {
	return o
}

func (o GetOccDemandSignalPatchOperationOutput) ToGetOccDemandSignalPatchOperationOutputWithContext(ctx context.Context) GetOccDemandSignalPatchOperationOutput {
	return o
}

func (o GetOccDemandSignalPatchOperationOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalPatchOperation) string { return v.From }).(pulumi.StringOutput)
}

func (o GetOccDemandSignalPatchOperationOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalPatchOperation) string { return v.Operation }).(pulumi.StringOutput)
}

func (o GetOccDemandSignalPatchOperationOutput) Position() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalPatchOperation) string { return v.Position }).(pulumi.StringOutput)
}

func (o GetOccDemandSignalPatchOperationOutput) SelectedItem() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalPatchOperation) string { return v.SelectedItem }).(pulumi.StringOutput)
}

func (o GetOccDemandSignalPatchOperationOutput) Selection() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalPatchOperation) string { return v.Selection }).(pulumi.StringOutput)
}

// The Demand Signal Value.
func (o GetOccDemandSignalPatchOperationOutput) Value() pulumi.MapOutput {
	return o.ApplyT(func(v GetOccDemandSignalPatchOperation) map[string]interface{} { return v.Value }).(pulumi.MapOutput)
}

type GetOccDemandSignalPatchOperationArrayOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalPatchOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalPatchOperation)(nil)).Elem()
}

func (o GetOccDemandSignalPatchOperationArrayOutput) ToGetOccDemandSignalPatchOperationArrayOutput() GetOccDemandSignalPatchOperationArrayOutput {
	return o
}

func (o GetOccDemandSignalPatchOperationArrayOutput) ToGetOccDemandSignalPatchOperationArrayOutputWithContext(ctx context.Context) GetOccDemandSignalPatchOperationArrayOutput {
	return o
}

func (o GetOccDemandSignalPatchOperationArrayOutput) Index(i pulumi.IntInput) GetOccDemandSignalPatchOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOccDemandSignalPatchOperation {
		return vs[0].([]GetOccDemandSignalPatchOperation)[vs[1].(int)]
	}).(GetOccDemandSignalPatchOperationOutput)
}

type GetOccDemandSignalsFilter struct {
	Name  string `pulumi:"name"`
	Regex *bool  `pulumi:"regex"`
	// The values of forecast.
	Values []string `pulumi:"values"`
}

// GetOccDemandSignalsFilterInput is an input type that accepts GetOccDemandSignalsFilterArgs and GetOccDemandSignalsFilterOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsFilterInput` via:
//
//	GetOccDemandSignalsFilterArgs{...}
type GetOccDemandSignalsFilterInput interface {
	pulumi.Input

	ToGetOccDemandSignalsFilterOutput() GetOccDemandSignalsFilterOutput
	ToGetOccDemandSignalsFilterOutputWithContext(context.Context) GetOccDemandSignalsFilterOutput
}

type GetOccDemandSignalsFilterArgs struct {
	Name  pulumi.StringInput  `pulumi:"name"`
	Regex pulumi.BoolPtrInput `pulumi:"regex"`
	// The values of forecast.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOccDemandSignalsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsFilter)(nil)).Elem()
}

func (i GetOccDemandSignalsFilterArgs) ToGetOccDemandSignalsFilterOutput() GetOccDemandSignalsFilterOutput {
	return i.ToGetOccDemandSignalsFilterOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsFilterArgs) ToGetOccDemandSignalsFilterOutputWithContext(ctx context.Context) GetOccDemandSignalsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsFilterOutput)
}

// GetOccDemandSignalsFilterArrayInput is an input type that accepts GetOccDemandSignalsFilterArray and GetOccDemandSignalsFilterArrayOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsFilterArrayInput` via:
//
//	GetOccDemandSignalsFilterArray{ GetOccDemandSignalsFilterArgs{...} }
type GetOccDemandSignalsFilterArrayInput interface {
	pulumi.Input

	ToGetOccDemandSignalsFilterArrayOutput() GetOccDemandSignalsFilterArrayOutput
	ToGetOccDemandSignalsFilterArrayOutputWithContext(context.Context) GetOccDemandSignalsFilterArrayOutput
}

type GetOccDemandSignalsFilterArray []GetOccDemandSignalsFilterInput

func (GetOccDemandSignalsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsFilter)(nil)).Elem()
}

func (i GetOccDemandSignalsFilterArray) ToGetOccDemandSignalsFilterArrayOutput() GetOccDemandSignalsFilterArrayOutput {
	return i.ToGetOccDemandSignalsFilterArrayOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsFilterArray) ToGetOccDemandSignalsFilterArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsFilterArrayOutput)
}

type GetOccDemandSignalsFilterOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsFilter)(nil)).Elem()
}

func (o GetOccDemandSignalsFilterOutput) ToGetOccDemandSignalsFilterOutput() GetOccDemandSignalsFilterOutput {
	return o
}

func (o GetOccDemandSignalsFilterOutput) ToGetOccDemandSignalsFilterOutputWithContext(ctx context.Context) GetOccDemandSignalsFilterOutput {
	return o
}

func (o GetOccDemandSignalsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOccDemandSignalsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetOccDemandSignalsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

// The values of forecast.
func (o GetOccDemandSignalsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOccDemandSignalsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOccDemandSignalsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsFilter)(nil)).Elem()
}

func (o GetOccDemandSignalsFilterArrayOutput) ToGetOccDemandSignalsFilterArrayOutput() GetOccDemandSignalsFilterArrayOutput {
	return o
}

func (o GetOccDemandSignalsFilterArrayOutput) ToGetOccDemandSignalsFilterArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsFilterArrayOutput {
	return o
}

func (o GetOccDemandSignalsFilterArrayOutput) Index(i pulumi.IntInput) GetOccDemandSignalsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOccDemandSignalsFilter {
		return vs[0].([]GetOccDemandSignalsFilter)[vs[1].(int)]
	}).(GetOccDemandSignalsFilterOutput)
}

type GetOccDemandSignalsOccDemandSignalCollection struct {
	Items []GetOccDemandSignalsOccDemandSignalCollectionItem `pulumi:"items"`
}

// GetOccDemandSignalsOccDemandSignalCollectionInput is an input type that accepts GetOccDemandSignalsOccDemandSignalCollectionArgs and GetOccDemandSignalsOccDemandSignalCollectionOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsOccDemandSignalCollectionInput` via:
//
//	GetOccDemandSignalsOccDemandSignalCollectionArgs{...}
type GetOccDemandSignalsOccDemandSignalCollectionInput interface {
	pulumi.Input

	ToGetOccDemandSignalsOccDemandSignalCollectionOutput() GetOccDemandSignalsOccDemandSignalCollectionOutput
	ToGetOccDemandSignalsOccDemandSignalCollectionOutputWithContext(context.Context) GetOccDemandSignalsOccDemandSignalCollectionOutput
}

type GetOccDemandSignalsOccDemandSignalCollectionArgs struct {
	Items GetOccDemandSignalsOccDemandSignalCollectionItemArrayInput `pulumi:"items"`
}

func (GetOccDemandSignalsOccDemandSignalCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollection)(nil)).Elem()
}

func (i GetOccDemandSignalsOccDemandSignalCollectionArgs) ToGetOccDemandSignalsOccDemandSignalCollectionOutput() GetOccDemandSignalsOccDemandSignalCollectionOutput {
	return i.ToGetOccDemandSignalsOccDemandSignalCollectionOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsOccDemandSignalCollectionArgs) ToGetOccDemandSignalsOccDemandSignalCollectionOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsOccDemandSignalCollectionOutput)
}

// GetOccDemandSignalsOccDemandSignalCollectionArrayInput is an input type that accepts GetOccDemandSignalsOccDemandSignalCollectionArray and GetOccDemandSignalsOccDemandSignalCollectionArrayOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsOccDemandSignalCollectionArrayInput` via:
//
//	GetOccDemandSignalsOccDemandSignalCollectionArray{ GetOccDemandSignalsOccDemandSignalCollectionArgs{...} }
type GetOccDemandSignalsOccDemandSignalCollectionArrayInput interface {
	pulumi.Input

	ToGetOccDemandSignalsOccDemandSignalCollectionArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionArrayOutput
	ToGetOccDemandSignalsOccDemandSignalCollectionArrayOutputWithContext(context.Context) GetOccDemandSignalsOccDemandSignalCollectionArrayOutput
}

type GetOccDemandSignalsOccDemandSignalCollectionArray []GetOccDemandSignalsOccDemandSignalCollectionInput

func (GetOccDemandSignalsOccDemandSignalCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsOccDemandSignalCollection)(nil)).Elem()
}

func (i GetOccDemandSignalsOccDemandSignalCollectionArray) ToGetOccDemandSignalsOccDemandSignalCollectionArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionArrayOutput {
	return i.ToGetOccDemandSignalsOccDemandSignalCollectionArrayOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsOccDemandSignalCollectionArray) ToGetOccDemandSignalsOccDemandSignalCollectionArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsOccDemandSignalCollectionArrayOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsOccDemandSignalCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollection)(nil)).Elem()
}

func (o GetOccDemandSignalsOccDemandSignalCollectionOutput) ToGetOccDemandSignalsOccDemandSignalCollectionOutput() GetOccDemandSignalsOccDemandSignalCollectionOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionOutput) ToGetOccDemandSignalsOccDemandSignalCollectionOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionOutput) Items() GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollection) []GetOccDemandSignalsOccDemandSignalCollectionItem {
		return v.Items
	}).(GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsOccDemandSignalCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsOccDemandSignalCollection)(nil)).Elem()
}

func (o GetOccDemandSignalsOccDemandSignalCollectionArrayOutput) ToGetOccDemandSignalsOccDemandSignalCollectionArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionArrayOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionArrayOutput) ToGetOccDemandSignalsOccDemandSignalCollectionArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionArrayOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionArrayOutput) Index(i pulumi.IntInput) GetOccDemandSignalsOccDemandSignalCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOccDemandSignalsOccDemandSignalCollection {
		return vs[0].([]GetOccDemandSignalsOccDemandSignalCollection)[vs[1].(int)]
	}).(GetOccDemandSignalsOccDemandSignalCollectionOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionItem struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OccDemandSignal.
	Id string `pulumi:"id"`
	// Indicator of whether to share the data with Oracle.
	IsActive bool `pulumi:"isActive"`
	// A message that describes the current state of the OccDemandSignal in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails  string `pulumi:"lifecycleDetails"`
	OccDemandSignalId string `pulumi:"occDemandSignalId"`
	// The OccDemandSignal data.
	OccDemandSignals []GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal `pulumi:"occDemandSignals"`
	PatchOperations  []GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation  `pulumi:"patchOperations"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The date and time the OccDemandSignal was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the OccDemandSignal was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetOccDemandSignalsOccDemandSignalCollectionItemInput is an input type that accepts GetOccDemandSignalsOccDemandSignalCollectionItemArgs and GetOccDemandSignalsOccDemandSignalCollectionItemOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsOccDemandSignalCollectionItemInput` via:
//
//	GetOccDemandSignalsOccDemandSignalCollectionItemArgs{...}
type GetOccDemandSignalsOccDemandSignalCollectionItemInput interface {
	pulumi.Input

	ToGetOccDemandSignalsOccDemandSignalCollectionItemOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOutput
	ToGetOccDemandSignalsOccDemandSignalCollectionItemOutputWithContext(context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOutput
}

type GetOccDemandSignalsOccDemandSignalCollectionItemArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the given display name exactly.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OccDemandSignal.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicator of whether to share the data with Oracle.
	IsActive pulumi.BoolInput `pulumi:"isActive"`
	// A message that describes the current state of the OccDemandSignal in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails  pulumi.StringInput `pulumi:"lifecycleDetails"`
	OccDemandSignalId pulumi.StringInput `pulumi:"occDemandSignalId"`
	// The OccDemandSignal data.
	OccDemandSignals GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayInput `pulumi:"occDemandSignals"`
	PatchOperations  GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayInput  `pulumi:"patchOperations"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringInput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The date and time the OccDemandSignal was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the OccDemandSignal was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetOccDemandSignalsOccDemandSignalCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItem)(nil)).Elem()
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemArgs) ToGetOccDemandSignalsOccDemandSignalCollectionItemOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOutput {
	return i.ToGetOccDemandSignalsOccDemandSignalCollectionItemOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemArgs) ToGetOccDemandSignalsOccDemandSignalCollectionItemOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsOccDemandSignalCollectionItemOutput)
}

// GetOccDemandSignalsOccDemandSignalCollectionItemArrayInput is an input type that accepts GetOccDemandSignalsOccDemandSignalCollectionItemArray and GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsOccDemandSignalCollectionItemArrayInput` via:
//
//	GetOccDemandSignalsOccDemandSignalCollectionItemArray{ GetOccDemandSignalsOccDemandSignalCollectionItemArgs{...} }
type GetOccDemandSignalsOccDemandSignalCollectionItemArrayInput interface {
	pulumi.Input

	ToGetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput
	ToGetOccDemandSignalsOccDemandSignalCollectionItemArrayOutputWithContext(context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput
}

type GetOccDemandSignalsOccDemandSignalCollectionItemArray []GetOccDemandSignalsOccDemandSignalCollectionItemInput

func (GetOccDemandSignalsOccDemandSignalCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsOccDemandSignalCollectionItem)(nil)).Elem()
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemArray) ToGetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput {
	return i.ToGetOccDemandSignalsOccDemandSignalCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemArray) ToGetOccDemandSignalsOccDemandSignalCollectionItemArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionItemOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsOccDemandSignalCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItem)(nil)).Elem()
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the given display name exactly.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OccDemandSignal.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Indicator of whether to share the data with Oracle.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) bool { return v.IsActive }).(pulumi.BoolOutput)
}

// A message that describes the current state of the OccDemandSignal in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) OccDemandSignalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) string { return v.OccDemandSignalId }).(pulumi.StringOutput)
}

// The OccDemandSignal data.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) OccDemandSignals() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) []GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal {
		return v.OccDemandSignals
	}).(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput)
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) PatchOperations() GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) []GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation {
		return v.PatchOperations
	}).(GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput)
}

// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The date and time the OccDemandSignal was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the OccDemandSignal was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsOccDemandSignalCollectionItem)(nil)).Elem()
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput) Index(i pulumi.IntInput) GetOccDemandSignalsOccDemandSignalCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOccDemandSignalsOccDemandSignalCollectionItem {
		return vs[0].([]GetOccDemandSignalsOccDemandSignalCollectionItem)[vs[1].(int)]
	}).(GetOccDemandSignalsOccDemandSignalCollectionItemOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal struct {
	// The name of the resource for the data.
	ResourceType string `pulumi:"resourceType"`
	// The units of the data.
	Units string `pulumi:"units"`
	// The values of forecast.
	Values []GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue `pulumi:"values"`
}

// GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalInput is an input type that accepts GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArgs and GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalInput` via:
//
//	GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArgs{...}
type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalInput interface {
	pulumi.Input

	ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput
	ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutputWithContext(context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput
}

type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArgs struct {
	// The name of the resource for the data.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The units of the data.
	Units pulumi.StringInput `pulumi:"units"`
	// The values of forecast.
	Values GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayInput `pulumi:"values"`
}

func (GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal)(nil)).Elem()
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArgs) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput {
	return i.ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArgs) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput)
}

// GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayInput is an input type that accepts GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArray and GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayInput` via:
//
//	GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArray{ GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArgs{...} }
type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayInput interface {
	pulumi.Input

	ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput
	ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutputWithContext(context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput
}

type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArray []GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalInput

func (GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal)(nil)).Elem()
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArray) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput {
	return i.ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArray) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal)(nil)).Elem()
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput {
	return o
}

// The name of the resource for the data.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The units of the data.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal) string { return v.Units }).(pulumi.StringOutput)
}

// The values of forecast.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput) Values() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal) []GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue {
		return v.Values
	}).(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal)(nil)).Elem()
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput) Index(i pulumi.IntInput) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal {
		return vs[0].([]GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignal)[vs[1].(int)]
	}).(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue struct {
	// Space provided for users to make comments regarding the value.
	Comments string `pulumi:"comments"`
	// The date of the Demand Signal Value.
	TimeExpected string `pulumi:"timeExpected"`
	// The Demand Signal Value.
	Value float64 `pulumi:"value"`
}

// GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueInput is an input type that accepts GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArgs and GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueInput` via:
//
//	GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArgs{...}
type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueInput interface {
	pulumi.Input

	ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput
	ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutputWithContext(context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput
}

type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArgs struct {
	// Space provided for users to make comments regarding the value.
	Comments pulumi.StringInput `pulumi:"comments"`
	// The date of the Demand Signal Value.
	TimeExpected pulumi.StringInput `pulumi:"timeExpected"`
	// The Demand Signal Value.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue)(nil)).Elem()
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArgs) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput {
	return i.ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArgs) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput)
}

// GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayInput is an input type that accepts GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArray and GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayInput` via:
//
//	GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArray{ GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArgs{...} }
type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayInput interface {
	pulumi.Input

	ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput
	ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutputWithContext(context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput
}

type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArray []GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueInput

func (GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue)(nil)).Elem()
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArray) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput {
	return i.ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArray) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue)(nil)).Elem()
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput {
	return o
}

// Space provided for users to make comments regarding the value.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue) string { return v.Comments }).(pulumi.StringOutput)
}

// The date of the Demand Signal Value.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput) TimeExpected() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue) string {
		return v.TimeExpected
	}).(pulumi.StringOutput)
}

// The Demand Signal Value.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue)(nil)).Elem()
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput) Index(i pulumi.IntInput) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue {
		return vs[0].([]GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValue)[vs[1].(int)]
	}).(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation struct {
	From         string `pulumi:"from"`
	Operation    string `pulumi:"operation"`
	Position     string `pulumi:"position"`
	SelectedItem string `pulumi:"selectedItem"`
	Selection    string `pulumi:"selection"`
	// The Demand Signal Value.
	Value map[string]interface{} `pulumi:"value"`
}

// GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationInput is an input type that accepts GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArgs and GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationInput` via:
//
//	GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArgs{...}
type GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationInput interface {
	pulumi.Input

	ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput() GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput
	ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutputWithContext(context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput
}

type GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArgs struct {
	From         pulumi.StringInput `pulumi:"from"`
	Operation    pulumi.StringInput `pulumi:"operation"`
	Position     pulumi.StringInput `pulumi:"position"`
	SelectedItem pulumi.StringInput `pulumi:"selectedItem"`
	Selection    pulumi.StringInput `pulumi:"selection"`
	// The Demand Signal Value.
	Value pulumi.MapInput `pulumi:"value"`
}

func (GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation)(nil)).Elem()
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArgs) ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput() GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput {
	return i.ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArgs) ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput)
}

// GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayInput is an input type that accepts GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArray and GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput values.
// You can construct a concrete instance of `GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayInput` via:
//
//	GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArray{ GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArgs{...} }
type GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayInput interface {
	pulumi.Input

	ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput
	ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutputWithContext(context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput
}

type GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArray []GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationInput

func (GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation)(nil)).Elem()
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArray) ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput {
	return i.ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutputWithContext(context.Background())
}

func (i GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArray) ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation)(nil)).Elem()
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput() GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation) string { return v.From }).(pulumi.StringOutput)
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation) string { return v.Operation }).(pulumi.StringOutput)
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput) Position() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation) string { return v.Position }).(pulumi.StringOutput)
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput) SelectedItem() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation) string { return v.SelectedItem }).(pulumi.StringOutput)
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput) Selection() pulumi.StringOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation) string { return v.Selection }).(pulumi.StringOutput)
}

// The Demand Signal Value.
func (o GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput) Value() pulumi.MapOutput {
	return o.ApplyT(func(v GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation) map[string]interface{} {
		return v.Value
	}).(pulumi.MapOutput)
}

type GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput struct{ *pulumi.OutputState }

func (GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation)(nil)).Elem()
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput() GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput) ToGetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutputWithContext(ctx context.Context) GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput {
	return o
}

func (o GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput) Index(i pulumi.IntInput) GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation {
		return vs[0].([]GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperation)[vs[1].(int)]
	}).(GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OccDemandSignalOccDemandSignalInput)(nil)).Elem(), OccDemandSignalOccDemandSignalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OccDemandSignalOccDemandSignalArrayInput)(nil)).Elem(), OccDemandSignalOccDemandSignalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OccDemandSignalOccDemandSignalValueInput)(nil)).Elem(), OccDemandSignalOccDemandSignalValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OccDemandSignalOccDemandSignalValueArrayInput)(nil)).Elem(), OccDemandSignalOccDemandSignalValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OccDemandSignalPatchOperationInput)(nil)).Elem(), OccDemandSignalPatchOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OccDemandSignalPatchOperationArrayInput)(nil)).Elem(), OccDemandSignalPatchOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalOccDemandSignalInput)(nil)).Elem(), GetOccDemandSignalOccDemandSignalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalOccDemandSignalArrayInput)(nil)).Elem(), GetOccDemandSignalOccDemandSignalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalOccDemandSignalValueInput)(nil)).Elem(), GetOccDemandSignalOccDemandSignalValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalOccDemandSignalValueArrayInput)(nil)).Elem(), GetOccDemandSignalOccDemandSignalValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalPatchOperationInput)(nil)).Elem(), GetOccDemandSignalPatchOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalPatchOperationArrayInput)(nil)).Elem(), GetOccDemandSignalPatchOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsFilterInput)(nil)).Elem(), GetOccDemandSignalsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsFilterArrayInput)(nil)).Elem(), GetOccDemandSignalsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionInput)(nil)).Elem(), GetOccDemandSignalsOccDemandSignalCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionArrayInput)(nil)).Elem(), GetOccDemandSignalsOccDemandSignalCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemInput)(nil)).Elem(), GetOccDemandSignalsOccDemandSignalCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemArrayInput)(nil)).Elem(), GetOccDemandSignalsOccDemandSignalCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalInput)(nil)).Elem(), GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayInput)(nil)).Elem(), GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueInput)(nil)).Elem(), GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayInput)(nil)).Elem(), GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationInput)(nil)).Elem(), GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayInput)(nil)).Elem(), GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArray{})
	pulumi.RegisterOutputType(OccDemandSignalOccDemandSignalOutput{})
	pulumi.RegisterOutputType(OccDemandSignalOccDemandSignalArrayOutput{})
	pulumi.RegisterOutputType(OccDemandSignalOccDemandSignalValueOutput{})
	pulumi.RegisterOutputType(OccDemandSignalOccDemandSignalValueArrayOutput{})
	pulumi.RegisterOutputType(OccDemandSignalPatchOperationOutput{})
	pulumi.RegisterOutputType(OccDemandSignalPatchOperationArrayOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalOccDemandSignalOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalOccDemandSignalArrayOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalOccDemandSignalValueOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalOccDemandSignalValueArrayOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalPatchOperationOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalPatchOperationArrayOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsFilterOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsOccDemandSignalCollectionOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsOccDemandSignalCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsOccDemandSignalCollectionItemOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsOccDemandSignalCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalArrayOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsOccDemandSignalCollectionItemOccDemandSignalValueArrayOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationOutput{})
	pulumi.RegisterOutputType(GetOccDemandSignalsOccDemandSignalCollectionItemPatchOperationArrayOutput{})
}
