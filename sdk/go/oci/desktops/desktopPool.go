// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package desktops

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Desktop Pool resource in Oracle Cloud Infrastructure Desktops service.
//
// Creates a desktop pool with the given configuration parameters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Desktops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Desktops.NewDesktopPool(ctx, "test_desktop_pool", &Desktops.DesktopPoolArgs{
//				ArePrivilegedUsers: pulumi.Any(desktopPoolArePrivilegedUsers),
//				AvailabilityDomain: pulumi.Any(desktopPoolAvailabilityDomain),
//				AvailabilityPolicy: &desktops.DesktopPoolAvailabilityPolicyArgs{
//					StartSchedule: &desktops.DesktopPoolAvailabilityPolicyStartScheduleArgs{
//						CronExpression: pulumi.String("0 10 8 ? * 2"),
//						Timezone:       pulumi.String("America/Denver"),
//					},
//					StopSchedule: &desktops.DesktopPoolAvailabilityPolicyStopScheduleArgs{
//						CronExpression: pulumi.String("0 20 18 ? * 6"),
//						Timezone:       pulumi.String("America/Denver"),
//					},
//				},
//				CompartmentId:  pulumi.Any(compartmentId),
//				ContactDetails: pulumi.Any(desktopPoolContactDetails),
//				DevicePolicy: &desktops.DesktopPoolDevicePolicyArgs{
//					AudioMode:         pulumi.Any(desktopPoolDevicePolicyAudioMode),
//					CdmMode:           pulumi.Any(desktopPoolDevicePolicyCdmMode),
//					ClipboardMode:     pulumi.Any(desktopPoolDevicePolicyClipboardMode),
//					IsDisplayEnabled:  pulumi.Any(desktopPoolDevicePolicyIsDisplayEnabled),
//					IsKeyboardEnabled: pulumi.Any(desktopPoolDevicePolicyIsKeyboardEnabled),
//					IsPointerEnabled:  pulumi.Any(desktopPoolDevicePolicyIsPointerEnabled),
//					IsPrintingEnabled: pulumi.Any(desktopPoolDevicePolicyIsPrintingEnabled),
//				},
//				DisplayName: pulumi.Any(desktopPoolDisplayName),
//				Image: &desktops.DesktopPoolImageArgs{
//					ImageId:         pulumi.Any(testImage.Id),
//					ImageName:       pulumi.Any(desktopPoolImageImageName),
//					OperatingSystem: pulumi.Any(desktopPoolImageOperatingSystem),
//				},
//				IsStorageEnabled: pulumi.Any(desktopPoolIsStorageEnabled),
//				MaximumSize:      pulumi.Any(desktopPoolMaximumSize),
//				NetworkConfiguration: &desktops.DesktopPoolNetworkConfigurationArgs{
//					SubnetId: pulumi.Any(testSubnet.Id),
//					VcnId:    pulumi.Any(testVcn.Id),
//				},
//				ShapeName:             pulumi.String("VM.Standard.E4.Flex"),
//				StandbySize:           pulumi.Any(desktopPoolStandbySize),
//				StorageBackupPolicyId: pulumi.String("ocid1.volumebackuppolicy.oc1.xxxxyyyyyzzzz"),
//				StorageSizeInGbs:      pulumi.Any(desktopPoolStorageSizeInGbs),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				Description: pulumi.Any(desktopPoolDescription),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				NsgIds: pulumi.Any(desktopPoolNsgIds),
//				ShapeConfig: &desktops.DesktopPoolShapeConfigArgs{
//					BaselineOcpuUtilization: pulumi.Any(desktopPoolShapeConfigBaselineOcpuUtilization),
//					MemoryInGbs:             pulumi.Any(desktopPoolShapeConfigMemoryInGbs),
//					Ocpus:                   pulumi.Any(desktopPoolShapeConfigOcpus),
//				},
//				PrivateAccessDetails: &desktops.DesktopPoolPrivateAccessDetailsArgs{
//					SubnetId:  pulumi.Any(testSubnet.Id),
//					NsgIds:    pulumi.Any(desktopPoolPrivateAccessDetailsNsgIds),
//					PrivateIp: pulumi.Any(desktopPoolPrivateAccessDetailsPrivateIp),
//				},
//				TimeStartScheduled: pulumi.Any(desktopPoolTimeStartScheduled),
//				TimeStopScheduled:  pulumi.Any(desktopPoolTimeStopScheduled),
//				UseDedicatedVmHost: pulumi.Any(desktopPoolUseDedicatedVmHost),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DesktopPools can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Desktops/desktopPool:DesktopPool test_desktop_pool "id"
// ```
type DesktopPool struct {
	pulumi.CustomResourceState

	// The number of active desktops in the desktop pool.
	ActiveDesktops pulumi.IntOutput `pulumi:"activeDesktops"`
	// Indicates whether desktop pool users have administrative privileges on their desktop.
	ArePrivilegedUsers pulumi.BoolOutput `pulumi:"arePrivilegedUsers"`
	// The availability domain of the desktop pool.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// (Updatable) Provides the start and stop schedule information for desktop availability of the desktop pool.
	AvailabilityPolicy DesktopPoolAvailabilityPolicyOutput `pulumi:"availabilityPolicy"`
	// (Updatable) The OCID of the compartment which will contain the desktop pool.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Contact information of the desktop pool administrator. Avoid entering confidential information.
	ContactDetails pulumi.StringOutput `pulumi:"contactDetails"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user friendly description providing additional information about the resource. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
	DevicePolicy DesktopPoolDevicePolicyOutput `pulumi:"devicePolicy"`
	// (Updatable) A user friendly display name. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Provides information about the desktop image.
	Image DesktopPoolImageOutput `pulumi:"image"`
	// Indicates whether storage is enabled for the desktop pool.
	IsStorageEnabled pulumi.BoolOutput `pulumi:"isStorageEnabled"`
	// (Updatable) The maximum number of desktops permitted in the desktop pool.
	MaximumSize pulumi.IntOutput `pulumi:"maximumSize"`
	// Provides information about the network configuration of the desktop pool.
	NetworkConfiguration DesktopPoolNetworkConfigurationOutput `pulumi:"networkConfiguration"`
	// A list of network security groups for the private access.
	NsgIds pulumi.StringArrayOutput `pulumi:"nsgIds"`
	// The details of the desktop's private access network connectivity to be set up for the desktop pool.
	PrivateAccessDetails DesktopPoolPrivateAccessDetailsOutput `pulumi:"privateAccessDetails"`
	// The compute instance shape configuration requested for each desktop in the desktop pool.
	ShapeConfig DesktopPoolShapeConfigOutput `pulumi:"shapeConfig"`
	// The shape of the desktop pool.
	ShapeName pulumi.StringOutput `pulumi:"shapeName"`
	// (Updatable) The maximum number of standby desktops available in the desktop pool.
	StandbySize pulumi.IntOutput `pulumi:"standbySize"`
	// The current state of the desktop pool.
	State pulumi.StringOutput `pulumi:"state"`
	// The backup policy OCID of the storage.
	StorageBackupPolicyId pulumi.StringOutput `pulumi:"storageBackupPolicyId"`
	// The size in GBs of the storage for the desktop pool.
	StorageSizeInGbs pulumi.IntOutput `pulumi:"storageSizeInGbs"`
	// The date and time the resource was created.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// (Updatable) The start time of the desktop pool.
	TimeStartScheduled pulumi.StringPtrOutput `pulumi:"timeStartScheduled"`
	// (Updatable) The stop time of the desktop pool.
	TimeStopScheduled pulumi.StringPtrOutput `pulumi:"timeStopScheduled"`
	// Indicates whether the desktop pool uses dedicated virtual machine hosts.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UseDedicatedVmHost pulumi.StringOutput `pulumi:"useDedicatedVmHost"`
}

// NewDesktopPool registers a new resource with the given unique name, arguments, and options.
func NewDesktopPool(ctx *pulumi.Context,
	name string, args *DesktopPoolArgs, opts ...pulumi.ResourceOption) (*DesktopPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ArePrivilegedUsers == nil {
		return nil, errors.New("invalid value for required argument 'ArePrivilegedUsers'")
	}
	if args.AvailabilityDomain == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityDomain'")
	}
	if args.AvailabilityPolicy == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityPolicy'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ContactDetails == nil {
		return nil, errors.New("invalid value for required argument 'ContactDetails'")
	}
	if args.DevicePolicy == nil {
		return nil, errors.New("invalid value for required argument 'DevicePolicy'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Image == nil {
		return nil, errors.New("invalid value for required argument 'Image'")
	}
	if args.IsStorageEnabled == nil {
		return nil, errors.New("invalid value for required argument 'IsStorageEnabled'")
	}
	if args.MaximumSize == nil {
		return nil, errors.New("invalid value for required argument 'MaximumSize'")
	}
	if args.NetworkConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'NetworkConfiguration'")
	}
	if args.ShapeName == nil {
		return nil, errors.New("invalid value for required argument 'ShapeName'")
	}
	if args.StandbySize == nil {
		return nil, errors.New("invalid value for required argument 'StandbySize'")
	}
	if args.StorageBackupPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'StorageBackupPolicyId'")
	}
	if args.StorageSizeInGbs == nil {
		return nil, errors.New("invalid value for required argument 'StorageSizeInGbs'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DesktopPool
	err := ctx.RegisterResource("oci:Desktops/desktopPool:DesktopPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDesktopPool gets an existing DesktopPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDesktopPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DesktopPoolState, opts ...pulumi.ResourceOption) (*DesktopPool, error) {
	var resource DesktopPool
	err := ctx.ReadResource("oci:Desktops/desktopPool:DesktopPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DesktopPool resources.
type desktopPoolState struct {
	// The number of active desktops in the desktop pool.
	ActiveDesktops *int `pulumi:"activeDesktops"`
	// Indicates whether desktop pool users have administrative privileges on their desktop.
	ArePrivilegedUsers *bool `pulumi:"arePrivilegedUsers"`
	// The availability domain of the desktop pool.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// (Updatable) Provides the start and stop schedule information for desktop availability of the desktop pool.
	AvailabilityPolicy *DesktopPoolAvailabilityPolicy `pulumi:"availabilityPolicy"`
	// (Updatable) The OCID of the compartment which will contain the desktop pool.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Contact information of the desktop pool administrator. Avoid entering confidential information.
	ContactDetails *string `pulumi:"contactDetails"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user friendly description providing additional information about the resource. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
	DevicePolicy *DesktopPoolDevicePolicy `pulumi:"devicePolicy"`
	// (Updatable) A user friendly display name. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Provides information about the desktop image.
	Image *DesktopPoolImage `pulumi:"image"`
	// Indicates whether storage is enabled for the desktop pool.
	IsStorageEnabled *bool `pulumi:"isStorageEnabled"`
	// (Updatable) The maximum number of desktops permitted in the desktop pool.
	MaximumSize *int `pulumi:"maximumSize"`
	// Provides information about the network configuration of the desktop pool.
	NetworkConfiguration *DesktopPoolNetworkConfiguration `pulumi:"networkConfiguration"`
	// A list of network security groups for the private access.
	NsgIds []string `pulumi:"nsgIds"`
	// The details of the desktop's private access network connectivity to be set up for the desktop pool.
	PrivateAccessDetails *DesktopPoolPrivateAccessDetails `pulumi:"privateAccessDetails"`
	// The compute instance shape configuration requested for each desktop in the desktop pool.
	ShapeConfig *DesktopPoolShapeConfig `pulumi:"shapeConfig"`
	// The shape of the desktop pool.
	ShapeName *string `pulumi:"shapeName"`
	// (Updatable) The maximum number of standby desktops available in the desktop pool.
	StandbySize *int `pulumi:"standbySize"`
	// The current state of the desktop pool.
	State *string `pulumi:"state"`
	// The backup policy OCID of the storage.
	StorageBackupPolicyId *string `pulumi:"storageBackupPolicyId"`
	// The size in GBs of the storage for the desktop pool.
	StorageSizeInGbs *int `pulumi:"storageSizeInGbs"`
	// The date and time the resource was created.
	TimeCreated *string `pulumi:"timeCreated"`
	// (Updatable) The start time of the desktop pool.
	TimeStartScheduled *string `pulumi:"timeStartScheduled"`
	// (Updatable) The stop time of the desktop pool.
	TimeStopScheduled *string `pulumi:"timeStopScheduled"`
	// Indicates whether the desktop pool uses dedicated virtual machine hosts.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UseDedicatedVmHost *string `pulumi:"useDedicatedVmHost"`
}

type DesktopPoolState struct {
	// The number of active desktops in the desktop pool.
	ActiveDesktops pulumi.IntPtrInput
	// Indicates whether desktop pool users have administrative privileges on their desktop.
	ArePrivilegedUsers pulumi.BoolPtrInput
	// The availability domain of the desktop pool.
	AvailabilityDomain pulumi.StringPtrInput
	// (Updatable) Provides the start and stop schedule information for desktop availability of the desktop pool.
	AvailabilityPolicy DesktopPoolAvailabilityPolicyPtrInput
	// (Updatable) The OCID of the compartment which will contain the desktop pool.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Contact information of the desktop pool administrator. Avoid entering confidential information.
	ContactDetails pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user friendly description providing additional information about the resource. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
	DevicePolicy DesktopPoolDevicePolicyPtrInput
	// (Updatable) A user friendly display name. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Provides information about the desktop image.
	Image DesktopPoolImagePtrInput
	// Indicates whether storage is enabled for the desktop pool.
	IsStorageEnabled pulumi.BoolPtrInput
	// (Updatable) The maximum number of desktops permitted in the desktop pool.
	MaximumSize pulumi.IntPtrInput
	// Provides information about the network configuration of the desktop pool.
	NetworkConfiguration DesktopPoolNetworkConfigurationPtrInput
	// A list of network security groups for the private access.
	NsgIds pulumi.StringArrayInput
	// The details of the desktop's private access network connectivity to be set up for the desktop pool.
	PrivateAccessDetails DesktopPoolPrivateAccessDetailsPtrInput
	// The compute instance shape configuration requested for each desktop in the desktop pool.
	ShapeConfig DesktopPoolShapeConfigPtrInput
	// The shape of the desktop pool.
	ShapeName pulumi.StringPtrInput
	// (Updatable) The maximum number of standby desktops available in the desktop pool.
	StandbySize pulumi.IntPtrInput
	// The current state of the desktop pool.
	State pulumi.StringPtrInput
	// The backup policy OCID of the storage.
	StorageBackupPolicyId pulumi.StringPtrInput
	// The size in GBs of the storage for the desktop pool.
	StorageSizeInGbs pulumi.IntPtrInput
	// The date and time the resource was created.
	TimeCreated pulumi.StringPtrInput
	// (Updatable) The start time of the desktop pool.
	TimeStartScheduled pulumi.StringPtrInput
	// (Updatable) The stop time of the desktop pool.
	TimeStopScheduled pulumi.StringPtrInput
	// Indicates whether the desktop pool uses dedicated virtual machine hosts.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UseDedicatedVmHost pulumi.StringPtrInput
}

func (DesktopPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*desktopPoolState)(nil)).Elem()
}

type desktopPoolArgs struct {
	// Indicates whether desktop pool users have administrative privileges on their desktop.
	ArePrivilegedUsers bool `pulumi:"arePrivilegedUsers"`
	// The availability domain of the desktop pool.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// (Updatable) Provides the start and stop schedule information for desktop availability of the desktop pool.
	AvailabilityPolicy DesktopPoolAvailabilityPolicy `pulumi:"availabilityPolicy"`
	// (Updatable) The OCID of the compartment which will contain the desktop pool.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Contact information of the desktop pool administrator. Avoid entering confidential information.
	ContactDetails string `pulumi:"contactDetails"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user friendly description providing additional information about the resource. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
	DevicePolicy DesktopPoolDevicePolicy `pulumi:"devicePolicy"`
	// (Updatable) A user friendly display name. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Provides information about the desktop image.
	Image DesktopPoolImage `pulumi:"image"`
	// Indicates whether storage is enabled for the desktop pool.
	IsStorageEnabled bool `pulumi:"isStorageEnabled"`
	// (Updatable) The maximum number of desktops permitted in the desktop pool.
	MaximumSize int `pulumi:"maximumSize"`
	// Provides information about the network configuration of the desktop pool.
	NetworkConfiguration DesktopPoolNetworkConfiguration `pulumi:"networkConfiguration"`
	// A list of network security groups for the private access.
	NsgIds []string `pulumi:"nsgIds"`
	// The details of the desktop's private access network connectivity to be set up for the desktop pool.
	PrivateAccessDetails *DesktopPoolPrivateAccessDetails `pulumi:"privateAccessDetails"`
	// The compute instance shape configuration requested for each desktop in the desktop pool.
	ShapeConfig *DesktopPoolShapeConfig `pulumi:"shapeConfig"`
	// The shape of the desktop pool.
	ShapeName string `pulumi:"shapeName"`
	// (Updatable) The maximum number of standby desktops available in the desktop pool.
	StandbySize int `pulumi:"standbySize"`
	// The backup policy OCID of the storage.
	StorageBackupPolicyId string `pulumi:"storageBackupPolicyId"`
	// The size in GBs of the storage for the desktop pool.
	StorageSizeInGbs int `pulumi:"storageSizeInGbs"`
	// (Updatable) The start time of the desktop pool.
	TimeStartScheduled *string `pulumi:"timeStartScheduled"`
	// (Updatable) The stop time of the desktop pool.
	TimeStopScheduled *string `pulumi:"timeStopScheduled"`
	// Indicates whether the desktop pool uses dedicated virtual machine hosts.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UseDedicatedVmHost *string `pulumi:"useDedicatedVmHost"`
}

// The set of arguments for constructing a DesktopPool resource.
type DesktopPoolArgs struct {
	// Indicates whether desktop pool users have administrative privileges on their desktop.
	ArePrivilegedUsers pulumi.BoolInput
	// The availability domain of the desktop pool.
	AvailabilityDomain pulumi.StringInput
	// (Updatable) Provides the start and stop schedule information for desktop availability of the desktop pool.
	AvailabilityPolicy DesktopPoolAvailabilityPolicyInput
	// (Updatable) The OCID of the compartment which will contain the desktop pool.
	CompartmentId pulumi.StringInput
	// (Updatable) Contact information of the desktop pool administrator. Avoid entering confidential information.
	ContactDetails pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user friendly description providing additional information about the resource. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
	DevicePolicy DesktopPoolDevicePolicyInput
	// (Updatable) A user friendly display name. Avoid entering confidential information.
	DisplayName pulumi.StringInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput
	// Provides information about the desktop image.
	Image DesktopPoolImageInput
	// Indicates whether storage is enabled for the desktop pool.
	IsStorageEnabled pulumi.BoolInput
	// (Updatable) The maximum number of desktops permitted in the desktop pool.
	MaximumSize pulumi.IntInput
	// Provides information about the network configuration of the desktop pool.
	NetworkConfiguration DesktopPoolNetworkConfigurationInput
	// A list of network security groups for the private access.
	NsgIds pulumi.StringArrayInput
	// The details of the desktop's private access network connectivity to be set up for the desktop pool.
	PrivateAccessDetails DesktopPoolPrivateAccessDetailsPtrInput
	// The compute instance shape configuration requested for each desktop in the desktop pool.
	ShapeConfig DesktopPoolShapeConfigPtrInput
	// The shape of the desktop pool.
	ShapeName pulumi.StringInput
	// (Updatable) The maximum number of standby desktops available in the desktop pool.
	StandbySize pulumi.IntInput
	// The backup policy OCID of the storage.
	StorageBackupPolicyId pulumi.StringInput
	// The size in GBs of the storage for the desktop pool.
	StorageSizeInGbs pulumi.IntInput
	// (Updatable) The start time of the desktop pool.
	TimeStartScheduled pulumi.StringPtrInput
	// (Updatable) The stop time of the desktop pool.
	TimeStopScheduled pulumi.StringPtrInput
	// Indicates whether the desktop pool uses dedicated virtual machine hosts.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	UseDedicatedVmHost pulumi.StringPtrInput
}

func (DesktopPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*desktopPoolArgs)(nil)).Elem()
}

type DesktopPoolInput interface {
	pulumi.Input

	ToDesktopPoolOutput() DesktopPoolOutput
	ToDesktopPoolOutputWithContext(ctx context.Context) DesktopPoolOutput
}

func (*DesktopPool) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPool)(nil)).Elem()
}

func (i *DesktopPool) ToDesktopPoolOutput() DesktopPoolOutput {
	return i.ToDesktopPoolOutputWithContext(context.Background())
}

func (i *DesktopPool) ToDesktopPoolOutputWithContext(ctx context.Context) DesktopPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolOutput)
}

// DesktopPoolArrayInput is an input type that accepts DesktopPoolArray and DesktopPoolArrayOutput values.
// You can construct a concrete instance of `DesktopPoolArrayInput` via:
//
//	DesktopPoolArray{ DesktopPoolArgs{...} }
type DesktopPoolArrayInput interface {
	pulumi.Input

	ToDesktopPoolArrayOutput() DesktopPoolArrayOutput
	ToDesktopPoolArrayOutputWithContext(context.Context) DesktopPoolArrayOutput
}

type DesktopPoolArray []DesktopPoolInput

func (DesktopPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DesktopPool)(nil)).Elem()
}

func (i DesktopPoolArray) ToDesktopPoolArrayOutput() DesktopPoolArrayOutput {
	return i.ToDesktopPoolArrayOutputWithContext(context.Background())
}

func (i DesktopPoolArray) ToDesktopPoolArrayOutputWithContext(ctx context.Context) DesktopPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolArrayOutput)
}

// DesktopPoolMapInput is an input type that accepts DesktopPoolMap and DesktopPoolMapOutput values.
// You can construct a concrete instance of `DesktopPoolMapInput` via:
//
//	DesktopPoolMap{ "key": DesktopPoolArgs{...} }
type DesktopPoolMapInput interface {
	pulumi.Input

	ToDesktopPoolMapOutput() DesktopPoolMapOutput
	ToDesktopPoolMapOutputWithContext(context.Context) DesktopPoolMapOutput
}

type DesktopPoolMap map[string]DesktopPoolInput

func (DesktopPoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DesktopPool)(nil)).Elem()
}

func (i DesktopPoolMap) ToDesktopPoolMapOutput() DesktopPoolMapOutput {
	return i.ToDesktopPoolMapOutputWithContext(context.Background())
}

func (i DesktopPoolMap) ToDesktopPoolMapOutputWithContext(ctx context.Context) DesktopPoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolMapOutput)
}

type DesktopPoolOutput struct{ *pulumi.OutputState }

func (DesktopPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPool)(nil)).Elem()
}

func (o DesktopPoolOutput) ToDesktopPoolOutput() DesktopPoolOutput {
	return o
}

func (o DesktopPoolOutput) ToDesktopPoolOutputWithContext(ctx context.Context) DesktopPoolOutput {
	return o
}

// The number of active desktops in the desktop pool.
func (o DesktopPoolOutput) ActiveDesktops() pulumi.IntOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.IntOutput { return v.ActiveDesktops }).(pulumi.IntOutput)
}

// Indicates whether desktop pool users have administrative privileges on their desktop.
func (o DesktopPoolOutput) ArePrivilegedUsers() pulumi.BoolOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.BoolOutput { return v.ArePrivilegedUsers }).(pulumi.BoolOutput)
}

// The availability domain of the desktop pool.
func (o DesktopPoolOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// (Updatable) Provides the start and stop schedule information for desktop availability of the desktop pool.
func (o DesktopPoolOutput) AvailabilityPolicy() DesktopPoolAvailabilityPolicyOutput {
	return o.ApplyT(func(v *DesktopPool) DesktopPoolAvailabilityPolicyOutput { return v.AvailabilityPolicy }).(DesktopPoolAvailabilityPolicyOutput)
}

// (Updatable) The OCID of the compartment which will contain the desktop pool.
func (o DesktopPoolOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Contact information of the desktop pool administrator. Avoid entering confidential information.
func (o DesktopPoolOutput) ContactDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringOutput { return v.ContactDetails }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o DesktopPoolOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user friendly description providing additional information about the resource. Avoid entering confidential information.
func (o DesktopPoolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
func (o DesktopPoolOutput) DevicePolicy() DesktopPoolDevicePolicyOutput {
	return o.ApplyT(func(v *DesktopPool) DesktopPoolDevicePolicyOutput { return v.DevicePolicy }).(DesktopPoolDevicePolicyOutput)
}

// (Updatable) A user friendly display name. Avoid entering confidential information.
func (o DesktopPoolOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o DesktopPoolOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Provides information about the desktop image.
func (o DesktopPoolOutput) Image() DesktopPoolImageOutput {
	return o.ApplyT(func(v *DesktopPool) DesktopPoolImageOutput { return v.Image }).(DesktopPoolImageOutput)
}

// Indicates whether storage is enabled for the desktop pool.
func (o DesktopPoolOutput) IsStorageEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.BoolOutput { return v.IsStorageEnabled }).(pulumi.BoolOutput)
}

// (Updatable) The maximum number of desktops permitted in the desktop pool.
func (o DesktopPoolOutput) MaximumSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.IntOutput { return v.MaximumSize }).(pulumi.IntOutput)
}

// Provides information about the network configuration of the desktop pool.
func (o DesktopPoolOutput) NetworkConfiguration() DesktopPoolNetworkConfigurationOutput {
	return o.ApplyT(func(v *DesktopPool) DesktopPoolNetworkConfigurationOutput { return v.NetworkConfiguration }).(DesktopPoolNetworkConfigurationOutput)
}

// A list of network security groups for the private access.
func (o DesktopPoolOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringArrayOutput { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The details of the desktop's private access network connectivity to be set up for the desktop pool.
func (o DesktopPoolOutput) PrivateAccessDetails() DesktopPoolPrivateAccessDetailsOutput {
	return o.ApplyT(func(v *DesktopPool) DesktopPoolPrivateAccessDetailsOutput { return v.PrivateAccessDetails }).(DesktopPoolPrivateAccessDetailsOutput)
}

// The compute instance shape configuration requested for each desktop in the desktop pool.
func (o DesktopPoolOutput) ShapeConfig() DesktopPoolShapeConfigOutput {
	return o.ApplyT(func(v *DesktopPool) DesktopPoolShapeConfigOutput { return v.ShapeConfig }).(DesktopPoolShapeConfigOutput)
}

// The shape of the desktop pool.
func (o DesktopPoolOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringOutput { return v.ShapeName }).(pulumi.StringOutput)
}

// (Updatable) The maximum number of standby desktops available in the desktop pool.
func (o DesktopPoolOutput) StandbySize() pulumi.IntOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.IntOutput { return v.StandbySize }).(pulumi.IntOutput)
}

// The current state of the desktop pool.
func (o DesktopPoolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The backup policy OCID of the storage.
func (o DesktopPoolOutput) StorageBackupPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringOutput { return v.StorageBackupPolicyId }).(pulumi.StringOutput)
}

// The size in GBs of the storage for the desktop pool.
func (o DesktopPoolOutput) StorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.IntOutput { return v.StorageSizeInGbs }).(pulumi.IntOutput)
}

// The date and time the resource was created.
func (o DesktopPoolOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// (Updatable) The start time of the desktop pool.
func (o DesktopPoolOutput) TimeStartScheduled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringPtrOutput { return v.TimeStartScheduled }).(pulumi.StringPtrOutput)
}

// (Updatable) The stop time of the desktop pool.
func (o DesktopPoolOutput) TimeStopScheduled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringPtrOutput { return v.TimeStopScheduled }).(pulumi.StringPtrOutput)
}

// Indicates whether the desktop pool uses dedicated virtual machine hosts.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DesktopPoolOutput) UseDedicatedVmHost() pulumi.StringOutput {
	return o.ApplyT(func(v *DesktopPool) pulumi.StringOutput { return v.UseDedicatedVmHost }).(pulumi.StringOutput)
}

type DesktopPoolArrayOutput struct{ *pulumi.OutputState }

func (DesktopPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DesktopPool)(nil)).Elem()
}

func (o DesktopPoolArrayOutput) ToDesktopPoolArrayOutput() DesktopPoolArrayOutput {
	return o
}

func (o DesktopPoolArrayOutput) ToDesktopPoolArrayOutputWithContext(ctx context.Context) DesktopPoolArrayOutput {
	return o
}

func (o DesktopPoolArrayOutput) Index(i pulumi.IntInput) DesktopPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DesktopPool {
		return vs[0].([]*DesktopPool)[vs[1].(int)]
	}).(DesktopPoolOutput)
}

type DesktopPoolMapOutput struct{ *pulumi.OutputState }

func (DesktopPoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DesktopPool)(nil)).Elem()
}

func (o DesktopPoolMapOutput) ToDesktopPoolMapOutput() DesktopPoolMapOutput {
	return o
}

func (o DesktopPoolMapOutput) ToDesktopPoolMapOutputWithContext(ctx context.Context) DesktopPoolMapOutput {
	return o
}

func (o DesktopPoolMapOutput) MapIndex(k pulumi.StringInput) DesktopPoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DesktopPool {
		return vs[0].(map[string]*DesktopPool)[vs[1].(string)]
	}).(DesktopPoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolInput)(nil)).Elem(), &DesktopPool{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolArrayInput)(nil)).Elem(), DesktopPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolMapInput)(nil)).Elem(), DesktopPoolMap{})
	pulumi.RegisterOutputType(DesktopPoolOutput{})
	pulumi.RegisterOutputType(DesktopPoolArrayOutput{})
	pulumi.RegisterOutputType(DesktopPoolMapOutput{})
}
