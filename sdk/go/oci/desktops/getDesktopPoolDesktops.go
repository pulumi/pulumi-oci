// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package desktops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Desktop Pool Desktops in Oracle Cloud Infrastructure Desktops service.
//
// Returns a list of desktops within a given desktop pool. You can limit the results to an availability domain, desktop name, or desktop state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/desktops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := desktops.GetDesktopPoolDesktops(ctx, &desktops.GetDesktopPoolDesktopsArgs{
//				CompartmentId:      compartmentId,
//				DesktopPoolId:      testDesktopPool.Id,
//				AvailabilityDomain: pulumi.StringRef(desktopPoolDesktopAvailabilityDomain),
//				DisplayName:        pulumi.StringRef(desktopPoolDesktopDisplayName),
//				Id:                 pulumi.StringRef(desktopPoolDesktopId),
//				State:              pulumi.StringRef(desktopPoolDesktopState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDesktopPoolDesktops(ctx *pulumi.Context, args *GetDesktopPoolDesktopsArgs, opts ...pulumi.InvokeOption) (*GetDesktopPoolDesktopsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDesktopPoolDesktopsResult
	err := ctx.Invoke("oci:Desktops/getDesktopPoolDesktops:getDesktopPoolDesktops", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDesktopPoolDesktops.
type GetDesktopPoolDesktopsArgs struct {
	// The name of the availability domain.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The OCID of the compartment of the desktop pool.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the desktop pool.
	DesktopPoolId string `pulumi:"desktopPoolId"`
	// A filter to return only results with the given displayName.
	DisplayName *string                        `pulumi:"displayName"`
	Filters     []GetDesktopPoolDesktopsFilter `pulumi:"filters"`
	// A filter to return only results with the given OCID.
	Id *string `pulumi:"id"`
	// A filter to return only results with the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDesktopPoolDesktops.
type GetDesktopPoolDesktopsResult struct {
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	CompartmentId      string  `pulumi:"compartmentId"`
	// The list of desktop_pool_desktop_collection.
	DesktopPoolDesktopCollections []GetDesktopPoolDesktopsDesktopPoolDesktopCollection `pulumi:"desktopPoolDesktopCollections"`
	DesktopPoolId                 string                                               `pulumi:"desktopPoolId"`
	DisplayName                   *string                                              `pulumi:"displayName"`
	Filters                       []GetDesktopPoolDesktopsFilter                       `pulumi:"filters"`
	Id                            *string                                              `pulumi:"id"`
	// The state of the desktop.
	State *string `pulumi:"state"`
}

func GetDesktopPoolDesktopsOutput(ctx *pulumi.Context, args GetDesktopPoolDesktopsOutputArgs, opts ...pulumi.InvokeOption) GetDesktopPoolDesktopsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDesktopPoolDesktopsResultOutput, error) {
			args := v.(GetDesktopPoolDesktopsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Desktops/getDesktopPoolDesktops:getDesktopPoolDesktops", args, GetDesktopPoolDesktopsResultOutput{}, options).(GetDesktopPoolDesktopsResultOutput), nil
		}).(GetDesktopPoolDesktopsResultOutput)
}

// A collection of arguments for invoking getDesktopPoolDesktops.
type GetDesktopPoolDesktopsOutputArgs struct {
	// The name of the availability domain.
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The OCID of the compartment of the desktop pool.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the desktop pool.
	DesktopPoolId pulumi.StringInput `pulumi:"desktopPoolId"`
	// A filter to return only results with the given displayName.
	DisplayName pulumi.StringPtrInput                  `pulumi:"displayName"`
	Filters     GetDesktopPoolDesktopsFilterArrayInput `pulumi:"filters"`
	// A filter to return only results with the given OCID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only results with the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDesktopPoolDesktopsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolDesktopsArgs)(nil)).Elem()
}

// A collection of values returned by getDesktopPoolDesktops.
type GetDesktopPoolDesktopsResultOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolDesktopsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolDesktopsResult)(nil)).Elem()
}

func (o GetDesktopPoolDesktopsResultOutput) ToGetDesktopPoolDesktopsResultOutput() GetDesktopPoolDesktopsResultOutput {
	return o
}

func (o GetDesktopPoolDesktopsResultOutput) ToGetDesktopPoolDesktopsResultOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsResultOutput {
	return o
}

func (o GetDesktopPoolDesktopsResultOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsResult) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

func (o GetDesktopPoolDesktopsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of desktop_pool_desktop_collection.
func (o GetDesktopPoolDesktopsResultOutput) DesktopPoolDesktopCollections() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsResult) []GetDesktopPoolDesktopsDesktopPoolDesktopCollection {
		return v.DesktopPoolDesktopCollections
	}).(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput)
}

func (o GetDesktopPoolDesktopsResultOutput) DesktopPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsResult) string { return v.DesktopPoolId }).(pulumi.StringOutput)
}

func (o GetDesktopPoolDesktopsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDesktopPoolDesktopsResultOutput) Filters() GetDesktopPoolDesktopsFilterArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsResult) []GetDesktopPoolDesktopsFilter { return v.Filters }).(GetDesktopPoolDesktopsFilterArrayOutput)
}

func (o GetDesktopPoolDesktopsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The state of the desktop.
func (o GetDesktopPoolDesktopsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDesktopPoolDesktopsResultOutput{})
}
