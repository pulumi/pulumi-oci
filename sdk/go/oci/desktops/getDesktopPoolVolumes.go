// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package desktops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Desktop Pool Volumes in Oracle Cloud Infrastructure Desktops service.
//
// Returns a list of volumes within the given desktop pool. You can limit the results to an availability domain, volume name, or volume state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/desktops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := desktops.GetDesktopPoolVolumes(ctx, &desktops.GetDesktopPoolVolumesArgs{
//				CompartmentId:      compartmentId,
//				DesktopPoolId:      testDesktopPool.Id,
//				AvailabilityDomain: pulumi.StringRef(desktopPoolVolumeAvailabilityDomain),
//				DisplayName:        pulumi.StringRef(desktopPoolVolumeDisplayName),
//				Id:                 pulumi.StringRef(desktopPoolVolumeId),
//				State:              pulumi.StringRef(desktopPoolVolumeState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDesktopPoolVolumes(ctx *pulumi.Context, args *GetDesktopPoolVolumesArgs, opts ...pulumi.InvokeOption) (*GetDesktopPoolVolumesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDesktopPoolVolumesResult
	err := ctx.Invoke("oci:Desktops/getDesktopPoolVolumes:getDesktopPoolVolumes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDesktopPoolVolumes.
type GetDesktopPoolVolumesArgs struct {
	// The name of the availability domain.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The OCID of the compartment of the desktop pool.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the desktop pool.
	DesktopPoolId string `pulumi:"desktopPoolId"`
	// A filter to return only results with the given displayName.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetDesktopPoolVolumesFilter `pulumi:"filters"`
	// A filter to return only results with the given OCID.
	Id *string `pulumi:"id"`
	// A filter to return only results with the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDesktopPoolVolumes.
type GetDesktopPoolVolumesResult struct {
	// The availability domain of the desktop pool.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	CompartmentId      string  `pulumi:"compartmentId"`
	DesktopPoolId      string  `pulumi:"desktopPoolId"`
	// The list of desktop_pool_volume_collection.
	DesktopPoolVolumeCollections []GetDesktopPoolVolumesDesktopPoolVolumeCollection `pulumi:"desktopPoolVolumeCollections"`
	DisplayName                  *string                                            `pulumi:"displayName"`
	Filters                      []GetDesktopPoolVolumesFilter                      `pulumi:"filters"`
	// The OCID of the desktop pool volume.
	Id *string `pulumi:"id"`
	// The state of the desktop pool volume.
	State *string `pulumi:"state"`
}

func GetDesktopPoolVolumesOutput(ctx *pulumi.Context, args GetDesktopPoolVolumesOutputArgs, opts ...pulumi.InvokeOption) GetDesktopPoolVolumesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDesktopPoolVolumesResultOutput, error) {
			args := v.(GetDesktopPoolVolumesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Desktops/getDesktopPoolVolumes:getDesktopPoolVolumes", args, GetDesktopPoolVolumesResultOutput{}, options).(GetDesktopPoolVolumesResultOutput), nil
		}).(GetDesktopPoolVolumesResultOutput)
}

// A collection of arguments for invoking getDesktopPoolVolumes.
type GetDesktopPoolVolumesOutputArgs struct {
	// The name of the availability domain.
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The OCID of the compartment of the desktop pool.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the desktop pool.
	DesktopPoolId pulumi.StringInput `pulumi:"desktopPoolId"`
	// A filter to return only results with the given displayName.
	DisplayName pulumi.StringPtrInput                 `pulumi:"displayName"`
	Filters     GetDesktopPoolVolumesFilterArrayInput `pulumi:"filters"`
	// A filter to return only results with the given OCID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only results with the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDesktopPoolVolumesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolVolumesArgs)(nil)).Elem()
}

// A collection of values returned by getDesktopPoolVolumes.
type GetDesktopPoolVolumesResultOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolVolumesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolVolumesResult)(nil)).Elem()
}

func (o GetDesktopPoolVolumesResultOutput) ToGetDesktopPoolVolumesResultOutput() GetDesktopPoolVolumesResultOutput {
	return o
}

func (o GetDesktopPoolVolumesResultOutput) ToGetDesktopPoolVolumesResultOutputWithContext(ctx context.Context) GetDesktopPoolVolumesResultOutput {
	return o
}

// The availability domain of the desktop pool.
func (o GetDesktopPoolVolumesResultOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesResult) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

func (o GetDesktopPoolVolumesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetDesktopPoolVolumesResultOutput) DesktopPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesResult) string { return v.DesktopPoolId }).(pulumi.StringOutput)
}

// The list of desktop_pool_volume_collection.
func (o GetDesktopPoolVolumesResultOutput) DesktopPoolVolumeCollections() GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesResult) []GetDesktopPoolVolumesDesktopPoolVolumeCollection {
		return v.DesktopPoolVolumeCollections
	}).(GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput)
}

func (o GetDesktopPoolVolumesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDesktopPoolVolumesResultOutput) Filters() GetDesktopPoolVolumesFilterArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesResult) []GetDesktopPoolVolumesFilter { return v.Filters }).(GetDesktopPoolVolumesFilterArrayOutput)
}

// The OCID of the desktop pool volume.
func (o GetDesktopPoolVolumesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The state of the desktop pool volume.
func (o GetDesktopPoolVolumesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDesktopPoolVolumesResultOutput{})
}
