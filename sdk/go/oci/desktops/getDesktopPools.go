// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package desktops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Desktop Pools in Oracle Cloud Infrastructure Desktops service.
//
// Returns a list of desktop pools within the given compartment. You can limit the results to an availability domain, pool name, or pool state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Desktops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Desktops.GetDesktopPools(ctx, &desktops.GetDesktopPoolsArgs{
//				CompartmentId:      compartmentId,
//				AvailabilityDomain: pulumi.StringRef(desktopPoolAvailabilityDomain),
//				DisplayName:        pulumi.StringRef(desktopPoolDisplayName),
//				Id:                 pulumi.StringRef(desktopPoolId),
//				State:              pulumi.StringRef(desktopPoolState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDesktopPools(ctx *pulumi.Context, args *GetDesktopPoolsArgs, opts ...pulumi.InvokeOption) (*GetDesktopPoolsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDesktopPoolsResult
	err := ctx.Invoke("oci:Desktops/getDesktopPools:getDesktopPools", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDesktopPools.
type GetDesktopPoolsArgs struct {
	// The name of the availability domain.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The OCID of the compartment of the desktop pool.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to return only results with the given displayName.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetDesktopPoolsFilter `pulumi:"filters"`
	// A filter to return only results with the given OCID.
	Id *string `pulumi:"id"`
	// A filter to return only results with the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDesktopPools.
type GetDesktopPoolsResult struct {
	// The availability domain of the desktop pool.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The OCID of the compartment of the desktop pool.
	CompartmentId string `pulumi:"compartmentId"`
	// The list of desktop_pool_collection.
	DesktopPoolCollections []GetDesktopPoolsDesktopPoolCollection `pulumi:"desktopPoolCollections"`
	// A user friendly display name. Avoid entering confidential information.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetDesktopPoolsFilter `pulumi:"filters"`
	// The OCID of the desktop pool.
	Id *string `pulumi:"id"`
	// The current state of the desktop pool.
	State *string `pulumi:"state"`
}

func GetDesktopPoolsOutput(ctx *pulumi.Context, args GetDesktopPoolsOutputArgs, opts ...pulumi.InvokeOption) GetDesktopPoolsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDesktopPoolsResultOutput, error) {
			args := v.(GetDesktopPoolsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Desktops/getDesktopPools:getDesktopPools", args, GetDesktopPoolsResultOutput{}, options).(GetDesktopPoolsResultOutput), nil
		}).(GetDesktopPoolsResultOutput)
}

// A collection of arguments for invoking getDesktopPools.
type GetDesktopPoolsOutputArgs struct {
	// The name of the availability domain.
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The OCID of the compartment of the desktop pool.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to return only results with the given displayName.
	DisplayName pulumi.StringPtrInput           `pulumi:"displayName"`
	Filters     GetDesktopPoolsFilterArrayInput `pulumi:"filters"`
	// A filter to return only results with the given OCID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only results with the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDesktopPoolsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsArgs)(nil)).Elem()
}

// A collection of values returned by getDesktopPools.
type GetDesktopPoolsResultOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsResult)(nil)).Elem()
}

func (o GetDesktopPoolsResultOutput) ToGetDesktopPoolsResultOutput() GetDesktopPoolsResultOutput {
	return o
}

func (o GetDesktopPoolsResultOutput) ToGetDesktopPoolsResultOutputWithContext(ctx context.Context) GetDesktopPoolsResultOutput {
	return o
}

// The availability domain of the desktop pool.
func (o GetDesktopPoolsResultOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolsResult) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

// The OCID of the compartment of the desktop pool.
func (o GetDesktopPoolsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of desktop_pool_collection.
func (o GetDesktopPoolsResultOutput) DesktopPoolCollections() GetDesktopPoolsDesktopPoolCollectionArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsResult) []GetDesktopPoolsDesktopPoolCollection { return v.DesktopPoolCollections }).(GetDesktopPoolsDesktopPoolCollectionArrayOutput)
}

// A user friendly display name. Avoid entering confidential information.
func (o GetDesktopPoolsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDesktopPoolsResultOutput) Filters() GetDesktopPoolsFilterArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsResult) []GetDesktopPoolsFilter { return v.Filters }).(GetDesktopPoolsFilterArrayOutput)
}

// The OCID of the desktop pool.
func (o GetDesktopPoolsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the desktop pool.
func (o GetDesktopPoolsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDesktopPoolsResultOutput{})
}
