// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package desktops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Desktops in Oracle Cloud Infrastructure Desktops service.
//
// Returns a list of desktops filtered by the specified parameters. You can limit the results to an availability domain, desktop name, desktop OCID, desktop state, pool OCID, or compartment OCID. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Desktops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Desktops.GetDesktops(ctx, &desktops.GetDesktopsArgs{
//				CompartmentId:      compartmentId,
//				AvailabilityDomain: pulumi.StringRef(desktopAvailabilityDomain),
//				DesktopPoolId:      pulumi.StringRef(testDesktopPool.Id),
//				DisplayName:        pulumi.StringRef(desktopDisplayName),
//				Id:                 pulumi.StringRef(desktopId),
//				State:              pulumi.StringRef(desktopState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDesktops(ctx *pulumi.Context, args *GetDesktopsArgs, opts ...pulumi.InvokeOption) (*GetDesktopsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDesktopsResult
	err := ctx.Invoke("oci:Desktops/getDesktops:getDesktops", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDesktops.
type GetDesktopsArgs struct {
	// The name of the availability domain.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// The OCID of the compartment of the desktop pool.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the desktop pool.
	DesktopPoolId *string `pulumi:"desktopPoolId"`
	// A filter to return only results with the given displayName.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetDesktopsFilter `pulumi:"filters"`
	// A filter to return only results with the given OCID.
	Id *string `pulumi:"id"`
	// A filter to return only results with the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDesktops.
type GetDesktopsResult struct {
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	CompartmentId      string  `pulumi:"compartmentId"`
	// The list of desktop_collection.
	DesktopCollections []GetDesktopsDesktopCollection `pulumi:"desktopCollections"`
	DesktopPoolId      *string                        `pulumi:"desktopPoolId"`
	// A user friendly display name. Avoid entering confidential information.
	DisplayName *string             `pulumi:"displayName"`
	Filters     []GetDesktopsFilter `pulumi:"filters"`
	// The OCID of the desktop.
	Id *string `pulumi:"id"`
	// The state of the desktop.
	State *string `pulumi:"state"`
}

func GetDesktopsOutput(ctx *pulumi.Context, args GetDesktopsOutputArgs, opts ...pulumi.InvokeOption) GetDesktopsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDesktopsResultOutput, error) {
			args := v.(GetDesktopsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Desktops/getDesktops:getDesktops", args, GetDesktopsResultOutput{}, options).(GetDesktopsResultOutput), nil
		}).(GetDesktopsResultOutput)
}

// A collection of arguments for invoking getDesktops.
type GetDesktopsOutputArgs struct {
	// The name of the availability domain.
	AvailabilityDomain pulumi.StringPtrInput `pulumi:"availabilityDomain"`
	// The OCID of the compartment of the desktop pool.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the desktop pool.
	DesktopPoolId pulumi.StringPtrInput `pulumi:"desktopPoolId"`
	// A filter to return only results with the given displayName.
	DisplayName pulumi.StringPtrInput       `pulumi:"displayName"`
	Filters     GetDesktopsFilterArrayInput `pulumi:"filters"`
	// A filter to return only results with the given OCID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only results with the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDesktopsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopsArgs)(nil)).Elem()
}

// A collection of values returned by getDesktops.
type GetDesktopsResultOutput struct{ *pulumi.OutputState }

func (GetDesktopsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopsResult)(nil)).Elem()
}

func (o GetDesktopsResultOutput) ToGetDesktopsResultOutput() GetDesktopsResultOutput {
	return o
}

func (o GetDesktopsResultOutput) ToGetDesktopsResultOutputWithContext(ctx context.Context) GetDesktopsResultOutput {
	return o
}

func (o GetDesktopsResultOutput) AvailabilityDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopsResult) *string { return v.AvailabilityDomain }).(pulumi.StringPtrOutput)
}

func (o GetDesktopsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The list of desktop_collection.
func (o GetDesktopsResultOutput) DesktopCollections() GetDesktopsDesktopCollectionArrayOutput {
	return o.ApplyT(func(v GetDesktopsResult) []GetDesktopsDesktopCollection { return v.DesktopCollections }).(GetDesktopsDesktopCollectionArrayOutput)
}

func (o GetDesktopsResultOutput) DesktopPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopsResult) *string { return v.DesktopPoolId }).(pulumi.StringPtrOutput)
}

// A user friendly display name. Avoid entering confidential information.
func (o GetDesktopsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDesktopsResultOutput) Filters() GetDesktopsFilterArrayOutput {
	return o.ApplyT(func(v GetDesktopsResult) []GetDesktopsFilter { return v.Filters }).(GetDesktopsFilterArrayOutput)
}

// The OCID of the desktop.
func (o GetDesktopsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The state of the desktop.
func (o GetDesktopsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDesktopsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDesktopsResultOutput{})
}
