// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package desktops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DesktopPoolAvailabilityPolicy struct {
	// (Updatable) Provides the schedule information for a desktop.
	StartSchedule *DesktopPoolAvailabilityPolicyStartSchedule `pulumi:"startSchedule"`
	// (Updatable) Provides the schedule information for a desktop.
	StopSchedule *DesktopPoolAvailabilityPolicyStopSchedule `pulumi:"stopSchedule"`
}

// DesktopPoolAvailabilityPolicyInput is an input type that accepts DesktopPoolAvailabilityPolicyArgs and DesktopPoolAvailabilityPolicyOutput values.
// You can construct a concrete instance of `DesktopPoolAvailabilityPolicyInput` via:
//
//	DesktopPoolAvailabilityPolicyArgs{...}
type DesktopPoolAvailabilityPolicyInput interface {
	pulumi.Input

	ToDesktopPoolAvailabilityPolicyOutput() DesktopPoolAvailabilityPolicyOutput
	ToDesktopPoolAvailabilityPolicyOutputWithContext(context.Context) DesktopPoolAvailabilityPolicyOutput
}

type DesktopPoolAvailabilityPolicyArgs struct {
	// (Updatable) Provides the schedule information for a desktop.
	StartSchedule DesktopPoolAvailabilityPolicyStartSchedulePtrInput `pulumi:"startSchedule"`
	// (Updatable) Provides the schedule information for a desktop.
	StopSchedule DesktopPoolAvailabilityPolicyStopSchedulePtrInput `pulumi:"stopSchedule"`
}

func (DesktopPoolAvailabilityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolAvailabilityPolicy)(nil)).Elem()
}

func (i DesktopPoolAvailabilityPolicyArgs) ToDesktopPoolAvailabilityPolicyOutput() DesktopPoolAvailabilityPolicyOutput {
	return i.ToDesktopPoolAvailabilityPolicyOutputWithContext(context.Background())
}

func (i DesktopPoolAvailabilityPolicyArgs) ToDesktopPoolAvailabilityPolicyOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolAvailabilityPolicyOutput)
}

func (i DesktopPoolAvailabilityPolicyArgs) ToDesktopPoolAvailabilityPolicyPtrOutput() DesktopPoolAvailabilityPolicyPtrOutput {
	return i.ToDesktopPoolAvailabilityPolicyPtrOutputWithContext(context.Background())
}

func (i DesktopPoolAvailabilityPolicyArgs) ToDesktopPoolAvailabilityPolicyPtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolAvailabilityPolicyOutput).ToDesktopPoolAvailabilityPolicyPtrOutputWithContext(ctx)
}

// DesktopPoolAvailabilityPolicyPtrInput is an input type that accepts DesktopPoolAvailabilityPolicyArgs, DesktopPoolAvailabilityPolicyPtr and DesktopPoolAvailabilityPolicyPtrOutput values.
// You can construct a concrete instance of `DesktopPoolAvailabilityPolicyPtrInput` via:
//
//	        DesktopPoolAvailabilityPolicyArgs{...}
//
//	or:
//
//	        nil
type DesktopPoolAvailabilityPolicyPtrInput interface {
	pulumi.Input

	ToDesktopPoolAvailabilityPolicyPtrOutput() DesktopPoolAvailabilityPolicyPtrOutput
	ToDesktopPoolAvailabilityPolicyPtrOutputWithContext(context.Context) DesktopPoolAvailabilityPolicyPtrOutput
}

type desktopPoolAvailabilityPolicyPtrType DesktopPoolAvailabilityPolicyArgs

func DesktopPoolAvailabilityPolicyPtr(v *DesktopPoolAvailabilityPolicyArgs) DesktopPoolAvailabilityPolicyPtrInput {
	return (*desktopPoolAvailabilityPolicyPtrType)(v)
}

func (*desktopPoolAvailabilityPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolAvailabilityPolicy)(nil)).Elem()
}

func (i *desktopPoolAvailabilityPolicyPtrType) ToDesktopPoolAvailabilityPolicyPtrOutput() DesktopPoolAvailabilityPolicyPtrOutput {
	return i.ToDesktopPoolAvailabilityPolicyPtrOutputWithContext(context.Background())
}

func (i *desktopPoolAvailabilityPolicyPtrType) ToDesktopPoolAvailabilityPolicyPtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolAvailabilityPolicyPtrOutput)
}

type DesktopPoolAvailabilityPolicyOutput struct{ *pulumi.OutputState }

func (DesktopPoolAvailabilityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolAvailabilityPolicy)(nil)).Elem()
}

func (o DesktopPoolAvailabilityPolicyOutput) ToDesktopPoolAvailabilityPolicyOutput() DesktopPoolAvailabilityPolicyOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyOutput) ToDesktopPoolAvailabilityPolicyOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyOutput) ToDesktopPoolAvailabilityPolicyPtrOutput() DesktopPoolAvailabilityPolicyPtrOutput {
	return o.ToDesktopPoolAvailabilityPolicyPtrOutputWithContext(context.Background())
}

func (o DesktopPoolAvailabilityPolicyOutput) ToDesktopPoolAvailabilityPolicyPtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DesktopPoolAvailabilityPolicy) *DesktopPoolAvailabilityPolicy {
		return &v
	}).(DesktopPoolAvailabilityPolicyPtrOutput)
}

// (Updatable) Provides the schedule information for a desktop.
func (o DesktopPoolAvailabilityPolicyOutput) StartSchedule() DesktopPoolAvailabilityPolicyStartSchedulePtrOutput {
	return o.ApplyT(func(v DesktopPoolAvailabilityPolicy) *DesktopPoolAvailabilityPolicyStartSchedule {
		return v.StartSchedule
	}).(DesktopPoolAvailabilityPolicyStartSchedulePtrOutput)
}

// (Updatable) Provides the schedule information for a desktop.
func (o DesktopPoolAvailabilityPolicyOutput) StopSchedule() DesktopPoolAvailabilityPolicyStopSchedulePtrOutput {
	return o.ApplyT(func(v DesktopPoolAvailabilityPolicy) *DesktopPoolAvailabilityPolicyStopSchedule {
		return v.StopSchedule
	}).(DesktopPoolAvailabilityPolicyStopSchedulePtrOutput)
}

type DesktopPoolAvailabilityPolicyPtrOutput struct{ *pulumi.OutputState }

func (DesktopPoolAvailabilityPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolAvailabilityPolicy)(nil)).Elem()
}

func (o DesktopPoolAvailabilityPolicyPtrOutput) ToDesktopPoolAvailabilityPolicyPtrOutput() DesktopPoolAvailabilityPolicyPtrOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyPtrOutput) ToDesktopPoolAvailabilityPolicyPtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyPtrOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyPtrOutput) Elem() DesktopPoolAvailabilityPolicyOutput {
	return o.ApplyT(func(v *DesktopPoolAvailabilityPolicy) DesktopPoolAvailabilityPolicy {
		if v != nil {
			return *v
		}
		var ret DesktopPoolAvailabilityPolicy
		return ret
	}).(DesktopPoolAvailabilityPolicyOutput)
}

// (Updatable) Provides the schedule information for a desktop.
func (o DesktopPoolAvailabilityPolicyPtrOutput) StartSchedule() DesktopPoolAvailabilityPolicyStartSchedulePtrOutput {
	return o.ApplyT(func(v *DesktopPoolAvailabilityPolicy) *DesktopPoolAvailabilityPolicyStartSchedule {
		if v == nil {
			return nil
		}
		return v.StartSchedule
	}).(DesktopPoolAvailabilityPolicyStartSchedulePtrOutput)
}

// (Updatable) Provides the schedule information for a desktop.
func (o DesktopPoolAvailabilityPolicyPtrOutput) StopSchedule() DesktopPoolAvailabilityPolicyStopSchedulePtrOutput {
	return o.ApplyT(func(v *DesktopPoolAvailabilityPolicy) *DesktopPoolAvailabilityPolicyStopSchedule {
		if v == nil {
			return nil
		}
		return v.StopSchedule
	}).(DesktopPoolAvailabilityPolicyStopSchedulePtrOutput)
}

type DesktopPoolAvailabilityPolicyStartSchedule struct {
	// (Updatable) A cron expression describing the desktop's schedule.
	CronExpression string `pulumi:"cronExpression"`
	// (Updatable) The timezone of the desktop's schedule.
	Timezone string `pulumi:"timezone"`
}

// DesktopPoolAvailabilityPolicyStartScheduleInput is an input type that accepts DesktopPoolAvailabilityPolicyStartScheduleArgs and DesktopPoolAvailabilityPolicyStartScheduleOutput values.
// You can construct a concrete instance of `DesktopPoolAvailabilityPolicyStartScheduleInput` via:
//
//	DesktopPoolAvailabilityPolicyStartScheduleArgs{...}
type DesktopPoolAvailabilityPolicyStartScheduleInput interface {
	pulumi.Input

	ToDesktopPoolAvailabilityPolicyStartScheduleOutput() DesktopPoolAvailabilityPolicyStartScheduleOutput
	ToDesktopPoolAvailabilityPolicyStartScheduleOutputWithContext(context.Context) DesktopPoolAvailabilityPolicyStartScheduleOutput
}

type DesktopPoolAvailabilityPolicyStartScheduleArgs struct {
	// (Updatable) A cron expression describing the desktop's schedule.
	CronExpression pulumi.StringInput `pulumi:"cronExpression"`
	// (Updatable) The timezone of the desktop's schedule.
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (DesktopPoolAvailabilityPolicyStartScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (i DesktopPoolAvailabilityPolicyStartScheduleArgs) ToDesktopPoolAvailabilityPolicyStartScheduleOutput() DesktopPoolAvailabilityPolicyStartScheduleOutput {
	return i.ToDesktopPoolAvailabilityPolicyStartScheduleOutputWithContext(context.Background())
}

func (i DesktopPoolAvailabilityPolicyStartScheduleArgs) ToDesktopPoolAvailabilityPolicyStartScheduleOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStartScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolAvailabilityPolicyStartScheduleOutput)
}

func (i DesktopPoolAvailabilityPolicyStartScheduleArgs) ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutput() DesktopPoolAvailabilityPolicyStartSchedulePtrOutput {
	return i.ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutputWithContext(context.Background())
}

func (i DesktopPoolAvailabilityPolicyStartScheduleArgs) ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStartSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolAvailabilityPolicyStartScheduleOutput).ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutputWithContext(ctx)
}

// DesktopPoolAvailabilityPolicyStartSchedulePtrInput is an input type that accepts DesktopPoolAvailabilityPolicyStartScheduleArgs, DesktopPoolAvailabilityPolicyStartSchedulePtr and DesktopPoolAvailabilityPolicyStartSchedulePtrOutput values.
// You can construct a concrete instance of `DesktopPoolAvailabilityPolicyStartSchedulePtrInput` via:
//
//	        DesktopPoolAvailabilityPolicyStartScheduleArgs{...}
//
//	or:
//
//	        nil
type DesktopPoolAvailabilityPolicyStartSchedulePtrInput interface {
	pulumi.Input

	ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutput() DesktopPoolAvailabilityPolicyStartSchedulePtrOutput
	ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutputWithContext(context.Context) DesktopPoolAvailabilityPolicyStartSchedulePtrOutput
}

type desktopPoolAvailabilityPolicyStartSchedulePtrType DesktopPoolAvailabilityPolicyStartScheduleArgs

func DesktopPoolAvailabilityPolicyStartSchedulePtr(v *DesktopPoolAvailabilityPolicyStartScheduleArgs) DesktopPoolAvailabilityPolicyStartSchedulePtrInput {
	return (*desktopPoolAvailabilityPolicyStartSchedulePtrType)(v)
}

func (*desktopPoolAvailabilityPolicyStartSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (i *desktopPoolAvailabilityPolicyStartSchedulePtrType) ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutput() DesktopPoolAvailabilityPolicyStartSchedulePtrOutput {
	return i.ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutputWithContext(context.Background())
}

func (i *desktopPoolAvailabilityPolicyStartSchedulePtrType) ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStartSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolAvailabilityPolicyStartSchedulePtrOutput)
}

type DesktopPoolAvailabilityPolicyStartScheduleOutput struct{ *pulumi.OutputState }

func (DesktopPoolAvailabilityPolicyStartScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (o DesktopPoolAvailabilityPolicyStartScheduleOutput) ToDesktopPoolAvailabilityPolicyStartScheduleOutput() DesktopPoolAvailabilityPolicyStartScheduleOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyStartScheduleOutput) ToDesktopPoolAvailabilityPolicyStartScheduleOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStartScheduleOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyStartScheduleOutput) ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutput() DesktopPoolAvailabilityPolicyStartSchedulePtrOutput {
	return o.ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutputWithContext(context.Background())
}

func (o DesktopPoolAvailabilityPolicyStartScheduleOutput) ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStartSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DesktopPoolAvailabilityPolicyStartSchedule) *DesktopPoolAvailabilityPolicyStartSchedule {
		return &v
	}).(DesktopPoolAvailabilityPolicyStartSchedulePtrOutput)
}

// (Updatable) A cron expression describing the desktop's schedule.
func (o DesktopPoolAvailabilityPolicyStartScheduleOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolAvailabilityPolicyStartSchedule) string { return v.CronExpression }).(pulumi.StringOutput)
}

// (Updatable) The timezone of the desktop's schedule.
func (o DesktopPoolAvailabilityPolicyStartScheduleOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolAvailabilityPolicyStartSchedule) string { return v.Timezone }).(pulumi.StringOutput)
}

type DesktopPoolAvailabilityPolicyStartSchedulePtrOutput struct{ *pulumi.OutputState }

func (DesktopPoolAvailabilityPolicyStartSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (o DesktopPoolAvailabilityPolicyStartSchedulePtrOutput) ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutput() DesktopPoolAvailabilityPolicyStartSchedulePtrOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyStartSchedulePtrOutput) ToDesktopPoolAvailabilityPolicyStartSchedulePtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStartSchedulePtrOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyStartSchedulePtrOutput) Elem() DesktopPoolAvailabilityPolicyStartScheduleOutput {
	return o.ApplyT(func(v *DesktopPoolAvailabilityPolicyStartSchedule) DesktopPoolAvailabilityPolicyStartSchedule {
		if v != nil {
			return *v
		}
		var ret DesktopPoolAvailabilityPolicyStartSchedule
		return ret
	}).(DesktopPoolAvailabilityPolicyStartScheduleOutput)
}

// (Updatable) A cron expression describing the desktop's schedule.
func (o DesktopPoolAvailabilityPolicyStartSchedulePtrOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolAvailabilityPolicyStartSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.CronExpression
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The timezone of the desktop's schedule.
func (o DesktopPoolAvailabilityPolicyStartSchedulePtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolAvailabilityPolicyStartSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.Timezone
	}).(pulumi.StringPtrOutput)
}

type DesktopPoolAvailabilityPolicyStopSchedule struct {
	// (Updatable) A cron expression describing the desktop's schedule.
	CronExpression string `pulumi:"cronExpression"`
	// (Updatable) The timezone of the desktop's schedule.
	Timezone string `pulumi:"timezone"`
}

// DesktopPoolAvailabilityPolicyStopScheduleInput is an input type that accepts DesktopPoolAvailabilityPolicyStopScheduleArgs and DesktopPoolAvailabilityPolicyStopScheduleOutput values.
// You can construct a concrete instance of `DesktopPoolAvailabilityPolicyStopScheduleInput` via:
//
//	DesktopPoolAvailabilityPolicyStopScheduleArgs{...}
type DesktopPoolAvailabilityPolicyStopScheduleInput interface {
	pulumi.Input

	ToDesktopPoolAvailabilityPolicyStopScheduleOutput() DesktopPoolAvailabilityPolicyStopScheduleOutput
	ToDesktopPoolAvailabilityPolicyStopScheduleOutputWithContext(context.Context) DesktopPoolAvailabilityPolicyStopScheduleOutput
}

type DesktopPoolAvailabilityPolicyStopScheduleArgs struct {
	// (Updatable) A cron expression describing the desktop's schedule.
	CronExpression pulumi.StringInput `pulumi:"cronExpression"`
	// (Updatable) The timezone of the desktop's schedule.
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (DesktopPoolAvailabilityPolicyStopScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (i DesktopPoolAvailabilityPolicyStopScheduleArgs) ToDesktopPoolAvailabilityPolicyStopScheduleOutput() DesktopPoolAvailabilityPolicyStopScheduleOutput {
	return i.ToDesktopPoolAvailabilityPolicyStopScheduleOutputWithContext(context.Background())
}

func (i DesktopPoolAvailabilityPolicyStopScheduleArgs) ToDesktopPoolAvailabilityPolicyStopScheduleOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStopScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolAvailabilityPolicyStopScheduleOutput)
}

func (i DesktopPoolAvailabilityPolicyStopScheduleArgs) ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutput() DesktopPoolAvailabilityPolicyStopSchedulePtrOutput {
	return i.ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutputWithContext(context.Background())
}

func (i DesktopPoolAvailabilityPolicyStopScheduleArgs) ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStopSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolAvailabilityPolicyStopScheduleOutput).ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutputWithContext(ctx)
}

// DesktopPoolAvailabilityPolicyStopSchedulePtrInput is an input type that accepts DesktopPoolAvailabilityPolicyStopScheduleArgs, DesktopPoolAvailabilityPolicyStopSchedulePtr and DesktopPoolAvailabilityPolicyStopSchedulePtrOutput values.
// You can construct a concrete instance of `DesktopPoolAvailabilityPolicyStopSchedulePtrInput` via:
//
//	        DesktopPoolAvailabilityPolicyStopScheduleArgs{...}
//
//	or:
//
//	        nil
type DesktopPoolAvailabilityPolicyStopSchedulePtrInput interface {
	pulumi.Input

	ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutput() DesktopPoolAvailabilityPolicyStopSchedulePtrOutput
	ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutputWithContext(context.Context) DesktopPoolAvailabilityPolicyStopSchedulePtrOutput
}

type desktopPoolAvailabilityPolicyStopSchedulePtrType DesktopPoolAvailabilityPolicyStopScheduleArgs

func DesktopPoolAvailabilityPolicyStopSchedulePtr(v *DesktopPoolAvailabilityPolicyStopScheduleArgs) DesktopPoolAvailabilityPolicyStopSchedulePtrInput {
	return (*desktopPoolAvailabilityPolicyStopSchedulePtrType)(v)
}

func (*desktopPoolAvailabilityPolicyStopSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (i *desktopPoolAvailabilityPolicyStopSchedulePtrType) ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutput() DesktopPoolAvailabilityPolicyStopSchedulePtrOutput {
	return i.ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutputWithContext(context.Background())
}

func (i *desktopPoolAvailabilityPolicyStopSchedulePtrType) ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStopSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolAvailabilityPolicyStopSchedulePtrOutput)
}

type DesktopPoolAvailabilityPolicyStopScheduleOutput struct{ *pulumi.OutputState }

func (DesktopPoolAvailabilityPolicyStopScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (o DesktopPoolAvailabilityPolicyStopScheduleOutput) ToDesktopPoolAvailabilityPolicyStopScheduleOutput() DesktopPoolAvailabilityPolicyStopScheduleOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyStopScheduleOutput) ToDesktopPoolAvailabilityPolicyStopScheduleOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStopScheduleOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyStopScheduleOutput) ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutput() DesktopPoolAvailabilityPolicyStopSchedulePtrOutput {
	return o.ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutputWithContext(context.Background())
}

func (o DesktopPoolAvailabilityPolicyStopScheduleOutput) ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStopSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DesktopPoolAvailabilityPolicyStopSchedule) *DesktopPoolAvailabilityPolicyStopSchedule {
		return &v
	}).(DesktopPoolAvailabilityPolicyStopSchedulePtrOutput)
}

// (Updatable) A cron expression describing the desktop's schedule.
func (o DesktopPoolAvailabilityPolicyStopScheduleOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolAvailabilityPolicyStopSchedule) string { return v.CronExpression }).(pulumi.StringOutput)
}

// (Updatable) The timezone of the desktop's schedule.
func (o DesktopPoolAvailabilityPolicyStopScheduleOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolAvailabilityPolicyStopSchedule) string { return v.Timezone }).(pulumi.StringOutput)
}

type DesktopPoolAvailabilityPolicyStopSchedulePtrOutput struct{ *pulumi.OutputState }

func (DesktopPoolAvailabilityPolicyStopSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (o DesktopPoolAvailabilityPolicyStopSchedulePtrOutput) ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutput() DesktopPoolAvailabilityPolicyStopSchedulePtrOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyStopSchedulePtrOutput) ToDesktopPoolAvailabilityPolicyStopSchedulePtrOutputWithContext(ctx context.Context) DesktopPoolAvailabilityPolicyStopSchedulePtrOutput {
	return o
}

func (o DesktopPoolAvailabilityPolicyStopSchedulePtrOutput) Elem() DesktopPoolAvailabilityPolicyStopScheduleOutput {
	return o.ApplyT(func(v *DesktopPoolAvailabilityPolicyStopSchedule) DesktopPoolAvailabilityPolicyStopSchedule {
		if v != nil {
			return *v
		}
		var ret DesktopPoolAvailabilityPolicyStopSchedule
		return ret
	}).(DesktopPoolAvailabilityPolicyStopScheduleOutput)
}

// (Updatable) A cron expression describing the desktop's schedule.
func (o DesktopPoolAvailabilityPolicyStopSchedulePtrOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolAvailabilityPolicyStopSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.CronExpression
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The timezone of the desktop's schedule.
func (o DesktopPoolAvailabilityPolicyStopSchedulePtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolAvailabilityPolicyStopSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.Timezone
	}).(pulumi.StringPtrOutput)
}

type DesktopPoolDevicePolicy struct {
	// (Updatable) The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
	AudioMode string `pulumi:"audioMode"`
	// (Updatable) The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
	CdmMode string `pulumi:"cdmMode"`
	// (Updatable) The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
	ClipboardMode string `pulumi:"clipboardMode"`
	// (Updatable) Indicates whether the display is enabled.
	IsDisplayEnabled bool `pulumi:"isDisplayEnabled"`
	// (Updatable) Indicates whether the keyboard is enabled.
	IsKeyboardEnabled bool `pulumi:"isKeyboardEnabled"`
	// (Updatable) Indicates whether the pointer is enabled.
	IsPointerEnabled bool `pulumi:"isPointerEnabled"`
	// (Updatable) Indicates whether printing is enabled.
	IsPrintingEnabled bool `pulumi:"isPrintingEnabled"`
}

// DesktopPoolDevicePolicyInput is an input type that accepts DesktopPoolDevicePolicyArgs and DesktopPoolDevicePolicyOutput values.
// You can construct a concrete instance of `DesktopPoolDevicePolicyInput` via:
//
//	DesktopPoolDevicePolicyArgs{...}
type DesktopPoolDevicePolicyInput interface {
	pulumi.Input

	ToDesktopPoolDevicePolicyOutput() DesktopPoolDevicePolicyOutput
	ToDesktopPoolDevicePolicyOutputWithContext(context.Context) DesktopPoolDevicePolicyOutput
}

type DesktopPoolDevicePolicyArgs struct {
	// (Updatable) The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
	AudioMode pulumi.StringInput `pulumi:"audioMode"`
	// (Updatable) The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
	CdmMode pulumi.StringInput `pulumi:"cdmMode"`
	// (Updatable) The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
	ClipboardMode pulumi.StringInput `pulumi:"clipboardMode"`
	// (Updatable) Indicates whether the display is enabled.
	IsDisplayEnabled pulumi.BoolInput `pulumi:"isDisplayEnabled"`
	// (Updatable) Indicates whether the keyboard is enabled.
	IsKeyboardEnabled pulumi.BoolInput `pulumi:"isKeyboardEnabled"`
	// (Updatable) Indicates whether the pointer is enabled.
	IsPointerEnabled pulumi.BoolInput `pulumi:"isPointerEnabled"`
	// (Updatable) Indicates whether printing is enabled.
	IsPrintingEnabled pulumi.BoolInput `pulumi:"isPrintingEnabled"`
}

func (DesktopPoolDevicePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolDevicePolicy)(nil)).Elem()
}

func (i DesktopPoolDevicePolicyArgs) ToDesktopPoolDevicePolicyOutput() DesktopPoolDevicePolicyOutput {
	return i.ToDesktopPoolDevicePolicyOutputWithContext(context.Background())
}

func (i DesktopPoolDevicePolicyArgs) ToDesktopPoolDevicePolicyOutputWithContext(ctx context.Context) DesktopPoolDevicePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolDevicePolicyOutput)
}

func (i DesktopPoolDevicePolicyArgs) ToDesktopPoolDevicePolicyPtrOutput() DesktopPoolDevicePolicyPtrOutput {
	return i.ToDesktopPoolDevicePolicyPtrOutputWithContext(context.Background())
}

func (i DesktopPoolDevicePolicyArgs) ToDesktopPoolDevicePolicyPtrOutputWithContext(ctx context.Context) DesktopPoolDevicePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolDevicePolicyOutput).ToDesktopPoolDevicePolicyPtrOutputWithContext(ctx)
}

// DesktopPoolDevicePolicyPtrInput is an input type that accepts DesktopPoolDevicePolicyArgs, DesktopPoolDevicePolicyPtr and DesktopPoolDevicePolicyPtrOutput values.
// You can construct a concrete instance of `DesktopPoolDevicePolicyPtrInput` via:
//
//	        DesktopPoolDevicePolicyArgs{...}
//
//	or:
//
//	        nil
type DesktopPoolDevicePolicyPtrInput interface {
	pulumi.Input

	ToDesktopPoolDevicePolicyPtrOutput() DesktopPoolDevicePolicyPtrOutput
	ToDesktopPoolDevicePolicyPtrOutputWithContext(context.Context) DesktopPoolDevicePolicyPtrOutput
}

type desktopPoolDevicePolicyPtrType DesktopPoolDevicePolicyArgs

func DesktopPoolDevicePolicyPtr(v *DesktopPoolDevicePolicyArgs) DesktopPoolDevicePolicyPtrInput {
	return (*desktopPoolDevicePolicyPtrType)(v)
}

func (*desktopPoolDevicePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolDevicePolicy)(nil)).Elem()
}

func (i *desktopPoolDevicePolicyPtrType) ToDesktopPoolDevicePolicyPtrOutput() DesktopPoolDevicePolicyPtrOutput {
	return i.ToDesktopPoolDevicePolicyPtrOutputWithContext(context.Background())
}

func (i *desktopPoolDevicePolicyPtrType) ToDesktopPoolDevicePolicyPtrOutputWithContext(ctx context.Context) DesktopPoolDevicePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolDevicePolicyPtrOutput)
}

type DesktopPoolDevicePolicyOutput struct{ *pulumi.OutputState }

func (DesktopPoolDevicePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolDevicePolicy)(nil)).Elem()
}

func (o DesktopPoolDevicePolicyOutput) ToDesktopPoolDevicePolicyOutput() DesktopPoolDevicePolicyOutput {
	return o
}

func (o DesktopPoolDevicePolicyOutput) ToDesktopPoolDevicePolicyOutputWithContext(ctx context.Context) DesktopPoolDevicePolicyOutput {
	return o
}

func (o DesktopPoolDevicePolicyOutput) ToDesktopPoolDevicePolicyPtrOutput() DesktopPoolDevicePolicyPtrOutput {
	return o.ToDesktopPoolDevicePolicyPtrOutputWithContext(context.Background())
}

func (o DesktopPoolDevicePolicyOutput) ToDesktopPoolDevicePolicyPtrOutputWithContext(ctx context.Context) DesktopPoolDevicePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DesktopPoolDevicePolicy) *DesktopPoolDevicePolicy {
		return &v
	}).(DesktopPoolDevicePolicyPtrOutput)
}

// (Updatable) The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
func (o DesktopPoolDevicePolicyOutput) AudioMode() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolDevicePolicy) string { return v.AudioMode }).(pulumi.StringOutput)
}

// (Updatable) The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
func (o DesktopPoolDevicePolicyOutput) CdmMode() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolDevicePolicy) string { return v.CdmMode }).(pulumi.StringOutput)
}

// (Updatable) The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
func (o DesktopPoolDevicePolicyOutput) ClipboardMode() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolDevicePolicy) string { return v.ClipboardMode }).(pulumi.StringOutput)
}

// (Updatable) Indicates whether the display is enabled.
func (o DesktopPoolDevicePolicyOutput) IsDisplayEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DesktopPoolDevicePolicy) bool { return v.IsDisplayEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Indicates whether the keyboard is enabled.
func (o DesktopPoolDevicePolicyOutput) IsKeyboardEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DesktopPoolDevicePolicy) bool { return v.IsKeyboardEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Indicates whether the pointer is enabled.
func (o DesktopPoolDevicePolicyOutput) IsPointerEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DesktopPoolDevicePolicy) bool { return v.IsPointerEnabled }).(pulumi.BoolOutput)
}

// (Updatable) Indicates whether printing is enabled.
func (o DesktopPoolDevicePolicyOutput) IsPrintingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DesktopPoolDevicePolicy) bool { return v.IsPrintingEnabled }).(pulumi.BoolOutput)
}

type DesktopPoolDevicePolicyPtrOutput struct{ *pulumi.OutputState }

func (DesktopPoolDevicePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolDevicePolicy)(nil)).Elem()
}

func (o DesktopPoolDevicePolicyPtrOutput) ToDesktopPoolDevicePolicyPtrOutput() DesktopPoolDevicePolicyPtrOutput {
	return o
}

func (o DesktopPoolDevicePolicyPtrOutput) ToDesktopPoolDevicePolicyPtrOutputWithContext(ctx context.Context) DesktopPoolDevicePolicyPtrOutput {
	return o
}

func (o DesktopPoolDevicePolicyPtrOutput) Elem() DesktopPoolDevicePolicyOutput {
	return o.ApplyT(func(v *DesktopPoolDevicePolicy) DesktopPoolDevicePolicy {
		if v != nil {
			return *v
		}
		var ret DesktopPoolDevicePolicy
		return ret
	}).(DesktopPoolDevicePolicyOutput)
}

// (Updatable) The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
func (o DesktopPoolDevicePolicyPtrOutput) AudioMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolDevicePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.AudioMode
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
func (o DesktopPoolDevicePolicyPtrOutput) CdmMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolDevicePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.CdmMode
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
func (o DesktopPoolDevicePolicyPtrOutput) ClipboardMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolDevicePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.ClipboardMode
	}).(pulumi.StringPtrOutput)
}

// (Updatable) Indicates whether the display is enabled.
func (o DesktopPoolDevicePolicyPtrOutput) IsDisplayEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DesktopPoolDevicePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDisplayEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Indicates whether the keyboard is enabled.
func (o DesktopPoolDevicePolicyPtrOutput) IsKeyboardEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DesktopPoolDevicePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.IsKeyboardEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Indicates whether the pointer is enabled.
func (o DesktopPoolDevicePolicyPtrOutput) IsPointerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DesktopPoolDevicePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPointerEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Updatable) Indicates whether printing is enabled.
func (o DesktopPoolDevicePolicyPtrOutput) IsPrintingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DesktopPoolDevicePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPrintingEnabled
	}).(pulumi.BoolPtrOutput)
}

type DesktopPoolImage struct {
	// The OCID of the desktop image.
	ImageId string `pulumi:"imageId"`
	// The name of the desktop image.
	ImageName string `pulumi:"imageName"`
	// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
	OperatingSystem *string `pulumi:"operatingSystem"`
}

// DesktopPoolImageInput is an input type that accepts DesktopPoolImageArgs and DesktopPoolImageOutput values.
// You can construct a concrete instance of `DesktopPoolImageInput` via:
//
//	DesktopPoolImageArgs{...}
type DesktopPoolImageInput interface {
	pulumi.Input

	ToDesktopPoolImageOutput() DesktopPoolImageOutput
	ToDesktopPoolImageOutputWithContext(context.Context) DesktopPoolImageOutput
}

type DesktopPoolImageArgs struct {
	// The OCID of the desktop image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The name of the desktop image.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
	OperatingSystem pulumi.StringPtrInput `pulumi:"operatingSystem"`
}

func (DesktopPoolImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolImage)(nil)).Elem()
}

func (i DesktopPoolImageArgs) ToDesktopPoolImageOutput() DesktopPoolImageOutput {
	return i.ToDesktopPoolImageOutputWithContext(context.Background())
}

func (i DesktopPoolImageArgs) ToDesktopPoolImageOutputWithContext(ctx context.Context) DesktopPoolImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolImageOutput)
}

func (i DesktopPoolImageArgs) ToDesktopPoolImagePtrOutput() DesktopPoolImagePtrOutput {
	return i.ToDesktopPoolImagePtrOutputWithContext(context.Background())
}

func (i DesktopPoolImageArgs) ToDesktopPoolImagePtrOutputWithContext(ctx context.Context) DesktopPoolImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolImageOutput).ToDesktopPoolImagePtrOutputWithContext(ctx)
}

// DesktopPoolImagePtrInput is an input type that accepts DesktopPoolImageArgs, DesktopPoolImagePtr and DesktopPoolImagePtrOutput values.
// You can construct a concrete instance of `DesktopPoolImagePtrInput` via:
//
//	        DesktopPoolImageArgs{...}
//
//	or:
//
//	        nil
type DesktopPoolImagePtrInput interface {
	pulumi.Input

	ToDesktopPoolImagePtrOutput() DesktopPoolImagePtrOutput
	ToDesktopPoolImagePtrOutputWithContext(context.Context) DesktopPoolImagePtrOutput
}

type desktopPoolImagePtrType DesktopPoolImageArgs

func DesktopPoolImagePtr(v *DesktopPoolImageArgs) DesktopPoolImagePtrInput {
	return (*desktopPoolImagePtrType)(v)
}

func (*desktopPoolImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolImage)(nil)).Elem()
}

func (i *desktopPoolImagePtrType) ToDesktopPoolImagePtrOutput() DesktopPoolImagePtrOutput {
	return i.ToDesktopPoolImagePtrOutputWithContext(context.Background())
}

func (i *desktopPoolImagePtrType) ToDesktopPoolImagePtrOutputWithContext(ctx context.Context) DesktopPoolImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolImagePtrOutput)
}

type DesktopPoolImageOutput struct{ *pulumi.OutputState }

func (DesktopPoolImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolImage)(nil)).Elem()
}

func (o DesktopPoolImageOutput) ToDesktopPoolImageOutput() DesktopPoolImageOutput {
	return o
}

func (o DesktopPoolImageOutput) ToDesktopPoolImageOutputWithContext(ctx context.Context) DesktopPoolImageOutput {
	return o
}

func (o DesktopPoolImageOutput) ToDesktopPoolImagePtrOutput() DesktopPoolImagePtrOutput {
	return o.ToDesktopPoolImagePtrOutputWithContext(context.Background())
}

func (o DesktopPoolImageOutput) ToDesktopPoolImagePtrOutputWithContext(ctx context.Context) DesktopPoolImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DesktopPoolImage) *DesktopPoolImage {
		return &v
	}).(DesktopPoolImagePtrOutput)
}

// The OCID of the desktop image.
func (o DesktopPoolImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolImage) string { return v.ImageId }).(pulumi.StringOutput)
}

// The name of the desktop image.
func (o DesktopPoolImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
func (o DesktopPoolImageOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DesktopPoolImage) *string { return v.OperatingSystem }).(pulumi.StringPtrOutput)
}

type DesktopPoolImagePtrOutput struct{ *pulumi.OutputState }

func (DesktopPoolImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolImage)(nil)).Elem()
}

func (o DesktopPoolImagePtrOutput) ToDesktopPoolImagePtrOutput() DesktopPoolImagePtrOutput {
	return o
}

func (o DesktopPoolImagePtrOutput) ToDesktopPoolImagePtrOutputWithContext(ctx context.Context) DesktopPoolImagePtrOutput {
	return o
}

func (o DesktopPoolImagePtrOutput) Elem() DesktopPoolImageOutput {
	return o.ApplyT(func(v *DesktopPoolImage) DesktopPoolImage {
		if v != nil {
			return *v
		}
		var ret DesktopPoolImage
		return ret
	}).(DesktopPoolImageOutput)
}

// The OCID of the desktop image.
func (o DesktopPoolImagePtrOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolImage) *string {
		if v == nil {
			return nil
		}
		return &v.ImageId
	}).(pulumi.StringPtrOutput)
}

// The name of the desktop image.
func (o DesktopPoolImagePtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolImage) *string {
		if v == nil {
			return nil
		}
		return &v.ImageName
	}).(pulumi.StringPtrOutput)
}

// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
func (o DesktopPoolImagePtrOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolImage) *string {
		if v == nil {
			return nil
		}
		return v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

type DesktopPoolNetworkConfiguration struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet in the customer VCN where the connectivity will be established.
	SubnetId string `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId string `pulumi:"vcnId"`
}

// DesktopPoolNetworkConfigurationInput is an input type that accepts DesktopPoolNetworkConfigurationArgs and DesktopPoolNetworkConfigurationOutput values.
// You can construct a concrete instance of `DesktopPoolNetworkConfigurationInput` via:
//
//	DesktopPoolNetworkConfigurationArgs{...}
type DesktopPoolNetworkConfigurationInput interface {
	pulumi.Input

	ToDesktopPoolNetworkConfigurationOutput() DesktopPoolNetworkConfigurationOutput
	ToDesktopPoolNetworkConfigurationOutputWithContext(context.Context) DesktopPoolNetworkConfigurationOutput
}

type DesktopPoolNetworkConfigurationArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet in the customer VCN where the connectivity will be established.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId pulumi.StringInput `pulumi:"vcnId"`
}

func (DesktopPoolNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolNetworkConfiguration)(nil)).Elem()
}

func (i DesktopPoolNetworkConfigurationArgs) ToDesktopPoolNetworkConfigurationOutput() DesktopPoolNetworkConfigurationOutput {
	return i.ToDesktopPoolNetworkConfigurationOutputWithContext(context.Background())
}

func (i DesktopPoolNetworkConfigurationArgs) ToDesktopPoolNetworkConfigurationOutputWithContext(ctx context.Context) DesktopPoolNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolNetworkConfigurationOutput)
}

func (i DesktopPoolNetworkConfigurationArgs) ToDesktopPoolNetworkConfigurationPtrOutput() DesktopPoolNetworkConfigurationPtrOutput {
	return i.ToDesktopPoolNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i DesktopPoolNetworkConfigurationArgs) ToDesktopPoolNetworkConfigurationPtrOutputWithContext(ctx context.Context) DesktopPoolNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolNetworkConfigurationOutput).ToDesktopPoolNetworkConfigurationPtrOutputWithContext(ctx)
}

// DesktopPoolNetworkConfigurationPtrInput is an input type that accepts DesktopPoolNetworkConfigurationArgs, DesktopPoolNetworkConfigurationPtr and DesktopPoolNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `DesktopPoolNetworkConfigurationPtrInput` via:
//
//	        DesktopPoolNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type DesktopPoolNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToDesktopPoolNetworkConfigurationPtrOutput() DesktopPoolNetworkConfigurationPtrOutput
	ToDesktopPoolNetworkConfigurationPtrOutputWithContext(context.Context) DesktopPoolNetworkConfigurationPtrOutput
}

type desktopPoolNetworkConfigurationPtrType DesktopPoolNetworkConfigurationArgs

func DesktopPoolNetworkConfigurationPtr(v *DesktopPoolNetworkConfigurationArgs) DesktopPoolNetworkConfigurationPtrInput {
	return (*desktopPoolNetworkConfigurationPtrType)(v)
}

func (*desktopPoolNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolNetworkConfiguration)(nil)).Elem()
}

func (i *desktopPoolNetworkConfigurationPtrType) ToDesktopPoolNetworkConfigurationPtrOutput() DesktopPoolNetworkConfigurationPtrOutput {
	return i.ToDesktopPoolNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *desktopPoolNetworkConfigurationPtrType) ToDesktopPoolNetworkConfigurationPtrOutputWithContext(ctx context.Context) DesktopPoolNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolNetworkConfigurationPtrOutput)
}

type DesktopPoolNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (DesktopPoolNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolNetworkConfiguration)(nil)).Elem()
}

func (o DesktopPoolNetworkConfigurationOutput) ToDesktopPoolNetworkConfigurationOutput() DesktopPoolNetworkConfigurationOutput {
	return o
}

func (o DesktopPoolNetworkConfigurationOutput) ToDesktopPoolNetworkConfigurationOutputWithContext(ctx context.Context) DesktopPoolNetworkConfigurationOutput {
	return o
}

func (o DesktopPoolNetworkConfigurationOutput) ToDesktopPoolNetworkConfigurationPtrOutput() DesktopPoolNetworkConfigurationPtrOutput {
	return o.ToDesktopPoolNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o DesktopPoolNetworkConfigurationOutput) ToDesktopPoolNetworkConfigurationPtrOutputWithContext(ctx context.Context) DesktopPoolNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DesktopPoolNetworkConfiguration) *DesktopPoolNetworkConfiguration {
		return &v
	}).(DesktopPoolNetworkConfigurationPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet in the customer VCN where the connectivity will be established.
func (o DesktopPoolNetworkConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolNetworkConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
func (o DesktopPoolNetworkConfigurationOutput) VcnId() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolNetworkConfiguration) string { return v.VcnId }).(pulumi.StringOutput)
}

type DesktopPoolNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DesktopPoolNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolNetworkConfiguration)(nil)).Elem()
}

func (o DesktopPoolNetworkConfigurationPtrOutput) ToDesktopPoolNetworkConfigurationPtrOutput() DesktopPoolNetworkConfigurationPtrOutput {
	return o
}

func (o DesktopPoolNetworkConfigurationPtrOutput) ToDesktopPoolNetworkConfigurationPtrOutputWithContext(ctx context.Context) DesktopPoolNetworkConfigurationPtrOutput {
	return o
}

func (o DesktopPoolNetworkConfigurationPtrOutput) Elem() DesktopPoolNetworkConfigurationOutput {
	return o.ApplyT(func(v *DesktopPoolNetworkConfiguration) DesktopPoolNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret DesktopPoolNetworkConfiguration
		return ret
	}).(DesktopPoolNetworkConfigurationOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet in the customer VCN where the connectivity will be established.
func (o DesktopPoolNetworkConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
func (o DesktopPoolNetworkConfigurationPtrOutput) VcnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.VcnId
	}).(pulumi.StringPtrOutput)
}

type DesktopPoolPrivateAccessDetails struct {
	// The three-label FQDN to use for the private endpoint. The customer VCN's DNS records are updated with this FQDN. This enables the customer to use the FQDN instead of the private endpoint's private IP address to access the service (for example, xyz.oraclecloud.com).
	EndpointFqdn *string `pulumi:"endpointFqdn"`
	// A list of network security groups for the private access.
	NsgIds []string `pulumi:"nsgIds"`
	// The IPv4 address from the provided Oracle Cloud Infrastructure subnet which needs to be assigned to the VNIC. If not provided, it will be auto-assigned with an available IPv4 address from the subnet.
	PrivateIp *string `pulumi:"privateIp"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
	SubnetId string `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId *string `pulumi:"vcnId"`
}

// DesktopPoolPrivateAccessDetailsInput is an input type that accepts DesktopPoolPrivateAccessDetailsArgs and DesktopPoolPrivateAccessDetailsOutput values.
// You can construct a concrete instance of `DesktopPoolPrivateAccessDetailsInput` via:
//
//	DesktopPoolPrivateAccessDetailsArgs{...}
type DesktopPoolPrivateAccessDetailsInput interface {
	pulumi.Input

	ToDesktopPoolPrivateAccessDetailsOutput() DesktopPoolPrivateAccessDetailsOutput
	ToDesktopPoolPrivateAccessDetailsOutputWithContext(context.Context) DesktopPoolPrivateAccessDetailsOutput
}

type DesktopPoolPrivateAccessDetailsArgs struct {
	// The three-label FQDN to use for the private endpoint. The customer VCN's DNS records are updated with this FQDN. This enables the customer to use the FQDN instead of the private endpoint's private IP address to access the service (for example, xyz.oraclecloud.com).
	EndpointFqdn pulumi.StringPtrInput `pulumi:"endpointFqdn"`
	// A list of network security groups for the private access.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The IPv4 address from the provided Oracle Cloud Infrastructure subnet which needs to be assigned to the VNIC. If not provided, it will be auto-assigned with an available IPv4 address from the subnet.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId pulumi.StringPtrInput `pulumi:"vcnId"`
}

func (DesktopPoolPrivateAccessDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolPrivateAccessDetails)(nil)).Elem()
}

func (i DesktopPoolPrivateAccessDetailsArgs) ToDesktopPoolPrivateAccessDetailsOutput() DesktopPoolPrivateAccessDetailsOutput {
	return i.ToDesktopPoolPrivateAccessDetailsOutputWithContext(context.Background())
}

func (i DesktopPoolPrivateAccessDetailsArgs) ToDesktopPoolPrivateAccessDetailsOutputWithContext(ctx context.Context) DesktopPoolPrivateAccessDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolPrivateAccessDetailsOutput)
}

func (i DesktopPoolPrivateAccessDetailsArgs) ToDesktopPoolPrivateAccessDetailsPtrOutput() DesktopPoolPrivateAccessDetailsPtrOutput {
	return i.ToDesktopPoolPrivateAccessDetailsPtrOutputWithContext(context.Background())
}

func (i DesktopPoolPrivateAccessDetailsArgs) ToDesktopPoolPrivateAccessDetailsPtrOutputWithContext(ctx context.Context) DesktopPoolPrivateAccessDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolPrivateAccessDetailsOutput).ToDesktopPoolPrivateAccessDetailsPtrOutputWithContext(ctx)
}

// DesktopPoolPrivateAccessDetailsPtrInput is an input type that accepts DesktopPoolPrivateAccessDetailsArgs, DesktopPoolPrivateAccessDetailsPtr and DesktopPoolPrivateAccessDetailsPtrOutput values.
// You can construct a concrete instance of `DesktopPoolPrivateAccessDetailsPtrInput` via:
//
//	        DesktopPoolPrivateAccessDetailsArgs{...}
//
//	or:
//
//	        nil
type DesktopPoolPrivateAccessDetailsPtrInput interface {
	pulumi.Input

	ToDesktopPoolPrivateAccessDetailsPtrOutput() DesktopPoolPrivateAccessDetailsPtrOutput
	ToDesktopPoolPrivateAccessDetailsPtrOutputWithContext(context.Context) DesktopPoolPrivateAccessDetailsPtrOutput
}

type desktopPoolPrivateAccessDetailsPtrType DesktopPoolPrivateAccessDetailsArgs

func DesktopPoolPrivateAccessDetailsPtr(v *DesktopPoolPrivateAccessDetailsArgs) DesktopPoolPrivateAccessDetailsPtrInput {
	return (*desktopPoolPrivateAccessDetailsPtrType)(v)
}

func (*desktopPoolPrivateAccessDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolPrivateAccessDetails)(nil)).Elem()
}

func (i *desktopPoolPrivateAccessDetailsPtrType) ToDesktopPoolPrivateAccessDetailsPtrOutput() DesktopPoolPrivateAccessDetailsPtrOutput {
	return i.ToDesktopPoolPrivateAccessDetailsPtrOutputWithContext(context.Background())
}

func (i *desktopPoolPrivateAccessDetailsPtrType) ToDesktopPoolPrivateAccessDetailsPtrOutputWithContext(ctx context.Context) DesktopPoolPrivateAccessDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolPrivateAccessDetailsPtrOutput)
}

type DesktopPoolPrivateAccessDetailsOutput struct{ *pulumi.OutputState }

func (DesktopPoolPrivateAccessDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolPrivateAccessDetails)(nil)).Elem()
}

func (o DesktopPoolPrivateAccessDetailsOutput) ToDesktopPoolPrivateAccessDetailsOutput() DesktopPoolPrivateAccessDetailsOutput {
	return o
}

func (o DesktopPoolPrivateAccessDetailsOutput) ToDesktopPoolPrivateAccessDetailsOutputWithContext(ctx context.Context) DesktopPoolPrivateAccessDetailsOutput {
	return o
}

func (o DesktopPoolPrivateAccessDetailsOutput) ToDesktopPoolPrivateAccessDetailsPtrOutput() DesktopPoolPrivateAccessDetailsPtrOutput {
	return o.ToDesktopPoolPrivateAccessDetailsPtrOutputWithContext(context.Background())
}

func (o DesktopPoolPrivateAccessDetailsOutput) ToDesktopPoolPrivateAccessDetailsPtrOutputWithContext(ctx context.Context) DesktopPoolPrivateAccessDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DesktopPoolPrivateAccessDetails) *DesktopPoolPrivateAccessDetails {
		return &v
	}).(DesktopPoolPrivateAccessDetailsPtrOutput)
}

// The three-label FQDN to use for the private endpoint. The customer VCN's DNS records are updated with this FQDN. This enables the customer to use the FQDN instead of the private endpoint's private IP address to access the service (for example, xyz.oraclecloud.com).
func (o DesktopPoolPrivateAccessDetailsOutput) EndpointFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DesktopPoolPrivateAccessDetails) *string { return v.EndpointFqdn }).(pulumi.StringPtrOutput)
}

// A list of network security groups for the private access.
func (o DesktopPoolPrivateAccessDetailsOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DesktopPoolPrivateAccessDetails) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The IPv4 address from the provided Oracle Cloud Infrastructure subnet which needs to be assigned to the VNIC. If not provided, it will be auto-assigned with an available IPv4 address from the subnet.
func (o DesktopPoolPrivateAccessDetailsOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DesktopPoolPrivateAccessDetails) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
func (o DesktopPoolPrivateAccessDetailsOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolPrivateAccessDetails) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
func (o DesktopPoolPrivateAccessDetailsOutput) VcnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DesktopPoolPrivateAccessDetails) *string { return v.VcnId }).(pulumi.StringPtrOutput)
}

type DesktopPoolPrivateAccessDetailsPtrOutput struct{ *pulumi.OutputState }

func (DesktopPoolPrivateAccessDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolPrivateAccessDetails)(nil)).Elem()
}

func (o DesktopPoolPrivateAccessDetailsPtrOutput) ToDesktopPoolPrivateAccessDetailsPtrOutput() DesktopPoolPrivateAccessDetailsPtrOutput {
	return o
}

func (o DesktopPoolPrivateAccessDetailsPtrOutput) ToDesktopPoolPrivateAccessDetailsPtrOutputWithContext(ctx context.Context) DesktopPoolPrivateAccessDetailsPtrOutput {
	return o
}

func (o DesktopPoolPrivateAccessDetailsPtrOutput) Elem() DesktopPoolPrivateAccessDetailsOutput {
	return o.ApplyT(func(v *DesktopPoolPrivateAccessDetails) DesktopPoolPrivateAccessDetails {
		if v != nil {
			return *v
		}
		var ret DesktopPoolPrivateAccessDetails
		return ret
	}).(DesktopPoolPrivateAccessDetailsOutput)
}

// The three-label FQDN to use for the private endpoint. The customer VCN's DNS records are updated with this FQDN. This enables the customer to use the FQDN instead of the private endpoint's private IP address to access the service (for example, xyz.oraclecloud.com).
func (o DesktopPoolPrivateAccessDetailsPtrOutput) EndpointFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolPrivateAccessDetails) *string {
		if v == nil {
			return nil
		}
		return v.EndpointFqdn
	}).(pulumi.StringPtrOutput)
}

// A list of network security groups for the private access.
func (o DesktopPoolPrivateAccessDetailsPtrOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DesktopPoolPrivateAccessDetails) []string {
		if v == nil {
			return nil
		}
		return v.NsgIds
	}).(pulumi.StringArrayOutput)
}

// The IPv4 address from the provided Oracle Cloud Infrastructure subnet which needs to be assigned to the VNIC. If not provided, it will be auto-assigned with an available IPv4 address from the subnet.
func (o DesktopPoolPrivateAccessDetailsPtrOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolPrivateAccessDetails) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIp
	}).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
func (o DesktopPoolPrivateAccessDetailsPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolPrivateAccessDetails) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
func (o DesktopPoolPrivateAccessDetailsPtrOutput) VcnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolPrivateAccessDetails) *string {
		if v == nil {
			return nil
		}
		return v.VcnId
	}).(pulumi.StringPtrOutput)
}

type DesktopPoolSessionLifecycleActions struct {
	// (Updatable) Action and grace period for disconnect. Session disconnect can not be used together with an `availabilityPolicy` schedule.
	Disconnect *DesktopPoolSessionLifecycleActionsDisconnect `pulumi:"disconnect"`
	// (Updatable) Action and grace period for inactivity
	Inactivity *DesktopPoolSessionLifecycleActionsInactivity `pulumi:"inactivity"`
}

// DesktopPoolSessionLifecycleActionsInput is an input type that accepts DesktopPoolSessionLifecycleActionsArgs and DesktopPoolSessionLifecycleActionsOutput values.
// You can construct a concrete instance of `DesktopPoolSessionLifecycleActionsInput` via:
//
//	DesktopPoolSessionLifecycleActionsArgs{...}
type DesktopPoolSessionLifecycleActionsInput interface {
	pulumi.Input

	ToDesktopPoolSessionLifecycleActionsOutput() DesktopPoolSessionLifecycleActionsOutput
	ToDesktopPoolSessionLifecycleActionsOutputWithContext(context.Context) DesktopPoolSessionLifecycleActionsOutput
}

type DesktopPoolSessionLifecycleActionsArgs struct {
	// (Updatable) Action and grace period for disconnect. Session disconnect can not be used together with an `availabilityPolicy` schedule.
	Disconnect DesktopPoolSessionLifecycleActionsDisconnectPtrInput `pulumi:"disconnect"`
	// (Updatable) Action and grace period for inactivity
	Inactivity DesktopPoolSessionLifecycleActionsInactivityPtrInput `pulumi:"inactivity"`
}

func (DesktopPoolSessionLifecycleActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolSessionLifecycleActions)(nil)).Elem()
}

func (i DesktopPoolSessionLifecycleActionsArgs) ToDesktopPoolSessionLifecycleActionsOutput() DesktopPoolSessionLifecycleActionsOutput {
	return i.ToDesktopPoolSessionLifecycleActionsOutputWithContext(context.Background())
}

func (i DesktopPoolSessionLifecycleActionsArgs) ToDesktopPoolSessionLifecycleActionsOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolSessionLifecycleActionsOutput)
}

func (i DesktopPoolSessionLifecycleActionsArgs) ToDesktopPoolSessionLifecycleActionsPtrOutput() DesktopPoolSessionLifecycleActionsPtrOutput {
	return i.ToDesktopPoolSessionLifecycleActionsPtrOutputWithContext(context.Background())
}

func (i DesktopPoolSessionLifecycleActionsArgs) ToDesktopPoolSessionLifecycleActionsPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolSessionLifecycleActionsOutput).ToDesktopPoolSessionLifecycleActionsPtrOutputWithContext(ctx)
}

// DesktopPoolSessionLifecycleActionsPtrInput is an input type that accepts DesktopPoolSessionLifecycleActionsArgs, DesktopPoolSessionLifecycleActionsPtr and DesktopPoolSessionLifecycleActionsPtrOutput values.
// You can construct a concrete instance of `DesktopPoolSessionLifecycleActionsPtrInput` via:
//
//	        DesktopPoolSessionLifecycleActionsArgs{...}
//
//	or:
//
//	        nil
type DesktopPoolSessionLifecycleActionsPtrInput interface {
	pulumi.Input

	ToDesktopPoolSessionLifecycleActionsPtrOutput() DesktopPoolSessionLifecycleActionsPtrOutput
	ToDesktopPoolSessionLifecycleActionsPtrOutputWithContext(context.Context) DesktopPoolSessionLifecycleActionsPtrOutput
}

type desktopPoolSessionLifecycleActionsPtrType DesktopPoolSessionLifecycleActionsArgs

func DesktopPoolSessionLifecycleActionsPtr(v *DesktopPoolSessionLifecycleActionsArgs) DesktopPoolSessionLifecycleActionsPtrInput {
	return (*desktopPoolSessionLifecycleActionsPtrType)(v)
}

func (*desktopPoolSessionLifecycleActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolSessionLifecycleActions)(nil)).Elem()
}

func (i *desktopPoolSessionLifecycleActionsPtrType) ToDesktopPoolSessionLifecycleActionsPtrOutput() DesktopPoolSessionLifecycleActionsPtrOutput {
	return i.ToDesktopPoolSessionLifecycleActionsPtrOutputWithContext(context.Background())
}

func (i *desktopPoolSessionLifecycleActionsPtrType) ToDesktopPoolSessionLifecycleActionsPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolSessionLifecycleActionsPtrOutput)
}

type DesktopPoolSessionLifecycleActionsOutput struct{ *pulumi.OutputState }

func (DesktopPoolSessionLifecycleActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolSessionLifecycleActions)(nil)).Elem()
}

func (o DesktopPoolSessionLifecycleActionsOutput) ToDesktopPoolSessionLifecycleActionsOutput() DesktopPoolSessionLifecycleActionsOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsOutput) ToDesktopPoolSessionLifecycleActionsOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsOutput) ToDesktopPoolSessionLifecycleActionsPtrOutput() DesktopPoolSessionLifecycleActionsPtrOutput {
	return o.ToDesktopPoolSessionLifecycleActionsPtrOutputWithContext(context.Background())
}

func (o DesktopPoolSessionLifecycleActionsOutput) ToDesktopPoolSessionLifecycleActionsPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DesktopPoolSessionLifecycleActions) *DesktopPoolSessionLifecycleActions {
		return &v
	}).(DesktopPoolSessionLifecycleActionsPtrOutput)
}

// (Updatable) Action and grace period for disconnect. Session disconnect can not be used together with an `availabilityPolicy` schedule.
func (o DesktopPoolSessionLifecycleActionsOutput) Disconnect() DesktopPoolSessionLifecycleActionsDisconnectPtrOutput {
	return o.ApplyT(func(v DesktopPoolSessionLifecycleActions) *DesktopPoolSessionLifecycleActionsDisconnect {
		return v.Disconnect
	}).(DesktopPoolSessionLifecycleActionsDisconnectPtrOutput)
}

// (Updatable) Action and grace period for inactivity
func (o DesktopPoolSessionLifecycleActionsOutput) Inactivity() DesktopPoolSessionLifecycleActionsInactivityPtrOutput {
	return o.ApplyT(func(v DesktopPoolSessionLifecycleActions) *DesktopPoolSessionLifecycleActionsInactivity {
		return v.Inactivity
	}).(DesktopPoolSessionLifecycleActionsInactivityPtrOutput)
}

type DesktopPoolSessionLifecycleActionsPtrOutput struct{ *pulumi.OutputState }

func (DesktopPoolSessionLifecycleActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolSessionLifecycleActions)(nil)).Elem()
}

func (o DesktopPoolSessionLifecycleActionsPtrOutput) ToDesktopPoolSessionLifecycleActionsPtrOutput() DesktopPoolSessionLifecycleActionsPtrOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsPtrOutput) ToDesktopPoolSessionLifecycleActionsPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsPtrOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsPtrOutput) Elem() DesktopPoolSessionLifecycleActionsOutput {
	return o.ApplyT(func(v *DesktopPoolSessionLifecycleActions) DesktopPoolSessionLifecycleActions {
		if v != nil {
			return *v
		}
		var ret DesktopPoolSessionLifecycleActions
		return ret
	}).(DesktopPoolSessionLifecycleActionsOutput)
}

// (Updatable) Action and grace period for disconnect. Session disconnect can not be used together with an `availabilityPolicy` schedule.
func (o DesktopPoolSessionLifecycleActionsPtrOutput) Disconnect() DesktopPoolSessionLifecycleActionsDisconnectPtrOutput {
	return o.ApplyT(func(v *DesktopPoolSessionLifecycleActions) *DesktopPoolSessionLifecycleActionsDisconnect {
		if v == nil {
			return nil
		}
		return v.Disconnect
	}).(DesktopPoolSessionLifecycleActionsDisconnectPtrOutput)
}

// (Updatable) Action and grace period for inactivity
func (o DesktopPoolSessionLifecycleActionsPtrOutput) Inactivity() DesktopPoolSessionLifecycleActionsInactivityPtrOutput {
	return o.ApplyT(func(v *DesktopPoolSessionLifecycleActions) *DesktopPoolSessionLifecycleActionsInactivity {
		if v == nil {
			return nil
		}
		return v.Inactivity
	}).(DesktopPoolSessionLifecycleActionsInactivityPtrOutput)
}

type DesktopPoolSessionLifecycleActionsDisconnect struct {
	// (Updatable) a disconnect action to be triggered. Could be set to NONE or STOP
	Action string `pulumi:"action"`
	// (Updatable) The period of time (in minutes) after disconnect before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes *int `pulumi:"gracePeriodInMinutes"`
}

// DesktopPoolSessionLifecycleActionsDisconnectInput is an input type that accepts DesktopPoolSessionLifecycleActionsDisconnectArgs and DesktopPoolSessionLifecycleActionsDisconnectOutput values.
// You can construct a concrete instance of `DesktopPoolSessionLifecycleActionsDisconnectInput` via:
//
//	DesktopPoolSessionLifecycleActionsDisconnectArgs{...}
type DesktopPoolSessionLifecycleActionsDisconnectInput interface {
	pulumi.Input

	ToDesktopPoolSessionLifecycleActionsDisconnectOutput() DesktopPoolSessionLifecycleActionsDisconnectOutput
	ToDesktopPoolSessionLifecycleActionsDisconnectOutputWithContext(context.Context) DesktopPoolSessionLifecycleActionsDisconnectOutput
}

type DesktopPoolSessionLifecycleActionsDisconnectArgs struct {
	// (Updatable) a disconnect action to be triggered. Could be set to NONE or STOP
	Action pulumi.StringInput `pulumi:"action"`
	// (Updatable) The period of time (in minutes) after disconnect before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes pulumi.IntPtrInput `pulumi:"gracePeriodInMinutes"`
}

func (DesktopPoolSessionLifecycleActionsDisconnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolSessionLifecycleActionsDisconnect)(nil)).Elem()
}

func (i DesktopPoolSessionLifecycleActionsDisconnectArgs) ToDesktopPoolSessionLifecycleActionsDisconnectOutput() DesktopPoolSessionLifecycleActionsDisconnectOutput {
	return i.ToDesktopPoolSessionLifecycleActionsDisconnectOutputWithContext(context.Background())
}

func (i DesktopPoolSessionLifecycleActionsDisconnectArgs) ToDesktopPoolSessionLifecycleActionsDisconnectOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsDisconnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolSessionLifecycleActionsDisconnectOutput)
}

func (i DesktopPoolSessionLifecycleActionsDisconnectArgs) ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutput() DesktopPoolSessionLifecycleActionsDisconnectPtrOutput {
	return i.ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutputWithContext(context.Background())
}

func (i DesktopPoolSessionLifecycleActionsDisconnectArgs) ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsDisconnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolSessionLifecycleActionsDisconnectOutput).ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutputWithContext(ctx)
}

// DesktopPoolSessionLifecycleActionsDisconnectPtrInput is an input type that accepts DesktopPoolSessionLifecycleActionsDisconnectArgs, DesktopPoolSessionLifecycleActionsDisconnectPtr and DesktopPoolSessionLifecycleActionsDisconnectPtrOutput values.
// You can construct a concrete instance of `DesktopPoolSessionLifecycleActionsDisconnectPtrInput` via:
//
//	        DesktopPoolSessionLifecycleActionsDisconnectArgs{...}
//
//	or:
//
//	        nil
type DesktopPoolSessionLifecycleActionsDisconnectPtrInput interface {
	pulumi.Input

	ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutput() DesktopPoolSessionLifecycleActionsDisconnectPtrOutput
	ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutputWithContext(context.Context) DesktopPoolSessionLifecycleActionsDisconnectPtrOutput
}

type desktopPoolSessionLifecycleActionsDisconnectPtrType DesktopPoolSessionLifecycleActionsDisconnectArgs

func DesktopPoolSessionLifecycleActionsDisconnectPtr(v *DesktopPoolSessionLifecycleActionsDisconnectArgs) DesktopPoolSessionLifecycleActionsDisconnectPtrInput {
	return (*desktopPoolSessionLifecycleActionsDisconnectPtrType)(v)
}

func (*desktopPoolSessionLifecycleActionsDisconnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolSessionLifecycleActionsDisconnect)(nil)).Elem()
}

func (i *desktopPoolSessionLifecycleActionsDisconnectPtrType) ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutput() DesktopPoolSessionLifecycleActionsDisconnectPtrOutput {
	return i.ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutputWithContext(context.Background())
}

func (i *desktopPoolSessionLifecycleActionsDisconnectPtrType) ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsDisconnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolSessionLifecycleActionsDisconnectPtrOutput)
}

type DesktopPoolSessionLifecycleActionsDisconnectOutput struct{ *pulumi.OutputState }

func (DesktopPoolSessionLifecycleActionsDisconnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolSessionLifecycleActionsDisconnect)(nil)).Elem()
}

func (o DesktopPoolSessionLifecycleActionsDisconnectOutput) ToDesktopPoolSessionLifecycleActionsDisconnectOutput() DesktopPoolSessionLifecycleActionsDisconnectOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsDisconnectOutput) ToDesktopPoolSessionLifecycleActionsDisconnectOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsDisconnectOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsDisconnectOutput) ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutput() DesktopPoolSessionLifecycleActionsDisconnectPtrOutput {
	return o.ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutputWithContext(context.Background())
}

func (o DesktopPoolSessionLifecycleActionsDisconnectOutput) ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsDisconnectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DesktopPoolSessionLifecycleActionsDisconnect) *DesktopPoolSessionLifecycleActionsDisconnect {
		return &v
	}).(DesktopPoolSessionLifecycleActionsDisconnectPtrOutput)
}

// (Updatable) a disconnect action to be triggered. Could be set to NONE or STOP
func (o DesktopPoolSessionLifecycleActionsDisconnectOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolSessionLifecycleActionsDisconnect) string { return v.Action }).(pulumi.StringOutput)
}

// (Updatable) The period of time (in minutes) after disconnect before any action occurs. If the value is not provided, a default value is used.
func (o DesktopPoolSessionLifecycleActionsDisconnectOutput) GracePeriodInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DesktopPoolSessionLifecycleActionsDisconnect) *int { return v.GracePeriodInMinutes }).(pulumi.IntPtrOutput)
}

type DesktopPoolSessionLifecycleActionsDisconnectPtrOutput struct{ *pulumi.OutputState }

func (DesktopPoolSessionLifecycleActionsDisconnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolSessionLifecycleActionsDisconnect)(nil)).Elem()
}

func (o DesktopPoolSessionLifecycleActionsDisconnectPtrOutput) ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutput() DesktopPoolSessionLifecycleActionsDisconnectPtrOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsDisconnectPtrOutput) ToDesktopPoolSessionLifecycleActionsDisconnectPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsDisconnectPtrOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsDisconnectPtrOutput) Elem() DesktopPoolSessionLifecycleActionsDisconnectOutput {
	return o.ApplyT(func(v *DesktopPoolSessionLifecycleActionsDisconnect) DesktopPoolSessionLifecycleActionsDisconnect {
		if v != nil {
			return *v
		}
		var ret DesktopPoolSessionLifecycleActionsDisconnect
		return ret
	}).(DesktopPoolSessionLifecycleActionsDisconnectOutput)
}

// (Updatable) a disconnect action to be triggered. Could be set to NONE or STOP
func (o DesktopPoolSessionLifecycleActionsDisconnectPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolSessionLifecycleActionsDisconnect) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The period of time (in minutes) after disconnect before any action occurs. If the value is not provided, a default value is used.
func (o DesktopPoolSessionLifecycleActionsDisconnectPtrOutput) GracePeriodInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DesktopPoolSessionLifecycleActionsDisconnect) *int {
		if v == nil {
			return nil
		}
		return v.GracePeriodInMinutes
	}).(pulumi.IntPtrOutput)
}

type DesktopPoolSessionLifecycleActionsInactivity struct {
	// (Updatable) an inactivity action to be triggered. Could be set to NONE or DISCONNECT.
	Action string `pulumi:"action"`
	// (Updatable) The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes *int `pulumi:"gracePeriodInMinutes"`
}

// DesktopPoolSessionLifecycleActionsInactivityInput is an input type that accepts DesktopPoolSessionLifecycleActionsInactivityArgs and DesktopPoolSessionLifecycleActionsInactivityOutput values.
// You can construct a concrete instance of `DesktopPoolSessionLifecycleActionsInactivityInput` via:
//
//	DesktopPoolSessionLifecycleActionsInactivityArgs{...}
type DesktopPoolSessionLifecycleActionsInactivityInput interface {
	pulumi.Input

	ToDesktopPoolSessionLifecycleActionsInactivityOutput() DesktopPoolSessionLifecycleActionsInactivityOutput
	ToDesktopPoolSessionLifecycleActionsInactivityOutputWithContext(context.Context) DesktopPoolSessionLifecycleActionsInactivityOutput
}

type DesktopPoolSessionLifecycleActionsInactivityArgs struct {
	// (Updatable) an inactivity action to be triggered. Could be set to NONE or DISCONNECT.
	Action pulumi.StringInput `pulumi:"action"`
	// (Updatable) The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes pulumi.IntPtrInput `pulumi:"gracePeriodInMinutes"`
}

func (DesktopPoolSessionLifecycleActionsInactivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolSessionLifecycleActionsInactivity)(nil)).Elem()
}

func (i DesktopPoolSessionLifecycleActionsInactivityArgs) ToDesktopPoolSessionLifecycleActionsInactivityOutput() DesktopPoolSessionLifecycleActionsInactivityOutput {
	return i.ToDesktopPoolSessionLifecycleActionsInactivityOutputWithContext(context.Background())
}

func (i DesktopPoolSessionLifecycleActionsInactivityArgs) ToDesktopPoolSessionLifecycleActionsInactivityOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsInactivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolSessionLifecycleActionsInactivityOutput)
}

func (i DesktopPoolSessionLifecycleActionsInactivityArgs) ToDesktopPoolSessionLifecycleActionsInactivityPtrOutput() DesktopPoolSessionLifecycleActionsInactivityPtrOutput {
	return i.ToDesktopPoolSessionLifecycleActionsInactivityPtrOutputWithContext(context.Background())
}

func (i DesktopPoolSessionLifecycleActionsInactivityArgs) ToDesktopPoolSessionLifecycleActionsInactivityPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsInactivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolSessionLifecycleActionsInactivityOutput).ToDesktopPoolSessionLifecycleActionsInactivityPtrOutputWithContext(ctx)
}

// DesktopPoolSessionLifecycleActionsInactivityPtrInput is an input type that accepts DesktopPoolSessionLifecycleActionsInactivityArgs, DesktopPoolSessionLifecycleActionsInactivityPtr and DesktopPoolSessionLifecycleActionsInactivityPtrOutput values.
// You can construct a concrete instance of `DesktopPoolSessionLifecycleActionsInactivityPtrInput` via:
//
//	        DesktopPoolSessionLifecycleActionsInactivityArgs{...}
//
//	or:
//
//	        nil
type DesktopPoolSessionLifecycleActionsInactivityPtrInput interface {
	pulumi.Input

	ToDesktopPoolSessionLifecycleActionsInactivityPtrOutput() DesktopPoolSessionLifecycleActionsInactivityPtrOutput
	ToDesktopPoolSessionLifecycleActionsInactivityPtrOutputWithContext(context.Context) DesktopPoolSessionLifecycleActionsInactivityPtrOutput
}

type desktopPoolSessionLifecycleActionsInactivityPtrType DesktopPoolSessionLifecycleActionsInactivityArgs

func DesktopPoolSessionLifecycleActionsInactivityPtr(v *DesktopPoolSessionLifecycleActionsInactivityArgs) DesktopPoolSessionLifecycleActionsInactivityPtrInput {
	return (*desktopPoolSessionLifecycleActionsInactivityPtrType)(v)
}

func (*desktopPoolSessionLifecycleActionsInactivityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolSessionLifecycleActionsInactivity)(nil)).Elem()
}

func (i *desktopPoolSessionLifecycleActionsInactivityPtrType) ToDesktopPoolSessionLifecycleActionsInactivityPtrOutput() DesktopPoolSessionLifecycleActionsInactivityPtrOutput {
	return i.ToDesktopPoolSessionLifecycleActionsInactivityPtrOutputWithContext(context.Background())
}

func (i *desktopPoolSessionLifecycleActionsInactivityPtrType) ToDesktopPoolSessionLifecycleActionsInactivityPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsInactivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolSessionLifecycleActionsInactivityPtrOutput)
}

type DesktopPoolSessionLifecycleActionsInactivityOutput struct{ *pulumi.OutputState }

func (DesktopPoolSessionLifecycleActionsInactivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolSessionLifecycleActionsInactivity)(nil)).Elem()
}

func (o DesktopPoolSessionLifecycleActionsInactivityOutput) ToDesktopPoolSessionLifecycleActionsInactivityOutput() DesktopPoolSessionLifecycleActionsInactivityOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsInactivityOutput) ToDesktopPoolSessionLifecycleActionsInactivityOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsInactivityOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsInactivityOutput) ToDesktopPoolSessionLifecycleActionsInactivityPtrOutput() DesktopPoolSessionLifecycleActionsInactivityPtrOutput {
	return o.ToDesktopPoolSessionLifecycleActionsInactivityPtrOutputWithContext(context.Background())
}

func (o DesktopPoolSessionLifecycleActionsInactivityOutput) ToDesktopPoolSessionLifecycleActionsInactivityPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsInactivityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DesktopPoolSessionLifecycleActionsInactivity) *DesktopPoolSessionLifecycleActionsInactivity {
		return &v
	}).(DesktopPoolSessionLifecycleActionsInactivityPtrOutput)
}

// (Updatable) an inactivity action to be triggered. Could be set to NONE or DISCONNECT.
func (o DesktopPoolSessionLifecycleActionsInactivityOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DesktopPoolSessionLifecycleActionsInactivity) string { return v.Action }).(pulumi.StringOutput)
}

// (Updatable) The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
func (o DesktopPoolSessionLifecycleActionsInactivityOutput) GracePeriodInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DesktopPoolSessionLifecycleActionsInactivity) *int { return v.GracePeriodInMinutes }).(pulumi.IntPtrOutput)
}

type DesktopPoolSessionLifecycleActionsInactivityPtrOutput struct{ *pulumi.OutputState }

func (DesktopPoolSessionLifecycleActionsInactivityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolSessionLifecycleActionsInactivity)(nil)).Elem()
}

func (o DesktopPoolSessionLifecycleActionsInactivityPtrOutput) ToDesktopPoolSessionLifecycleActionsInactivityPtrOutput() DesktopPoolSessionLifecycleActionsInactivityPtrOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsInactivityPtrOutput) ToDesktopPoolSessionLifecycleActionsInactivityPtrOutputWithContext(ctx context.Context) DesktopPoolSessionLifecycleActionsInactivityPtrOutput {
	return o
}

func (o DesktopPoolSessionLifecycleActionsInactivityPtrOutput) Elem() DesktopPoolSessionLifecycleActionsInactivityOutput {
	return o.ApplyT(func(v *DesktopPoolSessionLifecycleActionsInactivity) DesktopPoolSessionLifecycleActionsInactivity {
		if v != nil {
			return *v
		}
		var ret DesktopPoolSessionLifecycleActionsInactivity
		return ret
	}).(DesktopPoolSessionLifecycleActionsInactivityOutput)
}

// (Updatable) an inactivity action to be triggered. Could be set to NONE or DISCONNECT.
func (o DesktopPoolSessionLifecycleActionsInactivityPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolSessionLifecycleActionsInactivity) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// (Updatable) The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
func (o DesktopPoolSessionLifecycleActionsInactivityPtrOutput) GracePeriodInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DesktopPoolSessionLifecycleActionsInactivity) *int {
		if v == nil {
			return nil
		}
		return v.GracePeriodInMinutes
	}).(pulumi.IntPtrOutput)
}

type DesktopPoolShapeConfig struct {
	// The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
	// * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
	// * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
	// * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
	BaselineOcpuUtilization *string `pulumi:"baselineOcpuUtilization"`
	// The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
	MemoryInGbs *string `pulumi:"memoryInGbs"`
	// The total number of OCPUs available for each desktop compute instance in the desktop pool.
	Ocpus *string `pulumi:"ocpus"`
}

// DesktopPoolShapeConfigInput is an input type that accepts DesktopPoolShapeConfigArgs and DesktopPoolShapeConfigOutput values.
// You can construct a concrete instance of `DesktopPoolShapeConfigInput` via:
//
//	DesktopPoolShapeConfigArgs{...}
type DesktopPoolShapeConfigInput interface {
	pulumi.Input

	ToDesktopPoolShapeConfigOutput() DesktopPoolShapeConfigOutput
	ToDesktopPoolShapeConfigOutputWithContext(context.Context) DesktopPoolShapeConfigOutput
}

type DesktopPoolShapeConfigArgs struct {
	// The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
	// * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
	// * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
	// * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
	BaselineOcpuUtilization pulumi.StringPtrInput `pulumi:"baselineOcpuUtilization"`
	// The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
	MemoryInGbs pulumi.StringPtrInput `pulumi:"memoryInGbs"`
	// The total number of OCPUs available for each desktop compute instance in the desktop pool.
	Ocpus pulumi.StringPtrInput `pulumi:"ocpus"`
}

func (DesktopPoolShapeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolShapeConfig)(nil)).Elem()
}

func (i DesktopPoolShapeConfigArgs) ToDesktopPoolShapeConfigOutput() DesktopPoolShapeConfigOutput {
	return i.ToDesktopPoolShapeConfigOutputWithContext(context.Background())
}

func (i DesktopPoolShapeConfigArgs) ToDesktopPoolShapeConfigOutputWithContext(ctx context.Context) DesktopPoolShapeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolShapeConfigOutput)
}

func (i DesktopPoolShapeConfigArgs) ToDesktopPoolShapeConfigPtrOutput() DesktopPoolShapeConfigPtrOutput {
	return i.ToDesktopPoolShapeConfigPtrOutputWithContext(context.Background())
}

func (i DesktopPoolShapeConfigArgs) ToDesktopPoolShapeConfigPtrOutputWithContext(ctx context.Context) DesktopPoolShapeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolShapeConfigOutput).ToDesktopPoolShapeConfigPtrOutputWithContext(ctx)
}

// DesktopPoolShapeConfigPtrInput is an input type that accepts DesktopPoolShapeConfigArgs, DesktopPoolShapeConfigPtr and DesktopPoolShapeConfigPtrOutput values.
// You can construct a concrete instance of `DesktopPoolShapeConfigPtrInput` via:
//
//	        DesktopPoolShapeConfigArgs{...}
//
//	or:
//
//	        nil
type DesktopPoolShapeConfigPtrInput interface {
	pulumi.Input

	ToDesktopPoolShapeConfigPtrOutput() DesktopPoolShapeConfigPtrOutput
	ToDesktopPoolShapeConfigPtrOutputWithContext(context.Context) DesktopPoolShapeConfigPtrOutput
}

type desktopPoolShapeConfigPtrType DesktopPoolShapeConfigArgs

func DesktopPoolShapeConfigPtr(v *DesktopPoolShapeConfigArgs) DesktopPoolShapeConfigPtrInput {
	return (*desktopPoolShapeConfigPtrType)(v)
}

func (*desktopPoolShapeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolShapeConfig)(nil)).Elem()
}

func (i *desktopPoolShapeConfigPtrType) ToDesktopPoolShapeConfigPtrOutput() DesktopPoolShapeConfigPtrOutput {
	return i.ToDesktopPoolShapeConfigPtrOutputWithContext(context.Background())
}

func (i *desktopPoolShapeConfigPtrType) ToDesktopPoolShapeConfigPtrOutputWithContext(ctx context.Context) DesktopPoolShapeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DesktopPoolShapeConfigPtrOutput)
}

type DesktopPoolShapeConfigOutput struct{ *pulumi.OutputState }

func (DesktopPoolShapeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DesktopPoolShapeConfig)(nil)).Elem()
}

func (o DesktopPoolShapeConfigOutput) ToDesktopPoolShapeConfigOutput() DesktopPoolShapeConfigOutput {
	return o
}

func (o DesktopPoolShapeConfigOutput) ToDesktopPoolShapeConfigOutputWithContext(ctx context.Context) DesktopPoolShapeConfigOutput {
	return o
}

func (o DesktopPoolShapeConfigOutput) ToDesktopPoolShapeConfigPtrOutput() DesktopPoolShapeConfigPtrOutput {
	return o.ToDesktopPoolShapeConfigPtrOutputWithContext(context.Background())
}

func (o DesktopPoolShapeConfigOutput) ToDesktopPoolShapeConfigPtrOutputWithContext(ctx context.Context) DesktopPoolShapeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DesktopPoolShapeConfig) *DesktopPoolShapeConfig {
		return &v
	}).(DesktopPoolShapeConfigPtrOutput)
}

// The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
// * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
// * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
// * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
func (o DesktopPoolShapeConfigOutput) BaselineOcpuUtilization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DesktopPoolShapeConfig) *string { return v.BaselineOcpuUtilization }).(pulumi.StringPtrOutput)
}

// The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
func (o DesktopPoolShapeConfigOutput) MemoryInGbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DesktopPoolShapeConfig) *string { return v.MemoryInGbs }).(pulumi.StringPtrOutput)
}

// The total number of OCPUs available for each desktop compute instance in the desktop pool.
func (o DesktopPoolShapeConfigOutput) Ocpus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DesktopPoolShapeConfig) *string { return v.Ocpus }).(pulumi.StringPtrOutput)
}

type DesktopPoolShapeConfigPtrOutput struct{ *pulumi.OutputState }

func (DesktopPoolShapeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DesktopPoolShapeConfig)(nil)).Elem()
}

func (o DesktopPoolShapeConfigPtrOutput) ToDesktopPoolShapeConfigPtrOutput() DesktopPoolShapeConfigPtrOutput {
	return o
}

func (o DesktopPoolShapeConfigPtrOutput) ToDesktopPoolShapeConfigPtrOutputWithContext(ctx context.Context) DesktopPoolShapeConfigPtrOutput {
	return o
}

func (o DesktopPoolShapeConfigPtrOutput) Elem() DesktopPoolShapeConfigOutput {
	return o.ApplyT(func(v *DesktopPoolShapeConfig) DesktopPoolShapeConfig {
		if v != nil {
			return *v
		}
		var ret DesktopPoolShapeConfig
		return ret
	}).(DesktopPoolShapeConfigOutput)
}

// The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
// * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
// * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
// * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
func (o DesktopPoolShapeConfigPtrOutput) BaselineOcpuUtilization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolShapeConfig) *string {
		if v == nil {
			return nil
		}
		return v.BaselineOcpuUtilization
	}).(pulumi.StringPtrOutput)
}

// The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
func (o DesktopPoolShapeConfigPtrOutput) MemoryInGbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolShapeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MemoryInGbs
	}).(pulumi.StringPtrOutput)
}

// The total number of OCPUs available for each desktop compute instance in the desktop pool.
func (o DesktopPoolShapeConfigPtrOutput) Ocpus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DesktopPoolShapeConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ocpus
	}).(pulumi.StringPtrOutput)
}

type GetDesktopDevicePolicy struct {
	// The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
	AudioMode string `pulumi:"audioMode"`
	// The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
	CdmMode string `pulumi:"cdmMode"`
	// The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
	ClipboardMode string `pulumi:"clipboardMode"`
	// Indicates whether the display is enabled.
	IsDisplayEnabled bool `pulumi:"isDisplayEnabled"`
	// Indicates whether the keyboard is enabled.
	IsKeyboardEnabled bool `pulumi:"isKeyboardEnabled"`
	// Indicates whether the pointer is enabled.
	IsPointerEnabled bool `pulumi:"isPointerEnabled"`
	// Indicates whether printing is enabled.
	IsPrintingEnabled bool `pulumi:"isPrintingEnabled"`
}

// GetDesktopDevicePolicyInput is an input type that accepts GetDesktopDevicePolicyArgs and GetDesktopDevicePolicyOutput values.
// You can construct a concrete instance of `GetDesktopDevicePolicyInput` via:
//
//	GetDesktopDevicePolicyArgs{...}
type GetDesktopDevicePolicyInput interface {
	pulumi.Input

	ToGetDesktopDevicePolicyOutput() GetDesktopDevicePolicyOutput
	ToGetDesktopDevicePolicyOutputWithContext(context.Context) GetDesktopDevicePolicyOutput
}

type GetDesktopDevicePolicyArgs struct {
	// The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
	AudioMode pulumi.StringInput `pulumi:"audioMode"`
	// The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
	CdmMode pulumi.StringInput `pulumi:"cdmMode"`
	// The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
	ClipboardMode pulumi.StringInput `pulumi:"clipboardMode"`
	// Indicates whether the display is enabled.
	IsDisplayEnabled pulumi.BoolInput `pulumi:"isDisplayEnabled"`
	// Indicates whether the keyboard is enabled.
	IsKeyboardEnabled pulumi.BoolInput `pulumi:"isKeyboardEnabled"`
	// Indicates whether the pointer is enabled.
	IsPointerEnabled pulumi.BoolInput `pulumi:"isPointerEnabled"`
	// Indicates whether printing is enabled.
	IsPrintingEnabled pulumi.BoolInput `pulumi:"isPrintingEnabled"`
}

func (GetDesktopDevicePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopDevicePolicy)(nil)).Elem()
}

func (i GetDesktopDevicePolicyArgs) ToGetDesktopDevicePolicyOutput() GetDesktopDevicePolicyOutput {
	return i.ToGetDesktopDevicePolicyOutputWithContext(context.Background())
}

func (i GetDesktopDevicePolicyArgs) ToGetDesktopDevicePolicyOutputWithContext(ctx context.Context) GetDesktopDevicePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopDevicePolicyOutput)
}

// GetDesktopDevicePolicyArrayInput is an input type that accepts GetDesktopDevicePolicyArray and GetDesktopDevicePolicyArrayOutput values.
// You can construct a concrete instance of `GetDesktopDevicePolicyArrayInput` via:
//
//	GetDesktopDevicePolicyArray{ GetDesktopDevicePolicyArgs{...} }
type GetDesktopDevicePolicyArrayInput interface {
	pulumi.Input

	ToGetDesktopDevicePolicyArrayOutput() GetDesktopDevicePolicyArrayOutput
	ToGetDesktopDevicePolicyArrayOutputWithContext(context.Context) GetDesktopDevicePolicyArrayOutput
}

type GetDesktopDevicePolicyArray []GetDesktopDevicePolicyInput

func (GetDesktopDevicePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopDevicePolicy)(nil)).Elem()
}

func (i GetDesktopDevicePolicyArray) ToGetDesktopDevicePolicyArrayOutput() GetDesktopDevicePolicyArrayOutput {
	return i.ToGetDesktopDevicePolicyArrayOutputWithContext(context.Background())
}

func (i GetDesktopDevicePolicyArray) ToGetDesktopDevicePolicyArrayOutputWithContext(ctx context.Context) GetDesktopDevicePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopDevicePolicyArrayOutput)
}

type GetDesktopDevicePolicyOutput struct{ *pulumi.OutputState }

func (GetDesktopDevicePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopDevicePolicy)(nil)).Elem()
}

func (o GetDesktopDevicePolicyOutput) ToGetDesktopDevicePolicyOutput() GetDesktopDevicePolicyOutput {
	return o
}

func (o GetDesktopDevicePolicyOutput) ToGetDesktopDevicePolicyOutputWithContext(ctx context.Context) GetDesktopDevicePolicyOutput {
	return o
}

// The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
func (o GetDesktopDevicePolicyOutput) AudioMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopDevicePolicy) string { return v.AudioMode }).(pulumi.StringOutput)
}

// The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
func (o GetDesktopDevicePolicyOutput) CdmMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopDevicePolicy) string { return v.CdmMode }).(pulumi.StringOutput)
}

// The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
func (o GetDesktopDevicePolicyOutput) ClipboardMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopDevicePolicy) string { return v.ClipboardMode }).(pulumi.StringOutput)
}

// Indicates whether the display is enabled.
func (o GetDesktopDevicePolicyOutput) IsDisplayEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopDevicePolicy) bool { return v.IsDisplayEnabled }).(pulumi.BoolOutput)
}

// Indicates whether the keyboard is enabled.
func (o GetDesktopDevicePolicyOutput) IsKeyboardEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopDevicePolicy) bool { return v.IsKeyboardEnabled }).(pulumi.BoolOutput)
}

// Indicates whether the pointer is enabled.
func (o GetDesktopDevicePolicyOutput) IsPointerEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopDevicePolicy) bool { return v.IsPointerEnabled }).(pulumi.BoolOutput)
}

// Indicates whether printing is enabled.
func (o GetDesktopDevicePolicyOutput) IsPrintingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopDevicePolicy) bool { return v.IsPrintingEnabled }).(pulumi.BoolOutput)
}

type GetDesktopDevicePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopDevicePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopDevicePolicy)(nil)).Elem()
}

func (o GetDesktopDevicePolicyArrayOutput) ToGetDesktopDevicePolicyArrayOutput() GetDesktopDevicePolicyArrayOutput {
	return o
}

func (o GetDesktopDevicePolicyArrayOutput) ToGetDesktopDevicePolicyArrayOutputWithContext(ctx context.Context) GetDesktopDevicePolicyArrayOutput {
	return o
}

func (o GetDesktopDevicePolicyArrayOutput) Index(i pulumi.IntInput) GetDesktopDevicePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopDevicePolicy {
		return vs[0].([]GetDesktopDevicePolicy)[vs[1].(int)]
	}).(GetDesktopDevicePolicyOutput)
}

type GetDesktopHostingOption struct {
	// The connection address of the desktop.
	ConnectAddress string `pulumi:"connectAddress"`
	// Provides information about the desktop image.
	Images []GetDesktopHostingOptionImage `pulumi:"images"`
}

// GetDesktopHostingOptionInput is an input type that accepts GetDesktopHostingOptionArgs and GetDesktopHostingOptionOutput values.
// You can construct a concrete instance of `GetDesktopHostingOptionInput` via:
//
//	GetDesktopHostingOptionArgs{...}
type GetDesktopHostingOptionInput interface {
	pulumi.Input

	ToGetDesktopHostingOptionOutput() GetDesktopHostingOptionOutput
	ToGetDesktopHostingOptionOutputWithContext(context.Context) GetDesktopHostingOptionOutput
}

type GetDesktopHostingOptionArgs struct {
	// The connection address of the desktop.
	ConnectAddress pulumi.StringInput `pulumi:"connectAddress"`
	// Provides information about the desktop image.
	Images GetDesktopHostingOptionImageArrayInput `pulumi:"images"`
}

func (GetDesktopHostingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopHostingOption)(nil)).Elem()
}

func (i GetDesktopHostingOptionArgs) ToGetDesktopHostingOptionOutput() GetDesktopHostingOptionOutput {
	return i.ToGetDesktopHostingOptionOutputWithContext(context.Background())
}

func (i GetDesktopHostingOptionArgs) ToGetDesktopHostingOptionOutputWithContext(ctx context.Context) GetDesktopHostingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopHostingOptionOutput)
}

// GetDesktopHostingOptionArrayInput is an input type that accepts GetDesktopHostingOptionArray and GetDesktopHostingOptionArrayOutput values.
// You can construct a concrete instance of `GetDesktopHostingOptionArrayInput` via:
//
//	GetDesktopHostingOptionArray{ GetDesktopHostingOptionArgs{...} }
type GetDesktopHostingOptionArrayInput interface {
	pulumi.Input

	ToGetDesktopHostingOptionArrayOutput() GetDesktopHostingOptionArrayOutput
	ToGetDesktopHostingOptionArrayOutputWithContext(context.Context) GetDesktopHostingOptionArrayOutput
}

type GetDesktopHostingOptionArray []GetDesktopHostingOptionInput

func (GetDesktopHostingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopHostingOption)(nil)).Elem()
}

func (i GetDesktopHostingOptionArray) ToGetDesktopHostingOptionArrayOutput() GetDesktopHostingOptionArrayOutput {
	return i.ToGetDesktopHostingOptionArrayOutputWithContext(context.Background())
}

func (i GetDesktopHostingOptionArray) ToGetDesktopHostingOptionArrayOutputWithContext(ctx context.Context) GetDesktopHostingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopHostingOptionArrayOutput)
}

type GetDesktopHostingOptionOutput struct{ *pulumi.OutputState }

func (GetDesktopHostingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopHostingOption)(nil)).Elem()
}

func (o GetDesktopHostingOptionOutput) ToGetDesktopHostingOptionOutput() GetDesktopHostingOptionOutput {
	return o
}

func (o GetDesktopHostingOptionOutput) ToGetDesktopHostingOptionOutputWithContext(ctx context.Context) GetDesktopHostingOptionOutput {
	return o
}

// The connection address of the desktop.
func (o GetDesktopHostingOptionOutput) ConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopHostingOption) string { return v.ConnectAddress }).(pulumi.StringOutput)
}

// Provides information about the desktop image.
func (o GetDesktopHostingOptionOutput) Images() GetDesktopHostingOptionImageArrayOutput {
	return o.ApplyT(func(v GetDesktopHostingOption) []GetDesktopHostingOptionImage { return v.Images }).(GetDesktopHostingOptionImageArrayOutput)
}

type GetDesktopHostingOptionArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopHostingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopHostingOption)(nil)).Elem()
}

func (o GetDesktopHostingOptionArrayOutput) ToGetDesktopHostingOptionArrayOutput() GetDesktopHostingOptionArrayOutput {
	return o
}

func (o GetDesktopHostingOptionArrayOutput) ToGetDesktopHostingOptionArrayOutputWithContext(ctx context.Context) GetDesktopHostingOptionArrayOutput {
	return o
}

func (o GetDesktopHostingOptionArrayOutput) Index(i pulumi.IntInput) GetDesktopHostingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopHostingOption {
		return vs[0].([]GetDesktopHostingOption)[vs[1].(int)]
	}).(GetDesktopHostingOptionOutput)
}

type GetDesktopHostingOptionImage struct {
	// The OCID of the desktop image.
	ImageId string `pulumi:"imageId"`
	// The name of the desktop image.
	ImageName string `pulumi:"imageName"`
	// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
	OperatingSystem string `pulumi:"operatingSystem"`
}

// GetDesktopHostingOptionImageInput is an input type that accepts GetDesktopHostingOptionImageArgs and GetDesktopHostingOptionImageOutput values.
// You can construct a concrete instance of `GetDesktopHostingOptionImageInput` via:
//
//	GetDesktopHostingOptionImageArgs{...}
type GetDesktopHostingOptionImageInput interface {
	pulumi.Input

	ToGetDesktopHostingOptionImageOutput() GetDesktopHostingOptionImageOutput
	ToGetDesktopHostingOptionImageOutputWithContext(context.Context) GetDesktopHostingOptionImageOutput
}

type GetDesktopHostingOptionImageArgs struct {
	// The OCID of the desktop image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The name of the desktop image.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
	OperatingSystem pulumi.StringInput `pulumi:"operatingSystem"`
}

func (GetDesktopHostingOptionImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopHostingOptionImage)(nil)).Elem()
}

func (i GetDesktopHostingOptionImageArgs) ToGetDesktopHostingOptionImageOutput() GetDesktopHostingOptionImageOutput {
	return i.ToGetDesktopHostingOptionImageOutputWithContext(context.Background())
}

func (i GetDesktopHostingOptionImageArgs) ToGetDesktopHostingOptionImageOutputWithContext(ctx context.Context) GetDesktopHostingOptionImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopHostingOptionImageOutput)
}

// GetDesktopHostingOptionImageArrayInput is an input type that accepts GetDesktopHostingOptionImageArray and GetDesktopHostingOptionImageArrayOutput values.
// You can construct a concrete instance of `GetDesktopHostingOptionImageArrayInput` via:
//
//	GetDesktopHostingOptionImageArray{ GetDesktopHostingOptionImageArgs{...} }
type GetDesktopHostingOptionImageArrayInput interface {
	pulumi.Input

	ToGetDesktopHostingOptionImageArrayOutput() GetDesktopHostingOptionImageArrayOutput
	ToGetDesktopHostingOptionImageArrayOutputWithContext(context.Context) GetDesktopHostingOptionImageArrayOutput
}

type GetDesktopHostingOptionImageArray []GetDesktopHostingOptionImageInput

func (GetDesktopHostingOptionImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopHostingOptionImage)(nil)).Elem()
}

func (i GetDesktopHostingOptionImageArray) ToGetDesktopHostingOptionImageArrayOutput() GetDesktopHostingOptionImageArrayOutput {
	return i.ToGetDesktopHostingOptionImageArrayOutputWithContext(context.Background())
}

func (i GetDesktopHostingOptionImageArray) ToGetDesktopHostingOptionImageArrayOutputWithContext(ctx context.Context) GetDesktopHostingOptionImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopHostingOptionImageArrayOutput)
}

type GetDesktopHostingOptionImageOutput struct{ *pulumi.OutputState }

func (GetDesktopHostingOptionImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopHostingOptionImage)(nil)).Elem()
}

func (o GetDesktopHostingOptionImageOutput) ToGetDesktopHostingOptionImageOutput() GetDesktopHostingOptionImageOutput {
	return o
}

func (o GetDesktopHostingOptionImageOutput) ToGetDesktopHostingOptionImageOutputWithContext(ctx context.Context) GetDesktopHostingOptionImageOutput {
	return o
}

// The OCID of the desktop image.
func (o GetDesktopHostingOptionImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopHostingOptionImage) string { return v.ImageId }).(pulumi.StringOutput)
}

// The name of the desktop image.
func (o GetDesktopHostingOptionImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopHostingOptionImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
func (o GetDesktopHostingOptionImageOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopHostingOptionImage) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

type GetDesktopHostingOptionImageArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopHostingOptionImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopHostingOptionImage)(nil)).Elem()
}

func (o GetDesktopHostingOptionImageArrayOutput) ToGetDesktopHostingOptionImageArrayOutput() GetDesktopHostingOptionImageArrayOutput {
	return o
}

func (o GetDesktopHostingOptionImageArrayOutput) ToGetDesktopHostingOptionImageArrayOutputWithContext(ctx context.Context) GetDesktopHostingOptionImageArrayOutput {
	return o
}

func (o GetDesktopHostingOptionImageArrayOutput) Index(i pulumi.IntInput) GetDesktopHostingOptionImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopHostingOptionImage {
		return vs[0].([]GetDesktopHostingOptionImage)[vs[1].(int)]
	}).(GetDesktopHostingOptionImageOutput)
}

type GetDesktopPoolAvailabilityPolicy struct {
	// Provides the schedule information for a desktop.
	StartSchedules []GetDesktopPoolAvailabilityPolicyStartSchedule `pulumi:"startSchedules"`
	// Provides the schedule information for a desktop.
	StopSchedules []GetDesktopPoolAvailabilityPolicyStopSchedule `pulumi:"stopSchedules"`
}

// GetDesktopPoolAvailabilityPolicyInput is an input type that accepts GetDesktopPoolAvailabilityPolicyArgs and GetDesktopPoolAvailabilityPolicyOutput values.
// You can construct a concrete instance of `GetDesktopPoolAvailabilityPolicyInput` via:
//
//	GetDesktopPoolAvailabilityPolicyArgs{...}
type GetDesktopPoolAvailabilityPolicyInput interface {
	pulumi.Input

	ToGetDesktopPoolAvailabilityPolicyOutput() GetDesktopPoolAvailabilityPolicyOutput
	ToGetDesktopPoolAvailabilityPolicyOutputWithContext(context.Context) GetDesktopPoolAvailabilityPolicyOutput
}

type GetDesktopPoolAvailabilityPolicyArgs struct {
	// Provides the schedule information for a desktop.
	StartSchedules GetDesktopPoolAvailabilityPolicyStartScheduleArrayInput `pulumi:"startSchedules"`
	// Provides the schedule information for a desktop.
	StopSchedules GetDesktopPoolAvailabilityPolicyStopScheduleArrayInput `pulumi:"stopSchedules"`
}

func (GetDesktopPoolAvailabilityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolAvailabilityPolicy)(nil)).Elem()
}

func (i GetDesktopPoolAvailabilityPolicyArgs) ToGetDesktopPoolAvailabilityPolicyOutput() GetDesktopPoolAvailabilityPolicyOutput {
	return i.ToGetDesktopPoolAvailabilityPolicyOutputWithContext(context.Background())
}

func (i GetDesktopPoolAvailabilityPolicyArgs) ToGetDesktopPoolAvailabilityPolicyOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolAvailabilityPolicyOutput)
}

// GetDesktopPoolAvailabilityPolicyArrayInput is an input type that accepts GetDesktopPoolAvailabilityPolicyArray and GetDesktopPoolAvailabilityPolicyArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolAvailabilityPolicyArrayInput` via:
//
//	GetDesktopPoolAvailabilityPolicyArray{ GetDesktopPoolAvailabilityPolicyArgs{...} }
type GetDesktopPoolAvailabilityPolicyArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolAvailabilityPolicyArrayOutput() GetDesktopPoolAvailabilityPolicyArrayOutput
	ToGetDesktopPoolAvailabilityPolicyArrayOutputWithContext(context.Context) GetDesktopPoolAvailabilityPolicyArrayOutput
}

type GetDesktopPoolAvailabilityPolicyArray []GetDesktopPoolAvailabilityPolicyInput

func (GetDesktopPoolAvailabilityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolAvailabilityPolicy)(nil)).Elem()
}

func (i GetDesktopPoolAvailabilityPolicyArray) ToGetDesktopPoolAvailabilityPolicyArrayOutput() GetDesktopPoolAvailabilityPolicyArrayOutput {
	return i.ToGetDesktopPoolAvailabilityPolicyArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolAvailabilityPolicyArray) ToGetDesktopPoolAvailabilityPolicyArrayOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolAvailabilityPolicyArrayOutput)
}

type GetDesktopPoolAvailabilityPolicyOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolAvailabilityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolAvailabilityPolicy)(nil)).Elem()
}

func (o GetDesktopPoolAvailabilityPolicyOutput) ToGetDesktopPoolAvailabilityPolicyOutput() GetDesktopPoolAvailabilityPolicyOutput {
	return o
}

func (o GetDesktopPoolAvailabilityPolicyOutput) ToGetDesktopPoolAvailabilityPolicyOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyOutput {
	return o
}

// Provides the schedule information for a desktop.
func (o GetDesktopPoolAvailabilityPolicyOutput) StartSchedules() GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolAvailabilityPolicy) []GetDesktopPoolAvailabilityPolicyStartSchedule {
		return v.StartSchedules
	}).(GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput)
}

// Provides the schedule information for a desktop.
func (o GetDesktopPoolAvailabilityPolicyOutput) StopSchedules() GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolAvailabilityPolicy) []GetDesktopPoolAvailabilityPolicyStopSchedule {
		return v.StopSchedules
	}).(GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput)
}

type GetDesktopPoolAvailabilityPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolAvailabilityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolAvailabilityPolicy)(nil)).Elem()
}

func (o GetDesktopPoolAvailabilityPolicyArrayOutput) ToGetDesktopPoolAvailabilityPolicyArrayOutput() GetDesktopPoolAvailabilityPolicyArrayOutput {
	return o
}

func (o GetDesktopPoolAvailabilityPolicyArrayOutput) ToGetDesktopPoolAvailabilityPolicyArrayOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyArrayOutput {
	return o
}

func (o GetDesktopPoolAvailabilityPolicyArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolAvailabilityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolAvailabilityPolicy {
		return vs[0].([]GetDesktopPoolAvailabilityPolicy)[vs[1].(int)]
	}).(GetDesktopPoolAvailabilityPolicyOutput)
}

type GetDesktopPoolAvailabilityPolicyStartSchedule struct {
	// A cron expression describing the desktop's schedule.
	CronExpression string `pulumi:"cronExpression"`
	// The timezone of the desktop's schedule.
	Timezone string `pulumi:"timezone"`
}

// GetDesktopPoolAvailabilityPolicyStartScheduleInput is an input type that accepts GetDesktopPoolAvailabilityPolicyStartScheduleArgs and GetDesktopPoolAvailabilityPolicyStartScheduleOutput values.
// You can construct a concrete instance of `GetDesktopPoolAvailabilityPolicyStartScheduleInput` via:
//
//	GetDesktopPoolAvailabilityPolicyStartScheduleArgs{...}
type GetDesktopPoolAvailabilityPolicyStartScheduleInput interface {
	pulumi.Input

	ToGetDesktopPoolAvailabilityPolicyStartScheduleOutput() GetDesktopPoolAvailabilityPolicyStartScheduleOutput
	ToGetDesktopPoolAvailabilityPolicyStartScheduleOutputWithContext(context.Context) GetDesktopPoolAvailabilityPolicyStartScheduleOutput
}

type GetDesktopPoolAvailabilityPolicyStartScheduleArgs struct {
	// A cron expression describing the desktop's schedule.
	CronExpression pulumi.StringInput `pulumi:"cronExpression"`
	// The timezone of the desktop's schedule.
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (GetDesktopPoolAvailabilityPolicyStartScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (i GetDesktopPoolAvailabilityPolicyStartScheduleArgs) ToGetDesktopPoolAvailabilityPolicyStartScheduleOutput() GetDesktopPoolAvailabilityPolicyStartScheduleOutput {
	return i.ToGetDesktopPoolAvailabilityPolicyStartScheduleOutputWithContext(context.Background())
}

func (i GetDesktopPoolAvailabilityPolicyStartScheduleArgs) ToGetDesktopPoolAvailabilityPolicyStartScheduleOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyStartScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolAvailabilityPolicyStartScheduleOutput)
}

// GetDesktopPoolAvailabilityPolicyStartScheduleArrayInput is an input type that accepts GetDesktopPoolAvailabilityPolicyStartScheduleArray and GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolAvailabilityPolicyStartScheduleArrayInput` via:
//
//	GetDesktopPoolAvailabilityPolicyStartScheduleArray{ GetDesktopPoolAvailabilityPolicyStartScheduleArgs{...} }
type GetDesktopPoolAvailabilityPolicyStartScheduleArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput() GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput
	ToGetDesktopPoolAvailabilityPolicyStartScheduleArrayOutputWithContext(context.Context) GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput
}

type GetDesktopPoolAvailabilityPolicyStartScheduleArray []GetDesktopPoolAvailabilityPolicyStartScheduleInput

func (GetDesktopPoolAvailabilityPolicyStartScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (i GetDesktopPoolAvailabilityPolicyStartScheduleArray) ToGetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput() GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput {
	return i.ToGetDesktopPoolAvailabilityPolicyStartScheduleArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolAvailabilityPolicyStartScheduleArray) ToGetDesktopPoolAvailabilityPolicyStartScheduleArrayOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput)
}

type GetDesktopPoolAvailabilityPolicyStartScheduleOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolAvailabilityPolicyStartScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (o GetDesktopPoolAvailabilityPolicyStartScheduleOutput) ToGetDesktopPoolAvailabilityPolicyStartScheduleOutput() GetDesktopPoolAvailabilityPolicyStartScheduleOutput {
	return o
}

func (o GetDesktopPoolAvailabilityPolicyStartScheduleOutput) ToGetDesktopPoolAvailabilityPolicyStartScheduleOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyStartScheduleOutput {
	return o
}

// A cron expression describing the desktop's schedule.
func (o GetDesktopPoolAvailabilityPolicyStartScheduleOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolAvailabilityPolicyStartSchedule) string { return v.CronExpression }).(pulumi.StringOutput)
}

// The timezone of the desktop's schedule.
func (o GetDesktopPoolAvailabilityPolicyStartScheduleOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolAvailabilityPolicyStartSchedule) string { return v.Timezone }).(pulumi.StringOutput)
}

type GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (o GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput) ToGetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput() GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput {
	return o
}

func (o GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput) ToGetDesktopPoolAvailabilityPolicyStartScheduleArrayOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput {
	return o
}

func (o GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolAvailabilityPolicyStartScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolAvailabilityPolicyStartSchedule {
		return vs[0].([]GetDesktopPoolAvailabilityPolicyStartSchedule)[vs[1].(int)]
	}).(GetDesktopPoolAvailabilityPolicyStartScheduleOutput)
}

type GetDesktopPoolAvailabilityPolicyStopSchedule struct {
	// A cron expression describing the desktop's schedule.
	CronExpression string `pulumi:"cronExpression"`
	// The timezone of the desktop's schedule.
	Timezone string `pulumi:"timezone"`
}

// GetDesktopPoolAvailabilityPolicyStopScheduleInput is an input type that accepts GetDesktopPoolAvailabilityPolicyStopScheduleArgs and GetDesktopPoolAvailabilityPolicyStopScheduleOutput values.
// You can construct a concrete instance of `GetDesktopPoolAvailabilityPolicyStopScheduleInput` via:
//
//	GetDesktopPoolAvailabilityPolicyStopScheduleArgs{...}
type GetDesktopPoolAvailabilityPolicyStopScheduleInput interface {
	pulumi.Input

	ToGetDesktopPoolAvailabilityPolicyStopScheduleOutput() GetDesktopPoolAvailabilityPolicyStopScheduleOutput
	ToGetDesktopPoolAvailabilityPolicyStopScheduleOutputWithContext(context.Context) GetDesktopPoolAvailabilityPolicyStopScheduleOutput
}

type GetDesktopPoolAvailabilityPolicyStopScheduleArgs struct {
	// A cron expression describing the desktop's schedule.
	CronExpression pulumi.StringInput `pulumi:"cronExpression"`
	// The timezone of the desktop's schedule.
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (GetDesktopPoolAvailabilityPolicyStopScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (i GetDesktopPoolAvailabilityPolicyStopScheduleArgs) ToGetDesktopPoolAvailabilityPolicyStopScheduleOutput() GetDesktopPoolAvailabilityPolicyStopScheduleOutput {
	return i.ToGetDesktopPoolAvailabilityPolicyStopScheduleOutputWithContext(context.Background())
}

func (i GetDesktopPoolAvailabilityPolicyStopScheduleArgs) ToGetDesktopPoolAvailabilityPolicyStopScheduleOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyStopScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolAvailabilityPolicyStopScheduleOutput)
}

// GetDesktopPoolAvailabilityPolicyStopScheduleArrayInput is an input type that accepts GetDesktopPoolAvailabilityPolicyStopScheduleArray and GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolAvailabilityPolicyStopScheduleArrayInput` via:
//
//	GetDesktopPoolAvailabilityPolicyStopScheduleArray{ GetDesktopPoolAvailabilityPolicyStopScheduleArgs{...} }
type GetDesktopPoolAvailabilityPolicyStopScheduleArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput() GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput
	ToGetDesktopPoolAvailabilityPolicyStopScheduleArrayOutputWithContext(context.Context) GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput
}

type GetDesktopPoolAvailabilityPolicyStopScheduleArray []GetDesktopPoolAvailabilityPolicyStopScheduleInput

func (GetDesktopPoolAvailabilityPolicyStopScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (i GetDesktopPoolAvailabilityPolicyStopScheduleArray) ToGetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput() GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput {
	return i.ToGetDesktopPoolAvailabilityPolicyStopScheduleArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolAvailabilityPolicyStopScheduleArray) ToGetDesktopPoolAvailabilityPolicyStopScheduleArrayOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput)
}

type GetDesktopPoolAvailabilityPolicyStopScheduleOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolAvailabilityPolicyStopScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (o GetDesktopPoolAvailabilityPolicyStopScheduleOutput) ToGetDesktopPoolAvailabilityPolicyStopScheduleOutput() GetDesktopPoolAvailabilityPolicyStopScheduleOutput {
	return o
}

func (o GetDesktopPoolAvailabilityPolicyStopScheduleOutput) ToGetDesktopPoolAvailabilityPolicyStopScheduleOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyStopScheduleOutput {
	return o
}

// A cron expression describing the desktop's schedule.
func (o GetDesktopPoolAvailabilityPolicyStopScheduleOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolAvailabilityPolicyStopSchedule) string { return v.CronExpression }).(pulumi.StringOutput)
}

// The timezone of the desktop's schedule.
func (o GetDesktopPoolAvailabilityPolicyStopScheduleOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolAvailabilityPolicyStopSchedule) string { return v.Timezone }).(pulumi.StringOutput)
}

type GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (o GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput) ToGetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput() GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput {
	return o
}

func (o GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput) ToGetDesktopPoolAvailabilityPolicyStopScheduleArrayOutputWithContext(ctx context.Context) GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput {
	return o
}

func (o GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolAvailabilityPolicyStopScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolAvailabilityPolicyStopSchedule {
		return vs[0].([]GetDesktopPoolAvailabilityPolicyStopSchedule)[vs[1].(int)]
	}).(GetDesktopPoolAvailabilityPolicyStopScheduleOutput)
}

type GetDesktopPoolDesktopsDesktopPoolDesktopCollection struct {
	// A list of desktops.
	Items []GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem `pulumi:"items"`
}

// GetDesktopPoolDesktopsDesktopPoolDesktopCollectionInput is an input type that accepts GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArgs and GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput values.
// You can construct a concrete instance of `GetDesktopPoolDesktopsDesktopPoolDesktopCollectionInput` via:
//
//	GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArgs{...}
type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionInput interface {
	pulumi.Input

	ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput
	ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutputWithContext(context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput
}

type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArgs struct {
	// A list of desktops.
	Items GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayInput `pulumi:"items"`
}

func (GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolDesktopsDesktopPoolDesktopCollection)(nil)).Elem()
}

func (i GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArgs) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput {
	return i.ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutputWithContext(context.Background())
}

func (i GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArgs) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput)
}

// GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayInput is an input type that accepts GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArray and GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayInput` via:
//
//	GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArray{ GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArgs{...} }
type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput
	ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutputWithContext(context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput
}

type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArray []GetDesktopPoolDesktopsDesktopPoolDesktopCollectionInput

func (GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolDesktopsDesktopPoolDesktopCollection)(nil)).Elem()
}

func (i GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArray) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput {
	return i.ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArray) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput)
}

type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolDesktopsDesktopPoolDesktopCollection)(nil)).Elem()
}

func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput {
	return o
}

func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput {
	return o
}

// A list of desktops.
func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput) Items() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsDesktopPoolDesktopCollection) []GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem {
		return v.Items
	}).(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput)
}

type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolDesktopsDesktopPoolDesktopCollection)(nil)).Elem()
}

func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput {
	return o
}

func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput {
	return o
}

func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolDesktopsDesktopPoolDesktopCollection {
		return vs[0].([]GetDesktopPoolDesktopsDesktopPoolDesktopCollection)[vs[1].(int)]
	}).(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput)
}

type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The OCID of the desktop.
	DesktopId string `pulumi:"desktopId"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the compute resource used by this desktop.
	InstanceId string `pulumi:"instanceId"`
	// Indicates whether the desktop is assigned to a user.
	IsAssigned bool `pulumi:"isAssigned"`
	// A filter to return only results with the given lifecycleState.
	State string `pulumi:"state"`
	// The date and time the resource was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The owner of the desktop.
	UserName string `pulumi:"userName"`
}

// GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemInput is an input type that accepts GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArgs and GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput values.
// You can construct a concrete instance of `GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemInput` via:
//
//	GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArgs{...}
type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemInput interface {
	pulumi.Input

	ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput
	ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutputWithContext(context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput
}

type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArgs struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The OCID of the desktop.
	DesktopId pulumi.StringInput `pulumi:"desktopId"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the compute resource used by this desktop.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Indicates whether the desktop is assigned to a user.
	IsAssigned pulumi.BoolInput `pulumi:"isAssigned"`
	// A filter to return only results with the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the resource was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The owner of the desktop.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem)(nil)).Elem()
}

func (i GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArgs) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput {
	return i.ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutputWithContext(context.Background())
}

func (i GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArgs) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput)
}

// GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayInput is an input type that accepts GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArray and GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayInput` via:
//
//	GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArray{ GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArgs{...} }
type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput
	ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutputWithContext(context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput
}

type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArray []GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemInput

func (GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem)(nil)).Elem()
}

func (i GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArray) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput {
	return i.ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArray) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput)
}

type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem)(nil)).Elem()
}

func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput {
	return o
}

func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput {
	return o
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The OCID of the desktop.
func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput) DesktopId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem) string { return v.DesktopId }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem) map[string]string {
		return v.FreeformTags
	}).(pulumi.StringMapOutput)
}

// The OCID of the compute resource used by this desktop.
func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Indicates whether the desktop is assigned to a user.
func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput) IsAssigned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem) bool { return v.IsAssigned }).(pulumi.BoolOutput)
}

// A filter to return only results with the given lifecycleState.
func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created.
func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The owner of the desktop.
func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem) string { return v.UserName }).(pulumi.StringOutput)
}

type GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem)(nil)).Elem()
}

func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput() GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput {
	return o
}

func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput) ToGetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput {
	return o
}

func (o GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem {
		return vs[0].([]GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItem)[vs[1].(int)]
	}).(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput)
}

type GetDesktopPoolDesktopsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetDesktopPoolDesktopsFilterInput is an input type that accepts GetDesktopPoolDesktopsFilterArgs and GetDesktopPoolDesktopsFilterOutput values.
// You can construct a concrete instance of `GetDesktopPoolDesktopsFilterInput` via:
//
//	GetDesktopPoolDesktopsFilterArgs{...}
type GetDesktopPoolDesktopsFilterInput interface {
	pulumi.Input

	ToGetDesktopPoolDesktopsFilterOutput() GetDesktopPoolDesktopsFilterOutput
	ToGetDesktopPoolDesktopsFilterOutputWithContext(context.Context) GetDesktopPoolDesktopsFilterOutput
}

type GetDesktopPoolDesktopsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDesktopPoolDesktopsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolDesktopsFilter)(nil)).Elem()
}

func (i GetDesktopPoolDesktopsFilterArgs) ToGetDesktopPoolDesktopsFilterOutput() GetDesktopPoolDesktopsFilterOutput {
	return i.ToGetDesktopPoolDesktopsFilterOutputWithContext(context.Background())
}

func (i GetDesktopPoolDesktopsFilterArgs) ToGetDesktopPoolDesktopsFilterOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolDesktopsFilterOutput)
}

// GetDesktopPoolDesktopsFilterArrayInput is an input type that accepts GetDesktopPoolDesktopsFilterArray and GetDesktopPoolDesktopsFilterArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolDesktopsFilterArrayInput` via:
//
//	GetDesktopPoolDesktopsFilterArray{ GetDesktopPoolDesktopsFilterArgs{...} }
type GetDesktopPoolDesktopsFilterArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolDesktopsFilterArrayOutput() GetDesktopPoolDesktopsFilterArrayOutput
	ToGetDesktopPoolDesktopsFilterArrayOutputWithContext(context.Context) GetDesktopPoolDesktopsFilterArrayOutput
}

type GetDesktopPoolDesktopsFilterArray []GetDesktopPoolDesktopsFilterInput

func (GetDesktopPoolDesktopsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolDesktopsFilter)(nil)).Elem()
}

func (i GetDesktopPoolDesktopsFilterArray) ToGetDesktopPoolDesktopsFilterArrayOutput() GetDesktopPoolDesktopsFilterArrayOutput {
	return i.ToGetDesktopPoolDesktopsFilterArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolDesktopsFilterArray) ToGetDesktopPoolDesktopsFilterArrayOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolDesktopsFilterArrayOutput)
}

type GetDesktopPoolDesktopsFilterOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolDesktopsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolDesktopsFilter)(nil)).Elem()
}

func (o GetDesktopPoolDesktopsFilterOutput) ToGetDesktopPoolDesktopsFilterOutput() GetDesktopPoolDesktopsFilterOutput {
	return o
}

func (o GetDesktopPoolDesktopsFilterOutput) ToGetDesktopPoolDesktopsFilterOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsFilterOutput {
	return o
}

func (o GetDesktopPoolDesktopsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDesktopPoolDesktopsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetDesktopPoolDesktopsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolDesktopsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDesktopPoolDesktopsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolDesktopsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolDesktopsFilter)(nil)).Elem()
}

func (o GetDesktopPoolDesktopsFilterArrayOutput) ToGetDesktopPoolDesktopsFilterArrayOutput() GetDesktopPoolDesktopsFilterArrayOutput {
	return o
}

func (o GetDesktopPoolDesktopsFilterArrayOutput) ToGetDesktopPoolDesktopsFilterArrayOutputWithContext(ctx context.Context) GetDesktopPoolDesktopsFilterArrayOutput {
	return o
}

func (o GetDesktopPoolDesktopsFilterArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolDesktopsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolDesktopsFilter {
		return vs[0].([]GetDesktopPoolDesktopsFilter)[vs[1].(int)]
	}).(GetDesktopPoolDesktopsFilterOutput)
}

type GetDesktopPoolDevicePolicy struct {
	// The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
	AudioMode string `pulumi:"audioMode"`
	// The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
	CdmMode string `pulumi:"cdmMode"`
	// The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
	ClipboardMode string `pulumi:"clipboardMode"`
	// Indicates whether the display is enabled.
	IsDisplayEnabled bool `pulumi:"isDisplayEnabled"`
	// Indicates whether the keyboard is enabled.
	IsKeyboardEnabled bool `pulumi:"isKeyboardEnabled"`
	// Indicates whether the pointer is enabled.
	IsPointerEnabled bool `pulumi:"isPointerEnabled"`
	// Indicates whether printing is enabled.
	IsPrintingEnabled bool `pulumi:"isPrintingEnabled"`
}

// GetDesktopPoolDevicePolicyInput is an input type that accepts GetDesktopPoolDevicePolicyArgs and GetDesktopPoolDevicePolicyOutput values.
// You can construct a concrete instance of `GetDesktopPoolDevicePolicyInput` via:
//
//	GetDesktopPoolDevicePolicyArgs{...}
type GetDesktopPoolDevicePolicyInput interface {
	pulumi.Input

	ToGetDesktopPoolDevicePolicyOutput() GetDesktopPoolDevicePolicyOutput
	ToGetDesktopPoolDevicePolicyOutputWithContext(context.Context) GetDesktopPoolDevicePolicyOutput
}

type GetDesktopPoolDevicePolicyArgs struct {
	// The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
	AudioMode pulumi.StringInput `pulumi:"audioMode"`
	// The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
	CdmMode pulumi.StringInput `pulumi:"cdmMode"`
	// The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
	ClipboardMode pulumi.StringInput `pulumi:"clipboardMode"`
	// Indicates whether the display is enabled.
	IsDisplayEnabled pulumi.BoolInput `pulumi:"isDisplayEnabled"`
	// Indicates whether the keyboard is enabled.
	IsKeyboardEnabled pulumi.BoolInput `pulumi:"isKeyboardEnabled"`
	// Indicates whether the pointer is enabled.
	IsPointerEnabled pulumi.BoolInput `pulumi:"isPointerEnabled"`
	// Indicates whether printing is enabled.
	IsPrintingEnabled pulumi.BoolInput `pulumi:"isPrintingEnabled"`
}

func (GetDesktopPoolDevicePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolDevicePolicy)(nil)).Elem()
}

func (i GetDesktopPoolDevicePolicyArgs) ToGetDesktopPoolDevicePolicyOutput() GetDesktopPoolDevicePolicyOutput {
	return i.ToGetDesktopPoolDevicePolicyOutputWithContext(context.Background())
}

func (i GetDesktopPoolDevicePolicyArgs) ToGetDesktopPoolDevicePolicyOutputWithContext(ctx context.Context) GetDesktopPoolDevicePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolDevicePolicyOutput)
}

// GetDesktopPoolDevicePolicyArrayInput is an input type that accepts GetDesktopPoolDevicePolicyArray and GetDesktopPoolDevicePolicyArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolDevicePolicyArrayInput` via:
//
//	GetDesktopPoolDevicePolicyArray{ GetDesktopPoolDevicePolicyArgs{...} }
type GetDesktopPoolDevicePolicyArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolDevicePolicyArrayOutput() GetDesktopPoolDevicePolicyArrayOutput
	ToGetDesktopPoolDevicePolicyArrayOutputWithContext(context.Context) GetDesktopPoolDevicePolicyArrayOutput
}

type GetDesktopPoolDevicePolicyArray []GetDesktopPoolDevicePolicyInput

func (GetDesktopPoolDevicePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolDevicePolicy)(nil)).Elem()
}

func (i GetDesktopPoolDevicePolicyArray) ToGetDesktopPoolDevicePolicyArrayOutput() GetDesktopPoolDevicePolicyArrayOutput {
	return i.ToGetDesktopPoolDevicePolicyArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolDevicePolicyArray) ToGetDesktopPoolDevicePolicyArrayOutputWithContext(ctx context.Context) GetDesktopPoolDevicePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolDevicePolicyArrayOutput)
}

type GetDesktopPoolDevicePolicyOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolDevicePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolDevicePolicy)(nil)).Elem()
}

func (o GetDesktopPoolDevicePolicyOutput) ToGetDesktopPoolDevicePolicyOutput() GetDesktopPoolDevicePolicyOutput {
	return o
}

func (o GetDesktopPoolDevicePolicyOutput) ToGetDesktopPoolDevicePolicyOutputWithContext(ctx context.Context) GetDesktopPoolDevicePolicyOutput {
	return o
}

// The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
func (o GetDesktopPoolDevicePolicyOutput) AudioMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolDevicePolicy) string { return v.AudioMode }).(pulumi.StringOutput)
}

// The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
func (o GetDesktopPoolDevicePolicyOutput) CdmMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolDevicePolicy) string { return v.CdmMode }).(pulumi.StringOutput)
}

// The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
func (o GetDesktopPoolDevicePolicyOutput) ClipboardMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolDevicePolicy) string { return v.ClipboardMode }).(pulumi.StringOutput)
}

// Indicates whether the display is enabled.
func (o GetDesktopPoolDevicePolicyOutput) IsDisplayEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolDevicePolicy) bool { return v.IsDisplayEnabled }).(pulumi.BoolOutput)
}

// Indicates whether the keyboard is enabled.
func (o GetDesktopPoolDevicePolicyOutput) IsKeyboardEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolDevicePolicy) bool { return v.IsKeyboardEnabled }).(pulumi.BoolOutput)
}

// Indicates whether the pointer is enabled.
func (o GetDesktopPoolDevicePolicyOutput) IsPointerEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolDevicePolicy) bool { return v.IsPointerEnabled }).(pulumi.BoolOutput)
}

// Indicates whether printing is enabled.
func (o GetDesktopPoolDevicePolicyOutput) IsPrintingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolDevicePolicy) bool { return v.IsPrintingEnabled }).(pulumi.BoolOutput)
}

type GetDesktopPoolDevicePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolDevicePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolDevicePolicy)(nil)).Elem()
}

func (o GetDesktopPoolDevicePolicyArrayOutput) ToGetDesktopPoolDevicePolicyArrayOutput() GetDesktopPoolDevicePolicyArrayOutput {
	return o
}

func (o GetDesktopPoolDevicePolicyArrayOutput) ToGetDesktopPoolDevicePolicyArrayOutputWithContext(ctx context.Context) GetDesktopPoolDevicePolicyArrayOutput {
	return o
}

func (o GetDesktopPoolDevicePolicyArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolDevicePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolDevicePolicy {
		return vs[0].([]GetDesktopPoolDevicePolicy)[vs[1].(int)]
	}).(GetDesktopPoolDevicePolicyOutput)
}

type GetDesktopPoolImage struct {
	// The OCID of the desktop image.
	ImageId string `pulumi:"imageId"`
	// The name of the desktop image.
	ImageName string `pulumi:"imageName"`
	// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
	OperatingSystem string `pulumi:"operatingSystem"`
}

// GetDesktopPoolImageInput is an input type that accepts GetDesktopPoolImageArgs and GetDesktopPoolImageOutput values.
// You can construct a concrete instance of `GetDesktopPoolImageInput` via:
//
//	GetDesktopPoolImageArgs{...}
type GetDesktopPoolImageInput interface {
	pulumi.Input

	ToGetDesktopPoolImageOutput() GetDesktopPoolImageOutput
	ToGetDesktopPoolImageOutputWithContext(context.Context) GetDesktopPoolImageOutput
}

type GetDesktopPoolImageArgs struct {
	// The OCID of the desktop image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The name of the desktop image.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
	OperatingSystem pulumi.StringInput `pulumi:"operatingSystem"`
}

func (GetDesktopPoolImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolImage)(nil)).Elem()
}

func (i GetDesktopPoolImageArgs) ToGetDesktopPoolImageOutput() GetDesktopPoolImageOutput {
	return i.ToGetDesktopPoolImageOutputWithContext(context.Background())
}

func (i GetDesktopPoolImageArgs) ToGetDesktopPoolImageOutputWithContext(ctx context.Context) GetDesktopPoolImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolImageOutput)
}

// GetDesktopPoolImageArrayInput is an input type that accepts GetDesktopPoolImageArray and GetDesktopPoolImageArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolImageArrayInput` via:
//
//	GetDesktopPoolImageArray{ GetDesktopPoolImageArgs{...} }
type GetDesktopPoolImageArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolImageArrayOutput() GetDesktopPoolImageArrayOutput
	ToGetDesktopPoolImageArrayOutputWithContext(context.Context) GetDesktopPoolImageArrayOutput
}

type GetDesktopPoolImageArray []GetDesktopPoolImageInput

func (GetDesktopPoolImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolImage)(nil)).Elem()
}

func (i GetDesktopPoolImageArray) ToGetDesktopPoolImageArrayOutput() GetDesktopPoolImageArrayOutput {
	return i.ToGetDesktopPoolImageArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolImageArray) ToGetDesktopPoolImageArrayOutputWithContext(ctx context.Context) GetDesktopPoolImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolImageArrayOutput)
}

type GetDesktopPoolImageOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolImage)(nil)).Elem()
}

func (o GetDesktopPoolImageOutput) ToGetDesktopPoolImageOutput() GetDesktopPoolImageOutput {
	return o
}

func (o GetDesktopPoolImageOutput) ToGetDesktopPoolImageOutputWithContext(ctx context.Context) GetDesktopPoolImageOutput {
	return o
}

// The OCID of the desktop image.
func (o GetDesktopPoolImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolImage) string { return v.ImageId }).(pulumi.StringOutput)
}

// The name of the desktop image.
func (o GetDesktopPoolImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
func (o GetDesktopPoolImageOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolImage) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

type GetDesktopPoolImageArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolImage)(nil)).Elem()
}

func (o GetDesktopPoolImageArrayOutput) ToGetDesktopPoolImageArrayOutput() GetDesktopPoolImageArrayOutput {
	return o
}

func (o GetDesktopPoolImageArrayOutput) ToGetDesktopPoolImageArrayOutputWithContext(ctx context.Context) GetDesktopPoolImageArrayOutput {
	return o
}

func (o GetDesktopPoolImageArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolImage {
		return vs[0].([]GetDesktopPoolImage)[vs[1].(int)]
	}).(GetDesktopPoolImageOutput)
}

type GetDesktopPoolNetworkConfiguration struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
	SubnetId string `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId string `pulumi:"vcnId"`
}

// GetDesktopPoolNetworkConfigurationInput is an input type that accepts GetDesktopPoolNetworkConfigurationArgs and GetDesktopPoolNetworkConfigurationOutput values.
// You can construct a concrete instance of `GetDesktopPoolNetworkConfigurationInput` via:
//
//	GetDesktopPoolNetworkConfigurationArgs{...}
type GetDesktopPoolNetworkConfigurationInput interface {
	pulumi.Input

	ToGetDesktopPoolNetworkConfigurationOutput() GetDesktopPoolNetworkConfigurationOutput
	ToGetDesktopPoolNetworkConfigurationOutputWithContext(context.Context) GetDesktopPoolNetworkConfigurationOutput
}

type GetDesktopPoolNetworkConfigurationArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId pulumi.StringInput `pulumi:"vcnId"`
}

func (GetDesktopPoolNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolNetworkConfiguration)(nil)).Elem()
}

func (i GetDesktopPoolNetworkConfigurationArgs) ToGetDesktopPoolNetworkConfigurationOutput() GetDesktopPoolNetworkConfigurationOutput {
	return i.ToGetDesktopPoolNetworkConfigurationOutputWithContext(context.Background())
}

func (i GetDesktopPoolNetworkConfigurationArgs) ToGetDesktopPoolNetworkConfigurationOutputWithContext(ctx context.Context) GetDesktopPoolNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolNetworkConfigurationOutput)
}

// GetDesktopPoolNetworkConfigurationArrayInput is an input type that accepts GetDesktopPoolNetworkConfigurationArray and GetDesktopPoolNetworkConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolNetworkConfigurationArrayInput` via:
//
//	GetDesktopPoolNetworkConfigurationArray{ GetDesktopPoolNetworkConfigurationArgs{...} }
type GetDesktopPoolNetworkConfigurationArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolNetworkConfigurationArrayOutput() GetDesktopPoolNetworkConfigurationArrayOutput
	ToGetDesktopPoolNetworkConfigurationArrayOutputWithContext(context.Context) GetDesktopPoolNetworkConfigurationArrayOutput
}

type GetDesktopPoolNetworkConfigurationArray []GetDesktopPoolNetworkConfigurationInput

func (GetDesktopPoolNetworkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolNetworkConfiguration)(nil)).Elem()
}

func (i GetDesktopPoolNetworkConfigurationArray) ToGetDesktopPoolNetworkConfigurationArrayOutput() GetDesktopPoolNetworkConfigurationArrayOutput {
	return i.ToGetDesktopPoolNetworkConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolNetworkConfigurationArray) ToGetDesktopPoolNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetDesktopPoolNetworkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolNetworkConfigurationArrayOutput)
}

type GetDesktopPoolNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolNetworkConfiguration)(nil)).Elem()
}

func (o GetDesktopPoolNetworkConfigurationOutput) ToGetDesktopPoolNetworkConfigurationOutput() GetDesktopPoolNetworkConfigurationOutput {
	return o
}

func (o GetDesktopPoolNetworkConfigurationOutput) ToGetDesktopPoolNetworkConfigurationOutputWithContext(ctx context.Context) GetDesktopPoolNetworkConfigurationOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
func (o GetDesktopPoolNetworkConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolNetworkConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
func (o GetDesktopPoolNetworkConfigurationOutput) VcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolNetworkConfiguration) string { return v.VcnId }).(pulumi.StringOutput)
}

type GetDesktopPoolNetworkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolNetworkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolNetworkConfiguration)(nil)).Elem()
}

func (o GetDesktopPoolNetworkConfigurationArrayOutput) ToGetDesktopPoolNetworkConfigurationArrayOutput() GetDesktopPoolNetworkConfigurationArrayOutput {
	return o
}

func (o GetDesktopPoolNetworkConfigurationArrayOutput) ToGetDesktopPoolNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetDesktopPoolNetworkConfigurationArrayOutput {
	return o
}

func (o GetDesktopPoolNetworkConfigurationArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolNetworkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolNetworkConfiguration {
		return vs[0].([]GetDesktopPoolNetworkConfiguration)[vs[1].(int)]
	}).(GetDesktopPoolNetworkConfigurationOutput)
}

type GetDesktopPoolPrivateAccessDetail struct {
	// The three-label FQDN to use for the private endpoint. The customer VCN's DNS records are updated with this FQDN. This enables the customer to use the FQDN instead of the private endpoint's private IP address to access the service (for example, xyz.oraclecloud.com).
	EndpointFqdn string `pulumi:"endpointFqdn"`
	// A list of network security groups for the private access.
	NsgIds []string `pulumi:"nsgIds"`
	// The IPv4 address from the provided Oracle Cloud Infrastructure subnet which needs to be assigned to the VNIC. If not provided, it will be auto-assigned with an available IPv4 address from the subnet.
	PrivateIp string `pulumi:"privateIp"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
	SubnetId string `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId string `pulumi:"vcnId"`
}

// GetDesktopPoolPrivateAccessDetailInput is an input type that accepts GetDesktopPoolPrivateAccessDetailArgs and GetDesktopPoolPrivateAccessDetailOutput values.
// You can construct a concrete instance of `GetDesktopPoolPrivateAccessDetailInput` via:
//
//	GetDesktopPoolPrivateAccessDetailArgs{...}
type GetDesktopPoolPrivateAccessDetailInput interface {
	pulumi.Input

	ToGetDesktopPoolPrivateAccessDetailOutput() GetDesktopPoolPrivateAccessDetailOutput
	ToGetDesktopPoolPrivateAccessDetailOutputWithContext(context.Context) GetDesktopPoolPrivateAccessDetailOutput
}

type GetDesktopPoolPrivateAccessDetailArgs struct {
	// The three-label FQDN to use for the private endpoint. The customer VCN's DNS records are updated with this FQDN. This enables the customer to use the FQDN instead of the private endpoint's private IP address to access the service (for example, xyz.oraclecloud.com).
	EndpointFqdn pulumi.StringInput `pulumi:"endpointFqdn"`
	// A list of network security groups for the private access.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The IPv4 address from the provided Oracle Cloud Infrastructure subnet which needs to be assigned to the VNIC. If not provided, it will be auto-assigned with an available IPv4 address from the subnet.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId pulumi.StringInput `pulumi:"vcnId"`
}

func (GetDesktopPoolPrivateAccessDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolPrivateAccessDetail)(nil)).Elem()
}

func (i GetDesktopPoolPrivateAccessDetailArgs) ToGetDesktopPoolPrivateAccessDetailOutput() GetDesktopPoolPrivateAccessDetailOutput {
	return i.ToGetDesktopPoolPrivateAccessDetailOutputWithContext(context.Background())
}

func (i GetDesktopPoolPrivateAccessDetailArgs) ToGetDesktopPoolPrivateAccessDetailOutputWithContext(ctx context.Context) GetDesktopPoolPrivateAccessDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolPrivateAccessDetailOutput)
}

// GetDesktopPoolPrivateAccessDetailArrayInput is an input type that accepts GetDesktopPoolPrivateAccessDetailArray and GetDesktopPoolPrivateAccessDetailArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolPrivateAccessDetailArrayInput` via:
//
//	GetDesktopPoolPrivateAccessDetailArray{ GetDesktopPoolPrivateAccessDetailArgs{...} }
type GetDesktopPoolPrivateAccessDetailArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolPrivateAccessDetailArrayOutput() GetDesktopPoolPrivateAccessDetailArrayOutput
	ToGetDesktopPoolPrivateAccessDetailArrayOutputWithContext(context.Context) GetDesktopPoolPrivateAccessDetailArrayOutput
}

type GetDesktopPoolPrivateAccessDetailArray []GetDesktopPoolPrivateAccessDetailInput

func (GetDesktopPoolPrivateAccessDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolPrivateAccessDetail)(nil)).Elem()
}

func (i GetDesktopPoolPrivateAccessDetailArray) ToGetDesktopPoolPrivateAccessDetailArrayOutput() GetDesktopPoolPrivateAccessDetailArrayOutput {
	return i.ToGetDesktopPoolPrivateAccessDetailArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolPrivateAccessDetailArray) ToGetDesktopPoolPrivateAccessDetailArrayOutputWithContext(ctx context.Context) GetDesktopPoolPrivateAccessDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolPrivateAccessDetailArrayOutput)
}

type GetDesktopPoolPrivateAccessDetailOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolPrivateAccessDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolPrivateAccessDetail)(nil)).Elem()
}

func (o GetDesktopPoolPrivateAccessDetailOutput) ToGetDesktopPoolPrivateAccessDetailOutput() GetDesktopPoolPrivateAccessDetailOutput {
	return o
}

func (o GetDesktopPoolPrivateAccessDetailOutput) ToGetDesktopPoolPrivateAccessDetailOutputWithContext(ctx context.Context) GetDesktopPoolPrivateAccessDetailOutput {
	return o
}

// The three-label FQDN to use for the private endpoint. The customer VCN's DNS records are updated with this FQDN. This enables the customer to use the FQDN instead of the private endpoint's private IP address to access the service (for example, xyz.oraclecloud.com).
func (o GetDesktopPoolPrivateAccessDetailOutput) EndpointFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolPrivateAccessDetail) string { return v.EndpointFqdn }).(pulumi.StringOutput)
}

// A list of network security groups for the private access.
func (o GetDesktopPoolPrivateAccessDetailOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolPrivateAccessDetail) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The IPv4 address from the provided Oracle Cloud Infrastructure subnet which needs to be assigned to the VNIC. If not provided, it will be auto-assigned with an available IPv4 address from the subnet.
func (o GetDesktopPoolPrivateAccessDetailOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolPrivateAccessDetail) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
func (o GetDesktopPoolPrivateAccessDetailOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolPrivateAccessDetail) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
func (o GetDesktopPoolPrivateAccessDetailOutput) VcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolPrivateAccessDetail) string { return v.VcnId }).(pulumi.StringOutput)
}

type GetDesktopPoolPrivateAccessDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolPrivateAccessDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolPrivateAccessDetail)(nil)).Elem()
}

func (o GetDesktopPoolPrivateAccessDetailArrayOutput) ToGetDesktopPoolPrivateAccessDetailArrayOutput() GetDesktopPoolPrivateAccessDetailArrayOutput {
	return o
}

func (o GetDesktopPoolPrivateAccessDetailArrayOutput) ToGetDesktopPoolPrivateAccessDetailArrayOutputWithContext(ctx context.Context) GetDesktopPoolPrivateAccessDetailArrayOutput {
	return o
}

func (o GetDesktopPoolPrivateAccessDetailArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolPrivateAccessDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolPrivateAccessDetail {
		return vs[0].([]GetDesktopPoolPrivateAccessDetail)[vs[1].(int)]
	}).(GetDesktopPoolPrivateAccessDetailOutput)
}

type GetDesktopPoolSessionLifecycleAction struct {
	// Action and grace period for disconnect
	Disconnects []GetDesktopPoolSessionLifecycleActionDisconnect `pulumi:"disconnects"`
	// Action and grace period for inactivity
	Inactivities []GetDesktopPoolSessionLifecycleActionInactivity `pulumi:"inactivities"`
}

// GetDesktopPoolSessionLifecycleActionInput is an input type that accepts GetDesktopPoolSessionLifecycleActionArgs and GetDesktopPoolSessionLifecycleActionOutput values.
// You can construct a concrete instance of `GetDesktopPoolSessionLifecycleActionInput` via:
//
//	GetDesktopPoolSessionLifecycleActionArgs{...}
type GetDesktopPoolSessionLifecycleActionInput interface {
	pulumi.Input

	ToGetDesktopPoolSessionLifecycleActionOutput() GetDesktopPoolSessionLifecycleActionOutput
	ToGetDesktopPoolSessionLifecycleActionOutputWithContext(context.Context) GetDesktopPoolSessionLifecycleActionOutput
}

type GetDesktopPoolSessionLifecycleActionArgs struct {
	// Action and grace period for disconnect
	Disconnects GetDesktopPoolSessionLifecycleActionDisconnectArrayInput `pulumi:"disconnects"`
	// Action and grace period for inactivity
	Inactivities GetDesktopPoolSessionLifecycleActionInactivityArrayInput `pulumi:"inactivities"`
}

func (GetDesktopPoolSessionLifecycleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolSessionLifecycleAction)(nil)).Elem()
}

func (i GetDesktopPoolSessionLifecycleActionArgs) ToGetDesktopPoolSessionLifecycleActionOutput() GetDesktopPoolSessionLifecycleActionOutput {
	return i.ToGetDesktopPoolSessionLifecycleActionOutputWithContext(context.Background())
}

func (i GetDesktopPoolSessionLifecycleActionArgs) ToGetDesktopPoolSessionLifecycleActionOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolSessionLifecycleActionOutput)
}

// GetDesktopPoolSessionLifecycleActionArrayInput is an input type that accepts GetDesktopPoolSessionLifecycleActionArray and GetDesktopPoolSessionLifecycleActionArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolSessionLifecycleActionArrayInput` via:
//
//	GetDesktopPoolSessionLifecycleActionArray{ GetDesktopPoolSessionLifecycleActionArgs{...} }
type GetDesktopPoolSessionLifecycleActionArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolSessionLifecycleActionArrayOutput() GetDesktopPoolSessionLifecycleActionArrayOutput
	ToGetDesktopPoolSessionLifecycleActionArrayOutputWithContext(context.Context) GetDesktopPoolSessionLifecycleActionArrayOutput
}

type GetDesktopPoolSessionLifecycleActionArray []GetDesktopPoolSessionLifecycleActionInput

func (GetDesktopPoolSessionLifecycleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolSessionLifecycleAction)(nil)).Elem()
}

func (i GetDesktopPoolSessionLifecycleActionArray) ToGetDesktopPoolSessionLifecycleActionArrayOutput() GetDesktopPoolSessionLifecycleActionArrayOutput {
	return i.ToGetDesktopPoolSessionLifecycleActionArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolSessionLifecycleActionArray) ToGetDesktopPoolSessionLifecycleActionArrayOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolSessionLifecycleActionArrayOutput)
}

type GetDesktopPoolSessionLifecycleActionOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolSessionLifecycleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolSessionLifecycleAction)(nil)).Elem()
}

func (o GetDesktopPoolSessionLifecycleActionOutput) ToGetDesktopPoolSessionLifecycleActionOutput() GetDesktopPoolSessionLifecycleActionOutput {
	return o
}

func (o GetDesktopPoolSessionLifecycleActionOutput) ToGetDesktopPoolSessionLifecycleActionOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionOutput {
	return o
}

// Action and grace period for disconnect
func (o GetDesktopPoolSessionLifecycleActionOutput) Disconnects() GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolSessionLifecycleAction) []GetDesktopPoolSessionLifecycleActionDisconnect {
		return v.Disconnects
	}).(GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput)
}

// Action and grace period for inactivity
func (o GetDesktopPoolSessionLifecycleActionOutput) Inactivities() GetDesktopPoolSessionLifecycleActionInactivityArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolSessionLifecycleAction) []GetDesktopPoolSessionLifecycleActionInactivity {
		return v.Inactivities
	}).(GetDesktopPoolSessionLifecycleActionInactivityArrayOutput)
}

type GetDesktopPoolSessionLifecycleActionArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolSessionLifecycleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolSessionLifecycleAction)(nil)).Elem()
}

func (o GetDesktopPoolSessionLifecycleActionArrayOutput) ToGetDesktopPoolSessionLifecycleActionArrayOutput() GetDesktopPoolSessionLifecycleActionArrayOutput {
	return o
}

func (o GetDesktopPoolSessionLifecycleActionArrayOutput) ToGetDesktopPoolSessionLifecycleActionArrayOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionArrayOutput {
	return o
}

func (o GetDesktopPoolSessionLifecycleActionArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolSessionLifecycleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolSessionLifecycleAction {
		return vs[0].([]GetDesktopPoolSessionLifecycleAction)[vs[1].(int)]
	}).(GetDesktopPoolSessionLifecycleActionOutput)
}

type GetDesktopPoolSessionLifecycleActionDisconnect struct {
	// an inactivity action to be triggered
	Action string `pulumi:"action"`
	// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes int `pulumi:"gracePeriodInMinutes"`
}

// GetDesktopPoolSessionLifecycleActionDisconnectInput is an input type that accepts GetDesktopPoolSessionLifecycleActionDisconnectArgs and GetDesktopPoolSessionLifecycleActionDisconnectOutput values.
// You can construct a concrete instance of `GetDesktopPoolSessionLifecycleActionDisconnectInput` via:
//
//	GetDesktopPoolSessionLifecycleActionDisconnectArgs{...}
type GetDesktopPoolSessionLifecycleActionDisconnectInput interface {
	pulumi.Input

	ToGetDesktopPoolSessionLifecycleActionDisconnectOutput() GetDesktopPoolSessionLifecycleActionDisconnectOutput
	ToGetDesktopPoolSessionLifecycleActionDisconnectOutputWithContext(context.Context) GetDesktopPoolSessionLifecycleActionDisconnectOutput
}

type GetDesktopPoolSessionLifecycleActionDisconnectArgs struct {
	// an inactivity action to be triggered
	Action pulumi.StringInput `pulumi:"action"`
	// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes pulumi.IntInput `pulumi:"gracePeriodInMinutes"`
}

func (GetDesktopPoolSessionLifecycleActionDisconnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolSessionLifecycleActionDisconnect)(nil)).Elem()
}

func (i GetDesktopPoolSessionLifecycleActionDisconnectArgs) ToGetDesktopPoolSessionLifecycleActionDisconnectOutput() GetDesktopPoolSessionLifecycleActionDisconnectOutput {
	return i.ToGetDesktopPoolSessionLifecycleActionDisconnectOutputWithContext(context.Background())
}

func (i GetDesktopPoolSessionLifecycleActionDisconnectArgs) ToGetDesktopPoolSessionLifecycleActionDisconnectOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionDisconnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolSessionLifecycleActionDisconnectOutput)
}

// GetDesktopPoolSessionLifecycleActionDisconnectArrayInput is an input type that accepts GetDesktopPoolSessionLifecycleActionDisconnectArray and GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolSessionLifecycleActionDisconnectArrayInput` via:
//
//	GetDesktopPoolSessionLifecycleActionDisconnectArray{ GetDesktopPoolSessionLifecycleActionDisconnectArgs{...} }
type GetDesktopPoolSessionLifecycleActionDisconnectArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolSessionLifecycleActionDisconnectArrayOutput() GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput
	ToGetDesktopPoolSessionLifecycleActionDisconnectArrayOutputWithContext(context.Context) GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput
}

type GetDesktopPoolSessionLifecycleActionDisconnectArray []GetDesktopPoolSessionLifecycleActionDisconnectInput

func (GetDesktopPoolSessionLifecycleActionDisconnectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolSessionLifecycleActionDisconnect)(nil)).Elem()
}

func (i GetDesktopPoolSessionLifecycleActionDisconnectArray) ToGetDesktopPoolSessionLifecycleActionDisconnectArrayOutput() GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput {
	return i.ToGetDesktopPoolSessionLifecycleActionDisconnectArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolSessionLifecycleActionDisconnectArray) ToGetDesktopPoolSessionLifecycleActionDisconnectArrayOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput)
}

type GetDesktopPoolSessionLifecycleActionDisconnectOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolSessionLifecycleActionDisconnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolSessionLifecycleActionDisconnect)(nil)).Elem()
}

func (o GetDesktopPoolSessionLifecycleActionDisconnectOutput) ToGetDesktopPoolSessionLifecycleActionDisconnectOutput() GetDesktopPoolSessionLifecycleActionDisconnectOutput {
	return o
}

func (o GetDesktopPoolSessionLifecycleActionDisconnectOutput) ToGetDesktopPoolSessionLifecycleActionDisconnectOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionDisconnectOutput {
	return o
}

// an inactivity action to be triggered
func (o GetDesktopPoolSessionLifecycleActionDisconnectOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolSessionLifecycleActionDisconnect) string { return v.Action }).(pulumi.StringOutput)
}

// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
func (o GetDesktopPoolSessionLifecycleActionDisconnectOutput) GracePeriodInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetDesktopPoolSessionLifecycleActionDisconnect) int { return v.GracePeriodInMinutes }).(pulumi.IntOutput)
}

type GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolSessionLifecycleActionDisconnect)(nil)).Elem()
}

func (o GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput) ToGetDesktopPoolSessionLifecycleActionDisconnectArrayOutput() GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput {
	return o
}

func (o GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput) ToGetDesktopPoolSessionLifecycleActionDisconnectArrayOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput {
	return o
}

func (o GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolSessionLifecycleActionDisconnectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolSessionLifecycleActionDisconnect {
		return vs[0].([]GetDesktopPoolSessionLifecycleActionDisconnect)[vs[1].(int)]
	}).(GetDesktopPoolSessionLifecycleActionDisconnectOutput)
}

type GetDesktopPoolSessionLifecycleActionInactivity struct {
	// an inactivity action to be triggered
	Action string `pulumi:"action"`
	// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes int `pulumi:"gracePeriodInMinutes"`
}

// GetDesktopPoolSessionLifecycleActionInactivityInput is an input type that accepts GetDesktopPoolSessionLifecycleActionInactivityArgs and GetDesktopPoolSessionLifecycleActionInactivityOutput values.
// You can construct a concrete instance of `GetDesktopPoolSessionLifecycleActionInactivityInput` via:
//
//	GetDesktopPoolSessionLifecycleActionInactivityArgs{...}
type GetDesktopPoolSessionLifecycleActionInactivityInput interface {
	pulumi.Input

	ToGetDesktopPoolSessionLifecycleActionInactivityOutput() GetDesktopPoolSessionLifecycleActionInactivityOutput
	ToGetDesktopPoolSessionLifecycleActionInactivityOutputWithContext(context.Context) GetDesktopPoolSessionLifecycleActionInactivityOutput
}

type GetDesktopPoolSessionLifecycleActionInactivityArgs struct {
	// an inactivity action to be triggered
	Action pulumi.StringInput `pulumi:"action"`
	// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes pulumi.IntInput `pulumi:"gracePeriodInMinutes"`
}

func (GetDesktopPoolSessionLifecycleActionInactivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolSessionLifecycleActionInactivity)(nil)).Elem()
}

func (i GetDesktopPoolSessionLifecycleActionInactivityArgs) ToGetDesktopPoolSessionLifecycleActionInactivityOutput() GetDesktopPoolSessionLifecycleActionInactivityOutput {
	return i.ToGetDesktopPoolSessionLifecycleActionInactivityOutputWithContext(context.Background())
}

func (i GetDesktopPoolSessionLifecycleActionInactivityArgs) ToGetDesktopPoolSessionLifecycleActionInactivityOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionInactivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolSessionLifecycleActionInactivityOutput)
}

// GetDesktopPoolSessionLifecycleActionInactivityArrayInput is an input type that accepts GetDesktopPoolSessionLifecycleActionInactivityArray and GetDesktopPoolSessionLifecycleActionInactivityArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolSessionLifecycleActionInactivityArrayInput` via:
//
//	GetDesktopPoolSessionLifecycleActionInactivityArray{ GetDesktopPoolSessionLifecycleActionInactivityArgs{...} }
type GetDesktopPoolSessionLifecycleActionInactivityArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolSessionLifecycleActionInactivityArrayOutput() GetDesktopPoolSessionLifecycleActionInactivityArrayOutput
	ToGetDesktopPoolSessionLifecycleActionInactivityArrayOutputWithContext(context.Context) GetDesktopPoolSessionLifecycleActionInactivityArrayOutput
}

type GetDesktopPoolSessionLifecycleActionInactivityArray []GetDesktopPoolSessionLifecycleActionInactivityInput

func (GetDesktopPoolSessionLifecycleActionInactivityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolSessionLifecycleActionInactivity)(nil)).Elem()
}

func (i GetDesktopPoolSessionLifecycleActionInactivityArray) ToGetDesktopPoolSessionLifecycleActionInactivityArrayOutput() GetDesktopPoolSessionLifecycleActionInactivityArrayOutput {
	return i.ToGetDesktopPoolSessionLifecycleActionInactivityArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolSessionLifecycleActionInactivityArray) ToGetDesktopPoolSessionLifecycleActionInactivityArrayOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionInactivityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolSessionLifecycleActionInactivityArrayOutput)
}

type GetDesktopPoolSessionLifecycleActionInactivityOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolSessionLifecycleActionInactivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolSessionLifecycleActionInactivity)(nil)).Elem()
}

func (o GetDesktopPoolSessionLifecycleActionInactivityOutput) ToGetDesktopPoolSessionLifecycleActionInactivityOutput() GetDesktopPoolSessionLifecycleActionInactivityOutput {
	return o
}

func (o GetDesktopPoolSessionLifecycleActionInactivityOutput) ToGetDesktopPoolSessionLifecycleActionInactivityOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionInactivityOutput {
	return o
}

// an inactivity action to be triggered
func (o GetDesktopPoolSessionLifecycleActionInactivityOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolSessionLifecycleActionInactivity) string { return v.Action }).(pulumi.StringOutput)
}

// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
func (o GetDesktopPoolSessionLifecycleActionInactivityOutput) GracePeriodInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetDesktopPoolSessionLifecycleActionInactivity) int { return v.GracePeriodInMinutes }).(pulumi.IntOutput)
}

type GetDesktopPoolSessionLifecycleActionInactivityArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolSessionLifecycleActionInactivityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolSessionLifecycleActionInactivity)(nil)).Elem()
}

func (o GetDesktopPoolSessionLifecycleActionInactivityArrayOutput) ToGetDesktopPoolSessionLifecycleActionInactivityArrayOutput() GetDesktopPoolSessionLifecycleActionInactivityArrayOutput {
	return o
}

func (o GetDesktopPoolSessionLifecycleActionInactivityArrayOutput) ToGetDesktopPoolSessionLifecycleActionInactivityArrayOutputWithContext(ctx context.Context) GetDesktopPoolSessionLifecycleActionInactivityArrayOutput {
	return o
}

func (o GetDesktopPoolSessionLifecycleActionInactivityArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolSessionLifecycleActionInactivityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolSessionLifecycleActionInactivity {
		return vs[0].([]GetDesktopPoolSessionLifecycleActionInactivity)[vs[1].(int)]
	}).(GetDesktopPoolSessionLifecycleActionInactivityOutput)
}

type GetDesktopPoolShapeConfig struct {
	// The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
	// * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
	// * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
	// * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
	BaselineOcpuUtilization string `pulumi:"baselineOcpuUtilization"`
	// The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
	MemoryInGbs string `pulumi:"memoryInGbs"`
	// The total number of OCPUs available for each desktop compute instance in the desktop pool.
	Ocpus string `pulumi:"ocpus"`
}

// GetDesktopPoolShapeConfigInput is an input type that accepts GetDesktopPoolShapeConfigArgs and GetDesktopPoolShapeConfigOutput values.
// You can construct a concrete instance of `GetDesktopPoolShapeConfigInput` via:
//
//	GetDesktopPoolShapeConfigArgs{...}
type GetDesktopPoolShapeConfigInput interface {
	pulumi.Input

	ToGetDesktopPoolShapeConfigOutput() GetDesktopPoolShapeConfigOutput
	ToGetDesktopPoolShapeConfigOutputWithContext(context.Context) GetDesktopPoolShapeConfigOutput
}

type GetDesktopPoolShapeConfigArgs struct {
	// The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
	// * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
	// * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
	// * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
	BaselineOcpuUtilization pulumi.StringInput `pulumi:"baselineOcpuUtilization"`
	// The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
	MemoryInGbs pulumi.StringInput `pulumi:"memoryInGbs"`
	// The total number of OCPUs available for each desktop compute instance in the desktop pool.
	Ocpus pulumi.StringInput `pulumi:"ocpus"`
}

func (GetDesktopPoolShapeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolShapeConfig)(nil)).Elem()
}

func (i GetDesktopPoolShapeConfigArgs) ToGetDesktopPoolShapeConfigOutput() GetDesktopPoolShapeConfigOutput {
	return i.ToGetDesktopPoolShapeConfigOutputWithContext(context.Background())
}

func (i GetDesktopPoolShapeConfigArgs) ToGetDesktopPoolShapeConfigOutputWithContext(ctx context.Context) GetDesktopPoolShapeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolShapeConfigOutput)
}

// GetDesktopPoolShapeConfigArrayInput is an input type that accepts GetDesktopPoolShapeConfigArray and GetDesktopPoolShapeConfigArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolShapeConfigArrayInput` via:
//
//	GetDesktopPoolShapeConfigArray{ GetDesktopPoolShapeConfigArgs{...} }
type GetDesktopPoolShapeConfigArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolShapeConfigArrayOutput() GetDesktopPoolShapeConfigArrayOutput
	ToGetDesktopPoolShapeConfigArrayOutputWithContext(context.Context) GetDesktopPoolShapeConfigArrayOutput
}

type GetDesktopPoolShapeConfigArray []GetDesktopPoolShapeConfigInput

func (GetDesktopPoolShapeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolShapeConfig)(nil)).Elem()
}

func (i GetDesktopPoolShapeConfigArray) ToGetDesktopPoolShapeConfigArrayOutput() GetDesktopPoolShapeConfigArrayOutput {
	return i.ToGetDesktopPoolShapeConfigArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolShapeConfigArray) ToGetDesktopPoolShapeConfigArrayOutputWithContext(ctx context.Context) GetDesktopPoolShapeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolShapeConfigArrayOutput)
}

type GetDesktopPoolShapeConfigOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolShapeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolShapeConfig)(nil)).Elem()
}

func (o GetDesktopPoolShapeConfigOutput) ToGetDesktopPoolShapeConfigOutput() GetDesktopPoolShapeConfigOutput {
	return o
}

func (o GetDesktopPoolShapeConfigOutput) ToGetDesktopPoolShapeConfigOutputWithContext(ctx context.Context) GetDesktopPoolShapeConfigOutput {
	return o
}

// The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
// * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
// * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
// * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
func (o GetDesktopPoolShapeConfigOutput) BaselineOcpuUtilization() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolShapeConfig) string { return v.BaselineOcpuUtilization }).(pulumi.StringOutput)
}

// The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
func (o GetDesktopPoolShapeConfigOutput) MemoryInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolShapeConfig) string { return v.MemoryInGbs }).(pulumi.StringOutput)
}

// The total number of OCPUs available for each desktop compute instance in the desktop pool.
func (o GetDesktopPoolShapeConfigOutput) Ocpus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolShapeConfig) string { return v.Ocpus }).(pulumi.StringOutput)
}

type GetDesktopPoolShapeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolShapeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolShapeConfig)(nil)).Elem()
}

func (o GetDesktopPoolShapeConfigArrayOutput) ToGetDesktopPoolShapeConfigArrayOutput() GetDesktopPoolShapeConfigArrayOutput {
	return o
}

func (o GetDesktopPoolShapeConfigArrayOutput) ToGetDesktopPoolShapeConfigArrayOutputWithContext(ctx context.Context) GetDesktopPoolShapeConfigArrayOutput {
	return o
}

func (o GetDesktopPoolShapeConfigArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolShapeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolShapeConfig {
		return vs[0].([]GetDesktopPoolShapeConfig)[vs[1].(int)]
	}).(GetDesktopPoolShapeConfigOutput)
}

type GetDesktopPoolVolumesDesktopPoolVolumeCollection struct {
	// A list of desktop pool volumes.
	Items []GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem `pulumi:"items"`
}

// GetDesktopPoolVolumesDesktopPoolVolumeCollectionInput is an input type that accepts GetDesktopPoolVolumesDesktopPoolVolumeCollectionArgs and GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput values.
// You can construct a concrete instance of `GetDesktopPoolVolumesDesktopPoolVolumeCollectionInput` via:
//
//	GetDesktopPoolVolumesDesktopPoolVolumeCollectionArgs{...}
type GetDesktopPoolVolumesDesktopPoolVolumeCollectionInput interface {
	pulumi.Input

	ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput
	ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionOutputWithContext(context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput
}

type GetDesktopPoolVolumesDesktopPoolVolumeCollectionArgs struct {
	// A list of desktop pool volumes.
	Items GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayInput `pulumi:"items"`
}

func (GetDesktopPoolVolumesDesktopPoolVolumeCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolVolumesDesktopPoolVolumeCollection)(nil)).Elem()
}

func (i GetDesktopPoolVolumesDesktopPoolVolumeCollectionArgs) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput {
	return i.ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionOutputWithContext(context.Background())
}

func (i GetDesktopPoolVolumesDesktopPoolVolumeCollectionArgs) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionOutputWithContext(ctx context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput)
}

// GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayInput is an input type that accepts GetDesktopPoolVolumesDesktopPoolVolumeCollectionArray and GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayInput` via:
//
//	GetDesktopPoolVolumesDesktopPoolVolumeCollectionArray{ GetDesktopPoolVolumesDesktopPoolVolumeCollectionArgs{...} }
type GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput
	ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutputWithContext(context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput
}

type GetDesktopPoolVolumesDesktopPoolVolumeCollectionArray []GetDesktopPoolVolumesDesktopPoolVolumeCollectionInput

func (GetDesktopPoolVolumesDesktopPoolVolumeCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolVolumesDesktopPoolVolumeCollection)(nil)).Elem()
}

func (i GetDesktopPoolVolumesDesktopPoolVolumeCollectionArray) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput {
	return i.ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolVolumesDesktopPoolVolumeCollectionArray) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutputWithContext(ctx context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput)
}

type GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolVolumesDesktopPoolVolumeCollection)(nil)).Elem()
}

func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput {
	return o
}

func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionOutputWithContext(ctx context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput {
	return o
}

// A list of desktop pool volumes.
func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput) Items() GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesDesktopPoolVolumeCollection) []GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem {
		return v.Items
	}).(GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput)
}

type GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolVolumesDesktopPoolVolumeCollection)(nil)).Elem()
}

func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput {
	return o
}

func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutputWithContext(ctx context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput {
	return o
}

func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolVolumesDesktopPoolVolumeCollection {
		return vs[0].([]GetDesktopPoolVolumesDesktopPoolVolumeCollection)[vs[1].(int)]
	}).(GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput)
}

type GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem struct {
	// The name of the availability domain.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A filter to return only results with the given OCID.
	Id string `pulumi:"id"`
	// The name of the desktop pool volume.
	Name string `pulumi:"name"`
	// The OCID of the desktop pool to which this volume belongs.
	PoolId string `pulumi:"poolId"`
	// A filter to return only results with the given lifecycleState.
	State string `pulumi:"state"`
	// The owner of the desktop pool volume.
	UserName string `pulumi:"userName"`
}

// GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemInput is an input type that accepts GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArgs and GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput values.
// You can construct a concrete instance of `GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemInput` via:
//
//	GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArgs{...}
type GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemInput interface {
	pulumi.Input

	ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput
	ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutputWithContext(context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput
}

type GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArgs struct {
	// The name of the availability domain.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// A filter to return only results with the given OCID.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the desktop pool volume.
	Name pulumi.StringInput `pulumi:"name"`
	// The OCID of the desktop pool to which this volume belongs.
	PoolId pulumi.StringInput `pulumi:"poolId"`
	// A filter to return only results with the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// The owner of the desktop pool volume.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem)(nil)).Elem()
}

func (i GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArgs) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput {
	return i.ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutputWithContext(context.Background())
}

func (i GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArgs) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutputWithContext(ctx context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput)
}

// GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayInput is an input type that accepts GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArray and GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayInput` via:
//
//	GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArray{ GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArgs{...} }
type GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput
	ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutputWithContext(context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput
}

type GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArray []GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemInput

func (GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem)(nil)).Elem()
}

func (i GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArray) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput {
	return i.ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArray) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutputWithContext(ctx context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput)
}

type GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem)(nil)).Elem()
}

func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput {
	return o
}

func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutputWithContext(ctx context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput {
	return o
}

// The name of the availability domain.
func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A filter to return only results with the given OCID.
func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the desktop pool volume.
func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem) string { return v.Name }).(pulumi.StringOutput)
}

// The OCID of the desktop pool to which this volume belongs.
func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput) PoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem) string { return v.PoolId }).(pulumi.StringOutput)
}

// A filter to return only results with the given lifecycleState.
func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The owner of the desktop pool volume.
func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem) string { return v.UserName }).(pulumi.StringOutput)
}

type GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem)(nil)).Elem()
}

func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput() GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput {
	return o
}

func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput) ToGetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutputWithContext(ctx context.Context) GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput {
	return o
}

func (o GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem {
		return vs[0].([]GetDesktopPoolVolumesDesktopPoolVolumeCollectionItem)[vs[1].(int)]
	}).(GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput)
}

type GetDesktopPoolVolumesFilter struct {
	// The name of the desktop pool volume.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetDesktopPoolVolumesFilterInput is an input type that accepts GetDesktopPoolVolumesFilterArgs and GetDesktopPoolVolumesFilterOutput values.
// You can construct a concrete instance of `GetDesktopPoolVolumesFilterInput` via:
//
//	GetDesktopPoolVolumesFilterArgs{...}
type GetDesktopPoolVolumesFilterInput interface {
	pulumi.Input

	ToGetDesktopPoolVolumesFilterOutput() GetDesktopPoolVolumesFilterOutput
	ToGetDesktopPoolVolumesFilterOutputWithContext(context.Context) GetDesktopPoolVolumesFilterOutput
}

type GetDesktopPoolVolumesFilterArgs struct {
	// The name of the desktop pool volume.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDesktopPoolVolumesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolVolumesFilter)(nil)).Elem()
}

func (i GetDesktopPoolVolumesFilterArgs) ToGetDesktopPoolVolumesFilterOutput() GetDesktopPoolVolumesFilterOutput {
	return i.ToGetDesktopPoolVolumesFilterOutputWithContext(context.Background())
}

func (i GetDesktopPoolVolumesFilterArgs) ToGetDesktopPoolVolumesFilterOutputWithContext(ctx context.Context) GetDesktopPoolVolumesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolVolumesFilterOutput)
}

// GetDesktopPoolVolumesFilterArrayInput is an input type that accepts GetDesktopPoolVolumesFilterArray and GetDesktopPoolVolumesFilterArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolVolumesFilterArrayInput` via:
//
//	GetDesktopPoolVolumesFilterArray{ GetDesktopPoolVolumesFilterArgs{...} }
type GetDesktopPoolVolumesFilterArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolVolumesFilterArrayOutput() GetDesktopPoolVolumesFilterArrayOutput
	ToGetDesktopPoolVolumesFilterArrayOutputWithContext(context.Context) GetDesktopPoolVolumesFilterArrayOutput
}

type GetDesktopPoolVolumesFilterArray []GetDesktopPoolVolumesFilterInput

func (GetDesktopPoolVolumesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolVolumesFilter)(nil)).Elem()
}

func (i GetDesktopPoolVolumesFilterArray) ToGetDesktopPoolVolumesFilterArrayOutput() GetDesktopPoolVolumesFilterArrayOutput {
	return i.ToGetDesktopPoolVolumesFilterArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolVolumesFilterArray) ToGetDesktopPoolVolumesFilterArrayOutputWithContext(ctx context.Context) GetDesktopPoolVolumesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolVolumesFilterArrayOutput)
}

type GetDesktopPoolVolumesFilterOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolVolumesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolVolumesFilter)(nil)).Elem()
}

func (o GetDesktopPoolVolumesFilterOutput) ToGetDesktopPoolVolumesFilterOutput() GetDesktopPoolVolumesFilterOutput {
	return o
}

func (o GetDesktopPoolVolumesFilterOutput) ToGetDesktopPoolVolumesFilterOutputWithContext(ctx context.Context) GetDesktopPoolVolumesFilterOutput {
	return o
}

// The name of the desktop pool volume.
func (o GetDesktopPoolVolumesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDesktopPoolVolumesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetDesktopPoolVolumesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolVolumesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDesktopPoolVolumesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolVolumesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolVolumesFilter)(nil)).Elem()
}

func (o GetDesktopPoolVolumesFilterArrayOutput) ToGetDesktopPoolVolumesFilterArrayOutput() GetDesktopPoolVolumesFilterArrayOutput {
	return o
}

func (o GetDesktopPoolVolumesFilterArrayOutput) ToGetDesktopPoolVolumesFilterArrayOutputWithContext(ctx context.Context) GetDesktopPoolVolumesFilterArrayOutput {
	return o
}

func (o GetDesktopPoolVolumesFilterArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolVolumesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolVolumesFilter {
		return vs[0].([]GetDesktopPoolVolumesFilter)[vs[1].(int)]
	}).(GetDesktopPoolVolumesFilterOutput)
}

type GetDesktopPoolsDesktopPoolCollection struct {
	Items []GetDesktopPoolsDesktopPoolCollectionItem `pulumi:"items"`
}

// GetDesktopPoolsDesktopPoolCollectionInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionArgs and GetDesktopPoolsDesktopPoolCollectionOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionArgs{...}
type GetDesktopPoolsDesktopPoolCollectionInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionOutput() GetDesktopPoolsDesktopPoolCollectionOutput
	ToGetDesktopPoolsDesktopPoolCollectionOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionOutput
}

type GetDesktopPoolsDesktopPoolCollectionArgs struct {
	Items GetDesktopPoolsDesktopPoolCollectionItemArrayInput `pulumi:"items"`
}

func (GetDesktopPoolsDesktopPoolCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollection)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionArgs) ToGetDesktopPoolsDesktopPoolCollectionOutput() GetDesktopPoolsDesktopPoolCollectionOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionArgs) ToGetDesktopPoolsDesktopPoolCollectionOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionOutput)
}

// GetDesktopPoolsDesktopPoolCollectionArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionArray and GetDesktopPoolsDesktopPoolCollectionArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionArray{ GetDesktopPoolsDesktopPoolCollectionArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionArrayOutput() GetDesktopPoolsDesktopPoolCollectionArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionArray []GetDesktopPoolsDesktopPoolCollectionInput

func (GetDesktopPoolsDesktopPoolCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollection)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionArray) ToGetDesktopPoolsDesktopPoolCollectionArrayOutput() GetDesktopPoolsDesktopPoolCollectionArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionArray) ToGetDesktopPoolsDesktopPoolCollectionArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollection)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionOutput) ToGetDesktopPoolsDesktopPoolCollectionOutput() GetDesktopPoolsDesktopPoolCollectionOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionOutput) ToGetDesktopPoolsDesktopPoolCollectionOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionOutput) Items() GetDesktopPoolsDesktopPoolCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollection) []GetDesktopPoolsDesktopPoolCollectionItem {
		return v.Items
	}).(GetDesktopPoolsDesktopPoolCollectionItemArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollection)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionArrayOutput() GetDesktopPoolsDesktopPoolCollectionArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollection {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollection)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItem struct {
	// The number of active desktops in the desktop pool.
	ActiveDesktops int `pulumi:"activeDesktops"`
	// Indicates whether desktop pool users have administrative privileges on their desktop.
	ArePrivilegedUsers  bool `pulumi:"arePrivilegedUsers"`
	AreVolumesPreserved bool `pulumi:"areVolumesPreserved"`
	// The name of the availability domain.
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// Provides the start and stop schedule information for desktop availability of the desktop pool.
	AvailabilityPolicies []GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy `pulumi:"availabilityPolicies"`
	// The OCID of the compartment of the desktop pool.
	CompartmentId string `pulumi:"compartmentId"`
	// Contact information of the desktop pool administrator. Avoid entering confidential information.
	ContactDetails string `pulumi:"contactDetails"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user friendly description providing additional information about the resource. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
	DevicePolicies []GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy `pulumi:"devicePolicies"`
	// A filter to return only results with the given displayName.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A filter to return only results with the given OCID.
	Id string `pulumi:"id"`
	// Provides information about the desktop image.
	Images []GetDesktopPoolsDesktopPoolCollectionItemImage `pulumi:"images"`
	// Indicates whether storage is enabled for the desktop pool.
	IsStorageEnabled bool `pulumi:"isStorageEnabled"`
	// The maximum number of desktops permitted in the desktop pool.
	MaximumSize int `pulumi:"maximumSize"`
	// Provides information about the network configuration of the desktop pool.
	NetworkConfigurations []GetDesktopPoolsDesktopPoolCollectionItemNetworkConfiguration `pulumi:"networkConfigurations"`
	// A list of network security groups for the private access.
	NsgIds []string `pulumi:"nsgIds"`
	// The details of the desktop's private access network connectivity that were used to create the pool.
	PrivateAccessDetails []GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail `pulumi:"privateAccessDetails"`
	// Action to be triggered on inactivity or disconnect
	SessionLifecycleActions []GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleAction `pulumi:"sessionLifecycleActions"`
	// The shape configuration used for each desktop compute instance in the desktop pool.
	ShapeConfigs []GetDesktopPoolsDesktopPoolCollectionItemShapeConfig `pulumi:"shapeConfigs"`
	// The shape of the desktop pool.
	ShapeName string `pulumi:"shapeName"`
	// The maximum number of standby desktops available in the desktop pool.
	StandbySize int `pulumi:"standbySize"`
	// A filter to return only results with the given lifecycleState.
	State string `pulumi:"state"`
	// The backup policy OCID of the storage.
	StorageBackupPolicyId string `pulumi:"storageBackupPolicyId"`
	// The size in GBs of the storage for the desktop pool.
	StorageSizeInGbs int `pulumi:"storageSizeInGbs"`
	// The date and time the resource was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The start time of the desktop pool.
	TimeStartScheduled string `pulumi:"timeStartScheduled"`
	// The stop time of the desktop pool.
	TimeStopScheduled string `pulumi:"timeStopScheduled"`
	// Indicates whether the desktop pool uses dedicated virtual machine hosts.
	UseDedicatedVmHost string `pulumi:"useDedicatedVmHost"`
}

// GetDesktopPoolsDesktopPoolCollectionItemInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemArgs and GetDesktopPoolsDesktopPoolCollectionItemOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemOutput() GetDesktopPoolsDesktopPoolCollectionItemOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemArgs struct {
	// The number of active desktops in the desktop pool.
	ActiveDesktops pulumi.IntInput `pulumi:"activeDesktops"`
	// Indicates whether desktop pool users have administrative privileges on their desktop.
	ArePrivilegedUsers  pulumi.BoolInput `pulumi:"arePrivilegedUsers"`
	AreVolumesPreserved pulumi.BoolInput `pulumi:"areVolumesPreserved"`
	// The name of the availability domain.
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// Provides the start and stop schedule information for desktop availability of the desktop pool.
	AvailabilityPolicies GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayInput `pulumi:"availabilityPolicies"`
	// The OCID of the compartment of the desktop pool.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Contact information of the desktop pool administrator. Avoid entering confidential information.
	ContactDetails pulumi.StringInput `pulumi:"contactDetails"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A user friendly description providing additional information about the resource. Avoid entering confidential information.
	Description pulumi.StringInput `pulumi:"description"`
	// Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
	DevicePolicies GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayInput `pulumi:"devicePolicies"`
	// A filter to return only results with the given displayName.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// A filter to return only results with the given OCID.
	Id pulumi.StringInput `pulumi:"id"`
	// Provides information about the desktop image.
	Images GetDesktopPoolsDesktopPoolCollectionItemImageArrayInput `pulumi:"images"`
	// Indicates whether storage is enabled for the desktop pool.
	IsStorageEnabled pulumi.BoolInput `pulumi:"isStorageEnabled"`
	// The maximum number of desktops permitted in the desktop pool.
	MaximumSize pulumi.IntInput `pulumi:"maximumSize"`
	// Provides information about the network configuration of the desktop pool.
	NetworkConfigurations GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayInput `pulumi:"networkConfigurations"`
	// A list of network security groups for the private access.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The details of the desktop's private access network connectivity that were used to create the pool.
	PrivateAccessDetails GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayInput `pulumi:"privateAccessDetails"`
	// Action to be triggered on inactivity or disconnect
	SessionLifecycleActions GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayInput `pulumi:"sessionLifecycleActions"`
	// The shape configuration used for each desktop compute instance in the desktop pool.
	ShapeConfigs GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayInput `pulumi:"shapeConfigs"`
	// The shape of the desktop pool.
	ShapeName pulumi.StringInput `pulumi:"shapeName"`
	// The maximum number of standby desktops available in the desktop pool.
	StandbySize pulumi.IntInput `pulumi:"standbySize"`
	// A filter to return only results with the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// The backup policy OCID of the storage.
	StorageBackupPolicyId pulumi.StringInput `pulumi:"storageBackupPolicyId"`
	// The size in GBs of the storage for the desktop pool.
	StorageSizeInGbs pulumi.IntInput `pulumi:"storageSizeInGbs"`
	// The date and time the resource was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The start time of the desktop pool.
	TimeStartScheduled pulumi.StringInput `pulumi:"timeStartScheduled"`
	// The stop time of the desktop pool.
	TimeStopScheduled pulumi.StringInput `pulumi:"timeStopScheduled"`
	// Indicates whether the desktop pool uses dedicated virtual machine hosts.
	UseDedicatedVmHost pulumi.StringInput `pulumi:"useDedicatedVmHost"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItem)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemArgs) ToGetDesktopPoolsDesktopPoolCollectionItemOutput() GetDesktopPoolsDesktopPoolCollectionItemOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemArgs) ToGetDesktopPoolsDesktopPoolCollectionItemOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemArray and GetDesktopPoolsDesktopPoolCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemArray{ GetDesktopPoolsDesktopPoolCollectionItemArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemArray []GetDesktopPoolsDesktopPoolCollectionItemInput

func (GetDesktopPoolsDesktopPoolCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItem)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemArray) ToGetDesktopPoolsDesktopPoolCollectionItemArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemArray) ToGetDesktopPoolsDesktopPoolCollectionItemArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItem)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) ToGetDesktopPoolsDesktopPoolCollectionItemOutput() GetDesktopPoolsDesktopPoolCollectionItemOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) ToGetDesktopPoolsDesktopPoolCollectionItemOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemOutput {
	return o
}

// The number of active desktops in the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) ActiveDesktops() pulumi.IntOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) int { return v.ActiveDesktops }).(pulumi.IntOutput)
}

// Indicates whether desktop pool users have administrative privileges on their desktop.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) ArePrivilegedUsers() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) bool { return v.ArePrivilegedUsers }).(pulumi.BoolOutput)
}

func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) AreVolumesPreserved() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) bool { return v.AreVolumesPreserved }).(pulumi.BoolOutput)
}

// The name of the availability domain.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// Provides the start and stop schedule information for desktop availability of the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) AvailabilityPolicies() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) []GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy {
		return v.AvailabilityPolicies
	}).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput)
}

// The OCID of the compartment of the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Contact information of the desktop pool administrator. Avoid entering confidential information.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) ContactDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.ContactDetails }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user friendly description providing additional information about the resource. Avoid entering confidential information.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.Description }).(pulumi.StringOutput)
}

// Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) DevicePolicies() GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) []GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy {
		return v.DevicePolicies
	}).(GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput)
}

// A filter to return only results with the given displayName.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A filter to return only results with the given OCID.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Provides information about the desktop image.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) Images() GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) []GetDesktopPoolsDesktopPoolCollectionItemImage {
		return v.Images
	}).(GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput)
}

// Indicates whether storage is enabled for the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) IsStorageEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) bool { return v.IsStorageEnabled }).(pulumi.BoolOutput)
}

// The maximum number of desktops permitted in the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) MaximumSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) int { return v.MaximumSize }).(pulumi.IntOutput)
}

// Provides information about the network configuration of the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) NetworkConfigurations() GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) []GetDesktopPoolsDesktopPoolCollectionItemNetworkConfiguration {
		return v.NetworkConfigurations
	}).(GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput)
}

// A list of network security groups for the private access.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The details of the desktop's private access network connectivity that were used to create the pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) PrivateAccessDetails() GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) []GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail {
		return v.PrivateAccessDetails
	}).(GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput)
}

// Action to be triggered on inactivity or disconnect
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) SessionLifecycleActions() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) []GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleAction {
		return v.SessionLifecycleActions
	}).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput)
}

// The shape configuration used for each desktop compute instance in the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) ShapeConfigs() GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) []GetDesktopPoolsDesktopPoolCollectionItemShapeConfig {
		return v.ShapeConfigs
	}).(GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput)
}

// The shape of the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) ShapeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.ShapeName }).(pulumi.StringOutput)
}

// The maximum number of standby desktops available in the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) StandbySize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) int { return v.StandbySize }).(pulumi.IntOutput)
}

// A filter to return only results with the given lifecycleState.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The backup policy OCID of the storage.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) StorageBackupPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.StorageBackupPolicyId }).(pulumi.StringOutput)
}

// The size in GBs of the storage for the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) StorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) int { return v.StorageSizeInGbs }).(pulumi.IntOutput)
}

// The date and time the resource was created.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The start time of the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) TimeStartScheduled() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.TimeStartScheduled }).(pulumi.StringOutput)
}

// The stop time of the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) TimeStopScheduled() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.TimeStopScheduled }).(pulumi.StringOutput)
}

// Indicates whether the desktop pool uses dedicated virtual machine hosts.
func (o GetDesktopPoolsDesktopPoolCollectionItemOutput) UseDedicatedVmHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItem) string { return v.UseDedicatedVmHost }).(pulumi.StringOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItem)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItem {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItem)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy struct {
	// Provides the schedule information for a desktop.
	StartSchedules []GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule `pulumi:"startSchedules"`
	// Provides the schedule information for a desktop.
	StopSchedules []GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule `pulumi:"stopSchedules"`
}

// GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArgs and GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArgs struct {
	// Provides the schedule information for a desktop.
	StartSchedules GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayInput `pulumi:"startSchedules"`
	// Provides the schedule information for a desktop.
	StopSchedules GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayInput `pulumi:"stopSchedules"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArgs) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArgs) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArray and GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArray{ GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArray []GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyInput

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArray) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArray) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput {
	return o
}

// Provides the schedule information for a desktop.
func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput) StartSchedules() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy) []GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule {
		return v.StartSchedules
	}).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput)
}

// Provides the schedule information for a desktop.
func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput) StopSchedules() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy) []GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule {
		return v.StopSchedules
	}).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule struct {
	// A cron expression describing the desktop's schedule.
	CronExpression string `pulumi:"cronExpression"`
	// The timezone of the desktop's schedule.
	Timezone string `pulumi:"timezone"`
}

// GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArgs and GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArgs struct {
	// A cron expression describing the desktop's schedule.
	CronExpression pulumi.StringInput `pulumi:"cronExpression"`
	// The timezone of the desktop's schedule.
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArgs) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArgs) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArray and GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArray{ GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArray []GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleInput

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArray) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArray) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput {
	return o
}

// A cron expression describing the desktop's schedule.
func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule) string {
		return v.CronExpression
	}).(pulumi.StringOutput)
}

// The timezone of the desktop's schedule.
func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule) string {
		return v.Timezone
	}).(pulumi.StringOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule struct {
	// A cron expression describing the desktop's schedule.
	CronExpression string `pulumi:"cronExpression"`
	// The timezone of the desktop's schedule.
	Timezone string `pulumi:"timezone"`
}

// GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArgs and GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArgs struct {
	// A cron expression describing the desktop's schedule.
	CronExpression pulumi.StringInput `pulumi:"cronExpression"`
	// The timezone of the desktop's schedule.
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArgs) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArgs) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArray and GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArray{ GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArray []GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleInput

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArray) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArray) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput {
	return o
}

// A cron expression describing the desktop's schedule.
func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule) string {
		return v.CronExpression
	}).(pulumi.StringOutput)
}

// The timezone of the desktop's schedule.
func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule) string {
		return v.Timezone
	}).(pulumi.StringOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy struct {
	// The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
	AudioMode string `pulumi:"audioMode"`
	// The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
	CdmMode string `pulumi:"cdmMode"`
	// The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
	ClipboardMode string `pulumi:"clipboardMode"`
	// Indicates whether the display is enabled.
	IsDisplayEnabled bool `pulumi:"isDisplayEnabled"`
	// Indicates whether the keyboard is enabled.
	IsKeyboardEnabled bool `pulumi:"isKeyboardEnabled"`
	// Indicates whether the pointer is enabled.
	IsPointerEnabled bool `pulumi:"isPointerEnabled"`
	// Indicates whether printing is enabled.
	IsPrintingEnabled bool `pulumi:"isPrintingEnabled"`
}

// GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArgs and GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput() GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArgs struct {
	// The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
	AudioMode pulumi.StringInput `pulumi:"audioMode"`
	// The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
	CdmMode pulumi.StringInput `pulumi:"cdmMode"`
	// The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
	ClipboardMode pulumi.StringInput `pulumi:"clipboardMode"`
	// Indicates whether the display is enabled.
	IsDisplayEnabled pulumi.BoolInput `pulumi:"isDisplayEnabled"`
	// Indicates whether the keyboard is enabled.
	IsKeyboardEnabled pulumi.BoolInput `pulumi:"isKeyboardEnabled"`
	// Indicates whether the pointer is enabled.
	IsPointerEnabled pulumi.BoolInput `pulumi:"isPointerEnabled"`
	// Indicates whether printing is enabled.
	IsPrintingEnabled pulumi.BoolInput `pulumi:"isPrintingEnabled"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArgs) ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput() GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArgs) ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArray and GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArray{ GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArray []GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyInput

func (GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArray) ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArray) ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput) ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput() GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput) ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput {
	return o
}

// The audio mode. NONE: No access to the local audio devices is permitted. TODESKTOP: The user may record audio on their desktop.  FROMDESKTOP: The user may play audio on their desktop. FULL: The user may play and record audio on their desktop.
func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput) AudioMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy) string { return v.AudioMode }).(pulumi.StringOutput)
}

// The client local drive access mode. NONE: No access to local drives permitted. READONLY: The user may read from local drives on their desktop. FULL: The user may read from and write to their local drives on their desktop.
func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput) CdmMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy) string { return v.CdmMode }).(pulumi.StringOutput)
}

// The clipboard mode. NONE: No access to the local clipboard is permitted. TODESKTOP: The clipboard can be used to transfer data to the desktop only.  FROMDESKTOP: The clipboard can be used to transfer data from the desktop only. FULL: The clipboard can be used to transfer data to and from the desktop.
func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput) ClipboardMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy) string { return v.ClipboardMode }).(pulumi.StringOutput)
}

// Indicates whether the display is enabled.
func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput) IsDisplayEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy) bool { return v.IsDisplayEnabled }).(pulumi.BoolOutput)
}

// Indicates whether the keyboard is enabled.
func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput) IsKeyboardEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy) bool { return v.IsKeyboardEnabled }).(pulumi.BoolOutput)
}

// Indicates whether the pointer is enabled.
func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput) IsPointerEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy) bool { return v.IsPointerEnabled }).(pulumi.BoolOutput)
}

// Indicates whether printing is enabled.
func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput) IsPrintingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy) bool { return v.IsPrintingEnabled }).(pulumi.BoolOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItemDevicePolicy)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemImage struct {
	// The OCID of the desktop image.
	ImageId string `pulumi:"imageId"`
	// The name of the desktop image.
	ImageName string `pulumi:"imageName"`
	// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
	OperatingSystem string `pulumi:"operatingSystem"`
}

// GetDesktopPoolsDesktopPoolCollectionItemImageInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemImageArgs and GetDesktopPoolsDesktopPoolCollectionItemImageOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemImageInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemImageArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemImageInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemImageOutput() GetDesktopPoolsDesktopPoolCollectionItemImageOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemImageOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemImageOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemImageArgs struct {
	// The OCID of the desktop image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The name of the desktop image.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
	OperatingSystem pulumi.StringInput `pulumi:"operatingSystem"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemImage)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemImageArgs) ToGetDesktopPoolsDesktopPoolCollectionItemImageOutput() GetDesktopPoolsDesktopPoolCollectionItemImageOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemImageOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemImageArgs) ToGetDesktopPoolsDesktopPoolCollectionItemImageOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemImageOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemImageArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemImageArray and GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemImageArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemImageArray{ GetDesktopPoolsDesktopPoolCollectionItemImageArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemImageArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemImageArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemImageArray []GetDesktopPoolsDesktopPoolCollectionItemImageInput

func (GetDesktopPoolsDesktopPoolCollectionItemImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemImage)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemImageArray) ToGetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemImageArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemImageArray) ToGetDesktopPoolsDesktopPoolCollectionItemImageArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemImageOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemImage)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemImageOutput) ToGetDesktopPoolsDesktopPoolCollectionItemImageOutput() GetDesktopPoolsDesktopPoolCollectionItemImageOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemImageOutput) ToGetDesktopPoolsDesktopPoolCollectionItemImageOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemImageOutput {
	return o
}

// The OCID of the desktop image.
func (o GetDesktopPoolsDesktopPoolCollectionItemImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemImage) string { return v.ImageId }).(pulumi.StringOutput)
}

// The name of the desktop image.
func (o GetDesktopPoolsDesktopPoolCollectionItemImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The operating system of the desktop image, e.g. "Oracle Linux", "Windows".
func (o GetDesktopPoolsDesktopPoolCollectionItemImageOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemImage) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemImage)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemImageArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItemImage {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItemImage)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemImageOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemNetworkConfiguration struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
	SubnetId string `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId string `pulumi:"vcnId"`
}

// GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArgs and GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput() GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId pulumi.StringInput `pulumi:"vcnId"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemNetworkConfiguration)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArgs) ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput() GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArgs) ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArray and GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArray{ GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArray []GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationInput

func (GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemNetworkConfiguration)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArray) ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArray) ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemNetworkConfiguration)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput) ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput() GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput) ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
func (o GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemNetworkConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
func (o GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput) VcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemNetworkConfiguration) string { return v.VcnId }).(pulumi.StringOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemNetworkConfiguration)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItemNetworkConfiguration {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItemNetworkConfiguration)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail struct {
	// The three-label FQDN to use for the private endpoint. The customer VCN's DNS records are updated with this FQDN. This enables the customer to use the FQDN instead of the private endpoint's private IP address to access the service (for example, xyz.oraclecloud.com).
	EndpointFqdn string `pulumi:"endpointFqdn"`
	// A list of network security groups for the private access.
	NsgIds []string `pulumi:"nsgIds"`
	// The IPv4 address from the provided Oracle Cloud Infrastructure subnet which needs to be assigned to the VNIC. If not provided, it will be auto-assigned with an available IPv4 address from the subnet.
	PrivateIp string `pulumi:"privateIp"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
	SubnetId string `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId string `pulumi:"vcnId"`
}

// GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArgs and GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput() GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArgs struct {
	// The three-label FQDN to use for the private endpoint. The customer VCN's DNS records are updated with this FQDN. This enables the customer to use the FQDN instead of the private endpoint's private IP address to access the service (for example, xyz.oraclecloud.com).
	EndpointFqdn pulumi.StringInput `pulumi:"endpointFqdn"`
	// A list of network security groups for the private access.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The IPv4 address from the provided Oracle Cloud Infrastructure subnet which needs to be assigned to the VNIC. If not provided, it will be auto-assigned with an available IPv4 address from the subnet.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
	VcnId pulumi.StringInput `pulumi:"vcnId"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArgs) ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput() GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArgs) ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArray and GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArray{ GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArray []GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailInput

func (GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArray) ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArray) ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput) ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput() GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput) ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput {
	return o
}

// The three-label FQDN to use for the private endpoint. The customer VCN's DNS records are updated with this FQDN. This enables the customer to use the FQDN instead of the private endpoint's private IP address to access the service (for example, xyz.oraclecloud.com).
func (o GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput) EndpointFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail) string { return v.EndpointFqdn }).(pulumi.StringOutput)
}

// A list of network security groups for the private access.
func (o GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The IPv4 address from the provided Oracle Cloud Infrastructure subnet which needs to be assigned to the VNIC. If not provided, it will be auto-assigned with an available IPv4 address from the subnet.
func (o GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private subnet in the customer VCN where the connectivity will be established.
func (o GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer VCN.
func (o GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput) VcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail) string { return v.VcnId }).(pulumi.StringOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetail)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleAction struct {
	// Action and grace period for disconnect
	Disconnects []GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnect `pulumi:"disconnects"`
	// Action and grace period for inactivity
	Inactivities []GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivity `pulumi:"inactivities"`
}

// GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArgs and GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArgs struct {
	// Action and grace period for disconnect
	Disconnects GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayInput `pulumi:"disconnects"`
	// Action and grace period for inactivity
	Inactivities GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayInput `pulumi:"inactivities"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleAction)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArgs) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArgs) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArray and GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArray{ GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArray []GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInput

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleAction)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArray) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArray) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleAction)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput {
	return o
}

// Action and grace period for disconnect
func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput) Disconnects() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleAction) []GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnect {
		return v.Disconnects
	}).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput)
}

// Action and grace period for inactivity
func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput) Inactivities() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleAction) []GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivity {
		return v.Inactivities
	}).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleAction)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleAction {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleAction)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnect struct {
	// an inactivity action to be triggered
	Action string `pulumi:"action"`
	// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes int `pulumi:"gracePeriodInMinutes"`
}

// GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArgs and GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArgs struct {
	// an inactivity action to be triggered
	Action pulumi.StringInput `pulumi:"action"`
	// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes pulumi.IntInput `pulumi:"gracePeriodInMinutes"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnect)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArgs) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArgs) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArray and GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArray{ GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArray []GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectInput

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnect)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArray) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArray) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnect)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput {
	return o
}

// an inactivity action to be triggered
func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnect) string {
		return v.Action
	}).(pulumi.StringOutput)
}

// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput) GracePeriodInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnect) int {
		return v.GracePeriodInMinutes
	}).(pulumi.IntOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnect)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnect {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnect)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivity struct {
	// an inactivity action to be triggered
	Action string `pulumi:"action"`
	// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes int `pulumi:"gracePeriodInMinutes"`
}

// GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArgs and GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArgs struct {
	// an inactivity action to be triggered
	Action pulumi.StringInput `pulumi:"action"`
	// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
	GracePeriodInMinutes pulumi.IntInput `pulumi:"gracePeriodInMinutes"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivity)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArgs) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArgs) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArray and GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArray{ GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArray []GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityInput

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivity)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArray) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArray) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivity)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput {
	return o
}

// an inactivity action to be triggered
func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivity) string {
		return v.Action
	}).(pulumi.StringOutput)
}

// The period of time (in minutes) during which the session must remain inactive before any action occurs. If the value is not provided, a default value is used.
func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput) GracePeriodInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivity) int {
		return v.GracePeriodInMinutes
	}).(pulumi.IntOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivity)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivity {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivity)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemShapeConfig struct {
	// The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
	// * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
	// * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
	// * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
	BaselineOcpuUtilization string `pulumi:"baselineOcpuUtilization"`
	// The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
	MemoryInGbs string `pulumi:"memoryInGbs"`
	// The total number of OCPUs available for each desktop compute instance in the desktop pool.
	Ocpus string `pulumi:"ocpus"`
}

// GetDesktopPoolsDesktopPoolCollectionItemShapeConfigInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArgs and GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemShapeConfigInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArgs{...}
type GetDesktopPoolsDesktopPoolCollectionItemShapeConfigInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput() GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArgs struct {
	// The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
	// * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
	// * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
	// * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
	BaselineOcpuUtilization pulumi.StringInput `pulumi:"baselineOcpuUtilization"`
	// The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
	MemoryInGbs pulumi.StringInput `pulumi:"memoryInGbs"`
	// The total number of OCPUs available for each desktop compute instance in the desktop pool.
	Ocpus pulumi.StringInput `pulumi:"ocpus"`
}

func (GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemShapeConfig)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArgs) ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput() GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArgs) ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput)
}

// GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayInput is an input type that accepts GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArray and GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayInput` via:
//
//	GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArray{ GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArgs{...} }
type GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput
	ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutputWithContext(context.Context) GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput
}

type GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArray []GetDesktopPoolsDesktopPoolCollectionItemShapeConfigInput

func (GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemShapeConfig)(nil)).Elem()
}

func (i GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArray) ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput {
	return i.ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArray) ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemShapeConfig)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput) ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput() GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput) ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput {
	return o
}

// The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
// * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
// * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
// * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
func (o GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput) BaselineOcpuUtilization() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemShapeConfig) string { return v.BaselineOcpuUtilization }).(pulumi.StringOutput)
}

// The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput) MemoryInGbs() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemShapeConfig) string { return v.MemoryInGbs }).(pulumi.StringOutput)
}

// The total number of OCPUs available for each desktop compute instance in the desktop pool.
func (o GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput) Ocpus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsDesktopPoolCollectionItemShapeConfig) string { return v.Ocpus }).(pulumi.StringOutput)
}

type GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsDesktopPoolCollectionItemShapeConfig)(nil)).Elem()
}

func (o GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput() GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput) ToGetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutputWithContext(ctx context.Context) GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput {
	return o
}

func (o GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsDesktopPoolCollectionItemShapeConfig {
		return vs[0].([]GetDesktopPoolsDesktopPoolCollectionItemShapeConfig)[vs[1].(int)]
	}).(GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput)
}

type GetDesktopPoolsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetDesktopPoolsFilterInput is an input type that accepts GetDesktopPoolsFilterArgs and GetDesktopPoolsFilterOutput values.
// You can construct a concrete instance of `GetDesktopPoolsFilterInput` via:
//
//	GetDesktopPoolsFilterArgs{...}
type GetDesktopPoolsFilterInput interface {
	pulumi.Input

	ToGetDesktopPoolsFilterOutput() GetDesktopPoolsFilterOutput
	ToGetDesktopPoolsFilterOutputWithContext(context.Context) GetDesktopPoolsFilterOutput
}

type GetDesktopPoolsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDesktopPoolsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsFilter)(nil)).Elem()
}

func (i GetDesktopPoolsFilterArgs) ToGetDesktopPoolsFilterOutput() GetDesktopPoolsFilterOutput {
	return i.ToGetDesktopPoolsFilterOutputWithContext(context.Background())
}

func (i GetDesktopPoolsFilterArgs) ToGetDesktopPoolsFilterOutputWithContext(ctx context.Context) GetDesktopPoolsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsFilterOutput)
}

// GetDesktopPoolsFilterArrayInput is an input type that accepts GetDesktopPoolsFilterArray and GetDesktopPoolsFilterArrayOutput values.
// You can construct a concrete instance of `GetDesktopPoolsFilterArrayInput` via:
//
//	GetDesktopPoolsFilterArray{ GetDesktopPoolsFilterArgs{...} }
type GetDesktopPoolsFilterArrayInput interface {
	pulumi.Input

	ToGetDesktopPoolsFilterArrayOutput() GetDesktopPoolsFilterArrayOutput
	ToGetDesktopPoolsFilterArrayOutputWithContext(context.Context) GetDesktopPoolsFilterArrayOutput
}

type GetDesktopPoolsFilterArray []GetDesktopPoolsFilterInput

func (GetDesktopPoolsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsFilter)(nil)).Elem()
}

func (i GetDesktopPoolsFilterArray) ToGetDesktopPoolsFilterArrayOutput() GetDesktopPoolsFilterArrayOutput {
	return i.ToGetDesktopPoolsFilterArrayOutputWithContext(context.Background())
}

func (i GetDesktopPoolsFilterArray) ToGetDesktopPoolsFilterArrayOutputWithContext(ctx context.Context) GetDesktopPoolsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopPoolsFilterArrayOutput)
}

type GetDesktopPoolsFilterOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopPoolsFilter)(nil)).Elem()
}

func (o GetDesktopPoolsFilterOutput) ToGetDesktopPoolsFilterOutput() GetDesktopPoolsFilterOutput {
	return o
}

func (o GetDesktopPoolsFilterOutput) ToGetDesktopPoolsFilterOutputWithContext(ctx context.Context) GetDesktopPoolsFilterOutput {
	return o
}

func (o GetDesktopPoolsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopPoolsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDesktopPoolsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDesktopPoolsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetDesktopPoolsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDesktopPoolsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDesktopPoolsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopPoolsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopPoolsFilter)(nil)).Elem()
}

func (o GetDesktopPoolsFilterArrayOutput) ToGetDesktopPoolsFilterArrayOutput() GetDesktopPoolsFilterArrayOutput {
	return o
}

func (o GetDesktopPoolsFilterArrayOutput) ToGetDesktopPoolsFilterArrayOutputWithContext(ctx context.Context) GetDesktopPoolsFilterArrayOutput {
	return o
}

func (o GetDesktopPoolsFilterArrayOutput) Index(i pulumi.IntInput) GetDesktopPoolsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopPoolsFilter {
		return vs[0].([]GetDesktopPoolsFilter)[vs[1].(int)]
	}).(GetDesktopPoolsFilterOutput)
}

type GetDesktopsDesktopCollection struct {
	Items []GetDesktopsDesktopCollectionItem `pulumi:"items"`
}

// GetDesktopsDesktopCollectionInput is an input type that accepts GetDesktopsDesktopCollectionArgs and GetDesktopsDesktopCollectionOutput values.
// You can construct a concrete instance of `GetDesktopsDesktopCollectionInput` via:
//
//	GetDesktopsDesktopCollectionArgs{...}
type GetDesktopsDesktopCollectionInput interface {
	pulumi.Input

	ToGetDesktopsDesktopCollectionOutput() GetDesktopsDesktopCollectionOutput
	ToGetDesktopsDesktopCollectionOutputWithContext(context.Context) GetDesktopsDesktopCollectionOutput
}

type GetDesktopsDesktopCollectionArgs struct {
	Items GetDesktopsDesktopCollectionItemArrayInput `pulumi:"items"`
}

func (GetDesktopsDesktopCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopsDesktopCollection)(nil)).Elem()
}

func (i GetDesktopsDesktopCollectionArgs) ToGetDesktopsDesktopCollectionOutput() GetDesktopsDesktopCollectionOutput {
	return i.ToGetDesktopsDesktopCollectionOutputWithContext(context.Background())
}

func (i GetDesktopsDesktopCollectionArgs) ToGetDesktopsDesktopCollectionOutputWithContext(ctx context.Context) GetDesktopsDesktopCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopsDesktopCollectionOutput)
}

// GetDesktopsDesktopCollectionArrayInput is an input type that accepts GetDesktopsDesktopCollectionArray and GetDesktopsDesktopCollectionArrayOutput values.
// You can construct a concrete instance of `GetDesktopsDesktopCollectionArrayInput` via:
//
//	GetDesktopsDesktopCollectionArray{ GetDesktopsDesktopCollectionArgs{...} }
type GetDesktopsDesktopCollectionArrayInput interface {
	pulumi.Input

	ToGetDesktopsDesktopCollectionArrayOutput() GetDesktopsDesktopCollectionArrayOutput
	ToGetDesktopsDesktopCollectionArrayOutputWithContext(context.Context) GetDesktopsDesktopCollectionArrayOutput
}

type GetDesktopsDesktopCollectionArray []GetDesktopsDesktopCollectionInput

func (GetDesktopsDesktopCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopsDesktopCollection)(nil)).Elem()
}

func (i GetDesktopsDesktopCollectionArray) ToGetDesktopsDesktopCollectionArrayOutput() GetDesktopsDesktopCollectionArrayOutput {
	return i.ToGetDesktopsDesktopCollectionArrayOutputWithContext(context.Background())
}

func (i GetDesktopsDesktopCollectionArray) ToGetDesktopsDesktopCollectionArrayOutputWithContext(ctx context.Context) GetDesktopsDesktopCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopsDesktopCollectionArrayOutput)
}

type GetDesktopsDesktopCollectionOutput struct{ *pulumi.OutputState }

func (GetDesktopsDesktopCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopsDesktopCollection)(nil)).Elem()
}

func (o GetDesktopsDesktopCollectionOutput) ToGetDesktopsDesktopCollectionOutput() GetDesktopsDesktopCollectionOutput {
	return o
}

func (o GetDesktopsDesktopCollectionOutput) ToGetDesktopsDesktopCollectionOutputWithContext(ctx context.Context) GetDesktopsDesktopCollectionOutput {
	return o
}

func (o GetDesktopsDesktopCollectionOutput) Items() GetDesktopsDesktopCollectionItemArrayOutput {
	return o.ApplyT(func(v GetDesktopsDesktopCollection) []GetDesktopsDesktopCollectionItem { return v.Items }).(GetDesktopsDesktopCollectionItemArrayOutput)
}

type GetDesktopsDesktopCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopsDesktopCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopsDesktopCollection)(nil)).Elem()
}

func (o GetDesktopsDesktopCollectionArrayOutput) ToGetDesktopsDesktopCollectionArrayOutput() GetDesktopsDesktopCollectionArrayOutput {
	return o
}

func (o GetDesktopsDesktopCollectionArrayOutput) ToGetDesktopsDesktopCollectionArrayOutputWithContext(ctx context.Context) GetDesktopsDesktopCollectionArrayOutput {
	return o
}

func (o GetDesktopsDesktopCollectionArrayOutput) Index(i pulumi.IntInput) GetDesktopsDesktopCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopsDesktopCollection {
		return vs[0].([]GetDesktopsDesktopCollection)[vs[1].(int)]
	}).(GetDesktopsDesktopCollectionOutput)
}

type GetDesktopsDesktopCollectionItem struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A filter to return only results with the given displayName.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A filter to return only results with the given OCID.
	Id string `pulumi:"id"`
	// The OCID of the desktop pool the desktop is a member of.
	PoolId string `pulumi:"poolId"`
	// A filter to return only results with the given lifecycleState.
	State string `pulumi:"state"`
	// The date and time the resource was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The owner of the desktop.
	UserName string `pulumi:"userName"`
}

// GetDesktopsDesktopCollectionItemInput is an input type that accepts GetDesktopsDesktopCollectionItemArgs and GetDesktopsDesktopCollectionItemOutput values.
// You can construct a concrete instance of `GetDesktopsDesktopCollectionItemInput` via:
//
//	GetDesktopsDesktopCollectionItemArgs{...}
type GetDesktopsDesktopCollectionItemInput interface {
	pulumi.Input

	ToGetDesktopsDesktopCollectionItemOutput() GetDesktopsDesktopCollectionItemOutput
	ToGetDesktopsDesktopCollectionItemOutputWithContext(context.Context) GetDesktopsDesktopCollectionItemOutput
}

type GetDesktopsDesktopCollectionItemArgs struct {
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// A filter to return only results with the given displayName.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// A filter to return only results with the given OCID.
	Id pulumi.StringInput `pulumi:"id"`
	// The OCID of the desktop pool the desktop is a member of.
	PoolId pulumi.StringInput `pulumi:"poolId"`
	// A filter to return only results with the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the resource was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The owner of the desktop.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetDesktopsDesktopCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopsDesktopCollectionItem)(nil)).Elem()
}

func (i GetDesktopsDesktopCollectionItemArgs) ToGetDesktopsDesktopCollectionItemOutput() GetDesktopsDesktopCollectionItemOutput {
	return i.ToGetDesktopsDesktopCollectionItemOutputWithContext(context.Background())
}

func (i GetDesktopsDesktopCollectionItemArgs) ToGetDesktopsDesktopCollectionItemOutputWithContext(ctx context.Context) GetDesktopsDesktopCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopsDesktopCollectionItemOutput)
}

// GetDesktopsDesktopCollectionItemArrayInput is an input type that accepts GetDesktopsDesktopCollectionItemArray and GetDesktopsDesktopCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetDesktopsDesktopCollectionItemArrayInput` via:
//
//	GetDesktopsDesktopCollectionItemArray{ GetDesktopsDesktopCollectionItemArgs{...} }
type GetDesktopsDesktopCollectionItemArrayInput interface {
	pulumi.Input

	ToGetDesktopsDesktopCollectionItemArrayOutput() GetDesktopsDesktopCollectionItemArrayOutput
	ToGetDesktopsDesktopCollectionItemArrayOutputWithContext(context.Context) GetDesktopsDesktopCollectionItemArrayOutput
}

type GetDesktopsDesktopCollectionItemArray []GetDesktopsDesktopCollectionItemInput

func (GetDesktopsDesktopCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopsDesktopCollectionItem)(nil)).Elem()
}

func (i GetDesktopsDesktopCollectionItemArray) ToGetDesktopsDesktopCollectionItemArrayOutput() GetDesktopsDesktopCollectionItemArrayOutput {
	return i.ToGetDesktopsDesktopCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetDesktopsDesktopCollectionItemArray) ToGetDesktopsDesktopCollectionItemArrayOutputWithContext(ctx context.Context) GetDesktopsDesktopCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopsDesktopCollectionItemArrayOutput)
}

type GetDesktopsDesktopCollectionItemOutput struct{ *pulumi.OutputState }

func (GetDesktopsDesktopCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopsDesktopCollectionItem)(nil)).Elem()
}

func (o GetDesktopsDesktopCollectionItemOutput) ToGetDesktopsDesktopCollectionItemOutput() GetDesktopsDesktopCollectionItemOutput {
	return o
}

func (o GetDesktopsDesktopCollectionItemOutput) ToGetDesktopsDesktopCollectionItemOutputWithContext(ctx context.Context) GetDesktopsDesktopCollectionItemOutput {
	return o
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o GetDesktopsDesktopCollectionItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDesktopsDesktopCollectionItem) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A filter to return only results with the given displayName.
func (o GetDesktopsDesktopCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktopCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o GetDesktopsDesktopCollectionItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDesktopsDesktopCollectionItem) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A filter to return only results with the given OCID.
func (o GetDesktopsDesktopCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktopCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// The OCID of the desktop pool the desktop is a member of.
func (o GetDesktopsDesktopCollectionItemOutput) PoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktopCollectionItem) string { return v.PoolId }).(pulumi.StringOutput)
}

// A filter to return only results with the given lifecycleState.
func (o GetDesktopsDesktopCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktopCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created.
func (o GetDesktopsDesktopCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktopCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The owner of the desktop.
func (o GetDesktopsDesktopCollectionItemOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsDesktopCollectionItem) string { return v.UserName }).(pulumi.StringOutput)
}

type GetDesktopsDesktopCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopsDesktopCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopsDesktopCollectionItem)(nil)).Elem()
}

func (o GetDesktopsDesktopCollectionItemArrayOutput) ToGetDesktopsDesktopCollectionItemArrayOutput() GetDesktopsDesktopCollectionItemArrayOutput {
	return o
}

func (o GetDesktopsDesktopCollectionItemArrayOutput) ToGetDesktopsDesktopCollectionItemArrayOutputWithContext(ctx context.Context) GetDesktopsDesktopCollectionItemArrayOutput {
	return o
}

func (o GetDesktopsDesktopCollectionItemArrayOutput) Index(i pulumi.IntInput) GetDesktopsDesktopCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopsDesktopCollectionItem {
		return vs[0].([]GetDesktopsDesktopCollectionItem)[vs[1].(int)]
	}).(GetDesktopsDesktopCollectionItemOutput)
}

type GetDesktopsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetDesktopsFilterInput is an input type that accepts GetDesktopsFilterArgs and GetDesktopsFilterOutput values.
// You can construct a concrete instance of `GetDesktopsFilterInput` via:
//
//	GetDesktopsFilterArgs{...}
type GetDesktopsFilterInput interface {
	pulumi.Input

	ToGetDesktopsFilterOutput() GetDesktopsFilterOutput
	ToGetDesktopsFilterOutputWithContext(context.Context) GetDesktopsFilterOutput
}

type GetDesktopsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDesktopsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopsFilter)(nil)).Elem()
}

func (i GetDesktopsFilterArgs) ToGetDesktopsFilterOutput() GetDesktopsFilterOutput {
	return i.ToGetDesktopsFilterOutputWithContext(context.Background())
}

func (i GetDesktopsFilterArgs) ToGetDesktopsFilterOutputWithContext(ctx context.Context) GetDesktopsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopsFilterOutput)
}

// GetDesktopsFilterArrayInput is an input type that accepts GetDesktopsFilterArray and GetDesktopsFilterArrayOutput values.
// You can construct a concrete instance of `GetDesktopsFilterArrayInput` via:
//
//	GetDesktopsFilterArray{ GetDesktopsFilterArgs{...} }
type GetDesktopsFilterArrayInput interface {
	pulumi.Input

	ToGetDesktopsFilterArrayOutput() GetDesktopsFilterArrayOutput
	ToGetDesktopsFilterArrayOutputWithContext(context.Context) GetDesktopsFilterArrayOutput
}

type GetDesktopsFilterArray []GetDesktopsFilterInput

func (GetDesktopsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopsFilter)(nil)).Elem()
}

func (i GetDesktopsFilterArray) ToGetDesktopsFilterArrayOutput() GetDesktopsFilterArrayOutput {
	return i.ToGetDesktopsFilterArrayOutputWithContext(context.Background())
}

func (i GetDesktopsFilterArray) ToGetDesktopsFilterArrayOutputWithContext(ctx context.Context) GetDesktopsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDesktopsFilterArrayOutput)
}

type GetDesktopsFilterOutput struct{ *pulumi.OutputState }

func (GetDesktopsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDesktopsFilter)(nil)).Elem()
}

func (o GetDesktopsFilterOutput) ToGetDesktopsFilterOutput() GetDesktopsFilterOutput {
	return o
}

func (o GetDesktopsFilterOutput) ToGetDesktopsFilterOutputWithContext(ctx context.Context) GetDesktopsFilterOutput {
	return o
}

func (o GetDesktopsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDesktopsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDesktopsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDesktopsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetDesktopsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDesktopsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDesktopsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDesktopsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDesktopsFilter)(nil)).Elem()
}

func (o GetDesktopsFilterArrayOutput) ToGetDesktopsFilterArrayOutput() GetDesktopsFilterArrayOutput {
	return o
}

func (o GetDesktopsFilterArrayOutput) ToGetDesktopsFilterArrayOutputWithContext(ctx context.Context) GetDesktopsFilterArrayOutput {
	return o
}

func (o GetDesktopsFilterArrayOutput) Index(i pulumi.IntInput) GetDesktopsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDesktopsFilter {
		return vs[0].([]GetDesktopsFilter)[vs[1].(int)]
	}).(GetDesktopsFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolAvailabilityPolicyInput)(nil)).Elem(), DesktopPoolAvailabilityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolAvailabilityPolicyPtrInput)(nil)).Elem(), DesktopPoolAvailabilityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolAvailabilityPolicyStartScheduleInput)(nil)).Elem(), DesktopPoolAvailabilityPolicyStartScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolAvailabilityPolicyStartSchedulePtrInput)(nil)).Elem(), DesktopPoolAvailabilityPolicyStartScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolAvailabilityPolicyStopScheduleInput)(nil)).Elem(), DesktopPoolAvailabilityPolicyStopScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolAvailabilityPolicyStopSchedulePtrInput)(nil)).Elem(), DesktopPoolAvailabilityPolicyStopScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolDevicePolicyInput)(nil)).Elem(), DesktopPoolDevicePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolDevicePolicyPtrInput)(nil)).Elem(), DesktopPoolDevicePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolImageInput)(nil)).Elem(), DesktopPoolImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolImagePtrInput)(nil)).Elem(), DesktopPoolImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolNetworkConfigurationInput)(nil)).Elem(), DesktopPoolNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolNetworkConfigurationPtrInput)(nil)).Elem(), DesktopPoolNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolPrivateAccessDetailsInput)(nil)).Elem(), DesktopPoolPrivateAccessDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolPrivateAccessDetailsPtrInput)(nil)).Elem(), DesktopPoolPrivateAccessDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolSessionLifecycleActionsInput)(nil)).Elem(), DesktopPoolSessionLifecycleActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolSessionLifecycleActionsPtrInput)(nil)).Elem(), DesktopPoolSessionLifecycleActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolSessionLifecycleActionsDisconnectInput)(nil)).Elem(), DesktopPoolSessionLifecycleActionsDisconnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolSessionLifecycleActionsDisconnectPtrInput)(nil)).Elem(), DesktopPoolSessionLifecycleActionsDisconnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolSessionLifecycleActionsInactivityInput)(nil)).Elem(), DesktopPoolSessionLifecycleActionsInactivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolSessionLifecycleActionsInactivityPtrInput)(nil)).Elem(), DesktopPoolSessionLifecycleActionsInactivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolShapeConfigInput)(nil)).Elem(), DesktopPoolShapeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DesktopPoolShapeConfigPtrInput)(nil)).Elem(), DesktopPoolShapeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopDevicePolicyInput)(nil)).Elem(), GetDesktopDevicePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopDevicePolicyArrayInput)(nil)).Elem(), GetDesktopDevicePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopHostingOptionInput)(nil)).Elem(), GetDesktopHostingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopHostingOptionArrayInput)(nil)).Elem(), GetDesktopHostingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopHostingOptionImageInput)(nil)).Elem(), GetDesktopHostingOptionImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopHostingOptionImageArrayInput)(nil)).Elem(), GetDesktopHostingOptionImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolAvailabilityPolicyInput)(nil)).Elem(), GetDesktopPoolAvailabilityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolAvailabilityPolicyArrayInput)(nil)).Elem(), GetDesktopPoolAvailabilityPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolAvailabilityPolicyStartScheduleInput)(nil)).Elem(), GetDesktopPoolAvailabilityPolicyStartScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolAvailabilityPolicyStartScheduleArrayInput)(nil)).Elem(), GetDesktopPoolAvailabilityPolicyStartScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolAvailabilityPolicyStopScheduleInput)(nil)).Elem(), GetDesktopPoolAvailabilityPolicyStopScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolAvailabilityPolicyStopScheduleArrayInput)(nil)).Elem(), GetDesktopPoolAvailabilityPolicyStopScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolDesktopsDesktopPoolDesktopCollectionInput)(nil)).Elem(), GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayInput)(nil)).Elem(), GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemInput)(nil)).Elem(), GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayInput)(nil)).Elem(), GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolDesktopsFilterInput)(nil)).Elem(), GetDesktopPoolDesktopsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolDesktopsFilterArrayInput)(nil)).Elem(), GetDesktopPoolDesktopsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolDevicePolicyInput)(nil)).Elem(), GetDesktopPoolDevicePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolDevicePolicyArrayInput)(nil)).Elem(), GetDesktopPoolDevicePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolImageInput)(nil)).Elem(), GetDesktopPoolImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolImageArrayInput)(nil)).Elem(), GetDesktopPoolImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolNetworkConfigurationInput)(nil)).Elem(), GetDesktopPoolNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolNetworkConfigurationArrayInput)(nil)).Elem(), GetDesktopPoolNetworkConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolPrivateAccessDetailInput)(nil)).Elem(), GetDesktopPoolPrivateAccessDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolPrivateAccessDetailArrayInput)(nil)).Elem(), GetDesktopPoolPrivateAccessDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolSessionLifecycleActionInput)(nil)).Elem(), GetDesktopPoolSessionLifecycleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolSessionLifecycleActionArrayInput)(nil)).Elem(), GetDesktopPoolSessionLifecycleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolSessionLifecycleActionDisconnectInput)(nil)).Elem(), GetDesktopPoolSessionLifecycleActionDisconnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolSessionLifecycleActionDisconnectArrayInput)(nil)).Elem(), GetDesktopPoolSessionLifecycleActionDisconnectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolSessionLifecycleActionInactivityInput)(nil)).Elem(), GetDesktopPoolSessionLifecycleActionInactivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolSessionLifecycleActionInactivityArrayInput)(nil)).Elem(), GetDesktopPoolSessionLifecycleActionInactivityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolShapeConfigInput)(nil)).Elem(), GetDesktopPoolShapeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolShapeConfigArrayInput)(nil)).Elem(), GetDesktopPoolShapeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolVolumesDesktopPoolVolumeCollectionInput)(nil)).Elem(), GetDesktopPoolVolumesDesktopPoolVolumeCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayInput)(nil)).Elem(), GetDesktopPoolVolumesDesktopPoolVolumeCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemInput)(nil)).Elem(), GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayInput)(nil)).Elem(), GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolVolumesFilterInput)(nil)).Elem(), GetDesktopPoolVolumesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolVolumesFilterArrayInput)(nil)).Elem(), GetDesktopPoolVolumesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemImageInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemImageArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemShapeConfigInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayInput)(nil)).Elem(), GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsFilterInput)(nil)).Elem(), GetDesktopPoolsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopPoolsFilterArrayInput)(nil)).Elem(), GetDesktopPoolsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopsDesktopCollectionInput)(nil)).Elem(), GetDesktopsDesktopCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopsDesktopCollectionArrayInput)(nil)).Elem(), GetDesktopsDesktopCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopsDesktopCollectionItemInput)(nil)).Elem(), GetDesktopsDesktopCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopsDesktopCollectionItemArrayInput)(nil)).Elem(), GetDesktopsDesktopCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopsFilterInput)(nil)).Elem(), GetDesktopsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDesktopsFilterArrayInput)(nil)).Elem(), GetDesktopsFilterArray{})
	pulumi.RegisterOutputType(DesktopPoolAvailabilityPolicyOutput{})
	pulumi.RegisterOutputType(DesktopPoolAvailabilityPolicyPtrOutput{})
	pulumi.RegisterOutputType(DesktopPoolAvailabilityPolicyStartScheduleOutput{})
	pulumi.RegisterOutputType(DesktopPoolAvailabilityPolicyStartSchedulePtrOutput{})
	pulumi.RegisterOutputType(DesktopPoolAvailabilityPolicyStopScheduleOutput{})
	pulumi.RegisterOutputType(DesktopPoolAvailabilityPolicyStopSchedulePtrOutput{})
	pulumi.RegisterOutputType(DesktopPoolDevicePolicyOutput{})
	pulumi.RegisterOutputType(DesktopPoolDevicePolicyPtrOutput{})
	pulumi.RegisterOutputType(DesktopPoolImageOutput{})
	pulumi.RegisterOutputType(DesktopPoolImagePtrOutput{})
	pulumi.RegisterOutputType(DesktopPoolNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(DesktopPoolNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DesktopPoolPrivateAccessDetailsOutput{})
	pulumi.RegisterOutputType(DesktopPoolPrivateAccessDetailsPtrOutput{})
	pulumi.RegisterOutputType(DesktopPoolSessionLifecycleActionsOutput{})
	pulumi.RegisterOutputType(DesktopPoolSessionLifecycleActionsPtrOutput{})
	pulumi.RegisterOutputType(DesktopPoolSessionLifecycleActionsDisconnectOutput{})
	pulumi.RegisterOutputType(DesktopPoolSessionLifecycleActionsDisconnectPtrOutput{})
	pulumi.RegisterOutputType(DesktopPoolSessionLifecycleActionsInactivityOutput{})
	pulumi.RegisterOutputType(DesktopPoolSessionLifecycleActionsInactivityPtrOutput{})
	pulumi.RegisterOutputType(DesktopPoolShapeConfigOutput{})
	pulumi.RegisterOutputType(DesktopPoolShapeConfigPtrOutput{})
	pulumi.RegisterOutputType(GetDesktopDevicePolicyOutput{})
	pulumi.RegisterOutputType(GetDesktopDevicePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopHostingOptionOutput{})
	pulumi.RegisterOutputType(GetDesktopHostingOptionArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopHostingOptionImageOutput{})
	pulumi.RegisterOutputType(GetDesktopHostingOptionImageArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolAvailabilityPolicyOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolAvailabilityPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolAvailabilityPolicyStartScheduleOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolAvailabilityPolicyStartScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolAvailabilityPolicyStopScheduleOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolAvailabilityPolicyStopScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolDesktopsDesktopPoolDesktopCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolDesktopsFilterOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolDesktopsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolDevicePolicyOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolDevicePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolImageOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolImageArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolNetworkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolPrivateAccessDetailOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolPrivateAccessDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolSessionLifecycleActionOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolSessionLifecycleActionArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolSessionLifecycleActionDisconnectOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolSessionLifecycleActionDisconnectArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolSessionLifecycleActionInactivityOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolSessionLifecycleActionInactivityArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolShapeConfigOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolShapeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolVolumesDesktopPoolVolumeCollectionOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolVolumesDesktopPoolVolumeCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolVolumesDesktopPoolVolumeCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolVolumesFilterOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolVolumesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemDevicePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemImageOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemImageArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemNetworkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemPrivateAccessDetailArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionDisconnectArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemSessionLifecycleActionInactivityArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemShapeConfigOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsDesktopPoolCollectionItemShapeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsFilterOutput{})
	pulumi.RegisterOutputType(GetDesktopPoolsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopsDesktopCollectionOutput{})
	pulumi.RegisterOutputType(GetDesktopsDesktopCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopsDesktopCollectionItemOutput{})
	pulumi.RegisterOutputType(GetDesktopsDesktopCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetDesktopsFilterOutput{})
	pulumi.RegisterOutputType(GetDesktopsFilterArrayOutput{})
}
