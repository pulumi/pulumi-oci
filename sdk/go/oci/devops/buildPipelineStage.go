// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Build Pipeline Stage resource in Oracle Cloud Infrastructure Devops service.
//
// Creates a new stage.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/DevOps"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := DevOps.NewBuildPipelineStage(ctx, "testBuildPipelineStage", &DevOps.BuildPipelineStageArgs{
// 			BuildPipelineId: pulumi.Any(oci_devops_build_pipeline.Test_build_pipeline.Id),
// 			BuildPipelineStagePredecessorCollection: &devops.BuildPipelineStageBuildPipelineStagePredecessorCollectionArgs{
// 				Items: devops.BuildPipelineStageBuildPipelineStagePredecessorCollectionItemArray{
// 					&devops.BuildPipelineStageBuildPipelineStagePredecessorCollectionItemArgs{
// 						Id: pulumi.Any(_var.Build_pipeline_stage_build_pipeline_stage_predecessor_collection_items_id),
// 					},
// 				},
// 			},
// 			BuildPipelineStageType: pulumi.Any(_var.Build_pipeline_stage_build_pipeline_stage_type),
// 			BuildSourceCollection: &devops.BuildPipelineStageBuildSourceCollectionArgs{
// 				Items: devops.BuildPipelineStageBuildSourceCollectionItemArray{
// 					&devops.BuildPipelineStageBuildSourceCollectionItemArgs{
// 						ConnectionType: pulumi.Any(_var.Build_pipeline_stage_build_source_collection_items_connection_type),
// 						Branch:         pulumi.Any(_var.Build_pipeline_stage_build_source_collection_items_branch),
// 						ConnectionId:   pulumi.Any(oci_devops_connection.Test_connection.Id),
// 						Name:           pulumi.Any(_var.Build_pipeline_stage_build_source_collection_items_name),
// 						RepositoryId:   pulumi.Any(oci_artifacts_repository.Test_repository.Id),
// 						RepositoryUrl:  pulumi.Any(_var.Build_pipeline_stage_build_source_collection_items_repository_url),
// 					},
// 				},
// 			},
// 			BuildSpecFile: pulumi.Any(_var.Build_pipeline_stage_build_spec_file),
// 			DefinedTags: pulumi.AnyMap{
// 				"foo-namespace.bar-key": pulumi.Any("value"),
// 			},
// 			DeliverArtifactCollection: &devops.BuildPipelineStageDeliverArtifactCollectionArgs{
// 				Items: devops.BuildPipelineStageDeliverArtifactCollectionItemArray{
// 					&devops.BuildPipelineStageDeliverArtifactCollectionItemArgs{
// 						ArtifactId:   pulumi.Any(oci_devops_artifact.Test_artifact.Id),
// 						ArtifactName: pulumi.Any(_var.Build_pipeline_stage_deliver_artifact_collection_items_artifact_name),
// 					},
// 				},
// 			},
// 			DeployPipelineId: pulumi.Any(oci_devops_deploy_pipeline.Test_deploy_pipeline.Id),
// 			Description:      pulumi.Any(_var.Build_pipeline_stage_description),
// 			DisplayName:      pulumi.Any(_var.Build_pipeline_stage_display_name),
// 			FreeformTags: pulumi.AnyMap{
// 				"bar-key": pulumi.Any("value"),
// 			},
// 			Image:                          pulumi.Any(_var.Build_pipeline_stage_image),
// 			IsPassAllParametersEnabled:     pulumi.Any(_var.Build_pipeline_stage_is_pass_all_parameters_enabled),
// 			PrimaryBuildSource:             pulumi.Any(_var.Build_pipeline_stage_primary_build_source),
// 			StageExecutionTimeoutInSeconds: pulumi.Any(_var.Build_pipeline_stage_stage_execution_timeout_in_seconds),
// 			WaitCriteria: &devops.BuildPipelineStageWaitCriteriaArgs{
// 				WaitDuration: pulumi.Any(_var.Build_pipeline_stage_wait_criteria_wait_duration),
// 				WaitType:     pulumi.Any(_var.Build_pipeline_stage_wait_criteria_wait_type),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// BuildPipelineStages can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import oci:DevOps/buildPipelineStage:BuildPipelineStage test_build_pipeline_stage "id"
// ```
type BuildPipelineStage struct {
	pulumi.CustomResourceState

	// The OCID of the build pipeline.
	BuildPipelineId pulumi.StringOutput `pulumi:"buildPipelineId"`
	// (Updatable) The collection containing the predecessors of a stage.
	BuildPipelineStagePredecessorCollection BuildPipelineStageBuildPipelineStagePredecessorCollectionOutput `pulumi:"buildPipelineStagePredecessorCollection"`
	// (Updatable) Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
	BuildPipelineStageType pulumi.StringOutput `pulumi:"buildPipelineStageType"`
	// (Updatable) Collection of build sources.
	BuildSourceCollection BuildPipelineStageBuildSourceCollectionOutput `pulumi:"buildSourceCollection"`
	// (Updatable) The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
	BuildSpecFile pulumi.StringOutput `pulumi:"buildSpecFile"`
	// The OCID of the compartment where the pipeline is created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Specifies an array of artifacts that need to be pushed to the artifactory stores.
	DeliverArtifactCollection BuildPipelineStageDeliverArtifactCollectionOutput `pulumi:"deliverArtifactCollection"`
	// (Updatable) A target deployment pipeline OCID that will run in this stage.
	DeployPipelineId pulumi.StringOutput `pulumi:"deployPipelineId"`
	// (Updatable) Optional description about the stage.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// (Updatable) Image name for the build environment
	Image pulumi.StringOutput `pulumi:"image"`
	// (Updatable) A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
	IsPassAllParametersEnabled pulumi.BoolOutput `pulumi:"isPassAllParametersEnabled"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) Name of the build source where the build_spec.yml file is located. If not specified, the first entry in the build source collection is chosen as primary build source.
	PrimaryBuildSource pulumi.StringOutput `pulumi:"primaryBuildSource"`
	// The OCID of the DevOps project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// (Updatable) Timeout for the build stage execution. Specify value in seconds.
	StageExecutionTimeoutInSeconds pulumi.IntOutput `pulumi:"stageExecutionTimeoutInSeconds"`
	// The current state of the stage.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) Specifies wait criteria for the Wait stage.
	WaitCriteria BuildPipelineStageWaitCriteriaOutput `pulumi:"waitCriteria"`
}

// NewBuildPipelineStage registers a new resource with the given unique name, arguments, and options.
func NewBuildPipelineStage(ctx *pulumi.Context,
	name string, args *BuildPipelineStageArgs, opts ...pulumi.ResourceOption) (*BuildPipelineStage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BuildPipelineId == nil {
		return nil, errors.New("invalid value for required argument 'BuildPipelineId'")
	}
	if args.BuildPipelineStagePredecessorCollection == nil {
		return nil, errors.New("invalid value for required argument 'BuildPipelineStagePredecessorCollection'")
	}
	if args.BuildPipelineStageType == nil {
		return nil, errors.New("invalid value for required argument 'BuildPipelineStageType'")
	}
	var resource BuildPipelineStage
	err := ctx.RegisterResource("oci:DevOps/buildPipelineStage:BuildPipelineStage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBuildPipelineStage gets an existing BuildPipelineStage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBuildPipelineStage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BuildPipelineStageState, opts ...pulumi.ResourceOption) (*BuildPipelineStage, error) {
	var resource BuildPipelineStage
	err := ctx.ReadResource("oci:DevOps/buildPipelineStage:BuildPipelineStage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BuildPipelineStage resources.
type buildPipelineStageState struct {
	// The OCID of the build pipeline.
	BuildPipelineId *string `pulumi:"buildPipelineId"`
	// (Updatable) The collection containing the predecessors of a stage.
	BuildPipelineStagePredecessorCollection *BuildPipelineStageBuildPipelineStagePredecessorCollection `pulumi:"buildPipelineStagePredecessorCollection"`
	// (Updatable) Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
	BuildPipelineStageType *string `pulumi:"buildPipelineStageType"`
	// (Updatable) Collection of build sources.
	BuildSourceCollection *BuildPipelineStageBuildSourceCollection `pulumi:"buildSourceCollection"`
	// (Updatable) The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
	BuildSpecFile *string `pulumi:"buildSpecFile"`
	// The OCID of the compartment where the pipeline is created.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Specifies an array of artifacts that need to be pushed to the artifactory stores.
	DeliverArtifactCollection *BuildPipelineStageDeliverArtifactCollection `pulumi:"deliverArtifactCollection"`
	// (Updatable) A target deployment pipeline OCID that will run in this stage.
	DeployPipelineId *string `pulumi:"deployPipelineId"`
	// (Updatable) Optional description about the stage.
	Description *string `pulumi:"description"`
	// (Updatable) Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Image name for the build environment
	Image *string `pulumi:"image"`
	// (Updatable) A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
	IsPassAllParametersEnabled *bool `pulumi:"isPassAllParametersEnabled"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) Name of the build source where the build_spec.yml file is located. If not specified, the first entry in the build source collection is chosen as primary build source.
	PrimaryBuildSource *string `pulumi:"primaryBuildSource"`
	// The OCID of the DevOps project.
	ProjectId *string `pulumi:"projectId"`
	// (Updatable) Timeout for the build stage execution. Specify value in seconds.
	StageExecutionTimeoutInSeconds *int `pulumi:"stageExecutionTimeoutInSeconds"`
	// The current state of the stage.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) Specifies wait criteria for the Wait stage.
	WaitCriteria *BuildPipelineStageWaitCriteria `pulumi:"waitCriteria"`
}

type BuildPipelineStageState struct {
	// The OCID of the build pipeline.
	BuildPipelineId pulumi.StringPtrInput
	// (Updatable) The collection containing the predecessors of a stage.
	BuildPipelineStagePredecessorCollection BuildPipelineStageBuildPipelineStagePredecessorCollectionPtrInput
	// (Updatable) Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
	BuildPipelineStageType pulumi.StringPtrInput
	// (Updatable) Collection of build sources.
	BuildSourceCollection BuildPipelineStageBuildSourceCollectionPtrInput
	// (Updatable) The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
	BuildSpecFile pulumi.StringPtrInput
	// The OCID of the compartment where the pipeline is created.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Specifies an array of artifacts that need to be pushed to the artifactory stores.
	DeliverArtifactCollection BuildPipelineStageDeliverArtifactCollectionPtrInput
	// (Updatable) A target deployment pipeline OCID that will run in this stage.
	DeployPipelineId pulumi.StringPtrInput
	// (Updatable) Optional description about the stage.
	Description pulumi.StringPtrInput
	// (Updatable) Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Image name for the build environment
	Image pulumi.StringPtrInput
	// (Updatable) A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
	IsPassAllParametersEnabled pulumi.BoolPtrInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) Name of the build source where the build_spec.yml file is located. If not specified, the first entry in the build source collection is chosen as primary build source.
	PrimaryBuildSource pulumi.StringPtrInput
	// The OCID of the DevOps project.
	ProjectId pulumi.StringPtrInput
	// (Updatable) Timeout for the build stage execution. Specify value in seconds.
	StageExecutionTimeoutInSeconds pulumi.IntPtrInput
	// The current state of the stage.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// The time the stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) Specifies wait criteria for the Wait stage.
	WaitCriteria BuildPipelineStageWaitCriteriaPtrInput
}

func (BuildPipelineStageState) ElementType() reflect.Type {
	return reflect.TypeOf((*buildPipelineStageState)(nil)).Elem()
}

type buildPipelineStageArgs struct {
	// The OCID of the build pipeline.
	BuildPipelineId string `pulumi:"buildPipelineId"`
	// (Updatable) The collection containing the predecessors of a stage.
	BuildPipelineStagePredecessorCollection BuildPipelineStageBuildPipelineStagePredecessorCollection `pulumi:"buildPipelineStagePredecessorCollection"`
	// (Updatable) Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
	BuildPipelineStageType string `pulumi:"buildPipelineStageType"`
	// (Updatable) Collection of build sources.
	BuildSourceCollection *BuildPipelineStageBuildSourceCollection `pulumi:"buildSourceCollection"`
	// (Updatable) The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
	BuildSpecFile *string `pulumi:"buildSpecFile"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Specifies an array of artifacts that need to be pushed to the artifactory stores.
	DeliverArtifactCollection *BuildPipelineStageDeliverArtifactCollection `pulumi:"deliverArtifactCollection"`
	// (Updatable) A target deployment pipeline OCID that will run in this stage.
	DeployPipelineId *string `pulumi:"deployPipelineId"`
	// (Updatable) Optional description about the stage.
	Description *string `pulumi:"description"`
	// (Updatable) Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// (Updatable) Image name for the build environment
	Image *string `pulumi:"image"`
	// (Updatable) A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
	IsPassAllParametersEnabled *bool `pulumi:"isPassAllParametersEnabled"`
	// (Updatable) Name of the build source where the build_spec.yml file is located. If not specified, the first entry in the build source collection is chosen as primary build source.
	PrimaryBuildSource *string `pulumi:"primaryBuildSource"`
	// (Updatable) Timeout for the build stage execution. Specify value in seconds.
	StageExecutionTimeoutInSeconds *int `pulumi:"stageExecutionTimeoutInSeconds"`
	// (Updatable) Specifies wait criteria for the Wait stage.
	WaitCriteria *BuildPipelineStageWaitCriteria `pulumi:"waitCriteria"`
}

// The set of arguments for constructing a BuildPipelineStage resource.
type BuildPipelineStageArgs struct {
	// The OCID of the build pipeline.
	BuildPipelineId pulumi.StringInput
	// (Updatable) The collection containing the predecessors of a stage.
	BuildPipelineStagePredecessorCollection BuildPipelineStageBuildPipelineStagePredecessorCollectionInput
	// (Updatable) Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
	BuildPipelineStageType pulumi.StringInput
	// (Updatable) Collection of build sources.
	BuildSourceCollection BuildPipelineStageBuildSourceCollectionPtrInput
	// (Updatable) The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
	BuildSpecFile pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Specifies an array of artifacts that need to be pushed to the artifactory stores.
	DeliverArtifactCollection BuildPipelineStageDeliverArtifactCollectionPtrInput
	// (Updatable) A target deployment pipeline OCID that will run in this stage.
	DeployPipelineId pulumi.StringPtrInput
	// (Updatable) Optional description about the stage.
	Description pulumi.StringPtrInput
	// (Updatable) Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// (Updatable) Image name for the build environment
	Image pulumi.StringPtrInput
	// (Updatable) A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
	IsPassAllParametersEnabled pulumi.BoolPtrInput
	// (Updatable) Name of the build source where the build_spec.yml file is located. If not specified, the first entry in the build source collection is chosen as primary build source.
	PrimaryBuildSource pulumi.StringPtrInput
	// (Updatable) Timeout for the build stage execution. Specify value in seconds.
	StageExecutionTimeoutInSeconds pulumi.IntPtrInput
	// (Updatable) Specifies wait criteria for the Wait stage.
	WaitCriteria BuildPipelineStageWaitCriteriaPtrInput
}

func (BuildPipelineStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*buildPipelineStageArgs)(nil)).Elem()
}

type BuildPipelineStageInput interface {
	pulumi.Input

	ToBuildPipelineStageOutput() BuildPipelineStageOutput
	ToBuildPipelineStageOutputWithContext(ctx context.Context) BuildPipelineStageOutput
}

func (*BuildPipelineStage) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildPipelineStage)(nil)).Elem()
}

func (i *BuildPipelineStage) ToBuildPipelineStageOutput() BuildPipelineStageOutput {
	return i.ToBuildPipelineStageOutputWithContext(context.Background())
}

func (i *BuildPipelineStage) ToBuildPipelineStageOutputWithContext(ctx context.Context) BuildPipelineStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildPipelineStageOutput)
}

// BuildPipelineStageArrayInput is an input type that accepts BuildPipelineStageArray and BuildPipelineStageArrayOutput values.
// You can construct a concrete instance of `BuildPipelineStageArrayInput` via:
//
//          BuildPipelineStageArray{ BuildPipelineStageArgs{...} }
type BuildPipelineStageArrayInput interface {
	pulumi.Input

	ToBuildPipelineStageArrayOutput() BuildPipelineStageArrayOutput
	ToBuildPipelineStageArrayOutputWithContext(context.Context) BuildPipelineStageArrayOutput
}

type BuildPipelineStageArray []BuildPipelineStageInput

func (BuildPipelineStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BuildPipelineStage)(nil)).Elem()
}

func (i BuildPipelineStageArray) ToBuildPipelineStageArrayOutput() BuildPipelineStageArrayOutput {
	return i.ToBuildPipelineStageArrayOutputWithContext(context.Background())
}

func (i BuildPipelineStageArray) ToBuildPipelineStageArrayOutputWithContext(ctx context.Context) BuildPipelineStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildPipelineStageArrayOutput)
}

// BuildPipelineStageMapInput is an input type that accepts BuildPipelineStageMap and BuildPipelineStageMapOutput values.
// You can construct a concrete instance of `BuildPipelineStageMapInput` via:
//
//          BuildPipelineStageMap{ "key": BuildPipelineStageArgs{...} }
type BuildPipelineStageMapInput interface {
	pulumi.Input

	ToBuildPipelineStageMapOutput() BuildPipelineStageMapOutput
	ToBuildPipelineStageMapOutputWithContext(context.Context) BuildPipelineStageMapOutput
}

type BuildPipelineStageMap map[string]BuildPipelineStageInput

func (BuildPipelineStageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BuildPipelineStage)(nil)).Elem()
}

func (i BuildPipelineStageMap) ToBuildPipelineStageMapOutput() BuildPipelineStageMapOutput {
	return i.ToBuildPipelineStageMapOutputWithContext(context.Background())
}

func (i BuildPipelineStageMap) ToBuildPipelineStageMapOutputWithContext(ctx context.Context) BuildPipelineStageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildPipelineStageMapOutput)
}

type BuildPipelineStageOutput struct{ *pulumi.OutputState }

func (BuildPipelineStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildPipelineStage)(nil)).Elem()
}

func (o BuildPipelineStageOutput) ToBuildPipelineStageOutput() BuildPipelineStageOutput {
	return o
}

func (o BuildPipelineStageOutput) ToBuildPipelineStageOutputWithContext(ctx context.Context) BuildPipelineStageOutput {
	return o
}

type BuildPipelineStageArrayOutput struct{ *pulumi.OutputState }

func (BuildPipelineStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BuildPipelineStage)(nil)).Elem()
}

func (o BuildPipelineStageArrayOutput) ToBuildPipelineStageArrayOutput() BuildPipelineStageArrayOutput {
	return o
}

func (o BuildPipelineStageArrayOutput) ToBuildPipelineStageArrayOutputWithContext(ctx context.Context) BuildPipelineStageArrayOutput {
	return o
}

func (o BuildPipelineStageArrayOutput) Index(i pulumi.IntInput) BuildPipelineStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BuildPipelineStage {
		return vs[0].([]*BuildPipelineStage)[vs[1].(int)]
	}).(BuildPipelineStageOutput)
}

type BuildPipelineStageMapOutput struct{ *pulumi.OutputState }

func (BuildPipelineStageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BuildPipelineStage)(nil)).Elem()
}

func (o BuildPipelineStageMapOutput) ToBuildPipelineStageMapOutput() BuildPipelineStageMapOutput {
	return o
}

func (o BuildPipelineStageMapOutput) ToBuildPipelineStageMapOutputWithContext(ctx context.Context) BuildPipelineStageMapOutput {
	return o
}

func (o BuildPipelineStageMapOutput) MapIndex(k pulumi.StringInput) BuildPipelineStageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BuildPipelineStage {
		return vs[0].(map[string]*BuildPipelineStage)[vs[1].(string)]
	}).(BuildPipelineStageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BuildPipelineStageInput)(nil)).Elem(), &BuildPipelineStage{})
	pulumi.RegisterInputType(reflect.TypeOf((*BuildPipelineStageArrayInput)(nil)).Elem(), BuildPipelineStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BuildPipelineStageMapInput)(nil)).Elem(), BuildPipelineStageMap{})
	pulumi.RegisterOutputType(BuildPipelineStageOutput{})
	pulumi.RegisterOutputType(BuildPipelineStageArrayOutput{})
	pulumi.RegisterOutputType(BuildPipelineStageMapOutput{})
}
