// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Build Run resource in Oracle Cloud Infrastructure Devops service.
//
// Starts a build pipeline run for a predefined build pipeline. Please ensure the completion of any work request for creation/updation of Build Pipeline before starting a Build Run.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DevOps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DevOps.NewBuildRun(ctx, "testBuildRun", &DevOps.BuildRunArgs{
//				BuildPipelineId: pulumi.Any(oci_devops_build_pipeline.Test_build_pipeline.Id),
//				BuildRunArguments: &devops.BuildRunBuildRunArgumentsArgs{
//					Items: devops.BuildRunBuildRunArgumentsItemArray{
//						&devops.BuildRunBuildRunArgumentsItemArgs{
//							Name:  pulumi.Any(_var.Build_run_build_run_arguments_items_name),
//							Value: pulumi.Any(_var.Build_run_build_run_arguments_items_value),
//						},
//					},
//				},
//				CommitInfo: &devops.BuildRunCommitInfoArgs{
//					CommitHash:       pulumi.Any(_var.Build_run_commit_info_commit_hash),
//					RepositoryBranch: pulumi.Any(_var.Build_run_commit_info_repository_branch),
//					RepositoryUrl:    pulumi.Any(_var.Build_run_commit_info_repository_url),
//				},
//				DefinedTags: pulumi.AnyMap{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				DisplayName: pulumi.Any(_var.Build_run_display_name),
//				FreeformTags: pulumi.AnyMap{
//					"bar-key": pulumi.Any("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// BuildRuns can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DevOps/buildRun:BuildRun test_build_run "id"
//
// ```
type BuildRun struct {
	pulumi.CustomResourceState

	// Outputs from the build.
	BuildOutputs BuildRunBuildOutputArrayOutput `pulumi:"buildOutputs"`
	// The OCID of the build pipeline.
	BuildPipelineId pulumi.StringOutput `pulumi:"buildPipelineId"`
	// Specifies list of arguments passed along with the build run.
	BuildRunArguments BuildRunBuildRunArgumentsOutput `pulumi:"buildRunArguments"`
	// The run progress details of a build run.
	BuildRunProgresses BuildRunBuildRunProgressArrayOutput `pulumi:"buildRunProgresses"`
	// The source from which the build run is triggered.
	BuildRunSources BuildRunBuildRunSourceArrayOutput `pulumi:"buildRunSources"`
	// Commit details that need to be used for the build run.
	CommitInfo BuildRunCommitInfoOutput `pulumi:"commitInfo"`
	// The OCID of the compartment where the build is running.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The OCID of the DevOps project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The current state of the build run.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewBuildRun registers a new resource with the given unique name, arguments, and options.
func NewBuildRun(ctx *pulumi.Context,
	name string, args *BuildRunArgs, opts ...pulumi.ResourceOption) (*BuildRun, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BuildPipelineId == nil {
		return nil, errors.New("invalid value for required argument 'BuildPipelineId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BuildRun
	err := ctx.RegisterResource("oci:DevOps/buildRun:BuildRun", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBuildRun gets an existing BuildRun resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBuildRun(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BuildRunState, opts ...pulumi.ResourceOption) (*BuildRun, error) {
	var resource BuildRun
	err := ctx.ReadResource("oci:DevOps/buildRun:BuildRun", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BuildRun resources.
type buildRunState struct {
	// Outputs from the build.
	BuildOutputs []BuildRunBuildOutput `pulumi:"buildOutputs"`
	// The OCID of the build pipeline.
	BuildPipelineId *string `pulumi:"buildPipelineId"`
	// Specifies list of arguments passed along with the build run.
	BuildRunArguments *BuildRunBuildRunArguments `pulumi:"buildRunArguments"`
	// The run progress details of a build run.
	BuildRunProgresses []BuildRunBuildRunProgress `pulumi:"buildRunProgresses"`
	// The source from which the build run is triggered.
	BuildRunSources []BuildRunBuildRunSource `pulumi:"buildRunSources"`
	// Commit details that need to be used for the build run.
	CommitInfo *BuildRunCommitInfo `pulumi:"commitInfo"`
	// The OCID of the compartment where the build is running.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The OCID of the DevOps project.
	ProjectId *string `pulumi:"projectId"`
	// The current state of the build run.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type BuildRunState struct {
	// Outputs from the build.
	BuildOutputs BuildRunBuildOutputArrayInput
	// The OCID of the build pipeline.
	BuildPipelineId pulumi.StringPtrInput
	// Specifies list of arguments passed along with the build run.
	BuildRunArguments BuildRunBuildRunArgumentsPtrInput
	// The run progress details of a build run.
	BuildRunProgresses BuildRunBuildRunProgressArrayInput
	// The source from which the build run is triggered.
	BuildRunSources BuildRunBuildRunSourceArrayInput
	// Commit details that need to be used for the build run.
	CommitInfo BuildRunCommitInfoPtrInput
	// The OCID of the compartment where the build is running.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// The OCID of the DevOps project.
	ProjectId pulumi.StringPtrInput
	// The current state of the build run.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
}

func (BuildRunState) ElementType() reflect.Type {
	return reflect.TypeOf((*buildRunState)(nil)).Elem()
}

type buildRunArgs struct {
	// The OCID of the build pipeline.
	BuildPipelineId string `pulumi:"buildPipelineId"`
	// Specifies list of arguments passed along with the build run.
	BuildRunArguments *BuildRunBuildRunArguments `pulumi:"buildRunArguments"`
	// Commit details that need to be used for the build run.
	CommitInfo *BuildRunCommitInfo `pulumi:"commitInfo"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
}

// The set of arguments for constructing a BuildRun resource.
type BuildRunArgs struct {
	// The OCID of the build pipeline.
	BuildPipelineId pulumi.StringInput
	// Specifies list of arguments passed along with the build run.
	BuildRunArguments BuildRunBuildRunArgumentsPtrInput
	// Commit details that need to be used for the build run.
	CommitInfo BuildRunCommitInfoPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	FreeformTags pulumi.MapInput
}

func (BuildRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*buildRunArgs)(nil)).Elem()
}

type BuildRunInput interface {
	pulumi.Input

	ToBuildRunOutput() BuildRunOutput
	ToBuildRunOutputWithContext(ctx context.Context) BuildRunOutput
}

func (*BuildRun) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildRun)(nil)).Elem()
}

func (i *BuildRun) ToBuildRunOutput() BuildRunOutput {
	return i.ToBuildRunOutputWithContext(context.Background())
}

func (i *BuildRun) ToBuildRunOutputWithContext(ctx context.Context) BuildRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunOutput)
}

// BuildRunArrayInput is an input type that accepts BuildRunArray and BuildRunArrayOutput values.
// You can construct a concrete instance of `BuildRunArrayInput` via:
//
//	BuildRunArray{ BuildRunArgs{...} }
type BuildRunArrayInput interface {
	pulumi.Input

	ToBuildRunArrayOutput() BuildRunArrayOutput
	ToBuildRunArrayOutputWithContext(context.Context) BuildRunArrayOutput
}

type BuildRunArray []BuildRunInput

func (BuildRunArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BuildRun)(nil)).Elem()
}

func (i BuildRunArray) ToBuildRunArrayOutput() BuildRunArrayOutput {
	return i.ToBuildRunArrayOutputWithContext(context.Background())
}

func (i BuildRunArray) ToBuildRunArrayOutputWithContext(ctx context.Context) BuildRunArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunArrayOutput)
}

// BuildRunMapInput is an input type that accepts BuildRunMap and BuildRunMapOutput values.
// You can construct a concrete instance of `BuildRunMapInput` via:
//
//	BuildRunMap{ "key": BuildRunArgs{...} }
type BuildRunMapInput interface {
	pulumi.Input

	ToBuildRunMapOutput() BuildRunMapOutput
	ToBuildRunMapOutputWithContext(context.Context) BuildRunMapOutput
}

type BuildRunMap map[string]BuildRunInput

func (BuildRunMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BuildRun)(nil)).Elem()
}

func (i BuildRunMap) ToBuildRunMapOutput() BuildRunMapOutput {
	return i.ToBuildRunMapOutputWithContext(context.Background())
}

func (i BuildRunMap) ToBuildRunMapOutputWithContext(ctx context.Context) BuildRunMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildRunMapOutput)
}

type BuildRunOutput struct{ *pulumi.OutputState }

func (BuildRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildRun)(nil)).Elem()
}

func (o BuildRunOutput) ToBuildRunOutput() BuildRunOutput {
	return o
}

func (o BuildRunOutput) ToBuildRunOutputWithContext(ctx context.Context) BuildRunOutput {
	return o
}

// Outputs from the build.
func (o BuildRunOutput) BuildOutputs() BuildRunBuildOutputArrayOutput {
	return o.ApplyT(func(v *BuildRun) BuildRunBuildOutputArrayOutput { return v.BuildOutputs }).(BuildRunBuildOutputArrayOutput)
}

// The OCID of the build pipeline.
func (o BuildRunOutput) BuildPipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v *BuildRun) pulumi.StringOutput { return v.BuildPipelineId }).(pulumi.StringOutput)
}

// Specifies list of arguments passed along with the build run.
func (o BuildRunOutput) BuildRunArguments() BuildRunBuildRunArgumentsOutput {
	return o.ApplyT(func(v *BuildRun) BuildRunBuildRunArgumentsOutput { return v.BuildRunArguments }).(BuildRunBuildRunArgumentsOutput)
}

// The run progress details of a build run.
func (o BuildRunOutput) BuildRunProgresses() BuildRunBuildRunProgressArrayOutput {
	return o.ApplyT(func(v *BuildRun) BuildRunBuildRunProgressArrayOutput { return v.BuildRunProgresses }).(BuildRunBuildRunProgressArrayOutput)
}

// The source from which the build run is triggered.
func (o BuildRunOutput) BuildRunSources() BuildRunBuildRunSourceArrayOutput {
	return o.ApplyT(func(v *BuildRun) BuildRunBuildRunSourceArrayOutput { return v.BuildRunSources }).(BuildRunBuildRunSourceArrayOutput)
}

// Commit details that need to be used for the build run.
func (o BuildRunOutput) CommitInfo() BuildRunCommitInfoOutput {
	return o.ApplyT(func(v *BuildRun) BuildRunCommitInfoOutput { return v.CommitInfo }).(BuildRunCommitInfoOutput)
}

// The OCID of the compartment where the build is running.
func (o BuildRunOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *BuildRun) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
func (o BuildRunOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *BuildRun) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
func (o BuildRunOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *BuildRun) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o BuildRunOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *BuildRun) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o BuildRunOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *BuildRun) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of the DevOps project.
func (o BuildRunOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *BuildRun) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The current state of the build run.
func (o BuildRunOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BuildRun) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o BuildRunOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *BuildRun) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o BuildRunOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *BuildRun) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o BuildRunOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *BuildRun) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type BuildRunArrayOutput struct{ *pulumi.OutputState }

func (BuildRunArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BuildRun)(nil)).Elem()
}

func (o BuildRunArrayOutput) ToBuildRunArrayOutput() BuildRunArrayOutput {
	return o
}

func (o BuildRunArrayOutput) ToBuildRunArrayOutputWithContext(ctx context.Context) BuildRunArrayOutput {
	return o
}

func (o BuildRunArrayOutput) Index(i pulumi.IntInput) BuildRunOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BuildRun {
		return vs[0].([]*BuildRun)[vs[1].(int)]
	}).(BuildRunOutput)
}

type BuildRunMapOutput struct{ *pulumi.OutputState }

func (BuildRunMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BuildRun)(nil)).Elem()
}

func (o BuildRunMapOutput) ToBuildRunMapOutput() BuildRunMapOutput {
	return o
}

func (o BuildRunMapOutput) ToBuildRunMapOutputWithContext(ctx context.Context) BuildRunMapOutput {
	return o
}

func (o BuildRunMapOutput) MapIndex(k pulumi.StringInput) BuildRunOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BuildRun {
		return vs[0].(map[string]*BuildRun)[vs[1].(string)]
	}).(BuildRunOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BuildRunInput)(nil)).Elem(), &BuildRun{})
	pulumi.RegisterInputType(reflect.TypeOf((*BuildRunArrayInput)(nil)).Elem(), BuildRunArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BuildRunMapInput)(nil)).Elem(), BuildRunMap{})
	pulumi.RegisterOutputType(BuildRunOutput{})
	pulumi.RegisterOutputType(BuildRunArrayOutput{})
	pulumi.RegisterOutputType(BuildRunMapOutput{})
}
