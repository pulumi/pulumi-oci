// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Deploy Artifact resource in Oracle Cloud Infrastructure Devops service.
//
// Creates a new deployment artifact.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DevOps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DevOps.NewDeployArtifact(ctx, "testDeployArtifact", &DevOps.DeployArtifactArgs{
//				ArgumentSubstitutionMode: pulumi.Any(_var.Deploy_artifact_argument_substitution_mode),
//				DeployArtifactSource: &devops.DeployArtifactDeployArtifactSourceArgs{
//					DeployArtifactSourceType: pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_deploy_artifact_source_type),
//					Base64encodedContent:     pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_base64encoded_content),
//					ChartUrl:                 pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_chart_url),
//					DeployArtifactPath:       pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_deploy_artifact_path),
//					DeployArtifactVersion:    pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_deploy_artifact_version),
//					HelmVerificationKeySource: &devops.DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs{
//						VerificationKeySourceType: pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_helm_verification_key_source_verification_key_source_type),
//						CurrentPublicKey:          pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_helm_verification_key_source_current_public_key),
//						PreviousPublicKey:         pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_helm_verification_key_source_previous_public_key),
//						VaultSecretId:             pulumi.Any(oci_vault_secret.Test_secret.Id),
//					},
//					ImageDigest:  pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_image_digest),
//					ImageUri:     pulumi.Any(_var.Deploy_artifact_deploy_artifact_source_image_uri),
//					RepositoryId: pulumi.Any(oci_devops_repository.Test_repository.Id),
//				},
//				DeployArtifactType: pulumi.Any(_var.Deploy_artifact_deploy_artifact_type),
//				ProjectId:          pulumi.Any(oci_devops_project.Test_project.Id),
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				Description: pulumi.Any(_var.Deploy_artifact_description),
//				DisplayName: pulumi.Any(_var.Deploy_artifact_display_name),
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DeployArtifacts can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:DevOps/deployArtifact:DeployArtifact test_deploy_artifact "id"
//
// ```
type DeployArtifact struct {
	pulumi.CustomResourceState

	// (Updatable) Mode for artifact parameter substitution. Options: `"NONE", "SUBSTITUTE_PLACEHOLDERS"` For Helm Deployments only "NONE" is supported.
	ArgumentSubstitutionMode pulumi.StringOutput `pulumi:"argumentSubstitutionMode"`
	// The OCID of a compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) Specifies source of an artifact.
	DeployArtifactSource DeployArtifactDeployArtifactSourceOutput `pulumi:"deployArtifactSource"`
	// (Updatable) Type of the deployment artifact.
	DeployArtifactType pulumi.StringOutput `pulumi:"deployArtifactType"`
	// (Updatable) Optional description about the deployment artifact.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Deployment artifact display name. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The OCID of a project.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Current state of the deployment artifact.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewDeployArtifact registers a new resource with the given unique name, arguments, and options.
func NewDeployArtifact(ctx *pulumi.Context,
	name string, args *DeployArtifactArgs, opts ...pulumi.ResourceOption) (*DeployArtifact, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ArgumentSubstitutionMode == nil {
		return nil, errors.New("invalid value for required argument 'ArgumentSubstitutionMode'")
	}
	if args.DeployArtifactSource == nil {
		return nil, errors.New("invalid value for required argument 'DeployArtifactSource'")
	}
	if args.DeployArtifactType == nil {
		return nil, errors.New("invalid value for required argument 'DeployArtifactType'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeployArtifact
	err := ctx.RegisterResource("oci:DevOps/deployArtifact:DeployArtifact", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployArtifact gets an existing DeployArtifact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployArtifact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeployArtifactState, opts ...pulumi.ResourceOption) (*DeployArtifact, error) {
	var resource DeployArtifact
	err := ctx.ReadResource("oci:DevOps/deployArtifact:DeployArtifact", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeployArtifact resources.
type deployArtifactState struct {
	// (Updatable) Mode for artifact parameter substitution. Options: `"NONE", "SUBSTITUTE_PLACEHOLDERS"` For Helm Deployments only "NONE" is supported.
	ArgumentSubstitutionMode *string `pulumi:"argumentSubstitutionMode"`
	// The OCID of a compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Specifies source of an artifact.
	DeployArtifactSource *DeployArtifactDeployArtifactSource `pulumi:"deployArtifactSource"`
	// (Updatable) Type of the deployment artifact.
	DeployArtifactType *string `pulumi:"deployArtifactType"`
	// (Updatable) Optional description about the deployment artifact.
	Description *string `pulumi:"description"`
	// (Updatable) Deployment artifact display name. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The OCID of a project.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProjectId *string `pulumi:"projectId"`
	// Current state of the deployment artifact.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type DeployArtifactState struct {
	// (Updatable) Mode for artifact parameter substitution. Options: `"NONE", "SUBSTITUTE_PLACEHOLDERS"` For Helm Deployments only "NONE" is supported.
	ArgumentSubstitutionMode pulumi.StringPtrInput
	// The OCID of a compartment.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Specifies source of an artifact.
	DeployArtifactSource DeployArtifactDeployArtifactSourcePtrInput
	// (Updatable) Type of the deployment artifact.
	DeployArtifactType pulumi.StringPtrInput
	// (Updatable) Optional description about the deployment artifact.
	Description pulumi.StringPtrInput
	// (Updatable) Deployment artifact display name. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// The OCID of a project.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProjectId pulumi.StringPtrInput
	// Current state of the deployment artifact.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
}

func (DeployArtifactState) ElementType() reflect.Type {
	return reflect.TypeOf((*deployArtifactState)(nil)).Elem()
}

type deployArtifactArgs struct {
	// (Updatable) Mode for artifact parameter substitution. Options: `"NONE", "SUBSTITUTE_PLACEHOLDERS"` For Helm Deployments only "NONE" is supported.
	ArgumentSubstitutionMode string `pulumi:"argumentSubstitutionMode"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Specifies source of an artifact.
	DeployArtifactSource DeployArtifactDeployArtifactSource `pulumi:"deployArtifactSource"`
	// (Updatable) Type of the deployment artifact.
	DeployArtifactType string `pulumi:"deployArtifactType"`
	// (Updatable) Optional description about the deployment artifact.
	Description *string `pulumi:"description"`
	// (Updatable) Deployment artifact display name. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of a project.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProjectId string `pulumi:"projectId"`
}

// The set of arguments for constructing a DeployArtifact resource.
type DeployArtifactArgs struct {
	// (Updatable) Mode for artifact parameter substitution. Options: `"NONE", "SUBSTITUTE_PLACEHOLDERS"` For Helm Deployments only "NONE" is supported.
	ArgumentSubstitutionMode pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Specifies source of an artifact.
	DeployArtifactSource DeployArtifactDeployArtifactSourceInput
	// (Updatable) Type of the deployment artifact.
	DeployArtifactType pulumi.StringInput
	// (Updatable) Optional description about the deployment artifact.
	Description pulumi.StringPtrInput
	// (Updatable) Deployment artifact display name. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The OCID of a project.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProjectId pulumi.StringInput
}

func (DeployArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deployArtifactArgs)(nil)).Elem()
}

type DeployArtifactInput interface {
	pulumi.Input

	ToDeployArtifactOutput() DeployArtifactOutput
	ToDeployArtifactOutputWithContext(ctx context.Context) DeployArtifactOutput
}

func (*DeployArtifact) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployArtifact)(nil)).Elem()
}

func (i *DeployArtifact) ToDeployArtifactOutput() DeployArtifactOutput {
	return i.ToDeployArtifactOutputWithContext(context.Background())
}

func (i *DeployArtifact) ToDeployArtifactOutputWithContext(ctx context.Context) DeployArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployArtifactOutput)
}

// DeployArtifactArrayInput is an input type that accepts DeployArtifactArray and DeployArtifactArrayOutput values.
// You can construct a concrete instance of `DeployArtifactArrayInput` via:
//
//	DeployArtifactArray{ DeployArtifactArgs{...} }
type DeployArtifactArrayInput interface {
	pulumi.Input

	ToDeployArtifactArrayOutput() DeployArtifactArrayOutput
	ToDeployArtifactArrayOutputWithContext(context.Context) DeployArtifactArrayOutput
}

type DeployArtifactArray []DeployArtifactInput

func (DeployArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeployArtifact)(nil)).Elem()
}

func (i DeployArtifactArray) ToDeployArtifactArrayOutput() DeployArtifactArrayOutput {
	return i.ToDeployArtifactArrayOutputWithContext(context.Background())
}

func (i DeployArtifactArray) ToDeployArtifactArrayOutputWithContext(ctx context.Context) DeployArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployArtifactArrayOutput)
}

// DeployArtifactMapInput is an input type that accepts DeployArtifactMap and DeployArtifactMapOutput values.
// You can construct a concrete instance of `DeployArtifactMapInput` via:
//
//	DeployArtifactMap{ "key": DeployArtifactArgs{...} }
type DeployArtifactMapInput interface {
	pulumi.Input

	ToDeployArtifactMapOutput() DeployArtifactMapOutput
	ToDeployArtifactMapOutputWithContext(context.Context) DeployArtifactMapOutput
}

type DeployArtifactMap map[string]DeployArtifactInput

func (DeployArtifactMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeployArtifact)(nil)).Elem()
}

func (i DeployArtifactMap) ToDeployArtifactMapOutput() DeployArtifactMapOutput {
	return i.ToDeployArtifactMapOutputWithContext(context.Background())
}

func (i DeployArtifactMap) ToDeployArtifactMapOutputWithContext(ctx context.Context) DeployArtifactMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployArtifactMapOutput)
}

type DeployArtifactOutput struct{ *pulumi.OutputState }

func (DeployArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployArtifact)(nil)).Elem()
}

func (o DeployArtifactOutput) ToDeployArtifactOutput() DeployArtifactOutput {
	return o
}

func (o DeployArtifactOutput) ToDeployArtifactOutputWithContext(ctx context.Context) DeployArtifactOutput {
	return o
}

// (Updatable) Mode for artifact parameter substitution. Options: `"NONE", "SUBSTITUTE_PLACEHOLDERS"` For Helm Deployments only "NONE" is supported.
func (o DeployArtifactOutput) ArgumentSubstitutionMode() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.StringOutput { return v.ArgumentSubstitutionMode }).(pulumi.StringOutput)
}

// The OCID of a compartment.
func (o DeployArtifactOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
func (o DeployArtifactOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) Specifies source of an artifact.
func (o DeployArtifactOutput) DeployArtifactSource() DeployArtifactDeployArtifactSourceOutput {
	return o.ApplyT(func(v *DeployArtifact) DeployArtifactDeployArtifactSourceOutput { return v.DeployArtifactSource }).(DeployArtifactDeployArtifactSourceOutput)
}

// (Updatable) Type of the deployment artifact.
func (o DeployArtifactOutput) DeployArtifactType() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.StringOutput { return v.DeployArtifactType }).(pulumi.StringOutput)
}

// (Updatable) Optional description about the deployment artifact.
func (o DeployArtifactOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Deployment artifact display name. Avoid entering confidential information.
func (o DeployArtifactOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
func (o DeployArtifactOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
func (o DeployArtifactOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of a project.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DeployArtifactOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// Current state of the deployment artifact.
func (o DeployArtifactOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o DeployArtifactOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o DeployArtifactOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o DeployArtifactOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployArtifact) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type DeployArtifactArrayOutput struct{ *pulumi.OutputState }

func (DeployArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeployArtifact)(nil)).Elem()
}

func (o DeployArtifactArrayOutput) ToDeployArtifactArrayOutput() DeployArtifactArrayOutput {
	return o
}

func (o DeployArtifactArrayOutput) ToDeployArtifactArrayOutputWithContext(ctx context.Context) DeployArtifactArrayOutput {
	return o
}

func (o DeployArtifactArrayOutput) Index(i pulumi.IntInput) DeployArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeployArtifact {
		return vs[0].([]*DeployArtifact)[vs[1].(int)]
	}).(DeployArtifactOutput)
}

type DeployArtifactMapOutput struct{ *pulumi.OutputState }

func (DeployArtifactMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeployArtifact)(nil)).Elem()
}

func (o DeployArtifactMapOutput) ToDeployArtifactMapOutput() DeployArtifactMapOutput {
	return o
}

func (o DeployArtifactMapOutput) ToDeployArtifactMapOutputWithContext(ctx context.Context) DeployArtifactMapOutput {
	return o
}

func (o DeployArtifactMapOutput) MapIndex(k pulumi.StringInput) DeployArtifactOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeployArtifact {
		return vs[0].(map[string]*DeployArtifact)[vs[1].(string)]
	}).(DeployArtifactOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeployArtifactInput)(nil)).Elem(), &DeployArtifact{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeployArtifactArrayInput)(nil)).Elem(), DeployArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeployArtifactMapInput)(nil)).Elem(), DeployArtifactMap{})
	pulumi.RegisterOutputType(DeployArtifactOutput{})
	pulumi.RegisterOutputType(DeployArtifactArrayOutput{})
	pulumi.RegisterOutputType(DeployArtifactMapOutput{})
}
