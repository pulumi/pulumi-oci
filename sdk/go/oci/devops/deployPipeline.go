// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Deploy Pipeline resource in Oracle Cloud Infrastructure Devops service.
//
// Creates a new deployment pipeline.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DevOps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DevOps.NewDeployPipeline(ctx, "test_deploy_pipeline", &DevOps.DeployPipelineArgs{
//				ProjectId: pulumi.Any(testProject.Id),
//				DefinedTags: pulumi.Map{
//					"foo-namespace.bar-key": pulumi.Any("value"),
//				},
//				DeployPipelineParameters: &devops.DeployPipelineDeployPipelineParametersArgs{
//					Items: devops.DeployPipelineDeployPipelineParametersItemArray{
//						&devops.DeployPipelineDeployPipelineParametersItemArgs{
//							Name:         pulumi.Any(deployPipelineDeployPipelineParametersItemsName),
//							DefaultValue: pulumi.Any(deployPipelineDeployPipelineParametersItemsDefaultValue),
//							Description:  pulumi.Any(deployPipelineDeployPipelineParametersItemsDescription),
//						},
//					},
//				},
//				Description: pulumi.Any(deployPipelineDescription),
//				DisplayName: pulumi.Any(deployPipelineDisplayName),
//				FreeformTags: pulumi.Map{
//					"bar-key": pulumi.Any("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DeployPipelines can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:DevOps/deployPipeline:DeployPipeline test_deploy_pipeline "id"
// ```
type DeployPipeline struct {
	pulumi.CustomResourceState

	// The OCID of the compartment where the pipeline is created.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// List of all artifacts used in the pipeline.
	DeployPipelineArtifacts DeployPipelineDeployPipelineArtifactArrayOutput `pulumi:"deployPipelineArtifacts"`
	// List of all environments used in the pipeline.
	DeployPipelineEnvironments DeployPipelineDeployPipelineEnvironmentArrayOutput `pulumi:"deployPipelineEnvironments"`
	// (Updatable) Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
	DeployPipelineParameters DeployPipelineDeployPipelineParametersOutput `pulumi:"deployPipelineParameters"`
	// (Updatable) Optional description about the deployment pipeline.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Deployment pipeline display name. Avoid entering confidential information.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The OCID of a project.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The current state of the deployment pipeline.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// Time the deployment pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Time the deployment pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewDeployPipeline registers a new resource with the given unique name, arguments, and options.
func NewDeployPipeline(ctx *pulumi.Context,
	name string, args *DeployPipelineArgs, opts ...pulumi.ResourceOption) (*DeployPipeline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeployPipeline
	err := ctx.RegisterResource("oci:DevOps/deployPipeline:DeployPipeline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployPipeline gets an existing DeployPipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployPipeline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeployPipelineState, opts ...pulumi.ResourceOption) (*DeployPipeline, error) {
	var resource DeployPipeline
	err := ctx.ReadResource("oci:DevOps/deployPipeline:DeployPipeline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeployPipeline resources.
type deployPipelineState struct {
	// The OCID of the compartment where the pipeline is created.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// List of all artifacts used in the pipeline.
	DeployPipelineArtifacts []DeployPipelineDeployPipelineArtifact `pulumi:"deployPipelineArtifacts"`
	// List of all environments used in the pipeline.
	DeployPipelineEnvironments []DeployPipelineDeployPipelineEnvironment `pulumi:"deployPipelineEnvironments"`
	// (Updatable) Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
	DeployPipelineParameters *DeployPipelineDeployPipelineParameters `pulumi:"deployPipelineParameters"`
	// (Updatable) Optional description about the deployment pipeline.
	Description *string `pulumi:"description"`
	// (Updatable) Deployment pipeline display name. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The OCID of a project.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProjectId *string `pulumi:"projectId"`
	// The current state of the deployment pipeline.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Time the deployment pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated *string `pulumi:"timeCreated"`
	// Time the deployment pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type DeployPipelineState struct {
	// The OCID of the compartment where the pipeline is created.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// List of all artifacts used in the pipeline.
	DeployPipelineArtifacts DeployPipelineDeployPipelineArtifactArrayInput
	// List of all environments used in the pipeline.
	DeployPipelineEnvironments DeployPipelineDeployPipelineEnvironmentArrayInput
	// (Updatable) Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
	DeployPipelineParameters DeployPipelineDeployPipelineParametersPtrInput
	// (Updatable) Optional description about the deployment pipeline.
	Description pulumi.StringPtrInput
	// (Updatable) Deployment pipeline display name. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// The OCID of a project.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProjectId pulumi.StringPtrInput
	// The current state of the deployment pipeline.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// Time the deployment pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated pulumi.StringPtrInput
	// Time the deployment pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated pulumi.StringPtrInput
}

func (DeployPipelineState) ElementType() reflect.Type {
	return reflect.TypeOf((*deployPipelineState)(nil)).Elem()
}

type deployPipelineArgs struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
	DeployPipelineParameters *DeployPipelineDeployPipelineParameters `pulumi:"deployPipelineParameters"`
	// (Updatable) Optional description about the deployment pipeline.
	Description *string `pulumi:"description"`
	// (Updatable) Deployment pipeline display name. Avoid entering confidential information.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of a project.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProjectId string `pulumi:"projectId"`
}

// The set of arguments for constructing a DeployPipeline resource.
type DeployPipelineArgs struct {
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput
	// (Updatable) Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
	DeployPipelineParameters DeployPipelineDeployPipelineParametersPtrInput
	// (Updatable) Optional description about the deployment pipeline.
	Description pulumi.StringPtrInput
	// (Updatable) Deployment pipeline display name. Avoid entering confidential information.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput
	// The OCID of a project.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ProjectId pulumi.StringInput
}

func (DeployPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deployPipelineArgs)(nil)).Elem()
}

type DeployPipelineInput interface {
	pulumi.Input

	ToDeployPipelineOutput() DeployPipelineOutput
	ToDeployPipelineOutputWithContext(ctx context.Context) DeployPipelineOutput
}

func (*DeployPipeline) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployPipeline)(nil)).Elem()
}

func (i *DeployPipeline) ToDeployPipelineOutput() DeployPipelineOutput {
	return i.ToDeployPipelineOutputWithContext(context.Background())
}

func (i *DeployPipeline) ToDeployPipelineOutputWithContext(ctx context.Context) DeployPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployPipelineOutput)
}

// DeployPipelineArrayInput is an input type that accepts DeployPipelineArray and DeployPipelineArrayOutput values.
// You can construct a concrete instance of `DeployPipelineArrayInput` via:
//
//	DeployPipelineArray{ DeployPipelineArgs{...} }
type DeployPipelineArrayInput interface {
	pulumi.Input

	ToDeployPipelineArrayOutput() DeployPipelineArrayOutput
	ToDeployPipelineArrayOutputWithContext(context.Context) DeployPipelineArrayOutput
}

type DeployPipelineArray []DeployPipelineInput

func (DeployPipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeployPipeline)(nil)).Elem()
}

func (i DeployPipelineArray) ToDeployPipelineArrayOutput() DeployPipelineArrayOutput {
	return i.ToDeployPipelineArrayOutputWithContext(context.Background())
}

func (i DeployPipelineArray) ToDeployPipelineArrayOutputWithContext(ctx context.Context) DeployPipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployPipelineArrayOutput)
}

// DeployPipelineMapInput is an input type that accepts DeployPipelineMap and DeployPipelineMapOutput values.
// You can construct a concrete instance of `DeployPipelineMapInput` via:
//
//	DeployPipelineMap{ "key": DeployPipelineArgs{...} }
type DeployPipelineMapInput interface {
	pulumi.Input

	ToDeployPipelineMapOutput() DeployPipelineMapOutput
	ToDeployPipelineMapOutputWithContext(context.Context) DeployPipelineMapOutput
}

type DeployPipelineMap map[string]DeployPipelineInput

func (DeployPipelineMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeployPipeline)(nil)).Elem()
}

func (i DeployPipelineMap) ToDeployPipelineMapOutput() DeployPipelineMapOutput {
	return i.ToDeployPipelineMapOutputWithContext(context.Background())
}

func (i DeployPipelineMap) ToDeployPipelineMapOutputWithContext(ctx context.Context) DeployPipelineMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployPipelineMapOutput)
}

type DeployPipelineOutput struct{ *pulumi.OutputState }

func (DeployPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployPipeline)(nil)).Elem()
}

func (o DeployPipelineOutput) ToDeployPipelineOutput() DeployPipelineOutput {
	return o
}

func (o DeployPipelineOutput) ToDeployPipelineOutputWithContext(ctx context.Context) DeployPipelineOutput {
	return o
}

// The OCID of the compartment where the pipeline is created.
func (o DeployPipelineOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployPipeline) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
func (o DeployPipelineOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DeployPipeline) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// List of all artifacts used in the pipeline.
func (o DeployPipelineOutput) DeployPipelineArtifacts() DeployPipelineDeployPipelineArtifactArrayOutput {
	return o.ApplyT(func(v *DeployPipeline) DeployPipelineDeployPipelineArtifactArrayOutput {
		return v.DeployPipelineArtifacts
	}).(DeployPipelineDeployPipelineArtifactArrayOutput)
}

// List of all environments used in the pipeline.
func (o DeployPipelineOutput) DeployPipelineEnvironments() DeployPipelineDeployPipelineEnvironmentArrayOutput {
	return o.ApplyT(func(v *DeployPipeline) DeployPipelineDeployPipelineEnvironmentArrayOutput {
		return v.DeployPipelineEnvironments
	}).(DeployPipelineDeployPipelineEnvironmentArrayOutput)
}

// (Updatable) Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
func (o DeployPipelineOutput) DeployPipelineParameters() DeployPipelineDeployPipelineParametersOutput {
	return o.ApplyT(func(v *DeployPipeline) DeployPipelineDeployPipelineParametersOutput {
		return v.DeployPipelineParameters
	}).(DeployPipelineDeployPipelineParametersOutput)
}

// (Updatable) Optional description about the deployment pipeline.
func (o DeployPipelineOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployPipeline) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Deployment pipeline display name. Avoid entering confidential information.
func (o DeployPipelineOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployPipeline) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
func (o DeployPipelineOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DeployPipeline) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o DeployPipelineOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployPipeline) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of a project.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o DeployPipelineOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployPipeline) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The current state of the deployment pipeline.
func (o DeployPipelineOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployPipeline) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o DeployPipelineOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *DeployPipeline) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// Time the deployment pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o DeployPipelineOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployPipeline) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time the deployment pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o DeployPipelineOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployPipeline) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type DeployPipelineArrayOutput struct{ *pulumi.OutputState }

func (DeployPipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeployPipeline)(nil)).Elem()
}

func (o DeployPipelineArrayOutput) ToDeployPipelineArrayOutput() DeployPipelineArrayOutput {
	return o
}

func (o DeployPipelineArrayOutput) ToDeployPipelineArrayOutputWithContext(ctx context.Context) DeployPipelineArrayOutput {
	return o
}

func (o DeployPipelineArrayOutput) Index(i pulumi.IntInput) DeployPipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeployPipeline {
		return vs[0].([]*DeployPipeline)[vs[1].(int)]
	}).(DeployPipelineOutput)
}

type DeployPipelineMapOutput struct{ *pulumi.OutputState }

func (DeployPipelineMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeployPipeline)(nil)).Elem()
}

func (o DeployPipelineMapOutput) ToDeployPipelineMapOutput() DeployPipelineMapOutput {
	return o
}

func (o DeployPipelineMapOutput) ToDeployPipelineMapOutputWithContext(ctx context.Context) DeployPipelineMapOutput {
	return o
}

func (o DeployPipelineMapOutput) MapIndex(k pulumi.StringInput) DeployPipelineOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeployPipeline {
		return vs[0].(map[string]*DeployPipeline)[vs[1].(string)]
	}).(DeployPipelineOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeployPipelineInput)(nil)).Elem(), &DeployPipeline{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeployPipelineArrayInput)(nil)).Elem(), DeployPipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeployPipelineMapInput)(nil)).Elem(), DeployPipelineMap{})
	pulumi.RegisterOutputType(DeployPipelineOutput{})
	pulumi.RegisterOutputType(DeployPipelineArrayOutput{})
	pulumi.RegisterOutputType(DeployPipelineMapOutput{})
}
