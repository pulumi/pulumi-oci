// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Build Pipeline resource in Oracle Cloud Infrastructure Devops service.
//
// Retrieves a build pipeline by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/devops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := devops.GetBuildPipeline(ctx, &devops.GetBuildPipelineArgs{
//				BuildPipelineId: testBuildPipelineOciDevopsBuildPipeline.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBuildPipeline(ctx *pulumi.Context, args *LookupBuildPipelineArgs, opts ...pulumi.InvokeOption) (*LookupBuildPipelineResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBuildPipelineResult
	err := ctx.Invoke("oci:DevOps/getBuildPipeline:getBuildPipeline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBuildPipeline.
type LookupBuildPipelineArgs struct {
	// Unique build pipeline identifier.
	BuildPipelineId string `pulumi:"buildPipelineId"`
}

// A collection of values returned by getBuildPipeline.
type LookupBuildPipelineResult struct {
	BuildPipelineId string `pulumi:"buildPipelineId"`
	// Specifies list of parameters present in a build pipeline. An UPDATE operation replaces the existing parameters list entirely.
	BuildPipelineParameters []GetBuildPipelineBuildPipelineParameter `pulumi:"buildPipelineParameters"`
	// The OCID of the compartment where the build pipeline is created.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Optional description about the build pipeline.
	Description string `pulumi:"description"`
	// Build pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The OCID of the DevOps project.
	ProjectId string `pulumi:"projectId"`
	// The current state of the build pipeline.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time the build pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The time the build pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupBuildPipelineOutput(ctx *pulumi.Context, args LookupBuildPipelineOutputArgs, opts ...pulumi.InvokeOption) LookupBuildPipelineResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBuildPipelineResultOutput, error) {
			args := v.(LookupBuildPipelineArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DevOps/getBuildPipeline:getBuildPipeline", args, LookupBuildPipelineResultOutput{}, options).(LookupBuildPipelineResultOutput), nil
		}).(LookupBuildPipelineResultOutput)
}

// A collection of arguments for invoking getBuildPipeline.
type LookupBuildPipelineOutputArgs struct {
	// Unique build pipeline identifier.
	BuildPipelineId pulumi.StringInput `pulumi:"buildPipelineId"`
}

func (LookupBuildPipelineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBuildPipelineArgs)(nil)).Elem()
}

// A collection of values returned by getBuildPipeline.
type LookupBuildPipelineResultOutput struct{ *pulumi.OutputState }

func (LookupBuildPipelineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBuildPipelineResult)(nil)).Elem()
}

func (o LookupBuildPipelineResultOutput) ToLookupBuildPipelineResultOutput() LookupBuildPipelineResultOutput {
	return o
}

func (o LookupBuildPipelineResultOutput) ToLookupBuildPipelineResultOutputWithContext(ctx context.Context) LookupBuildPipelineResultOutput {
	return o
}

func (o LookupBuildPipelineResultOutput) BuildPipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) string { return v.BuildPipelineId }).(pulumi.StringOutput)
}

// Specifies list of parameters present in a build pipeline. An UPDATE operation replaces the existing parameters list entirely.
func (o LookupBuildPipelineResultOutput) BuildPipelineParameters() GetBuildPipelineBuildPipelineParameterArrayOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) []GetBuildPipelineBuildPipelineParameter {
		return v.BuildPipelineParameters
	}).(GetBuildPipelineBuildPipelineParameterArrayOutput)
}

// The OCID of the compartment where the build pipeline is created.
func (o LookupBuildPipelineResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupBuildPipelineResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Optional description about the build pipeline.
func (o LookupBuildPipelineResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) string { return v.Description }).(pulumi.StringOutput)
}

// Build pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
func (o LookupBuildPipelineResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
func (o LookupBuildPipelineResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupBuildPipelineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupBuildPipelineResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of the DevOps project.
func (o LookupBuildPipelineResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The current state of the build pipeline.
func (o LookupBuildPipelineResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupBuildPipelineResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time the build pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o LookupBuildPipelineResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the build pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o LookupBuildPipelineResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBuildPipelineResultOutput{})
}
