// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Build Pipeline Stage resource in Oracle Cloud Infrastructure Devops service.
//
// Retrieves a stage based on the stage ID provided in the request.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DevOps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DevOps.GetBuildPipelineStage(ctx, &devops.GetBuildPipelineStageArgs{
//				BuildPipelineStageId: oci_devops_build_pipeline_stage.Test_build_pipeline_stage.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupBuildPipelineStage(ctx *pulumi.Context, args *LookupBuildPipelineStageArgs, opts ...pulumi.InvokeOption) (*LookupBuildPipelineStageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBuildPipelineStageResult
	err := ctx.Invoke("oci:DevOps/getBuildPipelineStage:getBuildPipelineStage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBuildPipelineStage.
type LookupBuildPipelineStageArgs struct {
	// Unique stage identifier.
	BuildPipelineStageId string `pulumi:"buildPipelineStageId"`
}

// A collection of values returned by getBuildPipelineStage.
type LookupBuildPipelineStageResult struct {
	// The OCID of the build pipeline.
	BuildPipelineId      string `pulumi:"buildPipelineId"`
	BuildPipelineStageId string `pulumi:"buildPipelineStageId"`
	// The collection containing the predecessors of a stage.
	BuildPipelineStagePredecessorCollections []GetBuildPipelineStageBuildPipelineStagePredecessorCollection `pulumi:"buildPipelineStagePredecessorCollections"`
	// Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
	BuildPipelineStageType string `pulumi:"buildPipelineStageType"`
	// The information about build runner.
	BuildRunnerShapeConfigs []GetBuildPipelineStageBuildRunnerShapeConfig `pulumi:"buildRunnerShapeConfigs"`
	// Collection of build sources.
	BuildSourceCollections []GetBuildPipelineStageBuildSourceCollection `pulumi:"buildSourceCollections"`
	// The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
	BuildSpecFile string `pulumi:"buildSpecFile"`
	// The OCID of the compartment where the pipeline is created.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Specifies an array of artifacts that need to be pushed to the artifactory stores.
	DeliverArtifactCollections []GetBuildPipelineStageDeliverArtifactCollection `pulumi:"deliverArtifactCollections"`
	// A target deployment pipeline OCID that will run in this stage.
	DeployPipelineId string `pulumi:"deployPipelineId"`
	// Optional description about the build stage.
	Description string `pulumi:"description"`
	// Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// Image name for the build environment.
	Image string `pulumi:"image"`
	// A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
	IsPassAllParametersEnabled bool `pulumi:"isPassAllParametersEnabled"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Name of the build source where the build_spec.yml file is located. If not specified, then the first entry in the build source collection is chosen as primary build source.
	PrimaryBuildSource string `pulumi:"primaryBuildSource"`
	// Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer's private network.
	PrivateAccessConfigs []GetBuildPipelineStagePrivateAccessConfig `pulumi:"privateAccessConfigs"`
	// The OCID of the DevOps project.
	ProjectId string `pulumi:"projectId"`
	// Timeout for the build stage execution. Specify value in seconds.
	StageExecutionTimeoutInSeconds int `pulumi:"stageExecutionTimeoutInSeconds"`
	// The current state of the stage.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// The time the stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
	// Specifies wait criteria for the Wait stage.
	WaitCriterias []GetBuildPipelineStageWaitCriteria `pulumi:"waitCriterias"`
}

func LookupBuildPipelineStageOutput(ctx *pulumi.Context, args LookupBuildPipelineStageOutputArgs, opts ...pulumi.InvokeOption) LookupBuildPipelineStageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBuildPipelineStageResult, error) {
			args := v.(LookupBuildPipelineStageArgs)
			r, err := LookupBuildPipelineStage(ctx, &args, opts...)
			var s LookupBuildPipelineStageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBuildPipelineStageResultOutput)
}

// A collection of arguments for invoking getBuildPipelineStage.
type LookupBuildPipelineStageOutputArgs struct {
	// Unique stage identifier.
	BuildPipelineStageId pulumi.StringInput `pulumi:"buildPipelineStageId"`
}

func (LookupBuildPipelineStageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBuildPipelineStageArgs)(nil)).Elem()
}

// A collection of values returned by getBuildPipelineStage.
type LookupBuildPipelineStageResultOutput struct{ *pulumi.OutputState }

func (LookupBuildPipelineStageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBuildPipelineStageResult)(nil)).Elem()
}

func (o LookupBuildPipelineStageResultOutput) ToLookupBuildPipelineStageResultOutput() LookupBuildPipelineStageResultOutput {
	return o
}

func (o LookupBuildPipelineStageResultOutput) ToLookupBuildPipelineStageResultOutputWithContext(ctx context.Context) LookupBuildPipelineStageResultOutput {
	return o
}

// The OCID of the build pipeline.
func (o LookupBuildPipelineStageResultOutput) BuildPipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.BuildPipelineId }).(pulumi.StringOutput)
}

func (o LookupBuildPipelineStageResultOutput) BuildPipelineStageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.BuildPipelineStageId }).(pulumi.StringOutput)
}

// The collection containing the predecessors of a stage.
func (o LookupBuildPipelineStageResultOutput) BuildPipelineStagePredecessorCollections() GetBuildPipelineStageBuildPipelineStagePredecessorCollectionArrayOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) []GetBuildPipelineStageBuildPipelineStagePredecessorCollection {
		return v.BuildPipelineStagePredecessorCollections
	}).(GetBuildPipelineStageBuildPipelineStagePredecessorCollectionArrayOutput)
}

// Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
func (o LookupBuildPipelineStageResultOutput) BuildPipelineStageType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.BuildPipelineStageType }).(pulumi.StringOutput)
}

// The information about build runner.
func (o LookupBuildPipelineStageResultOutput) BuildRunnerShapeConfigs() GetBuildPipelineStageBuildRunnerShapeConfigArrayOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) []GetBuildPipelineStageBuildRunnerShapeConfig {
		return v.BuildRunnerShapeConfigs
	}).(GetBuildPipelineStageBuildRunnerShapeConfigArrayOutput)
}

// Collection of build sources.
func (o LookupBuildPipelineStageResultOutput) BuildSourceCollections() GetBuildPipelineStageBuildSourceCollectionArrayOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) []GetBuildPipelineStageBuildSourceCollection {
		return v.BuildSourceCollections
	}).(GetBuildPipelineStageBuildSourceCollectionArrayOutput)
}

// The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
func (o LookupBuildPipelineStageResultOutput) BuildSpecFile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.BuildSpecFile }).(pulumi.StringOutput)
}

// The OCID of the compartment where the pipeline is created.
func (o LookupBuildPipelineStageResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupBuildPipelineStageResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Specifies an array of artifacts that need to be pushed to the artifactory stores.
func (o LookupBuildPipelineStageResultOutput) DeliverArtifactCollections() GetBuildPipelineStageDeliverArtifactCollectionArrayOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) []GetBuildPipelineStageDeliverArtifactCollection {
		return v.DeliverArtifactCollections
	}).(GetBuildPipelineStageDeliverArtifactCollectionArrayOutput)
}

// A target deployment pipeline OCID that will run in this stage.
func (o LookupBuildPipelineStageResultOutput) DeployPipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.DeployPipelineId }).(pulumi.StringOutput)
}

// Optional description about the build stage.
func (o LookupBuildPipelineStageResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.Description }).(pulumi.StringOutput)
}

// Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
func (o LookupBuildPipelineStageResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
func (o LookupBuildPipelineStageResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupBuildPipelineStageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.Id }).(pulumi.StringOutput)
}

// Image name for the build environment.
func (o LookupBuildPipelineStageResultOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.Image }).(pulumi.StringOutput)
}

// A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
func (o LookupBuildPipelineStageResultOutput) IsPassAllParametersEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) bool { return v.IsPassAllParametersEnabled }).(pulumi.BoolOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupBuildPipelineStageResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Name of the build source where the build_spec.yml file is located. If not specified, then the first entry in the build source collection is chosen as primary build source.
func (o LookupBuildPipelineStageResultOutput) PrimaryBuildSource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.PrimaryBuildSource }).(pulumi.StringOutput)
}

// Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer's private network.
func (o LookupBuildPipelineStageResultOutput) PrivateAccessConfigs() GetBuildPipelineStagePrivateAccessConfigArrayOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) []GetBuildPipelineStagePrivateAccessConfig {
		return v.PrivateAccessConfigs
	}).(GetBuildPipelineStagePrivateAccessConfigArrayOutput)
}

// The OCID of the DevOps project.
func (o LookupBuildPipelineStageResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Timeout for the build stage execution. Specify value in seconds.
func (o LookupBuildPipelineStageResultOutput) StageExecutionTimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) int { return v.StageExecutionTimeoutInSeconds }).(pulumi.IntOutput)
}

// The current state of the stage.
func (o LookupBuildPipelineStageResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupBuildPipelineStageResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o LookupBuildPipelineStageResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o LookupBuildPipelineStageResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Specifies wait criteria for the Wait stage.
func (o LookupBuildPipelineStageResultOutput) WaitCriterias() GetBuildPipelineStageWaitCriteriaArrayOutput {
	return o.ApplyT(func(v LookupBuildPipelineStageResult) []GetBuildPipelineStageWaitCriteria { return v.WaitCriterias }).(GetBuildPipelineStageWaitCriteriaArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBuildPipelineStageResultOutput{})
}
