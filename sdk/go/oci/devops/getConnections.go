// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Connections in Oracle Cloud Infrastructure Devops service.
//
// Returns a list of connections.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/DevOps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DevOps.GetConnections(ctx, &devops.GetConnectionsArgs{
//				CompartmentId:  pulumi.StringRef(compartmentId),
//				ConnectionType: pulumi.StringRef(connectionConnectionType),
//				DisplayName:    pulumi.StringRef(connectionDisplayName),
//				Id:             pulumi.StringRef(connectionId),
//				ProjectId:      pulumi.StringRef(testProject.Id),
//				State:          pulumi.StringRef(connectionState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetConnections(ctx *pulumi.Context, args *GetConnectionsArgs, opts ...pulumi.InvokeOption) (*GetConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConnectionsResult
	err := ctx.Invoke("oci:DevOps/getConnections:getConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnections.
type GetConnectionsArgs struct {
	// The OCID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the given connection type.
	ConnectionType *string `pulumi:"connectionType"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetConnectionsFilter `pulumi:"filters"`
	// Unique identifier or OCID for listing a single resource by ID.
	Id *string `pulumi:"id"`
	// unique project identifier
	ProjectId *string `pulumi:"projectId"`
	// A filter to return only connections that matches the given lifecycle state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getConnections.
type GetConnectionsResult struct {
	// The OCID of the compartment containing the connection.
	CompartmentId *string `pulumi:"compartmentId"`
	// The list of connection_collection.
	ConnectionCollections []GetConnectionsConnectionCollection `pulumi:"connectionCollections"`
	// The type of connection.
	ConnectionType *string `pulumi:"connectionType"`
	// Connection display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName *string                `pulumi:"displayName"`
	Filters     []GetConnectionsFilter `pulumi:"filters"`
	// Unique identifier that is immutable on creation.
	Id *string `pulumi:"id"`
	// The OCID of the DevOps project.
	ProjectId *string `pulumi:"projectId"`
	// The current state of the connection.
	State *string `pulumi:"state"`
}

func GetConnectionsOutput(ctx *pulumi.Context, args GetConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetConnectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConnectionsResultOutput, error) {
			args := v.(GetConnectionsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetConnectionsResult
			secret, err := ctx.InvokePackageRaw("oci:DevOps/getConnections:getConnections", args, &rv, "", opts...)
			if err != nil {
				return GetConnectionsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetConnectionsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetConnectionsResultOutput), nil
			}
			return output, nil
		}).(GetConnectionsResultOutput)
}

// A collection of arguments for invoking getConnections.
type GetConnectionsOutputArgs struct {
	// The OCID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the given connection type.
	ConnectionType pulumi.StringPtrInput `pulumi:"connectionType"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput          `pulumi:"displayName"`
	Filters     GetConnectionsFilterArrayInput `pulumi:"filters"`
	// Unique identifier or OCID for listing a single resource by ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// unique project identifier
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// A filter to return only connections that matches the given lifecycle state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getConnections.
type GetConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsResult)(nil)).Elem()
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutput() GetConnectionsResultOutput {
	return o
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutputWithContext(ctx context.Context) GetConnectionsResultOutput {
	return o
}

// The OCID of the compartment containing the connection.
func (o GetConnectionsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The list of connection_collection.
func (o GetConnectionsResultOutput) ConnectionCollections() GetConnectionsConnectionCollectionArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []GetConnectionsConnectionCollection { return v.ConnectionCollections }).(GetConnectionsConnectionCollectionArrayOutput)
}

// The type of connection.
func (o GetConnectionsResultOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.ConnectionType }).(pulumi.StringPtrOutput)
}

// Connection display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
func (o GetConnectionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetConnectionsResultOutput) Filters() GetConnectionsFilterArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []GetConnectionsFilter { return v.Filters }).(GetConnectionsFilterArrayOutput)
}

// Unique identifier that is immutable on creation.
func (o GetConnectionsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The OCID of the DevOps project.
func (o GetConnectionsResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The current state of the connection.
func (o GetConnectionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectionsResultOutput{})
}
