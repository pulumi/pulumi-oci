// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Deploy Artifact resource in Oracle Cloud Infrastructure Devops service.
//
// Retrieves a deployment artifact by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DevOps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DevOps.GetDeployArtifact(ctx, &devops.GetDeployArtifactArgs{
//				DeployArtifactId: testDeployArtifactOciDevopsDeployArtifact.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDeployArtifact(ctx *pulumi.Context, args *LookupDeployArtifactArgs, opts ...pulumi.InvokeOption) (*LookupDeployArtifactResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDeployArtifactResult
	err := ctx.Invoke("oci:DevOps/getDeployArtifact:getDeployArtifact", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDeployArtifact.
type LookupDeployArtifactArgs struct {
	// Unique artifact identifier.
	DeployArtifactId string `pulumi:"deployArtifactId"`
}

// A collection of values returned by getDeployArtifact.
type LookupDeployArtifactResult struct {
	// Mode for artifact parameter substitution. Options: `"NONE", "SUBSTITUTE_PLACEHOLDERS"` For Helm Deployments only "NONE" is supported.
	ArgumentSubstitutionMode string `pulumi:"argumentSubstitutionMode"`
	// The OCID of a compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags      map[string]interface{} `pulumi:"definedTags"`
	DeployArtifactId string                 `pulumi:"deployArtifactId"`
	// Specifies source of an artifact.
	DeployArtifactSources []GetDeployArtifactDeployArtifactSource `pulumi:"deployArtifactSources"`
	// Type of the deployment artifact.
	DeployArtifactType string `pulumi:"deployArtifactType"`
	// Optional description about the artifact to be deployed.
	Description string `pulumi:"description"`
	// Deployment artifact identifier, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The OCID of a project.
	ProjectId string `pulumi:"projectId"`
	// Current state of the deployment artifact.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupDeployArtifactOutput(ctx *pulumi.Context, args LookupDeployArtifactOutputArgs, opts ...pulumi.InvokeOption) LookupDeployArtifactResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeployArtifactResult, error) {
			args := v.(LookupDeployArtifactArgs)
			r, err := LookupDeployArtifact(ctx, &args, opts...)
			var s LookupDeployArtifactResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDeployArtifactResultOutput)
}

// A collection of arguments for invoking getDeployArtifact.
type LookupDeployArtifactOutputArgs struct {
	// Unique artifact identifier.
	DeployArtifactId pulumi.StringInput `pulumi:"deployArtifactId"`
}

func (LookupDeployArtifactOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeployArtifactArgs)(nil)).Elem()
}

// A collection of values returned by getDeployArtifact.
type LookupDeployArtifactResultOutput struct{ *pulumi.OutputState }

func (LookupDeployArtifactResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeployArtifactResult)(nil)).Elem()
}

func (o LookupDeployArtifactResultOutput) ToLookupDeployArtifactResultOutput() LookupDeployArtifactResultOutput {
	return o
}

func (o LookupDeployArtifactResultOutput) ToLookupDeployArtifactResultOutputWithContext(ctx context.Context) LookupDeployArtifactResultOutput {
	return o
}

// Mode for artifact parameter substitution. Options: `"NONE", "SUBSTITUTE_PLACEHOLDERS"` For Helm Deployments only "NONE" is supported.
func (o LookupDeployArtifactResultOutput) ArgumentSubstitutionMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.ArgumentSubstitutionMode }).(pulumi.StringOutput)
}

// The OCID of a compartment.
func (o LookupDeployArtifactResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupDeployArtifactResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

func (o LookupDeployArtifactResultOutput) DeployArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.DeployArtifactId }).(pulumi.StringOutput)
}

// Specifies source of an artifact.
func (o LookupDeployArtifactResultOutput) DeployArtifactSources() GetDeployArtifactDeployArtifactSourceArrayOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) []GetDeployArtifactDeployArtifactSource {
		return v.DeployArtifactSources
	}).(GetDeployArtifactDeployArtifactSourceArrayOutput)
}

// Type of the deployment artifact.
func (o LookupDeployArtifactResultOutput) DeployArtifactType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.DeployArtifactType }).(pulumi.StringOutput)
}

// Optional description about the artifact to be deployed.
func (o LookupDeployArtifactResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.Description }).(pulumi.StringOutput)
}

// Deployment artifact identifier, which can be renamed and is not necessarily unique. Avoid entering confidential information.
func (o LookupDeployArtifactResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
func (o LookupDeployArtifactResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupDeployArtifactResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.Id }).(pulumi.StringOutput)
}

// A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupDeployArtifactResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of a project.
func (o LookupDeployArtifactResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Current state of the deployment artifact.
func (o LookupDeployArtifactResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupDeployArtifactResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o LookupDeployArtifactResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o LookupDeployArtifactResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployArtifactResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeployArtifactResultOutput{})
}
