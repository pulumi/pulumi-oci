// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Deploy Artifacts in Oracle Cloud Infrastructure Devops service.
//
// Returns a list of deployment artifacts.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/devops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := devops.GetDeployArtifacts(ctx, &devops.GetDeployArtifactsArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(deployArtifactDisplayName),
//				Id:            pulumi.StringRef(deployArtifactId),
//				ProjectId:     pulumi.StringRef(testProject.Id),
//				State:         pulumi.StringRef(deployArtifactState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDeployArtifacts(ctx *pulumi.Context, args *GetDeployArtifactsArgs, opts ...pulumi.InvokeOption) (*GetDeployArtifactsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDeployArtifactsResult
	err := ctx.Invoke("oci:DevOps/getDeployArtifacts:getDeployArtifacts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDeployArtifacts.
type GetDeployArtifactsArgs struct {
	// The OCID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetDeployArtifactsFilter `pulumi:"filters"`
	// Unique identifier or OCID for listing a single resource by ID.
	Id *string `pulumi:"id"`
	// unique project identifier
	ProjectId *string `pulumi:"projectId"`
	// A filter to return only DeployArtifacts that matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getDeployArtifacts.
type GetDeployArtifactsResult struct {
	// The OCID of a compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The list of deploy_artifact_collection.
	DeployArtifactCollections []GetDeployArtifactsDeployArtifactCollection `pulumi:"deployArtifactCollections"`
	// Deployment artifact identifier, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetDeployArtifactsFilter `pulumi:"filters"`
	// Unique identifier that is immutable on creation.
	Id *string `pulumi:"id"`
	// The OCID of a project.
	ProjectId *string `pulumi:"projectId"`
	// Current state of the deployment artifact.
	State *string `pulumi:"state"`
}

func GetDeployArtifactsOutput(ctx *pulumi.Context, args GetDeployArtifactsOutputArgs, opts ...pulumi.InvokeOption) GetDeployArtifactsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDeployArtifactsResultOutput, error) {
			args := v.(GetDeployArtifactsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DevOps/getDeployArtifacts:getDeployArtifacts", args, GetDeployArtifactsResultOutput{}, options).(GetDeployArtifactsResultOutput), nil
		}).(GetDeployArtifactsResultOutput)
}

// A collection of arguments for invoking getDeployArtifacts.
type GetDeployArtifactsOutputArgs struct {
	// The OCID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput              `pulumi:"displayName"`
	Filters     GetDeployArtifactsFilterArrayInput `pulumi:"filters"`
	// Unique identifier or OCID for listing a single resource by ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// unique project identifier
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// A filter to return only DeployArtifacts that matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDeployArtifactsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeployArtifactsArgs)(nil)).Elem()
}

// A collection of values returned by getDeployArtifacts.
type GetDeployArtifactsResultOutput struct{ *pulumi.OutputState }

func (GetDeployArtifactsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeployArtifactsResult)(nil)).Elem()
}

func (o GetDeployArtifactsResultOutput) ToGetDeployArtifactsResultOutput() GetDeployArtifactsResultOutput {
	return o
}

func (o GetDeployArtifactsResultOutput) ToGetDeployArtifactsResultOutputWithContext(ctx context.Context) GetDeployArtifactsResultOutput {
	return o
}

// The OCID of a compartment.
func (o GetDeployArtifactsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeployArtifactsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The list of deploy_artifact_collection.
func (o GetDeployArtifactsResultOutput) DeployArtifactCollections() GetDeployArtifactsDeployArtifactCollectionArrayOutput {
	return o.ApplyT(func(v GetDeployArtifactsResult) []GetDeployArtifactsDeployArtifactCollection {
		return v.DeployArtifactCollections
	}).(GetDeployArtifactsDeployArtifactCollectionArrayOutput)
}

// Deployment artifact identifier, which can be renamed and is not necessarily unique. Avoid entering confidential information.
func (o GetDeployArtifactsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeployArtifactsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetDeployArtifactsResultOutput) Filters() GetDeployArtifactsFilterArrayOutput {
	return o.ApplyT(func(v GetDeployArtifactsResult) []GetDeployArtifactsFilter { return v.Filters }).(GetDeployArtifactsFilterArrayOutput)
}

// Unique identifier that is immutable on creation.
func (o GetDeployArtifactsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeployArtifactsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The OCID of a project.
func (o GetDeployArtifactsResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeployArtifactsResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Current state of the deployment artifact.
func (o GetDeployArtifactsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeployArtifactsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDeployArtifactsResultOutput{})
}
