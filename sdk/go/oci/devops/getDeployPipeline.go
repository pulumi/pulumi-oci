// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Deploy Pipeline resource in Oracle Cloud Infrastructure Devops service.
//
// Retrieves a deployment pipeline by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/devops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := devops.GetDeployPipeline(ctx, &devops.GetDeployPipelineArgs{
//				DeployPipelineId: testDeployPipelineOciDevopsDeployPipeline.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDeployPipeline(ctx *pulumi.Context, args *LookupDeployPipelineArgs, opts ...pulumi.InvokeOption) (*LookupDeployPipelineResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDeployPipelineResult
	err := ctx.Invoke("oci:DevOps/getDeployPipeline:getDeployPipeline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDeployPipeline.
type LookupDeployPipelineArgs struct {
	// Unique pipeline identifier.
	DeployPipelineId string `pulumi:"deployPipelineId"`
}

// A collection of values returned by getDeployPipeline.
type LookupDeployPipelineResult struct {
	// The OCID of the compartment where the pipeline is created.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// List of all artifacts used in the pipeline.
	DeployPipelineArtifacts []GetDeployPipelineDeployPipelineArtifact `pulumi:"deployPipelineArtifacts"`
	// List of all environments used in the pipeline.
	DeployPipelineEnvironments []GetDeployPipelineDeployPipelineEnvironment `pulumi:"deployPipelineEnvironments"`
	DeployPipelineId           string                                       `pulumi:"deployPipelineId"`
	// Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
	DeployPipelineParameters []GetDeployPipelineDeployPipelineParameter `pulumi:"deployPipelineParameters"`
	// Optional description about the deployment pipeline.
	Description string `pulumi:"description"`
	// Deployment pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The OCID of a project.
	ProjectId string `pulumi:"projectId"`
	// The current state of the deployment pipeline.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Time the deployment pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// Time the deployment pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupDeployPipelineOutput(ctx *pulumi.Context, args LookupDeployPipelineOutputArgs, opts ...pulumi.InvokeOption) LookupDeployPipelineResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDeployPipelineResultOutput, error) {
			args := v.(LookupDeployPipelineArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DevOps/getDeployPipeline:getDeployPipeline", args, LookupDeployPipelineResultOutput{}, options).(LookupDeployPipelineResultOutput), nil
		}).(LookupDeployPipelineResultOutput)
}

// A collection of arguments for invoking getDeployPipeline.
type LookupDeployPipelineOutputArgs struct {
	// Unique pipeline identifier.
	DeployPipelineId pulumi.StringInput `pulumi:"deployPipelineId"`
}

func (LookupDeployPipelineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeployPipelineArgs)(nil)).Elem()
}

// A collection of values returned by getDeployPipeline.
type LookupDeployPipelineResultOutput struct{ *pulumi.OutputState }

func (LookupDeployPipelineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeployPipelineResult)(nil)).Elem()
}

func (o LookupDeployPipelineResultOutput) ToLookupDeployPipelineResultOutput() LookupDeployPipelineResultOutput {
	return o
}

func (o LookupDeployPipelineResultOutput) ToLookupDeployPipelineResultOutputWithContext(ctx context.Context) LookupDeployPipelineResultOutput {
	return o
}

// The OCID of the compartment where the pipeline is created.
func (o LookupDeployPipelineResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupDeployPipelineResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// List of all artifacts used in the pipeline.
func (o LookupDeployPipelineResultOutput) DeployPipelineArtifacts() GetDeployPipelineDeployPipelineArtifactArrayOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) []GetDeployPipelineDeployPipelineArtifact {
		return v.DeployPipelineArtifacts
	}).(GetDeployPipelineDeployPipelineArtifactArrayOutput)
}

// List of all environments used in the pipeline.
func (o LookupDeployPipelineResultOutput) DeployPipelineEnvironments() GetDeployPipelineDeployPipelineEnvironmentArrayOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) []GetDeployPipelineDeployPipelineEnvironment {
		return v.DeployPipelineEnvironments
	}).(GetDeployPipelineDeployPipelineEnvironmentArrayOutput)
}

func (o LookupDeployPipelineResultOutput) DeployPipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) string { return v.DeployPipelineId }).(pulumi.StringOutput)
}

// Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
func (o LookupDeployPipelineResultOutput) DeployPipelineParameters() GetDeployPipelineDeployPipelineParameterArrayOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) []GetDeployPipelineDeployPipelineParameter {
		return v.DeployPipelineParameters
	}).(GetDeployPipelineDeployPipelineParameterArrayOutput)
}

// Optional description about the deployment pipeline.
func (o LookupDeployPipelineResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) string { return v.Description }).(pulumi.StringOutput)
}

// Deployment pipeline display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
func (o LookupDeployPipelineResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
func (o LookupDeployPipelineResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupDeployPipelineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupDeployPipelineResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The OCID of a project.
func (o LookupDeployPipelineResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The current state of the deployment pipeline.
func (o LookupDeployPipelineResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupDeployPipelineResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Time the deployment pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o LookupDeployPipelineResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time the deployment pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o LookupDeployPipelineResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployPipelineResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeployPipelineResultOutput{})
}
