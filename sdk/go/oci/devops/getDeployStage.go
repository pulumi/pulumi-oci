// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Deploy Stage resource in Oracle Cloud Infrastructure Devops service.
//
// Retrieves a deployment stage by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DevOps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DevOps.GetDeployStage(ctx, &devops.GetDeployStageArgs{
//				DeployStageId: oci_devops_deploy_stage.Test_deploy_stage.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDeployStage(ctx *pulumi.Context, args *LookupDeployStageArgs, opts ...pulumi.InvokeOption) (*LookupDeployStageResult, error) {
	var rv LookupDeployStageResult
	err := ctx.Invoke("oci:DevOps/getDeployStage:getDeployStage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDeployStage.
type LookupDeployStageArgs struct {
	// Unique stage identifier.
	DeployStageId string `pulumi:"deployStageId"`
}

// A collection of values returned by getDeployStage.
type LookupDeployStageResult struct {
	// Specifies the approval policy.
	ApprovalPolicies []GetDeployStageApprovalPolicy `pulumi:"approvalPolicies"`
	// Disable pre/post upgrade hooks. Set to false by default.
	AreHooksEnabled bool `pulumi:"areHooksEnabled"`
	// Collection of backend environment IP addresses.
	BlueBackendIps []GetDeployStageBlueBackendIp `pulumi:"blueBackendIps"`
	// Specifies the required blue green release strategy for OKE deployment.
	BlueGreenStrategies []GetDeployStageBlueGreenStrategy `pulumi:"blueGreenStrategies"`
	// Specifies the required canary release strategy for OKE deployment.
	CanaryStrategies []GetDeployStageCanaryStrategy `pulumi:"canaryStrategies"`
	// The OCID of the artifact that contains the command specification.
	CommandSpecDeployArtifactId string `pulumi:"commandSpecDeployArtifactId"`
	// The OCID of the compartment where the ContainerInstance will be created.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the upstream compute instance group blue-green deployment stage in this pipeline.
	ComputeInstanceGroupBlueGreenDeploymentDeployStageId string `pulumi:"computeInstanceGroupBlueGreenDeploymentDeployStageId"`
	// The OCID of an upstream compute instance group canary deployment stage ID in this pipeline.
	ComputeInstanceGroupCanaryDeployStageId string `pulumi:"computeInstanceGroupCanaryDeployStageId"`
	// A compute instance group canary traffic shift stage OCID for load balancer.
	ComputeInstanceGroupCanaryTrafficShiftDeployStageId string `pulumi:"computeInstanceGroupCanaryTrafficShiftDeployStageId"`
	// A compute instance group environment OCID for rolling deployment.
	ComputeInstanceGroupDeployEnvironmentId string `pulumi:"computeInstanceGroupDeployEnvironmentId"`
	// User provided key and value pair configuration, which is assigned through constants or parameter.
	Config map[string]interface{} `pulumi:"config"`
	// Specifies the container configuration.
	ContainerConfigs []GetDeployStageContainerConfig `pulumi:"containerConfigs"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// Optional artifact OCID. The artifact will be included in the body for the function invocation during the stage's execution. If the DeployArtifact.argumentSubstituitionMode is set to SUBSTITUTE_PLACEHOLDERS, then the pipeline parameter values will be used to replace the placeholders in the artifact content.
	DeployArtifactId string `pulumi:"deployArtifactId"`
	// The list of file artifact OCIDs to deploy.
	DeployArtifactIds []string `pulumi:"deployArtifactIds"`
	// First compute instance group environment OCID for deployment.
	DeployEnvironmentIdA string `pulumi:"deployEnvironmentIdA"`
	// Second compute instance group environment OCID for deployment.
	DeployEnvironmentIdB string `pulumi:"deployEnvironmentIdB"`
	// The OCID of a pipeline.
	DeployPipelineId string `pulumi:"deployPipelineId"`
	DeployStageId    string `pulumi:"deployStageId"`
	// Collection containing the predecessors of a stage.
	DeployStagePredecessorCollections []GetDeployStageDeployStagePredecessorCollection `pulumi:"deployStagePredecessorCollections"`
	// Deployment stage type.
	DeployStageType string `pulumi:"deployStageType"`
	// The OCID of the artifact that contains the deployment specification.
	DeploymentSpecDeployArtifactId string `pulumi:"deploymentSpecDeployArtifactId"`
	// Optional description about the deployment stage.
	Description string `pulumi:"description"`
	// Deployment stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// A Docker image artifact OCID.
	DockerImageDeployArtifactId string `pulumi:"dockerImageDeployArtifactId"`
	// Specifies a failure policy for a compute instance group rolling deployment stage.
	FailurePolicies []GetDeployStageFailurePolicy `pulumi:"failurePolicies"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Function environment OCID.
	FunctionDeployEnvironmentId string `pulumi:"functionDeployEnvironmentId"`
	// Timeout for execution of the Function. Value in seconds.
	FunctionTimeoutInSeconds int `pulumi:"functionTimeoutInSeconds"`
	// Collection of backend environment IP addresses.
	GreenBackendIps []GetDeployStageGreenBackendIp `pulumi:"greenBackendIps"`
	// Helm chart artifact OCID.
	HelmChartDeployArtifactId string `pulumi:"helmChartDeployArtifactId"`
	// Unique identifier that is immutable on creation.
	Id string `pulumi:"id"`
	// A boolean flag specifies whether this stage executes asynchronously.
	IsAsync bool `pulumi:"isAsync"`
	// Enables helm --debug option to stream output to tf stdout. Set to false by default.
	IsDebugEnabled bool `pulumi:"isDebugEnabled"`
	// Force resource update through delete; or if required, recreate. Set to false by default.
	IsForceEnabled bool `pulumi:"isForceEnabled"`
	// A boolean flag specifies whether the invoked function must be validated.
	IsValidationEnabled bool `pulumi:"isValidationEnabled"`
	// List of Kubernetes manifest artifact OCIDs.
	KubernetesManifestDeployArtifactIds []string `pulumi:"kubernetesManifestDeployArtifactIds"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
	LoadBalancerConfigs []GetDeployStageLoadBalancerConfig `pulumi:"loadBalancerConfigs"`
	// Limit the maximum number of revisions saved per release. Use 0 for no limit. Set to 10 by default
	MaxHistory int `pulumi:"maxHistory"`
	// Maximum usable memory for the Function (in MB).
	MaxMemoryInMbs string `pulumi:"maxMemoryInMbs"`
	// Default Namespace to be used for Kubernetes deployment when not specified in the manifest.
	Namespace string `pulumi:"namespace"`
	// The OCID of the upstream OKE blue-green deployment stage in this pipeline.
	OkeBlueGreenDeployStageId string `pulumi:"okeBlueGreenDeployStageId"`
	// The OCID of an upstream OKE canary deployment stage in this pipeline.
	OkeCanaryDeployStageId string `pulumi:"okeCanaryDeployStageId"`
	// The OCID of an upstream OKE canary deployment traffic shift stage in this pipeline.
	OkeCanaryTrafficShiftDeployStageId string `pulumi:"okeCanaryTrafficShiftDeployStageId"`
	// Kubernetes cluster environment OCID for deployment.
	OkeClusterDeployEnvironmentId string `pulumi:"okeClusterDeployEnvironmentId"`
	// Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
	ProductionLoadBalancerConfigs []GetDeployStageProductionLoadBalancerConfig `pulumi:"productionLoadBalancerConfigs"`
	// The OCID of a project.
	ProjectId string `pulumi:"projectId"`
	// Release name of the Helm chart.
	ReleaseName string `pulumi:"releaseName"`
	// Specifies the rollback policy. This is initiated on the failure of certain stage types.
	RollbackPolicies []GetDeployStageRollbackPolicy `pulumi:"rollbackPolicies"`
	// Description of rollout policy for load balancer traffic shift stage.
	RolloutPolicies []GetDeployStageRolloutPolicy `pulumi:"rolloutPolicies"`
	// Specifies the name and value pairs to set helm values.
	SetStrings []GetDeployStageSetString `pulumi:"setStrings"`
	// Specifies the name and value pairs to set helm values.
	SetValues []GetDeployStageSetValue `pulumi:"setValues"`
	// Allow deletion of new resources created during when an upgrade fails. Set to false by default.
	ShouldCleanupOnFail bool `pulumi:"shouldCleanupOnFail"`
	// Waits until all the resources are in a ready state to mark the release as successful. Set to false by default.
	ShouldNotWait bool `pulumi:"shouldNotWait"`
	// During upgrade, reset the values to the ones built into the chart. It overrides shouldReuseValues. Set to false by default.
	ShouldResetValues bool `pulumi:"shouldResetValues"`
	// During upgrade, reuse the values of the last release and merge overrides from the command line. Set to false by default.
	ShouldReuseValues bool `pulumi:"shouldReuseValues"`
	// If set, no CRDs are installed. By default, CRDs are installed only if they are not present already. Set to false by default.
	ShouldSkipCrds bool `pulumi:"shouldSkipCrds"`
	// If set, renders subchart notes along with the parent. Set to false by default.
	ShouldSkipRenderSubchartNotes bool `pulumi:"shouldSkipRenderSubchartNotes"`
	// The current state of the deployment stage.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
	TestLoadBalancerConfigs []GetDeployStageTestLoadBalancerConfig `pulumi:"testLoadBalancerConfigs"`
	// Time the deployment stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeCreated string `pulumi:"timeCreated"`
	// Time the deployment stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
	TimeUpdated string `pulumi:"timeUpdated"`
	// Time to wait for execution of a Shell/Helm stage. Defaults to 36000 seconds for Shell and 300 seconds for Helm Stage
	TimeoutInSeconds int `pulumi:"timeoutInSeconds"`
	// Specifies the target or destination backend set.
	TrafficShiftTarget string `pulumi:"trafficShiftTarget"`
	// List of values.yaml file artifact OCIDs.
	ValuesArtifactIds []string `pulumi:"valuesArtifactIds"`
	// Specifies wait criteria for the Wait stage.
	WaitCriterias []GetDeployStageWaitCriteria `pulumi:"waitCriterias"`
}

func LookupDeployStageOutput(ctx *pulumi.Context, args LookupDeployStageOutputArgs, opts ...pulumi.InvokeOption) LookupDeployStageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeployStageResult, error) {
			args := v.(LookupDeployStageArgs)
			r, err := LookupDeployStage(ctx, &args, opts...)
			var s LookupDeployStageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDeployStageResultOutput)
}

// A collection of arguments for invoking getDeployStage.
type LookupDeployStageOutputArgs struct {
	// Unique stage identifier.
	DeployStageId pulumi.StringInput `pulumi:"deployStageId"`
}

func (LookupDeployStageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeployStageArgs)(nil)).Elem()
}

// A collection of values returned by getDeployStage.
type LookupDeployStageResultOutput struct{ *pulumi.OutputState }

func (LookupDeployStageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeployStageResult)(nil)).Elem()
}

func (o LookupDeployStageResultOutput) ToLookupDeployStageResultOutput() LookupDeployStageResultOutput {
	return o
}

func (o LookupDeployStageResultOutput) ToLookupDeployStageResultOutputWithContext(ctx context.Context) LookupDeployStageResultOutput {
	return o
}

// Specifies the approval policy.
func (o LookupDeployStageResultOutput) ApprovalPolicies() GetDeployStageApprovalPolicyArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageApprovalPolicy { return v.ApprovalPolicies }).(GetDeployStageApprovalPolicyArrayOutput)
}

// Disable pre/post upgrade hooks. Set to false by default.
func (o LookupDeployStageResultOutput) AreHooksEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeployStageResult) bool { return v.AreHooksEnabled }).(pulumi.BoolOutput)
}

// Collection of backend environment IP addresses.
func (o LookupDeployStageResultOutput) BlueBackendIps() GetDeployStageBlueBackendIpArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageBlueBackendIp { return v.BlueBackendIps }).(GetDeployStageBlueBackendIpArrayOutput)
}

// Specifies the required blue green release strategy for OKE deployment.
func (o LookupDeployStageResultOutput) BlueGreenStrategies() GetDeployStageBlueGreenStrategyArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageBlueGreenStrategy { return v.BlueGreenStrategies }).(GetDeployStageBlueGreenStrategyArrayOutput)
}

// Specifies the required canary release strategy for OKE deployment.
func (o LookupDeployStageResultOutput) CanaryStrategies() GetDeployStageCanaryStrategyArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageCanaryStrategy { return v.CanaryStrategies }).(GetDeployStageCanaryStrategyArrayOutput)
}

// The OCID of the artifact that contains the command specification.
func (o LookupDeployStageResultOutput) CommandSpecDeployArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.CommandSpecDeployArtifactId }).(pulumi.StringOutput)
}

// The OCID of the compartment where the ContainerInstance will be created.
func (o LookupDeployStageResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the upstream compute instance group blue-green deployment stage in this pipeline.
func (o LookupDeployStageResultOutput) ComputeInstanceGroupBlueGreenDeploymentDeployStageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.ComputeInstanceGroupBlueGreenDeploymentDeployStageId }).(pulumi.StringOutput)
}

// The OCID of an upstream compute instance group canary deployment stage ID in this pipeline.
func (o LookupDeployStageResultOutput) ComputeInstanceGroupCanaryDeployStageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.ComputeInstanceGroupCanaryDeployStageId }).(pulumi.StringOutput)
}

// A compute instance group canary traffic shift stage OCID for load balancer.
func (o LookupDeployStageResultOutput) ComputeInstanceGroupCanaryTrafficShiftDeployStageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.ComputeInstanceGroupCanaryTrafficShiftDeployStageId }).(pulumi.StringOutput)
}

// A compute instance group environment OCID for rolling deployment.
func (o LookupDeployStageResultOutput) ComputeInstanceGroupDeployEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.ComputeInstanceGroupDeployEnvironmentId }).(pulumi.StringOutput)
}

// User provided key and value pair configuration, which is assigned through constants or parameter.
func (o LookupDeployStageResultOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDeployStageResult) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// Specifies the container configuration.
func (o LookupDeployStageResultOutput) ContainerConfigs() GetDeployStageContainerConfigArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageContainerConfig { return v.ContainerConfigs }).(GetDeployStageContainerConfigArrayOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupDeployStageResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDeployStageResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// Optional artifact OCID. The artifact will be included in the body for the function invocation during the stage's execution. If the DeployArtifact.argumentSubstituitionMode is set to SUBSTITUTE_PLACEHOLDERS, then the pipeline parameter values will be used to replace the placeholders in the artifact content.
func (o LookupDeployStageResultOutput) DeployArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.DeployArtifactId }).(pulumi.StringOutput)
}

// The list of file artifact OCIDs to deploy.
func (o LookupDeployStageResultOutput) DeployArtifactIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []string { return v.DeployArtifactIds }).(pulumi.StringArrayOutput)
}

// First compute instance group environment OCID for deployment.
func (o LookupDeployStageResultOutput) DeployEnvironmentIdA() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.DeployEnvironmentIdA }).(pulumi.StringOutput)
}

// Second compute instance group environment OCID for deployment.
func (o LookupDeployStageResultOutput) DeployEnvironmentIdB() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.DeployEnvironmentIdB }).(pulumi.StringOutput)
}

// The OCID of a pipeline.
func (o LookupDeployStageResultOutput) DeployPipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.DeployPipelineId }).(pulumi.StringOutput)
}

func (o LookupDeployStageResultOutput) DeployStageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.DeployStageId }).(pulumi.StringOutput)
}

// Collection containing the predecessors of a stage.
func (o LookupDeployStageResultOutput) DeployStagePredecessorCollections() GetDeployStageDeployStagePredecessorCollectionArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageDeployStagePredecessorCollection {
		return v.DeployStagePredecessorCollections
	}).(GetDeployStageDeployStagePredecessorCollectionArrayOutput)
}

// Deployment stage type.
func (o LookupDeployStageResultOutput) DeployStageType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.DeployStageType }).(pulumi.StringOutput)
}

// The OCID of the artifact that contains the deployment specification.
func (o LookupDeployStageResultOutput) DeploymentSpecDeployArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.DeploymentSpecDeployArtifactId }).(pulumi.StringOutput)
}

// Optional description about the deployment stage.
func (o LookupDeployStageResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.Description }).(pulumi.StringOutput)
}

// Deployment stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
func (o LookupDeployStageResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A Docker image artifact OCID.
func (o LookupDeployStageResultOutput) DockerImageDeployArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.DockerImageDeployArtifactId }).(pulumi.StringOutput)
}

// Specifies a failure policy for a compute instance group rolling deployment stage.
func (o LookupDeployStageResultOutput) FailurePolicies() GetDeployStageFailurePolicyArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageFailurePolicy { return v.FailurePolicies }).(GetDeployStageFailurePolicyArrayOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
func (o LookupDeployStageResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDeployStageResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Function environment OCID.
func (o LookupDeployStageResultOutput) FunctionDeployEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.FunctionDeployEnvironmentId }).(pulumi.StringOutput)
}

// Timeout for execution of the Function. Value in seconds.
func (o LookupDeployStageResultOutput) FunctionTimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDeployStageResult) int { return v.FunctionTimeoutInSeconds }).(pulumi.IntOutput)
}

// Collection of backend environment IP addresses.
func (o LookupDeployStageResultOutput) GreenBackendIps() GetDeployStageGreenBackendIpArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageGreenBackendIp { return v.GreenBackendIps }).(GetDeployStageGreenBackendIpArrayOutput)
}

// Helm chart artifact OCID.
func (o LookupDeployStageResultOutput) HelmChartDeployArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.HelmChartDeployArtifactId }).(pulumi.StringOutput)
}

// Unique identifier that is immutable on creation.
func (o LookupDeployStageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.Id }).(pulumi.StringOutput)
}

// A boolean flag specifies whether this stage executes asynchronously.
func (o LookupDeployStageResultOutput) IsAsync() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeployStageResult) bool { return v.IsAsync }).(pulumi.BoolOutput)
}

// Enables helm --debug option to stream output to tf stdout. Set to false by default.
func (o LookupDeployStageResultOutput) IsDebugEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeployStageResult) bool { return v.IsDebugEnabled }).(pulumi.BoolOutput)
}

// Force resource update through delete; or if required, recreate. Set to false by default.
func (o LookupDeployStageResultOutput) IsForceEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeployStageResult) bool { return v.IsForceEnabled }).(pulumi.BoolOutput)
}

// A boolean flag specifies whether the invoked function must be validated.
func (o LookupDeployStageResultOutput) IsValidationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeployStageResult) bool { return v.IsValidationEnabled }).(pulumi.BoolOutput)
}

// List of Kubernetes manifest artifact OCIDs.
func (o LookupDeployStageResultOutput) KubernetesManifestDeployArtifactIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []string { return v.KubernetesManifestDeployArtifactIds }).(pulumi.StringArrayOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupDeployStageResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
func (o LookupDeployStageResultOutput) LoadBalancerConfigs() GetDeployStageLoadBalancerConfigArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageLoadBalancerConfig { return v.LoadBalancerConfigs }).(GetDeployStageLoadBalancerConfigArrayOutput)
}

// Limit the maximum number of revisions saved per release. Use 0 for no limit. Set to 10 by default
func (o LookupDeployStageResultOutput) MaxHistory() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDeployStageResult) int { return v.MaxHistory }).(pulumi.IntOutput)
}

// Maximum usable memory for the Function (in MB).
func (o LookupDeployStageResultOutput) MaxMemoryInMbs() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.MaxMemoryInMbs }).(pulumi.StringOutput)
}

// Default Namespace to be used for Kubernetes deployment when not specified in the manifest.
func (o LookupDeployStageResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The OCID of the upstream OKE blue-green deployment stage in this pipeline.
func (o LookupDeployStageResultOutput) OkeBlueGreenDeployStageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.OkeBlueGreenDeployStageId }).(pulumi.StringOutput)
}

// The OCID of an upstream OKE canary deployment stage in this pipeline.
func (o LookupDeployStageResultOutput) OkeCanaryDeployStageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.OkeCanaryDeployStageId }).(pulumi.StringOutput)
}

// The OCID of an upstream OKE canary deployment traffic shift stage in this pipeline.
func (o LookupDeployStageResultOutput) OkeCanaryTrafficShiftDeployStageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.OkeCanaryTrafficShiftDeployStageId }).(pulumi.StringOutput)
}

// Kubernetes cluster environment OCID for deployment.
func (o LookupDeployStageResultOutput) OkeClusterDeployEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.OkeClusterDeployEnvironmentId }).(pulumi.StringOutput)
}

// Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
func (o LookupDeployStageResultOutput) ProductionLoadBalancerConfigs() GetDeployStageProductionLoadBalancerConfigArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageProductionLoadBalancerConfig {
		return v.ProductionLoadBalancerConfigs
	}).(GetDeployStageProductionLoadBalancerConfigArrayOutput)
}

// The OCID of a project.
func (o LookupDeployStageResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Release name of the Helm chart.
func (o LookupDeployStageResultOutput) ReleaseName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.ReleaseName }).(pulumi.StringOutput)
}

// Specifies the rollback policy. This is initiated on the failure of certain stage types.
func (o LookupDeployStageResultOutput) RollbackPolicies() GetDeployStageRollbackPolicyArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageRollbackPolicy { return v.RollbackPolicies }).(GetDeployStageRollbackPolicyArrayOutput)
}

// Description of rollout policy for load balancer traffic shift stage.
func (o LookupDeployStageResultOutput) RolloutPolicies() GetDeployStageRolloutPolicyArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageRolloutPolicy { return v.RolloutPolicies }).(GetDeployStageRolloutPolicyArrayOutput)
}

// Specifies the name and value pairs to set helm values.
func (o LookupDeployStageResultOutput) SetStrings() GetDeployStageSetStringArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageSetString { return v.SetStrings }).(GetDeployStageSetStringArrayOutput)
}

// Specifies the name and value pairs to set helm values.
func (o LookupDeployStageResultOutput) SetValues() GetDeployStageSetValueArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageSetValue { return v.SetValues }).(GetDeployStageSetValueArrayOutput)
}

// Allow deletion of new resources created during when an upgrade fails. Set to false by default.
func (o LookupDeployStageResultOutput) ShouldCleanupOnFail() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeployStageResult) bool { return v.ShouldCleanupOnFail }).(pulumi.BoolOutput)
}

// Waits until all the resources are in a ready state to mark the release as successful. Set to false by default.
func (o LookupDeployStageResultOutput) ShouldNotWait() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeployStageResult) bool { return v.ShouldNotWait }).(pulumi.BoolOutput)
}

// During upgrade, reset the values to the ones built into the chart. It overrides shouldReuseValues. Set to false by default.
func (o LookupDeployStageResultOutput) ShouldResetValues() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeployStageResult) bool { return v.ShouldResetValues }).(pulumi.BoolOutput)
}

// During upgrade, reuse the values of the last release and merge overrides from the command line. Set to false by default.
func (o LookupDeployStageResultOutput) ShouldReuseValues() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeployStageResult) bool { return v.ShouldReuseValues }).(pulumi.BoolOutput)
}

// If set, no CRDs are installed. By default, CRDs are installed only if they are not present already. Set to false by default.
func (o LookupDeployStageResultOutput) ShouldSkipCrds() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeployStageResult) bool { return v.ShouldSkipCrds }).(pulumi.BoolOutput)
}

// If set, renders subchart notes along with the parent. Set to false by default.
func (o LookupDeployStageResultOutput) ShouldSkipRenderSubchartNotes() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeployStageResult) bool { return v.ShouldSkipRenderSubchartNotes }).(pulumi.BoolOutput)
}

// The current state of the deployment stage.
func (o LookupDeployStageResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupDeployStageResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupDeployStageResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
func (o LookupDeployStageResultOutput) TestLoadBalancerConfigs() GetDeployStageTestLoadBalancerConfigArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageTestLoadBalancerConfig {
		return v.TestLoadBalancerConfigs
	}).(GetDeployStageTestLoadBalancerConfigArrayOutput)
}

// Time the deployment stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o LookupDeployStageResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time the deployment stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
func (o LookupDeployStageResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Time to wait for execution of a Shell/Helm stage. Defaults to 36000 seconds for Shell and 300 seconds for Helm Stage
func (o LookupDeployStageResultOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDeployStageResult) int { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

// Specifies the target or destination backend set.
func (o LookupDeployStageResultOutput) TrafficShiftTarget() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeployStageResult) string { return v.TrafficShiftTarget }).(pulumi.StringOutput)
}

// List of values.yaml file artifact OCIDs.
func (o LookupDeployStageResultOutput) ValuesArtifactIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []string { return v.ValuesArtifactIds }).(pulumi.StringArrayOutput)
}

// Specifies wait criteria for the Wait stage.
func (o LookupDeployStageResultOutput) WaitCriterias() GetDeployStageWaitCriteriaArrayOutput {
	return o.ApplyT(func(v LookupDeployStageResult) []GetDeployStageWaitCriteria { return v.WaitCriterias }).(GetDeployStageWaitCriteriaArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeployStageResultOutput{})
}
