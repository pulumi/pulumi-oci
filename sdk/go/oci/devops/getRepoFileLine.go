// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source provides details about a specific Repo File Line resource in Oracle Cloud Infrastructure Devops service.
//
// Retrieve lines of a specified file. Supports starting line number and limit.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DevOps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DevOps.GetRepoFileLine(ctx, &devops.GetRepoFileLineArgs{
//				RepositoryId:    oci_devops_repository.Test_repository.Id,
//				Revision:        _var.Repo_file_line_revision,
//				FilePath:        _var.Repo_file_line_file_path,
//				StartLineNumber: pulumi.IntRef(_var.Repo_file_line_start_line_number),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRepoFileLine(ctx *pulumi.Context, args *GetRepoFileLineArgs, opts ...pulumi.InvokeOption) (*GetRepoFileLineResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRepoFileLineResult
	err := ctx.Invoke("oci:DevOps/getRepoFileLine:getRepoFileLine", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepoFileLine.
type GetRepoFileLineArgs struct {
	// (Required) A filter to return file contents of the specified paths.
	FilePath string `pulumi:"filePath"`
	// Unique repository identifier.
	RepositoryId string `pulumi:"repositoryId"`
	// Retrieve file lines from specific revision.
	Revision string `pulumi:"revision"`
	// Line number from where to start returning file lines.
	StartLineNumber *int `pulumi:"startLineNumber"`
}

// A collection of values returned by getRepoFileLine.
type GetRepoFileLineResult struct {
	FilePath string `pulumi:"filePath"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of lines in the file.
	Lines           []GetRepoFileLineLine `pulumi:"lines"`
	RepositoryId    string                `pulumi:"repositoryId"`
	Revision        string                `pulumi:"revision"`
	StartLineNumber *int                  `pulumi:"startLineNumber"`
}

func GetRepoFileLineOutput(ctx *pulumi.Context, args GetRepoFileLineOutputArgs, opts ...pulumi.InvokeOption) GetRepoFileLineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRepoFileLineResult, error) {
			args := v.(GetRepoFileLineArgs)
			r, err := GetRepoFileLine(ctx, &args, opts...)
			var s GetRepoFileLineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRepoFileLineResultOutput)
}

// A collection of arguments for invoking getRepoFileLine.
type GetRepoFileLineOutputArgs struct {
	// (Required) A filter to return file contents of the specified paths.
	FilePath pulumi.StringInput `pulumi:"filePath"`
	// Unique repository identifier.
	RepositoryId pulumi.StringInput `pulumi:"repositoryId"`
	// Retrieve file lines from specific revision.
	Revision pulumi.StringInput `pulumi:"revision"`
	// Line number from where to start returning file lines.
	StartLineNumber pulumi.IntPtrInput `pulumi:"startLineNumber"`
}

func (GetRepoFileLineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepoFileLineArgs)(nil)).Elem()
}

// A collection of values returned by getRepoFileLine.
type GetRepoFileLineResultOutput struct{ *pulumi.OutputState }

func (GetRepoFileLineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepoFileLineResult)(nil)).Elem()
}

func (o GetRepoFileLineResultOutput) ToGetRepoFileLineResultOutput() GetRepoFileLineResultOutput {
	return o
}

func (o GetRepoFileLineResultOutput) ToGetRepoFileLineResultOutputWithContext(ctx context.Context) GetRepoFileLineResultOutput {
	return o
}

func (o GetRepoFileLineResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetRepoFileLineResult] {
	return pulumix.Output[GetRepoFileLineResult]{
		OutputState: o.OutputState,
	}
}

func (o GetRepoFileLineResultOutput) FilePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepoFileLineResult) string { return v.FilePath }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRepoFileLineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepoFileLineResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of lines in the file.
func (o GetRepoFileLineResultOutput) Lines() GetRepoFileLineLineArrayOutput {
	return o.ApplyT(func(v GetRepoFileLineResult) []GetRepoFileLineLine { return v.Lines }).(GetRepoFileLineLineArrayOutput)
}

func (o GetRepoFileLineResultOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepoFileLineResult) string { return v.RepositoryId }).(pulumi.StringOutput)
}

func (o GetRepoFileLineResultOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepoFileLineResult) string { return v.Revision }).(pulumi.StringOutput)
}

func (o GetRepoFileLineResultOutput) StartLineNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRepoFileLineResult) *int { return v.StartLineNumber }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRepoFileLineResultOutput{})
}
