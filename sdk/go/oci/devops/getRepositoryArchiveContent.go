// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Repository Archive Content resource in Oracle Cloud Infrastructure Devops service.
//
// Returns the archived repository information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/DevOps"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := DevOps.GetRepositoryArchiveContent(ctx, &devops.GetRepositoryArchiveContentArgs{
// 			RepositoryId: oci_devops_repository.Test_repository.Id,
// 			Format:       pulumi.StringRef(_var.Repository_archive_content_format),
// 			RefName:      pulumi.StringRef(_var.Repository_archive_content_ref_name),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetRepositoryArchiveContent(ctx *pulumi.Context, args *GetRepositoryArchiveContentArgs, opts ...pulumi.InvokeOption) (*GetRepositoryArchiveContentResult, error) {
	var rv GetRepositoryArchiveContentResult
	err := ctx.Invoke("oci:DevOps/getRepositoryArchiveContent:getRepositoryArchiveContent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryArchiveContent.
type GetRepositoryArchiveContentArgs struct {
	// The archive format query parameter for downloading repository endpoint.
	Format *string `pulumi:"format"`
	// A filter to return only resources that match the given reference name.
	RefName *string `pulumi:"refName"`
	// Unique repository identifier.
	RepositoryId string `pulumi:"repositoryId"`
}

// A collection of values returned by getRepositoryArchiveContent.
type GetRepositoryArchiveContentResult struct {
	Format *string `pulumi:"format"`
	// The provider-assigned unique ID for this managed resource.
	Id           string  `pulumi:"id"`
	RefName      *string `pulumi:"refName"`
	RepositoryId string  `pulumi:"repositoryId"`
}

func GetRepositoryArchiveContentOutput(ctx *pulumi.Context, args GetRepositoryArchiveContentOutputArgs, opts ...pulumi.InvokeOption) GetRepositoryArchiveContentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRepositoryArchiveContentResult, error) {
			args := v.(GetRepositoryArchiveContentArgs)
			r, err := GetRepositoryArchiveContent(ctx, &args, opts...)
			var s GetRepositoryArchiveContentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRepositoryArchiveContentResultOutput)
}

// A collection of arguments for invoking getRepositoryArchiveContent.
type GetRepositoryArchiveContentOutputArgs struct {
	// The archive format query parameter for downloading repository endpoint.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// A filter to return only resources that match the given reference name.
	RefName pulumi.StringPtrInput `pulumi:"refName"`
	// Unique repository identifier.
	RepositoryId pulumi.StringInput `pulumi:"repositoryId"`
}

func (GetRepositoryArchiveContentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryArchiveContentArgs)(nil)).Elem()
}

// A collection of values returned by getRepositoryArchiveContent.
type GetRepositoryArchiveContentResultOutput struct{ *pulumi.OutputState }

func (GetRepositoryArchiveContentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryArchiveContentResult)(nil)).Elem()
}

func (o GetRepositoryArchiveContentResultOutput) ToGetRepositoryArchiveContentResultOutput() GetRepositoryArchiveContentResultOutput {
	return o
}

func (o GetRepositoryArchiveContentResultOutput) ToGetRepositoryArchiveContentResultOutputWithContext(ctx context.Context) GetRepositoryArchiveContentResultOutput {
	return o
}

func (o GetRepositoryArchiveContentResultOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRepositoryArchiveContentResult) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRepositoryArchiveContentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryArchiveContentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRepositoryArchiveContentResultOutput) RefName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRepositoryArchiveContentResult) *string { return v.RefName }).(pulumi.StringPtrOutput)
}

func (o GetRepositoryArchiveContentResultOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryArchiveContentResult) string { return v.RepositoryId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRepositoryArchiveContentResultOutput{})
}
