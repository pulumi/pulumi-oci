// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Repository File Line resource in Oracle Cloud Infrastructure Devops service.
//
// Retrieve lines of a specified file. Supports starting line number and limit. This API will be deprecated on Wed, 29 Mar 2023 01:00:00 GMT as it does not get recognized when filePath has '/'. This will be replaced by "/repositories/{repositoryId}/file/lines"
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DevOps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DevOps.GetRepositoryFileLine(ctx, &devops.GetRepositoryFileLineArgs{
//				RepositoryId:    oci_devops_repository.Test_repository.Id,
//				Revision:        _var.Repository_file_line_revision,
//				FilePath:        _var.Repository_file_line_file_path,
//				StartLineNumber: pulumi.IntRef(_var.Repository_file_line_start_line_number),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRepositoryFileLine(ctx *pulumi.Context, args *GetRepositoryFileLineArgs, opts ...pulumi.InvokeOption) (*GetRepositoryFileLineResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRepositoryFileLineResult
	err := ctx.Invoke("oci:DevOps/getRepositoryFileLine:getRepositoryFileLine", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryFileLine.
type GetRepositoryFileLineArgs struct {
	// A filter to return file contents of the specified paths.
	FilePath string `pulumi:"filePath"`
	// Unique repository identifier.
	RepositoryId string `pulumi:"repositoryId"`
	// Retrieve file lines from specific revision.
	Revision string `pulumi:"revision"`
	// Line number from where to start returning file lines.
	StartLineNumber *int `pulumi:"startLineNumber"`
}

// A collection of values returned by getRepositoryFileLine.
type GetRepositoryFileLineResult struct {
	FilePath string `pulumi:"filePath"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// The list of lines in the file.
	Lines           []GetRepositoryFileLineLine `pulumi:"lines"`
	RepositoryId    string                      `pulumi:"repositoryId"`
	Revision        string                      `pulumi:"revision"`
	StartLineNumber *int                        `pulumi:"startLineNumber"`
}

func GetRepositoryFileLineOutput(ctx *pulumi.Context, args GetRepositoryFileLineOutputArgs, opts ...pulumi.InvokeOption) GetRepositoryFileLineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRepositoryFileLineResult, error) {
			args := v.(GetRepositoryFileLineArgs)
			r, err := GetRepositoryFileLine(ctx, &args, opts...)
			var s GetRepositoryFileLineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRepositoryFileLineResultOutput)
}

// A collection of arguments for invoking getRepositoryFileLine.
type GetRepositoryFileLineOutputArgs struct {
	// A filter to return file contents of the specified paths.
	FilePath pulumi.StringInput `pulumi:"filePath"`
	// Unique repository identifier.
	RepositoryId pulumi.StringInput `pulumi:"repositoryId"`
	// Retrieve file lines from specific revision.
	Revision pulumi.StringInput `pulumi:"revision"`
	// Line number from where to start returning file lines.
	StartLineNumber pulumi.IntPtrInput `pulumi:"startLineNumber"`
}

func (GetRepositoryFileLineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryFileLineArgs)(nil)).Elem()
}

// A collection of values returned by getRepositoryFileLine.
type GetRepositoryFileLineResultOutput struct{ *pulumi.OutputState }

func (GetRepositoryFileLineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryFileLineResult)(nil)).Elem()
}

func (o GetRepositoryFileLineResultOutput) ToGetRepositoryFileLineResultOutput() GetRepositoryFileLineResultOutput {
	return o
}

func (o GetRepositoryFileLineResultOutput) ToGetRepositoryFileLineResultOutputWithContext(ctx context.Context) GetRepositoryFileLineResultOutput {
	return o
}

func (o GetRepositoryFileLineResultOutput) FilePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryFileLineResult) string { return v.FilePath }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRepositoryFileLineResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRepositoryFileLineResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of lines in the file.
func (o GetRepositoryFileLineResultOutput) Lines() GetRepositoryFileLineLineArrayOutput {
	return o.ApplyT(func(v GetRepositoryFileLineResult) []GetRepositoryFileLineLine { return v.Lines }).(GetRepositoryFileLineLineArrayOutput)
}

func (o GetRepositoryFileLineResultOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryFileLineResult) string { return v.RepositoryId }).(pulumi.StringOutput)
}

func (o GetRepositoryFileLineResultOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryFileLineResult) string { return v.Revision }).(pulumi.StringOutput)
}

func (o GetRepositoryFileLineResultOutput) StartLineNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRepositoryFileLineResult) *int { return v.StartLineNumber }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRepositoryFileLineResultOutput{})
}
