// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Repository Mirror Records in Oracle Cloud Infrastructure Devops service.
//
// Returns a list of mirror entry in history within 30 days.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/devops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := devops.GetRepositoryMirrorRecords(ctx, &devops.GetRepositoryMirrorRecordsArgs{
//				RepositoryId: testRepository.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRepositoryMirrorRecords(ctx *pulumi.Context, args *GetRepositoryMirrorRecordsArgs, opts ...pulumi.InvokeOption) (*GetRepositoryMirrorRecordsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRepositoryMirrorRecordsResult
	err := ctx.Invoke("oci:DevOps/getRepositoryMirrorRecords:getRepositoryMirrorRecords", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryMirrorRecords.
type GetRepositoryMirrorRecordsArgs struct {
	Filters []GetRepositoryMirrorRecordsFilter `pulumi:"filters"`
	// Unique repository identifier.
	RepositoryId string `pulumi:"repositoryId"`
}

// A collection of values returned by getRepositoryMirrorRecords.
type GetRepositoryMirrorRecordsResult struct {
	Filters []GetRepositoryMirrorRecordsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	RepositoryId string `pulumi:"repositoryId"`
	// The list of repository_mirror_record_collection.
	RepositoryMirrorRecordCollections []GetRepositoryMirrorRecordsRepositoryMirrorRecordCollection `pulumi:"repositoryMirrorRecordCollections"`
}

func GetRepositoryMirrorRecordsOutput(ctx *pulumi.Context, args GetRepositoryMirrorRecordsOutputArgs, opts ...pulumi.InvokeOption) GetRepositoryMirrorRecordsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRepositoryMirrorRecordsResultOutput, error) {
			args := v.(GetRepositoryMirrorRecordsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:DevOps/getRepositoryMirrorRecords:getRepositoryMirrorRecords", args, GetRepositoryMirrorRecordsResultOutput{}, options).(GetRepositoryMirrorRecordsResultOutput), nil
		}).(GetRepositoryMirrorRecordsResultOutput)
}

// A collection of arguments for invoking getRepositoryMirrorRecords.
type GetRepositoryMirrorRecordsOutputArgs struct {
	Filters GetRepositoryMirrorRecordsFilterArrayInput `pulumi:"filters"`
	// Unique repository identifier.
	RepositoryId pulumi.StringInput `pulumi:"repositoryId"`
}

func (GetRepositoryMirrorRecordsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryMirrorRecordsArgs)(nil)).Elem()
}

// A collection of values returned by getRepositoryMirrorRecords.
type GetRepositoryMirrorRecordsResultOutput struct{ *pulumi.OutputState }

func (GetRepositoryMirrorRecordsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryMirrorRecordsResult)(nil)).Elem()
}

func (o GetRepositoryMirrorRecordsResultOutput) ToGetRepositoryMirrorRecordsResultOutput() GetRepositoryMirrorRecordsResultOutput {
	return o
}

func (o GetRepositoryMirrorRecordsResultOutput) ToGetRepositoryMirrorRecordsResultOutputWithContext(ctx context.Context) GetRepositoryMirrorRecordsResultOutput {
	return o
}

func (o GetRepositoryMirrorRecordsResultOutput) Filters() GetRepositoryMirrorRecordsFilterArrayOutput {
	return o.ApplyT(func(v GetRepositoryMirrorRecordsResult) []GetRepositoryMirrorRecordsFilter { return v.Filters }).(GetRepositoryMirrorRecordsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRepositoryMirrorRecordsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryMirrorRecordsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRepositoryMirrorRecordsResultOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryMirrorRecordsResult) string { return v.RepositoryId }).(pulumi.StringOutput)
}

// The list of repository_mirror_record_collection.
func (o GetRepositoryMirrorRecordsResultOutput) RepositoryMirrorRecordCollections() GetRepositoryMirrorRecordsRepositoryMirrorRecordCollectionArrayOutput {
	return o.ApplyT(func(v GetRepositoryMirrorRecordsResult) []GetRepositoryMirrorRecordsRepositoryMirrorRecordCollection {
		return v.RepositoryMirrorRecordCollections
	}).(GetRepositoryMirrorRecordsRepositoryMirrorRecordCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRepositoryMirrorRecordsResultOutput{})
}
