// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Repository Object Content resource in Oracle Cloud Infrastructure Devops service.
//
// Retrieve contents of a specified object.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/DevOps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DevOps.GetRepositoryObjectContent(ctx, &devops.GetRepositoryObjectContentArgs{
//				RepositoryId: testRepository.Id,
//				Sha:          repositoryObjectContentSha,
//				FilePath:     pulumi.StringRef(repositoryObjectContentFilePath),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRepositoryObjectContent(ctx *pulumi.Context, args *GetRepositoryObjectContentArgs, opts ...pulumi.InvokeOption) (*GetRepositoryObjectContentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRepositoryObjectContentResult
	err := ctx.Invoke("oci:DevOps/getRepositoryObjectContent:getRepositoryObjectContent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryObjectContent.
type GetRepositoryObjectContentArgs struct {
	// A filter to return only commits that affect any of the specified paths.
	FilePath *string `pulumi:"filePath"`
	// Unique repository identifier.
	RepositoryId string `pulumi:"repositoryId"`
	// The SHA of a blob or tree.
	Sha string `pulumi:"sha"`
}

// A collection of values returned by getRepositoryObjectContent.
type GetRepositoryObjectContentResult struct {
	FilePath *string `pulumi:"filePath"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	RepositoryId string `pulumi:"repositoryId"`
	Sha          string `pulumi:"sha"`
}

func GetRepositoryObjectContentOutput(ctx *pulumi.Context, args GetRepositoryObjectContentOutputArgs, opts ...pulumi.InvokeOption) GetRepositoryObjectContentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRepositoryObjectContentResult, error) {
			args := v.(GetRepositoryObjectContentArgs)
			r, err := GetRepositoryObjectContent(ctx, &args, opts...)
			var s GetRepositoryObjectContentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRepositoryObjectContentResultOutput)
}

// A collection of arguments for invoking getRepositoryObjectContent.
type GetRepositoryObjectContentOutputArgs struct {
	// A filter to return only commits that affect any of the specified paths.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// Unique repository identifier.
	RepositoryId pulumi.StringInput `pulumi:"repositoryId"`
	// The SHA of a blob or tree.
	Sha pulumi.StringInput `pulumi:"sha"`
}

func (GetRepositoryObjectContentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryObjectContentArgs)(nil)).Elem()
}

// A collection of values returned by getRepositoryObjectContent.
type GetRepositoryObjectContentResultOutput struct{ *pulumi.OutputState }

func (GetRepositoryObjectContentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryObjectContentResult)(nil)).Elem()
}

func (o GetRepositoryObjectContentResultOutput) ToGetRepositoryObjectContentResultOutput() GetRepositoryObjectContentResultOutput {
	return o
}

func (o GetRepositoryObjectContentResultOutput) ToGetRepositoryObjectContentResultOutputWithContext(ctx context.Context) GetRepositoryObjectContentResultOutput {
	return o
}

func (o GetRepositoryObjectContentResultOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRepositoryObjectContentResult) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRepositoryObjectContentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryObjectContentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRepositoryObjectContentResultOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryObjectContentResult) string { return v.RepositoryId }).(pulumi.StringOutput)
}

func (o GetRepositoryObjectContentResultOutput) Sha() pulumi.StringOutput {
	return o.ApplyT(func(v GetRepositoryObjectContentResult) string { return v.Sha }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRepositoryObjectContentResultOutput{})
}
