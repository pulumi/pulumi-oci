// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devops

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Repository Protected Branch Management resource in Oracle Cloud Infrastructure Devops service.
//
// Creates a restriction on a branch that prevents certain actions on it.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/devops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := devops.NewRepositoryProtectedBranchManagement(ctx, "test_repository_protected_branch_management", &devops.RepositoryProtectedBranchManagementArgs{
//				BranchName:       pulumi.Any(repositoryProtectedBranchManagementBranchName),
//				RepositoryId:     pulumi.Any(testRepository.Id),
//				ProtectionLevels: pulumi.Any(repositoryProtectedBranchManagementProtectionLevels),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type RepositoryProtectedBranchManagement struct {
	pulumi.CustomResourceState

	// Name of a branch to protect.
	BranchName pulumi.StringOutput `pulumi:"branchName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// Level of protection to add on a branch.
	ProtectionLevels pulumi.StringArrayOutput `pulumi:"protectionLevels"`
	// Unique repository identifier.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RepositoryId pulumi.StringOutput `pulumi:"repositoryId"`
}

// NewRepositoryProtectedBranchManagement registers a new resource with the given unique name, arguments, and options.
func NewRepositoryProtectedBranchManagement(ctx *pulumi.Context,
	name string, args *RepositoryProtectedBranchManagementArgs, opts ...pulumi.ResourceOption) (*RepositoryProtectedBranchManagement, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BranchName == nil {
		return nil, errors.New("invalid value for required argument 'BranchName'")
	}
	if args.RepositoryId == nil {
		return nil, errors.New("invalid value for required argument 'RepositoryId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RepositoryProtectedBranchManagement
	err := ctx.RegisterResource("oci:DevOps/repositoryProtectedBranchManagement:RepositoryProtectedBranchManagement", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRepositoryProtectedBranchManagement gets an existing RepositoryProtectedBranchManagement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRepositoryProtectedBranchManagement(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RepositoryProtectedBranchManagementState, opts ...pulumi.ResourceOption) (*RepositoryProtectedBranchManagement, error) {
	var resource RepositoryProtectedBranchManagement
	err := ctx.ReadResource("oci:DevOps/repositoryProtectedBranchManagement:RepositoryProtectedBranchManagement", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RepositoryProtectedBranchManagement resources.
type repositoryProtectedBranchManagementState struct {
	// Name of a branch to protect.
	BranchName *string `pulumi:"branchName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Level of protection to add on a branch.
	ProtectionLevels []string `pulumi:"protectionLevels"`
	// Unique repository identifier.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RepositoryId *string `pulumi:"repositoryId"`
}

type RepositoryProtectedBranchManagementState struct {
	// Name of a branch to protect.
	BranchName pulumi.StringPtrInput
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// Level of protection to add on a branch.
	ProtectionLevels pulumi.StringArrayInput
	// Unique repository identifier.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RepositoryId pulumi.StringPtrInput
}

func (RepositoryProtectedBranchManagementState) ElementType() reflect.Type {
	return reflect.TypeOf((*repositoryProtectedBranchManagementState)(nil)).Elem()
}

type repositoryProtectedBranchManagementArgs struct {
	// Name of a branch to protect.
	BranchName string `pulumi:"branchName"`
	// Level of protection to add on a branch.
	ProtectionLevels []string `pulumi:"protectionLevels"`
	// Unique repository identifier.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RepositoryId string `pulumi:"repositoryId"`
}

// The set of arguments for constructing a RepositoryProtectedBranchManagement resource.
type RepositoryProtectedBranchManagementArgs struct {
	// Name of a branch to protect.
	BranchName pulumi.StringInput
	// Level of protection to add on a branch.
	ProtectionLevels pulumi.StringArrayInput
	// Unique repository identifier.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	RepositoryId pulumi.StringInput
}

func (RepositoryProtectedBranchManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*repositoryProtectedBranchManagementArgs)(nil)).Elem()
}

type RepositoryProtectedBranchManagementInput interface {
	pulumi.Input

	ToRepositoryProtectedBranchManagementOutput() RepositoryProtectedBranchManagementOutput
	ToRepositoryProtectedBranchManagementOutputWithContext(ctx context.Context) RepositoryProtectedBranchManagementOutput
}

func (*RepositoryProtectedBranchManagement) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryProtectedBranchManagement)(nil)).Elem()
}

func (i *RepositoryProtectedBranchManagement) ToRepositoryProtectedBranchManagementOutput() RepositoryProtectedBranchManagementOutput {
	return i.ToRepositoryProtectedBranchManagementOutputWithContext(context.Background())
}

func (i *RepositoryProtectedBranchManagement) ToRepositoryProtectedBranchManagementOutputWithContext(ctx context.Context) RepositoryProtectedBranchManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryProtectedBranchManagementOutput)
}

// RepositoryProtectedBranchManagementArrayInput is an input type that accepts RepositoryProtectedBranchManagementArray and RepositoryProtectedBranchManagementArrayOutput values.
// You can construct a concrete instance of `RepositoryProtectedBranchManagementArrayInput` via:
//
//	RepositoryProtectedBranchManagementArray{ RepositoryProtectedBranchManagementArgs{...} }
type RepositoryProtectedBranchManagementArrayInput interface {
	pulumi.Input

	ToRepositoryProtectedBranchManagementArrayOutput() RepositoryProtectedBranchManagementArrayOutput
	ToRepositoryProtectedBranchManagementArrayOutputWithContext(context.Context) RepositoryProtectedBranchManagementArrayOutput
}

type RepositoryProtectedBranchManagementArray []RepositoryProtectedBranchManagementInput

func (RepositoryProtectedBranchManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RepositoryProtectedBranchManagement)(nil)).Elem()
}

func (i RepositoryProtectedBranchManagementArray) ToRepositoryProtectedBranchManagementArrayOutput() RepositoryProtectedBranchManagementArrayOutput {
	return i.ToRepositoryProtectedBranchManagementArrayOutputWithContext(context.Background())
}

func (i RepositoryProtectedBranchManagementArray) ToRepositoryProtectedBranchManagementArrayOutputWithContext(ctx context.Context) RepositoryProtectedBranchManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryProtectedBranchManagementArrayOutput)
}

// RepositoryProtectedBranchManagementMapInput is an input type that accepts RepositoryProtectedBranchManagementMap and RepositoryProtectedBranchManagementMapOutput values.
// You can construct a concrete instance of `RepositoryProtectedBranchManagementMapInput` via:
//
//	RepositoryProtectedBranchManagementMap{ "key": RepositoryProtectedBranchManagementArgs{...} }
type RepositoryProtectedBranchManagementMapInput interface {
	pulumi.Input

	ToRepositoryProtectedBranchManagementMapOutput() RepositoryProtectedBranchManagementMapOutput
	ToRepositoryProtectedBranchManagementMapOutputWithContext(context.Context) RepositoryProtectedBranchManagementMapOutput
}

type RepositoryProtectedBranchManagementMap map[string]RepositoryProtectedBranchManagementInput

func (RepositoryProtectedBranchManagementMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RepositoryProtectedBranchManagement)(nil)).Elem()
}

func (i RepositoryProtectedBranchManagementMap) ToRepositoryProtectedBranchManagementMapOutput() RepositoryProtectedBranchManagementMapOutput {
	return i.ToRepositoryProtectedBranchManagementMapOutputWithContext(context.Background())
}

func (i RepositoryProtectedBranchManagementMap) ToRepositoryProtectedBranchManagementMapOutputWithContext(ctx context.Context) RepositoryProtectedBranchManagementMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryProtectedBranchManagementMapOutput)
}

type RepositoryProtectedBranchManagementOutput struct{ *pulumi.OutputState }

func (RepositoryProtectedBranchManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryProtectedBranchManagement)(nil)).Elem()
}

func (o RepositoryProtectedBranchManagementOutput) ToRepositoryProtectedBranchManagementOutput() RepositoryProtectedBranchManagementOutput {
	return o
}

func (o RepositoryProtectedBranchManagementOutput) ToRepositoryProtectedBranchManagementOutputWithContext(ctx context.Context) RepositoryProtectedBranchManagementOutput {
	return o
}

// Name of a branch to protect.
func (o RepositoryProtectedBranchManagementOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v *RepositoryProtectedBranchManagement) pulumi.StringOutput { return v.BranchName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
func (o RepositoryProtectedBranchManagementOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RepositoryProtectedBranchManagement) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Level of protection to add on a branch.
func (o RepositoryProtectedBranchManagementOutput) ProtectionLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RepositoryProtectedBranchManagement) pulumi.StringArrayOutput { return v.ProtectionLevels }).(pulumi.StringArrayOutput)
}

// Unique repository identifier.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o RepositoryProtectedBranchManagementOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *RepositoryProtectedBranchManagement) pulumi.StringOutput { return v.RepositoryId }).(pulumi.StringOutput)
}

type RepositoryProtectedBranchManagementArrayOutput struct{ *pulumi.OutputState }

func (RepositoryProtectedBranchManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RepositoryProtectedBranchManagement)(nil)).Elem()
}

func (o RepositoryProtectedBranchManagementArrayOutput) ToRepositoryProtectedBranchManagementArrayOutput() RepositoryProtectedBranchManagementArrayOutput {
	return o
}

func (o RepositoryProtectedBranchManagementArrayOutput) ToRepositoryProtectedBranchManagementArrayOutputWithContext(ctx context.Context) RepositoryProtectedBranchManagementArrayOutput {
	return o
}

func (o RepositoryProtectedBranchManagementArrayOutput) Index(i pulumi.IntInput) RepositoryProtectedBranchManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RepositoryProtectedBranchManagement {
		return vs[0].([]*RepositoryProtectedBranchManagement)[vs[1].(int)]
	}).(RepositoryProtectedBranchManagementOutput)
}

type RepositoryProtectedBranchManagementMapOutput struct{ *pulumi.OutputState }

func (RepositoryProtectedBranchManagementMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RepositoryProtectedBranchManagement)(nil)).Elem()
}

func (o RepositoryProtectedBranchManagementMapOutput) ToRepositoryProtectedBranchManagementMapOutput() RepositoryProtectedBranchManagementMapOutput {
	return o
}

func (o RepositoryProtectedBranchManagementMapOutput) ToRepositoryProtectedBranchManagementMapOutputWithContext(ctx context.Context) RepositoryProtectedBranchManagementMapOutput {
	return o
}

func (o RepositoryProtectedBranchManagementMapOutput) MapIndex(k pulumi.StringInput) RepositoryProtectedBranchManagementOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RepositoryProtectedBranchManagement {
		return vs[0].(map[string]*RepositoryProtectedBranchManagement)[vs[1].(string)]
	}).(RepositoryProtectedBranchManagementOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryProtectedBranchManagementInput)(nil)).Elem(), &RepositoryProtectedBranchManagement{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryProtectedBranchManagementArrayInput)(nil)).Elem(), RepositoryProtectedBranchManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryProtectedBranchManagementMapInput)(nil)).Elem(), RepositoryProtectedBranchManagementMap{})
	pulumi.RegisterOutputType(RepositoryProtectedBranchManagementOutput{})
	pulumi.RegisterOutputType(RepositoryProtectedBranchManagementArrayOutput{})
	pulumi.RegisterOutputType(RepositoryProtectedBranchManagementMapOutput{})
}
