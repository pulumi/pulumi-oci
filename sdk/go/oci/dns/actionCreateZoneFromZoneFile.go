// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Action Create Zone From Zone File resource in Oracle Cloud Infrastructure DNS service.
//
// Creates a new zone from a zone file in the specified compartment.
//
// After the zone has been created, it should be further managed by importing it to an `Dns.Zone` resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/Dns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dns.NewActionCreateZoneFromZoneFile(ctx, "test_action_create_zone_from_zone_file", &Dns.ActionCreateZoneFromZoneFileArgs{
//				CreateZoneFromZoneFileDetails: pulumi.Any(actionCreateZoneFromZoneFileCreateZoneFromZoneFileDetails),
//				CompartmentId:                 pulumi.Any(compartmentId),
//				Scope:                         pulumi.Any(actionCreateZoneFromZoneFileScope),
//				ViewId:                        pulumi.Any(testView.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ActionCreateZoneFromZoneFile can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Dns/actionCreateZoneFromZoneFile:ActionCreateZoneFromZoneFile test_action_create_zone_from_zone_file "id"
// ```
type ActionCreateZoneFromZoneFile struct {
	pulumi.CustomResourceState

	// The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// The zone file contents.
	CreateZoneFromZoneFileDetails pulumi.StringOutput `pulumi:"createZoneFromZoneFileDetails"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
	ExternalDownstreams ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput `pulumi:"externalDownstreams"`
	// External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
	ExternalMasters ActionCreateZoneFromZoneFileExternalMasterArrayOutput `pulumi:"externalMasters"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected pulumi.BoolOutput `pulumi:"isProtected"`
	// The name of the zone.
	Name pulumi.StringOutput `pulumi:"name"`
	// The authoritative nameservers for the zone.
	Nameservers ActionCreateZoneFromZoneFileNameserverArrayOutput `pulumi:"nameservers"`
	// Specifies to operate only on resources that have a matching DNS scope.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringOutput `pulumi:"self"`
	// The current serial of the zone. As seen in the zone's SOA record.
	Serial pulumi.StringOutput `pulumi:"serial"`
	// The current state of the zone resource.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
	Version pulumi.StringOutput `pulumi:"version"`
	// The OCID of the view the resource is associated with.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ViewId pulumi.StringOutput `pulumi:"viewId"`
	// The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
	ZoneTransferServers ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput `pulumi:"zoneTransferServers"`
	// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
	ZoneType pulumi.StringOutput `pulumi:"zoneType"`
}

// NewActionCreateZoneFromZoneFile registers a new resource with the given unique name, arguments, and options.
func NewActionCreateZoneFromZoneFile(ctx *pulumi.Context,
	name string, args *ActionCreateZoneFromZoneFileArgs, opts ...pulumi.ResourceOption) (*ActionCreateZoneFromZoneFile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.CreateZoneFromZoneFileDetails == nil {
		return nil, errors.New("invalid value for required argument 'CreateZoneFromZoneFileDetails'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ActionCreateZoneFromZoneFile
	err := ctx.RegisterResource("oci:Dns/actionCreateZoneFromZoneFile:ActionCreateZoneFromZoneFile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetActionCreateZoneFromZoneFile gets an existing ActionCreateZoneFromZoneFile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActionCreateZoneFromZoneFile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ActionCreateZoneFromZoneFileState, opts ...pulumi.ResourceOption) (*ActionCreateZoneFromZoneFile, error) {
	var resource ActionCreateZoneFromZoneFile
	err := ctx.ReadResource("oci:Dns/actionCreateZoneFromZoneFile:ActionCreateZoneFromZoneFile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ActionCreateZoneFromZoneFile resources.
type actionCreateZoneFromZoneFileState struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId *string `pulumi:"compartmentId"`
	// The zone file contents.
	CreateZoneFromZoneFileDetails *string `pulumi:"createZoneFromZoneFileDetails"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
	ExternalDownstreams []ActionCreateZoneFromZoneFileExternalDownstream `pulumi:"externalDownstreams"`
	// External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
	ExternalMasters []ActionCreateZoneFromZoneFileExternalMaster `pulumi:"externalMasters"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected *bool `pulumi:"isProtected"`
	// The name of the zone.
	Name *string `pulumi:"name"`
	// The authoritative nameservers for the zone.
	Nameservers []ActionCreateZoneFromZoneFileNameserver `pulumi:"nameservers"`
	// Specifies to operate only on resources that have a matching DNS scope.
	Scope *string `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self *string `pulumi:"self"`
	// The current serial of the zone. As seen in the zone's SOA record.
	Serial *string `pulumi:"serial"`
	// The current state of the zone resource.
	State *string `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
	Version *string `pulumi:"version"`
	// The OCID of the view the resource is associated with.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ViewId *string `pulumi:"viewId"`
	// The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
	ZoneTransferServers []ActionCreateZoneFromZoneFileZoneTransferServer `pulumi:"zoneTransferServers"`
	// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
	ZoneType *string `pulumi:"zoneType"`
}

type ActionCreateZoneFromZoneFileState struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringPtrInput
	// The zone file contents.
	CreateZoneFromZoneFileDetails pulumi.StringPtrInput
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapInput
	// External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
	ExternalDownstreams ActionCreateZoneFromZoneFileExternalDownstreamArrayInput
	// External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
	ExternalMasters ActionCreateZoneFromZoneFileExternalMasterArrayInput
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags pulumi.StringMapInput
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected pulumi.BoolPtrInput
	// The name of the zone.
	Name pulumi.StringPtrInput
	// The authoritative nameservers for the zone.
	Nameservers ActionCreateZoneFromZoneFileNameserverArrayInput
	// Specifies to operate only on resources that have a matching DNS scope.
	Scope pulumi.StringPtrInput
	// The canonical absolute URL of the resource.
	Self pulumi.StringPtrInput
	// The current serial of the zone. As seen in the zone's SOA record.
	Serial pulumi.StringPtrInput
	// The current state of the zone resource.
	State pulumi.StringPtrInput
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringPtrInput
	// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
	Version pulumi.StringPtrInput
	// The OCID of the view the resource is associated with.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ViewId pulumi.StringPtrInput
	// The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
	ZoneTransferServers ActionCreateZoneFromZoneFileZoneTransferServerArrayInput
	// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
	ZoneType pulumi.StringPtrInput
}

func (ActionCreateZoneFromZoneFileState) ElementType() reflect.Type {
	return reflect.TypeOf((*actionCreateZoneFromZoneFileState)(nil)).Elem()
}

type actionCreateZoneFromZoneFileArgs struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// The zone file contents.
	CreateZoneFromZoneFileDetails string `pulumi:"createZoneFromZoneFileDetails"`
	// Specifies to operate only on resources that have a matching DNS scope.
	Scope *string `pulumi:"scope"`
	// The OCID of the view the resource is associated with.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ViewId *string `pulumi:"viewId"`
}

// The set of arguments for constructing a ActionCreateZoneFromZoneFile resource.
type ActionCreateZoneFromZoneFileArgs struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringInput
	// The zone file contents.
	CreateZoneFromZoneFileDetails pulumi.StringInput
	// Specifies to operate only on resources that have a matching DNS scope.
	Scope pulumi.StringPtrInput
	// The OCID of the view the resource is associated with.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ViewId pulumi.StringPtrInput
}

func (ActionCreateZoneFromZoneFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*actionCreateZoneFromZoneFileArgs)(nil)).Elem()
}

type ActionCreateZoneFromZoneFileInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileOutput() ActionCreateZoneFromZoneFileOutput
	ToActionCreateZoneFromZoneFileOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileOutput
}

func (*ActionCreateZoneFromZoneFile) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionCreateZoneFromZoneFile)(nil)).Elem()
}

func (i *ActionCreateZoneFromZoneFile) ToActionCreateZoneFromZoneFileOutput() ActionCreateZoneFromZoneFileOutput {
	return i.ToActionCreateZoneFromZoneFileOutputWithContext(context.Background())
}

func (i *ActionCreateZoneFromZoneFile) ToActionCreateZoneFromZoneFileOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileOutput)
}

// ActionCreateZoneFromZoneFileArrayInput is an input type that accepts ActionCreateZoneFromZoneFileArray and ActionCreateZoneFromZoneFileArrayOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileArrayInput` via:
//
//	ActionCreateZoneFromZoneFileArray{ ActionCreateZoneFromZoneFileArgs{...} }
type ActionCreateZoneFromZoneFileArrayInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileArrayOutput() ActionCreateZoneFromZoneFileArrayOutput
	ToActionCreateZoneFromZoneFileArrayOutputWithContext(context.Context) ActionCreateZoneFromZoneFileArrayOutput
}

type ActionCreateZoneFromZoneFileArray []ActionCreateZoneFromZoneFileInput

func (ActionCreateZoneFromZoneFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ActionCreateZoneFromZoneFile)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileArray) ToActionCreateZoneFromZoneFileArrayOutput() ActionCreateZoneFromZoneFileArrayOutput {
	return i.ToActionCreateZoneFromZoneFileArrayOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileArray) ToActionCreateZoneFromZoneFileArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileArrayOutput)
}

// ActionCreateZoneFromZoneFileMapInput is an input type that accepts ActionCreateZoneFromZoneFileMap and ActionCreateZoneFromZoneFileMapOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileMapInput` via:
//
//	ActionCreateZoneFromZoneFileMap{ "key": ActionCreateZoneFromZoneFileArgs{...} }
type ActionCreateZoneFromZoneFileMapInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileMapOutput() ActionCreateZoneFromZoneFileMapOutput
	ToActionCreateZoneFromZoneFileMapOutputWithContext(context.Context) ActionCreateZoneFromZoneFileMapOutput
}

type ActionCreateZoneFromZoneFileMap map[string]ActionCreateZoneFromZoneFileInput

func (ActionCreateZoneFromZoneFileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ActionCreateZoneFromZoneFile)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileMap) ToActionCreateZoneFromZoneFileMapOutput() ActionCreateZoneFromZoneFileMapOutput {
	return i.ToActionCreateZoneFromZoneFileMapOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileMap) ToActionCreateZoneFromZoneFileMapOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileMapOutput)
}

type ActionCreateZoneFromZoneFileOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionCreateZoneFromZoneFile)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileOutput) ToActionCreateZoneFromZoneFileOutput() ActionCreateZoneFromZoneFileOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileOutput) ToActionCreateZoneFromZoneFileOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileOutput {
	return o
}

// The OCID of the compartment the resource belongs to.
func (o ActionCreateZoneFromZoneFileOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// The zone file contents.
func (o ActionCreateZoneFromZoneFileOutput) CreateZoneFromZoneFileDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringOutput { return v.CreateZoneFromZoneFileDetails }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o ActionCreateZoneFromZoneFileOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
func (o ActionCreateZoneFromZoneFileOutput) ExternalDownstreams() ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput {
		return v.ExternalDownstreams
	}).(ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput)
}

// External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
func (o ActionCreateZoneFromZoneFileOutput) ExternalMasters() ActionCreateZoneFromZoneFileExternalMasterArrayOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) ActionCreateZoneFromZoneFileExternalMasterArrayOutput {
		return v.ExternalMasters
	}).(ActionCreateZoneFromZoneFileExternalMasterArrayOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o ActionCreateZoneFromZoneFileOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
func (o ActionCreateZoneFromZoneFileOutput) IsProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.BoolOutput { return v.IsProtected }).(pulumi.BoolOutput)
}

// The name of the zone.
func (o ActionCreateZoneFromZoneFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The authoritative nameservers for the zone.
func (o ActionCreateZoneFromZoneFileOutput) Nameservers() ActionCreateZoneFromZoneFileNameserverArrayOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) ActionCreateZoneFromZoneFileNameserverArrayOutput {
		return v.Nameservers
	}).(ActionCreateZoneFromZoneFileNameserverArrayOutput)
}

// Specifies to operate only on resources that have a matching DNS scope.
func (o ActionCreateZoneFromZoneFileOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

// The canonical absolute URL of the resource.
func (o ActionCreateZoneFromZoneFileOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringOutput { return v.Self }).(pulumi.StringOutput)
}

// The current serial of the zone. As seen in the zone's SOA record.
func (o ActionCreateZoneFromZoneFileOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringOutput { return v.Serial }).(pulumi.StringOutput)
}

// The current state of the zone resource.
func (o ActionCreateZoneFromZoneFileOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o ActionCreateZoneFromZoneFileOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
func (o ActionCreateZoneFromZoneFileOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

// The OCID of the view the resource is associated with.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ActionCreateZoneFromZoneFileOutput) ViewId() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringOutput { return v.ViewId }).(pulumi.StringOutput)
}

// The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
func (o ActionCreateZoneFromZoneFileOutput) ZoneTransferServers() ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput {
		return v.ZoneTransferServers
	}).(ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput)
}

// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
func (o ActionCreateZoneFromZoneFileOutput) ZoneType() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionCreateZoneFromZoneFile) pulumi.StringOutput { return v.ZoneType }).(pulumi.StringOutput)
}

type ActionCreateZoneFromZoneFileArrayOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ActionCreateZoneFromZoneFile)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileArrayOutput) ToActionCreateZoneFromZoneFileArrayOutput() ActionCreateZoneFromZoneFileArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileArrayOutput) ToActionCreateZoneFromZoneFileArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileArrayOutput) Index(i pulumi.IntInput) ActionCreateZoneFromZoneFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ActionCreateZoneFromZoneFile {
		return vs[0].([]*ActionCreateZoneFromZoneFile)[vs[1].(int)]
	}).(ActionCreateZoneFromZoneFileOutput)
}

type ActionCreateZoneFromZoneFileMapOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ActionCreateZoneFromZoneFile)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileMapOutput) ToActionCreateZoneFromZoneFileMapOutput() ActionCreateZoneFromZoneFileMapOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileMapOutput) ToActionCreateZoneFromZoneFileMapOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileMapOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileMapOutput) MapIndex(k pulumi.StringInput) ActionCreateZoneFromZoneFileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ActionCreateZoneFromZoneFile {
		return vs[0].(map[string]*ActionCreateZoneFromZoneFile)[vs[1].(string)]
	}).(ActionCreateZoneFromZoneFileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileInput)(nil)).Elem(), &ActionCreateZoneFromZoneFile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileArrayInput)(nil)).Elem(), ActionCreateZoneFromZoneFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileMapInput)(nil)).Elem(), ActionCreateZoneFromZoneFileMap{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileArrayOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileMapOutput{})
}
