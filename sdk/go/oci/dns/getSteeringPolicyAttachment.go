// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Steering Policy Attachment resource in Oracle Cloud Infrastructure DNS service.
//
// Gets information about the specified steering policy attachment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/dns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dns.GetSteeringPolicyAttachment(ctx, &dns.GetSteeringPolicyAttachmentArgs{
//				SteeringPolicyAttachmentId: testSteeringPolicyAttachmentOciDnsSteeringPolicyAttachment.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSteeringPolicyAttachment(ctx *pulumi.Context, args *LookupSteeringPolicyAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupSteeringPolicyAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSteeringPolicyAttachmentResult
	err := ctx.Invoke("oci:Dns/getSteeringPolicyAttachment:getSteeringPolicyAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSteeringPolicyAttachment.
type LookupSteeringPolicyAttachmentArgs struct {
	// The OCID of the target steering policy attachment.
	SteeringPolicyAttachmentId string `pulumi:"steeringPolicyAttachmentId"`
}

// A collection of values returned by getSteeringPolicyAttachment.
type LookupSteeringPolicyAttachmentResult struct {
	// The OCID of the compartment containing the steering policy attachment.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// The attached domain within the attached zone.
	DomainName string `pulumi:"domainName"`
	// The OCID of the resource.
	Id string `pulumi:"id"`
	// The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
	Rtypes []string `pulumi:"rtypes"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The current state of the resource.
	State                      string `pulumi:"state"`
	SteeringPolicyAttachmentId string `pulumi:"steeringPolicyAttachmentId"`
	// The OCID of the attached steering policy.
	SteeringPolicyId string `pulumi:"steeringPolicyId"`
	// The date and time the resource was created, expressed in RFC 3339 timestamp format.
	TimeCreated string `pulumi:"timeCreated"`
	// The OCID of the attached zone.
	ZoneId string `pulumi:"zoneId"`
}

func LookupSteeringPolicyAttachmentOutput(ctx *pulumi.Context, args LookupSteeringPolicyAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupSteeringPolicyAttachmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSteeringPolicyAttachmentResultOutput, error) {
			args := v.(LookupSteeringPolicyAttachmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Dns/getSteeringPolicyAttachment:getSteeringPolicyAttachment", args, LookupSteeringPolicyAttachmentResultOutput{}, options).(LookupSteeringPolicyAttachmentResultOutput), nil
		}).(LookupSteeringPolicyAttachmentResultOutput)
}

// A collection of arguments for invoking getSteeringPolicyAttachment.
type LookupSteeringPolicyAttachmentOutputArgs struct {
	// The OCID of the target steering policy attachment.
	SteeringPolicyAttachmentId pulumi.StringInput `pulumi:"steeringPolicyAttachmentId"`
}

func (LookupSteeringPolicyAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSteeringPolicyAttachmentArgs)(nil)).Elem()
}

// A collection of values returned by getSteeringPolicyAttachment.
type LookupSteeringPolicyAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupSteeringPolicyAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSteeringPolicyAttachmentResult)(nil)).Elem()
}

func (o LookupSteeringPolicyAttachmentResultOutput) ToLookupSteeringPolicyAttachmentResultOutput() LookupSteeringPolicyAttachmentResultOutput {
	return o
}

func (o LookupSteeringPolicyAttachmentResultOutput) ToLookupSteeringPolicyAttachmentResultOutputWithContext(ctx context.Context) LookupSteeringPolicyAttachmentResultOutput {
	return o
}

// The OCID of the compartment containing the steering policy attachment.
func (o LookupSteeringPolicyAttachmentResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSteeringPolicyAttachmentResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
func (o LookupSteeringPolicyAttachmentResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSteeringPolicyAttachmentResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The attached domain within the attached zone.
func (o LookupSteeringPolicyAttachmentResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSteeringPolicyAttachmentResult) string { return v.DomainName }).(pulumi.StringOutput)
}

// The OCID of the resource.
func (o LookupSteeringPolicyAttachmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSteeringPolicyAttachmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
func (o LookupSteeringPolicyAttachmentResultOutput) Rtypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSteeringPolicyAttachmentResult) []string { return v.Rtypes }).(pulumi.StringArrayOutput)
}

// The canonical absolute URL of the resource.
func (o LookupSteeringPolicyAttachmentResultOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSteeringPolicyAttachmentResult) string { return v.Self }).(pulumi.StringOutput)
}

// The current state of the resource.
func (o LookupSteeringPolicyAttachmentResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSteeringPolicyAttachmentResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupSteeringPolicyAttachmentResultOutput) SteeringPolicyAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSteeringPolicyAttachmentResult) string { return v.SteeringPolicyAttachmentId }).(pulumi.StringOutput)
}

// The OCID of the attached steering policy.
func (o LookupSteeringPolicyAttachmentResultOutput) SteeringPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSteeringPolicyAttachmentResult) string { return v.SteeringPolicyId }).(pulumi.StringOutput)
}

// The date and time the resource was created, expressed in RFC 3339 timestamp format.
func (o LookupSteeringPolicyAttachmentResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSteeringPolicyAttachmentResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The OCID of the attached zone.
func (o LookupSteeringPolicyAttachmentResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSteeringPolicyAttachmentResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSteeringPolicyAttachmentResultOutput{})
}
