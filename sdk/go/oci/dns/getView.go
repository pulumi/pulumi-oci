// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific View resource in Oracle Cloud Infrastructure DNS service.
//
// Gets information about a specific view. Note that attempting to get a
// view in the DELETED lifecycleState will result in a `404` response to be
// consistent with other operations of the API. Requires a `PRIVATE` scope query parameter.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Dns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dns.GetView(ctx, &dns.GetViewArgs{
//				ViewId: pulumi.StringRef(testViewOciDnsView.Id),
//				Scope:  pulumi.StringRef("PRIVATE"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupView(ctx *pulumi.Context, args *LookupViewArgs, opts ...pulumi.InvokeOption) (*LookupViewResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupViewResult
	err := ctx.Invoke("oci:Dns/getView:getView", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getView.
type LookupViewArgs struct {
	// Value must be `PRIVATE` when listing views for private zones.
	Scope *string `pulumi:"scope"`
	// The OCID of the target view.
	ViewId *string `pulumi:"viewId"`
}

// A collection of values returned by getView.
type LookupViewResult struct {
	// The OCID of the owning compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// The display name of the view.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The OCID of the view.
	Id string `pulumi:"id"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected bool    `pulumi:"isProtected"`
	Scope       *string `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The current state of the resource.
	State string `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated string  `pulumi:"timeUpdated"`
	ViewId      *string `pulumi:"viewId"`
}

func LookupViewOutput(ctx *pulumi.Context, args LookupViewOutputArgs, opts ...pulumi.InvokeOption) LookupViewResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupViewResult, error) {
			args := v.(LookupViewArgs)
			r, err := LookupView(ctx, &args, opts...)
			var s LookupViewResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupViewResultOutput)
}

// A collection of arguments for invoking getView.
type LookupViewOutputArgs struct {
	// Value must be `PRIVATE` when listing views for private zones.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The OCID of the target view.
	ViewId pulumi.StringPtrInput `pulumi:"viewId"`
}

func (LookupViewOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupViewArgs)(nil)).Elem()
}

// A collection of values returned by getView.
type LookupViewResultOutput struct{ *pulumi.OutputState }

func (LookupViewResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupViewResult)(nil)).Elem()
}

func (o LookupViewResultOutput) ToLookupViewResultOutput() LookupViewResultOutput {
	return o
}

func (o LookupViewResultOutput) ToLookupViewResultOutputWithContext(ctx context.Context) LookupViewResultOutput {
	return o
}

// The OCID of the owning compartment.
func (o LookupViewResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupViewResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o LookupViewResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupViewResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// The display name of the view.
func (o LookupViewResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupViewResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o LookupViewResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupViewResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// The OCID of the view.
func (o LookupViewResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupViewResult) string { return v.Id }).(pulumi.StringOutput)
}

// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
func (o LookupViewResultOutput) IsProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupViewResult) bool { return v.IsProtected }).(pulumi.BoolOutput)
}

func (o LookupViewResultOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupViewResult) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The canonical absolute URL of the resource.
func (o LookupViewResultOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v LookupViewResult) string { return v.Self }).(pulumi.StringOutput)
}

// The current state of the resource.
func (o LookupViewResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupViewResult) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o LookupViewResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupViewResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o LookupViewResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupViewResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func (o LookupViewResultOutput) ViewId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupViewResult) *string { return v.ViewId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupViewResultOutput{})
}
