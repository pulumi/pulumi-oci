// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Zones in Oracle Cloud Infrastructure DNS service.
//
// Gets a list of all zones in the specified compartment.
//
// The collection can be filtered by name, time created, scope, associated view, and zone type.
// Filtering by view is only supported for private zones.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/dns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dns.GetZones(ctx, &dns.GetZonesArgs{
//				CompartmentId:                   compartmentId,
//				DnssecState:                     pulumi.StringRef(zoneDnssecState),
//				Name:                            pulumi.StringRef(zoneName),
//				NameContains:                    pulumi.StringRef(zoneNameContains),
//				Scope:                           pulumi.StringRef(zoneScope),
//				State:                           pulumi.StringRef(zoneState),
//				TimeCreatedGreaterThanOrEqualTo: pulumi.StringRef(zoneTimeCreatedGreaterThanOrEqualTo),
//				TimeCreatedLessThan:             pulumi.StringRef(zoneTimeCreatedLessThan),
//				TsigKeyId:                       pulumi.StringRef(testTsigKey.Id),
//				ViewId:                          pulumi.StringRef(testView.Id),
//				ZoneType:                        pulumi.StringRef(zoneZoneType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetZones(ctx *pulumi.Context, args *GetZonesArgs, opts ...pulumi.InvokeOption) (*GetZonesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetZonesResult
	err := ctx.Invoke("oci:Dns/getZones:getZones", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZones.
type GetZonesArgs struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// Search for zones that have the given `DnssecState`.
	DnssecState *string          `pulumi:"dnssecState"`
	Filters     []GetZonesFilter `pulumi:"filters"`
	// A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
	Name *string `pulumi:"name"`
	// Search by zone name. Will match any zone whose name (case-insensitive) contains the provided value.
	NameContains *string `pulumi:"nameContains"`
	// Specifies to operate only on resources that have a matching DNS scope.
	Scope *string `pulumi:"scope"`
	// The field by which to sort zones. Allowed values are: name|zoneType|timeCreated
	SortBy *string `pulumi:"sortBy"`
	// The order to sort the resources. Allowed values are: ASC|DESC
	SortOrder *string `pulumi:"sortOrder"`
	// The state of a resource.
	State *string `pulumi:"state"`
	// An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created on or after the indicated time.
	TimeCreatedGreaterThanOrEqualTo *string `pulumi:"timeCreatedGreaterThanOrEqualTo"`
	// An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created before the indicated time.
	TimeCreatedLessThan *string `pulumi:"timeCreatedLessThan"`
	// Search for zones that are associated with a TSIG key.
	TsigKeyId *string `pulumi:"tsigKeyId"`
	// The OCID of the view the resource is associated with.
	ViewId *string `pulumi:"viewId"`
	// Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
	ZoneType *string `pulumi:"zoneType"`
}

// A collection of values returned by getZones.
type GetZonesResult struct {
	// The OCID of the compartment containing the zone.
	CompartmentId string `pulumi:"compartmentId"`
	// The state of DNSSEC on the zone.
	DnssecState *string          `pulumi:"dnssecState"`
	Filters     []GetZonesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the zone.
	Name         *string `pulumi:"name"`
	NameContains *string `pulumi:"nameContains"`
	// The scope of the zone.
	Scope     *string `pulumi:"scope"`
	SortBy    *string `pulumi:"sortBy"`
	SortOrder *string `pulumi:"sortOrder"`
	// The current state of the zone resource.
	State                           *string `pulumi:"state"`
	TimeCreatedGreaterThanOrEqualTo *string `pulumi:"timeCreatedGreaterThanOrEqualTo"`
	TimeCreatedLessThan             *string `pulumi:"timeCreatedLessThan"`
	// The OCID of the TSIG key.
	TsigKeyId *string `pulumi:"tsigKeyId"`
	// The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
	ViewId *string `pulumi:"viewId"`
	// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
	ZoneType *string `pulumi:"zoneType"`
	// The list of zones.
	Zones []GetZonesZone `pulumi:"zones"`
}

func GetZonesOutput(ctx *pulumi.Context, args GetZonesOutputArgs, opts ...pulumi.InvokeOption) GetZonesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetZonesResultOutput, error) {
			args := v.(GetZonesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:Dns/getZones:getZones", args, GetZonesResultOutput{}, options).(GetZonesResultOutput), nil
		}).(GetZonesResultOutput)
}

// A collection of arguments for invoking getZones.
type GetZonesOutputArgs struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Search for zones that have the given `DnssecState`.
	DnssecState pulumi.StringPtrInput    `pulumi:"dnssecState"`
	Filters     GetZonesFilterArrayInput `pulumi:"filters"`
	// A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Search by zone name. Will match any zone whose name (case-insensitive) contains the provided value.
	NameContains pulumi.StringPtrInput `pulumi:"nameContains"`
	// Specifies to operate only on resources that have a matching DNS scope.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The field by which to sort zones. Allowed values are: name|zoneType|timeCreated
	SortBy pulumi.StringPtrInput `pulumi:"sortBy"`
	// The order to sort the resources. Allowed values are: ASC|DESC
	SortOrder pulumi.StringPtrInput `pulumi:"sortOrder"`
	// The state of a resource.
	State pulumi.StringPtrInput `pulumi:"state"`
	// An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created on or after the indicated time.
	TimeCreatedGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeCreatedGreaterThanOrEqualTo"`
	// An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created before the indicated time.
	TimeCreatedLessThan pulumi.StringPtrInput `pulumi:"timeCreatedLessThan"`
	// Search for zones that are associated with a TSIG key.
	TsigKeyId pulumi.StringPtrInput `pulumi:"tsigKeyId"`
	// The OCID of the view the resource is associated with.
	ViewId pulumi.StringPtrInput `pulumi:"viewId"`
	// Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
	ZoneType pulumi.StringPtrInput `pulumi:"zoneType"`
}

func (GetZonesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesArgs)(nil)).Elem()
}

// A collection of values returned by getZones.
type GetZonesResultOutput struct{ *pulumi.OutputState }

func (GetZonesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesResult)(nil)).Elem()
}

func (o GetZonesResultOutput) ToGetZonesResultOutput() GetZonesResultOutput {
	return o
}

func (o GetZonesResultOutput) ToGetZonesResultOutputWithContext(ctx context.Context) GetZonesResultOutput {
	return o
}

// The OCID of the compartment containing the zone.
func (o GetZonesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The state of DNSSEC on the zone.
func (o GetZonesResultOutput) DnssecState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.DnssecState }).(pulumi.StringPtrOutput)
}

func (o GetZonesResultOutput) Filters() GetZonesFilterArrayOutput {
	return o.ApplyT(func(v GetZonesResult) []GetZonesFilter { return v.Filters }).(GetZonesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetZonesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the zone.
func (o GetZonesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetZonesResultOutput) NameContains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.NameContains }).(pulumi.StringPtrOutput)
}

// The scope of the zone.
func (o GetZonesResultOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o GetZonesResultOutput) SortBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.SortBy }).(pulumi.StringPtrOutput)
}

func (o GetZonesResultOutput) SortOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.SortOrder }).(pulumi.StringPtrOutput)
}

// The current state of the zone resource.
func (o GetZonesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetZonesResultOutput) TimeCreatedGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.TimeCreatedGreaterThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetZonesResultOutput) TimeCreatedLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.TimeCreatedLessThan }).(pulumi.StringPtrOutput)
}

// The OCID of the TSIG key.
func (o GetZonesResultOutput) TsigKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.TsigKeyId }).(pulumi.StringPtrOutput)
}

// The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
func (o GetZonesResultOutput) ViewId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.ViewId }).(pulumi.StringPtrOutput)
}

// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
func (o GetZonesResultOutput) ZoneType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesResult) *string { return v.ZoneType }).(pulumi.StringPtrOutput)
}

// The list of zones.
func (o GetZonesResultOutput) Zones() GetZonesZoneArrayOutput {
	return o.ApplyT(func(v GetZonesResult) []GetZonesZone { return v.Zones }).(GetZonesZoneArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZonesResultOutput{})
}
