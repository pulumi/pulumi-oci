// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ActionCreateZoneFromZoneFileDnssecConfig struct {
	KskDnssecKeyVersions []ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion `pulumi:"kskDnssecKeyVersions"`
	ZskDnssecKeyVersions []ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion `pulumi:"zskDnssecKeyVersions"`
}

// ActionCreateZoneFromZoneFileDnssecConfigInput is an input type that accepts ActionCreateZoneFromZoneFileDnssecConfigArgs and ActionCreateZoneFromZoneFileDnssecConfigOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileDnssecConfigInput` via:
//
//	ActionCreateZoneFromZoneFileDnssecConfigArgs{...}
type ActionCreateZoneFromZoneFileDnssecConfigInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileDnssecConfigOutput() ActionCreateZoneFromZoneFileDnssecConfigOutput
	ToActionCreateZoneFromZoneFileDnssecConfigOutputWithContext(context.Context) ActionCreateZoneFromZoneFileDnssecConfigOutput
}

type ActionCreateZoneFromZoneFileDnssecConfigArgs struct {
	KskDnssecKeyVersions ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayInput `pulumi:"kskDnssecKeyVersions"`
	ZskDnssecKeyVersions ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayInput `pulumi:"zskDnssecKeyVersions"`
}

func (ActionCreateZoneFromZoneFileDnssecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfig)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileDnssecConfigArgs) ToActionCreateZoneFromZoneFileDnssecConfigOutput() ActionCreateZoneFromZoneFileDnssecConfigOutput {
	return i.ToActionCreateZoneFromZoneFileDnssecConfigOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileDnssecConfigArgs) ToActionCreateZoneFromZoneFileDnssecConfigOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileDnssecConfigOutput)
}

// ActionCreateZoneFromZoneFileDnssecConfigArrayInput is an input type that accepts ActionCreateZoneFromZoneFileDnssecConfigArray and ActionCreateZoneFromZoneFileDnssecConfigArrayOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileDnssecConfigArrayInput` via:
//
//	ActionCreateZoneFromZoneFileDnssecConfigArray{ ActionCreateZoneFromZoneFileDnssecConfigArgs{...} }
type ActionCreateZoneFromZoneFileDnssecConfigArrayInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileDnssecConfigArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigArrayOutput
	ToActionCreateZoneFromZoneFileDnssecConfigArrayOutputWithContext(context.Context) ActionCreateZoneFromZoneFileDnssecConfigArrayOutput
}

type ActionCreateZoneFromZoneFileDnssecConfigArray []ActionCreateZoneFromZoneFileDnssecConfigInput

func (ActionCreateZoneFromZoneFileDnssecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileDnssecConfig)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileDnssecConfigArray) ToActionCreateZoneFromZoneFileDnssecConfigArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigArrayOutput {
	return i.ToActionCreateZoneFromZoneFileDnssecConfigArrayOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileDnssecConfigArray) ToActionCreateZoneFromZoneFileDnssecConfigArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileDnssecConfigArrayOutput)
}

type ActionCreateZoneFromZoneFileDnssecConfigOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileDnssecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfig)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileDnssecConfigOutput) ToActionCreateZoneFromZoneFileDnssecConfigOutput() ActionCreateZoneFromZoneFileDnssecConfigOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigOutput) ToActionCreateZoneFromZoneFileDnssecConfigOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigOutput) KskDnssecKeyVersions() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfig) []ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion {
		return v.KskDnssecKeyVersions
	}).(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigOutput) ZskDnssecKeyVersions() ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfig) []ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion {
		return v.ZskDnssecKeyVersions
	}).(ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput)
}

type ActionCreateZoneFromZoneFileDnssecConfigArrayOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileDnssecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileDnssecConfig)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileDnssecConfigArrayOutput) ToActionCreateZoneFromZoneFileDnssecConfigArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigArrayOutput) ToActionCreateZoneFromZoneFileDnssecConfigArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigArrayOutput) Index(i pulumi.IntInput) ActionCreateZoneFromZoneFileDnssecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionCreateZoneFromZoneFileDnssecConfig {
		return vs[0].([]ActionCreateZoneFromZoneFileDnssecConfig)[vs[1].(int)]
	}).(ActionCreateZoneFromZoneFileDnssecConfigOutput)
}

type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion struct {
	Algorithm                       *string                                                             `pulumi:"algorithm"`
	DsDatas                         []ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsData `pulumi:"dsDatas"`
	KeyTag                          *int                                                                `pulumi:"keyTag"`
	LengthInBytes                   *int                                                                `pulumi:"lengthInBytes"`
	PredecessorDnssecKeyVersionUuid *string                                                             `pulumi:"predecessorDnssecKeyVersionUuid"`
	SuccessorDnssecKeyVersionUuid   *string                                                             `pulumi:"successorDnssecKeyVersionUuid"`
	TimeActivated                   *string                                                             `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated     *string `pulumi:"timeCreated"`
	TimeExpired     *string `pulumi:"timeExpired"`
	TimeInactivated *string `pulumi:"timeInactivated"`
	TimePromoted    *string `pulumi:"timePromoted"`
	TimePublished   *string `pulumi:"timePublished"`
	TimeUnpublished *string `pulumi:"timeUnpublished"`
	Uuid            *string `pulumi:"uuid"`
}

// ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionInput is an input type that accepts ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArgs and ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionInput` via:
//
//	ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArgs{...}
type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput
	ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutputWithContext(context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput
}

type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArgs struct {
	Algorithm                       pulumi.StringPtrInput                                                       `pulumi:"algorithm"`
	DsDatas                         ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayInput `pulumi:"dsDatas"`
	KeyTag                          pulumi.IntPtrInput                                                          `pulumi:"keyTag"`
	LengthInBytes                   pulumi.IntPtrInput                                                          `pulumi:"lengthInBytes"`
	PredecessorDnssecKeyVersionUuid pulumi.StringPtrInput                                                       `pulumi:"predecessorDnssecKeyVersionUuid"`
	SuccessorDnssecKeyVersionUuid   pulumi.StringPtrInput                                                       `pulumi:"successorDnssecKeyVersionUuid"`
	TimeActivated                   pulumi.StringPtrInput                                                       `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated     pulumi.StringPtrInput `pulumi:"timeCreated"`
	TimeExpired     pulumi.StringPtrInput `pulumi:"timeExpired"`
	TimeInactivated pulumi.StringPtrInput `pulumi:"timeInactivated"`
	TimePromoted    pulumi.StringPtrInput `pulumi:"timePromoted"`
	TimePublished   pulumi.StringPtrInput `pulumi:"timePublished"`
	TimeUnpublished pulumi.StringPtrInput `pulumi:"timeUnpublished"`
	Uuid            pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArgs) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput {
	return i.ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArgs) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput)
}

// ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayInput is an input type that accepts ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArray and ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayInput` via:
//
//	ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArray{ ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArgs{...} }
type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput
	ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput
}

type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArray []ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionInput

func (ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArray) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput {
	return i.ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArray) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput)
}

type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) DsDatas() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) []ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsData {
		return v.DsDatas
	}).(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) KeyTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *int { return v.KeyTag }).(pulumi.IntPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) LengthInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *int { return v.LengthInBytes }).(pulumi.IntPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) PredecessorDnssecKeyVersionUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *string {
		return v.PredecessorDnssecKeyVersionUuid
	}).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) SuccessorDnssecKeyVersionUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *string {
		return v.SuccessorDnssecKeyVersionUuid
	}).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) TimeActivated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *string { return v.TimeActivated }).(pulumi.StringPtrOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) TimeExpired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *string { return v.TimeExpired }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) TimeInactivated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *string { return v.TimeInactivated }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) TimePromoted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *string { return v.TimePromoted }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) TimePublished() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *string { return v.TimePublished }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) TimeUnpublished() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *string { return v.TimeUnpublished }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput) Index(i pulumi.IntInput) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion {
		return vs[0].([]ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersion)[vs[1].(int)]
	}).(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput)
}

type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsData struct {
	DigestType *string `pulumi:"digestType"`
	Rdata      *string `pulumi:"rdata"`
}

// ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataInput is an input type that accepts ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArgs and ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataInput` via:
//
//	ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArgs{...}
type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput
	ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput
}

type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArgs struct {
	DigestType pulumi.StringPtrInput `pulumi:"digestType"`
	Rdata      pulumi.StringPtrInput `pulumi:"rdata"`
}

func (ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArgs) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return i.ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArgs) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput)
}

// ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayInput is an input type that accepts ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArray and ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayInput` via:
//
//	ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArray{ ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArgs{...} }
type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput
	ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput
}

type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArray []ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataInput

func (ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArray) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return i.ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArray) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput)
}

type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput) DigestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsData) *string { return v.DigestType }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput) Rdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsData) *string { return v.Rdata }).(pulumi.StringPtrOutput)
}

type ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) ToActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) Index(i pulumi.IntInput) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsData {
		return vs[0].([]ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsData)[vs[1].(int)]
	}).(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput)
}

type ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion struct {
	Algorithm                       *string `pulumi:"algorithm"`
	KeyTag                          *int    `pulumi:"keyTag"`
	LengthInBytes                   *int    `pulumi:"lengthInBytes"`
	PredecessorDnssecKeyVersionUuid *string `pulumi:"predecessorDnssecKeyVersionUuid"`
	SuccessorDnssecKeyVersionUuid   *string `pulumi:"successorDnssecKeyVersionUuid"`
	TimeActivated                   *string `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated     *string `pulumi:"timeCreated"`
	TimeExpired     *string `pulumi:"timeExpired"`
	TimeInactivated *string `pulumi:"timeInactivated"`
	TimePromoted    *string `pulumi:"timePromoted"`
	TimePublished   *string `pulumi:"timePublished"`
	TimeUnpublished *string `pulumi:"timeUnpublished"`
	Uuid            *string `pulumi:"uuid"`
}

// ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionInput is an input type that accepts ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArgs and ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionInput` via:
//
//	ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArgs{...}
type ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput() ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput
	ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutputWithContext(context.Context) ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput
}

type ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArgs struct {
	Algorithm                       pulumi.StringPtrInput `pulumi:"algorithm"`
	KeyTag                          pulumi.IntPtrInput    `pulumi:"keyTag"`
	LengthInBytes                   pulumi.IntPtrInput    `pulumi:"lengthInBytes"`
	PredecessorDnssecKeyVersionUuid pulumi.StringPtrInput `pulumi:"predecessorDnssecKeyVersionUuid"`
	SuccessorDnssecKeyVersionUuid   pulumi.StringPtrInput `pulumi:"successorDnssecKeyVersionUuid"`
	TimeActivated                   pulumi.StringPtrInput `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated     pulumi.StringPtrInput `pulumi:"timeCreated"`
	TimeExpired     pulumi.StringPtrInput `pulumi:"timeExpired"`
	TimeInactivated pulumi.StringPtrInput `pulumi:"timeInactivated"`
	TimePromoted    pulumi.StringPtrInput `pulumi:"timePromoted"`
	TimePublished   pulumi.StringPtrInput `pulumi:"timePublished"`
	TimeUnpublished pulumi.StringPtrInput `pulumi:"timeUnpublished"`
	Uuid            pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArgs) ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput() ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput {
	return i.ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArgs) ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput)
}

// ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayInput is an input type that accepts ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArray and ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayInput` via:
//
//	ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArray{ ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArgs{...} }
type ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput
	ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(context.Context) ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput
}

type ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArray []ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionInput

func (ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArray) ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput {
	return i.ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArray) ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput)
}

type ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput() ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) KeyTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *int { return v.KeyTag }).(pulumi.IntPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) LengthInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *int { return v.LengthInBytes }).(pulumi.IntPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) PredecessorDnssecKeyVersionUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *string {
		return v.PredecessorDnssecKeyVersionUuid
	}).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) SuccessorDnssecKeyVersionUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *string {
		return v.SuccessorDnssecKeyVersionUuid
	}).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) TimeActivated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *string { return v.TimeActivated }).(pulumi.StringPtrOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) TimeExpired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *string { return v.TimeExpired }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) TimeInactivated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *string { return v.TimeInactivated }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) TimePromoted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *string { return v.TimePromoted }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) TimePublished() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *string { return v.TimePublished }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) TimeUnpublished() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *string { return v.TimeUnpublished }).(pulumi.StringPtrOutput)
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput) ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput() ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput) ToActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput) Index(i pulumi.IntInput) ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion {
		return vs[0].([]ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersion)[vs[1].(int)]
	}).(ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput)
}

type ActionCreateZoneFromZoneFileExternalDownstream struct {
	// The server's IP address (IPv4 or IPv6).
	Address *string `pulumi:"address"`
	// The server's port.
	Port *int `pulumi:"port"`
	// The OCID of the TSIG key.
	TsigKeyId *string `pulumi:"tsigKeyId"`
}

// ActionCreateZoneFromZoneFileExternalDownstreamInput is an input type that accepts ActionCreateZoneFromZoneFileExternalDownstreamArgs and ActionCreateZoneFromZoneFileExternalDownstreamOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileExternalDownstreamInput` via:
//
//	ActionCreateZoneFromZoneFileExternalDownstreamArgs{...}
type ActionCreateZoneFromZoneFileExternalDownstreamInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileExternalDownstreamOutput() ActionCreateZoneFromZoneFileExternalDownstreamOutput
	ToActionCreateZoneFromZoneFileExternalDownstreamOutputWithContext(context.Context) ActionCreateZoneFromZoneFileExternalDownstreamOutput
}

type ActionCreateZoneFromZoneFileExternalDownstreamArgs struct {
	// The server's IP address (IPv4 or IPv6).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The server's port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The OCID of the TSIG key.
	TsigKeyId pulumi.StringPtrInput `pulumi:"tsigKeyId"`
}

func (ActionCreateZoneFromZoneFileExternalDownstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileExternalDownstream)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileExternalDownstreamArgs) ToActionCreateZoneFromZoneFileExternalDownstreamOutput() ActionCreateZoneFromZoneFileExternalDownstreamOutput {
	return i.ToActionCreateZoneFromZoneFileExternalDownstreamOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileExternalDownstreamArgs) ToActionCreateZoneFromZoneFileExternalDownstreamOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileExternalDownstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileExternalDownstreamOutput)
}

// ActionCreateZoneFromZoneFileExternalDownstreamArrayInput is an input type that accepts ActionCreateZoneFromZoneFileExternalDownstreamArray and ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileExternalDownstreamArrayInput` via:
//
//	ActionCreateZoneFromZoneFileExternalDownstreamArray{ ActionCreateZoneFromZoneFileExternalDownstreamArgs{...} }
type ActionCreateZoneFromZoneFileExternalDownstreamArrayInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileExternalDownstreamArrayOutput() ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput
	ToActionCreateZoneFromZoneFileExternalDownstreamArrayOutputWithContext(context.Context) ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput
}

type ActionCreateZoneFromZoneFileExternalDownstreamArray []ActionCreateZoneFromZoneFileExternalDownstreamInput

func (ActionCreateZoneFromZoneFileExternalDownstreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileExternalDownstream)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileExternalDownstreamArray) ToActionCreateZoneFromZoneFileExternalDownstreamArrayOutput() ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput {
	return i.ToActionCreateZoneFromZoneFileExternalDownstreamArrayOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileExternalDownstreamArray) ToActionCreateZoneFromZoneFileExternalDownstreamArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput)
}

type ActionCreateZoneFromZoneFileExternalDownstreamOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileExternalDownstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileExternalDownstream)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileExternalDownstreamOutput) ToActionCreateZoneFromZoneFileExternalDownstreamOutput() ActionCreateZoneFromZoneFileExternalDownstreamOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileExternalDownstreamOutput) ToActionCreateZoneFromZoneFileExternalDownstreamOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileExternalDownstreamOutput {
	return o
}

// The server's IP address (IPv4 or IPv6).
func (o ActionCreateZoneFromZoneFileExternalDownstreamOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileExternalDownstream) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The server's port.
func (o ActionCreateZoneFromZoneFileExternalDownstreamOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileExternalDownstream) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The OCID of the TSIG key.
func (o ActionCreateZoneFromZoneFileExternalDownstreamOutput) TsigKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileExternalDownstream) *string { return v.TsigKeyId }).(pulumi.StringPtrOutput)
}

type ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileExternalDownstream)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput) ToActionCreateZoneFromZoneFileExternalDownstreamArrayOutput() ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput) ToActionCreateZoneFromZoneFileExternalDownstreamArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput) Index(i pulumi.IntInput) ActionCreateZoneFromZoneFileExternalDownstreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionCreateZoneFromZoneFileExternalDownstream {
		return vs[0].([]ActionCreateZoneFromZoneFileExternalDownstream)[vs[1].(int)]
	}).(ActionCreateZoneFromZoneFileExternalDownstreamOutput)
}

type ActionCreateZoneFromZoneFileExternalMaster struct {
	// The server's IP address (IPv4 or IPv6).
	Address *string `pulumi:"address"`
	// The server's port.
	Port *int `pulumi:"port"`
	// The OCID of the TSIG key.
	TsigKeyId *string `pulumi:"tsigKeyId"`
}

// ActionCreateZoneFromZoneFileExternalMasterInput is an input type that accepts ActionCreateZoneFromZoneFileExternalMasterArgs and ActionCreateZoneFromZoneFileExternalMasterOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileExternalMasterInput` via:
//
//	ActionCreateZoneFromZoneFileExternalMasterArgs{...}
type ActionCreateZoneFromZoneFileExternalMasterInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileExternalMasterOutput() ActionCreateZoneFromZoneFileExternalMasterOutput
	ToActionCreateZoneFromZoneFileExternalMasterOutputWithContext(context.Context) ActionCreateZoneFromZoneFileExternalMasterOutput
}

type ActionCreateZoneFromZoneFileExternalMasterArgs struct {
	// The server's IP address (IPv4 or IPv6).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The server's port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The OCID of the TSIG key.
	TsigKeyId pulumi.StringPtrInput `pulumi:"tsigKeyId"`
}

func (ActionCreateZoneFromZoneFileExternalMasterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileExternalMaster)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileExternalMasterArgs) ToActionCreateZoneFromZoneFileExternalMasterOutput() ActionCreateZoneFromZoneFileExternalMasterOutput {
	return i.ToActionCreateZoneFromZoneFileExternalMasterOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileExternalMasterArgs) ToActionCreateZoneFromZoneFileExternalMasterOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileExternalMasterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileExternalMasterOutput)
}

// ActionCreateZoneFromZoneFileExternalMasterArrayInput is an input type that accepts ActionCreateZoneFromZoneFileExternalMasterArray and ActionCreateZoneFromZoneFileExternalMasterArrayOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileExternalMasterArrayInput` via:
//
//	ActionCreateZoneFromZoneFileExternalMasterArray{ ActionCreateZoneFromZoneFileExternalMasterArgs{...} }
type ActionCreateZoneFromZoneFileExternalMasterArrayInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileExternalMasterArrayOutput() ActionCreateZoneFromZoneFileExternalMasterArrayOutput
	ToActionCreateZoneFromZoneFileExternalMasterArrayOutputWithContext(context.Context) ActionCreateZoneFromZoneFileExternalMasterArrayOutput
}

type ActionCreateZoneFromZoneFileExternalMasterArray []ActionCreateZoneFromZoneFileExternalMasterInput

func (ActionCreateZoneFromZoneFileExternalMasterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileExternalMaster)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileExternalMasterArray) ToActionCreateZoneFromZoneFileExternalMasterArrayOutput() ActionCreateZoneFromZoneFileExternalMasterArrayOutput {
	return i.ToActionCreateZoneFromZoneFileExternalMasterArrayOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileExternalMasterArray) ToActionCreateZoneFromZoneFileExternalMasterArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileExternalMasterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileExternalMasterArrayOutput)
}

type ActionCreateZoneFromZoneFileExternalMasterOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileExternalMasterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileExternalMaster)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileExternalMasterOutput) ToActionCreateZoneFromZoneFileExternalMasterOutput() ActionCreateZoneFromZoneFileExternalMasterOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileExternalMasterOutput) ToActionCreateZoneFromZoneFileExternalMasterOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileExternalMasterOutput {
	return o
}

// The server's IP address (IPv4 or IPv6).
func (o ActionCreateZoneFromZoneFileExternalMasterOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileExternalMaster) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The server's port.
func (o ActionCreateZoneFromZoneFileExternalMasterOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileExternalMaster) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The OCID of the TSIG key.
func (o ActionCreateZoneFromZoneFileExternalMasterOutput) TsigKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileExternalMaster) *string { return v.TsigKeyId }).(pulumi.StringPtrOutput)
}

type ActionCreateZoneFromZoneFileExternalMasterArrayOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileExternalMasterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileExternalMaster)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileExternalMasterArrayOutput) ToActionCreateZoneFromZoneFileExternalMasterArrayOutput() ActionCreateZoneFromZoneFileExternalMasterArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileExternalMasterArrayOutput) ToActionCreateZoneFromZoneFileExternalMasterArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileExternalMasterArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileExternalMasterArrayOutput) Index(i pulumi.IntInput) ActionCreateZoneFromZoneFileExternalMasterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionCreateZoneFromZoneFileExternalMaster {
		return vs[0].([]ActionCreateZoneFromZoneFileExternalMaster)[vs[1].(int)]
	}).(ActionCreateZoneFromZoneFileExternalMasterOutput)
}

type ActionCreateZoneFromZoneFileNameserver struct {
	// The hostname of the nameserver.
	Hostname *string `pulumi:"hostname"`
}

// ActionCreateZoneFromZoneFileNameserverInput is an input type that accepts ActionCreateZoneFromZoneFileNameserverArgs and ActionCreateZoneFromZoneFileNameserverOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileNameserverInput` via:
//
//	ActionCreateZoneFromZoneFileNameserverArgs{...}
type ActionCreateZoneFromZoneFileNameserverInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileNameserverOutput() ActionCreateZoneFromZoneFileNameserverOutput
	ToActionCreateZoneFromZoneFileNameserverOutputWithContext(context.Context) ActionCreateZoneFromZoneFileNameserverOutput
}

type ActionCreateZoneFromZoneFileNameserverArgs struct {
	// The hostname of the nameserver.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
}

func (ActionCreateZoneFromZoneFileNameserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileNameserver)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileNameserverArgs) ToActionCreateZoneFromZoneFileNameserverOutput() ActionCreateZoneFromZoneFileNameserverOutput {
	return i.ToActionCreateZoneFromZoneFileNameserverOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileNameserverArgs) ToActionCreateZoneFromZoneFileNameserverOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileNameserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileNameserverOutput)
}

// ActionCreateZoneFromZoneFileNameserverArrayInput is an input type that accepts ActionCreateZoneFromZoneFileNameserverArray and ActionCreateZoneFromZoneFileNameserverArrayOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileNameserverArrayInput` via:
//
//	ActionCreateZoneFromZoneFileNameserverArray{ ActionCreateZoneFromZoneFileNameserverArgs{...} }
type ActionCreateZoneFromZoneFileNameserverArrayInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileNameserverArrayOutput() ActionCreateZoneFromZoneFileNameserverArrayOutput
	ToActionCreateZoneFromZoneFileNameserverArrayOutputWithContext(context.Context) ActionCreateZoneFromZoneFileNameserverArrayOutput
}

type ActionCreateZoneFromZoneFileNameserverArray []ActionCreateZoneFromZoneFileNameserverInput

func (ActionCreateZoneFromZoneFileNameserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileNameserver)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileNameserverArray) ToActionCreateZoneFromZoneFileNameserverArrayOutput() ActionCreateZoneFromZoneFileNameserverArrayOutput {
	return i.ToActionCreateZoneFromZoneFileNameserverArrayOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileNameserverArray) ToActionCreateZoneFromZoneFileNameserverArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileNameserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileNameserverArrayOutput)
}

type ActionCreateZoneFromZoneFileNameserverOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileNameserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileNameserver)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileNameserverOutput) ToActionCreateZoneFromZoneFileNameserverOutput() ActionCreateZoneFromZoneFileNameserverOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileNameserverOutput) ToActionCreateZoneFromZoneFileNameserverOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileNameserverOutput {
	return o
}

// The hostname of the nameserver.
func (o ActionCreateZoneFromZoneFileNameserverOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileNameserver) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

type ActionCreateZoneFromZoneFileNameserverArrayOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileNameserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileNameserver)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileNameserverArrayOutput) ToActionCreateZoneFromZoneFileNameserverArrayOutput() ActionCreateZoneFromZoneFileNameserverArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileNameserverArrayOutput) ToActionCreateZoneFromZoneFileNameserverArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileNameserverArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileNameserverArrayOutput) Index(i pulumi.IntInput) ActionCreateZoneFromZoneFileNameserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionCreateZoneFromZoneFileNameserver {
		return vs[0].([]ActionCreateZoneFromZoneFileNameserver)[vs[1].(int)]
	}).(ActionCreateZoneFromZoneFileNameserverOutput)
}

type ActionCreateZoneFromZoneFileZoneTransferServer struct {
	// The server's IP address (IPv4 or IPv6).
	Address *string `pulumi:"address"`
	// A Boolean flag indicating whether or not the server is a zone data transfer destination.
	IsTransferDestination *bool `pulumi:"isTransferDestination"`
	// A Boolean flag indicating whether or not the server is a zone data transfer source.
	IsTransferSource *bool `pulumi:"isTransferSource"`
	// The server's port.
	Port *int `pulumi:"port"`
}

// ActionCreateZoneFromZoneFileZoneTransferServerInput is an input type that accepts ActionCreateZoneFromZoneFileZoneTransferServerArgs and ActionCreateZoneFromZoneFileZoneTransferServerOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileZoneTransferServerInput` via:
//
//	ActionCreateZoneFromZoneFileZoneTransferServerArgs{...}
type ActionCreateZoneFromZoneFileZoneTransferServerInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileZoneTransferServerOutput() ActionCreateZoneFromZoneFileZoneTransferServerOutput
	ToActionCreateZoneFromZoneFileZoneTransferServerOutputWithContext(context.Context) ActionCreateZoneFromZoneFileZoneTransferServerOutput
}

type ActionCreateZoneFromZoneFileZoneTransferServerArgs struct {
	// The server's IP address (IPv4 or IPv6).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// A Boolean flag indicating whether or not the server is a zone data transfer destination.
	IsTransferDestination pulumi.BoolPtrInput `pulumi:"isTransferDestination"`
	// A Boolean flag indicating whether or not the server is a zone data transfer source.
	IsTransferSource pulumi.BoolPtrInput `pulumi:"isTransferSource"`
	// The server's port.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ActionCreateZoneFromZoneFileZoneTransferServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileZoneTransferServer)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileZoneTransferServerArgs) ToActionCreateZoneFromZoneFileZoneTransferServerOutput() ActionCreateZoneFromZoneFileZoneTransferServerOutput {
	return i.ToActionCreateZoneFromZoneFileZoneTransferServerOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileZoneTransferServerArgs) ToActionCreateZoneFromZoneFileZoneTransferServerOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileZoneTransferServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileZoneTransferServerOutput)
}

// ActionCreateZoneFromZoneFileZoneTransferServerArrayInput is an input type that accepts ActionCreateZoneFromZoneFileZoneTransferServerArray and ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput values.
// You can construct a concrete instance of `ActionCreateZoneFromZoneFileZoneTransferServerArrayInput` via:
//
//	ActionCreateZoneFromZoneFileZoneTransferServerArray{ ActionCreateZoneFromZoneFileZoneTransferServerArgs{...} }
type ActionCreateZoneFromZoneFileZoneTransferServerArrayInput interface {
	pulumi.Input

	ToActionCreateZoneFromZoneFileZoneTransferServerArrayOutput() ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput
	ToActionCreateZoneFromZoneFileZoneTransferServerArrayOutputWithContext(context.Context) ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput
}

type ActionCreateZoneFromZoneFileZoneTransferServerArray []ActionCreateZoneFromZoneFileZoneTransferServerInput

func (ActionCreateZoneFromZoneFileZoneTransferServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileZoneTransferServer)(nil)).Elem()
}

func (i ActionCreateZoneFromZoneFileZoneTransferServerArray) ToActionCreateZoneFromZoneFileZoneTransferServerArrayOutput() ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput {
	return i.ToActionCreateZoneFromZoneFileZoneTransferServerArrayOutputWithContext(context.Background())
}

func (i ActionCreateZoneFromZoneFileZoneTransferServerArray) ToActionCreateZoneFromZoneFileZoneTransferServerArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput)
}

type ActionCreateZoneFromZoneFileZoneTransferServerOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileZoneTransferServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionCreateZoneFromZoneFileZoneTransferServer)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileZoneTransferServerOutput) ToActionCreateZoneFromZoneFileZoneTransferServerOutput() ActionCreateZoneFromZoneFileZoneTransferServerOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileZoneTransferServerOutput) ToActionCreateZoneFromZoneFileZoneTransferServerOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileZoneTransferServerOutput {
	return o
}

// The server's IP address (IPv4 or IPv6).
func (o ActionCreateZoneFromZoneFileZoneTransferServerOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileZoneTransferServer) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// A Boolean flag indicating whether or not the server is a zone data transfer destination.
func (o ActionCreateZoneFromZoneFileZoneTransferServerOutput) IsTransferDestination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileZoneTransferServer) *bool { return v.IsTransferDestination }).(pulumi.BoolPtrOutput)
}

// A Boolean flag indicating whether or not the server is a zone data transfer source.
func (o ActionCreateZoneFromZoneFileZoneTransferServerOutput) IsTransferSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileZoneTransferServer) *bool { return v.IsTransferSource }).(pulumi.BoolPtrOutput)
}

// The server's port.
func (o ActionCreateZoneFromZoneFileZoneTransferServerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActionCreateZoneFromZoneFileZoneTransferServer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput struct{ *pulumi.OutputState }

func (ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionCreateZoneFromZoneFileZoneTransferServer)(nil)).Elem()
}

func (o ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput) ToActionCreateZoneFromZoneFileZoneTransferServerArrayOutput() ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput) ToActionCreateZoneFromZoneFileZoneTransferServerArrayOutputWithContext(ctx context.Context) ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput {
	return o
}

func (o ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput) Index(i pulumi.IntInput) ActionCreateZoneFromZoneFileZoneTransferServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionCreateZoneFromZoneFileZoneTransferServer {
		return vs[0].([]ActionCreateZoneFromZoneFileZoneTransferServer)[vs[1].(int)]
	}).(ActionCreateZoneFromZoneFileZoneTransferServerOutput)
}

type ResolverAttachedView struct {
	// (Updatable) The OCID of the view.
	ViewId string `pulumi:"viewId"`
}

// ResolverAttachedViewInput is an input type that accepts ResolverAttachedViewArgs and ResolverAttachedViewOutput values.
// You can construct a concrete instance of `ResolverAttachedViewInput` via:
//
//	ResolverAttachedViewArgs{...}
type ResolverAttachedViewInput interface {
	pulumi.Input

	ToResolverAttachedViewOutput() ResolverAttachedViewOutput
	ToResolverAttachedViewOutputWithContext(context.Context) ResolverAttachedViewOutput
}

type ResolverAttachedViewArgs struct {
	// (Updatable) The OCID of the view.
	ViewId pulumi.StringInput `pulumi:"viewId"`
}

func (ResolverAttachedViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverAttachedView)(nil)).Elem()
}

func (i ResolverAttachedViewArgs) ToResolverAttachedViewOutput() ResolverAttachedViewOutput {
	return i.ToResolverAttachedViewOutputWithContext(context.Background())
}

func (i ResolverAttachedViewArgs) ToResolverAttachedViewOutputWithContext(ctx context.Context) ResolverAttachedViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverAttachedViewOutput)
}

// ResolverAttachedViewArrayInput is an input type that accepts ResolverAttachedViewArray and ResolverAttachedViewArrayOutput values.
// You can construct a concrete instance of `ResolverAttachedViewArrayInput` via:
//
//	ResolverAttachedViewArray{ ResolverAttachedViewArgs{...} }
type ResolverAttachedViewArrayInput interface {
	pulumi.Input

	ToResolverAttachedViewArrayOutput() ResolverAttachedViewArrayOutput
	ToResolverAttachedViewArrayOutputWithContext(context.Context) ResolverAttachedViewArrayOutput
}

type ResolverAttachedViewArray []ResolverAttachedViewInput

func (ResolverAttachedViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResolverAttachedView)(nil)).Elem()
}

func (i ResolverAttachedViewArray) ToResolverAttachedViewArrayOutput() ResolverAttachedViewArrayOutput {
	return i.ToResolverAttachedViewArrayOutputWithContext(context.Background())
}

func (i ResolverAttachedViewArray) ToResolverAttachedViewArrayOutputWithContext(ctx context.Context) ResolverAttachedViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverAttachedViewArrayOutput)
}

type ResolverAttachedViewOutput struct{ *pulumi.OutputState }

func (ResolverAttachedViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverAttachedView)(nil)).Elem()
}

func (o ResolverAttachedViewOutput) ToResolverAttachedViewOutput() ResolverAttachedViewOutput {
	return o
}

func (o ResolverAttachedViewOutput) ToResolverAttachedViewOutputWithContext(ctx context.Context) ResolverAttachedViewOutput {
	return o
}

// (Updatable) The OCID of the view.
func (o ResolverAttachedViewOutput) ViewId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverAttachedView) string { return v.ViewId }).(pulumi.StringOutput)
}

type ResolverAttachedViewArrayOutput struct{ *pulumi.OutputState }

func (ResolverAttachedViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResolverAttachedView)(nil)).Elem()
}

func (o ResolverAttachedViewArrayOutput) ToResolverAttachedViewArrayOutput() ResolverAttachedViewArrayOutput {
	return o
}

func (o ResolverAttachedViewArrayOutput) ToResolverAttachedViewArrayOutputWithContext(ctx context.Context) ResolverAttachedViewArrayOutput {
	return o
}

func (o ResolverAttachedViewArrayOutput) Index(i pulumi.IntInput) ResolverAttachedViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResolverAttachedView {
		return vs[0].([]ResolverAttachedView)[vs[1].(int)]
	}).(ResolverAttachedViewOutput)
}

type ResolverEndpointType struct {
	// (Updatable) The OCID of the owning compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// The type of resolver endpoint. VNIC is currently the only supported type.
	EndpointType *string `pulumi:"endpointType"`
	// An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
	ForwardingAddress *string `pulumi:"forwardingAddress"`
	// A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
	IsForwarding *bool `pulumi:"isForwarding"`
	// A Boolean flag indicating whether or not the resolver endpoint is for listening.
	IsListening *bool `pulumi:"isListening"`
	// An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
	ListeningAddress *string `pulumi:"listeningAddress"`
	// The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
	Name *string `pulumi:"name"`
	// The canonical absolute URL of the resource.
	Self *string `pulumi:"self"`
	// The current state of the resource.
	State *string `pulumi:"state"`
	// The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
	SubnetId *string `pulumi:"subnetId"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

// ResolverEndpointTypeInput is an input type that accepts ResolverEndpointTypeArgs and ResolverEndpointTypeOutput values.
// You can construct a concrete instance of `ResolverEndpointTypeInput` via:
//
//	ResolverEndpointTypeArgs{...}
type ResolverEndpointTypeInput interface {
	pulumi.Input

	ToResolverEndpointTypeOutput() ResolverEndpointTypeOutput
	ToResolverEndpointTypeOutputWithContext(context.Context) ResolverEndpointTypeOutput
}

type ResolverEndpointTypeArgs struct {
	// (Updatable) The OCID of the owning compartment.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// The type of resolver endpoint. VNIC is currently the only supported type.
	EndpointType pulumi.StringPtrInput `pulumi:"endpointType"`
	// An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
	ForwardingAddress pulumi.StringPtrInput `pulumi:"forwardingAddress"`
	// A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
	IsForwarding pulumi.BoolPtrInput `pulumi:"isForwarding"`
	// A Boolean flag indicating whether or not the resolver endpoint is for listening.
	IsListening pulumi.BoolPtrInput `pulumi:"isListening"`
	// An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
	ListeningAddress pulumi.StringPtrInput `pulumi:"listeningAddress"`
	// The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringPtrInput `pulumi:"self"`
	// The current state of the resource.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated pulumi.StringPtrInput `pulumi:"timeUpdated"`
}

func (ResolverEndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverEndpointType)(nil)).Elem()
}

func (i ResolverEndpointTypeArgs) ToResolverEndpointTypeOutput() ResolverEndpointTypeOutput {
	return i.ToResolverEndpointTypeOutputWithContext(context.Background())
}

func (i ResolverEndpointTypeArgs) ToResolverEndpointTypeOutputWithContext(ctx context.Context) ResolverEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverEndpointTypeOutput)
}

// ResolverEndpointTypeArrayInput is an input type that accepts ResolverEndpointTypeArray and ResolverEndpointTypeArrayOutput values.
// You can construct a concrete instance of `ResolverEndpointTypeArrayInput` via:
//
//	ResolverEndpointTypeArray{ ResolverEndpointTypeArgs{...} }
type ResolverEndpointTypeArrayInput interface {
	pulumi.Input

	ToResolverEndpointTypeArrayOutput() ResolverEndpointTypeArrayOutput
	ToResolverEndpointTypeArrayOutputWithContext(context.Context) ResolverEndpointTypeArrayOutput
}

type ResolverEndpointTypeArray []ResolverEndpointTypeInput

func (ResolverEndpointTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResolverEndpointType)(nil)).Elem()
}

func (i ResolverEndpointTypeArray) ToResolverEndpointTypeArrayOutput() ResolverEndpointTypeArrayOutput {
	return i.ToResolverEndpointTypeArrayOutputWithContext(context.Background())
}

func (i ResolverEndpointTypeArray) ToResolverEndpointTypeArrayOutputWithContext(ctx context.Context) ResolverEndpointTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverEndpointTypeArrayOutput)
}

type ResolverEndpointTypeOutput struct{ *pulumi.OutputState }

func (ResolverEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverEndpointType)(nil)).Elem()
}

func (o ResolverEndpointTypeOutput) ToResolverEndpointTypeOutput() ResolverEndpointTypeOutput {
	return o
}

func (o ResolverEndpointTypeOutput) ToResolverEndpointTypeOutputWithContext(ctx context.Context) ResolverEndpointTypeOutput {
	return o
}

// (Updatable) The OCID of the owning compartment.
func (o ResolverEndpointTypeOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The type of resolver endpoint. VNIC is currently the only supported type.
func (o ResolverEndpointTypeOutput) EndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *string { return v.EndpointType }).(pulumi.StringPtrOutput)
}

// An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
func (o ResolverEndpointTypeOutput) ForwardingAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *string { return v.ForwardingAddress }).(pulumi.StringPtrOutput)
}

// A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
func (o ResolverEndpointTypeOutput) IsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *bool { return v.IsForwarding }).(pulumi.BoolPtrOutput)
}

// A Boolean flag indicating whether or not the resolver endpoint is for listening.
func (o ResolverEndpointTypeOutput) IsListening() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *bool { return v.IsListening }).(pulumi.BoolPtrOutput)
}

// An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
func (o ResolverEndpointTypeOutput) ListeningAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *string { return v.ListeningAddress }).(pulumi.StringPtrOutput)
}

// The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
func (o ResolverEndpointTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The canonical absolute URL of the resource.
func (o ResolverEndpointTypeOutput) Self() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *string { return v.Self }).(pulumi.StringPtrOutput)
}

// The current state of the resource.
func (o ResolverEndpointTypeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
func (o ResolverEndpointTypeOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o ResolverEndpointTypeOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o ResolverEndpointTypeOutput) TimeUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointType) *string { return v.TimeUpdated }).(pulumi.StringPtrOutput)
}

type ResolverEndpointTypeArrayOutput struct{ *pulumi.OutputState }

func (ResolverEndpointTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResolverEndpointType)(nil)).Elem()
}

func (o ResolverEndpointTypeArrayOutput) ToResolverEndpointTypeArrayOutput() ResolverEndpointTypeArrayOutput {
	return o
}

func (o ResolverEndpointTypeArrayOutput) ToResolverEndpointTypeArrayOutputWithContext(ctx context.Context) ResolverEndpointTypeArrayOutput {
	return o
}

func (o ResolverEndpointTypeArrayOutput) Index(i pulumi.IntInput) ResolverEndpointTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResolverEndpointType {
		return vs[0].([]ResolverEndpointType)[vs[1].(int)]
	}).(ResolverEndpointTypeOutput)
}

type ResolverRule struct {
	// (Updatable) The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
	// * `FORWARD` - Matching requests will be forwarded from the source interface to the destination address.
	Action string `pulumi:"action"`
	// (Updatable) A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
	ClientAddressConditions []string `pulumi:"clientAddressConditions"`
	// (Updatable) IP addresses to which queries should be forwarded. Currently limited to a single address.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// (Updatable) A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
	QnameCoverConditions []string `pulumi:"qnameCoverConditions"`
	// (Updatable) Case-insensitive name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
	SourceEndpointName string `pulumi:"sourceEndpointName"`
}

// ResolverRuleInput is an input type that accepts ResolverRuleArgs and ResolverRuleOutput values.
// You can construct a concrete instance of `ResolverRuleInput` via:
//
//	ResolverRuleArgs{...}
type ResolverRuleInput interface {
	pulumi.Input

	ToResolverRuleOutput() ResolverRuleOutput
	ToResolverRuleOutputWithContext(context.Context) ResolverRuleOutput
}

type ResolverRuleArgs struct {
	// (Updatable) The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
	// * `FORWARD` - Matching requests will be forwarded from the source interface to the destination address.
	Action pulumi.StringInput `pulumi:"action"`
	// (Updatable) A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
	ClientAddressConditions pulumi.StringArrayInput `pulumi:"clientAddressConditions"`
	// (Updatable) IP addresses to which queries should be forwarded. Currently limited to a single address.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// (Updatable) A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
	QnameCoverConditions pulumi.StringArrayInput `pulumi:"qnameCoverConditions"`
	// (Updatable) Case-insensitive name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
	SourceEndpointName pulumi.StringInput `pulumi:"sourceEndpointName"`
}

func (ResolverRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRule)(nil)).Elem()
}

func (i ResolverRuleArgs) ToResolverRuleOutput() ResolverRuleOutput {
	return i.ToResolverRuleOutputWithContext(context.Background())
}

func (i ResolverRuleArgs) ToResolverRuleOutputWithContext(ctx context.Context) ResolverRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleOutput)
}

// ResolverRuleArrayInput is an input type that accepts ResolverRuleArray and ResolverRuleArrayOutput values.
// You can construct a concrete instance of `ResolverRuleArrayInput` via:
//
//	ResolverRuleArray{ ResolverRuleArgs{...} }
type ResolverRuleArrayInput interface {
	pulumi.Input

	ToResolverRuleArrayOutput() ResolverRuleArrayOutput
	ToResolverRuleArrayOutputWithContext(context.Context) ResolverRuleArrayOutput
}

type ResolverRuleArray []ResolverRuleInput

func (ResolverRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResolverRule)(nil)).Elem()
}

func (i ResolverRuleArray) ToResolverRuleArrayOutput() ResolverRuleArrayOutput {
	return i.ToResolverRuleArrayOutputWithContext(context.Background())
}

func (i ResolverRuleArray) ToResolverRuleArrayOutputWithContext(ctx context.Context) ResolverRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleArrayOutput)
}

type ResolverRuleOutput struct{ *pulumi.OutputState }

func (ResolverRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRule)(nil)).Elem()
}

func (o ResolverRuleOutput) ToResolverRuleOutput() ResolverRuleOutput {
	return o
}

func (o ResolverRuleOutput) ToResolverRuleOutputWithContext(ctx context.Context) ResolverRuleOutput {
	return o
}

// (Updatable) The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
// * `FORWARD` - Matching requests will be forwarded from the source interface to the destination address.
func (o ResolverRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRule) string { return v.Action }).(pulumi.StringOutput)
}

// (Updatable) A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
func (o ResolverRuleOutput) ClientAddressConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverRule) []string { return v.ClientAddressConditions }).(pulumi.StringArrayOutput)
}

// (Updatable) IP addresses to which queries should be forwarded. Currently limited to a single address.
func (o ResolverRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// (Updatable) A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
func (o ResolverRuleOutput) QnameCoverConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverRule) []string { return v.QnameCoverConditions }).(pulumi.StringArrayOutput)
}

// (Updatable) Case-insensitive name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
func (o ResolverRuleOutput) SourceEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRule) string { return v.SourceEndpointName }).(pulumi.StringOutput)
}

type ResolverRuleArrayOutput struct{ *pulumi.OutputState }

func (ResolverRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResolverRule)(nil)).Elem()
}

func (o ResolverRuleArrayOutput) ToResolverRuleArrayOutput() ResolverRuleArrayOutput {
	return o
}

func (o ResolverRuleArrayOutput) ToResolverRuleArrayOutputWithContext(ctx context.Context) ResolverRuleArrayOutput {
	return o
}

func (o ResolverRuleArrayOutput) Index(i pulumi.IntInput) ResolverRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResolverRule {
		return vs[0].([]ResolverRule)[vs[1].(int)]
	}).(ResolverRuleOutput)
}

type RrsetItem struct {
	// The fully qualified domain name where the record can be located.
	Domain string `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected *bool `pulumi:"isProtected"`
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata string `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash *string `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion *string `pulumi:"rrsetVersion"`
	// The type of DNS record, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	Rtype string `pulumi:"rtype"`
	// (Updatable) The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
	Ttl int `pulumi:"ttl"`
}

// RrsetItemInput is an input type that accepts RrsetItemArgs and RrsetItemOutput values.
// You can construct a concrete instance of `RrsetItemInput` via:
//
//	RrsetItemArgs{...}
type RrsetItemInput interface {
	pulumi.Input

	ToRrsetItemOutput() RrsetItemOutput
	ToRrsetItemOutputWithContext(context.Context) RrsetItemOutput
}

type RrsetItemArgs struct {
	// The fully qualified domain name where the record can be located.
	Domain pulumi.StringInput `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected pulumi.BoolPtrInput `pulumi:"isProtected"`
	// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringInput `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash pulumi.StringPtrInput `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion pulumi.StringPtrInput `pulumi:"rrsetVersion"`
	// The type of DNS record, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
	Rtype pulumi.StringInput `pulumi:"rtype"`
	// (Updatable) The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (RrsetItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RrsetItem)(nil)).Elem()
}

func (i RrsetItemArgs) ToRrsetItemOutput() RrsetItemOutput {
	return i.ToRrsetItemOutputWithContext(context.Background())
}

func (i RrsetItemArgs) ToRrsetItemOutputWithContext(ctx context.Context) RrsetItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RrsetItemOutput)
}

// RrsetItemArrayInput is an input type that accepts RrsetItemArray and RrsetItemArrayOutput values.
// You can construct a concrete instance of `RrsetItemArrayInput` via:
//
//	RrsetItemArray{ RrsetItemArgs{...} }
type RrsetItemArrayInput interface {
	pulumi.Input

	ToRrsetItemArrayOutput() RrsetItemArrayOutput
	ToRrsetItemArrayOutputWithContext(context.Context) RrsetItemArrayOutput
}

type RrsetItemArray []RrsetItemInput

func (RrsetItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RrsetItem)(nil)).Elem()
}

func (i RrsetItemArray) ToRrsetItemArrayOutput() RrsetItemArrayOutput {
	return i.ToRrsetItemArrayOutputWithContext(context.Background())
}

func (i RrsetItemArray) ToRrsetItemArrayOutputWithContext(ctx context.Context) RrsetItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RrsetItemArrayOutput)
}

type RrsetItemOutput struct{ *pulumi.OutputState }

func (RrsetItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RrsetItem)(nil)).Elem()
}

func (o RrsetItemOutput) ToRrsetItemOutput() RrsetItemOutput {
	return o
}

func (o RrsetItemOutput) ToRrsetItemOutputWithContext(ctx context.Context) RrsetItemOutput {
	return o
}

// The fully qualified domain name where the record can be located.
func (o RrsetItemOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v RrsetItem) string { return v.Domain }).(pulumi.StringOutput)
}

// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
func (o RrsetItemOutput) IsProtected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RrsetItem) *bool { return v.IsProtected }).(pulumi.BoolPtrOutput)
}

// (Updatable) The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
func (o RrsetItemOutput) Rdata() pulumi.StringOutput {
	return o.ApplyT(func(v RrsetItem) string { return v.Rdata }).(pulumi.StringOutput)
}

// A unique identifier for the record within its zone.
func (o RrsetItemOutput) RecordHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RrsetItem) *string { return v.RecordHash }).(pulumi.StringPtrOutput)
}

// The latest version of the record's zone in which its RRSet differs from the preceding version.
func (o RrsetItemOutput) RrsetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RrsetItem) *string { return v.RrsetVersion }).(pulumi.StringPtrOutput)
}

// The type of DNS record, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
func (o RrsetItemOutput) Rtype() pulumi.StringOutput {
	return o.ApplyT(func(v RrsetItem) string { return v.Rtype }).(pulumi.StringOutput)
}

// (Updatable) The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
func (o RrsetItemOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v RrsetItem) int { return v.Ttl }).(pulumi.IntOutput)
}

type RrsetItemArrayOutput struct{ *pulumi.OutputState }

func (RrsetItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RrsetItem)(nil)).Elem()
}

func (o RrsetItemArrayOutput) ToRrsetItemArrayOutput() RrsetItemArrayOutput {
	return o
}

func (o RrsetItemArrayOutput) ToRrsetItemArrayOutputWithContext(ctx context.Context) RrsetItemArrayOutput {
	return o
}

func (o RrsetItemArrayOutput) Index(i pulumi.IntInput) RrsetItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RrsetItem {
		return vs[0].([]RrsetItem)[vs[1].(int)]
	}).(RrsetItemOutput)
}

type SteeringPolicyAnswer struct {
	// Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
	IsDisabled *bool `pulumi:"isDisabled"`
	// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
	Name string `pulumi:"name"`
	// The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
	Pool *string `pulumi:"pool"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rdata string `pulumi:"rdata"`
	// The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rtype string `pulumi:"rtype"`
}

// SteeringPolicyAnswerInput is an input type that accepts SteeringPolicyAnswerArgs and SteeringPolicyAnswerOutput values.
// You can construct a concrete instance of `SteeringPolicyAnswerInput` via:
//
//	SteeringPolicyAnswerArgs{...}
type SteeringPolicyAnswerInput interface {
	pulumi.Input

	ToSteeringPolicyAnswerOutput() SteeringPolicyAnswerOutput
	ToSteeringPolicyAnswerOutputWithContext(context.Context) SteeringPolicyAnswerOutput
}

type SteeringPolicyAnswerArgs struct {
	// Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
	IsDisabled pulumi.BoolPtrInput `pulumi:"isDisabled"`
	// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
	Name pulumi.StringInput `pulumi:"name"`
	// The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
	Pool pulumi.StringPtrInput `pulumi:"pool"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rdata pulumi.StringInput `pulumi:"rdata"`
	// The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rtype pulumi.StringInput `pulumi:"rtype"`
}

func (SteeringPolicyAnswerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SteeringPolicyAnswer)(nil)).Elem()
}

func (i SteeringPolicyAnswerArgs) ToSteeringPolicyAnswerOutput() SteeringPolicyAnswerOutput {
	return i.ToSteeringPolicyAnswerOutputWithContext(context.Background())
}

func (i SteeringPolicyAnswerArgs) ToSteeringPolicyAnswerOutputWithContext(ctx context.Context) SteeringPolicyAnswerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SteeringPolicyAnswerOutput)
}

// SteeringPolicyAnswerArrayInput is an input type that accepts SteeringPolicyAnswerArray and SteeringPolicyAnswerArrayOutput values.
// You can construct a concrete instance of `SteeringPolicyAnswerArrayInput` via:
//
//	SteeringPolicyAnswerArray{ SteeringPolicyAnswerArgs{...} }
type SteeringPolicyAnswerArrayInput interface {
	pulumi.Input

	ToSteeringPolicyAnswerArrayOutput() SteeringPolicyAnswerArrayOutput
	ToSteeringPolicyAnswerArrayOutputWithContext(context.Context) SteeringPolicyAnswerArrayOutput
}

type SteeringPolicyAnswerArray []SteeringPolicyAnswerInput

func (SteeringPolicyAnswerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SteeringPolicyAnswer)(nil)).Elem()
}

func (i SteeringPolicyAnswerArray) ToSteeringPolicyAnswerArrayOutput() SteeringPolicyAnswerArrayOutput {
	return i.ToSteeringPolicyAnswerArrayOutputWithContext(context.Background())
}

func (i SteeringPolicyAnswerArray) ToSteeringPolicyAnswerArrayOutputWithContext(ctx context.Context) SteeringPolicyAnswerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SteeringPolicyAnswerArrayOutput)
}

type SteeringPolicyAnswerOutput struct{ *pulumi.OutputState }

func (SteeringPolicyAnswerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SteeringPolicyAnswer)(nil)).Elem()
}

func (o SteeringPolicyAnswerOutput) ToSteeringPolicyAnswerOutput() SteeringPolicyAnswerOutput {
	return o
}

func (o SteeringPolicyAnswerOutput) ToSteeringPolicyAnswerOutputWithContext(ctx context.Context) SteeringPolicyAnswerOutput {
	return o
}

// Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
func (o SteeringPolicyAnswerOutput) IsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SteeringPolicyAnswer) *bool { return v.IsDisabled }).(pulumi.BoolPtrOutput)
}

// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
func (o SteeringPolicyAnswerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SteeringPolicyAnswer) string { return v.Name }).(pulumi.StringOutput)
}

// The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
func (o SteeringPolicyAnswerOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SteeringPolicyAnswer) *string { return v.Pool }).(pulumi.StringPtrOutput)
}

// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
func (o SteeringPolicyAnswerOutput) Rdata() pulumi.StringOutput {
	return o.ApplyT(func(v SteeringPolicyAnswer) string { return v.Rdata }).(pulumi.StringOutput)
}

// The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
func (o SteeringPolicyAnswerOutput) Rtype() pulumi.StringOutput {
	return o.ApplyT(func(v SteeringPolicyAnswer) string { return v.Rtype }).(pulumi.StringOutput)
}

type SteeringPolicyAnswerArrayOutput struct{ *pulumi.OutputState }

func (SteeringPolicyAnswerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SteeringPolicyAnswer)(nil)).Elem()
}

func (o SteeringPolicyAnswerArrayOutput) ToSteeringPolicyAnswerArrayOutput() SteeringPolicyAnswerArrayOutput {
	return o
}

func (o SteeringPolicyAnswerArrayOutput) ToSteeringPolicyAnswerArrayOutputWithContext(ctx context.Context) SteeringPolicyAnswerArrayOutput {
	return o
}

func (o SteeringPolicyAnswerArrayOutput) Index(i pulumi.IntInput) SteeringPolicyAnswerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SteeringPolicyAnswer {
		return vs[0].([]SteeringPolicyAnswer)[vs[1].(int)]
	}).(SteeringPolicyAnswerOutput)
}

type SteeringPolicyRule struct {
	// An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
	Cases []SteeringPolicyRuleCase `pulumi:"cases"`
	// Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
	DefaultAnswerDatas []SteeringPolicyRuleDefaultAnswerData `pulumi:"defaultAnswerDatas"`
	// Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
	DefaultCount *int `pulumi:"defaultCount"`
	// A user-defined description of the rule's purpose or behavior.
	Description *string `pulumi:"description"`
	// The type of a rule determines its sorting/filtering behavior.
	// * `FILTER` - Filters the list of answers based on their defined boolean data. Answers remain only if their `shouldKeep` value is `true`.
	// * `HEALTH` - Removes answers from the list if their `rdata` matches a target in the health check monitor referenced by the steering policy and the target is reported down.
	// * `WEIGHTED` - Uses a number between 0 and 255 to determine how often an answer will be served in relation to other answers. Anwers with a higher weight will be served more frequently.
	// * `PRIORITY` - Uses a defined rank value of answers to determine which answer to serve, moving those with the lowest values to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	// * `LIMIT` - Filters answers that are too far down the list. Parameter `defaultCount` specifies how many answers to keep. **Example:** If `defaultCount` has a value of `2` and there are five answers left, when the `LIMIT` rule is processed, only the first two answers will remain in the list.
	RuleType string `pulumi:"ruleType"`
}

// SteeringPolicyRuleInput is an input type that accepts SteeringPolicyRuleArgs and SteeringPolicyRuleOutput values.
// You can construct a concrete instance of `SteeringPolicyRuleInput` via:
//
//	SteeringPolicyRuleArgs{...}
type SteeringPolicyRuleInput interface {
	pulumi.Input

	ToSteeringPolicyRuleOutput() SteeringPolicyRuleOutput
	ToSteeringPolicyRuleOutputWithContext(context.Context) SteeringPolicyRuleOutput
}

type SteeringPolicyRuleArgs struct {
	// An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
	Cases SteeringPolicyRuleCaseArrayInput `pulumi:"cases"`
	// Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
	DefaultAnswerDatas SteeringPolicyRuleDefaultAnswerDataArrayInput `pulumi:"defaultAnswerDatas"`
	// Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
	DefaultCount pulumi.IntPtrInput `pulumi:"defaultCount"`
	// A user-defined description of the rule's purpose or behavior.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The type of a rule determines its sorting/filtering behavior.
	// * `FILTER` - Filters the list of answers based on their defined boolean data. Answers remain only if their `shouldKeep` value is `true`.
	// * `HEALTH` - Removes answers from the list if their `rdata` matches a target in the health check monitor referenced by the steering policy and the target is reported down.
	// * `WEIGHTED` - Uses a number between 0 and 255 to determine how often an answer will be served in relation to other answers. Anwers with a higher weight will be served more frequently.
	// * `PRIORITY` - Uses a defined rank value of answers to determine which answer to serve, moving those with the lowest values to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	// * `LIMIT` - Filters answers that are too far down the list. Parameter `defaultCount` specifies how many answers to keep. **Example:** If `defaultCount` has a value of `2` and there are five answers left, when the `LIMIT` rule is processed, only the first two answers will remain in the list.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (SteeringPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SteeringPolicyRule)(nil)).Elem()
}

func (i SteeringPolicyRuleArgs) ToSteeringPolicyRuleOutput() SteeringPolicyRuleOutput {
	return i.ToSteeringPolicyRuleOutputWithContext(context.Background())
}

func (i SteeringPolicyRuleArgs) ToSteeringPolicyRuleOutputWithContext(ctx context.Context) SteeringPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SteeringPolicyRuleOutput)
}

// SteeringPolicyRuleArrayInput is an input type that accepts SteeringPolicyRuleArray and SteeringPolicyRuleArrayOutput values.
// You can construct a concrete instance of `SteeringPolicyRuleArrayInput` via:
//
//	SteeringPolicyRuleArray{ SteeringPolicyRuleArgs{...} }
type SteeringPolicyRuleArrayInput interface {
	pulumi.Input

	ToSteeringPolicyRuleArrayOutput() SteeringPolicyRuleArrayOutput
	ToSteeringPolicyRuleArrayOutputWithContext(context.Context) SteeringPolicyRuleArrayOutput
}

type SteeringPolicyRuleArray []SteeringPolicyRuleInput

func (SteeringPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SteeringPolicyRule)(nil)).Elem()
}

func (i SteeringPolicyRuleArray) ToSteeringPolicyRuleArrayOutput() SteeringPolicyRuleArrayOutput {
	return i.ToSteeringPolicyRuleArrayOutputWithContext(context.Background())
}

func (i SteeringPolicyRuleArray) ToSteeringPolicyRuleArrayOutputWithContext(ctx context.Context) SteeringPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SteeringPolicyRuleArrayOutput)
}

type SteeringPolicyRuleOutput struct{ *pulumi.OutputState }

func (SteeringPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SteeringPolicyRule)(nil)).Elem()
}

func (o SteeringPolicyRuleOutput) ToSteeringPolicyRuleOutput() SteeringPolicyRuleOutput {
	return o
}

func (o SteeringPolicyRuleOutput) ToSteeringPolicyRuleOutputWithContext(ctx context.Context) SteeringPolicyRuleOutput {
	return o
}

// An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
func (o SteeringPolicyRuleOutput) Cases() SteeringPolicyRuleCaseArrayOutput {
	return o.ApplyT(func(v SteeringPolicyRule) []SteeringPolicyRuleCase { return v.Cases }).(SteeringPolicyRuleCaseArrayOutput)
}

// Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
func (o SteeringPolicyRuleOutput) DefaultAnswerDatas() SteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return o.ApplyT(func(v SteeringPolicyRule) []SteeringPolicyRuleDefaultAnswerData { return v.DefaultAnswerDatas }).(SteeringPolicyRuleDefaultAnswerDataArrayOutput)
}

// Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
func (o SteeringPolicyRuleOutput) DefaultCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SteeringPolicyRule) *int { return v.DefaultCount }).(pulumi.IntPtrOutput)
}

// A user-defined description of the rule's purpose or behavior.
func (o SteeringPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SteeringPolicyRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The type of a rule determines its sorting/filtering behavior.
// * `FILTER` - Filters the list of answers based on their defined boolean data. Answers remain only if their `shouldKeep` value is `true`.
// * `HEALTH` - Removes answers from the list if their `rdata` matches a target in the health check monitor referenced by the steering policy and the target is reported down.
// * `WEIGHTED` - Uses a number between 0 and 255 to determine how often an answer will be served in relation to other answers. Anwers with a higher weight will be served more frequently.
// * `PRIORITY` - Uses a defined rank value of answers to determine which answer to serve, moving those with the lowest values to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
// * `LIMIT` - Filters answers that are too far down the list. Parameter `defaultCount` specifies how many answers to keep. **Example:** If `defaultCount` has a value of `2` and there are five answers left, when the `LIMIT` rule is processed, only the first two answers will remain in the list.
func (o SteeringPolicyRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v SteeringPolicyRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type SteeringPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (SteeringPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SteeringPolicyRule)(nil)).Elem()
}

func (o SteeringPolicyRuleArrayOutput) ToSteeringPolicyRuleArrayOutput() SteeringPolicyRuleArrayOutput {
	return o
}

func (o SteeringPolicyRuleArrayOutput) ToSteeringPolicyRuleArrayOutputWithContext(ctx context.Context) SteeringPolicyRuleArrayOutput {
	return o
}

func (o SteeringPolicyRuleArrayOutput) Index(i pulumi.IntInput) SteeringPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SteeringPolicyRule {
		return vs[0].([]SteeringPolicyRule)[vs[1].(int)]
	}).(SteeringPolicyRuleOutput)
}

type SteeringPolicyRuleCase struct {
	// An array of `SteeringPolicyPriorityAnswerData` objects.
	AnswerDatas []SteeringPolicyRuleCaseAnswerData `pulumi:"answerDatas"`
	// An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.address in ('192.0.2.0/24')` to define a case that matches queries from that office.
	CaseCondition *string `pulumi:"caseCondition"`
	// The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
	Count *int `pulumi:"count"`
}

// SteeringPolicyRuleCaseInput is an input type that accepts SteeringPolicyRuleCaseArgs and SteeringPolicyRuleCaseOutput values.
// You can construct a concrete instance of `SteeringPolicyRuleCaseInput` via:
//
//	SteeringPolicyRuleCaseArgs{...}
type SteeringPolicyRuleCaseInput interface {
	pulumi.Input

	ToSteeringPolicyRuleCaseOutput() SteeringPolicyRuleCaseOutput
	ToSteeringPolicyRuleCaseOutputWithContext(context.Context) SteeringPolicyRuleCaseOutput
}

type SteeringPolicyRuleCaseArgs struct {
	// An array of `SteeringPolicyPriorityAnswerData` objects.
	AnswerDatas SteeringPolicyRuleCaseAnswerDataArrayInput `pulumi:"answerDatas"`
	// An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.address in ('192.0.2.0/24')` to define a case that matches queries from that office.
	CaseCondition pulumi.StringPtrInput `pulumi:"caseCondition"`
	// The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (SteeringPolicyRuleCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SteeringPolicyRuleCase)(nil)).Elem()
}

func (i SteeringPolicyRuleCaseArgs) ToSteeringPolicyRuleCaseOutput() SteeringPolicyRuleCaseOutput {
	return i.ToSteeringPolicyRuleCaseOutputWithContext(context.Background())
}

func (i SteeringPolicyRuleCaseArgs) ToSteeringPolicyRuleCaseOutputWithContext(ctx context.Context) SteeringPolicyRuleCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SteeringPolicyRuleCaseOutput)
}

// SteeringPolicyRuleCaseArrayInput is an input type that accepts SteeringPolicyRuleCaseArray and SteeringPolicyRuleCaseArrayOutput values.
// You can construct a concrete instance of `SteeringPolicyRuleCaseArrayInput` via:
//
//	SteeringPolicyRuleCaseArray{ SteeringPolicyRuleCaseArgs{...} }
type SteeringPolicyRuleCaseArrayInput interface {
	pulumi.Input

	ToSteeringPolicyRuleCaseArrayOutput() SteeringPolicyRuleCaseArrayOutput
	ToSteeringPolicyRuleCaseArrayOutputWithContext(context.Context) SteeringPolicyRuleCaseArrayOutput
}

type SteeringPolicyRuleCaseArray []SteeringPolicyRuleCaseInput

func (SteeringPolicyRuleCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SteeringPolicyRuleCase)(nil)).Elem()
}

func (i SteeringPolicyRuleCaseArray) ToSteeringPolicyRuleCaseArrayOutput() SteeringPolicyRuleCaseArrayOutput {
	return i.ToSteeringPolicyRuleCaseArrayOutputWithContext(context.Background())
}

func (i SteeringPolicyRuleCaseArray) ToSteeringPolicyRuleCaseArrayOutputWithContext(ctx context.Context) SteeringPolicyRuleCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SteeringPolicyRuleCaseArrayOutput)
}

type SteeringPolicyRuleCaseOutput struct{ *pulumi.OutputState }

func (SteeringPolicyRuleCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SteeringPolicyRuleCase)(nil)).Elem()
}

func (o SteeringPolicyRuleCaseOutput) ToSteeringPolicyRuleCaseOutput() SteeringPolicyRuleCaseOutput {
	return o
}

func (o SteeringPolicyRuleCaseOutput) ToSteeringPolicyRuleCaseOutputWithContext(ctx context.Context) SteeringPolicyRuleCaseOutput {
	return o
}

// An array of `SteeringPolicyPriorityAnswerData` objects.
func (o SteeringPolicyRuleCaseOutput) AnswerDatas() SteeringPolicyRuleCaseAnswerDataArrayOutput {
	return o.ApplyT(func(v SteeringPolicyRuleCase) []SteeringPolicyRuleCaseAnswerData { return v.AnswerDatas }).(SteeringPolicyRuleCaseAnswerDataArrayOutput)
}

// An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.address in ('192.0.2.0/24')` to define a case that matches queries from that office.
func (o SteeringPolicyRuleCaseOutput) CaseCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SteeringPolicyRuleCase) *string { return v.CaseCondition }).(pulumi.StringPtrOutput)
}

// The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
func (o SteeringPolicyRuleCaseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SteeringPolicyRuleCase) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type SteeringPolicyRuleCaseArrayOutput struct{ *pulumi.OutputState }

func (SteeringPolicyRuleCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SteeringPolicyRuleCase)(nil)).Elem()
}

func (o SteeringPolicyRuleCaseArrayOutput) ToSteeringPolicyRuleCaseArrayOutput() SteeringPolicyRuleCaseArrayOutput {
	return o
}

func (o SteeringPolicyRuleCaseArrayOutput) ToSteeringPolicyRuleCaseArrayOutputWithContext(ctx context.Context) SteeringPolicyRuleCaseArrayOutput {
	return o
}

func (o SteeringPolicyRuleCaseArrayOutput) Index(i pulumi.IntInput) SteeringPolicyRuleCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SteeringPolicyRuleCase {
		return vs[0].([]SteeringPolicyRuleCase)[vs[1].(int)]
	}).(SteeringPolicyRuleCaseOutput)
}

type SteeringPolicyRuleCaseAnswerData struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition *string `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep *bool `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value *int `pulumi:"value"`
}

// SteeringPolicyRuleCaseAnswerDataInput is an input type that accepts SteeringPolicyRuleCaseAnswerDataArgs and SteeringPolicyRuleCaseAnswerDataOutput values.
// You can construct a concrete instance of `SteeringPolicyRuleCaseAnswerDataInput` via:
//
//	SteeringPolicyRuleCaseAnswerDataArgs{...}
type SteeringPolicyRuleCaseAnswerDataInput interface {
	pulumi.Input

	ToSteeringPolicyRuleCaseAnswerDataOutput() SteeringPolicyRuleCaseAnswerDataOutput
	ToSteeringPolicyRuleCaseAnswerDataOutputWithContext(context.Context) SteeringPolicyRuleCaseAnswerDataOutput
}

type SteeringPolicyRuleCaseAnswerDataArgs struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition pulumi.StringPtrInput `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep pulumi.BoolPtrInput `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (SteeringPolicyRuleCaseAnswerDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (i SteeringPolicyRuleCaseAnswerDataArgs) ToSteeringPolicyRuleCaseAnswerDataOutput() SteeringPolicyRuleCaseAnswerDataOutput {
	return i.ToSteeringPolicyRuleCaseAnswerDataOutputWithContext(context.Background())
}

func (i SteeringPolicyRuleCaseAnswerDataArgs) ToSteeringPolicyRuleCaseAnswerDataOutputWithContext(ctx context.Context) SteeringPolicyRuleCaseAnswerDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SteeringPolicyRuleCaseAnswerDataOutput)
}

// SteeringPolicyRuleCaseAnswerDataArrayInput is an input type that accepts SteeringPolicyRuleCaseAnswerDataArray and SteeringPolicyRuleCaseAnswerDataArrayOutput values.
// You can construct a concrete instance of `SteeringPolicyRuleCaseAnswerDataArrayInput` via:
//
//	SteeringPolicyRuleCaseAnswerDataArray{ SteeringPolicyRuleCaseAnswerDataArgs{...} }
type SteeringPolicyRuleCaseAnswerDataArrayInput interface {
	pulumi.Input

	ToSteeringPolicyRuleCaseAnswerDataArrayOutput() SteeringPolicyRuleCaseAnswerDataArrayOutput
	ToSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(context.Context) SteeringPolicyRuleCaseAnswerDataArrayOutput
}

type SteeringPolicyRuleCaseAnswerDataArray []SteeringPolicyRuleCaseAnswerDataInput

func (SteeringPolicyRuleCaseAnswerDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (i SteeringPolicyRuleCaseAnswerDataArray) ToSteeringPolicyRuleCaseAnswerDataArrayOutput() SteeringPolicyRuleCaseAnswerDataArrayOutput {
	return i.ToSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(context.Background())
}

func (i SteeringPolicyRuleCaseAnswerDataArray) ToSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(ctx context.Context) SteeringPolicyRuleCaseAnswerDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SteeringPolicyRuleCaseAnswerDataArrayOutput)
}

type SteeringPolicyRuleCaseAnswerDataOutput struct{ *pulumi.OutputState }

func (SteeringPolicyRuleCaseAnswerDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (o SteeringPolicyRuleCaseAnswerDataOutput) ToSteeringPolicyRuleCaseAnswerDataOutput() SteeringPolicyRuleCaseAnswerDataOutput {
	return o
}

func (o SteeringPolicyRuleCaseAnswerDataOutput) ToSteeringPolicyRuleCaseAnswerDataOutputWithContext(ctx context.Context) SteeringPolicyRuleCaseAnswerDataOutput {
	return o
}

// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
func (o SteeringPolicyRuleCaseAnswerDataOutput) AnswerCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SteeringPolicyRuleCaseAnswerData) *string { return v.AnswerCondition }).(pulumi.StringPtrOutput)
}

// Keeps the answer only if the value is `true`.
func (o SteeringPolicyRuleCaseAnswerDataOutput) ShouldKeep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SteeringPolicyRuleCaseAnswerData) *bool { return v.ShouldKeep }).(pulumi.BoolPtrOutput)
}

// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
func (o SteeringPolicyRuleCaseAnswerDataOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SteeringPolicyRuleCaseAnswerData) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type SteeringPolicyRuleCaseAnswerDataArrayOutput struct{ *pulumi.OutputState }

func (SteeringPolicyRuleCaseAnswerDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (o SteeringPolicyRuleCaseAnswerDataArrayOutput) ToSteeringPolicyRuleCaseAnswerDataArrayOutput() SteeringPolicyRuleCaseAnswerDataArrayOutput {
	return o
}

func (o SteeringPolicyRuleCaseAnswerDataArrayOutput) ToSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(ctx context.Context) SteeringPolicyRuleCaseAnswerDataArrayOutput {
	return o
}

func (o SteeringPolicyRuleCaseAnswerDataArrayOutput) Index(i pulumi.IntInput) SteeringPolicyRuleCaseAnswerDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SteeringPolicyRuleCaseAnswerData {
		return vs[0].([]SteeringPolicyRuleCaseAnswerData)[vs[1].(int)]
	}).(SteeringPolicyRuleCaseAnswerDataOutput)
}

type SteeringPolicyRuleDefaultAnswerData struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition *string `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep *bool `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value *int `pulumi:"value"`
}

// SteeringPolicyRuleDefaultAnswerDataInput is an input type that accepts SteeringPolicyRuleDefaultAnswerDataArgs and SteeringPolicyRuleDefaultAnswerDataOutput values.
// You can construct a concrete instance of `SteeringPolicyRuleDefaultAnswerDataInput` via:
//
//	SteeringPolicyRuleDefaultAnswerDataArgs{...}
type SteeringPolicyRuleDefaultAnswerDataInput interface {
	pulumi.Input

	ToSteeringPolicyRuleDefaultAnswerDataOutput() SteeringPolicyRuleDefaultAnswerDataOutput
	ToSteeringPolicyRuleDefaultAnswerDataOutputWithContext(context.Context) SteeringPolicyRuleDefaultAnswerDataOutput
}

type SteeringPolicyRuleDefaultAnswerDataArgs struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition pulumi.StringPtrInput `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep pulumi.BoolPtrInput `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (SteeringPolicyRuleDefaultAnswerDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (i SteeringPolicyRuleDefaultAnswerDataArgs) ToSteeringPolicyRuleDefaultAnswerDataOutput() SteeringPolicyRuleDefaultAnswerDataOutput {
	return i.ToSteeringPolicyRuleDefaultAnswerDataOutputWithContext(context.Background())
}

func (i SteeringPolicyRuleDefaultAnswerDataArgs) ToSteeringPolicyRuleDefaultAnswerDataOutputWithContext(ctx context.Context) SteeringPolicyRuleDefaultAnswerDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SteeringPolicyRuleDefaultAnswerDataOutput)
}

// SteeringPolicyRuleDefaultAnswerDataArrayInput is an input type that accepts SteeringPolicyRuleDefaultAnswerDataArray and SteeringPolicyRuleDefaultAnswerDataArrayOutput values.
// You can construct a concrete instance of `SteeringPolicyRuleDefaultAnswerDataArrayInput` via:
//
//	SteeringPolicyRuleDefaultAnswerDataArray{ SteeringPolicyRuleDefaultAnswerDataArgs{...} }
type SteeringPolicyRuleDefaultAnswerDataArrayInput interface {
	pulumi.Input

	ToSteeringPolicyRuleDefaultAnswerDataArrayOutput() SteeringPolicyRuleDefaultAnswerDataArrayOutput
	ToSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(context.Context) SteeringPolicyRuleDefaultAnswerDataArrayOutput
}

type SteeringPolicyRuleDefaultAnswerDataArray []SteeringPolicyRuleDefaultAnswerDataInput

func (SteeringPolicyRuleDefaultAnswerDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (i SteeringPolicyRuleDefaultAnswerDataArray) ToSteeringPolicyRuleDefaultAnswerDataArrayOutput() SteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return i.ToSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(context.Background())
}

func (i SteeringPolicyRuleDefaultAnswerDataArray) ToSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(ctx context.Context) SteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SteeringPolicyRuleDefaultAnswerDataArrayOutput)
}

type SteeringPolicyRuleDefaultAnswerDataOutput struct{ *pulumi.OutputState }

func (SteeringPolicyRuleDefaultAnswerDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (o SteeringPolicyRuleDefaultAnswerDataOutput) ToSteeringPolicyRuleDefaultAnswerDataOutput() SteeringPolicyRuleDefaultAnswerDataOutput {
	return o
}

func (o SteeringPolicyRuleDefaultAnswerDataOutput) ToSteeringPolicyRuleDefaultAnswerDataOutputWithContext(ctx context.Context) SteeringPolicyRuleDefaultAnswerDataOutput {
	return o
}

// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
func (o SteeringPolicyRuleDefaultAnswerDataOutput) AnswerCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SteeringPolicyRuleDefaultAnswerData) *string { return v.AnswerCondition }).(pulumi.StringPtrOutput)
}

// Keeps the answer only if the value is `true`.
func (o SteeringPolicyRuleDefaultAnswerDataOutput) ShouldKeep() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SteeringPolicyRuleDefaultAnswerData) *bool { return v.ShouldKeep }).(pulumi.BoolPtrOutput)
}

// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
func (o SteeringPolicyRuleDefaultAnswerDataOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SteeringPolicyRuleDefaultAnswerData) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type SteeringPolicyRuleDefaultAnswerDataArrayOutput struct{ *pulumi.OutputState }

func (SteeringPolicyRuleDefaultAnswerDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (o SteeringPolicyRuleDefaultAnswerDataArrayOutput) ToSteeringPolicyRuleDefaultAnswerDataArrayOutput() SteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return o
}

func (o SteeringPolicyRuleDefaultAnswerDataArrayOutput) ToSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(ctx context.Context) SteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return o
}

func (o SteeringPolicyRuleDefaultAnswerDataArrayOutput) Index(i pulumi.IntInput) SteeringPolicyRuleDefaultAnswerDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SteeringPolicyRuleDefaultAnswerData {
		return vs[0].([]SteeringPolicyRuleDefaultAnswerData)[vs[1].(int)]
	}).(SteeringPolicyRuleDefaultAnswerDataOutput)
}

type ZoneDnssecConfig struct {
	// A read-only array of key signing key (KSK) versions.
	KskDnssecKeyVersions []ZoneDnssecConfigKskDnssecKeyVersion `pulumi:"kskDnssecKeyVersions"`
	// A read-only array of zone signing key (ZSK) versions.
	ZskDnssecKeyVersions []ZoneDnssecConfigZskDnssecKeyVersion `pulumi:"zskDnssecKeyVersions"`
}

// ZoneDnssecConfigInput is an input type that accepts ZoneDnssecConfigArgs and ZoneDnssecConfigOutput values.
// You can construct a concrete instance of `ZoneDnssecConfigInput` via:
//
//	ZoneDnssecConfigArgs{...}
type ZoneDnssecConfigInput interface {
	pulumi.Input

	ToZoneDnssecConfigOutput() ZoneDnssecConfigOutput
	ToZoneDnssecConfigOutputWithContext(context.Context) ZoneDnssecConfigOutput
}

type ZoneDnssecConfigArgs struct {
	// A read-only array of key signing key (KSK) versions.
	KskDnssecKeyVersions ZoneDnssecConfigKskDnssecKeyVersionArrayInput `pulumi:"kskDnssecKeyVersions"`
	// A read-only array of zone signing key (ZSK) versions.
	ZskDnssecKeyVersions ZoneDnssecConfigZskDnssecKeyVersionArrayInput `pulumi:"zskDnssecKeyVersions"`
}

func (ZoneDnssecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneDnssecConfig)(nil)).Elem()
}

func (i ZoneDnssecConfigArgs) ToZoneDnssecConfigOutput() ZoneDnssecConfigOutput {
	return i.ToZoneDnssecConfigOutputWithContext(context.Background())
}

func (i ZoneDnssecConfigArgs) ToZoneDnssecConfigOutputWithContext(ctx context.Context) ZoneDnssecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneDnssecConfigOutput)
}

// ZoneDnssecConfigArrayInput is an input type that accepts ZoneDnssecConfigArray and ZoneDnssecConfigArrayOutput values.
// You can construct a concrete instance of `ZoneDnssecConfigArrayInput` via:
//
//	ZoneDnssecConfigArray{ ZoneDnssecConfigArgs{...} }
type ZoneDnssecConfigArrayInput interface {
	pulumi.Input

	ToZoneDnssecConfigArrayOutput() ZoneDnssecConfigArrayOutput
	ToZoneDnssecConfigArrayOutputWithContext(context.Context) ZoneDnssecConfigArrayOutput
}

type ZoneDnssecConfigArray []ZoneDnssecConfigInput

func (ZoneDnssecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneDnssecConfig)(nil)).Elem()
}

func (i ZoneDnssecConfigArray) ToZoneDnssecConfigArrayOutput() ZoneDnssecConfigArrayOutput {
	return i.ToZoneDnssecConfigArrayOutputWithContext(context.Background())
}

func (i ZoneDnssecConfigArray) ToZoneDnssecConfigArrayOutputWithContext(ctx context.Context) ZoneDnssecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneDnssecConfigArrayOutput)
}

type ZoneDnssecConfigOutput struct{ *pulumi.OutputState }

func (ZoneDnssecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneDnssecConfig)(nil)).Elem()
}

func (o ZoneDnssecConfigOutput) ToZoneDnssecConfigOutput() ZoneDnssecConfigOutput {
	return o
}

func (o ZoneDnssecConfigOutput) ToZoneDnssecConfigOutputWithContext(ctx context.Context) ZoneDnssecConfigOutput {
	return o
}

// A read-only array of key signing key (KSK) versions.
func (o ZoneDnssecConfigOutput) KskDnssecKeyVersions() ZoneDnssecConfigKskDnssecKeyVersionArrayOutput {
	return o.ApplyT(func(v ZoneDnssecConfig) []ZoneDnssecConfigKskDnssecKeyVersion { return v.KskDnssecKeyVersions }).(ZoneDnssecConfigKskDnssecKeyVersionArrayOutput)
}

// A read-only array of zone signing key (ZSK) versions.
func (o ZoneDnssecConfigOutput) ZskDnssecKeyVersions() ZoneDnssecConfigZskDnssecKeyVersionArrayOutput {
	return o.ApplyT(func(v ZoneDnssecConfig) []ZoneDnssecConfigZskDnssecKeyVersion { return v.ZskDnssecKeyVersions }).(ZoneDnssecConfigZskDnssecKeyVersionArrayOutput)
}

type ZoneDnssecConfigArrayOutput struct{ *pulumi.OutputState }

func (ZoneDnssecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneDnssecConfig)(nil)).Elem()
}

func (o ZoneDnssecConfigArrayOutput) ToZoneDnssecConfigArrayOutput() ZoneDnssecConfigArrayOutput {
	return o
}

func (o ZoneDnssecConfigArrayOutput) ToZoneDnssecConfigArrayOutputWithContext(ctx context.Context) ZoneDnssecConfigArrayOutput {
	return o
}

func (o ZoneDnssecConfigArrayOutput) Index(i pulumi.IntInput) ZoneDnssecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneDnssecConfig {
		return vs[0].([]ZoneDnssecConfig)[vs[1].(int)]
	}).(ZoneDnssecConfigOutput)
}

type ZoneDnssecConfigKskDnssecKeyVersion struct {
	// The signing algorithm used for the key.
	Algorithm *string `pulumi:"algorithm"`
	// An array of data for DS records corresponding with this key version. An entry will exist for each supported DS digest algorithm.
	DsDatas []ZoneDnssecConfigKskDnssecKeyVersionDsData `pulumi:"dsDatas"`
	// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
	KeyTag *int `pulumi:"keyTag"`
	// The length of the corresponding private key in bytes, expressed as an integer.
	LengthInBytes *int `pulumi:"lengthInBytes"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
	PredecessorDnssecKeyVersionUuid *string `pulumi:"predecessorDnssecKeyVersionUuid"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
	SuccessorDnssecKeyVersionUuid *string `pulumi:"successorDnssecKeyVersionUuid"`
	// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
	TimeActivated *string `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
	TimeExpired *string `pulumi:"timeExpired"`
	// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeInactivated *string `pulumi:"timeInactivated"`
	// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
	TimePromoted *string `pulumi:"timePromoted"`
	// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
	TimePublished *string `pulumi:"timePublished"`
	// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeUnpublished *string `pulumi:"timeUnpublished"`
	// The UUID of the `DnssecKeyVersion`.
	Uuid *string `pulumi:"uuid"`
}

// ZoneDnssecConfigKskDnssecKeyVersionInput is an input type that accepts ZoneDnssecConfigKskDnssecKeyVersionArgs and ZoneDnssecConfigKskDnssecKeyVersionOutput values.
// You can construct a concrete instance of `ZoneDnssecConfigKskDnssecKeyVersionInput` via:
//
//	ZoneDnssecConfigKskDnssecKeyVersionArgs{...}
type ZoneDnssecConfigKskDnssecKeyVersionInput interface {
	pulumi.Input

	ToZoneDnssecConfigKskDnssecKeyVersionOutput() ZoneDnssecConfigKskDnssecKeyVersionOutput
	ToZoneDnssecConfigKskDnssecKeyVersionOutputWithContext(context.Context) ZoneDnssecConfigKskDnssecKeyVersionOutput
}

type ZoneDnssecConfigKskDnssecKeyVersionArgs struct {
	// The signing algorithm used for the key.
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// An array of data for DS records corresponding with this key version. An entry will exist for each supported DS digest algorithm.
	DsDatas ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayInput `pulumi:"dsDatas"`
	// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
	KeyTag pulumi.IntPtrInput `pulumi:"keyTag"`
	// The length of the corresponding private key in bytes, expressed as an integer.
	LengthInBytes pulumi.IntPtrInput `pulumi:"lengthInBytes"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
	PredecessorDnssecKeyVersionUuid pulumi.StringPtrInput `pulumi:"predecessorDnssecKeyVersionUuid"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
	SuccessorDnssecKeyVersionUuid pulumi.StringPtrInput `pulumi:"successorDnssecKeyVersionUuid"`
	// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
	TimeActivated pulumi.StringPtrInput `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
	TimeExpired pulumi.StringPtrInput `pulumi:"timeExpired"`
	// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeInactivated pulumi.StringPtrInput `pulumi:"timeInactivated"`
	// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
	TimePromoted pulumi.StringPtrInput `pulumi:"timePromoted"`
	// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
	TimePublished pulumi.StringPtrInput `pulumi:"timePublished"`
	// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeUnpublished pulumi.StringPtrInput `pulumi:"timeUnpublished"`
	// The UUID of the `DnssecKeyVersion`.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ZoneDnssecConfigKskDnssecKeyVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (i ZoneDnssecConfigKskDnssecKeyVersionArgs) ToZoneDnssecConfigKskDnssecKeyVersionOutput() ZoneDnssecConfigKskDnssecKeyVersionOutput {
	return i.ToZoneDnssecConfigKskDnssecKeyVersionOutputWithContext(context.Background())
}

func (i ZoneDnssecConfigKskDnssecKeyVersionArgs) ToZoneDnssecConfigKskDnssecKeyVersionOutputWithContext(ctx context.Context) ZoneDnssecConfigKskDnssecKeyVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneDnssecConfigKskDnssecKeyVersionOutput)
}

// ZoneDnssecConfigKskDnssecKeyVersionArrayInput is an input type that accepts ZoneDnssecConfigKskDnssecKeyVersionArray and ZoneDnssecConfigKskDnssecKeyVersionArrayOutput values.
// You can construct a concrete instance of `ZoneDnssecConfigKskDnssecKeyVersionArrayInput` via:
//
//	ZoneDnssecConfigKskDnssecKeyVersionArray{ ZoneDnssecConfigKskDnssecKeyVersionArgs{...} }
type ZoneDnssecConfigKskDnssecKeyVersionArrayInput interface {
	pulumi.Input

	ToZoneDnssecConfigKskDnssecKeyVersionArrayOutput() ZoneDnssecConfigKskDnssecKeyVersionArrayOutput
	ToZoneDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(context.Context) ZoneDnssecConfigKskDnssecKeyVersionArrayOutput
}

type ZoneDnssecConfigKskDnssecKeyVersionArray []ZoneDnssecConfigKskDnssecKeyVersionInput

func (ZoneDnssecConfigKskDnssecKeyVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (i ZoneDnssecConfigKskDnssecKeyVersionArray) ToZoneDnssecConfigKskDnssecKeyVersionArrayOutput() ZoneDnssecConfigKskDnssecKeyVersionArrayOutput {
	return i.ToZoneDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(context.Background())
}

func (i ZoneDnssecConfigKskDnssecKeyVersionArray) ToZoneDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) ZoneDnssecConfigKskDnssecKeyVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneDnssecConfigKskDnssecKeyVersionArrayOutput)
}

type ZoneDnssecConfigKskDnssecKeyVersionOutput struct{ *pulumi.OutputState }

func (ZoneDnssecConfigKskDnssecKeyVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) ToZoneDnssecConfigKskDnssecKeyVersionOutput() ZoneDnssecConfigKskDnssecKeyVersionOutput {
	return o
}

func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) ToZoneDnssecConfigKskDnssecKeyVersionOutputWithContext(ctx context.Context) ZoneDnssecConfigKskDnssecKeyVersionOutput {
	return o
}

// The signing algorithm used for the key.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// An array of data for DS records corresponding with this key version. An entry will exist for each supported DS digest algorithm.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) DsDatas() ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) []ZoneDnssecConfigKskDnssecKeyVersionDsData {
		return v.DsDatas
	}).(ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput)
}

// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) KeyTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *int { return v.KeyTag }).(pulumi.IntPtrOutput)
}

// The length of the corresponding private key in bytes, expressed as an integer.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) LengthInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *int { return v.LengthInBytes }).(pulumi.IntPtrOutput)
}

// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) PredecessorDnssecKeyVersionUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *string { return v.PredecessorDnssecKeyVersionUuid }).(pulumi.StringPtrOutput)
}

// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) SuccessorDnssecKeyVersionUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *string { return v.SuccessorDnssecKeyVersionUuid }).(pulumi.StringPtrOutput)
}

// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) TimeActivated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *string { return v.TimeActivated }).(pulumi.StringPtrOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) TimeExpired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *string { return v.TimeExpired }).(pulumi.StringPtrOutput)
}

// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) TimeInactivated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *string { return v.TimeInactivated }).(pulumi.StringPtrOutput)
}

// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) TimePromoted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *string { return v.TimePromoted }).(pulumi.StringPtrOutput)
}

// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) TimePublished() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *string { return v.TimePublished }).(pulumi.StringPtrOutput)
}

// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) TimeUnpublished() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *string { return v.TimeUnpublished }).(pulumi.StringPtrOutput)
}

// The UUID of the `DnssecKeyVersion`.
func (o ZoneDnssecConfigKskDnssecKeyVersionOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersion) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ZoneDnssecConfigKskDnssecKeyVersionArrayOutput struct{ *pulumi.OutputState }

func (ZoneDnssecConfigKskDnssecKeyVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (o ZoneDnssecConfigKskDnssecKeyVersionArrayOutput) ToZoneDnssecConfigKskDnssecKeyVersionArrayOutput() ZoneDnssecConfigKskDnssecKeyVersionArrayOutput {
	return o
}

func (o ZoneDnssecConfigKskDnssecKeyVersionArrayOutput) ToZoneDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) ZoneDnssecConfigKskDnssecKeyVersionArrayOutput {
	return o
}

func (o ZoneDnssecConfigKskDnssecKeyVersionArrayOutput) Index(i pulumi.IntInput) ZoneDnssecConfigKskDnssecKeyVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneDnssecConfigKskDnssecKeyVersion {
		return vs[0].([]ZoneDnssecConfigKskDnssecKeyVersion)[vs[1].(int)]
	}).(ZoneDnssecConfigKskDnssecKeyVersionOutput)
}

type ZoneDnssecConfigKskDnssecKeyVersionDsData struct {
	// The type of the digest associated with the rdata.
	DigestType *string `pulumi:"digestType"`
	// Presentation-format DS record data that must be added to the parent zone. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata *string `pulumi:"rdata"`
}

// ZoneDnssecConfigKskDnssecKeyVersionDsDataInput is an input type that accepts ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs and ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput values.
// You can construct a concrete instance of `ZoneDnssecConfigKskDnssecKeyVersionDsDataInput` via:
//
//	ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs{...}
type ZoneDnssecConfigKskDnssecKeyVersionDsDataInput interface {
	pulumi.Input

	ToZoneDnssecConfigKskDnssecKeyVersionDsDataOutput() ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput
	ToZoneDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(context.Context) ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput
}

type ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs struct {
	// The type of the digest associated with the rdata.
	DigestType pulumi.StringPtrInput `pulumi:"digestType"`
	// Presentation-format DS record data that must be added to the parent zone. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringPtrInput `pulumi:"rdata"`
}

func (ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (i ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs) ToZoneDnssecConfigKskDnssecKeyVersionDsDataOutput() ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return i.ToZoneDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(context.Background())
}

func (i ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs) ToZoneDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(ctx context.Context) ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput)
}

// ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayInput is an input type that accepts ZoneDnssecConfigKskDnssecKeyVersionDsDataArray and ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput values.
// You can construct a concrete instance of `ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayInput` via:
//
//	ZoneDnssecConfigKskDnssecKeyVersionDsDataArray{ ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs{...} }
type ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayInput interface {
	pulumi.Input

	ToZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput() ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput
	ToZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(context.Context) ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput
}

type ZoneDnssecConfigKskDnssecKeyVersionDsDataArray []ZoneDnssecConfigKskDnssecKeyVersionDsDataInput

func (ZoneDnssecConfigKskDnssecKeyVersionDsDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (i ZoneDnssecConfigKskDnssecKeyVersionDsDataArray) ToZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput() ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return i.ToZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(context.Background())
}

func (i ZoneDnssecConfigKskDnssecKeyVersionDsDataArray) ToZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(ctx context.Context) ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput)
}

type ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput struct{ *pulumi.OutputState }

func (ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (o ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput) ToZoneDnssecConfigKskDnssecKeyVersionDsDataOutput() ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return o
}

func (o ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput) ToZoneDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(ctx context.Context) ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return o
}

// The type of the digest associated with the rdata.
func (o ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput) DigestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersionDsData) *string { return v.DigestType }).(pulumi.StringPtrOutput)
}

// Presentation-format DS record data that must be added to the parent zone. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
func (o ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput) Rdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigKskDnssecKeyVersionDsData) *string { return v.Rdata }).(pulumi.StringPtrOutput)
}

type ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput struct{ *pulumi.OutputState }

func (ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (o ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) ToZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput() ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return o
}

func (o ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) ToZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(ctx context.Context) ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return o
}

func (o ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) Index(i pulumi.IntInput) ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneDnssecConfigKskDnssecKeyVersionDsData {
		return vs[0].([]ZoneDnssecConfigKskDnssecKeyVersionDsData)[vs[1].(int)]
	}).(ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput)
}

type ZoneDnssecConfigZskDnssecKeyVersion struct {
	// The signing algorithm used for the key.
	Algorithm *string `pulumi:"algorithm"`
	// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
	KeyTag *int `pulumi:"keyTag"`
	// The length of the corresponding private key in bytes, expressed as an integer.
	LengthInBytes *int `pulumi:"lengthInBytes"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
	PredecessorDnssecKeyVersionUuid *string `pulumi:"predecessorDnssecKeyVersionUuid"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
	SuccessorDnssecKeyVersionUuid *string `pulumi:"successorDnssecKeyVersionUuid"`
	// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
	TimeActivated *string `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
	TimeExpired *string `pulumi:"timeExpired"`
	// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeInactivated *string `pulumi:"timeInactivated"`
	// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
	TimePromoted *string `pulumi:"timePromoted"`
	// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
	TimePublished *string `pulumi:"timePublished"`
	// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeUnpublished *string `pulumi:"timeUnpublished"`
	// The UUID of the `DnssecKeyVersion`.
	Uuid *string `pulumi:"uuid"`
}

// ZoneDnssecConfigZskDnssecKeyVersionInput is an input type that accepts ZoneDnssecConfigZskDnssecKeyVersionArgs and ZoneDnssecConfigZskDnssecKeyVersionOutput values.
// You can construct a concrete instance of `ZoneDnssecConfigZskDnssecKeyVersionInput` via:
//
//	ZoneDnssecConfigZskDnssecKeyVersionArgs{...}
type ZoneDnssecConfigZskDnssecKeyVersionInput interface {
	pulumi.Input

	ToZoneDnssecConfigZskDnssecKeyVersionOutput() ZoneDnssecConfigZskDnssecKeyVersionOutput
	ToZoneDnssecConfigZskDnssecKeyVersionOutputWithContext(context.Context) ZoneDnssecConfigZskDnssecKeyVersionOutput
}

type ZoneDnssecConfigZskDnssecKeyVersionArgs struct {
	// The signing algorithm used for the key.
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
	KeyTag pulumi.IntPtrInput `pulumi:"keyTag"`
	// The length of the corresponding private key in bytes, expressed as an integer.
	LengthInBytes pulumi.IntPtrInput `pulumi:"lengthInBytes"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
	PredecessorDnssecKeyVersionUuid pulumi.StringPtrInput `pulumi:"predecessorDnssecKeyVersionUuid"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
	SuccessorDnssecKeyVersionUuid pulumi.StringPtrInput `pulumi:"successorDnssecKeyVersionUuid"`
	// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
	TimeActivated pulumi.StringPtrInput `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringPtrInput `pulumi:"timeCreated"`
	// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
	TimeExpired pulumi.StringPtrInput `pulumi:"timeExpired"`
	// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeInactivated pulumi.StringPtrInput `pulumi:"timeInactivated"`
	// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
	TimePromoted pulumi.StringPtrInput `pulumi:"timePromoted"`
	// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
	TimePublished pulumi.StringPtrInput `pulumi:"timePublished"`
	// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeUnpublished pulumi.StringPtrInput `pulumi:"timeUnpublished"`
	// The UUID of the `DnssecKeyVersion`.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ZoneDnssecConfigZskDnssecKeyVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (i ZoneDnssecConfigZskDnssecKeyVersionArgs) ToZoneDnssecConfigZskDnssecKeyVersionOutput() ZoneDnssecConfigZskDnssecKeyVersionOutput {
	return i.ToZoneDnssecConfigZskDnssecKeyVersionOutputWithContext(context.Background())
}

func (i ZoneDnssecConfigZskDnssecKeyVersionArgs) ToZoneDnssecConfigZskDnssecKeyVersionOutputWithContext(ctx context.Context) ZoneDnssecConfigZskDnssecKeyVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneDnssecConfigZskDnssecKeyVersionOutput)
}

// ZoneDnssecConfigZskDnssecKeyVersionArrayInput is an input type that accepts ZoneDnssecConfigZskDnssecKeyVersionArray and ZoneDnssecConfigZskDnssecKeyVersionArrayOutput values.
// You can construct a concrete instance of `ZoneDnssecConfigZskDnssecKeyVersionArrayInput` via:
//
//	ZoneDnssecConfigZskDnssecKeyVersionArray{ ZoneDnssecConfigZskDnssecKeyVersionArgs{...} }
type ZoneDnssecConfigZskDnssecKeyVersionArrayInput interface {
	pulumi.Input

	ToZoneDnssecConfigZskDnssecKeyVersionArrayOutput() ZoneDnssecConfigZskDnssecKeyVersionArrayOutput
	ToZoneDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(context.Context) ZoneDnssecConfigZskDnssecKeyVersionArrayOutput
}

type ZoneDnssecConfigZskDnssecKeyVersionArray []ZoneDnssecConfigZskDnssecKeyVersionInput

func (ZoneDnssecConfigZskDnssecKeyVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (i ZoneDnssecConfigZskDnssecKeyVersionArray) ToZoneDnssecConfigZskDnssecKeyVersionArrayOutput() ZoneDnssecConfigZskDnssecKeyVersionArrayOutput {
	return i.ToZoneDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(context.Background())
}

func (i ZoneDnssecConfigZskDnssecKeyVersionArray) ToZoneDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) ZoneDnssecConfigZskDnssecKeyVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneDnssecConfigZskDnssecKeyVersionArrayOutput)
}

type ZoneDnssecConfigZskDnssecKeyVersionOutput struct{ *pulumi.OutputState }

func (ZoneDnssecConfigZskDnssecKeyVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) ToZoneDnssecConfigZskDnssecKeyVersionOutput() ZoneDnssecConfigZskDnssecKeyVersionOutput {
	return o
}

func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) ToZoneDnssecConfigZskDnssecKeyVersionOutputWithContext(ctx context.Context) ZoneDnssecConfigZskDnssecKeyVersionOutput {
	return o
}

// The signing algorithm used for the key.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) KeyTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *int { return v.KeyTag }).(pulumi.IntPtrOutput)
}

// The length of the corresponding private key in bytes, expressed as an integer.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) LengthInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *int { return v.LengthInBytes }).(pulumi.IntPtrOutput)
}

// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) PredecessorDnssecKeyVersionUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *string { return v.PredecessorDnssecKeyVersionUuid }).(pulumi.StringPtrOutput)
}

// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) SuccessorDnssecKeyVersionUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *string { return v.SuccessorDnssecKeyVersionUuid }).(pulumi.StringPtrOutput)
}

// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) TimeActivated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *string { return v.TimeActivated }).(pulumi.StringPtrOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) TimeCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *string { return v.TimeCreated }).(pulumi.StringPtrOutput)
}

// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) TimeExpired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *string { return v.TimeExpired }).(pulumi.StringPtrOutput)
}

// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) TimeInactivated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *string { return v.TimeInactivated }).(pulumi.StringPtrOutput)
}

// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) TimePromoted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *string { return v.TimePromoted }).(pulumi.StringPtrOutput)
}

// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) TimePublished() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *string { return v.TimePublished }).(pulumi.StringPtrOutput)
}

// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) TimeUnpublished() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *string { return v.TimeUnpublished }).(pulumi.StringPtrOutput)
}

// The UUID of the `DnssecKeyVersion`.
func (o ZoneDnssecConfigZskDnssecKeyVersionOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneDnssecConfigZskDnssecKeyVersion) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ZoneDnssecConfigZskDnssecKeyVersionArrayOutput struct{ *pulumi.OutputState }

func (ZoneDnssecConfigZskDnssecKeyVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (o ZoneDnssecConfigZskDnssecKeyVersionArrayOutput) ToZoneDnssecConfigZskDnssecKeyVersionArrayOutput() ZoneDnssecConfigZskDnssecKeyVersionArrayOutput {
	return o
}

func (o ZoneDnssecConfigZskDnssecKeyVersionArrayOutput) ToZoneDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) ZoneDnssecConfigZskDnssecKeyVersionArrayOutput {
	return o
}

func (o ZoneDnssecConfigZskDnssecKeyVersionArrayOutput) Index(i pulumi.IntInput) ZoneDnssecConfigZskDnssecKeyVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneDnssecConfigZskDnssecKeyVersion {
		return vs[0].([]ZoneDnssecConfigZskDnssecKeyVersion)[vs[1].(int)]
	}).(ZoneDnssecConfigZskDnssecKeyVersionOutput)
}

type ZoneExternalDownstream struct {
	// (Updatable) The server's IP address (IPv4 or IPv6).
	Address string `pulumi:"address"`
	// (Updatable) The server's port. Port value must be a value of 53, otherwise omit the port value.
	Port *int `pulumi:"port"`
	// (Updatable) The OCID of the TSIG key. A TSIG key is used to secure DNS messages (in this case, zone transfers) between two systems that both have the (shared) secret.
	TsigKeyId *string `pulumi:"tsigKeyId"`
}

// ZoneExternalDownstreamInput is an input type that accepts ZoneExternalDownstreamArgs and ZoneExternalDownstreamOutput values.
// You can construct a concrete instance of `ZoneExternalDownstreamInput` via:
//
//	ZoneExternalDownstreamArgs{...}
type ZoneExternalDownstreamInput interface {
	pulumi.Input

	ToZoneExternalDownstreamOutput() ZoneExternalDownstreamOutput
	ToZoneExternalDownstreamOutputWithContext(context.Context) ZoneExternalDownstreamOutput
}

type ZoneExternalDownstreamArgs struct {
	// (Updatable) The server's IP address (IPv4 or IPv6).
	Address pulumi.StringInput `pulumi:"address"`
	// (Updatable) The server's port. Port value must be a value of 53, otherwise omit the port value.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// (Updatable) The OCID of the TSIG key. A TSIG key is used to secure DNS messages (in this case, zone transfers) between two systems that both have the (shared) secret.
	TsigKeyId pulumi.StringPtrInput `pulumi:"tsigKeyId"`
}

func (ZoneExternalDownstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneExternalDownstream)(nil)).Elem()
}

func (i ZoneExternalDownstreamArgs) ToZoneExternalDownstreamOutput() ZoneExternalDownstreamOutput {
	return i.ToZoneExternalDownstreamOutputWithContext(context.Background())
}

func (i ZoneExternalDownstreamArgs) ToZoneExternalDownstreamOutputWithContext(ctx context.Context) ZoneExternalDownstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneExternalDownstreamOutput)
}

// ZoneExternalDownstreamArrayInput is an input type that accepts ZoneExternalDownstreamArray and ZoneExternalDownstreamArrayOutput values.
// You can construct a concrete instance of `ZoneExternalDownstreamArrayInput` via:
//
//	ZoneExternalDownstreamArray{ ZoneExternalDownstreamArgs{...} }
type ZoneExternalDownstreamArrayInput interface {
	pulumi.Input

	ToZoneExternalDownstreamArrayOutput() ZoneExternalDownstreamArrayOutput
	ToZoneExternalDownstreamArrayOutputWithContext(context.Context) ZoneExternalDownstreamArrayOutput
}

type ZoneExternalDownstreamArray []ZoneExternalDownstreamInput

func (ZoneExternalDownstreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneExternalDownstream)(nil)).Elem()
}

func (i ZoneExternalDownstreamArray) ToZoneExternalDownstreamArrayOutput() ZoneExternalDownstreamArrayOutput {
	return i.ToZoneExternalDownstreamArrayOutputWithContext(context.Background())
}

func (i ZoneExternalDownstreamArray) ToZoneExternalDownstreamArrayOutputWithContext(ctx context.Context) ZoneExternalDownstreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneExternalDownstreamArrayOutput)
}

type ZoneExternalDownstreamOutput struct{ *pulumi.OutputState }

func (ZoneExternalDownstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneExternalDownstream)(nil)).Elem()
}

func (o ZoneExternalDownstreamOutput) ToZoneExternalDownstreamOutput() ZoneExternalDownstreamOutput {
	return o
}

func (o ZoneExternalDownstreamOutput) ToZoneExternalDownstreamOutputWithContext(ctx context.Context) ZoneExternalDownstreamOutput {
	return o
}

// (Updatable) The server's IP address (IPv4 or IPv6).
func (o ZoneExternalDownstreamOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneExternalDownstream) string { return v.Address }).(pulumi.StringOutput)
}

// (Updatable) The server's port. Port value must be a value of 53, otherwise omit the port value.
func (o ZoneExternalDownstreamOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneExternalDownstream) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// (Updatable) The OCID of the TSIG key. A TSIG key is used to secure DNS messages (in this case, zone transfers) between two systems that both have the (shared) secret.
func (o ZoneExternalDownstreamOutput) TsigKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneExternalDownstream) *string { return v.TsigKeyId }).(pulumi.StringPtrOutput)
}

type ZoneExternalDownstreamArrayOutput struct{ *pulumi.OutputState }

func (ZoneExternalDownstreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneExternalDownstream)(nil)).Elem()
}

func (o ZoneExternalDownstreamArrayOutput) ToZoneExternalDownstreamArrayOutput() ZoneExternalDownstreamArrayOutput {
	return o
}

func (o ZoneExternalDownstreamArrayOutput) ToZoneExternalDownstreamArrayOutputWithContext(ctx context.Context) ZoneExternalDownstreamArrayOutput {
	return o
}

func (o ZoneExternalDownstreamArrayOutput) Index(i pulumi.IntInput) ZoneExternalDownstreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneExternalDownstream {
		return vs[0].([]ZoneExternalDownstream)[vs[1].(int)]
	}).(ZoneExternalDownstreamOutput)
}

type ZoneExternalMaster struct {
	// (Updatable) The server's IP address (IPv4 or IPv6).
	Address string `pulumi:"address"`
	// (Updatable) The server's port. Port value must be a value of 53, otherwise omit the port value.
	Port *int `pulumi:"port"`
	// (Updatable) The OCID of the TSIG key.
	TsigKeyId *string `pulumi:"tsigKeyId"`
}

// ZoneExternalMasterInput is an input type that accepts ZoneExternalMasterArgs and ZoneExternalMasterOutput values.
// You can construct a concrete instance of `ZoneExternalMasterInput` via:
//
//	ZoneExternalMasterArgs{...}
type ZoneExternalMasterInput interface {
	pulumi.Input

	ToZoneExternalMasterOutput() ZoneExternalMasterOutput
	ToZoneExternalMasterOutputWithContext(context.Context) ZoneExternalMasterOutput
}

type ZoneExternalMasterArgs struct {
	// (Updatable) The server's IP address (IPv4 or IPv6).
	Address pulumi.StringInput `pulumi:"address"`
	// (Updatable) The server's port. Port value must be a value of 53, otherwise omit the port value.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// (Updatable) The OCID of the TSIG key.
	TsigKeyId pulumi.StringPtrInput `pulumi:"tsigKeyId"`
}

func (ZoneExternalMasterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneExternalMaster)(nil)).Elem()
}

func (i ZoneExternalMasterArgs) ToZoneExternalMasterOutput() ZoneExternalMasterOutput {
	return i.ToZoneExternalMasterOutputWithContext(context.Background())
}

func (i ZoneExternalMasterArgs) ToZoneExternalMasterOutputWithContext(ctx context.Context) ZoneExternalMasterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneExternalMasterOutput)
}

// ZoneExternalMasterArrayInput is an input type that accepts ZoneExternalMasterArray and ZoneExternalMasterArrayOutput values.
// You can construct a concrete instance of `ZoneExternalMasterArrayInput` via:
//
//	ZoneExternalMasterArray{ ZoneExternalMasterArgs{...} }
type ZoneExternalMasterArrayInput interface {
	pulumi.Input

	ToZoneExternalMasterArrayOutput() ZoneExternalMasterArrayOutput
	ToZoneExternalMasterArrayOutputWithContext(context.Context) ZoneExternalMasterArrayOutput
}

type ZoneExternalMasterArray []ZoneExternalMasterInput

func (ZoneExternalMasterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneExternalMaster)(nil)).Elem()
}

func (i ZoneExternalMasterArray) ToZoneExternalMasterArrayOutput() ZoneExternalMasterArrayOutput {
	return i.ToZoneExternalMasterArrayOutputWithContext(context.Background())
}

func (i ZoneExternalMasterArray) ToZoneExternalMasterArrayOutputWithContext(ctx context.Context) ZoneExternalMasterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneExternalMasterArrayOutput)
}

type ZoneExternalMasterOutput struct{ *pulumi.OutputState }

func (ZoneExternalMasterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneExternalMaster)(nil)).Elem()
}

func (o ZoneExternalMasterOutput) ToZoneExternalMasterOutput() ZoneExternalMasterOutput {
	return o
}

func (o ZoneExternalMasterOutput) ToZoneExternalMasterOutputWithContext(ctx context.Context) ZoneExternalMasterOutput {
	return o
}

// (Updatable) The server's IP address (IPv4 or IPv6).
func (o ZoneExternalMasterOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneExternalMaster) string { return v.Address }).(pulumi.StringOutput)
}

// (Updatable) The server's port. Port value must be a value of 53, otherwise omit the port value.
func (o ZoneExternalMasterOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneExternalMaster) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// (Updatable) The OCID of the TSIG key.
func (o ZoneExternalMasterOutput) TsigKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneExternalMaster) *string { return v.TsigKeyId }).(pulumi.StringPtrOutput)
}

type ZoneExternalMasterArrayOutput struct{ *pulumi.OutputState }

func (ZoneExternalMasterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneExternalMaster)(nil)).Elem()
}

func (o ZoneExternalMasterArrayOutput) ToZoneExternalMasterArrayOutput() ZoneExternalMasterArrayOutput {
	return o
}

func (o ZoneExternalMasterArrayOutput) ToZoneExternalMasterArrayOutputWithContext(ctx context.Context) ZoneExternalMasterArrayOutput {
	return o
}

func (o ZoneExternalMasterArrayOutput) Index(i pulumi.IntInput) ZoneExternalMasterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneExternalMaster {
		return vs[0].([]ZoneExternalMaster)[vs[1].(int)]
	}).(ZoneExternalMasterOutput)
}

type ZoneNameserver struct {
	// The hostname of the nameserver.
	Hostname *string `pulumi:"hostname"`
}

// ZoneNameserverInput is an input type that accepts ZoneNameserverArgs and ZoneNameserverOutput values.
// You can construct a concrete instance of `ZoneNameserverInput` via:
//
//	ZoneNameserverArgs{...}
type ZoneNameserverInput interface {
	pulumi.Input

	ToZoneNameserverOutput() ZoneNameserverOutput
	ToZoneNameserverOutputWithContext(context.Context) ZoneNameserverOutput
}

type ZoneNameserverArgs struct {
	// The hostname of the nameserver.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
}

func (ZoneNameserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneNameserver)(nil)).Elem()
}

func (i ZoneNameserverArgs) ToZoneNameserverOutput() ZoneNameserverOutput {
	return i.ToZoneNameserverOutputWithContext(context.Background())
}

func (i ZoneNameserverArgs) ToZoneNameserverOutputWithContext(ctx context.Context) ZoneNameserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneNameserverOutput)
}

// ZoneNameserverArrayInput is an input type that accepts ZoneNameserverArray and ZoneNameserverArrayOutput values.
// You can construct a concrete instance of `ZoneNameserverArrayInput` via:
//
//	ZoneNameserverArray{ ZoneNameserverArgs{...} }
type ZoneNameserverArrayInput interface {
	pulumi.Input

	ToZoneNameserverArrayOutput() ZoneNameserverArrayOutput
	ToZoneNameserverArrayOutputWithContext(context.Context) ZoneNameserverArrayOutput
}

type ZoneNameserverArray []ZoneNameserverInput

func (ZoneNameserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneNameserver)(nil)).Elem()
}

func (i ZoneNameserverArray) ToZoneNameserverArrayOutput() ZoneNameserverArrayOutput {
	return i.ToZoneNameserverArrayOutputWithContext(context.Background())
}

func (i ZoneNameserverArray) ToZoneNameserverArrayOutputWithContext(ctx context.Context) ZoneNameserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneNameserverArrayOutput)
}

type ZoneNameserverOutput struct{ *pulumi.OutputState }

func (ZoneNameserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneNameserver)(nil)).Elem()
}

func (o ZoneNameserverOutput) ToZoneNameserverOutput() ZoneNameserverOutput {
	return o
}

func (o ZoneNameserverOutput) ToZoneNameserverOutputWithContext(ctx context.Context) ZoneNameserverOutput {
	return o
}

// The hostname of the nameserver.
func (o ZoneNameserverOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneNameserver) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

type ZoneNameserverArrayOutput struct{ *pulumi.OutputState }

func (ZoneNameserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneNameserver)(nil)).Elem()
}

func (o ZoneNameserverArrayOutput) ToZoneNameserverArrayOutput() ZoneNameserverArrayOutput {
	return o
}

func (o ZoneNameserverArrayOutput) ToZoneNameserverArrayOutputWithContext(ctx context.Context) ZoneNameserverArrayOutput {
	return o
}

func (o ZoneNameserverArrayOutput) Index(i pulumi.IntInput) ZoneNameserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneNameserver {
		return vs[0].([]ZoneNameserver)[vs[1].(int)]
	}).(ZoneNameserverOutput)
}

type ZoneZoneTransferServer struct {
	// The server's IP address (IPv4 or IPv6).
	Address *string `pulumi:"address"`
	// A Boolean flag indicating whether or not the server is a zone data transfer destination.
	IsTransferDestination *bool `pulumi:"isTransferDestination"`
	// A Boolean flag indicating whether or not the server is a zone data transfer source.
	IsTransferSource *bool `pulumi:"isTransferSource"`
	// The server's port.
	Port *int `pulumi:"port"`
}

// ZoneZoneTransferServerInput is an input type that accepts ZoneZoneTransferServerArgs and ZoneZoneTransferServerOutput values.
// You can construct a concrete instance of `ZoneZoneTransferServerInput` via:
//
//	ZoneZoneTransferServerArgs{...}
type ZoneZoneTransferServerInput interface {
	pulumi.Input

	ToZoneZoneTransferServerOutput() ZoneZoneTransferServerOutput
	ToZoneZoneTransferServerOutputWithContext(context.Context) ZoneZoneTransferServerOutput
}

type ZoneZoneTransferServerArgs struct {
	// The server's IP address (IPv4 or IPv6).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// A Boolean flag indicating whether or not the server is a zone data transfer destination.
	IsTransferDestination pulumi.BoolPtrInput `pulumi:"isTransferDestination"`
	// A Boolean flag indicating whether or not the server is a zone data transfer source.
	IsTransferSource pulumi.BoolPtrInput `pulumi:"isTransferSource"`
	// The server's port.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ZoneZoneTransferServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneZoneTransferServer)(nil)).Elem()
}

func (i ZoneZoneTransferServerArgs) ToZoneZoneTransferServerOutput() ZoneZoneTransferServerOutput {
	return i.ToZoneZoneTransferServerOutputWithContext(context.Background())
}

func (i ZoneZoneTransferServerArgs) ToZoneZoneTransferServerOutputWithContext(ctx context.Context) ZoneZoneTransferServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneZoneTransferServerOutput)
}

// ZoneZoneTransferServerArrayInput is an input type that accepts ZoneZoneTransferServerArray and ZoneZoneTransferServerArrayOutput values.
// You can construct a concrete instance of `ZoneZoneTransferServerArrayInput` via:
//
//	ZoneZoneTransferServerArray{ ZoneZoneTransferServerArgs{...} }
type ZoneZoneTransferServerArrayInput interface {
	pulumi.Input

	ToZoneZoneTransferServerArrayOutput() ZoneZoneTransferServerArrayOutput
	ToZoneZoneTransferServerArrayOutputWithContext(context.Context) ZoneZoneTransferServerArrayOutput
}

type ZoneZoneTransferServerArray []ZoneZoneTransferServerInput

func (ZoneZoneTransferServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneZoneTransferServer)(nil)).Elem()
}

func (i ZoneZoneTransferServerArray) ToZoneZoneTransferServerArrayOutput() ZoneZoneTransferServerArrayOutput {
	return i.ToZoneZoneTransferServerArrayOutputWithContext(context.Background())
}

func (i ZoneZoneTransferServerArray) ToZoneZoneTransferServerArrayOutputWithContext(ctx context.Context) ZoneZoneTransferServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneZoneTransferServerArrayOutput)
}

type ZoneZoneTransferServerOutput struct{ *pulumi.OutputState }

func (ZoneZoneTransferServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneZoneTransferServer)(nil)).Elem()
}

func (o ZoneZoneTransferServerOutput) ToZoneZoneTransferServerOutput() ZoneZoneTransferServerOutput {
	return o
}

func (o ZoneZoneTransferServerOutput) ToZoneZoneTransferServerOutputWithContext(ctx context.Context) ZoneZoneTransferServerOutput {
	return o
}

// The server's IP address (IPv4 or IPv6).
func (o ZoneZoneTransferServerOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneZoneTransferServer) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// A Boolean flag indicating whether or not the server is a zone data transfer destination.
func (o ZoneZoneTransferServerOutput) IsTransferDestination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZoneZoneTransferServer) *bool { return v.IsTransferDestination }).(pulumi.BoolPtrOutput)
}

// A Boolean flag indicating whether or not the server is a zone data transfer source.
func (o ZoneZoneTransferServerOutput) IsTransferSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ZoneZoneTransferServer) *bool { return v.IsTransferSource }).(pulumi.BoolPtrOutput)
}

// The server's port.
func (o ZoneZoneTransferServerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneZoneTransferServer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ZoneZoneTransferServerArrayOutput struct{ *pulumi.OutputState }

func (ZoneZoneTransferServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneZoneTransferServer)(nil)).Elem()
}

func (o ZoneZoneTransferServerArrayOutput) ToZoneZoneTransferServerArrayOutput() ZoneZoneTransferServerArrayOutput {
	return o
}

func (o ZoneZoneTransferServerArrayOutput) ToZoneZoneTransferServerArrayOutputWithContext(ctx context.Context) ZoneZoneTransferServerArrayOutput {
	return o
}

func (o ZoneZoneTransferServerArrayOutput) Index(i pulumi.IntInput) ZoneZoneTransferServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneZoneTransferServer {
		return vs[0].([]ZoneZoneTransferServer)[vs[1].(int)]
	}).(ZoneZoneTransferServerOutput)
}

type GetRecordsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetRecordsFilterInput is an input type that accepts GetRecordsFilterArgs and GetRecordsFilterOutput values.
// You can construct a concrete instance of `GetRecordsFilterInput` via:
//
//	GetRecordsFilterArgs{...}
type GetRecordsFilterInput interface {
	pulumi.Input

	ToGetRecordsFilterOutput() GetRecordsFilterOutput
	ToGetRecordsFilterOutputWithContext(context.Context) GetRecordsFilterOutput
}

type GetRecordsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRecordsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsFilter)(nil)).Elem()
}

func (i GetRecordsFilterArgs) ToGetRecordsFilterOutput() GetRecordsFilterOutput {
	return i.ToGetRecordsFilterOutputWithContext(context.Background())
}

func (i GetRecordsFilterArgs) ToGetRecordsFilterOutputWithContext(ctx context.Context) GetRecordsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsFilterOutput)
}

// GetRecordsFilterArrayInput is an input type that accepts GetRecordsFilterArray and GetRecordsFilterArrayOutput values.
// You can construct a concrete instance of `GetRecordsFilterArrayInput` via:
//
//	GetRecordsFilterArray{ GetRecordsFilterArgs{...} }
type GetRecordsFilterArrayInput interface {
	pulumi.Input

	ToGetRecordsFilterArrayOutput() GetRecordsFilterArrayOutput
	ToGetRecordsFilterArrayOutputWithContext(context.Context) GetRecordsFilterArrayOutput
}

type GetRecordsFilterArray []GetRecordsFilterInput

func (GetRecordsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsFilter)(nil)).Elem()
}

func (i GetRecordsFilterArray) ToGetRecordsFilterArrayOutput() GetRecordsFilterArrayOutput {
	return i.ToGetRecordsFilterArrayOutputWithContext(context.Background())
}

func (i GetRecordsFilterArray) ToGetRecordsFilterArrayOutputWithContext(ctx context.Context) GetRecordsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsFilterArrayOutput)
}

type GetRecordsFilterOutput struct{ *pulumi.OutputState }

func (GetRecordsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsFilter)(nil)).Elem()
}

func (o GetRecordsFilterOutput) ToGetRecordsFilterOutput() GetRecordsFilterOutput {
	return o
}

func (o GetRecordsFilterOutput) ToGetRecordsFilterOutputWithContext(ctx context.Context) GetRecordsFilterOutput {
	return o
}

func (o GetRecordsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRecordsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRecordsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetRecordsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRecordsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRecordsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRecordsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsFilter)(nil)).Elem()
}

func (o GetRecordsFilterArrayOutput) ToGetRecordsFilterArrayOutput() GetRecordsFilterArrayOutput {
	return o
}

func (o GetRecordsFilterArrayOutput) ToGetRecordsFilterArrayOutputWithContext(ctx context.Context) GetRecordsFilterArrayOutput {
	return o
}

func (o GetRecordsFilterArrayOutput) Index(i pulumi.IntInput) GetRecordsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRecordsFilter {
		return vs[0].([]GetRecordsFilter)[vs[1].(int)]
	}).(GetRecordsFilterOutput)
}

type GetRecordsRecord struct {
	// The OCID of the compartment the zone belongs to.
	//
	// This parameter is deprecated and should be omitted.
	CompartmentId *string `pulumi:"compartmentId"`
	// Search by domain. Will match any record whose domain (case-insensitive) equals the provided value.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain string `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected bool `pulumi:"isProtected"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata *string `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash string `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion string `pulumi:"rrsetVersion"`
	// Search by record type. Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype string `pulumi:"rtype"`
	// The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
	Ttl *int `pulumi:"ttl"`
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId string `pulumi:"zoneNameOrId"`
}

// GetRecordsRecordInput is an input type that accepts GetRecordsRecordArgs and GetRecordsRecordOutput values.
// You can construct a concrete instance of `GetRecordsRecordInput` via:
//
//	GetRecordsRecordArgs{...}
type GetRecordsRecordInput interface {
	pulumi.Input

	ToGetRecordsRecordOutput() GetRecordsRecordOutput
	ToGetRecordsRecordOutputWithContext(context.Context) GetRecordsRecordOutput
}

type GetRecordsRecordArgs struct {
	// The OCID of the compartment the zone belongs to.
	//
	// This parameter is deprecated and should be omitted.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Search by domain. Will match any record whose domain (case-insensitive) equals the provided value.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Domain pulumi.StringInput `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected pulumi.BoolInput `pulumi:"isProtected"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringPtrInput `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash pulumi.StringInput `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion pulumi.StringInput `pulumi:"rrsetVersion"`
	// Search by record type. Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	Rtype pulumi.StringInput `pulumi:"rtype"`
	// The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
	// The name or OCID of the target zone.
	//
	// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
	ZoneNameOrId pulumi.StringInput `pulumi:"zoneNameOrId"`
}

func (GetRecordsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsRecord)(nil)).Elem()
}

func (i GetRecordsRecordArgs) ToGetRecordsRecordOutput() GetRecordsRecordOutput {
	return i.ToGetRecordsRecordOutputWithContext(context.Background())
}

func (i GetRecordsRecordArgs) ToGetRecordsRecordOutputWithContext(ctx context.Context) GetRecordsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsRecordOutput)
}

// GetRecordsRecordArrayInput is an input type that accepts GetRecordsRecordArray and GetRecordsRecordArrayOutput values.
// You can construct a concrete instance of `GetRecordsRecordArrayInput` via:
//
//	GetRecordsRecordArray{ GetRecordsRecordArgs{...} }
type GetRecordsRecordArrayInput interface {
	pulumi.Input

	ToGetRecordsRecordArrayOutput() GetRecordsRecordArrayOutput
	ToGetRecordsRecordArrayOutputWithContext(context.Context) GetRecordsRecordArrayOutput
}

type GetRecordsRecordArray []GetRecordsRecordInput

func (GetRecordsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsRecord)(nil)).Elem()
}

func (i GetRecordsRecordArray) ToGetRecordsRecordArrayOutput() GetRecordsRecordArrayOutput {
	return i.ToGetRecordsRecordArrayOutputWithContext(context.Background())
}

func (i GetRecordsRecordArray) ToGetRecordsRecordArrayOutputWithContext(ctx context.Context) GetRecordsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsRecordArrayOutput)
}

type GetRecordsRecordOutput struct{ *pulumi.OutputState }

func (GetRecordsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsRecord)(nil)).Elem()
}

func (o GetRecordsRecordOutput) ToGetRecordsRecordOutput() GetRecordsRecordOutput {
	return o
}

func (o GetRecordsRecordOutput) ToGetRecordsRecordOutputWithContext(ctx context.Context) GetRecordsRecordOutput {
	return o
}

// The OCID of the compartment the zone belongs to.
//
// This parameter is deprecated and should be omitted.
func (o GetRecordsRecordOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecordsRecord) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Search by domain. Will match any record whose domain (case-insensitive) equals the provided value.
//
// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
func (o GetRecordsRecordOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.Domain }).(pulumi.StringOutput)
}

// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
func (o GetRecordsRecordOutput) IsProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRecordsRecord) bool { return v.IsProtected }).(pulumi.BoolOutput)
}

// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
func (o GetRecordsRecordOutput) Rdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecordsRecord) *string { return v.Rdata }).(pulumi.StringPtrOutput)
}

// A unique identifier for the record within its zone.
func (o GetRecordsRecordOutput) RecordHash() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.RecordHash }).(pulumi.StringOutput)
}

// The latest version of the record's zone in which its RRSet differs from the preceding version.
func (o GetRecordsRecordOutput) RrsetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.RrsetVersion }).(pulumi.StringOutput)
}

// Search by record type. Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
//
// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
func (o GetRecordsRecordOutput) Rtype() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.Rtype }).(pulumi.StringOutput)
}

// The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
func (o GetRecordsRecordOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRecordsRecord) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

// The name or OCID of the target zone.
//
// Deprecated: The 'oci_dns_record' resource has been deprecated. Please use 'oci_dns_rrset' instead.
func (o GetRecordsRecordOutput) ZoneNameOrId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.ZoneNameOrId }).(pulumi.StringOutput)
}

type GetRecordsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetRecordsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsRecord)(nil)).Elem()
}

func (o GetRecordsRecordArrayOutput) ToGetRecordsRecordArrayOutput() GetRecordsRecordArrayOutput {
	return o
}

func (o GetRecordsRecordArrayOutput) ToGetRecordsRecordArrayOutputWithContext(ctx context.Context) GetRecordsRecordArrayOutput {
	return o
}

func (o GetRecordsRecordArrayOutput) Index(i pulumi.IntInput) GetRecordsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRecordsRecord {
		return vs[0].([]GetRecordsRecord)[vs[1].(int)]
	}).(GetRecordsRecordOutput)
}

type GetResolverAttachedView struct {
	// The OCID of the view.
	ViewId string `pulumi:"viewId"`
}

// GetResolverAttachedViewInput is an input type that accepts GetResolverAttachedViewArgs and GetResolverAttachedViewOutput values.
// You can construct a concrete instance of `GetResolverAttachedViewInput` via:
//
//	GetResolverAttachedViewArgs{...}
type GetResolverAttachedViewInput interface {
	pulumi.Input

	ToGetResolverAttachedViewOutput() GetResolverAttachedViewOutput
	ToGetResolverAttachedViewOutputWithContext(context.Context) GetResolverAttachedViewOutput
}

type GetResolverAttachedViewArgs struct {
	// The OCID of the view.
	ViewId pulumi.StringInput `pulumi:"viewId"`
}

func (GetResolverAttachedViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverAttachedView)(nil)).Elem()
}

func (i GetResolverAttachedViewArgs) ToGetResolverAttachedViewOutput() GetResolverAttachedViewOutput {
	return i.ToGetResolverAttachedViewOutputWithContext(context.Background())
}

func (i GetResolverAttachedViewArgs) ToGetResolverAttachedViewOutputWithContext(ctx context.Context) GetResolverAttachedViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverAttachedViewOutput)
}

// GetResolverAttachedViewArrayInput is an input type that accepts GetResolverAttachedViewArray and GetResolverAttachedViewArrayOutput values.
// You can construct a concrete instance of `GetResolverAttachedViewArrayInput` via:
//
//	GetResolverAttachedViewArray{ GetResolverAttachedViewArgs{...} }
type GetResolverAttachedViewArrayInput interface {
	pulumi.Input

	ToGetResolverAttachedViewArrayOutput() GetResolverAttachedViewArrayOutput
	ToGetResolverAttachedViewArrayOutputWithContext(context.Context) GetResolverAttachedViewArrayOutput
}

type GetResolverAttachedViewArray []GetResolverAttachedViewInput

func (GetResolverAttachedViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverAttachedView)(nil)).Elem()
}

func (i GetResolverAttachedViewArray) ToGetResolverAttachedViewArrayOutput() GetResolverAttachedViewArrayOutput {
	return i.ToGetResolverAttachedViewArrayOutputWithContext(context.Background())
}

func (i GetResolverAttachedViewArray) ToGetResolverAttachedViewArrayOutputWithContext(ctx context.Context) GetResolverAttachedViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverAttachedViewArrayOutput)
}

type GetResolverAttachedViewOutput struct{ *pulumi.OutputState }

func (GetResolverAttachedViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverAttachedView)(nil)).Elem()
}

func (o GetResolverAttachedViewOutput) ToGetResolverAttachedViewOutput() GetResolverAttachedViewOutput {
	return o
}

func (o GetResolverAttachedViewOutput) ToGetResolverAttachedViewOutputWithContext(ctx context.Context) GetResolverAttachedViewOutput {
	return o
}

// The OCID of the view.
func (o GetResolverAttachedViewOutput) ViewId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverAttachedView) string { return v.ViewId }).(pulumi.StringOutput)
}

type GetResolverAttachedViewArrayOutput struct{ *pulumi.OutputState }

func (GetResolverAttachedViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverAttachedView)(nil)).Elem()
}

func (o GetResolverAttachedViewArrayOutput) ToGetResolverAttachedViewArrayOutput() GetResolverAttachedViewArrayOutput {
	return o
}

func (o GetResolverAttachedViewArrayOutput) ToGetResolverAttachedViewArrayOutputWithContext(ctx context.Context) GetResolverAttachedViewArrayOutput {
	return o
}

func (o GetResolverAttachedViewArrayOutput) Index(i pulumi.IntInput) GetResolverAttachedViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolverAttachedView {
		return vs[0].([]GetResolverAttachedView)[vs[1].(int)]
	}).(GetResolverAttachedViewOutput)
}

type GetResolverEndpointType struct {
	// The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
	CompartmentId string `pulumi:"compartmentId"`
	// The type of resolver endpoint. VNIC is currently the only supported type.
	EndpointType string `pulumi:"endpointType"`
	// An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
	ForwardingAddress string `pulumi:"forwardingAddress"`
	// A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
	IsForwarding bool `pulumi:"isForwarding"`
	// A Boolean flag indicating whether or not the resolver endpoint is for listening.
	IsListening bool `pulumi:"isListening"`
	// An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
	ListeningAddress string `pulumi:"listeningAddress"`
	// The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
	Name string `pulumi:"name"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The current state of the resource.
	State string `pulumi:"state"`
	// The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
	SubnetId string `pulumi:"subnetId"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetResolverEndpointTypeInput is an input type that accepts GetResolverEndpointTypeArgs and GetResolverEndpointTypeOutput values.
// You can construct a concrete instance of `GetResolverEndpointTypeInput` via:
//
//	GetResolverEndpointTypeArgs{...}
type GetResolverEndpointTypeInput interface {
	pulumi.Input

	ToGetResolverEndpointTypeOutput() GetResolverEndpointTypeOutput
	ToGetResolverEndpointTypeOutputWithContext(context.Context) GetResolverEndpointTypeOutput
}

type GetResolverEndpointTypeArgs struct {
	// The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The type of resolver endpoint. VNIC is currently the only supported type.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
	ForwardingAddress pulumi.StringInput `pulumi:"forwardingAddress"`
	// A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
	IsForwarding pulumi.BoolInput `pulumi:"isForwarding"`
	// A Boolean flag indicating whether or not the resolver endpoint is for listening.
	IsListening pulumi.BoolInput `pulumi:"isListening"`
	// An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
	ListeningAddress pulumi.StringInput `pulumi:"listeningAddress"`
	// The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
	Name pulumi.StringInput `pulumi:"name"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringInput `pulumi:"self"`
	// The current state of the resource.
	State pulumi.StringInput `pulumi:"state"`
	// The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetResolverEndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverEndpointType)(nil)).Elem()
}

func (i GetResolverEndpointTypeArgs) ToGetResolverEndpointTypeOutput() GetResolverEndpointTypeOutput {
	return i.ToGetResolverEndpointTypeOutputWithContext(context.Background())
}

func (i GetResolverEndpointTypeArgs) ToGetResolverEndpointTypeOutputWithContext(ctx context.Context) GetResolverEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverEndpointTypeOutput)
}

// GetResolverEndpointTypeArrayInput is an input type that accepts GetResolverEndpointTypeArray and GetResolverEndpointTypeArrayOutput values.
// You can construct a concrete instance of `GetResolverEndpointTypeArrayInput` via:
//
//	GetResolverEndpointTypeArray{ GetResolverEndpointTypeArgs{...} }
type GetResolverEndpointTypeArrayInput interface {
	pulumi.Input

	ToGetResolverEndpointTypeArrayOutput() GetResolverEndpointTypeArrayOutput
	ToGetResolverEndpointTypeArrayOutputWithContext(context.Context) GetResolverEndpointTypeArrayOutput
}

type GetResolverEndpointTypeArray []GetResolverEndpointTypeInput

func (GetResolverEndpointTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverEndpointType)(nil)).Elem()
}

func (i GetResolverEndpointTypeArray) ToGetResolverEndpointTypeArrayOutput() GetResolverEndpointTypeArrayOutput {
	return i.ToGetResolverEndpointTypeArrayOutputWithContext(context.Background())
}

func (i GetResolverEndpointTypeArray) ToGetResolverEndpointTypeArrayOutputWithContext(ctx context.Context) GetResolverEndpointTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverEndpointTypeArrayOutput)
}

type GetResolverEndpointTypeOutput struct{ *pulumi.OutputState }

func (GetResolverEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverEndpointType)(nil)).Elem()
}

func (o GetResolverEndpointTypeOutput) ToGetResolverEndpointTypeOutput() GetResolverEndpointTypeOutput {
	return o
}

func (o GetResolverEndpointTypeOutput) ToGetResolverEndpointTypeOutputWithContext(ctx context.Context) GetResolverEndpointTypeOutput {
	return o
}

// The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
func (o GetResolverEndpointTypeOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointType) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The type of resolver endpoint. VNIC is currently the only supported type.
func (o GetResolverEndpointTypeOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointType) string { return v.EndpointType }).(pulumi.StringOutput)
}

// An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
func (o GetResolverEndpointTypeOutput) ForwardingAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointType) string { return v.ForwardingAddress }).(pulumi.StringOutput)
}

// A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
func (o GetResolverEndpointTypeOutput) IsForwarding() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResolverEndpointType) bool { return v.IsForwarding }).(pulumi.BoolOutput)
}

// A Boolean flag indicating whether or not the resolver endpoint is for listening.
func (o GetResolverEndpointTypeOutput) IsListening() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResolverEndpointType) bool { return v.IsListening }).(pulumi.BoolOutput)
}

// An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
func (o GetResolverEndpointTypeOutput) ListeningAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointType) string { return v.ListeningAddress }).(pulumi.StringOutput)
}

// The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
func (o GetResolverEndpointTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointType) string { return v.Name }).(pulumi.StringOutput)
}

// The canonical absolute URL of the resource.
func (o GetResolverEndpointTypeOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointType) string { return v.Self }).(pulumi.StringOutput)
}

// The current state of the resource.
func (o GetResolverEndpointTypeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointType) string { return v.State }).(pulumi.StringOutput)
}

// The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
func (o GetResolverEndpointTypeOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointType) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetResolverEndpointTypeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointType) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetResolverEndpointTypeOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointType) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetResolverEndpointTypeArrayOutput struct{ *pulumi.OutputState }

func (GetResolverEndpointTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverEndpointType)(nil)).Elem()
}

func (o GetResolverEndpointTypeArrayOutput) ToGetResolverEndpointTypeArrayOutput() GetResolverEndpointTypeArrayOutput {
	return o
}

func (o GetResolverEndpointTypeArrayOutput) ToGetResolverEndpointTypeArrayOutputWithContext(ctx context.Context) GetResolverEndpointTypeArrayOutput {
	return o
}

func (o GetResolverEndpointTypeArrayOutput) Index(i pulumi.IntInput) GetResolverEndpointTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolverEndpointType {
		return vs[0].([]GetResolverEndpointType)[vs[1].(int)]
	}).(GetResolverEndpointTypeOutput)
}

type GetResolverEndpointsFilter struct {
	// The name of a resource.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetResolverEndpointsFilterInput is an input type that accepts GetResolverEndpointsFilterArgs and GetResolverEndpointsFilterOutput values.
// You can construct a concrete instance of `GetResolverEndpointsFilterInput` via:
//
//	GetResolverEndpointsFilterArgs{...}
type GetResolverEndpointsFilterInput interface {
	pulumi.Input

	ToGetResolverEndpointsFilterOutput() GetResolverEndpointsFilterOutput
	ToGetResolverEndpointsFilterOutputWithContext(context.Context) GetResolverEndpointsFilterOutput
}

type GetResolverEndpointsFilterArgs struct {
	// The name of a resource.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetResolverEndpointsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverEndpointsFilter)(nil)).Elem()
}

func (i GetResolverEndpointsFilterArgs) ToGetResolverEndpointsFilterOutput() GetResolverEndpointsFilterOutput {
	return i.ToGetResolverEndpointsFilterOutputWithContext(context.Background())
}

func (i GetResolverEndpointsFilterArgs) ToGetResolverEndpointsFilterOutputWithContext(ctx context.Context) GetResolverEndpointsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverEndpointsFilterOutput)
}

// GetResolverEndpointsFilterArrayInput is an input type that accepts GetResolverEndpointsFilterArray and GetResolverEndpointsFilterArrayOutput values.
// You can construct a concrete instance of `GetResolverEndpointsFilterArrayInput` via:
//
//	GetResolverEndpointsFilterArray{ GetResolverEndpointsFilterArgs{...} }
type GetResolverEndpointsFilterArrayInput interface {
	pulumi.Input

	ToGetResolverEndpointsFilterArrayOutput() GetResolverEndpointsFilterArrayOutput
	ToGetResolverEndpointsFilterArrayOutputWithContext(context.Context) GetResolverEndpointsFilterArrayOutput
}

type GetResolverEndpointsFilterArray []GetResolverEndpointsFilterInput

func (GetResolverEndpointsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverEndpointsFilter)(nil)).Elem()
}

func (i GetResolverEndpointsFilterArray) ToGetResolverEndpointsFilterArrayOutput() GetResolverEndpointsFilterArrayOutput {
	return i.ToGetResolverEndpointsFilterArrayOutputWithContext(context.Background())
}

func (i GetResolverEndpointsFilterArray) ToGetResolverEndpointsFilterArrayOutputWithContext(ctx context.Context) GetResolverEndpointsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverEndpointsFilterArrayOutput)
}

type GetResolverEndpointsFilterOutput struct{ *pulumi.OutputState }

func (GetResolverEndpointsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverEndpointsFilter)(nil)).Elem()
}

func (o GetResolverEndpointsFilterOutput) ToGetResolverEndpointsFilterOutput() GetResolverEndpointsFilterOutput {
	return o
}

func (o GetResolverEndpointsFilterOutput) ToGetResolverEndpointsFilterOutputWithContext(ctx context.Context) GetResolverEndpointsFilterOutput {
	return o
}

// The name of a resource.
func (o GetResolverEndpointsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetResolverEndpointsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetResolverEndpointsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetResolverEndpointsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResolverEndpointsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetResolverEndpointsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetResolverEndpointsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverEndpointsFilter)(nil)).Elem()
}

func (o GetResolverEndpointsFilterArrayOutput) ToGetResolverEndpointsFilterArrayOutput() GetResolverEndpointsFilterArrayOutput {
	return o
}

func (o GetResolverEndpointsFilterArrayOutput) ToGetResolverEndpointsFilterArrayOutputWithContext(ctx context.Context) GetResolverEndpointsFilterArrayOutput {
	return o
}

func (o GetResolverEndpointsFilterArrayOutput) Index(i pulumi.IntInput) GetResolverEndpointsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolverEndpointsFilter {
		return vs[0].([]GetResolverEndpointsFilter)[vs[1].(int)]
	}).(GetResolverEndpointsFilterOutput)
}

type GetResolverEndpointsResolverEndpoint struct {
	// The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
	CompartmentId string `pulumi:"compartmentId"`
	// The type of resolver endpoint. VNIC is currently the only supported type.
	EndpointType string `pulumi:"endpointType"`
	// An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
	ForwardingAddress string `pulumi:"forwardingAddress"`
	// A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
	IsForwarding bool `pulumi:"isForwarding"`
	// A Boolean flag indicating whether or not the resolver endpoint is for listening.
	IsListening bool `pulumi:"isListening"`
	// An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
	ListeningAddress string `pulumi:"listeningAddress"`
	// The name of a resource.
	Name string `pulumi:"name"`
	// An array of network security group OCIDs for the resolver endpoint. These must be part of the VCN that the resolver endpoint is a part of.
	NsgIds []string `pulumi:"nsgIds"`
	// The OCID of the target resolver.
	ResolverId string `pulumi:"resolverId"`
	// Value must be `PRIVATE` when listing private name resolver endpoints.
	Scope *string `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The state of a resource.
	State string `pulumi:"state"`
	// The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
	SubnetId string `pulumi:"subnetId"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetResolverEndpointsResolverEndpointInput is an input type that accepts GetResolverEndpointsResolverEndpointArgs and GetResolverEndpointsResolverEndpointOutput values.
// You can construct a concrete instance of `GetResolverEndpointsResolverEndpointInput` via:
//
//	GetResolverEndpointsResolverEndpointArgs{...}
type GetResolverEndpointsResolverEndpointInput interface {
	pulumi.Input

	ToGetResolverEndpointsResolverEndpointOutput() GetResolverEndpointsResolverEndpointOutput
	ToGetResolverEndpointsResolverEndpointOutputWithContext(context.Context) GetResolverEndpointsResolverEndpointOutput
}

type GetResolverEndpointsResolverEndpointArgs struct {
	// The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The type of resolver endpoint. VNIC is currently the only supported type.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
	ForwardingAddress pulumi.StringInput `pulumi:"forwardingAddress"`
	// A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
	IsForwarding pulumi.BoolInput `pulumi:"isForwarding"`
	// A Boolean flag indicating whether or not the resolver endpoint is for listening.
	IsListening pulumi.BoolInput `pulumi:"isListening"`
	// An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
	ListeningAddress pulumi.StringInput `pulumi:"listeningAddress"`
	// The name of a resource.
	Name pulumi.StringInput `pulumi:"name"`
	// An array of network security group OCIDs for the resolver endpoint. These must be part of the VCN that the resolver endpoint is a part of.
	NsgIds pulumi.StringArrayInput `pulumi:"nsgIds"`
	// The OCID of the target resolver.
	ResolverId pulumi.StringInput `pulumi:"resolverId"`
	// Value must be `PRIVATE` when listing private name resolver endpoints.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringInput `pulumi:"self"`
	// The state of a resource.
	State pulumi.StringInput `pulumi:"state"`
	// The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetResolverEndpointsResolverEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverEndpointsResolverEndpoint)(nil)).Elem()
}

func (i GetResolverEndpointsResolverEndpointArgs) ToGetResolverEndpointsResolverEndpointOutput() GetResolverEndpointsResolverEndpointOutput {
	return i.ToGetResolverEndpointsResolverEndpointOutputWithContext(context.Background())
}

func (i GetResolverEndpointsResolverEndpointArgs) ToGetResolverEndpointsResolverEndpointOutputWithContext(ctx context.Context) GetResolverEndpointsResolverEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverEndpointsResolverEndpointOutput)
}

// GetResolverEndpointsResolverEndpointArrayInput is an input type that accepts GetResolverEndpointsResolverEndpointArray and GetResolverEndpointsResolverEndpointArrayOutput values.
// You can construct a concrete instance of `GetResolverEndpointsResolverEndpointArrayInput` via:
//
//	GetResolverEndpointsResolverEndpointArray{ GetResolverEndpointsResolverEndpointArgs{...} }
type GetResolverEndpointsResolverEndpointArrayInput interface {
	pulumi.Input

	ToGetResolverEndpointsResolverEndpointArrayOutput() GetResolverEndpointsResolverEndpointArrayOutput
	ToGetResolverEndpointsResolverEndpointArrayOutputWithContext(context.Context) GetResolverEndpointsResolverEndpointArrayOutput
}

type GetResolverEndpointsResolverEndpointArray []GetResolverEndpointsResolverEndpointInput

func (GetResolverEndpointsResolverEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverEndpointsResolverEndpoint)(nil)).Elem()
}

func (i GetResolverEndpointsResolverEndpointArray) ToGetResolverEndpointsResolverEndpointArrayOutput() GetResolverEndpointsResolverEndpointArrayOutput {
	return i.ToGetResolverEndpointsResolverEndpointArrayOutputWithContext(context.Background())
}

func (i GetResolverEndpointsResolverEndpointArray) ToGetResolverEndpointsResolverEndpointArrayOutputWithContext(ctx context.Context) GetResolverEndpointsResolverEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverEndpointsResolverEndpointArrayOutput)
}

type GetResolverEndpointsResolverEndpointOutput struct{ *pulumi.OutputState }

func (GetResolverEndpointsResolverEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverEndpointsResolverEndpoint)(nil)).Elem()
}

func (o GetResolverEndpointsResolverEndpointOutput) ToGetResolverEndpointsResolverEndpointOutput() GetResolverEndpointsResolverEndpointOutput {
	return o
}

func (o GetResolverEndpointsResolverEndpointOutput) ToGetResolverEndpointsResolverEndpointOutputWithContext(ctx context.Context) GetResolverEndpointsResolverEndpointOutput {
	return o
}

// The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
func (o GetResolverEndpointsResolverEndpointOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The type of resolver endpoint. VNIC is currently the only supported type.
func (o GetResolverEndpointsResolverEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) string { return v.EndpointType }).(pulumi.StringOutput)
}

// An IP address from which forwarded queries may be sent. For VNIC endpoints, this IP address must be part of the subnet and will be assigned by the system if unspecified when isForwarding is true.
func (o GetResolverEndpointsResolverEndpointOutput) ForwardingAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) string { return v.ForwardingAddress }).(pulumi.StringOutput)
}

// A Boolean flag indicating whether or not the resolver endpoint is for forwarding.
func (o GetResolverEndpointsResolverEndpointOutput) IsForwarding() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) bool { return v.IsForwarding }).(pulumi.BoolOutput)
}

// A Boolean flag indicating whether or not the resolver endpoint is for listening.
func (o GetResolverEndpointsResolverEndpointOutput) IsListening() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) bool { return v.IsListening }).(pulumi.BoolOutput)
}

// An IP address to listen to queries on. For VNIC endpoints this IP address must be part of the subnet and will be assigned by the system if unspecified when isListening is true.
func (o GetResolverEndpointsResolverEndpointOutput) ListeningAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) string { return v.ListeningAddress }).(pulumi.StringOutput)
}

// The name of a resource.
func (o GetResolverEndpointsResolverEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) string { return v.Name }).(pulumi.StringOutput)
}

// An array of network security group OCIDs for the resolver endpoint. These must be part of the VCN that the resolver endpoint is a part of.
func (o GetResolverEndpointsResolverEndpointOutput) NsgIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) []string { return v.NsgIds }).(pulumi.StringArrayOutput)
}

// The OCID of the target resolver.
func (o GetResolverEndpointsResolverEndpointOutput) ResolverId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) string { return v.ResolverId }).(pulumi.StringOutput)
}

// Value must be `PRIVATE` when listing private name resolver endpoints.
func (o GetResolverEndpointsResolverEndpointOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The canonical absolute URL of the resource.
func (o GetResolverEndpointsResolverEndpointOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) string { return v.Self }).(pulumi.StringOutput)
}

// The state of a resource.
func (o GetResolverEndpointsResolverEndpointOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) string { return v.State }).(pulumi.StringOutput)
}

// The OCID of a subnet. Must be part of the VCN that the resolver is attached to.
func (o GetResolverEndpointsResolverEndpointOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetResolverEndpointsResolverEndpointOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetResolverEndpointsResolverEndpointOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverEndpointsResolverEndpoint) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetResolverEndpointsResolverEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetResolverEndpointsResolverEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverEndpointsResolverEndpoint)(nil)).Elem()
}

func (o GetResolverEndpointsResolverEndpointArrayOutput) ToGetResolverEndpointsResolverEndpointArrayOutput() GetResolverEndpointsResolverEndpointArrayOutput {
	return o
}

func (o GetResolverEndpointsResolverEndpointArrayOutput) ToGetResolverEndpointsResolverEndpointArrayOutputWithContext(ctx context.Context) GetResolverEndpointsResolverEndpointArrayOutput {
	return o
}

func (o GetResolverEndpointsResolverEndpointArrayOutput) Index(i pulumi.IntInput) GetResolverEndpointsResolverEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolverEndpointsResolverEndpoint {
		return vs[0].([]GetResolverEndpointsResolverEndpoint)[vs[1].(int)]
	}).(GetResolverEndpointsResolverEndpointOutput)
}

type GetResolverRule struct {
	// The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
	// * `FORWARD` - Matching requests will be forwarded from the source interface to the destination address.
	Action string `pulumi:"action"`
	// A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
	ClientAddressConditions []string `pulumi:"clientAddressConditions"`
	// IP addresses to which queries should be forwarded. Currently limited to a single address.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
	QnameCoverConditions []string `pulumi:"qnameCoverConditions"`
	// Case-insensitive name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
	SourceEndpointName string `pulumi:"sourceEndpointName"`
}

// GetResolverRuleInput is an input type that accepts GetResolverRuleArgs and GetResolverRuleOutput values.
// You can construct a concrete instance of `GetResolverRuleInput` via:
//
//	GetResolverRuleArgs{...}
type GetResolverRuleInput interface {
	pulumi.Input

	ToGetResolverRuleOutput() GetResolverRuleOutput
	ToGetResolverRuleOutputWithContext(context.Context) GetResolverRuleOutput
}

type GetResolverRuleArgs struct {
	// The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
	// * `FORWARD` - Matching requests will be forwarded from the source interface to the destination address.
	Action pulumi.StringInput `pulumi:"action"`
	// A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
	ClientAddressConditions pulumi.StringArrayInput `pulumi:"clientAddressConditions"`
	// IP addresses to which queries should be forwarded. Currently limited to a single address.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
	QnameCoverConditions pulumi.StringArrayInput `pulumi:"qnameCoverConditions"`
	// Case-insensitive name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
	SourceEndpointName pulumi.StringInput `pulumi:"sourceEndpointName"`
}

func (GetResolverRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverRule)(nil)).Elem()
}

func (i GetResolverRuleArgs) ToGetResolverRuleOutput() GetResolverRuleOutput {
	return i.ToGetResolverRuleOutputWithContext(context.Background())
}

func (i GetResolverRuleArgs) ToGetResolverRuleOutputWithContext(ctx context.Context) GetResolverRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverRuleOutput)
}

// GetResolverRuleArrayInput is an input type that accepts GetResolverRuleArray and GetResolverRuleArrayOutput values.
// You can construct a concrete instance of `GetResolverRuleArrayInput` via:
//
//	GetResolverRuleArray{ GetResolverRuleArgs{...} }
type GetResolverRuleArrayInput interface {
	pulumi.Input

	ToGetResolverRuleArrayOutput() GetResolverRuleArrayOutput
	ToGetResolverRuleArrayOutputWithContext(context.Context) GetResolverRuleArrayOutput
}

type GetResolverRuleArray []GetResolverRuleInput

func (GetResolverRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverRule)(nil)).Elem()
}

func (i GetResolverRuleArray) ToGetResolverRuleArrayOutput() GetResolverRuleArrayOutput {
	return i.ToGetResolverRuleArrayOutputWithContext(context.Background())
}

func (i GetResolverRuleArray) ToGetResolverRuleArrayOutputWithContext(ctx context.Context) GetResolverRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolverRuleArrayOutput)
}

type GetResolverRuleOutput struct{ *pulumi.OutputState }

func (GetResolverRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverRule)(nil)).Elem()
}

func (o GetResolverRuleOutput) ToGetResolverRuleOutput() GetResolverRuleOutput {
	return o
}

func (o GetResolverRuleOutput) ToGetResolverRuleOutputWithContext(ctx context.Context) GetResolverRuleOutput {
	return o
}

// The action determines the behavior of the rule. If a query matches a supplied condition, the action will apply. If there are no conditions on the rule, all queries are subject to the specified action.
// * `FORWARD` - Matching requests will be forwarded from the source interface to the destination address.
func (o GetResolverRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverRule) string { return v.Action }).(pulumi.StringOutput)
}

// A list of CIDR blocks. The query must come from a client within one of the blocks in order for the rule action to apply.
func (o GetResolverRuleOutput) ClientAddressConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResolverRule) []string { return v.ClientAddressConditions }).(pulumi.StringArrayOutput)
}

// IP addresses to which queries should be forwarded. Currently limited to a single address.
func (o GetResolverRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResolverRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// A list of domain names. The query must be covered by one of the domains in order for the rule action to apply.
func (o GetResolverRuleOutput) QnameCoverConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResolverRule) []string { return v.QnameCoverConditions }).(pulumi.StringArrayOutput)
}

// Case-insensitive name of an endpoint, that is a sub-resource of the resolver, to use as the forwarding interface. The endpoint must have isForwarding set to true.
func (o GetResolverRuleOutput) SourceEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverRule) string { return v.SourceEndpointName }).(pulumi.StringOutput)
}

type GetResolverRuleArrayOutput struct{ *pulumi.OutputState }

func (GetResolverRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolverRule)(nil)).Elem()
}

func (o GetResolverRuleArrayOutput) ToGetResolverRuleArrayOutput() GetResolverRuleArrayOutput {
	return o
}

func (o GetResolverRuleArrayOutput) ToGetResolverRuleArrayOutputWithContext(ctx context.Context) GetResolverRuleArrayOutput {
	return o
}

func (o GetResolverRuleArrayOutput) Index(i pulumi.IntInput) GetResolverRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolverRule {
		return vs[0].([]GetResolverRule)[vs[1].(int)]
	}).(GetResolverRuleOutput)
}

type GetResolversFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetResolversFilterInput is an input type that accepts GetResolversFilterArgs and GetResolversFilterOutput values.
// You can construct a concrete instance of `GetResolversFilterInput` via:
//
//	GetResolversFilterArgs{...}
type GetResolversFilterInput interface {
	pulumi.Input

	ToGetResolversFilterOutput() GetResolversFilterOutput
	ToGetResolversFilterOutputWithContext(context.Context) GetResolversFilterOutput
}

type GetResolversFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetResolversFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolversFilter)(nil)).Elem()
}

func (i GetResolversFilterArgs) ToGetResolversFilterOutput() GetResolversFilterOutput {
	return i.ToGetResolversFilterOutputWithContext(context.Background())
}

func (i GetResolversFilterArgs) ToGetResolversFilterOutputWithContext(ctx context.Context) GetResolversFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolversFilterOutput)
}

// GetResolversFilterArrayInput is an input type that accepts GetResolversFilterArray and GetResolversFilterArrayOutput values.
// You can construct a concrete instance of `GetResolversFilterArrayInput` via:
//
//	GetResolversFilterArray{ GetResolversFilterArgs{...} }
type GetResolversFilterArrayInput interface {
	pulumi.Input

	ToGetResolversFilterArrayOutput() GetResolversFilterArrayOutput
	ToGetResolversFilterArrayOutputWithContext(context.Context) GetResolversFilterArrayOutput
}

type GetResolversFilterArray []GetResolversFilterInput

func (GetResolversFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolversFilter)(nil)).Elem()
}

func (i GetResolversFilterArray) ToGetResolversFilterArrayOutput() GetResolversFilterArrayOutput {
	return i.ToGetResolversFilterArrayOutputWithContext(context.Background())
}

func (i GetResolversFilterArray) ToGetResolversFilterArrayOutputWithContext(ctx context.Context) GetResolversFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolversFilterArrayOutput)
}

type GetResolversFilterOutput struct{ *pulumi.OutputState }

func (GetResolversFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolversFilter)(nil)).Elem()
}

func (o GetResolversFilterOutput) ToGetResolversFilterOutput() GetResolversFilterOutput {
	return o
}

func (o GetResolversFilterOutput) ToGetResolversFilterOutputWithContext(ctx context.Context) GetResolversFilterOutput {
	return o
}

func (o GetResolversFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetResolversFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetResolversFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetResolversFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResolversFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetResolversFilterArrayOutput struct{ *pulumi.OutputState }

func (GetResolversFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolversFilter)(nil)).Elem()
}

func (o GetResolversFilterArrayOutput) ToGetResolversFilterArrayOutput() GetResolversFilterArrayOutput {
	return o
}

func (o GetResolversFilterArrayOutput) ToGetResolversFilterArrayOutputWithContext(ctx context.Context) GetResolversFilterArrayOutput {
	return o
}

func (o GetResolversFilterArrayOutput) Index(i pulumi.IntInput) GetResolversFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolversFilter {
		return vs[0].([]GetResolversFilter)[vs[1].(int)]
	}).(GetResolversFilterOutput)
}

type GetResolversResolver struct {
	// The OCID of the attached VCN.
	AttachedVcnId string                             `pulumi:"attachedVcnId"`
	AttachedViews []GetResolversResolverAttachedView `pulumi:"attachedViews"`
	// The OCID of the compartment the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// The OCID of the default view.
	DefaultViewId string `pulumi:"defaultViewId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The displayName of a resource.
	DisplayName string                         `pulumi:"displayName"`
	Endpoints   []GetResolversResolverEndpoint `pulumi:"endpoints"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of a resource.
	Id string `pulumi:"id"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected bool                       `pulumi:"isProtected"`
	ResolverId  string                     `pulumi:"resolverId"`
	Rules       []GetResolversResolverRule `pulumi:"rules"`
	// Value must be `PRIVATE` when listing private name resolvers.
	Scope string `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The state of a resource.
	State string `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetResolversResolverInput is an input type that accepts GetResolversResolverArgs and GetResolversResolverOutput values.
// You can construct a concrete instance of `GetResolversResolverInput` via:
//
//	GetResolversResolverArgs{...}
type GetResolversResolverInput interface {
	pulumi.Input

	ToGetResolversResolverOutput() GetResolversResolverOutput
	ToGetResolversResolverOutputWithContext(context.Context) GetResolversResolverOutput
}

type GetResolversResolverArgs struct {
	// The OCID of the attached VCN.
	AttachedVcnId pulumi.StringInput                         `pulumi:"attachedVcnId"`
	AttachedViews GetResolversResolverAttachedViewArrayInput `pulumi:"attachedViews"`
	// The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The OCID of the default view.
	DefaultViewId pulumi.StringInput `pulumi:"defaultViewId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The displayName of a resource.
	DisplayName pulumi.StringInput                     `pulumi:"displayName"`
	Endpoints   GetResolversResolverEndpointArrayInput `pulumi:"endpoints"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of a resource.
	Id pulumi.StringInput `pulumi:"id"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected pulumi.BoolInput                   `pulumi:"isProtected"`
	ResolverId  pulumi.StringInput                 `pulumi:"resolverId"`
	Rules       GetResolversResolverRuleArrayInput `pulumi:"rules"`
	// Value must be `PRIVATE` when listing private name resolvers.
	Scope pulumi.StringInput `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringInput `pulumi:"self"`
	// The state of a resource.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetResolversResolverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolversResolver)(nil)).Elem()
}

func (i GetResolversResolverArgs) ToGetResolversResolverOutput() GetResolversResolverOutput {
	return i.ToGetResolversResolverOutputWithContext(context.Background())
}

func (i GetResolversResolverArgs) ToGetResolversResolverOutputWithContext(ctx context.Context) GetResolversResolverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolversResolverOutput)
}

// GetResolversResolverArrayInput is an input type that accepts GetResolversResolverArray and GetResolversResolverArrayOutput values.
// You can construct a concrete instance of `GetResolversResolverArrayInput` via:
//
//	GetResolversResolverArray{ GetResolversResolverArgs{...} }
type GetResolversResolverArrayInput interface {
	pulumi.Input

	ToGetResolversResolverArrayOutput() GetResolversResolverArrayOutput
	ToGetResolversResolverArrayOutputWithContext(context.Context) GetResolversResolverArrayOutput
}

type GetResolversResolverArray []GetResolversResolverInput

func (GetResolversResolverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolversResolver)(nil)).Elem()
}

func (i GetResolversResolverArray) ToGetResolversResolverArrayOutput() GetResolversResolverArrayOutput {
	return i.ToGetResolversResolverArrayOutputWithContext(context.Background())
}

func (i GetResolversResolverArray) ToGetResolversResolverArrayOutputWithContext(ctx context.Context) GetResolversResolverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolversResolverArrayOutput)
}

type GetResolversResolverOutput struct{ *pulumi.OutputState }

func (GetResolversResolverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolversResolver)(nil)).Elem()
}

func (o GetResolversResolverOutput) ToGetResolversResolverOutput() GetResolversResolverOutput {
	return o
}

func (o GetResolversResolverOutput) ToGetResolversResolverOutputWithContext(ctx context.Context) GetResolversResolverOutput {
	return o
}

// The OCID of the attached VCN.
func (o GetResolversResolverOutput) AttachedVcnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolver) string { return v.AttachedVcnId }).(pulumi.StringOutput)
}

func (o GetResolversResolverOutput) AttachedViews() GetResolversResolverAttachedViewArrayOutput {
	return o.ApplyT(func(v GetResolversResolver) []GetResolversResolverAttachedView { return v.AttachedViews }).(GetResolversResolverAttachedViewArrayOutput)
}

// The OCID of the compartment the resource belongs to.
func (o GetResolversResolverOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolver) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The OCID of the default view.
func (o GetResolversResolverOutput) DefaultViewId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolver) string { return v.DefaultViewId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o GetResolversResolverOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetResolversResolver) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The displayName of a resource.
func (o GetResolversResolverOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolver) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o GetResolversResolverOutput) Endpoints() GetResolversResolverEndpointArrayOutput {
	return o.ApplyT(func(v GetResolversResolver) []GetResolversResolverEndpoint { return v.Endpoints }).(GetResolversResolverEndpointArrayOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o GetResolversResolverOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetResolversResolver) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of a resource.
func (o GetResolversResolverOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolver) string { return v.Id }).(pulumi.StringOutput)
}

// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
func (o GetResolversResolverOutput) IsProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResolversResolver) bool { return v.IsProtected }).(pulumi.BoolOutput)
}

func (o GetResolversResolverOutput) ResolverId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolver) string { return v.ResolverId }).(pulumi.StringOutput)
}

func (o GetResolversResolverOutput) Rules() GetResolversResolverRuleArrayOutput {
	return o.ApplyT(func(v GetResolversResolver) []GetResolversResolverRule { return v.Rules }).(GetResolversResolverRuleArrayOutput)
}

// Value must be `PRIVATE` when listing private name resolvers.
func (o GetResolversResolverOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolver) string { return v.Scope }).(pulumi.StringOutput)
}

// The canonical absolute URL of the resource.
func (o GetResolversResolverOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolver) string { return v.Self }).(pulumi.StringOutput)
}

// The state of a resource.
func (o GetResolversResolverOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolver) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetResolversResolverOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolver) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetResolversResolverOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolver) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetResolversResolverArrayOutput struct{ *pulumi.OutputState }

func (GetResolversResolverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolversResolver)(nil)).Elem()
}

func (o GetResolversResolverArrayOutput) ToGetResolversResolverArrayOutput() GetResolversResolverArrayOutput {
	return o
}

func (o GetResolversResolverArrayOutput) ToGetResolversResolverArrayOutputWithContext(ctx context.Context) GetResolversResolverArrayOutput {
	return o
}

func (o GetResolversResolverArrayOutput) Index(i pulumi.IntInput) GetResolversResolverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolversResolver {
		return vs[0].([]GetResolversResolver)[vs[1].(int)]
	}).(GetResolversResolverOutput)
}

type GetResolversResolverAttachedView struct {
	ViewId string `pulumi:"viewId"`
}

// GetResolversResolverAttachedViewInput is an input type that accepts GetResolversResolverAttachedViewArgs and GetResolversResolverAttachedViewOutput values.
// You can construct a concrete instance of `GetResolversResolverAttachedViewInput` via:
//
//	GetResolversResolverAttachedViewArgs{...}
type GetResolversResolverAttachedViewInput interface {
	pulumi.Input

	ToGetResolversResolverAttachedViewOutput() GetResolversResolverAttachedViewOutput
	ToGetResolversResolverAttachedViewOutputWithContext(context.Context) GetResolversResolverAttachedViewOutput
}

type GetResolversResolverAttachedViewArgs struct {
	ViewId pulumi.StringInput `pulumi:"viewId"`
}

func (GetResolversResolverAttachedViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolversResolverAttachedView)(nil)).Elem()
}

func (i GetResolversResolverAttachedViewArgs) ToGetResolversResolverAttachedViewOutput() GetResolversResolverAttachedViewOutput {
	return i.ToGetResolversResolverAttachedViewOutputWithContext(context.Background())
}

func (i GetResolversResolverAttachedViewArgs) ToGetResolversResolverAttachedViewOutputWithContext(ctx context.Context) GetResolversResolverAttachedViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolversResolverAttachedViewOutput)
}

// GetResolversResolverAttachedViewArrayInput is an input type that accepts GetResolversResolverAttachedViewArray and GetResolversResolverAttachedViewArrayOutput values.
// You can construct a concrete instance of `GetResolversResolverAttachedViewArrayInput` via:
//
//	GetResolversResolverAttachedViewArray{ GetResolversResolverAttachedViewArgs{...} }
type GetResolversResolverAttachedViewArrayInput interface {
	pulumi.Input

	ToGetResolversResolverAttachedViewArrayOutput() GetResolversResolverAttachedViewArrayOutput
	ToGetResolversResolverAttachedViewArrayOutputWithContext(context.Context) GetResolversResolverAttachedViewArrayOutput
}

type GetResolversResolverAttachedViewArray []GetResolversResolverAttachedViewInput

func (GetResolversResolverAttachedViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolversResolverAttachedView)(nil)).Elem()
}

func (i GetResolversResolverAttachedViewArray) ToGetResolversResolverAttachedViewArrayOutput() GetResolversResolverAttachedViewArrayOutput {
	return i.ToGetResolversResolverAttachedViewArrayOutputWithContext(context.Background())
}

func (i GetResolversResolverAttachedViewArray) ToGetResolversResolverAttachedViewArrayOutputWithContext(ctx context.Context) GetResolversResolverAttachedViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolversResolverAttachedViewArrayOutput)
}

type GetResolversResolverAttachedViewOutput struct{ *pulumi.OutputState }

func (GetResolversResolverAttachedViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolversResolverAttachedView)(nil)).Elem()
}

func (o GetResolversResolverAttachedViewOutput) ToGetResolversResolverAttachedViewOutput() GetResolversResolverAttachedViewOutput {
	return o
}

func (o GetResolversResolverAttachedViewOutput) ToGetResolversResolverAttachedViewOutputWithContext(ctx context.Context) GetResolversResolverAttachedViewOutput {
	return o
}

func (o GetResolversResolverAttachedViewOutput) ViewId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverAttachedView) string { return v.ViewId }).(pulumi.StringOutput)
}

type GetResolversResolverAttachedViewArrayOutput struct{ *pulumi.OutputState }

func (GetResolversResolverAttachedViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolversResolverAttachedView)(nil)).Elem()
}

func (o GetResolversResolverAttachedViewArrayOutput) ToGetResolversResolverAttachedViewArrayOutput() GetResolversResolverAttachedViewArrayOutput {
	return o
}

func (o GetResolversResolverAttachedViewArrayOutput) ToGetResolversResolverAttachedViewArrayOutputWithContext(ctx context.Context) GetResolversResolverAttachedViewArrayOutput {
	return o
}

func (o GetResolversResolverAttachedViewArrayOutput) Index(i pulumi.IntInput) GetResolversResolverAttachedViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolversResolverAttachedView {
		return vs[0].([]GetResolversResolverAttachedView)[vs[1].(int)]
	}).(GetResolversResolverAttachedViewOutput)
}

type GetResolversResolverEndpoint struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId     string `pulumi:"compartmentId"`
	EndpointType      string `pulumi:"endpointType"`
	ForwardingAddress string `pulumi:"forwardingAddress"`
	IsForwarding      bool   `pulumi:"isForwarding"`
	IsListening       bool   `pulumi:"isListening"`
	ListeningAddress  string `pulumi:"listeningAddress"`
	Name              string `pulumi:"name"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The state of a resource.
	State    string `pulumi:"state"`
	SubnetId string `pulumi:"subnetId"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetResolversResolverEndpointInput is an input type that accepts GetResolversResolverEndpointArgs and GetResolversResolverEndpointOutput values.
// You can construct a concrete instance of `GetResolversResolverEndpointInput` via:
//
//	GetResolversResolverEndpointArgs{...}
type GetResolversResolverEndpointInput interface {
	pulumi.Input

	ToGetResolversResolverEndpointOutput() GetResolversResolverEndpointOutput
	ToGetResolversResolverEndpointOutputWithContext(context.Context) GetResolversResolverEndpointOutput
}

type GetResolversResolverEndpointArgs struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId     pulumi.StringInput `pulumi:"compartmentId"`
	EndpointType      pulumi.StringInput `pulumi:"endpointType"`
	ForwardingAddress pulumi.StringInput `pulumi:"forwardingAddress"`
	IsForwarding      pulumi.BoolInput   `pulumi:"isForwarding"`
	IsListening       pulumi.BoolInput   `pulumi:"isListening"`
	ListeningAddress  pulumi.StringInput `pulumi:"listeningAddress"`
	Name              pulumi.StringInput `pulumi:"name"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringInput `pulumi:"self"`
	// The state of a resource.
	State    pulumi.StringInput `pulumi:"state"`
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetResolversResolverEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolversResolverEndpoint)(nil)).Elem()
}

func (i GetResolversResolverEndpointArgs) ToGetResolversResolverEndpointOutput() GetResolversResolverEndpointOutput {
	return i.ToGetResolversResolverEndpointOutputWithContext(context.Background())
}

func (i GetResolversResolverEndpointArgs) ToGetResolversResolverEndpointOutputWithContext(ctx context.Context) GetResolversResolverEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolversResolverEndpointOutput)
}

// GetResolversResolverEndpointArrayInput is an input type that accepts GetResolversResolverEndpointArray and GetResolversResolverEndpointArrayOutput values.
// You can construct a concrete instance of `GetResolversResolverEndpointArrayInput` via:
//
//	GetResolversResolverEndpointArray{ GetResolversResolverEndpointArgs{...} }
type GetResolversResolverEndpointArrayInput interface {
	pulumi.Input

	ToGetResolversResolverEndpointArrayOutput() GetResolversResolverEndpointArrayOutput
	ToGetResolversResolverEndpointArrayOutputWithContext(context.Context) GetResolversResolverEndpointArrayOutput
}

type GetResolversResolverEndpointArray []GetResolversResolverEndpointInput

func (GetResolversResolverEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolversResolverEndpoint)(nil)).Elem()
}

func (i GetResolversResolverEndpointArray) ToGetResolversResolverEndpointArrayOutput() GetResolversResolverEndpointArrayOutput {
	return i.ToGetResolversResolverEndpointArrayOutputWithContext(context.Background())
}

func (i GetResolversResolverEndpointArray) ToGetResolversResolverEndpointArrayOutputWithContext(ctx context.Context) GetResolversResolverEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolversResolverEndpointArrayOutput)
}

type GetResolversResolverEndpointOutput struct{ *pulumi.OutputState }

func (GetResolversResolverEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolversResolverEndpoint)(nil)).Elem()
}

func (o GetResolversResolverEndpointOutput) ToGetResolversResolverEndpointOutput() GetResolversResolverEndpointOutput {
	return o
}

func (o GetResolversResolverEndpointOutput) ToGetResolversResolverEndpointOutputWithContext(ctx context.Context) GetResolversResolverEndpointOutput {
	return o
}

// The OCID of the compartment the resource belongs to.
func (o GetResolversResolverEndpointOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetResolversResolverEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) string { return v.EndpointType }).(pulumi.StringOutput)
}

func (o GetResolversResolverEndpointOutput) ForwardingAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) string { return v.ForwardingAddress }).(pulumi.StringOutput)
}

func (o GetResolversResolverEndpointOutput) IsForwarding() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) bool { return v.IsForwarding }).(pulumi.BoolOutput)
}

func (o GetResolversResolverEndpointOutput) IsListening() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) bool { return v.IsListening }).(pulumi.BoolOutput)
}

func (o GetResolversResolverEndpointOutput) ListeningAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) string { return v.ListeningAddress }).(pulumi.StringOutput)
}

func (o GetResolversResolverEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) string { return v.Name }).(pulumi.StringOutput)
}

// The canonical absolute URL of the resource.
func (o GetResolversResolverEndpointOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) string { return v.Self }).(pulumi.StringOutput)
}

// The state of a resource.
func (o GetResolversResolverEndpointOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) string { return v.State }).(pulumi.StringOutput)
}

func (o GetResolversResolverEndpointOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetResolversResolverEndpointOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetResolversResolverEndpointOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverEndpoint) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetResolversResolverEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetResolversResolverEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolversResolverEndpoint)(nil)).Elem()
}

func (o GetResolversResolverEndpointArrayOutput) ToGetResolversResolverEndpointArrayOutput() GetResolversResolverEndpointArrayOutput {
	return o
}

func (o GetResolversResolverEndpointArrayOutput) ToGetResolversResolverEndpointArrayOutputWithContext(ctx context.Context) GetResolversResolverEndpointArrayOutput {
	return o
}

func (o GetResolversResolverEndpointArrayOutput) Index(i pulumi.IntInput) GetResolversResolverEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolversResolverEndpoint {
		return vs[0].([]GetResolversResolverEndpoint)[vs[1].(int)]
	}).(GetResolversResolverEndpointOutput)
}

type GetResolversResolverRule struct {
	Action                  string   `pulumi:"action"`
	ClientAddressConditions []string `pulumi:"clientAddressConditions"`
	DestinationAddresses    []string `pulumi:"destinationAddresses"`
	QnameCoverConditions    []string `pulumi:"qnameCoverConditions"`
	SourceEndpointName      string   `pulumi:"sourceEndpointName"`
}

// GetResolversResolverRuleInput is an input type that accepts GetResolversResolverRuleArgs and GetResolversResolverRuleOutput values.
// You can construct a concrete instance of `GetResolversResolverRuleInput` via:
//
//	GetResolversResolverRuleArgs{...}
type GetResolversResolverRuleInput interface {
	pulumi.Input

	ToGetResolversResolverRuleOutput() GetResolversResolverRuleOutput
	ToGetResolversResolverRuleOutputWithContext(context.Context) GetResolversResolverRuleOutput
}

type GetResolversResolverRuleArgs struct {
	Action                  pulumi.StringInput      `pulumi:"action"`
	ClientAddressConditions pulumi.StringArrayInput `pulumi:"clientAddressConditions"`
	DestinationAddresses    pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	QnameCoverConditions    pulumi.StringArrayInput `pulumi:"qnameCoverConditions"`
	SourceEndpointName      pulumi.StringInput      `pulumi:"sourceEndpointName"`
}

func (GetResolversResolverRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolversResolverRule)(nil)).Elem()
}

func (i GetResolversResolverRuleArgs) ToGetResolversResolverRuleOutput() GetResolversResolverRuleOutput {
	return i.ToGetResolversResolverRuleOutputWithContext(context.Background())
}

func (i GetResolversResolverRuleArgs) ToGetResolversResolverRuleOutputWithContext(ctx context.Context) GetResolversResolverRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolversResolverRuleOutput)
}

// GetResolversResolverRuleArrayInput is an input type that accepts GetResolversResolverRuleArray and GetResolversResolverRuleArrayOutput values.
// You can construct a concrete instance of `GetResolversResolverRuleArrayInput` via:
//
//	GetResolversResolverRuleArray{ GetResolversResolverRuleArgs{...} }
type GetResolversResolverRuleArrayInput interface {
	pulumi.Input

	ToGetResolversResolverRuleArrayOutput() GetResolversResolverRuleArrayOutput
	ToGetResolversResolverRuleArrayOutputWithContext(context.Context) GetResolversResolverRuleArrayOutput
}

type GetResolversResolverRuleArray []GetResolversResolverRuleInput

func (GetResolversResolverRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolversResolverRule)(nil)).Elem()
}

func (i GetResolversResolverRuleArray) ToGetResolversResolverRuleArrayOutput() GetResolversResolverRuleArrayOutput {
	return i.ToGetResolversResolverRuleArrayOutputWithContext(context.Background())
}

func (i GetResolversResolverRuleArray) ToGetResolversResolverRuleArrayOutputWithContext(ctx context.Context) GetResolversResolverRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolversResolverRuleArrayOutput)
}

type GetResolversResolverRuleOutput struct{ *pulumi.OutputState }

func (GetResolversResolverRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolversResolverRule)(nil)).Elem()
}

func (o GetResolversResolverRuleOutput) ToGetResolversResolverRuleOutput() GetResolversResolverRuleOutput {
	return o
}

func (o GetResolversResolverRuleOutput) ToGetResolversResolverRuleOutputWithContext(ctx context.Context) GetResolversResolverRuleOutput {
	return o
}

func (o GetResolversResolverRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetResolversResolverRuleOutput) ClientAddressConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResolversResolverRule) []string { return v.ClientAddressConditions }).(pulumi.StringArrayOutput)
}

func (o GetResolversResolverRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResolversResolverRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

func (o GetResolversResolverRuleOutput) QnameCoverConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResolversResolverRule) []string { return v.QnameCoverConditions }).(pulumi.StringArrayOutput)
}

func (o GetResolversResolverRuleOutput) SourceEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolversResolverRule) string { return v.SourceEndpointName }).(pulumi.StringOutput)
}

type GetResolversResolverRuleArrayOutput struct{ *pulumi.OutputState }

func (GetResolversResolverRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolversResolverRule)(nil)).Elem()
}

func (o GetResolversResolverRuleArrayOutput) ToGetResolversResolverRuleArrayOutput() GetResolversResolverRuleArrayOutput {
	return o
}

func (o GetResolversResolverRuleArrayOutput) ToGetResolversResolverRuleArrayOutputWithContext(ctx context.Context) GetResolversResolverRuleArrayOutput {
	return o
}

func (o GetResolversResolverRuleArrayOutput) Index(i pulumi.IntInput) GetResolversResolverRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolversResolverRule {
		return vs[0].([]GetResolversResolverRule)[vs[1].(int)]
	}).(GetResolversResolverRuleOutput)
}

type GetRrsetItem struct {
	// The target fully-qualified domain name (FQDN) within the target zone.
	Domain string `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected bool `pulumi:"isProtected"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata string `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash string `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion string `pulumi:"rrsetVersion"`
	// The type of the target RRSet within the target zone.
	Rtype string `pulumi:"rtype"`
	// The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
	Ttl int `pulumi:"ttl"`
}

// GetRrsetItemInput is an input type that accepts GetRrsetItemArgs and GetRrsetItemOutput values.
// You can construct a concrete instance of `GetRrsetItemInput` via:
//
//	GetRrsetItemArgs{...}
type GetRrsetItemInput interface {
	pulumi.Input

	ToGetRrsetItemOutput() GetRrsetItemOutput
	ToGetRrsetItemOutputWithContext(context.Context) GetRrsetItemOutput
}

type GetRrsetItemArgs struct {
	// The target fully-qualified domain name (FQDN) within the target zone.
	Domain pulumi.StringInput `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected pulumi.BoolInput `pulumi:"isProtected"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringInput `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash pulumi.StringInput `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion pulumi.StringInput `pulumi:"rrsetVersion"`
	// The type of the target RRSet within the target zone.
	Rtype pulumi.StringInput `pulumi:"rtype"`
	// The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (GetRrsetItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRrsetItem)(nil)).Elem()
}

func (i GetRrsetItemArgs) ToGetRrsetItemOutput() GetRrsetItemOutput {
	return i.ToGetRrsetItemOutputWithContext(context.Background())
}

func (i GetRrsetItemArgs) ToGetRrsetItemOutputWithContext(ctx context.Context) GetRrsetItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRrsetItemOutput)
}

// GetRrsetItemArrayInput is an input type that accepts GetRrsetItemArray and GetRrsetItemArrayOutput values.
// You can construct a concrete instance of `GetRrsetItemArrayInput` via:
//
//	GetRrsetItemArray{ GetRrsetItemArgs{...} }
type GetRrsetItemArrayInput interface {
	pulumi.Input

	ToGetRrsetItemArrayOutput() GetRrsetItemArrayOutput
	ToGetRrsetItemArrayOutputWithContext(context.Context) GetRrsetItemArrayOutput
}

type GetRrsetItemArray []GetRrsetItemInput

func (GetRrsetItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRrsetItem)(nil)).Elem()
}

func (i GetRrsetItemArray) ToGetRrsetItemArrayOutput() GetRrsetItemArrayOutput {
	return i.ToGetRrsetItemArrayOutputWithContext(context.Background())
}

func (i GetRrsetItemArray) ToGetRrsetItemArrayOutputWithContext(ctx context.Context) GetRrsetItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRrsetItemArrayOutput)
}

type GetRrsetItemOutput struct{ *pulumi.OutputState }

func (GetRrsetItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRrsetItem)(nil)).Elem()
}

func (o GetRrsetItemOutput) ToGetRrsetItemOutput() GetRrsetItemOutput {
	return o
}

func (o GetRrsetItemOutput) ToGetRrsetItemOutputWithContext(ctx context.Context) GetRrsetItemOutput {
	return o
}

// The target fully-qualified domain name (FQDN) within the target zone.
func (o GetRrsetItemOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetItem) string { return v.Domain }).(pulumi.StringOutput)
}

// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
func (o GetRrsetItemOutput) IsProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRrsetItem) bool { return v.IsProtected }).(pulumi.BoolOutput)
}

// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
func (o GetRrsetItemOutput) Rdata() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetItem) string { return v.Rdata }).(pulumi.StringOutput)
}

// A unique identifier for the record within its zone.
func (o GetRrsetItemOutput) RecordHash() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetItem) string { return v.RecordHash }).(pulumi.StringOutput)
}

// The latest version of the record's zone in which its RRSet differs from the preceding version.
func (o GetRrsetItemOutput) RrsetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetItem) string { return v.RrsetVersion }).(pulumi.StringOutput)
}

// The type of the target RRSet within the target zone.
func (o GetRrsetItemOutput) Rtype() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetItem) string { return v.Rtype }).(pulumi.StringOutput)
}

// The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
func (o GetRrsetItemOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetRrsetItem) int { return v.Ttl }).(pulumi.IntOutput)
}

type GetRrsetItemArrayOutput struct{ *pulumi.OutputState }

func (GetRrsetItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRrsetItem)(nil)).Elem()
}

func (o GetRrsetItemArrayOutput) ToGetRrsetItemArrayOutput() GetRrsetItemArrayOutput {
	return o
}

func (o GetRrsetItemArrayOutput) ToGetRrsetItemArrayOutputWithContext(ctx context.Context) GetRrsetItemArrayOutput {
	return o
}

func (o GetRrsetItemArrayOutput) Index(i pulumi.IntInput) GetRrsetItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRrsetItem {
		return vs[0].([]GetRrsetItem)[vs[1].(int)]
	}).(GetRrsetItemOutput)
}

type GetRrsetsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetRrsetsFilterInput is an input type that accepts GetRrsetsFilterArgs and GetRrsetsFilterOutput values.
// You can construct a concrete instance of `GetRrsetsFilterInput` via:
//
//	GetRrsetsFilterArgs{...}
type GetRrsetsFilterInput interface {
	pulumi.Input

	ToGetRrsetsFilterOutput() GetRrsetsFilterOutput
	ToGetRrsetsFilterOutputWithContext(context.Context) GetRrsetsFilterOutput
}

type GetRrsetsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRrsetsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRrsetsFilter)(nil)).Elem()
}

func (i GetRrsetsFilterArgs) ToGetRrsetsFilterOutput() GetRrsetsFilterOutput {
	return i.ToGetRrsetsFilterOutputWithContext(context.Background())
}

func (i GetRrsetsFilterArgs) ToGetRrsetsFilterOutputWithContext(ctx context.Context) GetRrsetsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRrsetsFilterOutput)
}

// GetRrsetsFilterArrayInput is an input type that accepts GetRrsetsFilterArray and GetRrsetsFilterArrayOutput values.
// You can construct a concrete instance of `GetRrsetsFilterArrayInput` via:
//
//	GetRrsetsFilterArray{ GetRrsetsFilterArgs{...} }
type GetRrsetsFilterArrayInput interface {
	pulumi.Input

	ToGetRrsetsFilterArrayOutput() GetRrsetsFilterArrayOutput
	ToGetRrsetsFilterArrayOutputWithContext(context.Context) GetRrsetsFilterArrayOutput
}

type GetRrsetsFilterArray []GetRrsetsFilterInput

func (GetRrsetsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRrsetsFilter)(nil)).Elem()
}

func (i GetRrsetsFilterArray) ToGetRrsetsFilterArrayOutput() GetRrsetsFilterArrayOutput {
	return i.ToGetRrsetsFilterArrayOutputWithContext(context.Background())
}

func (i GetRrsetsFilterArray) ToGetRrsetsFilterArrayOutputWithContext(ctx context.Context) GetRrsetsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRrsetsFilterArrayOutput)
}

type GetRrsetsFilterOutput struct{ *pulumi.OutputState }

func (GetRrsetsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRrsetsFilter)(nil)).Elem()
}

func (o GetRrsetsFilterOutput) ToGetRrsetsFilterOutput() GetRrsetsFilterOutput {
	return o
}

func (o GetRrsetsFilterOutput) ToGetRrsetsFilterOutputWithContext(ctx context.Context) GetRrsetsFilterOutput {
	return o
}

func (o GetRrsetsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRrsetsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRrsetsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetRrsetsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRrsetsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRrsetsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRrsetsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRrsetsFilter)(nil)).Elem()
}

func (o GetRrsetsFilterArrayOutput) ToGetRrsetsFilterArrayOutput() GetRrsetsFilterArrayOutput {
	return o
}

func (o GetRrsetsFilterArrayOutput) ToGetRrsetsFilterArrayOutputWithContext(ctx context.Context) GetRrsetsFilterArrayOutput {
	return o
}

func (o GetRrsetsFilterArrayOutput) Index(i pulumi.IntInput) GetRrsetsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRrsetsFilter {
		return vs[0].([]GetRrsetsFilter)[vs[1].(int)]
	}).(GetRrsetsFilterOutput)
}

type GetRrsetsRrset struct {
	// The target fully-qualified domain name (FQDN) within the target zone.
	Domain string               `pulumi:"domain"`
	Items  []GetRrsetsRrsetItem `pulumi:"items"`
	// Search by record type. Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
	Rtype string `pulumi:"rtype"`
}

// GetRrsetsRrsetInput is an input type that accepts GetRrsetsRrsetArgs and GetRrsetsRrsetOutput values.
// You can construct a concrete instance of `GetRrsetsRrsetInput` via:
//
//	GetRrsetsRrsetArgs{...}
type GetRrsetsRrsetInput interface {
	pulumi.Input

	ToGetRrsetsRrsetOutput() GetRrsetsRrsetOutput
	ToGetRrsetsRrsetOutputWithContext(context.Context) GetRrsetsRrsetOutput
}

type GetRrsetsRrsetArgs struct {
	// The target fully-qualified domain name (FQDN) within the target zone.
	Domain pulumi.StringInput           `pulumi:"domain"`
	Items  GetRrsetsRrsetItemArrayInput `pulumi:"items"`
	// Search by record type. Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
	Rtype pulumi.StringInput `pulumi:"rtype"`
}

func (GetRrsetsRrsetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRrsetsRrset)(nil)).Elem()
}

func (i GetRrsetsRrsetArgs) ToGetRrsetsRrsetOutput() GetRrsetsRrsetOutput {
	return i.ToGetRrsetsRrsetOutputWithContext(context.Background())
}

func (i GetRrsetsRrsetArgs) ToGetRrsetsRrsetOutputWithContext(ctx context.Context) GetRrsetsRrsetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRrsetsRrsetOutput)
}

// GetRrsetsRrsetArrayInput is an input type that accepts GetRrsetsRrsetArray and GetRrsetsRrsetArrayOutput values.
// You can construct a concrete instance of `GetRrsetsRrsetArrayInput` via:
//
//	GetRrsetsRrsetArray{ GetRrsetsRrsetArgs{...} }
type GetRrsetsRrsetArrayInput interface {
	pulumi.Input

	ToGetRrsetsRrsetArrayOutput() GetRrsetsRrsetArrayOutput
	ToGetRrsetsRrsetArrayOutputWithContext(context.Context) GetRrsetsRrsetArrayOutput
}

type GetRrsetsRrsetArray []GetRrsetsRrsetInput

func (GetRrsetsRrsetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRrsetsRrset)(nil)).Elem()
}

func (i GetRrsetsRrsetArray) ToGetRrsetsRrsetArrayOutput() GetRrsetsRrsetArrayOutput {
	return i.ToGetRrsetsRrsetArrayOutputWithContext(context.Background())
}

func (i GetRrsetsRrsetArray) ToGetRrsetsRrsetArrayOutputWithContext(ctx context.Context) GetRrsetsRrsetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRrsetsRrsetArrayOutput)
}

type GetRrsetsRrsetOutput struct{ *pulumi.OutputState }

func (GetRrsetsRrsetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRrsetsRrset)(nil)).Elem()
}

func (o GetRrsetsRrsetOutput) ToGetRrsetsRrsetOutput() GetRrsetsRrsetOutput {
	return o
}

func (o GetRrsetsRrsetOutput) ToGetRrsetsRrsetOutputWithContext(ctx context.Context) GetRrsetsRrsetOutput {
	return o
}

// The target fully-qualified domain name (FQDN) within the target zone.
func (o GetRrsetsRrsetOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetsRrset) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetRrsetsRrsetOutput) Items() GetRrsetsRrsetItemArrayOutput {
	return o.ApplyT(func(v GetRrsetsRrset) []GetRrsetsRrsetItem { return v.Items }).(GetRrsetsRrsetItemArrayOutput)
}

// Search by record type. Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
func (o GetRrsetsRrsetOutput) Rtype() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetsRrset) string { return v.Rtype }).(pulumi.StringOutput)
}

type GetRrsetsRrsetArrayOutput struct{ *pulumi.OutputState }

func (GetRrsetsRrsetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRrsetsRrset)(nil)).Elem()
}

func (o GetRrsetsRrsetArrayOutput) ToGetRrsetsRrsetArrayOutput() GetRrsetsRrsetArrayOutput {
	return o
}

func (o GetRrsetsRrsetArrayOutput) ToGetRrsetsRrsetArrayOutputWithContext(ctx context.Context) GetRrsetsRrsetArrayOutput {
	return o
}

func (o GetRrsetsRrsetArrayOutput) Index(i pulumi.IntInput) GetRrsetsRrsetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRrsetsRrset {
		return vs[0].([]GetRrsetsRrset)[vs[1].(int)]
	}).(GetRrsetsRrsetOutput)
}

type GetRrsetsRrsetItem struct {
	// The target fully-qualified domain name (FQDN) within the target zone.
	Domain string `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected bool `pulumi:"isProtected"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata string `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash string `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion string `pulumi:"rrsetVersion"`
	// Search by record type. Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
	Rtype string `pulumi:"rtype"`
	// The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
	Ttl int `pulumi:"ttl"`
}

// GetRrsetsRrsetItemInput is an input type that accepts GetRrsetsRrsetItemArgs and GetRrsetsRrsetItemOutput values.
// You can construct a concrete instance of `GetRrsetsRrsetItemInput` via:
//
//	GetRrsetsRrsetItemArgs{...}
type GetRrsetsRrsetItemInput interface {
	pulumi.Input

	ToGetRrsetsRrsetItemOutput() GetRrsetsRrsetItemOutput
	ToGetRrsetsRrsetItemOutputWithContext(context.Context) GetRrsetsRrsetItemOutput
}

type GetRrsetsRrsetItemArgs struct {
	// The target fully-qualified domain name (FQDN) within the target zone.
	Domain pulumi.StringInput `pulumi:"domain"`
	// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
	IsProtected pulumi.BoolInput `pulumi:"isProtected"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringInput `pulumi:"rdata"`
	// A unique identifier for the record within its zone.
	RecordHash pulumi.StringInput `pulumi:"recordHash"`
	// The latest version of the record's zone in which its RRSet differs from the preceding version.
	RrsetVersion pulumi.StringInput `pulumi:"rrsetVersion"`
	// Search by record type. Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
	Rtype pulumi.StringInput `pulumi:"rtype"`
	// The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (GetRrsetsRrsetItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRrsetsRrsetItem)(nil)).Elem()
}

func (i GetRrsetsRrsetItemArgs) ToGetRrsetsRrsetItemOutput() GetRrsetsRrsetItemOutput {
	return i.ToGetRrsetsRrsetItemOutputWithContext(context.Background())
}

func (i GetRrsetsRrsetItemArgs) ToGetRrsetsRrsetItemOutputWithContext(ctx context.Context) GetRrsetsRrsetItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRrsetsRrsetItemOutput)
}

// GetRrsetsRrsetItemArrayInput is an input type that accepts GetRrsetsRrsetItemArray and GetRrsetsRrsetItemArrayOutput values.
// You can construct a concrete instance of `GetRrsetsRrsetItemArrayInput` via:
//
//	GetRrsetsRrsetItemArray{ GetRrsetsRrsetItemArgs{...} }
type GetRrsetsRrsetItemArrayInput interface {
	pulumi.Input

	ToGetRrsetsRrsetItemArrayOutput() GetRrsetsRrsetItemArrayOutput
	ToGetRrsetsRrsetItemArrayOutputWithContext(context.Context) GetRrsetsRrsetItemArrayOutput
}

type GetRrsetsRrsetItemArray []GetRrsetsRrsetItemInput

func (GetRrsetsRrsetItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRrsetsRrsetItem)(nil)).Elem()
}

func (i GetRrsetsRrsetItemArray) ToGetRrsetsRrsetItemArrayOutput() GetRrsetsRrsetItemArrayOutput {
	return i.ToGetRrsetsRrsetItemArrayOutputWithContext(context.Background())
}

func (i GetRrsetsRrsetItemArray) ToGetRrsetsRrsetItemArrayOutputWithContext(ctx context.Context) GetRrsetsRrsetItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRrsetsRrsetItemArrayOutput)
}

type GetRrsetsRrsetItemOutput struct{ *pulumi.OutputState }

func (GetRrsetsRrsetItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRrsetsRrsetItem)(nil)).Elem()
}

func (o GetRrsetsRrsetItemOutput) ToGetRrsetsRrsetItemOutput() GetRrsetsRrsetItemOutput {
	return o
}

func (o GetRrsetsRrsetItemOutput) ToGetRrsetsRrsetItemOutputWithContext(ctx context.Context) GetRrsetsRrsetItemOutput {
	return o
}

// The target fully-qualified domain name (FQDN) within the target zone.
func (o GetRrsetsRrsetItemOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetsRrsetItem) string { return v.Domain }).(pulumi.StringOutput)
}

// A Boolean flag indicating whether or not parts of the record are unable to be explicitly managed.
func (o GetRrsetsRrsetItemOutput) IsProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRrsetsRrsetItem) bool { return v.IsProtected }).(pulumi.BoolOutput)
}

// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
func (o GetRrsetsRrsetItemOutput) Rdata() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetsRrsetItem) string { return v.Rdata }).(pulumi.StringOutput)
}

// A unique identifier for the record within its zone.
func (o GetRrsetsRrsetItemOutput) RecordHash() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetsRrsetItem) string { return v.RecordHash }).(pulumi.StringOutput)
}

// The latest version of the record's zone in which its RRSet differs from the preceding version.
func (o GetRrsetsRrsetItemOutput) RrsetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetsRrsetItem) string { return v.RrsetVersion }).(pulumi.StringOutput)
}

// Search by record type. Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
func (o GetRrsetsRrsetItemOutput) Rtype() pulumi.StringOutput {
	return o.ApplyT(func(v GetRrsetsRrsetItem) string { return v.Rtype }).(pulumi.StringOutput)
}

// The Time To Live for the record, in seconds. Using a TTL lower than 30 seconds is not recommended.
func (o GetRrsetsRrsetItemOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetRrsetsRrsetItem) int { return v.Ttl }).(pulumi.IntOutput)
}

type GetRrsetsRrsetItemArrayOutput struct{ *pulumi.OutputState }

func (GetRrsetsRrsetItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRrsetsRrsetItem)(nil)).Elem()
}

func (o GetRrsetsRrsetItemArrayOutput) ToGetRrsetsRrsetItemArrayOutput() GetRrsetsRrsetItemArrayOutput {
	return o
}

func (o GetRrsetsRrsetItemArrayOutput) ToGetRrsetsRrsetItemArrayOutputWithContext(ctx context.Context) GetRrsetsRrsetItemArrayOutput {
	return o
}

func (o GetRrsetsRrsetItemArrayOutput) Index(i pulumi.IntInput) GetRrsetsRrsetItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRrsetsRrsetItem {
		return vs[0].([]GetRrsetsRrsetItem)[vs[1].(int)]
	}).(GetRrsetsRrsetItemOutput)
}

type GetSteeringPoliciesFilter struct {
	// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSteeringPoliciesFilterInput is an input type that accepts GetSteeringPoliciesFilterArgs and GetSteeringPoliciesFilterOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesFilterInput` via:
//
//	GetSteeringPoliciesFilterArgs{...}
type GetSteeringPoliciesFilterInput interface {
	pulumi.Input

	ToGetSteeringPoliciesFilterOutput() GetSteeringPoliciesFilterOutput
	ToGetSteeringPoliciesFilterOutputWithContext(context.Context) GetSteeringPoliciesFilterOutput
}

type GetSteeringPoliciesFilterArgs struct {
	// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSteeringPoliciesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesFilter)(nil)).Elem()
}

func (i GetSteeringPoliciesFilterArgs) ToGetSteeringPoliciesFilterOutput() GetSteeringPoliciesFilterOutput {
	return i.ToGetSteeringPoliciesFilterOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesFilterArgs) ToGetSteeringPoliciesFilterOutputWithContext(ctx context.Context) GetSteeringPoliciesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesFilterOutput)
}

// GetSteeringPoliciesFilterArrayInput is an input type that accepts GetSteeringPoliciesFilterArray and GetSteeringPoliciesFilterArrayOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesFilterArrayInput` via:
//
//	GetSteeringPoliciesFilterArray{ GetSteeringPoliciesFilterArgs{...} }
type GetSteeringPoliciesFilterArrayInput interface {
	pulumi.Input

	ToGetSteeringPoliciesFilterArrayOutput() GetSteeringPoliciesFilterArrayOutput
	ToGetSteeringPoliciesFilterArrayOutputWithContext(context.Context) GetSteeringPoliciesFilterArrayOutput
}

type GetSteeringPoliciesFilterArray []GetSteeringPoliciesFilterInput

func (GetSteeringPoliciesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesFilter)(nil)).Elem()
}

func (i GetSteeringPoliciesFilterArray) ToGetSteeringPoliciesFilterArrayOutput() GetSteeringPoliciesFilterArrayOutput {
	return i.ToGetSteeringPoliciesFilterArrayOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesFilterArray) ToGetSteeringPoliciesFilterArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesFilterArrayOutput)
}

type GetSteeringPoliciesFilterOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesFilter)(nil)).Elem()
}

func (o GetSteeringPoliciesFilterOutput) ToGetSteeringPoliciesFilterOutput() GetSteeringPoliciesFilterOutput {
	return o
}

func (o GetSteeringPoliciesFilterOutput) ToGetSteeringPoliciesFilterOutputWithContext(ctx context.Context) GetSteeringPoliciesFilterOutput {
	return o
}

// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
func (o GetSteeringPoliciesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSteeringPoliciesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSteeringPoliciesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSteeringPoliciesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSteeringPoliciesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSteeringPoliciesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesFilter)(nil)).Elem()
}

func (o GetSteeringPoliciesFilterArrayOutput) ToGetSteeringPoliciesFilterArrayOutput() GetSteeringPoliciesFilterArrayOutput {
	return o
}

func (o GetSteeringPoliciesFilterArrayOutput) ToGetSteeringPoliciesFilterArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesFilterArrayOutput {
	return o
}

func (o GetSteeringPoliciesFilterArrayOutput) Index(i pulumi.IntInput) GetSteeringPoliciesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPoliciesFilter {
		return vs[0].([]GetSteeringPoliciesFilter)[vs[1].(int)]
	}).(GetSteeringPoliciesFilterOutput)
}

type GetSteeringPoliciesSteeringPolicy struct {
	// The set of all answers that can potentially issue from the steering policy.
	Answers []GetSteeringPoliciesSteeringPolicyAnswer `pulumi:"answers"`
	// The OCID of the compartment the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The displayName of a resource.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Search by health check monitor OCID. Will match any resource whose health check monitor ID matches the provided value.
	HealthCheckMonitorId string `pulumi:"healthCheckMonitorId"`
	// The OCID of a resource.
	Id string `pulumi:"id"`
	// The series of rules that will be processed in sequence to reduce the pool of answers to a response for any given request.
	Rules []GetSteeringPoliciesSteeringPolicyRule `pulumi:"rules"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The state of a resource.
	State string `pulumi:"state"`
	// Search by steering template type. Will match any resource whose template type matches the provided value.
	Template string `pulumi:"template"`
	// The date and time the resource was created, expressed in RFC 3339 timestamp format.
	TimeCreated string `pulumi:"timeCreated"`
	// The Time To Live (TTL) for responses from the steering policy, in seconds. If not specified during creation, a value of 30 seconds will be used.
	Ttl int `pulumi:"ttl"`
}

// GetSteeringPoliciesSteeringPolicyInput is an input type that accepts GetSteeringPoliciesSteeringPolicyArgs and GetSteeringPoliciesSteeringPolicyOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyInput` via:
//
//	GetSteeringPoliciesSteeringPolicyArgs{...}
type GetSteeringPoliciesSteeringPolicyInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyOutput() GetSteeringPoliciesSteeringPolicyOutput
	ToGetSteeringPoliciesSteeringPolicyOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyOutput
}

type GetSteeringPoliciesSteeringPolicyArgs struct {
	// The set of all answers that can potentially issue from the steering policy.
	Answers GetSteeringPoliciesSteeringPolicyAnswerArrayInput `pulumi:"answers"`
	// The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The displayName of a resource.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// Search by health check monitor OCID. Will match any resource whose health check monitor ID matches the provided value.
	HealthCheckMonitorId pulumi.StringInput `pulumi:"healthCheckMonitorId"`
	// The OCID of a resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The series of rules that will be processed in sequence to reduce the pool of answers to a response for any given request.
	Rules GetSteeringPoliciesSteeringPolicyRuleArrayInput `pulumi:"rules"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringInput `pulumi:"self"`
	// The state of a resource.
	State pulumi.StringInput `pulumi:"state"`
	// Search by steering template type. Will match any resource whose template type matches the provided value.
	Template pulumi.StringInput `pulumi:"template"`
	// The date and time the resource was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The Time To Live (TTL) for responses from the steering policy, in seconds. If not specified during creation, a value of 30 seconds will be used.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (GetSteeringPoliciesSteeringPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicy)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyArgs) ToGetSteeringPoliciesSteeringPolicyOutput() GetSteeringPoliciesSteeringPolicyOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyArgs) ToGetSteeringPoliciesSteeringPolicyOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyOutput)
}

// GetSteeringPoliciesSteeringPolicyArrayInput is an input type that accepts GetSteeringPoliciesSteeringPolicyArray and GetSteeringPoliciesSteeringPolicyArrayOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyArrayInput` via:
//
//	GetSteeringPoliciesSteeringPolicyArray{ GetSteeringPoliciesSteeringPolicyArgs{...} }
type GetSteeringPoliciesSteeringPolicyArrayInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyArrayOutput() GetSteeringPoliciesSteeringPolicyArrayOutput
	ToGetSteeringPoliciesSteeringPolicyArrayOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyArrayOutput
}

type GetSteeringPoliciesSteeringPolicyArray []GetSteeringPoliciesSteeringPolicyInput

func (GetSteeringPoliciesSteeringPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicy)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyArray) ToGetSteeringPoliciesSteeringPolicyArrayOutput() GetSteeringPoliciesSteeringPolicyArrayOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyArrayOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyArray) ToGetSteeringPoliciesSteeringPolicyArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyArrayOutput)
}

type GetSteeringPoliciesSteeringPolicyOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicy)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyOutput) ToGetSteeringPoliciesSteeringPolicyOutput() GetSteeringPoliciesSteeringPolicyOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyOutput) ToGetSteeringPoliciesSteeringPolicyOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyOutput {
	return o
}

// The set of all answers that can potentially issue from the steering policy.
func (o GetSteeringPoliciesSteeringPolicyOutput) Answers() GetSteeringPoliciesSteeringPolicyAnswerArrayOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) []GetSteeringPoliciesSteeringPolicyAnswer { return v.Answers }).(GetSteeringPoliciesSteeringPolicyAnswerArrayOutput)
}

// The OCID of the compartment the resource belongs to.
func (o GetSteeringPoliciesSteeringPolicyOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o GetSteeringPoliciesSteeringPolicyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The displayName of a resource.
func (o GetSteeringPoliciesSteeringPolicyOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o GetSteeringPoliciesSteeringPolicyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Search by health check monitor OCID. Will match any resource whose health check monitor ID matches the provided value.
func (o GetSteeringPoliciesSteeringPolicyOutput) HealthCheckMonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) string { return v.HealthCheckMonitorId }).(pulumi.StringOutput)
}

// The OCID of a resource.
func (o GetSteeringPoliciesSteeringPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The series of rules that will be processed in sequence to reduce the pool of answers to a response for any given request.
func (o GetSteeringPoliciesSteeringPolicyOutput) Rules() GetSteeringPoliciesSteeringPolicyRuleArrayOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) []GetSteeringPoliciesSteeringPolicyRule { return v.Rules }).(GetSteeringPoliciesSteeringPolicyRuleArrayOutput)
}

// The canonical absolute URL of the resource.
func (o GetSteeringPoliciesSteeringPolicyOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) string { return v.Self }).(pulumi.StringOutput)
}

// The state of a resource.
func (o GetSteeringPoliciesSteeringPolicyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) string { return v.State }).(pulumi.StringOutput)
}

// Search by steering template type. Will match any resource whose template type matches the provided value.
func (o GetSteeringPoliciesSteeringPolicyOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) string { return v.Template }).(pulumi.StringOutput)
}

// The date and time the resource was created, expressed in RFC 3339 timestamp format.
func (o GetSteeringPoliciesSteeringPolicyOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The Time To Live (TTL) for responses from the steering policy, in seconds. If not specified during creation, a value of 30 seconds will be used.
func (o GetSteeringPoliciesSteeringPolicyOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicy) int { return v.Ttl }).(pulumi.IntOutput)
}

type GetSteeringPoliciesSteeringPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicy)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyArrayOutput) ToGetSteeringPoliciesSteeringPolicyArrayOutput() GetSteeringPoliciesSteeringPolicyArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyArrayOutput) ToGetSteeringPoliciesSteeringPolicyArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyArrayOutput) Index(i pulumi.IntInput) GetSteeringPoliciesSteeringPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPoliciesSteeringPolicy {
		return vs[0].([]GetSteeringPoliciesSteeringPolicy)[vs[1].(int)]
	}).(GetSteeringPoliciesSteeringPolicyOutput)
}

type GetSteeringPoliciesSteeringPolicyAnswer struct {
	// Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
	IsDisabled bool `pulumi:"isDisabled"`
	// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
	Name string `pulumi:"name"`
	// The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
	Pool string `pulumi:"pool"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rdata string `pulumi:"rdata"`
	// The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rtype string `pulumi:"rtype"`
}

// GetSteeringPoliciesSteeringPolicyAnswerInput is an input type that accepts GetSteeringPoliciesSteeringPolicyAnswerArgs and GetSteeringPoliciesSteeringPolicyAnswerOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyAnswerInput` via:
//
//	GetSteeringPoliciesSteeringPolicyAnswerArgs{...}
type GetSteeringPoliciesSteeringPolicyAnswerInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyAnswerOutput() GetSteeringPoliciesSteeringPolicyAnswerOutput
	ToGetSteeringPoliciesSteeringPolicyAnswerOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyAnswerOutput
}

type GetSteeringPoliciesSteeringPolicyAnswerArgs struct {
	// Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
	IsDisabled pulumi.BoolInput `pulumi:"isDisabled"`
	// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
	Name pulumi.StringInput `pulumi:"name"`
	// The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
	Pool pulumi.StringInput `pulumi:"pool"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rdata pulumi.StringInput `pulumi:"rdata"`
	// The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rtype pulumi.StringInput `pulumi:"rtype"`
}

func (GetSteeringPoliciesSteeringPolicyAnswerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyAnswer)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyAnswerArgs) ToGetSteeringPoliciesSteeringPolicyAnswerOutput() GetSteeringPoliciesSteeringPolicyAnswerOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyAnswerOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyAnswerArgs) ToGetSteeringPoliciesSteeringPolicyAnswerOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyAnswerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyAnswerOutput)
}

// GetSteeringPoliciesSteeringPolicyAnswerArrayInput is an input type that accepts GetSteeringPoliciesSteeringPolicyAnswerArray and GetSteeringPoliciesSteeringPolicyAnswerArrayOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyAnswerArrayInput` via:
//
//	GetSteeringPoliciesSteeringPolicyAnswerArray{ GetSteeringPoliciesSteeringPolicyAnswerArgs{...} }
type GetSteeringPoliciesSteeringPolicyAnswerArrayInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyAnswerArrayOutput() GetSteeringPoliciesSteeringPolicyAnswerArrayOutput
	ToGetSteeringPoliciesSteeringPolicyAnswerArrayOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyAnswerArrayOutput
}

type GetSteeringPoliciesSteeringPolicyAnswerArray []GetSteeringPoliciesSteeringPolicyAnswerInput

func (GetSteeringPoliciesSteeringPolicyAnswerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicyAnswer)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyAnswerArray) ToGetSteeringPoliciesSteeringPolicyAnswerArrayOutput() GetSteeringPoliciesSteeringPolicyAnswerArrayOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyAnswerArrayOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyAnswerArray) ToGetSteeringPoliciesSteeringPolicyAnswerArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyAnswerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyAnswerArrayOutput)
}

type GetSteeringPoliciesSteeringPolicyAnswerOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyAnswerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyAnswer)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyAnswerOutput) ToGetSteeringPoliciesSteeringPolicyAnswerOutput() GetSteeringPoliciesSteeringPolicyAnswerOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyAnswerOutput) ToGetSteeringPoliciesSteeringPolicyAnswerOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyAnswerOutput {
	return o
}

// Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
func (o GetSteeringPoliciesSteeringPolicyAnswerOutput) IsDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyAnswer) bool { return v.IsDisabled }).(pulumi.BoolOutput)
}

// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
func (o GetSteeringPoliciesSteeringPolicyAnswerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyAnswer) string { return v.Name }).(pulumi.StringOutput)
}

// The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
func (o GetSteeringPoliciesSteeringPolicyAnswerOutput) Pool() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyAnswer) string { return v.Pool }).(pulumi.StringOutput)
}

// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
func (o GetSteeringPoliciesSteeringPolicyAnswerOutput) Rdata() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyAnswer) string { return v.Rdata }).(pulumi.StringOutput)
}

// The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
func (o GetSteeringPoliciesSteeringPolicyAnswerOutput) Rtype() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyAnswer) string { return v.Rtype }).(pulumi.StringOutput)
}

type GetSteeringPoliciesSteeringPolicyAnswerArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyAnswerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicyAnswer)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyAnswerArrayOutput) ToGetSteeringPoliciesSteeringPolicyAnswerArrayOutput() GetSteeringPoliciesSteeringPolicyAnswerArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyAnswerArrayOutput) ToGetSteeringPoliciesSteeringPolicyAnswerArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyAnswerArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyAnswerArrayOutput) Index(i pulumi.IntInput) GetSteeringPoliciesSteeringPolicyAnswerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPoliciesSteeringPolicyAnswer {
		return vs[0].([]GetSteeringPoliciesSteeringPolicyAnswer)[vs[1].(int)]
	}).(GetSteeringPoliciesSteeringPolicyAnswerOutput)
}

type GetSteeringPoliciesSteeringPolicyRule struct {
	// An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
	Cases []GetSteeringPoliciesSteeringPolicyRuleCase `pulumi:"cases"`
	// Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
	DefaultAnswerDatas []GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData `pulumi:"defaultAnswerDatas"`
	// Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
	DefaultCount int `pulumi:"defaultCount"`
	// A user-defined description of the rule's purpose or behavior.
	Description string `pulumi:"description"`
	// The type of a rule determines its sorting/filtering behavior.
	// * `FILTER` - Filters the list of answers based on their defined boolean data. Answers remain only if their `shouldKeep` value is `true`.
	// * `HEALTH` - Removes answers from the list if their `rdata` matches a target in the health check monitor referenced by the steering policy and the target is reported down.
	// * `WEIGHTED` - Uses a number between 0 and 255 to determine how often an answer will be served in relation to other answers. Anwers with a higher weight will be served more frequently.
	// * `PRIORITY` - Uses a defined rank value of answers to determine which answer to serve, moving those with the lowest values to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	// * `LIMIT` - Filters answers that are too far down the list. Parameter `defaultCount` specifies how many answers to keep. **Example:** If `defaultCount` has a value of `2` and there are five answers left, when the `LIMIT` rule is processed, only the first two answers will remain in the list.
	RuleType string `pulumi:"ruleType"`
}

// GetSteeringPoliciesSteeringPolicyRuleInput is an input type that accepts GetSteeringPoliciesSteeringPolicyRuleArgs and GetSteeringPoliciesSteeringPolicyRuleOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyRuleInput` via:
//
//	GetSteeringPoliciesSteeringPolicyRuleArgs{...}
type GetSteeringPoliciesSteeringPolicyRuleInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyRuleOutput() GetSteeringPoliciesSteeringPolicyRuleOutput
	ToGetSteeringPoliciesSteeringPolicyRuleOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyRuleOutput
}

type GetSteeringPoliciesSteeringPolicyRuleArgs struct {
	// An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
	Cases GetSteeringPoliciesSteeringPolicyRuleCaseArrayInput `pulumi:"cases"`
	// Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
	DefaultAnswerDatas GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayInput `pulumi:"defaultAnswerDatas"`
	// Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
	DefaultCount pulumi.IntInput `pulumi:"defaultCount"`
	// A user-defined description of the rule's purpose or behavior.
	Description pulumi.StringInput `pulumi:"description"`
	// The type of a rule determines its sorting/filtering behavior.
	// * `FILTER` - Filters the list of answers based on their defined boolean data. Answers remain only if their `shouldKeep` value is `true`.
	// * `HEALTH` - Removes answers from the list if their `rdata` matches a target in the health check monitor referenced by the steering policy and the target is reported down.
	// * `WEIGHTED` - Uses a number between 0 and 255 to determine how often an answer will be served in relation to other answers. Anwers with a higher weight will be served more frequently.
	// * `PRIORITY` - Uses a defined rank value of answers to determine which answer to serve, moving those with the lowest values to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	// * `LIMIT` - Filters answers that are too far down the list. Parameter `defaultCount` specifies how many answers to keep. **Example:** If `defaultCount` has a value of `2` and there are five answers left, when the `LIMIT` rule is processed, only the first two answers will remain in the list.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (GetSteeringPoliciesSteeringPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRule)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyRuleArgs) ToGetSteeringPoliciesSteeringPolicyRuleOutput() GetSteeringPoliciesSteeringPolicyRuleOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyRuleOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyRuleArgs) ToGetSteeringPoliciesSteeringPolicyRuleOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyRuleOutput)
}

// GetSteeringPoliciesSteeringPolicyRuleArrayInput is an input type that accepts GetSteeringPoliciesSteeringPolicyRuleArray and GetSteeringPoliciesSteeringPolicyRuleArrayOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyRuleArrayInput` via:
//
//	GetSteeringPoliciesSteeringPolicyRuleArray{ GetSteeringPoliciesSteeringPolicyRuleArgs{...} }
type GetSteeringPoliciesSteeringPolicyRuleArrayInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyRuleArrayOutput() GetSteeringPoliciesSteeringPolicyRuleArrayOutput
	ToGetSteeringPoliciesSteeringPolicyRuleArrayOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyRuleArrayOutput
}

type GetSteeringPoliciesSteeringPolicyRuleArray []GetSteeringPoliciesSteeringPolicyRuleInput

func (GetSteeringPoliciesSteeringPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicyRule)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyRuleArray) ToGetSteeringPoliciesSteeringPolicyRuleArrayOutput() GetSteeringPoliciesSteeringPolicyRuleArrayOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyRuleArrayOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyRuleArray) ToGetSteeringPoliciesSteeringPolicyRuleArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyRuleArrayOutput)
}

type GetSteeringPoliciesSteeringPolicyRuleOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRule)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyRuleOutput) ToGetSteeringPoliciesSteeringPolicyRuleOutput() GetSteeringPoliciesSteeringPolicyRuleOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleOutput) ToGetSteeringPoliciesSteeringPolicyRuleOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleOutput {
	return o
}

// An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
func (o GetSteeringPoliciesSteeringPolicyRuleOutput) Cases() GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRule) []GetSteeringPoliciesSteeringPolicyRuleCase {
		return v.Cases
	}).(GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput)
}

// Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
func (o GetSteeringPoliciesSteeringPolicyRuleOutput) DefaultAnswerDatas() GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRule) []GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData {
		return v.DefaultAnswerDatas
	}).(GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput)
}

// Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
func (o GetSteeringPoliciesSteeringPolicyRuleOutput) DefaultCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRule) int { return v.DefaultCount }).(pulumi.IntOutput)
}

// A user-defined description of the rule's purpose or behavior.
func (o GetSteeringPoliciesSteeringPolicyRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRule) string { return v.Description }).(pulumi.StringOutput)
}

// The type of a rule determines its sorting/filtering behavior.
// * `FILTER` - Filters the list of answers based on their defined boolean data. Answers remain only if their `shouldKeep` value is `true`.
// * `HEALTH` - Removes answers from the list if their `rdata` matches a target in the health check monitor referenced by the steering policy and the target is reported down.
// * `WEIGHTED` - Uses a number between 0 and 255 to determine how often an answer will be served in relation to other answers. Anwers with a higher weight will be served more frequently.
// * `PRIORITY` - Uses a defined rank value of answers to determine which answer to serve, moving those with the lowest values to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
// * `LIMIT` - Filters answers that are too far down the list. Parameter `defaultCount` specifies how many answers to keep. **Example:** If `defaultCount` has a value of `2` and there are five answers left, when the `LIMIT` rule is processed, only the first two answers will remain in the list.
func (o GetSteeringPoliciesSteeringPolicyRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type GetSteeringPoliciesSteeringPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicyRule)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyRuleArrayOutput) ToGetSteeringPoliciesSteeringPolicyRuleArrayOutput() GetSteeringPoliciesSteeringPolicyRuleArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleArrayOutput) ToGetSteeringPoliciesSteeringPolicyRuleArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleArrayOutput) Index(i pulumi.IntInput) GetSteeringPoliciesSteeringPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPoliciesSteeringPolicyRule {
		return vs[0].([]GetSteeringPoliciesSteeringPolicyRule)[vs[1].(int)]
	}).(GetSteeringPoliciesSteeringPolicyRuleOutput)
}

type GetSteeringPoliciesSteeringPolicyRuleCase struct {
	// An array of `SteeringPolicyPriorityAnswerData` objects.
	AnswerDatas []GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData `pulumi:"answerDatas"`
	// An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.address in ('192.0.2.0/24')` to define a case that matches queries from that office.
	CaseCondition string `pulumi:"caseCondition"`
	// The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
	Count int `pulumi:"count"`
}

// GetSteeringPoliciesSteeringPolicyRuleCaseInput is an input type that accepts GetSteeringPoliciesSteeringPolicyRuleCaseArgs and GetSteeringPoliciesSteeringPolicyRuleCaseOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyRuleCaseInput` via:
//
//	GetSteeringPoliciesSteeringPolicyRuleCaseArgs{...}
type GetSteeringPoliciesSteeringPolicyRuleCaseInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyRuleCaseOutput() GetSteeringPoliciesSteeringPolicyRuleCaseOutput
	ToGetSteeringPoliciesSteeringPolicyRuleCaseOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseOutput
}

type GetSteeringPoliciesSteeringPolicyRuleCaseArgs struct {
	// An array of `SteeringPolicyPriorityAnswerData` objects.
	AnswerDatas GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayInput `pulumi:"answerDatas"`
	// An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.address in ('192.0.2.0/24')` to define a case that matches queries from that office.
	CaseCondition pulumi.StringInput `pulumi:"caseCondition"`
	// The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
	Count pulumi.IntInput `pulumi:"count"`
}

func (GetSteeringPoliciesSteeringPolicyRuleCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleCase)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyRuleCaseArgs) ToGetSteeringPoliciesSteeringPolicyRuleCaseOutput() GetSteeringPoliciesSteeringPolicyRuleCaseOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyRuleCaseOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyRuleCaseArgs) ToGetSteeringPoliciesSteeringPolicyRuleCaseOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyRuleCaseOutput)
}

// GetSteeringPoliciesSteeringPolicyRuleCaseArrayInput is an input type that accepts GetSteeringPoliciesSteeringPolicyRuleCaseArray and GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyRuleCaseArrayInput` via:
//
//	GetSteeringPoliciesSteeringPolicyRuleCaseArray{ GetSteeringPoliciesSteeringPolicyRuleCaseArgs{...} }
type GetSteeringPoliciesSteeringPolicyRuleCaseArrayInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput() GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput
	ToGetSteeringPoliciesSteeringPolicyRuleCaseArrayOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput
}

type GetSteeringPoliciesSteeringPolicyRuleCaseArray []GetSteeringPoliciesSteeringPolicyRuleCaseInput

func (GetSteeringPoliciesSteeringPolicyRuleCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicyRuleCase)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyRuleCaseArray) ToGetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput() GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyRuleCaseArrayOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyRuleCaseArray) ToGetSteeringPoliciesSteeringPolicyRuleCaseArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput)
}

type GetSteeringPoliciesSteeringPolicyRuleCaseOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyRuleCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleCase)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyRuleCaseOutput) ToGetSteeringPoliciesSteeringPolicyRuleCaseOutput() GetSteeringPoliciesSteeringPolicyRuleCaseOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleCaseOutput) ToGetSteeringPoliciesSteeringPolicyRuleCaseOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseOutput {
	return o
}

// An array of `SteeringPolicyPriorityAnswerData` objects.
func (o GetSteeringPoliciesSteeringPolicyRuleCaseOutput) AnswerDatas() GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRuleCase) []GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData {
		return v.AnswerDatas
	}).(GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput)
}

// An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.address in ('192.0.2.0/24')` to define a case that matches queries from that office.
func (o GetSteeringPoliciesSteeringPolicyRuleCaseOutput) CaseCondition() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRuleCase) string { return v.CaseCondition }).(pulumi.StringOutput)
}

// The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
func (o GetSteeringPoliciesSteeringPolicyRuleCaseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRuleCase) int { return v.Count }).(pulumi.IntOutput)
}

type GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicyRuleCase)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput) ToGetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput() GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput) ToGetSteeringPoliciesSteeringPolicyRuleCaseArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput) Index(i pulumi.IntInput) GetSteeringPoliciesSteeringPolicyRuleCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPoliciesSteeringPolicyRuleCase {
		return vs[0].([]GetSteeringPoliciesSteeringPolicyRuleCase)[vs[1].(int)]
	}).(GetSteeringPoliciesSteeringPolicyRuleCaseOutput)
}

type GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition string `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep bool `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value int `pulumi:"value"`
}

// GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataInput is an input type that accepts GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArgs and GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataInput` via:
//
//	GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArgs{...}
type GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput() GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput
	ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput
}

type GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArgs struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition pulumi.StringInput `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep pulumi.BoolInput `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArgs) ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput() GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArgs) ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput)
}

// GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayInput is an input type that accepts GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArray and GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayInput` via:
//
//	GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArray{ GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArgs{...} }
type GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput() GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput
	ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput
}

type GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArray []GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataInput

func (GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArray) ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput() GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArray) ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput)
}

type GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput) ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput() GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput) ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput {
	return o
}

// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
func (o GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput) AnswerCondition() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData) string { return v.AnswerCondition }).(pulumi.StringOutput)
}

// Keeps the answer only if the value is `true`.
func (o GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput) ShouldKeep() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData) bool { return v.ShouldKeep }).(pulumi.BoolOutput)
}

// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
func (o GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData) int { return v.Value }).(pulumi.IntOutput)
}

type GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput) ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput() GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput) ToGetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput) Index(i pulumi.IntInput) GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData {
		return vs[0].([]GetSteeringPoliciesSteeringPolicyRuleCaseAnswerData)[vs[1].(int)]
	}).(GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput)
}

type GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition string `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep bool `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value int `pulumi:"value"`
}

// GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataInput is an input type that accepts GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArgs and GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataInput` via:
//
//	GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArgs{...}
type GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput() GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput
	ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput
}

type GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArgs struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition pulumi.StringInput `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep pulumi.BoolInput `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArgs) ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput() GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArgs) ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput)
}

// GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayInput is an input type that accepts GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArray and GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput values.
// You can construct a concrete instance of `GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayInput` via:
//
//	GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArray{ GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArgs{...} }
type GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayInput interface {
	pulumi.Input

	ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput() GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput
	ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(context.Context) GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput
}

type GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArray []GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataInput

func (GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (i GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArray) ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput() GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return i.ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(context.Background())
}

func (i GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArray) ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput)
}

type GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput) ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput() GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput) ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput {
	return o
}

// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
func (o GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput) AnswerCondition() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData) string { return v.AnswerCondition }).(pulumi.StringOutput)
}

// Keeps the answer only if the value is `true`.
func (o GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput) ShouldKeep() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData) bool { return v.ShouldKeep }).(pulumi.BoolOutput)
}

// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
func (o GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData) int { return v.Value }).(pulumi.IntOutput)
}

type GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (o GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput) ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput() GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput) ToGetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(ctx context.Context) GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return o
}

func (o GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput) Index(i pulumi.IntInput) GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData {
		return vs[0].([]GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerData)[vs[1].(int)]
	}).(GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput)
}

type GetSteeringPolicyAnswer struct {
	// Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
	IsDisabled bool `pulumi:"isDisabled"`
	// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
	Name string `pulumi:"name"`
	// The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
	Pool string `pulumi:"pool"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rdata string `pulumi:"rdata"`
	// The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rtype string `pulumi:"rtype"`
}

// GetSteeringPolicyAnswerInput is an input type that accepts GetSteeringPolicyAnswerArgs and GetSteeringPolicyAnswerOutput values.
// You can construct a concrete instance of `GetSteeringPolicyAnswerInput` via:
//
//	GetSteeringPolicyAnswerArgs{...}
type GetSteeringPolicyAnswerInput interface {
	pulumi.Input

	ToGetSteeringPolicyAnswerOutput() GetSteeringPolicyAnswerOutput
	ToGetSteeringPolicyAnswerOutputWithContext(context.Context) GetSteeringPolicyAnswerOutput
}

type GetSteeringPolicyAnswerArgs struct {
	// Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
	IsDisabled pulumi.BoolInput `pulumi:"isDisabled"`
	// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
	Name pulumi.StringInput `pulumi:"name"`
	// The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
	Pool pulumi.StringInput `pulumi:"pool"`
	// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rdata pulumi.StringInput `pulumi:"rdata"`
	// The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
	Rtype pulumi.StringInput `pulumi:"rtype"`
}

func (GetSteeringPolicyAnswerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyAnswer)(nil)).Elem()
}

func (i GetSteeringPolicyAnswerArgs) ToGetSteeringPolicyAnswerOutput() GetSteeringPolicyAnswerOutput {
	return i.ToGetSteeringPolicyAnswerOutputWithContext(context.Background())
}

func (i GetSteeringPolicyAnswerArgs) ToGetSteeringPolicyAnswerOutputWithContext(ctx context.Context) GetSteeringPolicyAnswerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyAnswerOutput)
}

// GetSteeringPolicyAnswerArrayInput is an input type that accepts GetSteeringPolicyAnswerArray and GetSteeringPolicyAnswerArrayOutput values.
// You can construct a concrete instance of `GetSteeringPolicyAnswerArrayInput` via:
//
//	GetSteeringPolicyAnswerArray{ GetSteeringPolicyAnswerArgs{...} }
type GetSteeringPolicyAnswerArrayInput interface {
	pulumi.Input

	ToGetSteeringPolicyAnswerArrayOutput() GetSteeringPolicyAnswerArrayOutput
	ToGetSteeringPolicyAnswerArrayOutputWithContext(context.Context) GetSteeringPolicyAnswerArrayOutput
}

type GetSteeringPolicyAnswerArray []GetSteeringPolicyAnswerInput

func (GetSteeringPolicyAnswerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyAnswer)(nil)).Elem()
}

func (i GetSteeringPolicyAnswerArray) ToGetSteeringPolicyAnswerArrayOutput() GetSteeringPolicyAnswerArrayOutput {
	return i.ToGetSteeringPolicyAnswerArrayOutputWithContext(context.Background())
}

func (i GetSteeringPolicyAnswerArray) ToGetSteeringPolicyAnswerArrayOutputWithContext(ctx context.Context) GetSteeringPolicyAnswerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyAnswerArrayOutput)
}

type GetSteeringPolicyAnswerOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyAnswerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyAnswer)(nil)).Elem()
}

func (o GetSteeringPolicyAnswerOutput) ToGetSteeringPolicyAnswerOutput() GetSteeringPolicyAnswerOutput {
	return o
}

func (o GetSteeringPolicyAnswerOutput) ToGetSteeringPolicyAnswerOutputWithContext(ctx context.Context) GetSteeringPolicyAnswerOutput {
	return o
}

// Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer's `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
func (o GetSteeringPolicyAnswerOutput) IsDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSteeringPolicyAnswer) bool { return v.IsDisabled }).(pulumi.BoolOutput)
}

// A user-friendly name for the answer, unique within the steering policy. An answer's `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
func (o GetSteeringPolicyAnswerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAnswer) string { return v.Name }).(pulumi.StringOutput)
}

// The freeform name of a group of one or more records in which this record is included, such as "LAX data center". An answer's `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
func (o GetSteeringPolicyAnswerOutput) Pool() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAnswer) string { return v.Pool }).(pulumi.StringOutput)
}

// The record's data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
func (o GetSteeringPolicyAnswerOutput) Rdata() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAnswer) string { return v.Rdata }).(pulumi.StringOutput)
}

// The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
func (o GetSteeringPolicyAnswerOutput) Rtype() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAnswer) string { return v.Rtype }).(pulumi.StringOutput)
}

type GetSteeringPolicyAnswerArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyAnswerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyAnswer)(nil)).Elem()
}

func (o GetSteeringPolicyAnswerArrayOutput) ToGetSteeringPolicyAnswerArrayOutput() GetSteeringPolicyAnswerArrayOutput {
	return o
}

func (o GetSteeringPolicyAnswerArrayOutput) ToGetSteeringPolicyAnswerArrayOutputWithContext(ctx context.Context) GetSteeringPolicyAnswerArrayOutput {
	return o
}

func (o GetSteeringPolicyAnswerArrayOutput) Index(i pulumi.IntInput) GetSteeringPolicyAnswerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPolicyAnswer {
		return vs[0].([]GetSteeringPolicyAnswer)[vs[1].(int)]
	}).(GetSteeringPolicyAnswerOutput)
}

type GetSteeringPolicyAttachmentsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetSteeringPolicyAttachmentsFilterInput is an input type that accepts GetSteeringPolicyAttachmentsFilterArgs and GetSteeringPolicyAttachmentsFilterOutput values.
// You can construct a concrete instance of `GetSteeringPolicyAttachmentsFilterInput` via:
//
//	GetSteeringPolicyAttachmentsFilterArgs{...}
type GetSteeringPolicyAttachmentsFilterInput interface {
	pulumi.Input

	ToGetSteeringPolicyAttachmentsFilterOutput() GetSteeringPolicyAttachmentsFilterOutput
	ToGetSteeringPolicyAttachmentsFilterOutputWithContext(context.Context) GetSteeringPolicyAttachmentsFilterOutput
}

type GetSteeringPolicyAttachmentsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSteeringPolicyAttachmentsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyAttachmentsFilter)(nil)).Elem()
}

func (i GetSteeringPolicyAttachmentsFilterArgs) ToGetSteeringPolicyAttachmentsFilterOutput() GetSteeringPolicyAttachmentsFilterOutput {
	return i.ToGetSteeringPolicyAttachmentsFilterOutputWithContext(context.Background())
}

func (i GetSteeringPolicyAttachmentsFilterArgs) ToGetSteeringPolicyAttachmentsFilterOutputWithContext(ctx context.Context) GetSteeringPolicyAttachmentsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyAttachmentsFilterOutput)
}

// GetSteeringPolicyAttachmentsFilterArrayInput is an input type that accepts GetSteeringPolicyAttachmentsFilterArray and GetSteeringPolicyAttachmentsFilterArrayOutput values.
// You can construct a concrete instance of `GetSteeringPolicyAttachmentsFilterArrayInput` via:
//
//	GetSteeringPolicyAttachmentsFilterArray{ GetSteeringPolicyAttachmentsFilterArgs{...} }
type GetSteeringPolicyAttachmentsFilterArrayInput interface {
	pulumi.Input

	ToGetSteeringPolicyAttachmentsFilterArrayOutput() GetSteeringPolicyAttachmentsFilterArrayOutput
	ToGetSteeringPolicyAttachmentsFilterArrayOutputWithContext(context.Context) GetSteeringPolicyAttachmentsFilterArrayOutput
}

type GetSteeringPolicyAttachmentsFilterArray []GetSteeringPolicyAttachmentsFilterInput

func (GetSteeringPolicyAttachmentsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyAttachmentsFilter)(nil)).Elem()
}

func (i GetSteeringPolicyAttachmentsFilterArray) ToGetSteeringPolicyAttachmentsFilterArrayOutput() GetSteeringPolicyAttachmentsFilterArrayOutput {
	return i.ToGetSteeringPolicyAttachmentsFilterArrayOutputWithContext(context.Background())
}

func (i GetSteeringPolicyAttachmentsFilterArray) ToGetSteeringPolicyAttachmentsFilterArrayOutputWithContext(ctx context.Context) GetSteeringPolicyAttachmentsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyAttachmentsFilterArrayOutput)
}

type GetSteeringPolicyAttachmentsFilterOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyAttachmentsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyAttachmentsFilter)(nil)).Elem()
}

func (o GetSteeringPolicyAttachmentsFilterOutput) ToGetSteeringPolicyAttachmentsFilterOutput() GetSteeringPolicyAttachmentsFilterOutput {
	return o
}

func (o GetSteeringPolicyAttachmentsFilterOutput) ToGetSteeringPolicyAttachmentsFilterOutputWithContext(ctx context.Context) GetSteeringPolicyAttachmentsFilterOutput {
	return o
}

func (o GetSteeringPolicyAttachmentsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSteeringPolicyAttachmentsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetSteeringPolicyAttachmentsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSteeringPolicyAttachmentsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyAttachmentsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyAttachmentsFilter)(nil)).Elem()
}

func (o GetSteeringPolicyAttachmentsFilterArrayOutput) ToGetSteeringPolicyAttachmentsFilterArrayOutput() GetSteeringPolicyAttachmentsFilterArrayOutput {
	return o
}

func (o GetSteeringPolicyAttachmentsFilterArrayOutput) ToGetSteeringPolicyAttachmentsFilterArrayOutputWithContext(ctx context.Context) GetSteeringPolicyAttachmentsFilterArrayOutput {
	return o
}

func (o GetSteeringPolicyAttachmentsFilterArrayOutput) Index(i pulumi.IntInput) GetSteeringPolicyAttachmentsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPolicyAttachmentsFilter {
		return vs[0].([]GetSteeringPolicyAttachmentsFilter)[vs[1].(int)]
	}).(GetSteeringPolicyAttachmentsFilterOutput)
}

type GetSteeringPolicyAttachmentsSteeringPolicyAttachment struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// The displayName of a resource.
	DisplayName string `pulumi:"displayName"`
	// The attached domain within the attached zone.
	DomainName string `pulumi:"domainName"`
	// The OCID of a resource.
	Id string `pulumi:"id"`
	// The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
	Rtypes []string `pulumi:"rtypes"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The state of a resource.
	State string `pulumi:"state"`
	// Search by steering policy OCID. Will match any resource whose steering policy ID matches the provided value.
	SteeringPolicyId string `pulumi:"steeringPolicyId"`
	// The date and time the resource was created, expressed in RFC 3339 timestamp format.
	TimeCreated string `pulumi:"timeCreated"`
	// Search by zone OCID. Will match any resource whose zone ID matches the provided value.
	ZoneId string `pulumi:"zoneId"`
}

// GetSteeringPolicyAttachmentsSteeringPolicyAttachmentInput is an input type that accepts GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArgs and GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput values.
// You can construct a concrete instance of `GetSteeringPolicyAttachmentsSteeringPolicyAttachmentInput` via:
//
//	GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArgs{...}
type GetSteeringPolicyAttachmentsSteeringPolicyAttachmentInput interface {
	pulumi.Input

	ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput() GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput
	ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutputWithContext(context.Context) GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput
}

type GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArgs struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The displayName of a resource.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The attached domain within the attached zone.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The OCID of a resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
	Rtypes pulumi.StringArrayInput `pulumi:"rtypes"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringInput `pulumi:"self"`
	// The state of a resource.
	State pulumi.StringInput `pulumi:"state"`
	// Search by steering policy OCID. Will match any resource whose steering policy ID matches the provided value.
	SteeringPolicyId pulumi.StringInput `pulumi:"steeringPolicyId"`
	// The date and time the resource was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Search by zone OCID. Will match any resource whose zone ID matches the provided value.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyAttachmentsSteeringPolicyAttachment)(nil)).Elem()
}

func (i GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArgs) ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput() GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput {
	return i.ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutputWithContext(context.Background())
}

func (i GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArgs) ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutputWithContext(ctx context.Context) GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput)
}

// GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayInput is an input type that accepts GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArray and GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput values.
// You can construct a concrete instance of `GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayInput` via:
//
//	GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArray{ GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArgs{...} }
type GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayInput interface {
	pulumi.Input

	ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput() GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput
	ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutputWithContext(context.Context) GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput
}

type GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArray []GetSteeringPolicyAttachmentsSteeringPolicyAttachmentInput

func (GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyAttachmentsSteeringPolicyAttachment)(nil)).Elem()
}

func (i GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArray) ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput() GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput {
	return i.ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutputWithContext(context.Background())
}

func (i GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArray) ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutputWithContext(ctx context.Context) GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput)
}

type GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyAttachmentsSteeringPolicyAttachment)(nil)).Elem()
}

func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput() GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput {
	return o
}

func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutputWithContext(ctx context.Context) GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput {
	return o
}

// The OCID of the compartment the resource belongs to.
func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsSteeringPolicyAttachment) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The displayName of a resource.
func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsSteeringPolicyAttachment) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The attached domain within the attached zone.
func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsSteeringPolicyAttachment) string { return v.DomainName }).(pulumi.StringOutput)
}

// The OCID of a resource.
func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsSteeringPolicyAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) Rtypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsSteeringPolicyAttachment) []string { return v.Rtypes }).(pulumi.StringArrayOutput)
}

// The canonical absolute URL of the resource.
func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsSteeringPolicyAttachment) string { return v.Self }).(pulumi.StringOutput)
}

// The state of a resource.
func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsSteeringPolicyAttachment) string { return v.State }).(pulumi.StringOutput)
}

// Search by steering policy OCID. Will match any resource whose steering policy ID matches the provided value.
func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) SteeringPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsSteeringPolicyAttachment) string { return v.SteeringPolicyId }).(pulumi.StringOutput)
}

// The date and time the resource was created, expressed in RFC 3339 timestamp format.
func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsSteeringPolicyAttachment) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Search by zone OCID. Will match any resource whose zone ID matches the provided value.
func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyAttachmentsSteeringPolicyAttachment) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyAttachmentsSteeringPolicyAttachment)(nil)).Elem()
}

func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput) ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput() GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput {
	return o
}

func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput) ToGetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutputWithContext(ctx context.Context) GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput {
	return o
}

func (o GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput) Index(i pulumi.IntInput) GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPolicyAttachmentsSteeringPolicyAttachment {
		return vs[0].([]GetSteeringPolicyAttachmentsSteeringPolicyAttachment)[vs[1].(int)]
	}).(GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput)
}

type GetSteeringPolicyRule struct {
	// An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
	Cases []GetSteeringPolicyRuleCase `pulumi:"cases"`
	// Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
	DefaultAnswerDatas []GetSteeringPolicyRuleDefaultAnswerData `pulumi:"defaultAnswerDatas"`
	// Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
	DefaultCount int `pulumi:"defaultCount"`
	// A user-defined description of the rule's purpose or behavior.
	Description string `pulumi:"description"`
	// The type of a rule determines its sorting/filtering behavior.
	// * `FILTER` - Filters the list of answers based on their defined boolean data. Answers remain only if their `shouldKeep` value is `true`.
	// * `HEALTH` - Removes answers from the list if their `rdata` matches a target in the health check monitor referenced by the steering policy and the target is reported down.
	// * `WEIGHTED` - Uses a number between 0 and 255 to determine how often an answer will be served in relation to other answers. Anwers with a higher weight will be served more frequently.
	// * `PRIORITY` - Uses a defined rank value of answers to determine which answer to serve, moving those with the lowest values to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	// * `LIMIT` - Filters answers that are too far down the list. Parameter `defaultCount` specifies how many answers to keep. **Example:** If `defaultCount` has a value of `2` and there are five answers left, when the `LIMIT` rule is processed, only the first two answers will remain in the list.
	RuleType string `pulumi:"ruleType"`
}

// GetSteeringPolicyRuleInput is an input type that accepts GetSteeringPolicyRuleArgs and GetSteeringPolicyRuleOutput values.
// You can construct a concrete instance of `GetSteeringPolicyRuleInput` via:
//
//	GetSteeringPolicyRuleArgs{...}
type GetSteeringPolicyRuleInput interface {
	pulumi.Input

	ToGetSteeringPolicyRuleOutput() GetSteeringPolicyRuleOutput
	ToGetSteeringPolicyRuleOutputWithContext(context.Context) GetSteeringPolicyRuleOutput
}

type GetSteeringPolicyRuleArgs struct {
	// An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
	Cases GetSteeringPolicyRuleCaseArrayInput `pulumi:"cases"`
	// Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
	DefaultAnswerDatas GetSteeringPolicyRuleDefaultAnswerDataArrayInput `pulumi:"defaultAnswerDatas"`
	// Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
	DefaultCount pulumi.IntInput `pulumi:"defaultCount"`
	// A user-defined description of the rule's purpose or behavior.
	Description pulumi.StringInput `pulumi:"description"`
	// The type of a rule determines its sorting/filtering behavior.
	// * `FILTER` - Filters the list of answers based on their defined boolean data. Answers remain only if their `shouldKeep` value is `true`.
	// * `HEALTH` - Removes answers from the list if their `rdata` matches a target in the health check monitor referenced by the steering policy and the target is reported down.
	// * `WEIGHTED` - Uses a number between 0 and 255 to determine how often an answer will be served in relation to other answers. Anwers with a higher weight will be served more frequently.
	// * `PRIORITY` - Uses a defined rank value of answers to determine which answer to serve, moving those with the lowest values to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	// * `LIMIT` - Filters answers that are too far down the list. Parameter `defaultCount` specifies how many answers to keep. **Example:** If `defaultCount` has a value of `2` and there are five answers left, when the `LIMIT` rule is processed, only the first two answers will remain in the list.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (GetSteeringPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyRule)(nil)).Elem()
}

func (i GetSteeringPolicyRuleArgs) ToGetSteeringPolicyRuleOutput() GetSteeringPolicyRuleOutput {
	return i.ToGetSteeringPolicyRuleOutputWithContext(context.Background())
}

func (i GetSteeringPolicyRuleArgs) ToGetSteeringPolicyRuleOutputWithContext(ctx context.Context) GetSteeringPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyRuleOutput)
}

// GetSteeringPolicyRuleArrayInput is an input type that accepts GetSteeringPolicyRuleArray and GetSteeringPolicyRuleArrayOutput values.
// You can construct a concrete instance of `GetSteeringPolicyRuleArrayInput` via:
//
//	GetSteeringPolicyRuleArray{ GetSteeringPolicyRuleArgs{...} }
type GetSteeringPolicyRuleArrayInput interface {
	pulumi.Input

	ToGetSteeringPolicyRuleArrayOutput() GetSteeringPolicyRuleArrayOutput
	ToGetSteeringPolicyRuleArrayOutputWithContext(context.Context) GetSteeringPolicyRuleArrayOutput
}

type GetSteeringPolicyRuleArray []GetSteeringPolicyRuleInput

func (GetSteeringPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyRule)(nil)).Elem()
}

func (i GetSteeringPolicyRuleArray) ToGetSteeringPolicyRuleArrayOutput() GetSteeringPolicyRuleArrayOutput {
	return i.ToGetSteeringPolicyRuleArrayOutputWithContext(context.Background())
}

func (i GetSteeringPolicyRuleArray) ToGetSteeringPolicyRuleArrayOutputWithContext(ctx context.Context) GetSteeringPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyRuleArrayOutput)
}

type GetSteeringPolicyRuleOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyRule)(nil)).Elem()
}

func (o GetSteeringPolicyRuleOutput) ToGetSteeringPolicyRuleOutput() GetSteeringPolicyRuleOutput {
	return o
}

func (o GetSteeringPolicyRuleOutput) ToGetSteeringPolicyRuleOutputWithContext(ctx context.Context) GetSteeringPolicyRuleOutput {
	return o
}

// An array of `caseConditions`. A rule may optionally include a sequence of cases defining alternate configurations for how it should behave during processing for any given DNS query. When a rule has no sequence of `cases`, it is always evaluated with the same configuration during processing. When a rule has an empty sequence of `cases`, it is always ignored during processing. When a rule has a non-empty sequence of `cases`, its behavior during processing is configured by the first matching `case` in the sequence. When a rule has no matching cases the rule is ignored. A rule case with no `caseCondition` always matches. A rule case with a `caseCondition` matches only when that expression evaluates to true for the given query.
func (o GetSteeringPolicyRuleOutput) Cases() GetSteeringPolicyRuleCaseArrayOutput {
	return o.ApplyT(func(v GetSteeringPolicyRule) []GetSteeringPolicyRuleCase { return v.Cases }).(GetSteeringPolicyRuleCaseArrayOutput)
}

// Defines a default set of answer conditions and values that are applied to an answer when `cases` is not defined for the rule, or a matching case does not have any matching `answerCondition`s in its `answerData`. `defaultAnswerData` is not applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed.
func (o GetSteeringPolicyRuleOutput) DefaultAnswerDatas() GetSteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return o.ApplyT(func(v GetSteeringPolicyRule) []GetSteeringPolicyRuleDefaultAnswerData { return v.DefaultAnswerDatas }).(GetSteeringPolicyRuleDefaultAnswerDataArrayOutput)
}

// Defines a default count if `cases` is not defined for the rule or a matching case does not define `count`. `defaultCount` is **not** applied if `cases` is defined and there are no matching cases. In this scenario, the next rule will be processed. If no rules remain to be processed, the answer will be chosen from the remaining list of answers.
func (o GetSteeringPolicyRuleOutput) DefaultCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSteeringPolicyRule) int { return v.DefaultCount }).(pulumi.IntOutput)
}

// A user-defined description of the rule's purpose or behavior.
func (o GetSteeringPolicyRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyRule) string { return v.Description }).(pulumi.StringOutput)
}

// The type of a rule determines its sorting/filtering behavior.
// * `FILTER` - Filters the list of answers based on their defined boolean data. Answers remain only if their `shouldKeep` value is `true`.
// * `HEALTH` - Removes answers from the list if their `rdata` matches a target in the health check monitor referenced by the steering policy and the target is reported down.
// * `WEIGHTED` - Uses a number between 0 and 255 to determine how often an answer will be served in relation to other answers. Anwers with a higher weight will be served more frequently.
// * `PRIORITY` - Uses a defined rank value of answers to determine which answer to serve, moving those with the lowest values to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
// * `LIMIT` - Filters answers that are too far down the list. Parameter `defaultCount` specifies how many answers to keep. **Example:** If `defaultCount` has a value of `2` and there are five answers left, when the `LIMIT` rule is processed, only the first two answers will remain in the list.
func (o GetSteeringPolicyRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type GetSteeringPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyRule)(nil)).Elem()
}

func (o GetSteeringPolicyRuleArrayOutput) ToGetSteeringPolicyRuleArrayOutput() GetSteeringPolicyRuleArrayOutput {
	return o
}

func (o GetSteeringPolicyRuleArrayOutput) ToGetSteeringPolicyRuleArrayOutputWithContext(ctx context.Context) GetSteeringPolicyRuleArrayOutput {
	return o
}

func (o GetSteeringPolicyRuleArrayOutput) Index(i pulumi.IntInput) GetSteeringPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPolicyRule {
		return vs[0].([]GetSteeringPolicyRule)[vs[1].(int)]
	}).(GetSteeringPolicyRuleOutput)
}

type GetSteeringPolicyRuleCase struct {
	// An array of `SteeringPolicyPriorityAnswerData` objects.
	AnswerDatas []GetSteeringPolicyRuleCaseAnswerData `pulumi:"answerDatas"`
	// An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.address in ('192.0.2.0/24')` to define a case that matches queries from that office.
	CaseCondition string `pulumi:"caseCondition"`
	// The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
	Count int `pulumi:"count"`
}

// GetSteeringPolicyRuleCaseInput is an input type that accepts GetSteeringPolicyRuleCaseArgs and GetSteeringPolicyRuleCaseOutput values.
// You can construct a concrete instance of `GetSteeringPolicyRuleCaseInput` via:
//
//	GetSteeringPolicyRuleCaseArgs{...}
type GetSteeringPolicyRuleCaseInput interface {
	pulumi.Input

	ToGetSteeringPolicyRuleCaseOutput() GetSteeringPolicyRuleCaseOutput
	ToGetSteeringPolicyRuleCaseOutputWithContext(context.Context) GetSteeringPolicyRuleCaseOutput
}

type GetSteeringPolicyRuleCaseArgs struct {
	// An array of `SteeringPolicyPriorityAnswerData` objects.
	AnswerDatas GetSteeringPolicyRuleCaseAnswerDataArrayInput `pulumi:"answerDatas"`
	// An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.address in ('192.0.2.0/24')` to define a case that matches queries from that office.
	CaseCondition pulumi.StringInput `pulumi:"caseCondition"`
	// The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
	Count pulumi.IntInput `pulumi:"count"`
}

func (GetSteeringPolicyRuleCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyRuleCase)(nil)).Elem()
}

func (i GetSteeringPolicyRuleCaseArgs) ToGetSteeringPolicyRuleCaseOutput() GetSteeringPolicyRuleCaseOutput {
	return i.ToGetSteeringPolicyRuleCaseOutputWithContext(context.Background())
}

func (i GetSteeringPolicyRuleCaseArgs) ToGetSteeringPolicyRuleCaseOutputWithContext(ctx context.Context) GetSteeringPolicyRuleCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyRuleCaseOutput)
}

// GetSteeringPolicyRuleCaseArrayInput is an input type that accepts GetSteeringPolicyRuleCaseArray and GetSteeringPolicyRuleCaseArrayOutput values.
// You can construct a concrete instance of `GetSteeringPolicyRuleCaseArrayInput` via:
//
//	GetSteeringPolicyRuleCaseArray{ GetSteeringPolicyRuleCaseArgs{...} }
type GetSteeringPolicyRuleCaseArrayInput interface {
	pulumi.Input

	ToGetSteeringPolicyRuleCaseArrayOutput() GetSteeringPolicyRuleCaseArrayOutput
	ToGetSteeringPolicyRuleCaseArrayOutputWithContext(context.Context) GetSteeringPolicyRuleCaseArrayOutput
}

type GetSteeringPolicyRuleCaseArray []GetSteeringPolicyRuleCaseInput

func (GetSteeringPolicyRuleCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyRuleCase)(nil)).Elem()
}

func (i GetSteeringPolicyRuleCaseArray) ToGetSteeringPolicyRuleCaseArrayOutput() GetSteeringPolicyRuleCaseArrayOutput {
	return i.ToGetSteeringPolicyRuleCaseArrayOutputWithContext(context.Background())
}

func (i GetSteeringPolicyRuleCaseArray) ToGetSteeringPolicyRuleCaseArrayOutputWithContext(ctx context.Context) GetSteeringPolicyRuleCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyRuleCaseArrayOutput)
}

type GetSteeringPolicyRuleCaseOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyRuleCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyRuleCase)(nil)).Elem()
}

func (o GetSteeringPolicyRuleCaseOutput) ToGetSteeringPolicyRuleCaseOutput() GetSteeringPolicyRuleCaseOutput {
	return o
}

func (o GetSteeringPolicyRuleCaseOutput) ToGetSteeringPolicyRuleCaseOutputWithContext(ctx context.Context) GetSteeringPolicyRuleCaseOutput {
	return o
}

// An array of `SteeringPolicyPriorityAnswerData` objects.
func (o GetSteeringPolicyRuleCaseOutput) AnswerDatas() GetSteeringPolicyRuleCaseAnswerDataArrayOutput {
	return o.ApplyT(func(v GetSteeringPolicyRuleCase) []GetSteeringPolicyRuleCaseAnswerData { return v.AnswerDatas }).(GetSteeringPolicyRuleCaseAnswerDataArrayOutput)
}

// An expression that uses conditions at the time of a DNS query to indicate whether a case matches. Conditions may include the geographical location, IP subnet, or ASN the DNS query originated. **Example:** If you have an office that uses the subnet `192.0.2.0/24` you could use a `caseCondition` expression `query.client.address in ('192.0.2.0/24')` to define a case that matches queries from that office.
func (o GetSteeringPolicyRuleCaseOutput) CaseCondition() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyRuleCase) string { return v.CaseCondition }).(pulumi.StringOutput)
}

// The number of answers allowed to remain after the limit rule has been processed, keeping only the first of the remaining answers in the list. Example: If the `count` property is set to `2` and four answers remain before the limit rule is processed, only the first two answers in the list will remain after the limit rule has been processed.
func (o GetSteeringPolicyRuleCaseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetSteeringPolicyRuleCase) int { return v.Count }).(pulumi.IntOutput)
}

type GetSteeringPolicyRuleCaseArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyRuleCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyRuleCase)(nil)).Elem()
}

func (o GetSteeringPolicyRuleCaseArrayOutput) ToGetSteeringPolicyRuleCaseArrayOutput() GetSteeringPolicyRuleCaseArrayOutput {
	return o
}

func (o GetSteeringPolicyRuleCaseArrayOutput) ToGetSteeringPolicyRuleCaseArrayOutputWithContext(ctx context.Context) GetSteeringPolicyRuleCaseArrayOutput {
	return o
}

func (o GetSteeringPolicyRuleCaseArrayOutput) Index(i pulumi.IntInput) GetSteeringPolicyRuleCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPolicyRuleCase {
		return vs[0].([]GetSteeringPolicyRuleCase)[vs[1].(int)]
	}).(GetSteeringPolicyRuleCaseOutput)
}

type GetSteeringPolicyRuleCaseAnswerData struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition string `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep bool `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value int `pulumi:"value"`
}

// GetSteeringPolicyRuleCaseAnswerDataInput is an input type that accepts GetSteeringPolicyRuleCaseAnswerDataArgs and GetSteeringPolicyRuleCaseAnswerDataOutput values.
// You can construct a concrete instance of `GetSteeringPolicyRuleCaseAnswerDataInput` via:
//
//	GetSteeringPolicyRuleCaseAnswerDataArgs{...}
type GetSteeringPolicyRuleCaseAnswerDataInput interface {
	pulumi.Input

	ToGetSteeringPolicyRuleCaseAnswerDataOutput() GetSteeringPolicyRuleCaseAnswerDataOutput
	ToGetSteeringPolicyRuleCaseAnswerDataOutputWithContext(context.Context) GetSteeringPolicyRuleCaseAnswerDataOutput
}

type GetSteeringPolicyRuleCaseAnswerDataArgs struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition pulumi.StringInput `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep pulumi.BoolInput `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetSteeringPolicyRuleCaseAnswerDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (i GetSteeringPolicyRuleCaseAnswerDataArgs) ToGetSteeringPolicyRuleCaseAnswerDataOutput() GetSteeringPolicyRuleCaseAnswerDataOutput {
	return i.ToGetSteeringPolicyRuleCaseAnswerDataOutputWithContext(context.Background())
}

func (i GetSteeringPolicyRuleCaseAnswerDataArgs) ToGetSteeringPolicyRuleCaseAnswerDataOutputWithContext(ctx context.Context) GetSteeringPolicyRuleCaseAnswerDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyRuleCaseAnswerDataOutput)
}

// GetSteeringPolicyRuleCaseAnswerDataArrayInput is an input type that accepts GetSteeringPolicyRuleCaseAnswerDataArray and GetSteeringPolicyRuleCaseAnswerDataArrayOutput values.
// You can construct a concrete instance of `GetSteeringPolicyRuleCaseAnswerDataArrayInput` via:
//
//	GetSteeringPolicyRuleCaseAnswerDataArray{ GetSteeringPolicyRuleCaseAnswerDataArgs{...} }
type GetSteeringPolicyRuleCaseAnswerDataArrayInput interface {
	pulumi.Input

	ToGetSteeringPolicyRuleCaseAnswerDataArrayOutput() GetSteeringPolicyRuleCaseAnswerDataArrayOutput
	ToGetSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(context.Context) GetSteeringPolicyRuleCaseAnswerDataArrayOutput
}

type GetSteeringPolicyRuleCaseAnswerDataArray []GetSteeringPolicyRuleCaseAnswerDataInput

func (GetSteeringPolicyRuleCaseAnswerDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (i GetSteeringPolicyRuleCaseAnswerDataArray) ToGetSteeringPolicyRuleCaseAnswerDataArrayOutput() GetSteeringPolicyRuleCaseAnswerDataArrayOutput {
	return i.ToGetSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(context.Background())
}

func (i GetSteeringPolicyRuleCaseAnswerDataArray) ToGetSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(ctx context.Context) GetSteeringPolicyRuleCaseAnswerDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyRuleCaseAnswerDataArrayOutput)
}

type GetSteeringPolicyRuleCaseAnswerDataOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyRuleCaseAnswerDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (o GetSteeringPolicyRuleCaseAnswerDataOutput) ToGetSteeringPolicyRuleCaseAnswerDataOutput() GetSteeringPolicyRuleCaseAnswerDataOutput {
	return o
}

func (o GetSteeringPolicyRuleCaseAnswerDataOutput) ToGetSteeringPolicyRuleCaseAnswerDataOutputWithContext(ctx context.Context) GetSteeringPolicyRuleCaseAnswerDataOutput {
	return o
}

// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
func (o GetSteeringPolicyRuleCaseAnswerDataOutput) AnswerCondition() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyRuleCaseAnswerData) string { return v.AnswerCondition }).(pulumi.StringOutput)
}

// Keeps the answer only if the value is `true`.
func (o GetSteeringPolicyRuleCaseAnswerDataOutput) ShouldKeep() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSteeringPolicyRuleCaseAnswerData) bool { return v.ShouldKeep }).(pulumi.BoolOutput)
}

// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
func (o GetSteeringPolicyRuleCaseAnswerDataOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetSteeringPolicyRuleCaseAnswerData) int { return v.Value }).(pulumi.IntOutput)
}

type GetSteeringPolicyRuleCaseAnswerDataArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyRuleCaseAnswerDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyRuleCaseAnswerData)(nil)).Elem()
}

func (o GetSteeringPolicyRuleCaseAnswerDataArrayOutput) ToGetSteeringPolicyRuleCaseAnswerDataArrayOutput() GetSteeringPolicyRuleCaseAnswerDataArrayOutput {
	return o
}

func (o GetSteeringPolicyRuleCaseAnswerDataArrayOutput) ToGetSteeringPolicyRuleCaseAnswerDataArrayOutputWithContext(ctx context.Context) GetSteeringPolicyRuleCaseAnswerDataArrayOutput {
	return o
}

func (o GetSteeringPolicyRuleCaseAnswerDataArrayOutput) Index(i pulumi.IntInput) GetSteeringPolicyRuleCaseAnswerDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPolicyRuleCaseAnswerData {
		return vs[0].([]GetSteeringPolicyRuleCaseAnswerData)[vs[1].(int)]
	}).(GetSteeringPolicyRuleCaseAnswerDataOutput)
}

type GetSteeringPolicyRuleDefaultAnswerData struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition string `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep bool `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value int `pulumi:"value"`
}

// GetSteeringPolicyRuleDefaultAnswerDataInput is an input type that accepts GetSteeringPolicyRuleDefaultAnswerDataArgs and GetSteeringPolicyRuleDefaultAnswerDataOutput values.
// You can construct a concrete instance of `GetSteeringPolicyRuleDefaultAnswerDataInput` via:
//
//	GetSteeringPolicyRuleDefaultAnswerDataArgs{...}
type GetSteeringPolicyRuleDefaultAnswerDataInput interface {
	pulumi.Input

	ToGetSteeringPolicyRuleDefaultAnswerDataOutput() GetSteeringPolicyRuleDefaultAnswerDataOutput
	ToGetSteeringPolicyRuleDefaultAnswerDataOutputWithContext(context.Context) GetSteeringPolicyRuleDefaultAnswerDataOutput
}

type GetSteeringPolicyRuleDefaultAnswerDataArgs struct {
	// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
	AnswerCondition pulumi.StringInput `pulumi:"answerCondition"`
	// Keeps the answer only if the value is `true`.
	ShouldKeep pulumi.BoolInput `pulumi:"shouldKeep"`
	// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetSteeringPolicyRuleDefaultAnswerDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (i GetSteeringPolicyRuleDefaultAnswerDataArgs) ToGetSteeringPolicyRuleDefaultAnswerDataOutput() GetSteeringPolicyRuleDefaultAnswerDataOutput {
	return i.ToGetSteeringPolicyRuleDefaultAnswerDataOutputWithContext(context.Background())
}

func (i GetSteeringPolicyRuleDefaultAnswerDataArgs) ToGetSteeringPolicyRuleDefaultAnswerDataOutputWithContext(ctx context.Context) GetSteeringPolicyRuleDefaultAnswerDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyRuleDefaultAnswerDataOutput)
}

// GetSteeringPolicyRuleDefaultAnswerDataArrayInput is an input type that accepts GetSteeringPolicyRuleDefaultAnswerDataArray and GetSteeringPolicyRuleDefaultAnswerDataArrayOutput values.
// You can construct a concrete instance of `GetSteeringPolicyRuleDefaultAnswerDataArrayInput` via:
//
//	GetSteeringPolicyRuleDefaultAnswerDataArray{ GetSteeringPolicyRuleDefaultAnswerDataArgs{...} }
type GetSteeringPolicyRuleDefaultAnswerDataArrayInput interface {
	pulumi.Input

	ToGetSteeringPolicyRuleDefaultAnswerDataArrayOutput() GetSteeringPolicyRuleDefaultAnswerDataArrayOutput
	ToGetSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(context.Context) GetSteeringPolicyRuleDefaultAnswerDataArrayOutput
}

type GetSteeringPolicyRuleDefaultAnswerDataArray []GetSteeringPolicyRuleDefaultAnswerDataInput

func (GetSteeringPolicyRuleDefaultAnswerDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (i GetSteeringPolicyRuleDefaultAnswerDataArray) ToGetSteeringPolicyRuleDefaultAnswerDataArrayOutput() GetSteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return i.ToGetSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(context.Background())
}

func (i GetSteeringPolicyRuleDefaultAnswerDataArray) ToGetSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(ctx context.Context) GetSteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSteeringPolicyRuleDefaultAnswerDataArrayOutput)
}

type GetSteeringPolicyRuleDefaultAnswerDataOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyRuleDefaultAnswerDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (o GetSteeringPolicyRuleDefaultAnswerDataOutput) ToGetSteeringPolicyRuleDefaultAnswerDataOutput() GetSteeringPolicyRuleDefaultAnswerDataOutput {
	return o
}

func (o GetSteeringPolicyRuleDefaultAnswerDataOutput) ToGetSteeringPolicyRuleDefaultAnswerDataOutputWithContext(ctx context.Context) GetSteeringPolicyRuleDefaultAnswerDataOutput {
	return o
}

// An expression that is used to select a set of answers that match a condition. For example, answers with matching pool properties.
func (o GetSteeringPolicyRuleDefaultAnswerDataOutput) AnswerCondition() pulumi.StringOutput {
	return o.ApplyT(func(v GetSteeringPolicyRuleDefaultAnswerData) string { return v.AnswerCondition }).(pulumi.StringOutput)
}

// Keeps the answer only if the value is `true`.
func (o GetSteeringPolicyRuleDefaultAnswerDataOutput) ShouldKeep() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSteeringPolicyRuleDefaultAnswerData) bool { return v.ShouldKeep }).(pulumi.BoolOutput)
}

// The rank assigned to the set of answers that match the expression in `answerCondition`. Answers with the lowest values move to the beginning of the list without changing the relative order of those with the same value. Answers can be given a value between `0` and `255`.
func (o GetSteeringPolicyRuleDefaultAnswerDataOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetSteeringPolicyRuleDefaultAnswerData) int { return v.Value }).(pulumi.IntOutput)
}

type GetSteeringPolicyRuleDefaultAnswerDataArrayOutput struct{ *pulumi.OutputState }

func (GetSteeringPolicyRuleDefaultAnswerDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSteeringPolicyRuleDefaultAnswerData)(nil)).Elem()
}

func (o GetSteeringPolicyRuleDefaultAnswerDataArrayOutput) ToGetSteeringPolicyRuleDefaultAnswerDataArrayOutput() GetSteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return o
}

func (o GetSteeringPolicyRuleDefaultAnswerDataArrayOutput) ToGetSteeringPolicyRuleDefaultAnswerDataArrayOutputWithContext(ctx context.Context) GetSteeringPolicyRuleDefaultAnswerDataArrayOutput {
	return o
}

func (o GetSteeringPolicyRuleDefaultAnswerDataArrayOutput) Index(i pulumi.IntInput) GetSteeringPolicyRuleDefaultAnswerDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSteeringPolicyRuleDefaultAnswerData {
		return vs[0].([]GetSteeringPolicyRuleDefaultAnswerData)[vs[1].(int)]
	}).(GetSteeringPolicyRuleDefaultAnswerDataOutput)
}

type GetTsigKeysFilter struct {
	// The name of a resource.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetTsigKeysFilterInput is an input type that accepts GetTsigKeysFilterArgs and GetTsigKeysFilterOutput values.
// You can construct a concrete instance of `GetTsigKeysFilterInput` via:
//
//	GetTsigKeysFilterArgs{...}
type GetTsigKeysFilterInput interface {
	pulumi.Input

	ToGetTsigKeysFilterOutput() GetTsigKeysFilterOutput
	ToGetTsigKeysFilterOutputWithContext(context.Context) GetTsigKeysFilterOutput
}

type GetTsigKeysFilterArgs struct {
	// The name of a resource.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTsigKeysFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTsigKeysFilter)(nil)).Elem()
}

func (i GetTsigKeysFilterArgs) ToGetTsigKeysFilterOutput() GetTsigKeysFilterOutput {
	return i.ToGetTsigKeysFilterOutputWithContext(context.Background())
}

func (i GetTsigKeysFilterArgs) ToGetTsigKeysFilterOutputWithContext(ctx context.Context) GetTsigKeysFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTsigKeysFilterOutput)
}

// GetTsigKeysFilterArrayInput is an input type that accepts GetTsigKeysFilterArray and GetTsigKeysFilterArrayOutput values.
// You can construct a concrete instance of `GetTsigKeysFilterArrayInput` via:
//
//	GetTsigKeysFilterArray{ GetTsigKeysFilterArgs{...} }
type GetTsigKeysFilterArrayInput interface {
	pulumi.Input

	ToGetTsigKeysFilterArrayOutput() GetTsigKeysFilterArrayOutput
	ToGetTsigKeysFilterArrayOutputWithContext(context.Context) GetTsigKeysFilterArrayOutput
}

type GetTsigKeysFilterArray []GetTsigKeysFilterInput

func (GetTsigKeysFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTsigKeysFilter)(nil)).Elem()
}

func (i GetTsigKeysFilterArray) ToGetTsigKeysFilterArrayOutput() GetTsigKeysFilterArrayOutput {
	return i.ToGetTsigKeysFilterArrayOutputWithContext(context.Background())
}

func (i GetTsigKeysFilterArray) ToGetTsigKeysFilterArrayOutputWithContext(ctx context.Context) GetTsigKeysFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTsigKeysFilterArrayOutput)
}

type GetTsigKeysFilterOutput struct{ *pulumi.OutputState }

func (GetTsigKeysFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTsigKeysFilter)(nil)).Elem()
}

func (o GetTsigKeysFilterOutput) ToGetTsigKeysFilterOutput() GetTsigKeysFilterOutput {
	return o
}

func (o GetTsigKeysFilterOutput) ToGetTsigKeysFilterOutputWithContext(ctx context.Context) GetTsigKeysFilterOutput {
	return o
}

// The name of a resource.
func (o GetTsigKeysFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTsigKeysFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTsigKeysFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTsigKeysFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetTsigKeysFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTsigKeysFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTsigKeysFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTsigKeysFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTsigKeysFilter)(nil)).Elem()
}

func (o GetTsigKeysFilterArrayOutput) ToGetTsigKeysFilterArrayOutput() GetTsigKeysFilterArrayOutput {
	return o
}

func (o GetTsigKeysFilterArrayOutput) ToGetTsigKeysFilterArrayOutputWithContext(ctx context.Context) GetTsigKeysFilterArrayOutput {
	return o
}

func (o GetTsigKeysFilterArrayOutput) Index(i pulumi.IntInput) GetTsigKeysFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTsigKeysFilter {
		return vs[0].([]GetTsigKeysFilter)[vs[1].(int)]
	}).(GetTsigKeysFilterOutput)
}

type GetTsigKeysTsigKey struct {
	// TSIG key algorithms are encoded as domain names, but most consist of only one non-empty label, which is not required to be explicitly absolute. Applicable algorithms include: hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha512. For more information on these algorithms, see [RFC 4635](https://tools.ietf.org/html/rfc4635#section-2).
	Algorithm string `pulumi:"algorithm"`
	// The OCID of the compartment the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of a resource.
	Id string `pulumi:"id"`
	// The name of a resource.
	Name string `pulumi:"name"`
	// A base64 string encoding the binary shared secret.
	Secret string `pulumi:"secret"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The state of a resource.
	State string `pulumi:"state"`
	// The date and time the resource was created, expressed in RFC 3339 timestamp format.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated, expressed in RFC 3339 timestamp format.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetTsigKeysTsigKeyInput is an input type that accepts GetTsigKeysTsigKeyArgs and GetTsigKeysTsigKeyOutput values.
// You can construct a concrete instance of `GetTsigKeysTsigKeyInput` via:
//
//	GetTsigKeysTsigKeyArgs{...}
type GetTsigKeysTsigKeyInput interface {
	pulumi.Input

	ToGetTsigKeysTsigKeyOutput() GetTsigKeysTsigKeyOutput
	ToGetTsigKeysTsigKeyOutputWithContext(context.Context) GetTsigKeysTsigKeyOutput
}

type GetTsigKeysTsigKeyArgs struct {
	// TSIG key algorithms are encoded as domain names, but most consist of only one non-empty label, which is not required to be explicitly absolute. Applicable algorithms include: hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha512. For more information on these algorithms, see [RFC 4635](https://tools.ietf.org/html/rfc4635#section-2).
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of a resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of a resource.
	Name pulumi.StringInput `pulumi:"name"`
	// A base64 string encoding the binary shared secret.
	Secret pulumi.StringInput `pulumi:"secret"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringInput `pulumi:"self"`
	// The state of a resource.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the resource was created, expressed in RFC 3339 timestamp format.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the resource was last updated, expressed in RFC 3339 timestamp format.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetTsigKeysTsigKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTsigKeysTsigKey)(nil)).Elem()
}

func (i GetTsigKeysTsigKeyArgs) ToGetTsigKeysTsigKeyOutput() GetTsigKeysTsigKeyOutput {
	return i.ToGetTsigKeysTsigKeyOutputWithContext(context.Background())
}

func (i GetTsigKeysTsigKeyArgs) ToGetTsigKeysTsigKeyOutputWithContext(ctx context.Context) GetTsigKeysTsigKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTsigKeysTsigKeyOutput)
}

// GetTsigKeysTsigKeyArrayInput is an input type that accepts GetTsigKeysTsigKeyArray and GetTsigKeysTsigKeyArrayOutput values.
// You can construct a concrete instance of `GetTsigKeysTsigKeyArrayInput` via:
//
//	GetTsigKeysTsigKeyArray{ GetTsigKeysTsigKeyArgs{...} }
type GetTsigKeysTsigKeyArrayInput interface {
	pulumi.Input

	ToGetTsigKeysTsigKeyArrayOutput() GetTsigKeysTsigKeyArrayOutput
	ToGetTsigKeysTsigKeyArrayOutputWithContext(context.Context) GetTsigKeysTsigKeyArrayOutput
}

type GetTsigKeysTsigKeyArray []GetTsigKeysTsigKeyInput

func (GetTsigKeysTsigKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTsigKeysTsigKey)(nil)).Elem()
}

func (i GetTsigKeysTsigKeyArray) ToGetTsigKeysTsigKeyArrayOutput() GetTsigKeysTsigKeyArrayOutput {
	return i.ToGetTsigKeysTsigKeyArrayOutputWithContext(context.Background())
}

func (i GetTsigKeysTsigKeyArray) ToGetTsigKeysTsigKeyArrayOutputWithContext(ctx context.Context) GetTsigKeysTsigKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTsigKeysTsigKeyArrayOutput)
}

type GetTsigKeysTsigKeyOutput struct{ *pulumi.OutputState }

func (GetTsigKeysTsigKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTsigKeysTsigKey)(nil)).Elem()
}

func (o GetTsigKeysTsigKeyOutput) ToGetTsigKeysTsigKeyOutput() GetTsigKeysTsigKeyOutput {
	return o
}

func (o GetTsigKeysTsigKeyOutput) ToGetTsigKeysTsigKeyOutputWithContext(ctx context.Context) GetTsigKeysTsigKeyOutput {
	return o
}

// TSIG key algorithms are encoded as domain names, but most consist of only one non-empty label, which is not required to be explicitly absolute. Applicable algorithms include: hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha512. For more information on these algorithms, see [RFC 4635](https://tools.ietf.org/html/rfc4635#section-2).
func (o GetTsigKeysTsigKeyOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetTsigKeysTsigKey) string { return v.Algorithm }).(pulumi.StringOutput)
}

// The OCID of the compartment the resource belongs to.
func (o GetTsigKeysTsigKeyOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTsigKeysTsigKey) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o GetTsigKeysTsigKeyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTsigKeysTsigKey) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o GetTsigKeysTsigKeyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTsigKeysTsigKey) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of a resource.
func (o GetTsigKeysTsigKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTsigKeysTsigKey) string { return v.Id }).(pulumi.StringOutput)
}

// The name of a resource.
func (o GetTsigKeysTsigKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTsigKeysTsigKey) string { return v.Name }).(pulumi.StringOutput)
}

// A base64 string encoding the binary shared secret.
func (o GetTsigKeysTsigKeyOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetTsigKeysTsigKey) string { return v.Secret }).(pulumi.StringOutput)
}

// The canonical absolute URL of the resource.
func (o GetTsigKeysTsigKeyOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v GetTsigKeysTsigKey) string { return v.Self }).(pulumi.StringOutput)
}

// The state of a resource.
func (o GetTsigKeysTsigKeyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTsigKeysTsigKey) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created, expressed in RFC 3339 timestamp format.
func (o GetTsigKeysTsigKeyOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTsigKeysTsigKey) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated, expressed in RFC 3339 timestamp format.
func (o GetTsigKeysTsigKeyOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTsigKeysTsigKey) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetTsigKeysTsigKeyArrayOutput struct{ *pulumi.OutputState }

func (GetTsigKeysTsigKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTsigKeysTsigKey)(nil)).Elem()
}

func (o GetTsigKeysTsigKeyArrayOutput) ToGetTsigKeysTsigKeyArrayOutput() GetTsigKeysTsigKeyArrayOutput {
	return o
}

func (o GetTsigKeysTsigKeyArrayOutput) ToGetTsigKeysTsigKeyArrayOutputWithContext(ctx context.Context) GetTsigKeysTsigKeyArrayOutput {
	return o
}

func (o GetTsigKeysTsigKeyArrayOutput) Index(i pulumi.IntInput) GetTsigKeysTsigKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTsigKeysTsigKey {
		return vs[0].([]GetTsigKeysTsigKey)[vs[1].(int)]
	}).(GetTsigKeysTsigKeyOutput)
}

type GetViewsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetViewsFilterInput is an input type that accepts GetViewsFilterArgs and GetViewsFilterOutput values.
// You can construct a concrete instance of `GetViewsFilterInput` via:
//
//	GetViewsFilterArgs{...}
type GetViewsFilterInput interface {
	pulumi.Input

	ToGetViewsFilterOutput() GetViewsFilterOutput
	ToGetViewsFilterOutputWithContext(context.Context) GetViewsFilterOutput
}

type GetViewsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetViewsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetViewsFilter)(nil)).Elem()
}

func (i GetViewsFilterArgs) ToGetViewsFilterOutput() GetViewsFilterOutput {
	return i.ToGetViewsFilterOutputWithContext(context.Background())
}

func (i GetViewsFilterArgs) ToGetViewsFilterOutputWithContext(ctx context.Context) GetViewsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetViewsFilterOutput)
}

// GetViewsFilterArrayInput is an input type that accepts GetViewsFilterArray and GetViewsFilterArrayOutput values.
// You can construct a concrete instance of `GetViewsFilterArrayInput` via:
//
//	GetViewsFilterArray{ GetViewsFilterArgs{...} }
type GetViewsFilterArrayInput interface {
	pulumi.Input

	ToGetViewsFilterArrayOutput() GetViewsFilterArrayOutput
	ToGetViewsFilterArrayOutputWithContext(context.Context) GetViewsFilterArrayOutput
}

type GetViewsFilterArray []GetViewsFilterInput

func (GetViewsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetViewsFilter)(nil)).Elem()
}

func (i GetViewsFilterArray) ToGetViewsFilterArrayOutput() GetViewsFilterArrayOutput {
	return i.ToGetViewsFilterArrayOutputWithContext(context.Background())
}

func (i GetViewsFilterArray) ToGetViewsFilterArrayOutputWithContext(ctx context.Context) GetViewsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetViewsFilterArrayOutput)
}

type GetViewsFilterOutput struct{ *pulumi.OutputState }

func (GetViewsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetViewsFilter)(nil)).Elem()
}

func (o GetViewsFilterOutput) ToGetViewsFilterOutput() GetViewsFilterOutput {
	return o
}

func (o GetViewsFilterOutput) ToGetViewsFilterOutputWithContext(ctx context.Context) GetViewsFilterOutput {
	return o
}

func (o GetViewsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetViewsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetViewsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetViewsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetViewsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetViewsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetViewsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetViewsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetViewsFilter)(nil)).Elem()
}

func (o GetViewsFilterArrayOutput) ToGetViewsFilterArrayOutput() GetViewsFilterArrayOutput {
	return o
}

func (o GetViewsFilterArrayOutput) ToGetViewsFilterArrayOutputWithContext(ctx context.Context) GetViewsFilterArrayOutput {
	return o
}

func (o GetViewsFilterArrayOutput) Index(i pulumi.IntInput) GetViewsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetViewsFilter {
		return vs[0].([]GetViewsFilter)[vs[1].(int)]
	}).(GetViewsFilterOutput)
}

type GetViewsView struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// The displayName of a resource.
	DisplayName string `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of a resource.
	Id string `pulumi:"id"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected bool `pulumi:"isProtected"`
	// Value must be `PRIVATE` when listing private views.
	Scope string `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The state of a resource.
	State string `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetViewsViewInput is an input type that accepts GetViewsViewArgs and GetViewsViewOutput values.
// You can construct a concrete instance of `GetViewsViewInput` via:
//
//	GetViewsViewArgs{...}
type GetViewsViewInput interface {
	pulumi.Input

	ToGetViewsViewOutput() GetViewsViewOutput
	ToGetViewsViewOutputWithContext(context.Context) GetViewsViewOutput
}

type GetViewsViewArgs struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// The displayName of a resource.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of a resource.
	Id pulumi.StringInput `pulumi:"id"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected pulumi.BoolInput `pulumi:"isProtected"`
	// Value must be `PRIVATE` when listing private views.
	Scope pulumi.StringInput `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringInput `pulumi:"self"`
	// The state of a resource.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetViewsViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetViewsView)(nil)).Elem()
}

func (i GetViewsViewArgs) ToGetViewsViewOutput() GetViewsViewOutput {
	return i.ToGetViewsViewOutputWithContext(context.Background())
}

func (i GetViewsViewArgs) ToGetViewsViewOutputWithContext(ctx context.Context) GetViewsViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetViewsViewOutput)
}

// GetViewsViewArrayInput is an input type that accepts GetViewsViewArray and GetViewsViewArrayOutput values.
// You can construct a concrete instance of `GetViewsViewArrayInput` via:
//
//	GetViewsViewArray{ GetViewsViewArgs{...} }
type GetViewsViewArrayInput interface {
	pulumi.Input

	ToGetViewsViewArrayOutput() GetViewsViewArrayOutput
	ToGetViewsViewArrayOutputWithContext(context.Context) GetViewsViewArrayOutput
}

type GetViewsViewArray []GetViewsViewInput

func (GetViewsViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetViewsView)(nil)).Elem()
}

func (i GetViewsViewArray) ToGetViewsViewArrayOutput() GetViewsViewArrayOutput {
	return i.ToGetViewsViewArrayOutputWithContext(context.Background())
}

func (i GetViewsViewArray) ToGetViewsViewArrayOutputWithContext(ctx context.Context) GetViewsViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetViewsViewArrayOutput)
}

type GetViewsViewOutput struct{ *pulumi.OutputState }

func (GetViewsViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetViewsView)(nil)).Elem()
}

func (o GetViewsViewOutput) ToGetViewsViewOutput() GetViewsViewOutput {
	return o
}

func (o GetViewsViewOutput) ToGetViewsViewOutputWithContext(ctx context.Context) GetViewsViewOutput {
	return o
}

// The OCID of the compartment the resource belongs to.
func (o GetViewsViewOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetViewsView) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o GetViewsViewOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetViewsView) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// The displayName of a resource.
func (o GetViewsViewOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetViewsView) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o GetViewsViewOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetViewsView) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of a resource.
func (o GetViewsViewOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetViewsView) string { return v.Id }).(pulumi.StringOutput)
}

// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
func (o GetViewsViewOutput) IsProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetViewsView) bool { return v.IsProtected }).(pulumi.BoolOutput)
}

// Value must be `PRIVATE` when listing private views.
func (o GetViewsViewOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetViewsView) string { return v.Scope }).(pulumi.StringOutput)
}

// The canonical absolute URL of the resource.
func (o GetViewsViewOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v GetViewsView) string { return v.Self }).(pulumi.StringOutput)
}

// The state of a resource.
func (o GetViewsViewOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetViewsView) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetViewsViewOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetViewsView) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetViewsViewOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetViewsView) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetViewsViewArrayOutput struct{ *pulumi.OutputState }

func (GetViewsViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetViewsView)(nil)).Elem()
}

func (o GetViewsViewArrayOutput) ToGetViewsViewArrayOutput() GetViewsViewArrayOutput {
	return o
}

func (o GetViewsViewArrayOutput) ToGetViewsViewArrayOutputWithContext(ctx context.Context) GetViewsViewArrayOutput {
	return o
}

func (o GetViewsViewArrayOutput) Index(i pulumi.IntInput) GetViewsViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetViewsView {
		return vs[0].([]GetViewsView)[vs[1].(int)]
	}).(GetViewsViewOutput)
}

type GetZonesFilter struct {
	// A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetZonesFilterInput is an input type that accepts GetZonesFilterArgs and GetZonesFilterOutput values.
// You can construct a concrete instance of `GetZonesFilterInput` via:
//
//	GetZonesFilterArgs{...}
type GetZonesFilterInput interface {
	pulumi.Input

	ToGetZonesFilterOutput() GetZonesFilterOutput
	ToGetZonesFilterOutputWithContext(context.Context) GetZonesFilterOutput
}

type GetZonesFilterArgs struct {
	// A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetZonesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesFilter)(nil)).Elem()
}

func (i GetZonesFilterArgs) ToGetZonesFilterOutput() GetZonesFilterOutput {
	return i.ToGetZonesFilterOutputWithContext(context.Background())
}

func (i GetZonesFilterArgs) ToGetZonesFilterOutputWithContext(ctx context.Context) GetZonesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesFilterOutput)
}

// GetZonesFilterArrayInput is an input type that accepts GetZonesFilterArray and GetZonesFilterArrayOutput values.
// You can construct a concrete instance of `GetZonesFilterArrayInput` via:
//
//	GetZonesFilterArray{ GetZonesFilterArgs{...} }
type GetZonesFilterArrayInput interface {
	pulumi.Input

	ToGetZonesFilterArrayOutput() GetZonesFilterArrayOutput
	ToGetZonesFilterArrayOutputWithContext(context.Context) GetZonesFilterArrayOutput
}

type GetZonesFilterArray []GetZonesFilterInput

func (GetZonesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesFilter)(nil)).Elem()
}

func (i GetZonesFilterArray) ToGetZonesFilterArrayOutput() GetZonesFilterArrayOutput {
	return i.ToGetZonesFilterArrayOutputWithContext(context.Background())
}

func (i GetZonesFilterArray) ToGetZonesFilterArrayOutputWithContext(ctx context.Context) GetZonesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesFilterArrayOutput)
}

type GetZonesFilterOutput struct{ *pulumi.OutputState }

func (GetZonesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesFilter)(nil)).Elem()
}

func (o GetZonesFilterOutput) ToGetZonesFilterOutput() GetZonesFilterOutput {
	return o
}

func (o GetZonesFilterOutput) ToGetZonesFilterOutputWithContext(ctx context.Context) GetZonesFilterOutput {
	return o
}

// A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
func (o GetZonesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetZonesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetZonesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetZonesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetZonesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetZonesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesFilter)(nil)).Elem()
}

func (o GetZonesFilterArrayOutput) ToGetZonesFilterArrayOutput() GetZonesFilterArrayOutput {
	return o
}

func (o GetZonesFilterArrayOutput) ToGetZonesFilterArrayOutputWithContext(ctx context.Context) GetZonesFilterArrayOutput {
	return o
}

func (o GetZonesFilterArrayOutput) Index(i pulumi.IntInput) GetZonesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesFilter {
		return vs[0].([]GetZonesFilter)[vs[1].(int)]
	}).(GetZonesFilterOutput)
}

type GetZonesZone struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags map[string]string `pulumi:"definedTags"`
	// DNSSEC configuration data.
	DnssecConfigs []GetZonesZoneDnssecConfig `pulumi:"dnssecConfigs"`
	// Search for zones that have the given `DnssecState`.
	DnssecState string `pulumi:"dnssecState"`
	// External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
	ExternalDownstreams []GetZonesZoneExternalDownstream `pulumi:"externalDownstreams"`
	// External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
	ExternalMasters []GetZonesZoneExternalMaster `pulumi:"externalMasters"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the zone.
	Id string `pulumi:"id"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected bool `pulumi:"isProtected"`
	// A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
	Name string `pulumi:"name"`
	// The authoritative nameservers for the zone.
	Nameservers []GetZonesZoneNameserver `pulumi:"nameservers"`
	// Specifies to operate only on resources that have a matching DNS scope.
	Scope string `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self string `pulumi:"self"`
	// The current serial of the zone. As seen in the zone's SOA record.
	Serial int `pulumi:"serial"`
	// The state of a resource.
	State string `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated string `pulumi:"timeCreated"`
	// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
	Version string `pulumi:"version"`
	// The OCID of the view the resource is associated with.
	ViewId string `pulumi:"viewId"`
	// The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
	ZoneTransferServers []GetZonesZoneZoneTransferServer `pulumi:"zoneTransferServers"`
	// Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
	ZoneType string `pulumi:"zoneType"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//	GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	DefinedTags pulumi.StringMapInput `pulumi:"definedTags"`
	// DNSSEC configuration data.
	DnssecConfigs GetZonesZoneDnssecConfigArrayInput `pulumi:"dnssecConfigs"`
	// Search for zones that have the given `DnssecState`.
	DnssecState pulumi.StringInput `pulumi:"dnssecState"`
	// External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
	ExternalDownstreams GetZonesZoneExternalDownstreamArrayInput `pulumi:"externalDownstreams"`
	// External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
	ExternalMasters GetZonesZoneExternalMasterArrayInput `pulumi:"externalMasters"`
	// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	FreeformTags pulumi.StringMapInput `pulumi:"freeformTags"`
	// The OCID of the zone.
	Id pulumi.StringInput `pulumi:"id"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected pulumi.BoolInput `pulumi:"isProtected"`
	// A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
	Name pulumi.StringInput `pulumi:"name"`
	// The authoritative nameservers for the zone.
	Nameservers GetZonesZoneNameserverArrayInput `pulumi:"nameservers"`
	// Specifies to operate only on resources that have a matching DNS scope.
	Scope pulumi.StringInput `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringInput `pulumi:"self"`
	// The current serial of the zone. As seen in the zone's SOA record.
	Serial pulumi.IntInput `pulumi:"serial"`
	// The state of a resource.
	State pulumi.StringInput `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
	Version pulumi.StringInput `pulumi:"version"`
	// The OCID of the view the resource is associated with.
	ViewId pulumi.StringInput `pulumi:"viewId"`
	// The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
	ZoneTransferServers GetZonesZoneZoneTransferServerArrayInput `pulumi:"zoneTransferServers"`
	// Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
	ZoneType pulumi.StringInput `pulumi:"zoneType"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//	GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// The OCID of the compartment the resource belongs to.
func (o GetZonesZoneOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o GetZonesZoneOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZonesZone) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// DNSSEC configuration data.
func (o GetZonesZoneOutput) DnssecConfigs() GetZonesZoneDnssecConfigArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []GetZonesZoneDnssecConfig { return v.DnssecConfigs }).(GetZonesZoneDnssecConfigArrayOutput)
}

// Search for zones that have the given `DnssecState`.
func (o GetZonesZoneOutput) DnssecState() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.DnssecState }).(pulumi.StringOutput)
}

// External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
func (o GetZonesZoneOutput) ExternalDownstreams() GetZonesZoneExternalDownstreamArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []GetZonesZoneExternalDownstream { return v.ExternalDownstreams }).(GetZonesZoneExternalDownstreamArrayOutput)
}

// External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
func (o GetZonesZoneOutput) ExternalMasters() GetZonesZoneExternalMasterArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []GetZonesZoneExternalMaster { return v.ExternalMasters }).(GetZonesZoneExternalMasterArrayOutput)
}

// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
func (o GetZonesZoneOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetZonesZone) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the zone.
func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
func (o GetZonesZoneOutput) IsProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZonesZone) bool { return v.IsProtected }).(pulumi.BoolOutput)
}

// A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
func (o GetZonesZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Name }).(pulumi.StringOutput)
}

// The authoritative nameservers for the zone.
func (o GetZonesZoneOutput) Nameservers() GetZonesZoneNameserverArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []GetZonesZoneNameserver { return v.Nameservers }).(GetZonesZoneNameserverArrayOutput)
}

// Specifies to operate only on resources that have a matching DNS scope.
func (o GetZonesZoneOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Scope }).(pulumi.StringOutput)
}

// The canonical absolute URL of the resource.
func (o GetZonesZoneOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Self }).(pulumi.StringOutput)
}

// The current serial of the zone. As seen in the zone's SOA record.
func (o GetZonesZoneOutput) Serial() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZone) int { return v.Serial }).(pulumi.IntOutput)
}

// The state of a resource.
func (o GetZonesZoneOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetZonesZoneOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
func (o GetZonesZoneOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Version }).(pulumi.StringOutput)
}

// The OCID of the view the resource is associated with.
func (o GetZonesZoneOutput) ViewId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ViewId }).(pulumi.StringOutput)
}

// The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
func (o GetZonesZoneOutput) ZoneTransferServers() GetZonesZoneZoneTransferServerArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []GetZonesZoneZoneTransferServer { return v.ZoneTransferServers }).(GetZonesZoneZoneTransferServerArrayOutput)
}

// Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
func (o GetZonesZoneOutput) ZoneType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ZoneType }).(pulumi.StringOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

type GetZonesZoneDnssecConfig struct {
	// A read-only array of key signing key (KSK) versions.
	KskDnssecKeyVersions []GetZonesZoneDnssecConfigKskDnssecKeyVersion `pulumi:"kskDnssecKeyVersions"`
	// A read-only array of zone signing key (ZSK) versions.
	ZskDnssecKeyVersions []GetZonesZoneDnssecConfigZskDnssecKeyVersion `pulumi:"zskDnssecKeyVersions"`
}

// GetZonesZoneDnssecConfigInput is an input type that accepts GetZonesZoneDnssecConfigArgs and GetZonesZoneDnssecConfigOutput values.
// You can construct a concrete instance of `GetZonesZoneDnssecConfigInput` via:
//
//	GetZonesZoneDnssecConfigArgs{...}
type GetZonesZoneDnssecConfigInput interface {
	pulumi.Input

	ToGetZonesZoneDnssecConfigOutput() GetZonesZoneDnssecConfigOutput
	ToGetZonesZoneDnssecConfigOutputWithContext(context.Context) GetZonesZoneDnssecConfigOutput
}

type GetZonesZoneDnssecConfigArgs struct {
	// A read-only array of key signing key (KSK) versions.
	KskDnssecKeyVersions GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayInput `pulumi:"kskDnssecKeyVersions"`
	// A read-only array of zone signing key (ZSK) versions.
	ZskDnssecKeyVersions GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayInput `pulumi:"zskDnssecKeyVersions"`
}

func (GetZonesZoneDnssecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneDnssecConfig)(nil)).Elem()
}

func (i GetZonesZoneDnssecConfigArgs) ToGetZonesZoneDnssecConfigOutput() GetZonesZoneDnssecConfigOutput {
	return i.ToGetZonesZoneDnssecConfigOutputWithContext(context.Background())
}

func (i GetZonesZoneDnssecConfigArgs) ToGetZonesZoneDnssecConfigOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneDnssecConfigOutput)
}

// GetZonesZoneDnssecConfigArrayInput is an input type that accepts GetZonesZoneDnssecConfigArray and GetZonesZoneDnssecConfigArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneDnssecConfigArrayInput` via:
//
//	GetZonesZoneDnssecConfigArray{ GetZonesZoneDnssecConfigArgs{...} }
type GetZonesZoneDnssecConfigArrayInput interface {
	pulumi.Input

	ToGetZonesZoneDnssecConfigArrayOutput() GetZonesZoneDnssecConfigArrayOutput
	ToGetZonesZoneDnssecConfigArrayOutputWithContext(context.Context) GetZonesZoneDnssecConfigArrayOutput
}

type GetZonesZoneDnssecConfigArray []GetZonesZoneDnssecConfigInput

func (GetZonesZoneDnssecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneDnssecConfig)(nil)).Elem()
}

func (i GetZonesZoneDnssecConfigArray) ToGetZonesZoneDnssecConfigArrayOutput() GetZonesZoneDnssecConfigArrayOutput {
	return i.ToGetZonesZoneDnssecConfigArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneDnssecConfigArray) ToGetZonesZoneDnssecConfigArrayOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneDnssecConfigArrayOutput)
}

type GetZonesZoneDnssecConfigOutput struct{ *pulumi.OutputState }

func (GetZonesZoneDnssecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneDnssecConfig)(nil)).Elem()
}

func (o GetZonesZoneDnssecConfigOutput) ToGetZonesZoneDnssecConfigOutput() GetZonesZoneDnssecConfigOutput {
	return o
}

func (o GetZonesZoneDnssecConfigOutput) ToGetZonesZoneDnssecConfigOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigOutput {
	return o
}

// A read-only array of key signing key (KSK) versions.
func (o GetZonesZoneDnssecConfigOutput) KskDnssecKeyVersions() GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfig) []GetZonesZoneDnssecConfigKskDnssecKeyVersion {
		return v.KskDnssecKeyVersions
	}).(GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput)
}

// A read-only array of zone signing key (ZSK) versions.
func (o GetZonesZoneDnssecConfigOutput) ZskDnssecKeyVersions() GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfig) []GetZonesZoneDnssecConfigZskDnssecKeyVersion {
		return v.ZskDnssecKeyVersions
	}).(GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput)
}

type GetZonesZoneDnssecConfigArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneDnssecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneDnssecConfig)(nil)).Elem()
}

func (o GetZonesZoneDnssecConfigArrayOutput) ToGetZonesZoneDnssecConfigArrayOutput() GetZonesZoneDnssecConfigArrayOutput {
	return o
}

func (o GetZonesZoneDnssecConfigArrayOutput) ToGetZonesZoneDnssecConfigArrayOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigArrayOutput {
	return o
}

func (o GetZonesZoneDnssecConfigArrayOutput) Index(i pulumi.IntInput) GetZonesZoneDnssecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZoneDnssecConfig {
		return vs[0].([]GetZonesZoneDnssecConfig)[vs[1].(int)]
	}).(GetZonesZoneDnssecConfigOutput)
}

type GetZonesZoneDnssecConfigKskDnssecKeyVersion struct {
	// The signing algorithm used for the key.
	Algorithm string `pulumi:"algorithm"`
	// An array of data for DS records corresponding with this key version. An entry will exist for each supported DS digest algorithm.
	DsDatas []GetZonesZoneDnssecConfigKskDnssecKeyVersionDsData `pulumi:"dsDatas"`
	// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
	KeyTag int `pulumi:"keyTag"`
	// The length of the corresponding private key in bytes, expressed as an integer.
	LengthInBytes int `pulumi:"lengthInBytes"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
	PredecessorDnssecKeyVersionUuid string `pulumi:"predecessorDnssecKeyVersionUuid"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
	SuccessorDnssecKeyVersionUuid string `pulumi:"successorDnssecKeyVersionUuid"`
	// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
	TimeActivated string `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
	TimeExpired string `pulumi:"timeExpired"`
	// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeInactivated string `pulumi:"timeInactivated"`
	// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
	TimePromoted string `pulumi:"timePromoted"`
	// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
	TimePublished string `pulumi:"timePublished"`
	// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeUnpublished string `pulumi:"timeUnpublished"`
	// The UUID of the `DnssecKeyVersion`.
	Uuid string `pulumi:"uuid"`
}

// GetZonesZoneDnssecConfigKskDnssecKeyVersionInput is an input type that accepts GetZonesZoneDnssecConfigKskDnssecKeyVersionArgs and GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput values.
// You can construct a concrete instance of `GetZonesZoneDnssecConfigKskDnssecKeyVersionInput` via:
//
//	GetZonesZoneDnssecConfigKskDnssecKeyVersionArgs{...}
type GetZonesZoneDnssecConfigKskDnssecKeyVersionInput interface {
	pulumi.Input

	ToGetZonesZoneDnssecConfigKskDnssecKeyVersionOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput
	ToGetZonesZoneDnssecConfigKskDnssecKeyVersionOutputWithContext(context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput
}

type GetZonesZoneDnssecConfigKskDnssecKeyVersionArgs struct {
	// The signing algorithm used for the key.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// An array of data for DS records corresponding with this key version. An entry will exist for each supported DS digest algorithm.
	DsDatas GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayInput `pulumi:"dsDatas"`
	// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
	KeyTag pulumi.IntInput `pulumi:"keyTag"`
	// The length of the corresponding private key in bytes, expressed as an integer.
	LengthInBytes pulumi.IntInput `pulumi:"lengthInBytes"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
	PredecessorDnssecKeyVersionUuid pulumi.StringInput `pulumi:"predecessorDnssecKeyVersionUuid"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
	SuccessorDnssecKeyVersionUuid pulumi.StringInput `pulumi:"successorDnssecKeyVersionUuid"`
	// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
	TimeActivated pulumi.StringInput `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
	TimeExpired pulumi.StringInput `pulumi:"timeExpired"`
	// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeInactivated pulumi.StringInput `pulumi:"timeInactivated"`
	// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
	TimePromoted pulumi.StringInput `pulumi:"timePromoted"`
	// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
	TimePublished pulumi.StringInput `pulumi:"timePublished"`
	// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeUnpublished pulumi.StringInput `pulumi:"timeUnpublished"`
	// The UUID of the `DnssecKeyVersion`.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetZonesZoneDnssecConfigKskDnssecKeyVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (i GetZonesZoneDnssecConfigKskDnssecKeyVersionArgs) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput {
	return i.ToGetZonesZoneDnssecConfigKskDnssecKeyVersionOutputWithContext(context.Background())
}

func (i GetZonesZoneDnssecConfigKskDnssecKeyVersionArgs) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput)
}

// GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayInput is an input type that accepts GetZonesZoneDnssecConfigKskDnssecKeyVersionArray and GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayInput` via:
//
//	GetZonesZoneDnssecConfigKskDnssecKeyVersionArray{ GetZonesZoneDnssecConfigKskDnssecKeyVersionArgs{...} }
type GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayInput interface {
	pulumi.Input

	ToGetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput
	ToGetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput
}

type GetZonesZoneDnssecConfigKskDnssecKeyVersionArray []GetZonesZoneDnssecConfigKskDnssecKeyVersionInput

func (GetZonesZoneDnssecConfigKskDnssecKeyVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (i GetZonesZoneDnssecConfigKskDnssecKeyVersionArray) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput {
	return i.ToGetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneDnssecConfigKskDnssecKeyVersionArray) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput)
}

type GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput struct{ *pulumi.OutputState }

func (GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput {
	return o
}

func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput {
	return o
}

// The signing algorithm used for the key.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) string { return v.Algorithm }).(pulumi.StringOutput)
}

// An array of data for DS records corresponding with this key version. An entry will exist for each supported DS digest algorithm.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) DsDatas() GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) []GetZonesZoneDnssecConfigKskDnssecKeyVersionDsData {
		return v.DsDatas
	}).(GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput)
}

// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) KeyTag() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) int { return v.KeyTag }).(pulumi.IntOutput)
}

// The length of the corresponding private key in bytes, expressed as an integer.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) LengthInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) int { return v.LengthInBytes }).(pulumi.IntOutput)
}

// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) PredecessorDnssecKeyVersionUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) string { return v.PredecessorDnssecKeyVersionUuid }).(pulumi.StringOutput)
}

// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) SuccessorDnssecKeyVersionUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) string { return v.SuccessorDnssecKeyVersionUuid }).(pulumi.StringOutput)
}

// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) TimeActivated() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) string { return v.TimeActivated }).(pulumi.StringOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) TimeExpired() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) string { return v.TimeExpired }).(pulumi.StringOutput)
}

// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) TimeInactivated() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) string { return v.TimeInactivated }).(pulumi.StringOutput)
}

// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) TimePromoted() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) string { return v.TimePromoted }).(pulumi.StringOutput)
}

// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) TimePublished() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) string { return v.TimePublished }).(pulumi.StringOutput)
}

// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) TimeUnpublished() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) string { return v.TimeUnpublished }).(pulumi.StringOutput)
}

// The UUID of the `DnssecKeyVersion`.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersion) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneDnssecConfigKskDnssecKeyVersion)(nil)).Elem()
}

func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput {
	return o
}

func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput {
	return o
}

func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput) Index(i pulumi.IntInput) GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZoneDnssecConfigKskDnssecKeyVersion {
		return vs[0].([]GetZonesZoneDnssecConfigKskDnssecKeyVersion)[vs[1].(int)]
	}).(GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput)
}

type GetZonesZoneDnssecConfigKskDnssecKeyVersionDsData struct {
	// The type of the digest associated with the rdata.
	DigestType string `pulumi:"digestType"`
	// Presentation-format DS record data that must be added to the parent zone. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata string `pulumi:"rdata"`
}

// GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataInput is an input type that accepts GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArgs and GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput values.
// You can construct a concrete instance of `GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataInput` via:
//
//	GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArgs{...}
type GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataInput interface {
	pulumi.Input

	ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput
	ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput
}

type GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArgs struct {
	// The type of the digest associated with the rdata.
	DigestType pulumi.StringInput `pulumi:"digestType"`
	// Presentation-format DS record data that must be added to the parent zone. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
	Rdata pulumi.StringInput `pulumi:"rdata"`
}

func (GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (i GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArgs) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return i.ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(context.Background())
}

func (i GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArgs) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput)
}

// GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayInput is an input type that accepts GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArray and GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayInput` via:
//
//	GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArray{ GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArgs{...} }
type GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayInput interface {
	pulumi.Input

	ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput
	ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput
}

type GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArray []GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataInput

func (GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (i GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArray) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return i.ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArray) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput)
}

type GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput struct{ *pulumi.OutputState }

func (GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return o
}

func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return o
}

// The type of the digest associated with the rdata.
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput) DigestType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersionDsData) string { return v.DigestType }).(pulumi.StringOutput)
}

// Presentation-format DS record data that must be added to the parent zone. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput) Rdata() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigKskDnssecKeyVersionDsData) string { return v.Rdata }).(pulumi.StringOutput)
}

type GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneDnssecConfigKskDnssecKeyVersionDsData)(nil)).Elem()
}

func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput() GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return o
}

func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) ToGetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput {
	return o
}

func (o GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput) Index(i pulumi.IntInput) GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZoneDnssecConfigKskDnssecKeyVersionDsData {
		return vs[0].([]GetZonesZoneDnssecConfigKskDnssecKeyVersionDsData)[vs[1].(int)]
	}).(GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput)
}

type GetZonesZoneDnssecConfigZskDnssecKeyVersion struct {
	// The signing algorithm used for the key.
	Algorithm string `pulumi:"algorithm"`
	// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
	KeyTag int `pulumi:"keyTag"`
	// The length of the corresponding private key in bytes, expressed as an integer.
	LengthInBytes int `pulumi:"lengthInBytes"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
	PredecessorDnssecKeyVersionUuid string `pulumi:"predecessorDnssecKeyVersionUuid"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
	SuccessorDnssecKeyVersionUuid string `pulumi:"successorDnssecKeyVersionUuid"`
	// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
	TimeActivated string `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
	TimeExpired string `pulumi:"timeExpired"`
	// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeInactivated string `pulumi:"timeInactivated"`
	// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
	TimePromoted string `pulumi:"timePromoted"`
	// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
	TimePublished string `pulumi:"timePublished"`
	// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeUnpublished string `pulumi:"timeUnpublished"`
	// The UUID of the `DnssecKeyVersion`.
	Uuid string `pulumi:"uuid"`
}

// GetZonesZoneDnssecConfigZskDnssecKeyVersionInput is an input type that accepts GetZonesZoneDnssecConfigZskDnssecKeyVersionArgs and GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput values.
// You can construct a concrete instance of `GetZonesZoneDnssecConfigZskDnssecKeyVersionInput` via:
//
//	GetZonesZoneDnssecConfigZskDnssecKeyVersionArgs{...}
type GetZonesZoneDnssecConfigZskDnssecKeyVersionInput interface {
	pulumi.Input

	ToGetZonesZoneDnssecConfigZskDnssecKeyVersionOutput() GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput
	ToGetZonesZoneDnssecConfigZskDnssecKeyVersionOutputWithContext(context.Context) GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput
}

type GetZonesZoneDnssecConfigZskDnssecKeyVersionArgs struct {
	// The signing algorithm used for the key.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
	KeyTag pulumi.IntInput `pulumi:"keyTag"`
	// The length of the corresponding private key in bytes, expressed as an integer.
	LengthInBytes pulumi.IntInput `pulumi:"lengthInBytes"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
	PredecessorDnssecKeyVersionUuid pulumi.StringInput `pulumi:"predecessorDnssecKeyVersionUuid"`
	// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
	SuccessorDnssecKeyVersionUuid pulumi.StringInput `pulumi:"successorDnssecKeyVersionUuid"`
	// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
	TimeActivated pulumi.StringInput `pulumi:"timeActivated"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
	TimeExpired pulumi.StringInput `pulumi:"timeExpired"`
	// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeInactivated pulumi.StringInput `pulumi:"timeInactivated"`
	// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
	TimePromoted pulumi.StringInput `pulumi:"timePromoted"`
	// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
	TimePublished pulumi.StringInput `pulumi:"timePublished"`
	// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
	TimeUnpublished pulumi.StringInput `pulumi:"timeUnpublished"`
	// The UUID of the `DnssecKeyVersion`.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetZonesZoneDnssecConfigZskDnssecKeyVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (i GetZonesZoneDnssecConfigZskDnssecKeyVersionArgs) ToGetZonesZoneDnssecConfigZskDnssecKeyVersionOutput() GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput {
	return i.ToGetZonesZoneDnssecConfigZskDnssecKeyVersionOutputWithContext(context.Background())
}

func (i GetZonesZoneDnssecConfigZskDnssecKeyVersionArgs) ToGetZonesZoneDnssecConfigZskDnssecKeyVersionOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput)
}

// GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayInput is an input type that accepts GetZonesZoneDnssecConfigZskDnssecKeyVersionArray and GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayInput` via:
//
//	GetZonesZoneDnssecConfigZskDnssecKeyVersionArray{ GetZonesZoneDnssecConfigZskDnssecKeyVersionArgs{...} }
type GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayInput interface {
	pulumi.Input

	ToGetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput() GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput
	ToGetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(context.Context) GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput
}

type GetZonesZoneDnssecConfigZskDnssecKeyVersionArray []GetZonesZoneDnssecConfigZskDnssecKeyVersionInput

func (GetZonesZoneDnssecConfigZskDnssecKeyVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (i GetZonesZoneDnssecConfigZskDnssecKeyVersionArray) ToGetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput() GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput {
	return i.ToGetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneDnssecConfigZskDnssecKeyVersionArray) ToGetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput)
}

type GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput struct{ *pulumi.OutputState }

func (GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) ToGetZonesZoneDnssecConfigZskDnssecKeyVersionOutput() GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput {
	return o
}

func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) ToGetZonesZoneDnssecConfigZskDnssecKeyVersionOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput {
	return o
}

// The signing algorithm used for the key.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) string { return v.Algorithm }).(pulumi.StringOutput)
}

// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see [RFC 4034](https://tools.ietf.org/html/rfc4034).
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) KeyTag() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) int { return v.KeyTag }).(pulumi.IntOutput)
}

// The length of the corresponding private key in bytes, expressed as an integer.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) LengthInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) int { return v.LengthInBytes }).(pulumi.IntOutput)
}

// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has replaced.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) PredecessorDnssecKeyVersionUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) string { return v.PredecessorDnssecKeyVersionUuid }).(pulumi.StringOutput)
}

// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this `DnssecKeyVersion`.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) SuccessorDnssecKeyVersionUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) string { return v.SuccessorDnssecKeyVersionUuid }).(pulumi.StringOutput)
}

// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is when the key material will be used to generate RRSIGs.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) TimeActivated() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) string { return v.TimeActivated }).(pulumi.StringOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime. This prevents service disruption at the potential increased risk of key compromise.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) TimeExpired() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) string { return v.TimeExpired }).(pulumi.StringOutput)
}

// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) TimeInactivated() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) string { return v.TimeInactivated }).(pulumi.StringOutput)
}

// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) TimePromoted() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) string { return v.TimePromoted }).(pulumi.StringOutput)
}

// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is when the zone contents will include a DNSKEY record corresponding to the key material.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) TimePublished() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) string { return v.TimePublished }).(pulumi.StringOutput)
}

// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) TimeUnpublished() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) string { return v.TimeUnpublished }).(pulumi.StringOutput)
}

// The UUID of the `DnssecKeyVersion`.
func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneDnssecConfigZskDnssecKeyVersion) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneDnssecConfigZskDnssecKeyVersion)(nil)).Elem()
}

func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput) ToGetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput() GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput {
	return o
}

func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput) ToGetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutputWithContext(ctx context.Context) GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput {
	return o
}

func (o GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput) Index(i pulumi.IntInput) GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZoneDnssecConfigZskDnssecKeyVersion {
		return vs[0].([]GetZonesZoneDnssecConfigZskDnssecKeyVersion)[vs[1].(int)]
	}).(GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput)
}

type GetZonesZoneExternalDownstream struct {
	// The server's IP address (IPv4 or IPv6).
	Address string `pulumi:"address"`
	// The server's port. Port value must be a value of 53, otherwise omit the port value.
	Port int `pulumi:"port"`
	// Search for zones that are associated with a TSIG key.
	TsigKeyId string `pulumi:"tsigKeyId"`
}

// GetZonesZoneExternalDownstreamInput is an input type that accepts GetZonesZoneExternalDownstreamArgs and GetZonesZoneExternalDownstreamOutput values.
// You can construct a concrete instance of `GetZonesZoneExternalDownstreamInput` via:
//
//	GetZonesZoneExternalDownstreamArgs{...}
type GetZonesZoneExternalDownstreamInput interface {
	pulumi.Input

	ToGetZonesZoneExternalDownstreamOutput() GetZonesZoneExternalDownstreamOutput
	ToGetZonesZoneExternalDownstreamOutputWithContext(context.Context) GetZonesZoneExternalDownstreamOutput
}

type GetZonesZoneExternalDownstreamArgs struct {
	// The server's IP address (IPv4 or IPv6).
	Address pulumi.StringInput `pulumi:"address"`
	// The server's port. Port value must be a value of 53, otherwise omit the port value.
	Port pulumi.IntInput `pulumi:"port"`
	// Search for zones that are associated with a TSIG key.
	TsigKeyId pulumi.StringInput `pulumi:"tsigKeyId"`
}

func (GetZonesZoneExternalDownstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneExternalDownstream)(nil)).Elem()
}

func (i GetZonesZoneExternalDownstreamArgs) ToGetZonesZoneExternalDownstreamOutput() GetZonesZoneExternalDownstreamOutput {
	return i.ToGetZonesZoneExternalDownstreamOutputWithContext(context.Background())
}

func (i GetZonesZoneExternalDownstreamArgs) ToGetZonesZoneExternalDownstreamOutputWithContext(ctx context.Context) GetZonesZoneExternalDownstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneExternalDownstreamOutput)
}

// GetZonesZoneExternalDownstreamArrayInput is an input type that accepts GetZonesZoneExternalDownstreamArray and GetZonesZoneExternalDownstreamArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneExternalDownstreamArrayInput` via:
//
//	GetZonesZoneExternalDownstreamArray{ GetZonesZoneExternalDownstreamArgs{...} }
type GetZonesZoneExternalDownstreamArrayInput interface {
	pulumi.Input

	ToGetZonesZoneExternalDownstreamArrayOutput() GetZonesZoneExternalDownstreamArrayOutput
	ToGetZonesZoneExternalDownstreamArrayOutputWithContext(context.Context) GetZonesZoneExternalDownstreamArrayOutput
}

type GetZonesZoneExternalDownstreamArray []GetZonesZoneExternalDownstreamInput

func (GetZonesZoneExternalDownstreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneExternalDownstream)(nil)).Elem()
}

func (i GetZonesZoneExternalDownstreamArray) ToGetZonesZoneExternalDownstreamArrayOutput() GetZonesZoneExternalDownstreamArrayOutput {
	return i.ToGetZonesZoneExternalDownstreamArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneExternalDownstreamArray) ToGetZonesZoneExternalDownstreamArrayOutputWithContext(ctx context.Context) GetZonesZoneExternalDownstreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneExternalDownstreamArrayOutput)
}

type GetZonesZoneExternalDownstreamOutput struct{ *pulumi.OutputState }

func (GetZonesZoneExternalDownstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneExternalDownstream)(nil)).Elem()
}

func (o GetZonesZoneExternalDownstreamOutput) ToGetZonesZoneExternalDownstreamOutput() GetZonesZoneExternalDownstreamOutput {
	return o
}

func (o GetZonesZoneExternalDownstreamOutput) ToGetZonesZoneExternalDownstreamOutputWithContext(ctx context.Context) GetZonesZoneExternalDownstreamOutput {
	return o
}

// The server's IP address (IPv4 or IPv6).
func (o GetZonesZoneExternalDownstreamOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneExternalDownstream) string { return v.Address }).(pulumi.StringOutput)
}

// The server's port. Port value must be a value of 53, otherwise omit the port value.
func (o GetZonesZoneExternalDownstreamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZoneExternalDownstream) int { return v.Port }).(pulumi.IntOutput)
}

// Search for zones that are associated with a TSIG key.
func (o GetZonesZoneExternalDownstreamOutput) TsigKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneExternalDownstream) string { return v.TsigKeyId }).(pulumi.StringOutput)
}

type GetZonesZoneExternalDownstreamArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneExternalDownstreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneExternalDownstream)(nil)).Elem()
}

func (o GetZonesZoneExternalDownstreamArrayOutput) ToGetZonesZoneExternalDownstreamArrayOutput() GetZonesZoneExternalDownstreamArrayOutput {
	return o
}

func (o GetZonesZoneExternalDownstreamArrayOutput) ToGetZonesZoneExternalDownstreamArrayOutputWithContext(ctx context.Context) GetZonesZoneExternalDownstreamArrayOutput {
	return o
}

func (o GetZonesZoneExternalDownstreamArrayOutput) Index(i pulumi.IntInput) GetZonesZoneExternalDownstreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZoneExternalDownstream {
		return vs[0].([]GetZonesZoneExternalDownstream)[vs[1].(int)]
	}).(GetZonesZoneExternalDownstreamOutput)
}

type GetZonesZoneExternalMaster struct {
	// The server's IP address (IPv4 or IPv6).
	Address string `pulumi:"address"`
	// The server's port. Port value must be a value of 53, otherwise omit the port value.
	Port int `pulumi:"port"`
	// Search for zones that are associated with a TSIG key.
	TsigKeyId string `pulumi:"tsigKeyId"`
}

// GetZonesZoneExternalMasterInput is an input type that accepts GetZonesZoneExternalMasterArgs and GetZonesZoneExternalMasterOutput values.
// You can construct a concrete instance of `GetZonesZoneExternalMasterInput` via:
//
//	GetZonesZoneExternalMasterArgs{...}
type GetZonesZoneExternalMasterInput interface {
	pulumi.Input

	ToGetZonesZoneExternalMasterOutput() GetZonesZoneExternalMasterOutput
	ToGetZonesZoneExternalMasterOutputWithContext(context.Context) GetZonesZoneExternalMasterOutput
}

type GetZonesZoneExternalMasterArgs struct {
	// The server's IP address (IPv4 or IPv6).
	Address pulumi.StringInput `pulumi:"address"`
	// The server's port. Port value must be a value of 53, otherwise omit the port value.
	Port pulumi.IntInput `pulumi:"port"`
	// Search for zones that are associated with a TSIG key.
	TsigKeyId pulumi.StringInput `pulumi:"tsigKeyId"`
}

func (GetZonesZoneExternalMasterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneExternalMaster)(nil)).Elem()
}

func (i GetZonesZoneExternalMasterArgs) ToGetZonesZoneExternalMasterOutput() GetZonesZoneExternalMasterOutput {
	return i.ToGetZonesZoneExternalMasterOutputWithContext(context.Background())
}

func (i GetZonesZoneExternalMasterArgs) ToGetZonesZoneExternalMasterOutputWithContext(ctx context.Context) GetZonesZoneExternalMasterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneExternalMasterOutput)
}

// GetZonesZoneExternalMasterArrayInput is an input type that accepts GetZonesZoneExternalMasterArray and GetZonesZoneExternalMasterArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneExternalMasterArrayInput` via:
//
//	GetZonesZoneExternalMasterArray{ GetZonesZoneExternalMasterArgs{...} }
type GetZonesZoneExternalMasterArrayInput interface {
	pulumi.Input

	ToGetZonesZoneExternalMasterArrayOutput() GetZonesZoneExternalMasterArrayOutput
	ToGetZonesZoneExternalMasterArrayOutputWithContext(context.Context) GetZonesZoneExternalMasterArrayOutput
}

type GetZonesZoneExternalMasterArray []GetZonesZoneExternalMasterInput

func (GetZonesZoneExternalMasterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneExternalMaster)(nil)).Elem()
}

func (i GetZonesZoneExternalMasterArray) ToGetZonesZoneExternalMasterArrayOutput() GetZonesZoneExternalMasterArrayOutput {
	return i.ToGetZonesZoneExternalMasterArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneExternalMasterArray) ToGetZonesZoneExternalMasterArrayOutputWithContext(ctx context.Context) GetZonesZoneExternalMasterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneExternalMasterArrayOutput)
}

type GetZonesZoneExternalMasterOutput struct{ *pulumi.OutputState }

func (GetZonesZoneExternalMasterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneExternalMaster)(nil)).Elem()
}

func (o GetZonesZoneExternalMasterOutput) ToGetZonesZoneExternalMasterOutput() GetZonesZoneExternalMasterOutput {
	return o
}

func (o GetZonesZoneExternalMasterOutput) ToGetZonesZoneExternalMasterOutputWithContext(ctx context.Context) GetZonesZoneExternalMasterOutput {
	return o
}

// The server's IP address (IPv4 or IPv6).
func (o GetZonesZoneExternalMasterOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneExternalMaster) string { return v.Address }).(pulumi.StringOutput)
}

// The server's port. Port value must be a value of 53, otherwise omit the port value.
func (o GetZonesZoneExternalMasterOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZoneExternalMaster) int { return v.Port }).(pulumi.IntOutput)
}

// Search for zones that are associated with a TSIG key.
func (o GetZonesZoneExternalMasterOutput) TsigKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneExternalMaster) string { return v.TsigKeyId }).(pulumi.StringOutput)
}

type GetZonesZoneExternalMasterArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneExternalMasterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneExternalMaster)(nil)).Elem()
}

func (o GetZonesZoneExternalMasterArrayOutput) ToGetZonesZoneExternalMasterArrayOutput() GetZonesZoneExternalMasterArrayOutput {
	return o
}

func (o GetZonesZoneExternalMasterArrayOutput) ToGetZonesZoneExternalMasterArrayOutputWithContext(ctx context.Context) GetZonesZoneExternalMasterArrayOutput {
	return o
}

func (o GetZonesZoneExternalMasterArrayOutput) Index(i pulumi.IntInput) GetZonesZoneExternalMasterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZoneExternalMaster {
		return vs[0].([]GetZonesZoneExternalMaster)[vs[1].(int)]
	}).(GetZonesZoneExternalMasterOutput)
}

type GetZonesZoneNameserver struct {
	// The hostname of the nameserver.
	Hostname string `pulumi:"hostname"`
}

// GetZonesZoneNameserverInput is an input type that accepts GetZonesZoneNameserverArgs and GetZonesZoneNameserverOutput values.
// You can construct a concrete instance of `GetZonesZoneNameserverInput` via:
//
//	GetZonesZoneNameserverArgs{...}
type GetZonesZoneNameserverInput interface {
	pulumi.Input

	ToGetZonesZoneNameserverOutput() GetZonesZoneNameserverOutput
	ToGetZonesZoneNameserverOutputWithContext(context.Context) GetZonesZoneNameserverOutput
}

type GetZonesZoneNameserverArgs struct {
	// The hostname of the nameserver.
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (GetZonesZoneNameserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneNameserver)(nil)).Elem()
}

func (i GetZonesZoneNameserverArgs) ToGetZonesZoneNameserverOutput() GetZonesZoneNameserverOutput {
	return i.ToGetZonesZoneNameserverOutputWithContext(context.Background())
}

func (i GetZonesZoneNameserverArgs) ToGetZonesZoneNameserverOutputWithContext(ctx context.Context) GetZonesZoneNameserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneNameserverOutput)
}

// GetZonesZoneNameserverArrayInput is an input type that accepts GetZonesZoneNameserverArray and GetZonesZoneNameserverArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneNameserverArrayInput` via:
//
//	GetZonesZoneNameserverArray{ GetZonesZoneNameserverArgs{...} }
type GetZonesZoneNameserverArrayInput interface {
	pulumi.Input

	ToGetZonesZoneNameserverArrayOutput() GetZonesZoneNameserverArrayOutput
	ToGetZonesZoneNameserverArrayOutputWithContext(context.Context) GetZonesZoneNameserverArrayOutput
}

type GetZonesZoneNameserverArray []GetZonesZoneNameserverInput

func (GetZonesZoneNameserverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneNameserver)(nil)).Elem()
}

func (i GetZonesZoneNameserverArray) ToGetZonesZoneNameserverArrayOutput() GetZonesZoneNameserverArrayOutput {
	return i.ToGetZonesZoneNameserverArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneNameserverArray) ToGetZonesZoneNameserverArrayOutputWithContext(ctx context.Context) GetZonesZoneNameserverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneNameserverArrayOutput)
}

type GetZonesZoneNameserverOutput struct{ *pulumi.OutputState }

func (GetZonesZoneNameserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneNameserver)(nil)).Elem()
}

func (o GetZonesZoneNameserverOutput) ToGetZonesZoneNameserverOutput() GetZonesZoneNameserverOutput {
	return o
}

func (o GetZonesZoneNameserverOutput) ToGetZonesZoneNameserverOutputWithContext(ctx context.Context) GetZonesZoneNameserverOutput {
	return o
}

// The hostname of the nameserver.
func (o GetZonesZoneNameserverOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneNameserver) string { return v.Hostname }).(pulumi.StringOutput)
}

type GetZonesZoneNameserverArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneNameserverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneNameserver)(nil)).Elem()
}

func (o GetZonesZoneNameserverArrayOutput) ToGetZonesZoneNameserverArrayOutput() GetZonesZoneNameserverArrayOutput {
	return o
}

func (o GetZonesZoneNameserverArrayOutput) ToGetZonesZoneNameserverArrayOutputWithContext(ctx context.Context) GetZonesZoneNameserverArrayOutput {
	return o
}

func (o GetZonesZoneNameserverArrayOutput) Index(i pulumi.IntInput) GetZonesZoneNameserverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZoneNameserver {
		return vs[0].([]GetZonesZoneNameserver)[vs[1].(int)]
	}).(GetZonesZoneNameserverOutput)
}

type GetZonesZoneZoneTransferServer struct {
	// The server's IP address (IPv4 or IPv6).
	Address string `pulumi:"address"`
	// A Boolean flag indicating whether or not the server is a zone data transfer destination.
	IsTransferDestination bool `pulumi:"isTransferDestination"`
	// A Boolean flag indicating whether or not the server is a zone data transfer source.
	IsTransferSource bool `pulumi:"isTransferSource"`
	// The server's port. Port value must be a value of 53, otherwise omit the port value.
	Port int `pulumi:"port"`
}

// GetZonesZoneZoneTransferServerInput is an input type that accepts GetZonesZoneZoneTransferServerArgs and GetZonesZoneZoneTransferServerOutput values.
// You can construct a concrete instance of `GetZonesZoneZoneTransferServerInput` via:
//
//	GetZonesZoneZoneTransferServerArgs{...}
type GetZonesZoneZoneTransferServerInput interface {
	pulumi.Input

	ToGetZonesZoneZoneTransferServerOutput() GetZonesZoneZoneTransferServerOutput
	ToGetZonesZoneZoneTransferServerOutputWithContext(context.Context) GetZonesZoneZoneTransferServerOutput
}

type GetZonesZoneZoneTransferServerArgs struct {
	// The server's IP address (IPv4 or IPv6).
	Address pulumi.StringInput `pulumi:"address"`
	// A Boolean flag indicating whether or not the server is a zone data transfer destination.
	IsTransferDestination pulumi.BoolInput `pulumi:"isTransferDestination"`
	// A Boolean flag indicating whether or not the server is a zone data transfer source.
	IsTransferSource pulumi.BoolInput `pulumi:"isTransferSource"`
	// The server's port. Port value must be a value of 53, otherwise omit the port value.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetZonesZoneZoneTransferServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneZoneTransferServer)(nil)).Elem()
}

func (i GetZonesZoneZoneTransferServerArgs) ToGetZonesZoneZoneTransferServerOutput() GetZonesZoneZoneTransferServerOutput {
	return i.ToGetZonesZoneZoneTransferServerOutputWithContext(context.Background())
}

func (i GetZonesZoneZoneTransferServerArgs) ToGetZonesZoneZoneTransferServerOutputWithContext(ctx context.Context) GetZonesZoneZoneTransferServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneZoneTransferServerOutput)
}

// GetZonesZoneZoneTransferServerArrayInput is an input type that accepts GetZonesZoneZoneTransferServerArray and GetZonesZoneZoneTransferServerArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneZoneTransferServerArrayInput` via:
//
//	GetZonesZoneZoneTransferServerArray{ GetZonesZoneZoneTransferServerArgs{...} }
type GetZonesZoneZoneTransferServerArrayInput interface {
	pulumi.Input

	ToGetZonesZoneZoneTransferServerArrayOutput() GetZonesZoneZoneTransferServerArrayOutput
	ToGetZonesZoneZoneTransferServerArrayOutputWithContext(context.Context) GetZonesZoneZoneTransferServerArrayOutput
}

type GetZonesZoneZoneTransferServerArray []GetZonesZoneZoneTransferServerInput

func (GetZonesZoneZoneTransferServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneZoneTransferServer)(nil)).Elem()
}

func (i GetZonesZoneZoneTransferServerArray) ToGetZonesZoneZoneTransferServerArrayOutput() GetZonesZoneZoneTransferServerArrayOutput {
	return i.ToGetZonesZoneZoneTransferServerArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneZoneTransferServerArray) ToGetZonesZoneZoneTransferServerArrayOutputWithContext(ctx context.Context) GetZonesZoneZoneTransferServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneZoneTransferServerArrayOutput)
}

type GetZonesZoneZoneTransferServerOutput struct{ *pulumi.OutputState }

func (GetZonesZoneZoneTransferServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZoneZoneTransferServer)(nil)).Elem()
}

func (o GetZonesZoneZoneTransferServerOutput) ToGetZonesZoneZoneTransferServerOutput() GetZonesZoneZoneTransferServerOutput {
	return o
}

func (o GetZonesZoneZoneTransferServerOutput) ToGetZonesZoneZoneTransferServerOutputWithContext(ctx context.Context) GetZonesZoneZoneTransferServerOutput {
	return o
}

// The server's IP address (IPv4 or IPv6).
func (o GetZonesZoneZoneTransferServerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZoneZoneTransferServer) string { return v.Address }).(pulumi.StringOutput)
}

// A Boolean flag indicating whether or not the server is a zone data transfer destination.
func (o GetZonesZoneZoneTransferServerOutput) IsTransferDestination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZonesZoneZoneTransferServer) bool { return v.IsTransferDestination }).(pulumi.BoolOutput)
}

// A Boolean flag indicating whether or not the server is a zone data transfer source.
func (o GetZonesZoneZoneTransferServerOutput) IsTransferSource() pulumi.BoolOutput {
	return o.ApplyT(func(v GetZonesZoneZoneTransferServer) bool { return v.IsTransferSource }).(pulumi.BoolOutput)
}

// The server's port. Port value must be a value of 53, otherwise omit the port value.
func (o GetZonesZoneZoneTransferServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZoneZoneTransferServer) int { return v.Port }).(pulumi.IntOutput)
}

type GetZonesZoneZoneTransferServerArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneZoneTransferServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZoneZoneTransferServer)(nil)).Elem()
}

func (o GetZonesZoneZoneTransferServerArrayOutput) ToGetZonesZoneZoneTransferServerArrayOutput() GetZonesZoneZoneTransferServerArrayOutput {
	return o
}

func (o GetZonesZoneZoneTransferServerArrayOutput) ToGetZonesZoneZoneTransferServerArrayOutputWithContext(ctx context.Context) GetZonesZoneZoneTransferServerArrayOutput {
	return o
}

func (o GetZonesZoneZoneTransferServerArrayOutput) Index(i pulumi.IntInput) GetZonesZoneZoneTransferServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZoneZoneTransferServer {
		return vs[0].([]GetZonesZoneZoneTransferServer)[vs[1].(int)]
	}).(GetZonesZoneZoneTransferServerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigInput)(nil)).Elem(), ActionCreateZoneFromZoneFileDnssecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigArrayInput)(nil)).Elem(), ActionCreateZoneFromZoneFileDnssecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionInput)(nil)).Elem(), ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayInput)(nil)).Elem(), ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataInput)(nil)).Elem(), ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayInput)(nil)).Elem(), ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionInput)(nil)).Elem(), ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayInput)(nil)).Elem(), ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileExternalDownstreamInput)(nil)).Elem(), ActionCreateZoneFromZoneFileExternalDownstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileExternalDownstreamArrayInput)(nil)).Elem(), ActionCreateZoneFromZoneFileExternalDownstreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileExternalMasterInput)(nil)).Elem(), ActionCreateZoneFromZoneFileExternalMasterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileExternalMasterArrayInput)(nil)).Elem(), ActionCreateZoneFromZoneFileExternalMasterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileNameserverInput)(nil)).Elem(), ActionCreateZoneFromZoneFileNameserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileNameserverArrayInput)(nil)).Elem(), ActionCreateZoneFromZoneFileNameserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileZoneTransferServerInput)(nil)).Elem(), ActionCreateZoneFromZoneFileZoneTransferServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionCreateZoneFromZoneFileZoneTransferServerArrayInput)(nil)).Elem(), ActionCreateZoneFromZoneFileZoneTransferServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverAttachedViewInput)(nil)).Elem(), ResolverAttachedViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverAttachedViewArrayInput)(nil)).Elem(), ResolverAttachedViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverEndpointTypeInput)(nil)).Elem(), ResolverEndpointTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverEndpointTypeArrayInput)(nil)).Elem(), ResolverEndpointTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverRuleInput)(nil)).Elem(), ResolverRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverRuleArrayInput)(nil)).Elem(), ResolverRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RrsetItemInput)(nil)).Elem(), RrsetItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RrsetItemArrayInput)(nil)).Elem(), RrsetItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SteeringPolicyAnswerInput)(nil)).Elem(), SteeringPolicyAnswerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SteeringPolicyAnswerArrayInput)(nil)).Elem(), SteeringPolicyAnswerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SteeringPolicyRuleInput)(nil)).Elem(), SteeringPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SteeringPolicyRuleArrayInput)(nil)).Elem(), SteeringPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SteeringPolicyRuleCaseInput)(nil)).Elem(), SteeringPolicyRuleCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SteeringPolicyRuleCaseArrayInput)(nil)).Elem(), SteeringPolicyRuleCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SteeringPolicyRuleCaseAnswerDataInput)(nil)).Elem(), SteeringPolicyRuleCaseAnswerDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SteeringPolicyRuleCaseAnswerDataArrayInput)(nil)).Elem(), SteeringPolicyRuleCaseAnswerDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SteeringPolicyRuleDefaultAnswerDataInput)(nil)).Elem(), SteeringPolicyRuleDefaultAnswerDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SteeringPolicyRuleDefaultAnswerDataArrayInput)(nil)).Elem(), SteeringPolicyRuleDefaultAnswerDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneDnssecConfigInput)(nil)).Elem(), ZoneDnssecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneDnssecConfigArrayInput)(nil)).Elem(), ZoneDnssecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneDnssecConfigKskDnssecKeyVersionInput)(nil)).Elem(), ZoneDnssecConfigKskDnssecKeyVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneDnssecConfigKskDnssecKeyVersionArrayInput)(nil)).Elem(), ZoneDnssecConfigKskDnssecKeyVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneDnssecConfigKskDnssecKeyVersionDsDataInput)(nil)).Elem(), ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayInput)(nil)).Elem(), ZoneDnssecConfigKskDnssecKeyVersionDsDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneDnssecConfigZskDnssecKeyVersionInput)(nil)).Elem(), ZoneDnssecConfigZskDnssecKeyVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneDnssecConfigZskDnssecKeyVersionArrayInput)(nil)).Elem(), ZoneDnssecConfigZskDnssecKeyVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneExternalDownstreamInput)(nil)).Elem(), ZoneExternalDownstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneExternalDownstreamArrayInput)(nil)).Elem(), ZoneExternalDownstreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneExternalMasterInput)(nil)).Elem(), ZoneExternalMasterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneExternalMasterArrayInput)(nil)).Elem(), ZoneExternalMasterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneNameserverInput)(nil)).Elem(), ZoneNameserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneNameserverArrayInput)(nil)).Elem(), ZoneNameserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneZoneTransferServerInput)(nil)).Elem(), ZoneZoneTransferServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneZoneTransferServerArrayInput)(nil)).Elem(), ZoneZoneTransferServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecordsFilterInput)(nil)).Elem(), GetRecordsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecordsFilterArrayInput)(nil)).Elem(), GetRecordsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecordsRecordInput)(nil)).Elem(), GetRecordsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecordsRecordArrayInput)(nil)).Elem(), GetRecordsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverAttachedViewInput)(nil)).Elem(), GetResolverAttachedViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverAttachedViewArrayInput)(nil)).Elem(), GetResolverAttachedViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverEndpointTypeInput)(nil)).Elem(), GetResolverEndpointTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverEndpointTypeArrayInput)(nil)).Elem(), GetResolverEndpointTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverEndpointsFilterInput)(nil)).Elem(), GetResolverEndpointsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverEndpointsFilterArrayInput)(nil)).Elem(), GetResolverEndpointsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverEndpointsResolverEndpointInput)(nil)).Elem(), GetResolverEndpointsResolverEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverEndpointsResolverEndpointArrayInput)(nil)).Elem(), GetResolverEndpointsResolverEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverRuleInput)(nil)).Elem(), GetResolverRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolverRuleArrayInput)(nil)).Elem(), GetResolverRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolversFilterInput)(nil)).Elem(), GetResolversFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolversFilterArrayInput)(nil)).Elem(), GetResolversFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolversResolverInput)(nil)).Elem(), GetResolversResolverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolversResolverArrayInput)(nil)).Elem(), GetResolversResolverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolversResolverAttachedViewInput)(nil)).Elem(), GetResolversResolverAttachedViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolversResolverAttachedViewArrayInput)(nil)).Elem(), GetResolversResolverAttachedViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolversResolverEndpointInput)(nil)).Elem(), GetResolversResolverEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolversResolverEndpointArrayInput)(nil)).Elem(), GetResolversResolverEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolversResolverRuleInput)(nil)).Elem(), GetResolversResolverRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResolversResolverRuleArrayInput)(nil)).Elem(), GetResolversResolverRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRrsetItemInput)(nil)).Elem(), GetRrsetItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRrsetItemArrayInput)(nil)).Elem(), GetRrsetItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRrsetsFilterInput)(nil)).Elem(), GetRrsetsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRrsetsFilterArrayInput)(nil)).Elem(), GetRrsetsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRrsetsRrsetInput)(nil)).Elem(), GetRrsetsRrsetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRrsetsRrsetArrayInput)(nil)).Elem(), GetRrsetsRrsetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRrsetsRrsetItemInput)(nil)).Elem(), GetRrsetsRrsetItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRrsetsRrsetItemArrayInput)(nil)).Elem(), GetRrsetsRrsetItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesFilterInput)(nil)).Elem(), GetSteeringPoliciesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesFilterArrayInput)(nil)).Elem(), GetSteeringPoliciesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyArrayInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyAnswerInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyAnswerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyAnswerArrayInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyAnswerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleArrayInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleCaseInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyRuleCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleCaseArrayInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyRuleCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayInput)(nil)).Elem(), GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyAnswerInput)(nil)).Elem(), GetSteeringPolicyAnswerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyAnswerArrayInput)(nil)).Elem(), GetSteeringPolicyAnswerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyAttachmentsFilterInput)(nil)).Elem(), GetSteeringPolicyAttachmentsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyAttachmentsFilterArrayInput)(nil)).Elem(), GetSteeringPolicyAttachmentsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyAttachmentsSteeringPolicyAttachmentInput)(nil)).Elem(), GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayInput)(nil)).Elem(), GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyRuleInput)(nil)).Elem(), GetSteeringPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyRuleArrayInput)(nil)).Elem(), GetSteeringPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyRuleCaseInput)(nil)).Elem(), GetSteeringPolicyRuleCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyRuleCaseArrayInput)(nil)).Elem(), GetSteeringPolicyRuleCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyRuleCaseAnswerDataInput)(nil)).Elem(), GetSteeringPolicyRuleCaseAnswerDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyRuleCaseAnswerDataArrayInput)(nil)).Elem(), GetSteeringPolicyRuleCaseAnswerDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyRuleDefaultAnswerDataInput)(nil)).Elem(), GetSteeringPolicyRuleDefaultAnswerDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSteeringPolicyRuleDefaultAnswerDataArrayInput)(nil)).Elem(), GetSteeringPolicyRuleDefaultAnswerDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTsigKeysFilterInput)(nil)).Elem(), GetTsigKeysFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTsigKeysFilterArrayInput)(nil)).Elem(), GetTsigKeysFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTsigKeysTsigKeyInput)(nil)).Elem(), GetTsigKeysTsigKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTsigKeysTsigKeyArrayInput)(nil)).Elem(), GetTsigKeysTsigKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetViewsFilterInput)(nil)).Elem(), GetViewsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetViewsFilterArrayInput)(nil)).Elem(), GetViewsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetViewsViewInput)(nil)).Elem(), GetViewsViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetViewsViewArrayInput)(nil)).Elem(), GetViewsViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesFilterInput)(nil)).Elem(), GetZonesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesFilterArrayInput)(nil)).Elem(), GetZonesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInput)(nil)).Elem(), GetZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneArrayInput)(nil)).Elem(), GetZonesZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneDnssecConfigInput)(nil)).Elem(), GetZonesZoneDnssecConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneDnssecConfigArrayInput)(nil)).Elem(), GetZonesZoneDnssecConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneDnssecConfigKskDnssecKeyVersionInput)(nil)).Elem(), GetZonesZoneDnssecConfigKskDnssecKeyVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayInput)(nil)).Elem(), GetZonesZoneDnssecConfigKskDnssecKeyVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataInput)(nil)).Elem(), GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayInput)(nil)).Elem(), GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneDnssecConfigZskDnssecKeyVersionInput)(nil)).Elem(), GetZonesZoneDnssecConfigZskDnssecKeyVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayInput)(nil)).Elem(), GetZonesZoneDnssecConfigZskDnssecKeyVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneExternalDownstreamInput)(nil)).Elem(), GetZonesZoneExternalDownstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneExternalDownstreamArrayInput)(nil)).Elem(), GetZonesZoneExternalDownstreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneExternalMasterInput)(nil)).Elem(), GetZonesZoneExternalMasterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneExternalMasterArrayInput)(nil)).Elem(), GetZonesZoneExternalMasterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneNameserverInput)(nil)).Elem(), GetZonesZoneNameserverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneNameserverArrayInput)(nil)).Elem(), GetZonesZoneNameserverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneZoneTransferServerInput)(nil)).Elem(), GetZonesZoneZoneTransferServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneZoneTransferServerArrayInput)(nil)).Elem(), GetZonesZoneZoneTransferServerArray{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileDnssecConfigOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileDnssecConfigArrayOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionArrayOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileDnssecConfigKskDnssecKeyVersionDsDataArrayOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileDnssecConfigZskDnssecKeyVersionArrayOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileExternalDownstreamOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileExternalDownstreamArrayOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileExternalMasterOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileExternalMasterArrayOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileNameserverOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileNameserverArrayOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileZoneTransferServerOutput{})
	pulumi.RegisterOutputType(ActionCreateZoneFromZoneFileZoneTransferServerArrayOutput{})
	pulumi.RegisterOutputType(ResolverAttachedViewOutput{})
	pulumi.RegisterOutputType(ResolverAttachedViewArrayOutput{})
	pulumi.RegisterOutputType(ResolverEndpointTypeOutput{})
	pulumi.RegisterOutputType(ResolverEndpointTypeArrayOutput{})
	pulumi.RegisterOutputType(ResolverRuleOutput{})
	pulumi.RegisterOutputType(ResolverRuleArrayOutput{})
	pulumi.RegisterOutputType(RrsetItemOutput{})
	pulumi.RegisterOutputType(RrsetItemArrayOutput{})
	pulumi.RegisterOutputType(SteeringPolicyAnswerOutput{})
	pulumi.RegisterOutputType(SteeringPolicyAnswerArrayOutput{})
	pulumi.RegisterOutputType(SteeringPolicyRuleOutput{})
	pulumi.RegisterOutputType(SteeringPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(SteeringPolicyRuleCaseOutput{})
	pulumi.RegisterOutputType(SteeringPolicyRuleCaseArrayOutput{})
	pulumi.RegisterOutputType(SteeringPolicyRuleCaseAnswerDataOutput{})
	pulumi.RegisterOutputType(SteeringPolicyRuleCaseAnswerDataArrayOutput{})
	pulumi.RegisterOutputType(SteeringPolicyRuleDefaultAnswerDataOutput{})
	pulumi.RegisterOutputType(SteeringPolicyRuleDefaultAnswerDataArrayOutput{})
	pulumi.RegisterOutputType(ZoneDnssecConfigOutput{})
	pulumi.RegisterOutputType(ZoneDnssecConfigArrayOutput{})
	pulumi.RegisterOutputType(ZoneDnssecConfigKskDnssecKeyVersionOutput{})
	pulumi.RegisterOutputType(ZoneDnssecConfigKskDnssecKeyVersionArrayOutput{})
	pulumi.RegisterOutputType(ZoneDnssecConfigKskDnssecKeyVersionDsDataOutput{})
	pulumi.RegisterOutputType(ZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput{})
	pulumi.RegisterOutputType(ZoneDnssecConfigZskDnssecKeyVersionOutput{})
	pulumi.RegisterOutputType(ZoneDnssecConfigZskDnssecKeyVersionArrayOutput{})
	pulumi.RegisterOutputType(ZoneExternalDownstreamOutput{})
	pulumi.RegisterOutputType(ZoneExternalDownstreamArrayOutput{})
	pulumi.RegisterOutputType(ZoneExternalMasterOutput{})
	pulumi.RegisterOutputType(ZoneExternalMasterArrayOutput{})
	pulumi.RegisterOutputType(ZoneNameserverOutput{})
	pulumi.RegisterOutputType(ZoneNameserverArrayOutput{})
	pulumi.RegisterOutputType(ZoneZoneTransferServerOutput{})
	pulumi.RegisterOutputType(ZoneZoneTransferServerArrayOutput{})
	pulumi.RegisterOutputType(GetRecordsFilterOutput{})
	pulumi.RegisterOutputType(GetRecordsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRecordsRecordOutput{})
	pulumi.RegisterOutputType(GetRecordsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetResolverAttachedViewOutput{})
	pulumi.RegisterOutputType(GetResolverAttachedViewArrayOutput{})
	pulumi.RegisterOutputType(GetResolverEndpointTypeOutput{})
	pulumi.RegisterOutputType(GetResolverEndpointTypeArrayOutput{})
	pulumi.RegisterOutputType(GetResolverEndpointsFilterOutput{})
	pulumi.RegisterOutputType(GetResolverEndpointsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetResolverEndpointsResolverEndpointOutput{})
	pulumi.RegisterOutputType(GetResolverEndpointsResolverEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetResolverRuleOutput{})
	pulumi.RegisterOutputType(GetResolverRuleArrayOutput{})
	pulumi.RegisterOutputType(GetResolversFilterOutput{})
	pulumi.RegisterOutputType(GetResolversFilterArrayOutput{})
	pulumi.RegisterOutputType(GetResolversResolverOutput{})
	pulumi.RegisterOutputType(GetResolversResolverArrayOutput{})
	pulumi.RegisterOutputType(GetResolversResolverAttachedViewOutput{})
	pulumi.RegisterOutputType(GetResolversResolverAttachedViewArrayOutput{})
	pulumi.RegisterOutputType(GetResolversResolverEndpointOutput{})
	pulumi.RegisterOutputType(GetResolversResolverEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetResolversResolverRuleOutput{})
	pulumi.RegisterOutputType(GetResolversResolverRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRrsetItemOutput{})
	pulumi.RegisterOutputType(GetRrsetItemArrayOutput{})
	pulumi.RegisterOutputType(GetRrsetsFilterOutput{})
	pulumi.RegisterOutputType(GetRrsetsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRrsetsRrsetOutput{})
	pulumi.RegisterOutputType(GetRrsetsRrsetArrayOutput{})
	pulumi.RegisterOutputType(GetRrsetsRrsetItemOutput{})
	pulumi.RegisterOutputType(GetRrsetsRrsetItemArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesFilterOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyAnswerOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyAnswerArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyRuleOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyRuleCaseOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyRuleCaseArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyRuleCaseAnswerDataArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataOutput{})
	pulumi.RegisterOutputType(GetSteeringPoliciesSteeringPolicyRuleDefaultAnswerDataArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyAnswerOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyAnswerArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyAttachmentsFilterOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyAttachmentsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyAttachmentsSteeringPolicyAttachmentOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyAttachmentsSteeringPolicyAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyRuleOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyRuleCaseOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyRuleCaseArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyRuleCaseAnswerDataOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyRuleCaseAnswerDataArrayOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyRuleDefaultAnswerDataOutput{})
	pulumi.RegisterOutputType(GetSteeringPolicyRuleDefaultAnswerDataArrayOutput{})
	pulumi.RegisterOutputType(GetTsigKeysFilterOutput{})
	pulumi.RegisterOutputType(GetTsigKeysFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTsigKeysTsigKeyOutput{})
	pulumi.RegisterOutputType(GetTsigKeysTsigKeyArrayOutput{})
	pulumi.RegisterOutputType(GetViewsFilterOutput{})
	pulumi.RegisterOutputType(GetViewsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetViewsViewOutput{})
	pulumi.RegisterOutputType(GetViewsViewArrayOutput{})
	pulumi.RegisterOutputType(GetZonesFilterOutput{})
	pulumi.RegisterOutputType(GetZonesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneDnssecConfigOutput{})
	pulumi.RegisterOutputType(GetZonesZoneDnssecConfigArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneDnssecConfigKskDnssecKeyVersionOutput{})
	pulumi.RegisterOutputType(GetZonesZoneDnssecConfigKskDnssecKeyVersionArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataOutput{})
	pulumi.RegisterOutputType(GetZonesZoneDnssecConfigKskDnssecKeyVersionDsDataArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneDnssecConfigZskDnssecKeyVersionOutput{})
	pulumi.RegisterOutputType(GetZonesZoneDnssecConfigZskDnssecKeyVersionArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneExternalDownstreamOutput{})
	pulumi.RegisterOutputType(GetZonesZoneExternalDownstreamArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneExternalMasterOutput{})
	pulumi.RegisterOutputType(GetZonesZoneExternalMasterArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneNameserverOutput{})
	pulumi.RegisterOutputType(GetZonesZoneNameserverArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneZoneTransferServerOutput{})
	pulumi.RegisterOutputType(GetZonesZoneZoneTransferServerArrayOutput{})
}
