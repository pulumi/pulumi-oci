// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Zone resource in Oracle Cloud Infrastructure DNS service.
//
// Creates a new zone in the specified compartment. For global zones, if the `Content-Type` header for the request
// is `text/dns`, the `compartmentId` query parameter is required. `text/dns` for the `Content-Type` header is
// not supported for private zones. Query parameter scope with a value of `PRIVATE` is required when creating a
// private zone. Private zones must have a zone type of `PRIMARY`. Creating a private zone at or under
// `oraclevcn.com` within the default protected view of a VCN-dedicated resolver is not permitted.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Dns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dns.NewZone(ctx, "testZone", &Dns.ZoneArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				ZoneType:      pulumi.Any(_var.Zone_zone_type),
//				DefinedTags:   pulumi.Any(_var.Zone_defined_tags),
//				ExternalDownstreams: dns.ZoneExternalDownstreamArray{
//					&dns.ZoneExternalDownstreamArgs{
//						Address:   pulumi.Any(_var.Zone_external_downstreams_address),
//						Port:      pulumi.Any(_var.Zone_external_downstreams_port),
//						TsigKeyId: pulumi.Any(oci_dns_tsig_key.Test_tsig_key.Id),
//					},
//				},
//				ExternalMasters: dns.ZoneExternalMasterArray{
//					&dns.ZoneExternalMasterArgs{
//						Address:   pulumi.Any(_var.Zone_external_masters_address),
//						Port:      pulumi.Any(_var.Zone_external_masters_port),
//						TsigKeyId: pulumi.Any(oci_dns_tsig_key.Test_tsig_key.Id),
//					},
//				},
//				FreeformTags: pulumi.Any(_var.Zone_freeform_tags),
//				Scope:        pulumi.Any(_var.Zone_scope),
//				ViewId:       pulumi.Any(oci_dns_view.Test_view.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Zones can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import oci:Dns/zone:Zone test_zone "id"
//
// ```
type Zone struct {
	pulumi.CustomResourceState

	// (Updatable) The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	//
	// **Example:** `{"Operations": {"CostCenter": "42"}}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
	ExternalDownstreams ZoneExternalDownstreamArrayOutput `pulumi:"externalDownstreams"`
	// (Updatable) External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
	ExternalMasters ZoneExternalMasterArrayOutput `pulumi:"externalMasters"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	//
	// **Example:** `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected pulumi.BoolOutput `pulumi:"isProtected"`
	// The name of the zone.
	Name pulumi.StringOutput `pulumi:"name"`
	// The authoritative nameservers for the zone.
	Nameservers ZoneNameserverArrayOutput `pulumi:"nameservers"`
	// Specifies to operate only on resources that have a matching DNS scope.
	// This value will be null for zones in the global DNS and `PRIVATE` when creating a private zone.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self pulumi.StringOutput `pulumi:"self"`
	// The current serial of the zone. As seen in the zone's SOA record.
	Serial pulumi.IntOutput `pulumi:"serial"`
	// The current state of the zone resource.
	State pulumi.StringOutput `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
	Version pulumi.StringOutput `pulumi:"version"`
	// The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
	ViewId pulumi.StringPtrOutput `pulumi:"viewId"`
	// The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
	ZoneTransferServers ZoneZoneTransferServerArrayOutput `pulumi:"zoneTransferServers"`
	// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ZoneType pulumi.StringOutput `pulumi:"zoneType"`
}

// NewZone registers a new resource with the given unique name, arguments, and options.
func NewZone(ctx *pulumi.Context,
	name string, args *ZoneArgs, opts ...pulumi.ResourceOption) (*Zone, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ZoneType == nil {
		return nil, errors.New("invalid value for required argument 'ZoneType'")
	}
	var resource Zone
	err := ctx.RegisterResource("oci:Dns/zone:Zone", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZone gets an existing Zone resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZone(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZoneState, opts ...pulumi.ResourceOption) (*Zone, error) {
	var resource Zone
	err := ctx.ReadResource("oci:Dns/zone:Zone", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Zone resources.
type zoneState struct {
	// (Updatable) The OCID of the compartment the resource belongs to.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	//
	// **Example:** `{"Operations": {"CostCenter": "42"}}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
	ExternalDownstreams []ZoneExternalDownstream `pulumi:"externalDownstreams"`
	// (Updatable) External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
	ExternalMasters []ZoneExternalMaster `pulumi:"externalMasters"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	//
	// **Example:** `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected *bool `pulumi:"isProtected"`
	// The name of the zone.
	Name *string `pulumi:"name"`
	// The authoritative nameservers for the zone.
	Nameservers []ZoneNameserver `pulumi:"nameservers"`
	// Specifies to operate only on resources that have a matching DNS scope.
	// This value will be null for zones in the global DNS and `PRIVATE` when creating a private zone.
	Scope *string `pulumi:"scope"`
	// The canonical absolute URL of the resource.
	Self *string `pulumi:"self"`
	// The current serial of the zone. As seen in the zone's SOA record.
	Serial *int `pulumi:"serial"`
	// The current state of the zone resource.
	State *string `pulumi:"state"`
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated *string `pulumi:"timeCreated"`
	// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
	Version *string `pulumi:"version"`
	// The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
	ViewId *string `pulumi:"viewId"`
	// The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
	ZoneTransferServers []ZoneZoneTransferServer `pulumi:"zoneTransferServers"`
	// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ZoneType *string `pulumi:"zoneType"`
}

type ZoneState struct {
	// (Updatable) The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	//
	// **Example:** `{"Operations": {"CostCenter": "42"}}`
	DefinedTags pulumi.MapInput
	// (Updatable) External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
	ExternalDownstreams ZoneExternalDownstreamArrayInput
	// (Updatable) External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
	ExternalMasters ZoneExternalMasterArrayInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	//
	// **Example:** `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
	IsProtected pulumi.BoolPtrInput
	// The name of the zone.
	Name pulumi.StringPtrInput
	// The authoritative nameservers for the zone.
	Nameservers ZoneNameserverArrayInput
	// Specifies to operate only on resources that have a matching DNS scope.
	// This value will be null for zones in the global DNS and `PRIVATE` when creating a private zone.
	Scope pulumi.StringPtrInput
	// The canonical absolute URL of the resource.
	Self pulumi.StringPtrInput
	// The current serial of the zone. As seen in the zone's SOA record.
	Serial pulumi.IntPtrInput
	// The current state of the zone resource.
	State pulumi.StringPtrInput
	// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
	TimeCreated pulumi.StringPtrInput
	// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
	Version pulumi.StringPtrInput
	// The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
	ViewId pulumi.StringPtrInput
	// The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
	ZoneTransferServers ZoneZoneTransferServerArrayInput
	// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ZoneType pulumi.StringPtrInput
}

func (ZoneState) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneState)(nil)).Elem()
}

type zoneArgs struct {
	// (Updatable) The OCID of the compartment the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	//
	// **Example:** `{"Operations": {"CostCenter": "42"}}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
	ExternalDownstreams []ZoneExternalDownstream `pulumi:"externalDownstreams"`
	// (Updatable) External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
	ExternalMasters []ZoneExternalMaster `pulumi:"externalMasters"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	//
	// **Example:** `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The name of the zone.
	Name *string `pulumi:"name"`
	// Specifies to operate only on resources that have a matching DNS scope.
	// This value will be null for zones in the global DNS and `PRIVATE` when creating a private zone.
	Scope *string `pulumi:"scope"`
	// The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
	ViewId *string `pulumi:"viewId"`
	// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ZoneType string `pulumi:"zoneType"`
}

// The set of arguments for constructing a Zone resource.
type ZoneArgs struct {
	// (Updatable) The OCID of the compartment the resource belongs to.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	//
	// **Example:** `{"Operations": {"CostCenter": "42"}}`
	DefinedTags pulumi.MapInput
	// (Updatable) External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
	ExternalDownstreams ZoneExternalDownstreamArrayInput
	// (Updatable) External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
	ExternalMasters ZoneExternalMasterArrayInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
	//
	// **Example:** `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The name of the zone.
	Name pulumi.StringPtrInput
	// Specifies to operate only on resources that have a matching DNS scope.
	// This value will be null for zones in the global DNS and `PRIVATE` when creating a private zone.
	Scope pulumi.StringPtrInput
	// The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
	ViewId pulumi.StringPtrInput
	// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	ZoneType pulumi.StringInput
}

func (ZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneArgs)(nil)).Elem()
}

type ZoneInput interface {
	pulumi.Input

	ToZoneOutput() ZoneOutput
	ToZoneOutputWithContext(ctx context.Context) ZoneOutput
}

func (*Zone) ElementType() reflect.Type {
	return reflect.TypeOf((**Zone)(nil)).Elem()
}

func (i *Zone) ToZoneOutput() ZoneOutput {
	return i.ToZoneOutputWithContext(context.Background())
}

func (i *Zone) ToZoneOutputWithContext(ctx context.Context) ZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneOutput)
}

// ZoneArrayInput is an input type that accepts ZoneArray and ZoneArrayOutput values.
// You can construct a concrete instance of `ZoneArrayInput` via:
//
//	ZoneArray{ ZoneArgs{...} }
type ZoneArrayInput interface {
	pulumi.Input

	ToZoneArrayOutput() ZoneArrayOutput
	ToZoneArrayOutputWithContext(context.Context) ZoneArrayOutput
}

type ZoneArray []ZoneInput

func (ZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Zone)(nil)).Elem()
}

func (i ZoneArray) ToZoneArrayOutput() ZoneArrayOutput {
	return i.ToZoneArrayOutputWithContext(context.Background())
}

func (i ZoneArray) ToZoneArrayOutputWithContext(ctx context.Context) ZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneArrayOutput)
}

// ZoneMapInput is an input type that accepts ZoneMap and ZoneMapOutput values.
// You can construct a concrete instance of `ZoneMapInput` via:
//
//	ZoneMap{ "key": ZoneArgs{...} }
type ZoneMapInput interface {
	pulumi.Input

	ToZoneMapOutput() ZoneMapOutput
	ToZoneMapOutputWithContext(context.Context) ZoneMapOutput
}

type ZoneMap map[string]ZoneInput

func (ZoneMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Zone)(nil)).Elem()
}

func (i ZoneMap) ToZoneMapOutput() ZoneMapOutput {
	return i.ToZoneMapOutputWithContext(context.Background())
}

func (i ZoneMap) ToZoneMapOutputWithContext(ctx context.Context) ZoneMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneMapOutput)
}

type ZoneOutput struct{ *pulumi.OutputState }

func (ZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Zone)(nil)).Elem()
}

func (o ZoneOutput) ToZoneOutput() ZoneOutput {
	return o
}

func (o ZoneOutput) ToZoneOutputWithContext(ctx context.Context) ZoneOutput {
	return o
}

// (Updatable) The OCID of the compartment the resource belongs to.
func (o ZoneOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
//
// **Example:** `{"Operations": {"CostCenter": "42"}}`
func (o ZoneOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Zone) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
func (o ZoneOutput) ExternalDownstreams() ZoneExternalDownstreamArrayOutput {
	return o.ApplyT(func(v *Zone) ZoneExternalDownstreamArrayOutput { return v.ExternalDownstreams }).(ZoneExternalDownstreamArrayOutput)
}

// (Updatable) External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
func (o ZoneOutput) ExternalMasters() ZoneExternalMasterArrayOutput {
	return o.ApplyT(func(v *Zone) ZoneExternalMasterArrayOutput { return v.ExternalMasters }).(ZoneExternalMasterArrayOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
//
// **Example:** `{"Department": "Finance"}`
func (o ZoneOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *Zone) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
func (o ZoneOutput) IsProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v *Zone) pulumi.BoolOutput { return v.IsProtected }).(pulumi.BoolOutput)
}

// The name of the zone.
func (o ZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The authoritative nameservers for the zone.
func (o ZoneOutput) Nameservers() ZoneNameserverArrayOutput {
	return o.ApplyT(func(v *Zone) ZoneNameserverArrayOutput { return v.Nameservers }).(ZoneNameserverArrayOutput)
}

// Specifies to operate only on resources that have a matching DNS scope.
// This value will be null for zones in the global DNS and `PRIVATE` when creating a private zone.
func (o ZoneOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

// The canonical absolute URL of the resource.
func (o ZoneOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.Self }).(pulumi.StringOutput)
}

// The current serial of the zone. As seen in the zone's SOA record.
func (o ZoneOutput) Serial() pulumi.IntOutput {
	return o.ApplyT(func(v *Zone) pulumi.IntOutput { return v.Serial }).(pulumi.IntOutput)
}

// The current state of the zone resource.
func (o ZoneOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
func (o ZoneOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
func (o ZoneOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

// The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
func (o ZoneOutput) ViewId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringPtrOutput { return v.ViewId }).(pulumi.StringPtrOutput)
}

// The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
func (o ZoneOutput) ZoneTransferServers() ZoneZoneTransferServerArrayOutput {
	return o.ApplyT(func(v *Zone) ZoneZoneTransferServerArrayOutput { return v.ZoneTransferServers }).(ZoneZoneTransferServerArrayOutput)
}

// The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o ZoneOutput) ZoneType() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.ZoneType }).(pulumi.StringOutput)
}

type ZoneArrayOutput struct{ *pulumi.OutputState }

func (ZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Zone)(nil)).Elem()
}

func (o ZoneArrayOutput) ToZoneArrayOutput() ZoneArrayOutput {
	return o
}

func (o ZoneArrayOutput) ToZoneArrayOutputWithContext(ctx context.Context) ZoneArrayOutput {
	return o
}

func (o ZoneArrayOutput) Index(i pulumi.IntInput) ZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Zone {
		return vs[0].([]*Zone)[vs[1].(int)]
	}).(ZoneOutput)
}

type ZoneMapOutput struct{ *pulumi.OutputState }

func (ZoneMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Zone)(nil)).Elem()
}

func (o ZoneMapOutput) ToZoneMapOutput() ZoneMapOutput {
	return o
}

func (o ZoneMapOutput) ToZoneMapOutputWithContext(ctx context.Context) ZoneMapOutput {
	return o
}

func (o ZoneMapOutput) MapIndex(k pulumi.StringInput) ZoneOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Zone {
		return vs[0].(map[string]*Zone)[vs[1].(string)]
	}).(ZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneInput)(nil)).Elem(), &Zone{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneArrayInput)(nil)).Elem(), ZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneMapInput)(nil)).Elem(), ZoneMap{})
	pulumi.RegisterOutputType(ZoneOutput{})
	pulumi.RegisterOutputType(ZoneArrayOutput{})
	pulumi.RegisterOutputType(ZoneMapOutput{})
}
