// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package email

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Email Domain resource in Oracle Cloud Infrastructure Email service.
//
// Creates a new email domain. Avoid entering confidential information.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Email"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Email.NewEmailDomain(ctx, "testEmailDomain", &Email.EmailDomainArgs{
//				CompartmentId: pulumi.Any(_var.Compartment_id),
//				DefinedTags: pulumi.Map{
//					"Operations.CostCenter": pulumi.Any("42"),
//				},
//				Description: pulumi.Any(_var.Email_domain_description),
//				FreeformTags: pulumi.Map{
//					"Department": pulumi.Any("Finance"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// EmailDomains can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:Email/emailDomain:EmailDomain test_email_domain "id"
// ```
type EmailDomain struct {
	pulumi.CustomResourceState

	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DKIM key that will be used to sign mail sent from this email domain.
	ActiveDkimId pulumi.StringOutput `pulumi:"activeDkimId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this email domain.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapOutput `pulumi:"definedTags"`
	// (Updatable) A string that describes the details about the domain. It does not have to be unique, and you can change it. Avoid entering confidential information.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapOutput `pulumi:"freeformTags"`
	// Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
	IsSpf pulumi.BoolOutput `pulumi:"isSpf"`
	// The name of the email domain in the Internet Domain Name System (DNS). The email domain name must be unique in the region for this tenancy. Domain names limited to ASCII characters use alphanumeric, dash ("-"), and dot (".") characters. The dash and dot are only allowed between alphanumeric characters. For details, please see: https://tools.ietf.org/html/rfc5321#section-4.1.2 Non-ASCII domain names should adopt IDNA2008 normalization (RFC 5891-5892).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name pulumi.StringOutput `pulumi:"name"`
	// The current state of the email domain.
	State pulumi.StringOutput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapOutput `pulumi:"systemTags"`
	// The time the email domain was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".  Example: `2021-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewEmailDomain registers a new resource with the given unique name, arguments, and options.
func NewEmailDomain(ctx *pulumi.Context,
	name string, args *EmailDomainArgs, opts ...pulumi.ResourceOption) (*EmailDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EmailDomain
	err := ctx.RegisterResource("oci:Email/emailDomain:EmailDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailDomain gets an existing EmailDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EmailDomainState, opts ...pulumi.ResourceOption) (*EmailDomain, error) {
	var resource EmailDomain
	err := ctx.ReadResource("oci:Email/emailDomain:EmailDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EmailDomain resources.
type emailDomainState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DKIM key that will be used to sign mail sent from this email domain.
	ActiveDkimId *string `pulumi:"activeDkimId"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this email domain.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A string that describes the details about the domain. It does not have to be unique, and you can change it. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
	IsSpf *bool `pulumi:"isSpf"`
	// The name of the email domain in the Internet Domain Name System (DNS). The email domain name must be unique in the region for this tenancy. Domain names limited to ASCII characters use alphanumeric, dash ("-"), and dot (".") characters. The dash and dot are only allowed between alphanumeric characters. For details, please see: https://tools.ietf.org/html/rfc5321#section-4.1.2 Non-ASCII domain names should adopt IDNA2008 normalization (RFC 5891-5892).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name *string `pulumi:"name"`
	// The current state of the email domain.
	State *string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the email domain was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".  Example: `2021-02-12T22:47:12.613Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type EmailDomainState struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DKIM key that will be used to sign mail sent from this email domain.
	ActiveDkimId pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this email domain.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A string that describes the details about the domain. It does not have to be unique, and you can change it. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
	IsSpf pulumi.BoolPtrInput
	// The name of the email domain in the Internet Domain Name System (DNS). The email domain name must be unique in the region for this tenancy. Domain names limited to ASCII characters use alphanumeric, dash ("-"), and dot (".") characters. The dash and dot are only allowed between alphanumeric characters. For details, please see: https://tools.ietf.org/html/rfc5321#section-4.1.2 Non-ASCII domain names should adopt IDNA2008 normalization (RFC 5891-5892).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name pulumi.StringPtrInput
	// The current state of the email domain.
	State pulumi.StringPtrInput
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput
	// The time the email domain was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".  Example: `2021-02-12T22:47:12.613Z`
	TimeCreated pulumi.StringPtrInput
}

func (EmailDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*emailDomainState)(nil)).Elem()
}

type emailDomainArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this email domain.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// (Updatable) A string that describes the details about the domain. It does not have to be unique, and you can change it. Avoid entering confidential information.
	Description *string `pulumi:"description"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// The name of the email domain in the Internet Domain Name System (DNS). The email domain name must be unique in the region for this tenancy. Domain names limited to ASCII characters use alphanumeric, dash ("-"), and dot (".") characters. The dash and dot are only allowed between alphanumeric characters. For details, please see: https://tools.ietf.org/html/rfc5321#section-4.1.2 Non-ASCII domain names should adopt IDNA2008 normalization (RFC 5891-5892).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a EmailDomain resource.
type EmailDomainArgs struct {
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this email domain.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.MapInput
	// (Updatable) A string that describes the details about the domain. It does not have to be unique, and you can change it. Avoid entering confidential information.
	Description pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
	FreeformTags pulumi.MapInput
	// The name of the email domain in the Internet Domain Name System (DNS). The email domain name must be unique in the region for this tenancy. Domain names limited to ASCII characters use alphanumeric, dash ("-"), and dot (".") characters. The dash and dot are only allowed between alphanumeric characters. For details, please see: https://tools.ietf.org/html/rfc5321#section-4.1.2 Non-ASCII domain names should adopt IDNA2008 normalization (RFC 5891-5892).
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Name pulumi.StringPtrInput
}

func (EmailDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*emailDomainArgs)(nil)).Elem()
}

type EmailDomainInput interface {
	pulumi.Input

	ToEmailDomainOutput() EmailDomainOutput
	ToEmailDomainOutputWithContext(ctx context.Context) EmailDomainOutput
}

func (*EmailDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailDomain)(nil)).Elem()
}

func (i *EmailDomain) ToEmailDomainOutput() EmailDomainOutput {
	return i.ToEmailDomainOutputWithContext(context.Background())
}

func (i *EmailDomain) ToEmailDomainOutputWithContext(ctx context.Context) EmailDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailDomainOutput)
}

// EmailDomainArrayInput is an input type that accepts EmailDomainArray and EmailDomainArrayOutput values.
// You can construct a concrete instance of `EmailDomainArrayInput` via:
//
//	EmailDomainArray{ EmailDomainArgs{...} }
type EmailDomainArrayInput interface {
	pulumi.Input

	ToEmailDomainArrayOutput() EmailDomainArrayOutput
	ToEmailDomainArrayOutputWithContext(context.Context) EmailDomainArrayOutput
}

type EmailDomainArray []EmailDomainInput

func (EmailDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailDomain)(nil)).Elem()
}

func (i EmailDomainArray) ToEmailDomainArrayOutput() EmailDomainArrayOutput {
	return i.ToEmailDomainArrayOutputWithContext(context.Background())
}

func (i EmailDomainArray) ToEmailDomainArrayOutputWithContext(ctx context.Context) EmailDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailDomainArrayOutput)
}

// EmailDomainMapInput is an input type that accepts EmailDomainMap and EmailDomainMapOutput values.
// You can construct a concrete instance of `EmailDomainMapInput` via:
//
//	EmailDomainMap{ "key": EmailDomainArgs{...} }
type EmailDomainMapInput interface {
	pulumi.Input

	ToEmailDomainMapOutput() EmailDomainMapOutput
	ToEmailDomainMapOutputWithContext(context.Context) EmailDomainMapOutput
}

type EmailDomainMap map[string]EmailDomainInput

func (EmailDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailDomain)(nil)).Elem()
}

func (i EmailDomainMap) ToEmailDomainMapOutput() EmailDomainMapOutput {
	return i.ToEmailDomainMapOutputWithContext(context.Background())
}

func (i EmailDomainMap) ToEmailDomainMapOutputWithContext(ctx context.Context) EmailDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailDomainMapOutput)
}

type EmailDomainOutput struct{ *pulumi.OutputState }

func (EmailDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailDomain)(nil)).Elem()
}

func (o EmailDomainOutput) ToEmailDomainOutput() EmailDomainOutput {
	return o
}

func (o EmailDomainOutput) ToEmailDomainOutputWithContext(ctx context.Context) EmailDomainOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DKIM key that will be used to sign mail sent from this email domain.
func (o EmailDomainOutput) ActiveDkimId() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailDomain) pulumi.StringOutput { return v.ActiveDkimId }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this email domain.
func (o EmailDomainOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailDomain) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
func (o EmailDomainOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v *EmailDomain) pulumi.MapOutput { return v.DefinedTags }).(pulumi.MapOutput)
}

// (Updatable) A string that describes the details about the domain. It does not have to be unique, and you can change it. Avoid entering confidential information.
func (o EmailDomainOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailDomain) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
func (o EmailDomainOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v *EmailDomain) pulumi.MapOutput { return v.FreeformTags }).(pulumi.MapOutput)
}

// Value of the SPF field. For more information about SPF, please see [SPF Authentication](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
func (o EmailDomainOutput) IsSpf() pulumi.BoolOutput {
	return o.ApplyT(func(v *EmailDomain) pulumi.BoolOutput { return v.IsSpf }).(pulumi.BoolOutput)
}

// The name of the email domain in the Internet Domain Name System (DNS). The email domain name must be unique in the region for this tenancy. Domain names limited to ASCII characters use alphanumeric, dash ("-"), and dot (".") characters. The dash and dot are only allowed between alphanumeric characters. For details, please see: https://tools.ietf.org/html/rfc5321#section-4.1.2 Non-ASCII domain names should adopt IDNA2008 normalization (RFC 5891-5892).
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o EmailDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailDomain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The current state of the email domain.
func (o EmailDomainOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailDomain) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o EmailDomainOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v *EmailDomain) pulumi.MapOutput { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the email domain was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, "YYYY-MM-ddThh:mmZ".  Example: `2021-02-12T22:47:12.613Z`
func (o EmailDomainOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailDomain) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type EmailDomainArrayOutput struct{ *pulumi.OutputState }

func (EmailDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailDomain)(nil)).Elem()
}

func (o EmailDomainArrayOutput) ToEmailDomainArrayOutput() EmailDomainArrayOutput {
	return o
}

func (o EmailDomainArrayOutput) ToEmailDomainArrayOutputWithContext(ctx context.Context) EmailDomainArrayOutput {
	return o
}

func (o EmailDomainArrayOutput) Index(i pulumi.IntInput) EmailDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EmailDomain {
		return vs[0].([]*EmailDomain)[vs[1].(int)]
	}).(EmailDomainOutput)
}

type EmailDomainMapOutput struct{ *pulumi.OutputState }

func (EmailDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailDomain)(nil)).Elem()
}

func (o EmailDomainMapOutput) ToEmailDomainMapOutput() EmailDomainMapOutput {
	return o
}

func (o EmailDomainMapOutput) ToEmailDomainMapOutputWithContext(ctx context.Context) EmailDomainMapOutput {
	return o
}

func (o EmailDomainMapOutput) MapIndex(k pulumi.StringInput) EmailDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EmailDomain {
		return vs[0].(map[string]*EmailDomain)[vs[1].(string)]
	}).(EmailDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EmailDomainInput)(nil)).Elem(), &EmailDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailDomainArrayInput)(nil)).Elem(), EmailDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailDomainMapInput)(nil)).Elem(), EmailDomainMap{})
	pulumi.RegisterOutputType(EmailDomainOutput{})
	pulumi.RegisterOutputType(EmailDomainArrayOutput{})
	pulumi.RegisterOutputType(EmailDomainMapOutput{})
}
