// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package email

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Configuration resource in Oracle Cloud Infrastructure Email service.
//
// Returns  email configuration associated with the specified compartment.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Email"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Email.GetConfiguration(ctx, &email.GetConfigurationArgs{
//				CompartmentId: compartmentId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetConfiguration(ctx *pulumi.Context, args *GetConfigurationArgs, opts ...pulumi.InvokeOption) (*GetConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConfigurationResult
	err := ctx.Invoke("oci:Email/getConfiguration:getConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfiguration.
type GetConfigurationArgs struct {
	// The OCID for the compartment.
	CompartmentId string `pulumi:"compartmentId"`
}

// A collection of values returned by getConfiguration.
type GetConfigurationResult struct {
	// The root compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (same as the tenancy OCID)
	CompartmentId string `pulumi:"compartmentId"`
	// Endpoint used to submit emails via the HTTP email submission API
	HttpSubmitEndpoint string `pulumi:"httpSubmitEndpoint"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Endpoint used to submit emails via the standard SMTP submission protocol. Note that TLS 1.2 and standard SMTP authentication is required for submission.
	SmtpSubmitEndpoint string `pulumi:"smtpSubmitEndpoint"`
}

func GetConfigurationOutput(ctx *pulumi.Context, args GetConfigurationOutputArgs, opts ...pulumi.InvokeOption) GetConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConfigurationResult, error) {
			args := v.(GetConfigurationArgs)
			r, err := GetConfiguration(ctx, &args, opts...)
			var s GetConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetConfigurationResultOutput)
}

// A collection of arguments for invoking getConfiguration.
type GetConfigurationOutputArgs struct {
	// The OCID for the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
}

func (GetConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getConfiguration.
type GetConfigurationResultOutput struct{ *pulumi.OutputState }

func (GetConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationResult)(nil)).Elem()
}

func (o GetConfigurationResultOutput) ToGetConfigurationResultOutput() GetConfigurationResultOutput {
	return o
}

func (o GetConfigurationResultOutput) ToGetConfigurationResultOutputWithContext(ctx context.Context) GetConfigurationResultOutput {
	return o
}

// The root compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (same as the tenancy OCID)
func (o GetConfigurationResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Endpoint used to submit emails via the HTTP email submission API
func (o GetConfigurationResultOutput) HttpSubmitEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationResult) string { return v.HttpSubmitEndpoint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Endpoint used to submit emails via the standard SMTP submission protocol. Note that TLS 1.2 and standard SMTP authentication is required for submission.
func (o GetConfigurationResultOutput) SmtpSubmitEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationResult) string { return v.SmtpSubmitEndpoint }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConfigurationResultOutput{})
}
