// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package email

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Senders in Oracle Cloud Infrastructure Email service.
//
// Gets a collection of approved sender email addresses and sender IDs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/go/oci/Email"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Email.GetSenders(ctx, &email.GetSendersArgs{
//				CompartmentId: _var.Compartment_id,
//				Domain:        pulumi.StringRef(_var.Sender_domain),
//				EmailAddress:  pulumi.StringRef(_var.Sender_email_address),
//				State:         pulumi.StringRef(_var.Sender_state),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSenders(ctx *pulumi.Context, args *GetSendersArgs, opts ...pulumi.InvokeOption) (*GetSendersResult, error) {
	var rv GetSendersResult
	err := ctx.Invoke("oci:Email/getSenders:getSenders", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSenders.
type GetSendersArgs struct {
	// The OCID for the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A filter to only return resources that match the given domain exactly.
	Domain *string `pulumi:"domain"`
	// The email address of the approved sender.
	EmailAddress *string            `pulumi:"emailAddress"`
	Filters      []GetSendersFilter `pulumi:"filters"`
	// The current state of a sender.
	State *string `pulumi:"state"`
}

// A collection of values returned by getSenders.
type GetSendersResult struct {
	// The OCID for the compartment.
	CompartmentId string  `pulumi:"compartmentId"`
	Domain        *string `pulumi:"domain"`
	// The email address of the sender.
	EmailAddress *string            `pulumi:"emailAddress"`
	Filters      []GetSendersFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of senders.
	Senders []GetSendersSender `pulumi:"senders"`
	// The current status of the approved sender.
	State *string `pulumi:"state"`
}

func GetSendersOutput(ctx *pulumi.Context, args GetSendersOutputArgs, opts ...pulumi.InvokeOption) GetSendersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSendersResult, error) {
			args := v.(GetSendersArgs)
			r, err := GetSenders(ctx, &args, opts...)
			var s GetSendersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSendersResultOutput)
}

// A collection of arguments for invoking getSenders.
type GetSendersOutputArgs struct {
	// The OCID for the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A filter to only return resources that match the given domain exactly.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The email address of the approved sender.
	EmailAddress pulumi.StringPtrInput      `pulumi:"emailAddress"`
	Filters      GetSendersFilterArrayInput `pulumi:"filters"`
	// The current state of a sender.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetSendersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSendersArgs)(nil)).Elem()
}

// A collection of values returned by getSenders.
type GetSendersResultOutput struct{ *pulumi.OutputState }

func (GetSendersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSendersResult)(nil)).Elem()
}

func (o GetSendersResultOutput) ToGetSendersResultOutput() GetSendersResultOutput {
	return o
}

func (o GetSendersResultOutput) ToGetSendersResultOutputWithContext(ctx context.Context) GetSendersResultOutput {
	return o
}

// The OCID for the compartment.
func (o GetSendersResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSendersResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetSendersResultOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSendersResult) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The email address of the sender.
func (o GetSendersResultOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSendersResult) *string { return v.EmailAddress }).(pulumi.StringPtrOutput)
}

func (o GetSendersResultOutput) Filters() GetSendersFilterArrayOutput {
	return o.ApplyT(func(v GetSendersResult) []GetSendersFilter { return v.Filters }).(GetSendersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSendersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSendersResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of senders.
func (o GetSendersResultOutput) Senders() GetSendersSenderArrayOutput {
	return o.ApplyT(func(v GetSendersResult) []GetSendersSender { return v.Senders }).(GetSendersSenderArrayOutput)
}

// The current status of the approved sender.
func (o GetSendersResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSendersResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSendersResultOutput{})
}
