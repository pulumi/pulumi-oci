// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package emwarehouse

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Em Warehouse resource in Oracle Cloud Infrastructure Em Warehouse service.
//
// Gets a EmWarehouse by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-oci/sdk/go/oci/EmWarehouse"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := EmWarehouse.GetEmWarehouse(ctx, &emwarehouse.GetEmWarehouseArgs{
// 			EmWarehouseId: oci_em_warehouse_em_warehouse.Test_em_warehouse.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupEmWarehouse(ctx *pulumi.Context, args *LookupEmWarehouseArgs, opts ...pulumi.InvokeOption) (*LookupEmWarehouseResult, error) {
	var rv LookupEmWarehouseResult
	err := ctx.Invoke("oci:EmWarehouse/getEmWarehouse:getEmWarehouse", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEmWarehouse.
type LookupEmWarehouseArgs struct {
	// unique EmWarehouse identifier
	EmWarehouseId string `pulumi:"emWarehouseId"`
}

// A collection of values returned by getEmWarehouse.
type LookupEmWarehouseResult struct {
	// Compartment Identifier
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// EmWarehouse Identifier, can be renamed
	DisplayName string `pulumi:"displayName"`
	// EMBridge Identifier
	EmBridgeId    string `pulumi:"emBridgeId"`
	EmWarehouseId string `pulumi:"emWarehouseId"`
	// Type of the EmWarehouse.
	EmWarehouseType string `pulumi:"emWarehouseType"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Unique identifier that is immutable on creation
	Id string `pulumi:"id"`
	// Data Flow Run Status Message
	LatestEtlRunMessage string `pulumi:"latestEtlRunMessage"`
	// Data Flow Run Status
	LatestEtlRunStatus string `pulumi:"latestEtlRunStatus"`
	// Data Flow Run Total Time
	LatestEtlRunTime string `pulumi:"latestEtlRunTime"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// operations Insights Warehouse Identifier
	OperationsInsightsWarehouseId string `pulumi:"operationsInsightsWarehouseId"`
	// The current state of the EmWarehouse.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the EmWarehouse was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the EmWarehouse was updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupEmWarehouseOutput(ctx *pulumi.Context, args LookupEmWarehouseOutputArgs, opts ...pulumi.InvokeOption) LookupEmWarehouseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEmWarehouseResult, error) {
			args := v.(LookupEmWarehouseArgs)
			r, err := LookupEmWarehouse(ctx, &args, opts...)
			var s LookupEmWarehouseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEmWarehouseResultOutput)
}

// A collection of arguments for invoking getEmWarehouse.
type LookupEmWarehouseOutputArgs struct {
	// unique EmWarehouse identifier
	EmWarehouseId pulumi.StringInput `pulumi:"emWarehouseId"`
}

func (LookupEmWarehouseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmWarehouseArgs)(nil)).Elem()
}

// A collection of values returned by getEmWarehouse.
type LookupEmWarehouseResultOutput struct{ *pulumi.OutputState }

func (LookupEmWarehouseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmWarehouseResult)(nil)).Elem()
}

func (o LookupEmWarehouseResultOutput) ToLookupEmWarehouseResultOutput() LookupEmWarehouseResultOutput {
	return o
}

func (o LookupEmWarehouseResultOutput) ToLookupEmWarehouseResultOutputWithContext(ctx context.Context) LookupEmWarehouseResultOutput {
	return o
}

// Compartment Identifier
func (o LookupEmWarehouseResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupEmWarehouseResultOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// EmWarehouse Identifier, can be renamed
func (o LookupEmWarehouseResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// EMBridge Identifier
func (o LookupEmWarehouseResultOutput) EmBridgeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.EmBridgeId }).(pulumi.StringOutput)
}

func (o LookupEmWarehouseResultOutput) EmWarehouseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.EmWarehouseId }).(pulumi.StringOutput)
}

// Type of the EmWarehouse.
func (o LookupEmWarehouseResultOutput) EmWarehouseType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.EmWarehouseType }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupEmWarehouseResultOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Unique identifier that is immutable on creation
func (o LookupEmWarehouseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.Id }).(pulumi.StringOutput)
}

// Data Flow Run Status Message
func (o LookupEmWarehouseResultOutput) LatestEtlRunMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.LatestEtlRunMessage }).(pulumi.StringOutput)
}

// Data Flow Run Status
func (o LookupEmWarehouseResultOutput) LatestEtlRunStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.LatestEtlRunStatus }).(pulumi.StringOutput)
}

// Data Flow Run Total Time
func (o LookupEmWarehouseResultOutput) LatestEtlRunTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.LatestEtlRunTime }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupEmWarehouseResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// operations Insights Warehouse Identifier
func (o LookupEmWarehouseResultOutput) OperationsInsightsWarehouseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.OperationsInsightsWarehouseId }).(pulumi.StringOutput)
}

// The current state of the EmWarehouse.
func (o LookupEmWarehouseResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupEmWarehouseResultOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the the EmWarehouse was created. An RFC3339 formatted datetime string
func (o LookupEmWarehouseResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the EmWarehouse was updated. An RFC3339 formatted datetime string
func (o LookupEmWarehouseResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEmWarehouseResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEmWarehouseResultOutput{})
}
