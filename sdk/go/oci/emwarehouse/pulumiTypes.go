// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emwarehouse

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetEmWarehousesEmWarehouseCollection struct {
	Items []GetEmWarehousesEmWarehouseCollectionItem `pulumi:"items"`
}

// GetEmWarehousesEmWarehouseCollectionInput is an input type that accepts GetEmWarehousesEmWarehouseCollectionArgs and GetEmWarehousesEmWarehouseCollectionOutput values.
// You can construct a concrete instance of `GetEmWarehousesEmWarehouseCollectionInput` via:
//
//	GetEmWarehousesEmWarehouseCollectionArgs{...}
type GetEmWarehousesEmWarehouseCollectionInput interface {
	pulumi.Input

	ToGetEmWarehousesEmWarehouseCollectionOutput() GetEmWarehousesEmWarehouseCollectionOutput
	ToGetEmWarehousesEmWarehouseCollectionOutputWithContext(context.Context) GetEmWarehousesEmWarehouseCollectionOutput
}

type GetEmWarehousesEmWarehouseCollectionArgs struct {
	Items GetEmWarehousesEmWarehouseCollectionItemArrayInput `pulumi:"items"`
}

func (GetEmWarehousesEmWarehouseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEmWarehousesEmWarehouseCollection)(nil)).Elem()
}

func (i GetEmWarehousesEmWarehouseCollectionArgs) ToGetEmWarehousesEmWarehouseCollectionOutput() GetEmWarehousesEmWarehouseCollectionOutput {
	return i.ToGetEmWarehousesEmWarehouseCollectionOutputWithContext(context.Background())
}

func (i GetEmWarehousesEmWarehouseCollectionArgs) ToGetEmWarehousesEmWarehouseCollectionOutputWithContext(ctx context.Context) GetEmWarehousesEmWarehouseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEmWarehousesEmWarehouseCollectionOutput)
}

// GetEmWarehousesEmWarehouseCollectionArrayInput is an input type that accepts GetEmWarehousesEmWarehouseCollectionArray and GetEmWarehousesEmWarehouseCollectionArrayOutput values.
// You can construct a concrete instance of `GetEmWarehousesEmWarehouseCollectionArrayInput` via:
//
//	GetEmWarehousesEmWarehouseCollectionArray{ GetEmWarehousesEmWarehouseCollectionArgs{...} }
type GetEmWarehousesEmWarehouseCollectionArrayInput interface {
	pulumi.Input

	ToGetEmWarehousesEmWarehouseCollectionArrayOutput() GetEmWarehousesEmWarehouseCollectionArrayOutput
	ToGetEmWarehousesEmWarehouseCollectionArrayOutputWithContext(context.Context) GetEmWarehousesEmWarehouseCollectionArrayOutput
}

type GetEmWarehousesEmWarehouseCollectionArray []GetEmWarehousesEmWarehouseCollectionInput

func (GetEmWarehousesEmWarehouseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEmWarehousesEmWarehouseCollection)(nil)).Elem()
}

func (i GetEmWarehousesEmWarehouseCollectionArray) ToGetEmWarehousesEmWarehouseCollectionArrayOutput() GetEmWarehousesEmWarehouseCollectionArrayOutput {
	return i.ToGetEmWarehousesEmWarehouseCollectionArrayOutputWithContext(context.Background())
}

func (i GetEmWarehousesEmWarehouseCollectionArray) ToGetEmWarehousesEmWarehouseCollectionArrayOutputWithContext(ctx context.Context) GetEmWarehousesEmWarehouseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEmWarehousesEmWarehouseCollectionArrayOutput)
}

type GetEmWarehousesEmWarehouseCollectionOutput struct{ *pulumi.OutputState }

func (GetEmWarehousesEmWarehouseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEmWarehousesEmWarehouseCollection)(nil)).Elem()
}

func (o GetEmWarehousesEmWarehouseCollectionOutput) ToGetEmWarehousesEmWarehouseCollectionOutput() GetEmWarehousesEmWarehouseCollectionOutput {
	return o
}

func (o GetEmWarehousesEmWarehouseCollectionOutput) ToGetEmWarehousesEmWarehouseCollectionOutputWithContext(ctx context.Context) GetEmWarehousesEmWarehouseCollectionOutput {
	return o
}

func (o GetEmWarehousesEmWarehouseCollectionOutput) Items() GetEmWarehousesEmWarehouseCollectionItemArrayOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollection) []GetEmWarehousesEmWarehouseCollectionItem {
		return v.Items
	}).(GetEmWarehousesEmWarehouseCollectionItemArrayOutput)
}

type GetEmWarehousesEmWarehouseCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetEmWarehousesEmWarehouseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEmWarehousesEmWarehouseCollection)(nil)).Elem()
}

func (o GetEmWarehousesEmWarehouseCollectionArrayOutput) ToGetEmWarehousesEmWarehouseCollectionArrayOutput() GetEmWarehousesEmWarehouseCollectionArrayOutput {
	return o
}

func (o GetEmWarehousesEmWarehouseCollectionArrayOutput) ToGetEmWarehousesEmWarehouseCollectionArrayOutputWithContext(ctx context.Context) GetEmWarehousesEmWarehouseCollectionArrayOutput {
	return o
}

func (o GetEmWarehousesEmWarehouseCollectionArrayOutput) Index(i pulumi.IntInput) GetEmWarehousesEmWarehouseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEmWarehousesEmWarehouseCollection {
		return vs[0].([]GetEmWarehousesEmWarehouseCollection)[vs[1].(int)]
	}).(GetEmWarehousesEmWarehouseCollectionOutput)
}

type GetEmWarehousesEmWarehouseCollectionItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// EMBridge Identifier
	EmBridgeId string `pulumi:"emBridgeId"`
	// Type of the EmWarehouse.
	EmWarehouseType string `pulumi:"emWarehouseType"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// unique EmWarehouse identifier
	Id string `pulumi:"id"`
	// Data Flow Run Status Message
	LatestEtlRunMessage string `pulumi:"latestEtlRunMessage"`
	// Data Flow Run Status
	LatestEtlRunStatus string `pulumi:"latestEtlRunStatus"`
	// Data Flow Run Total Time
	LatestEtlRunTime string `pulumi:"latestEtlRunTime"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// unique operationsInsightsWarehouseId identifier
	OperationsInsightsWarehouseId string `pulumi:"operationsInsightsWarehouseId"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State string `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]interface{} `pulumi:"systemTags"`
	// The time the the EmWarehouse was created. An RFC3339 formatted datetime string
	TimeCreated string `pulumi:"timeCreated"`
	// The time the EmWarehouse was updated. An RFC3339 formatted datetime string
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetEmWarehousesEmWarehouseCollectionItemInput is an input type that accepts GetEmWarehousesEmWarehouseCollectionItemArgs and GetEmWarehousesEmWarehouseCollectionItemOutput values.
// You can construct a concrete instance of `GetEmWarehousesEmWarehouseCollectionItemInput` via:
//
//	GetEmWarehousesEmWarehouseCollectionItemArgs{...}
type GetEmWarehousesEmWarehouseCollectionItemInput interface {
	pulumi.Input

	ToGetEmWarehousesEmWarehouseCollectionItemOutput() GetEmWarehousesEmWarehouseCollectionItemOutput
	ToGetEmWarehousesEmWarehouseCollectionItemOutputWithContext(context.Context) GetEmWarehousesEmWarehouseCollectionItemOutput
}

type GetEmWarehousesEmWarehouseCollectionItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// EMBridge Identifier
	EmBridgeId pulumi.StringInput `pulumi:"emBridgeId"`
	// Type of the EmWarehouse.
	EmWarehouseType pulumi.StringInput `pulumi:"emWarehouseType"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// unique EmWarehouse identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Data Flow Run Status Message
	LatestEtlRunMessage pulumi.StringInput `pulumi:"latestEtlRunMessage"`
	// Data Flow Run Status
	LatestEtlRunStatus pulumi.StringInput `pulumi:"latestEtlRunStatus"`
	// Data Flow Run Total Time
	LatestEtlRunTime pulumi.StringInput `pulumi:"latestEtlRunTime"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// unique operationsInsightsWarehouseId identifier
	OperationsInsightsWarehouseId pulumi.StringInput `pulumi:"operationsInsightsWarehouseId"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringInput `pulumi:"state"`
	// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.MapInput `pulumi:"systemTags"`
	// The time the the EmWarehouse was created. An RFC3339 formatted datetime string
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The time the EmWarehouse was updated. An RFC3339 formatted datetime string
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetEmWarehousesEmWarehouseCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEmWarehousesEmWarehouseCollectionItem)(nil)).Elem()
}

func (i GetEmWarehousesEmWarehouseCollectionItemArgs) ToGetEmWarehousesEmWarehouseCollectionItemOutput() GetEmWarehousesEmWarehouseCollectionItemOutput {
	return i.ToGetEmWarehousesEmWarehouseCollectionItemOutputWithContext(context.Background())
}

func (i GetEmWarehousesEmWarehouseCollectionItemArgs) ToGetEmWarehousesEmWarehouseCollectionItemOutputWithContext(ctx context.Context) GetEmWarehousesEmWarehouseCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEmWarehousesEmWarehouseCollectionItemOutput)
}

// GetEmWarehousesEmWarehouseCollectionItemArrayInput is an input type that accepts GetEmWarehousesEmWarehouseCollectionItemArray and GetEmWarehousesEmWarehouseCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetEmWarehousesEmWarehouseCollectionItemArrayInput` via:
//
//	GetEmWarehousesEmWarehouseCollectionItemArray{ GetEmWarehousesEmWarehouseCollectionItemArgs{...} }
type GetEmWarehousesEmWarehouseCollectionItemArrayInput interface {
	pulumi.Input

	ToGetEmWarehousesEmWarehouseCollectionItemArrayOutput() GetEmWarehousesEmWarehouseCollectionItemArrayOutput
	ToGetEmWarehousesEmWarehouseCollectionItemArrayOutputWithContext(context.Context) GetEmWarehousesEmWarehouseCollectionItemArrayOutput
}

type GetEmWarehousesEmWarehouseCollectionItemArray []GetEmWarehousesEmWarehouseCollectionItemInput

func (GetEmWarehousesEmWarehouseCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEmWarehousesEmWarehouseCollectionItem)(nil)).Elem()
}

func (i GetEmWarehousesEmWarehouseCollectionItemArray) ToGetEmWarehousesEmWarehouseCollectionItemArrayOutput() GetEmWarehousesEmWarehouseCollectionItemArrayOutput {
	return i.ToGetEmWarehousesEmWarehouseCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetEmWarehousesEmWarehouseCollectionItemArray) ToGetEmWarehousesEmWarehouseCollectionItemArrayOutputWithContext(ctx context.Context) GetEmWarehousesEmWarehouseCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEmWarehousesEmWarehouseCollectionItemArrayOutput)
}

type GetEmWarehousesEmWarehouseCollectionItemOutput struct{ *pulumi.OutputState }

func (GetEmWarehousesEmWarehouseCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEmWarehousesEmWarehouseCollectionItem)(nil)).Elem()
}

func (o GetEmWarehousesEmWarehouseCollectionItemOutput) ToGetEmWarehousesEmWarehouseCollectionItemOutput() GetEmWarehousesEmWarehouseCollectionItemOutput {
	return o
}

func (o GetEmWarehousesEmWarehouseCollectionItemOutput) ToGetEmWarehousesEmWarehouseCollectionItemOutputWithContext(ctx context.Context) GetEmWarehousesEmWarehouseCollectionItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// EMBridge Identifier
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) EmBridgeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.EmBridgeId }).(pulumi.StringOutput)
}

// Type of the EmWarehouse.
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) EmWarehouseType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.EmWarehouseType }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// unique EmWarehouse identifier
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.Id }).(pulumi.StringOutput)
}

// Data Flow Run Status Message
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) LatestEtlRunMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.LatestEtlRunMessage }).(pulumi.StringOutput)
}

// Data Flow Run Status
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) LatestEtlRunStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.LatestEtlRunStatus }).(pulumi.StringOutput)
}

// Data Flow Run Total Time
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) LatestEtlRunTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.LatestEtlRunTime }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// unique operationsInsightsWarehouseId identifier
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) OperationsInsightsWarehouseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.OperationsInsightsWarehouseId }).(pulumi.StringOutput)
}

// A filter to return only resources their lifecycleState matches the given lifecycleState.
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.State }).(pulumi.StringOutput)
}

// Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) SystemTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) map[string]interface{} { return v.SystemTags }).(pulumi.MapOutput)
}

// The time the the EmWarehouse was created. An RFC3339 formatted datetime string
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time the EmWarehouse was updated. An RFC3339 formatted datetime string
func (o GetEmWarehousesEmWarehouseCollectionItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesEmWarehouseCollectionItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetEmWarehousesEmWarehouseCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetEmWarehousesEmWarehouseCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEmWarehousesEmWarehouseCollectionItem)(nil)).Elem()
}

func (o GetEmWarehousesEmWarehouseCollectionItemArrayOutput) ToGetEmWarehousesEmWarehouseCollectionItemArrayOutput() GetEmWarehousesEmWarehouseCollectionItemArrayOutput {
	return o
}

func (o GetEmWarehousesEmWarehouseCollectionItemArrayOutput) ToGetEmWarehousesEmWarehouseCollectionItemArrayOutputWithContext(ctx context.Context) GetEmWarehousesEmWarehouseCollectionItemArrayOutput {
	return o
}

func (o GetEmWarehousesEmWarehouseCollectionItemArrayOutput) Index(i pulumi.IntInput) GetEmWarehousesEmWarehouseCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEmWarehousesEmWarehouseCollectionItem {
		return vs[0].([]GetEmWarehousesEmWarehouseCollectionItem)[vs[1].(int)]
	}).(GetEmWarehousesEmWarehouseCollectionItemOutput)
}

type GetEmWarehousesFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetEmWarehousesFilterInput is an input type that accepts GetEmWarehousesFilterArgs and GetEmWarehousesFilterOutput values.
// You can construct a concrete instance of `GetEmWarehousesFilterInput` via:
//
//	GetEmWarehousesFilterArgs{...}
type GetEmWarehousesFilterInput interface {
	pulumi.Input

	ToGetEmWarehousesFilterOutput() GetEmWarehousesFilterOutput
	ToGetEmWarehousesFilterOutputWithContext(context.Context) GetEmWarehousesFilterOutput
}

type GetEmWarehousesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetEmWarehousesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEmWarehousesFilter)(nil)).Elem()
}

func (i GetEmWarehousesFilterArgs) ToGetEmWarehousesFilterOutput() GetEmWarehousesFilterOutput {
	return i.ToGetEmWarehousesFilterOutputWithContext(context.Background())
}

func (i GetEmWarehousesFilterArgs) ToGetEmWarehousesFilterOutputWithContext(ctx context.Context) GetEmWarehousesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEmWarehousesFilterOutput)
}

// GetEmWarehousesFilterArrayInput is an input type that accepts GetEmWarehousesFilterArray and GetEmWarehousesFilterArrayOutput values.
// You can construct a concrete instance of `GetEmWarehousesFilterArrayInput` via:
//
//	GetEmWarehousesFilterArray{ GetEmWarehousesFilterArgs{...} }
type GetEmWarehousesFilterArrayInput interface {
	pulumi.Input

	ToGetEmWarehousesFilterArrayOutput() GetEmWarehousesFilterArrayOutput
	ToGetEmWarehousesFilterArrayOutputWithContext(context.Context) GetEmWarehousesFilterArrayOutput
}

type GetEmWarehousesFilterArray []GetEmWarehousesFilterInput

func (GetEmWarehousesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEmWarehousesFilter)(nil)).Elem()
}

func (i GetEmWarehousesFilterArray) ToGetEmWarehousesFilterArrayOutput() GetEmWarehousesFilterArrayOutput {
	return i.ToGetEmWarehousesFilterArrayOutputWithContext(context.Background())
}

func (i GetEmWarehousesFilterArray) ToGetEmWarehousesFilterArrayOutputWithContext(ctx context.Context) GetEmWarehousesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEmWarehousesFilterArrayOutput)
}

type GetEmWarehousesFilterOutput struct{ *pulumi.OutputState }

func (GetEmWarehousesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEmWarehousesFilter)(nil)).Elem()
}

func (o GetEmWarehousesFilterOutput) ToGetEmWarehousesFilterOutput() GetEmWarehousesFilterOutput {
	return o
}

func (o GetEmWarehousesFilterOutput) ToGetEmWarehousesFilterOutputWithContext(ctx context.Context) GetEmWarehousesFilterOutput {
	return o
}

func (o GetEmWarehousesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEmWarehousesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEmWarehousesFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEmWarehousesFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetEmWarehousesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEmWarehousesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetEmWarehousesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetEmWarehousesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEmWarehousesFilter)(nil)).Elem()
}

func (o GetEmWarehousesFilterArrayOutput) ToGetEmWarehousesFilterArrayOutput() GetEmWarehousesFilterArrayOutput {
	return o
}

func (o GetEmWarehousesFilterArrayOutput) ToGetEmWarehousesFilterArrayOutputWithContext(ctx context.Context) GetEmWarehousesFilterArrayOutput {
	return o
}

func (o GetEmWarehousesFilterArrayOutput) Index(i pulumi.IntInput) GetEmWarehousesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEmWarehousesFilter {
		return vs[0].([]GetEmWarehousesFilter)[vs[1].(int)]
	}).(GetEmWarehousesFilterOutput)
}

type GetEtlRunItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Data read by the dataflow run
	DataReadInBytes string `pulumi:"dataReadInBytes"`
	// Data written by the dataflow run
	DataWritten string `pulumi:"dataWritten"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Details of the lifecycle state
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Dataflow run duration
	RunDurationInMilliseconds string `pulumi:"runDurationInMilliseconds"`
	// The current state of the etlRun.
	State string `pulumi:"state"`
	// Time when the dataflow run was created
	TimeCreated string `pulumi:"timeCreated"`
	// Time when the dataflow run was updated
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetEtlRunItemInput is an input type that accepts GetEtlRunItemArgs and GetEtlRunItemOutput values.
// You can construct a concrete instance of `GetEtlRunItemInput` via:
//
//	GetEtlRunItemArgs{...}
type GetEtlRunItemInput interface {
	pulumi.Input

	ToGetEtlRunItemOutput() GetEtlRunItemOutput
	ToGetEtlRunItemOutputWithContext(context.Context) GetEtlRunItemOutput
}

type GetEtlRunItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Data read by the dataflow run
	DataReadInBytes pulumi.StringInput `pulumi:"dataReadInBytes"`
	// Data written by the dataflow run
	DataWritten pulumi.StringInput `pulumi:"dataWritten"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Details of the lifecycle state
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Dataflow run duration
	RunDurationInMilliseconds pulumi.StringInput `pulumi:"runDurationInMilliseconds"`
	// The current state of the etlRun.
	State pulumi.StringInput `pulumi:"state"`
	// Time when the dataflow run was created
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Time when the dataflow run was updated
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetEtlRunItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEtlRunItem)(nil)).Elem()
}

func (i GetEtlRunItemArgs) ToGetEtlRunItemOutput() GetEtlRunItemOutput {
	return i.ToGetEtlRunItemOutputWithContext(context.Background())
}

func (i GetEtlRunItemArgs) ToGetEtlRunItemOutputWithContext(ctx context.Context) GetEtlRunItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEtlRunItemOutput)
}

// GetEtlRunItemArrayInput is an input type that accepts GetEtlRunItemArray and GetEtlRunItemArrayOutput values.
// You can construct a concrete instance of `GetEtlRunItemArrayInput` via:
//
//	GetEtlRunItemArray{ GetEtlRunItemArgs{...} }
type GetEtlRunItemArrayInput interface {
	pulumi.Input

	ToGetEtlRunItemArrayOutput() GetEtlRunItemArrayOutput
	ToGetEtlRunItemArrayOutputWithContext(context.Context) GetEtlRunItemArrayOutput
}

type GetEtlRunItemArray []GetEtlRunItemInput

func (GetEtlRunItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEtlRunItem)(nil)).Elem()
}

func (i GetEtlRunItemArray) ToGetEtlRunItemArrayOutput() GetEtlRunItemArrayOutput {
	return i.ToGetEtlRunItemArrayOutputWithContext(context.Background())
}

func (i GetEtlRunItemArray) ToGetEtlRunItemArrayOutputWithContext(ctx context.Context) GetEtlRunItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEtlRunItemArrayOutput)
}

type GetEtlRunItemOutput struct{ *pulumi.OutputState }

func (GetEtlRunItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEtlRunItem)(nil)).Elem()
}

func (o GetEtlRunItemOutput) ToGetEtlRunItemOutput() GetEtlRunItemOutput {
	return o
}

func (o GetEtlRunItemOutput) ToGetEtlRunItemOutputWithContext(ctx context.Context) GetEtlRunItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetEtlRunItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Data read by the dataflow run
func (o GetEtlRunItemOutput) DataReadInBytes() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunItem) string { return v.DataReadInBytes }).(pulumi.StringOutput)
}

// Data written by the dataflow run
func (o GetEtlRunItemOutput) DataWritten() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunItem) string { return v.DataWritten }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetEtlRunItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEtlRunItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetEtlRunItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetEtlRunItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEtlRunItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Details of the lifecycle state
func (o GetEtlRunItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Dataflow run duration
func (o GetEtlRunItemOutput) RunDurationInMilliseconds() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunItem) string { return v.RunDurationInMilliseconds }).(pulumi.StringOutput)
}

// The current state of the etlRun.
func (o GetEtlRunItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunItem) string { return v.State }).(pulumi.StringOutput)
}

// Time when the dataflow run was created
func (o GetEtlRunItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time when the dataflow run was updated
func (o GetEtlRunItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetEtlRunItemArrayOutput struct{ *pulumi.OutputState }

func (GetEtlRunItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEtlRunItem)(nil)).Elem()
}

func (o GetEtlRunItemArrayOutput) ToGetEtlRunItemArrayOutput() GetEtlRunItemArrayOutput {
	return o
}

func (o GetEtlRunItemArrayOutput) ToGetEtlRunItemArrayOutputWithContext(ctx context.Context) GetEtlRunItemArrayOutput {
	return o
}

func (o GetEtlRunItemArrayOutput) Index(i pulumi.IntInput) GetEtlRunItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEtlRunItem {
		return vs[0].([]GetEtlRunItem)[vs[1].(int)]
	}).(GetEtlRunItemOutput)
}

type GetEtlRunsEtlRunCollection struct {
	// List of runs
	Items []GetEtlRunsEtlRunCollectionItem `pulumi:"items"`
}

// GetEtlRunsEtlRunCollectionInput is an input type that accepts GetEtlRunsEtlRunCollectionArgs and GetEtlRunsEtlRunCollectionOutput values.
// You can construct a concrete instance of `GetEtlRunsEtlRunCollectionInput` via:
//
//	GetEtlRunsEtlRunCollectionArgs{...}
type GetEtlRunsEtlRunCollectionInput interface {
	pulumi.Input

	ToGetEtlRunsEtlRunCollectionOutput() GetEtlRunsEtlRunCollectionOutput
	ToGetEtlRunsEtlRunCollectionOutputWithContext(context.Context) GetEtlRunsEtlRunCollectionOutput
}

type GetEtlRunsEtlRunCollectionArgs struct {
	// List of runs
	Items GetEtlRunsEtlRunCollectionItemArrayInput `pulumi:"items"`
}

func (GetEtlRunsEtlRunCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEtlRunsEtlRunCollection)(nil)).Elem()
}

func (i GetEtlRunsEtlRunCollectionArgs) ToGetEtlRunsEtlRunCollectionOutput() GetEtlRunsEtlRunCollectionOutput {
	return i.ToGetEtlRunsEtlRunCollectionOutputWithContext(context.Background())
}

func (i GetEtlRunsEtlRunCollectionArgs) ToGetEtlRunsEtlRunCollectionOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEtlRunsEtlRunCollectionOutput)
}

// GetEtlRunsEtlRunCollectionArrayInput is an input type that accepts GetEtlRunsEtlRunCollectionArray and GetEtlRunsEtlRunCollectionArrayOutput values.
// You can construct a concrete instance of `GetEtlRunsEtlRunCollectionArrayInput` via:
//
//	GetEtlRunsEtlRunCollectionArray{ GetEtlRunsEtlRunCollectionArgs{...} }
type GetEtlRunsEtlRunCollectionArrayInput interface {
	pulumi.Input

	ToGetEtlRunsEtlRunCollectionArrayOutput() GetEtlRunsEtlRunCollectionArrayOutput
	ToGetEtlRunsEtlRunCollectionArrayOutputWithContext(context.Context) GetEtlRunsEtlRunCollectionArrayOutput
}

type GetEtlRunsEtlRunCollectionArray []GetEtlRunsEtlRunCollectionInput

func (GetEtlRunsEtlRunCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEtlRunsEtlRunCollection)(nil)).Elem()
}

func (i GetEtlRunsEtlRunCollectionArray) ToGetEtlRunsEtlRunCollectionArrayOutput() GetEtlRunsEtlRunCollectionArrayOutput {
	return i.ToGetEtlRunsEtlRunCollectionArrayOutputWithContext(context.Background())
}

func (i GetEtlRunsEtlRunCollectionArray) ToGetEtlRunsEtlRunCollectionArrayOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEtlRunsEtlRunCollectionArrayOutput)
}

type GetEtlRunsEtlRunCollectionOutput struct{ *pulumi.OutputState }

func (GetEtlRunsEtlRunCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEtlRunsEtlRunCollection)(nil)).Elem()
}

func (o GetEtlRunsEtlRunCollectionOutput) ToGetEtlRunsEtlRunCollectionOutput() GetEtlRunsEtlRunCollectionOutput {
	return o
}

func (o GetEtlRunsEtlRunCollectionOutput) ToGetEtlRunsEtlRunCollectionOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionOutput {
	return o
}

// List of runs
func (o GetEtlRunsEtlRunCollectionOutput) Items() GetEtlRunsEtlRunCollectionItemArrayOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollection) []GetEtlRunsEtlRunCollectionItem { return v.Items }).(GetEtlRunsEtlRunCollectionItemArrayOutput)
}

type GetEtlRunsEtlRunCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetEtlRunsEtlRunCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEtlRunsEtlRunCollection)(nil)).Elem()
}

func (o GetEtlRunsEtlRunCollectionArrayOutput) ToGetEtlRunsEtlRunCollectionArrayOutput() GetEtlRunsEtlRunCollectionArrayOutput {
	return o
}

func (o GetEtlRunsEtlRunCollectionArrayOutput) ToGetEtlRunsEtlRunCollectionArrayOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionArrayOutput {
	return o
}

func (o GetEtlRunsEtlRunCollectionArrayOutput) Index(i pulumi.IntInput) GetEtlRunsEtlRunCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEtlRunsEtlRunCollection {
		return vs[0].([]GetEtlRunsEtlRunCollection)[vs[1].(int)]
	}).(GetEtlRunsEtlRunCollectionOutput)
}

type GetEtlRunsEtlRunCollectionItem struct {
	// List of runs
	Items []GetEtlRunsEtlRunCollectionItemItem `pulumi:"items"`
}

// GetEtlRunsEtlRunCollectionItemInput is an input type that accepts GetEtlRunsEtlRunCollectionItemArgs and GetEtlRunsEtlRunCollectionItemOutput values.
// You can construct a concrete instance of `GetEtlRunsEtlRunCollectionItemInput` via:
//
//	GetEtlRunsEtlRunCollectionItemArgs{...}
type GetEtlRunsEtlRunCollectionItemInput interface {
	pulumi.Input

	ToGetEtlRunsEtlRunCollectionItemOutput() GetEtlRunsEtlRunCollectionItemOutput
	ToGetEtlRunsEtlRunCollectionItemOutputWithContext(context.Context) GetEtlRunsEtlRunCollectionItemOutput
}

type GetEtlRunsEtlRunCollectionItemArgs struct {
	// List of runs
	Items GetEtlRunsEtlRunCollectionItemItemArrayInput `pulumi:"items"`
}

func (GetEtlRunsEtlRunCollectionItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEtlRunsEtlRunCollectionItem)(nil)).Elem()
}

func (i GetEtlRunsEtlRunCollectionItemArgs) ToGetEtlRunsEtlRunCollectionItemOutput() GetEtlRunsEtlRunCollectionItemOutput {
	return i.ToGetEtlRunsEtlRunCollectionItemOutputWithContext(context.Background())
}

func (i GetEtlRunsEtlRunCollectionItemArgs) ToGetEtlRunsEtlRunCollectionItemOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEtlRunsEtlRunCollectionItemOutput)
}

// GetEtlRunsEtlRunCollectionItemArrayInput is an input type that accepts GetEtlRunsEtlRunCollectionItemArray and GetEtlRunsEtlRunCollectionItemArrayOutput values.
// You can construct a concrete instance of `GetEtlRunsEtlRunCollectionItemArrayInput` via:
//
//	GetEtlRunsEtlRunCollectionItemArray{ GetEtlRunsEtlRunCollectionItemArgs{...} }
type GetEtlRunsEtlRunCollectionItemArrayInput interface {
	pulumi.Input

	ToGetEtlRunsEtlRunCollectionItemArrayOutput() GetEtlRunsEtlRunCollectionItemArrayOutput
	ToGetEtlRunsEtlRunCollectionItemArrayOutputWithContext(context.Context) GetEtlRunsEtlRunCollectionItemArrayOutput
}

type GetEtlRunsEtlRunCollectionItemArray []GetEtlRunsEtlRunCollectionItemInput

func (GetEtlRunsEtlRunCollectionItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEtlRunsEtlRunCollectionItem)(nil)).Elem()
}

func (i GetEtlRunsEtlRunCollectionItemArray) ToGetEtlRunsEtlRunCollectionItemArrayOutput() GetEtlRunsEtlRunCollectionItemArrayOutput {
	return i.ToGetEtlRunsEtlRunCollectionItemArrayOutputWithContext(context.Background())
}

func (i GetEtlRunsEtlRunCollectionItemArray) ToGetEtlRunsEtlRunCollectionItemArrayOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEtlRunsEtlRunCollectionItemArrayOutput)
}

type GetEtlRunsEtlRunCollectionItemOutput struct{ *pulumi.OutputState }

func (GetEtlRunsEtlRunCollectionItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEtlRunsEtlRunCollectionItem)(nil)).Elem()
}

func (o GetEtlRunsEtlRunCollectionItemOutput) ToGetEtlRunsEtlRunCollectionItemOutput() GetEtlRunsEtlRunCollectionItemOutput {
	return o
}

func (o GetEtlRunsEtlRunCollectionItemOutput) ToGetEtlRunsEtlRunCollectionItemOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionItemOutput {
	return o
}

// List of runs
func (o GetEtlRunsEtlRunCollectionItemOutput) Items() GetEtlRunsEtlRunCollectionItemItemArrayOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItem) []GetEtlRunsEtlRunCollectionItemItem { return v.Items }).(GetEtlRunsEtlRunCollectionItemItemArrayOutput)
}

type GetEtlRunsEtlRunCollectionItemArrayOutput struct{ *pulumi.OutputState }

func (GetEtlRunsEtlRunCollectionItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEtlRunsEtlRunCollectionItem)(nil)).Elem()
}

func (o GetEtlRunsEtlRunCollectionItemArrayOutput) ToGetEtlRunsEtlRunCollectionItemArrayOutput() GetEtlRunsEtlRunCollectionItemArrayOutput {
	return o
}

func (o GetEtlRunsEtlRunCollectionItemArrayOutput) ToGetEtlRunsEtlRunCollectionItemArrayOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionItemArrayOutput {
	return o
}

func (o GetEtlRunsEtlRunCollectionItemArrayOutput) Index(i pulumi.IntInput) GetEtlRunsEtlRunCollectionItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEtlRunsEtlRunCollectionItem {
		return vs[0].([]GetEtlRunsEtlRunCollectionItem)[vs[1].(int)]
	}).(GetEtlRunsEtlRunCollectionItemOutput)
}

type GetEtlRunsEtlRunCollectionItemItem struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// Data read by the dataflow run
	DataReadInBytes string `pulumi:"dataReadInBytes"`
	// Data written by the dataflow run
	DataWritten string `pulumi:"dataWritten"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]interface{} `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]interface{} `pulumi:"freeformTags"`
	// Details of the lifecycle state
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Dataflow run duration
	RunDurationInMilliseconds string `pulumi:"runDurationInMilliseconds"`
	// The current state of the etlRun.
	State string `pulumi:"state"`
	// Time when the dataflow run was created
	TimeCreated string `pulumi:"timeCreated"`
	// Time when the dataflow run was updated
	TimeUpdated string `pulumi:"timeUpdated"`
}

// GetEtlRunsEtlRunCollectionItemItemInput is an input type that accepts GetEtlRunsEtlRunCollectionItemItemArgs and GetEtlRunsEtlRunCollectionItemItemOutput values.
// You can construct a concrete instance of `GetEtlRunsEtlRunCollectionItemItemInput` via:
//
//	GetEtlRunsEtlRunCollectionItemItemArgs{...}
type GetEtlRunsEtlRunCollectionItemItemInput interface {
	pulumi.Input

	ToGetEtlRunsEtlRunCollectionItemItemOutput() GetEtlRunsEtlRunCollectionItemItemOutput
	ToGetEtlRunsEtlRunCollectionItemItemOutputWithContext(context.Context) GetEtlRunsEtlRunCollectionItemItemOutput
}

type GetEtlRunsEtlRunCollectionItemItemArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// Data read by the dataflow run
	DataReadInBytes pulumi.StringInput `pulumi:"dataReadInBytes"`
	// Data written by the dataflow run
	DataWritten pulumi.StringInput `pulumi:"dataWritten"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.MapInput `pulumi:"definedTags"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.MapInput `pulumi:"freeformTags"`
	// Details of the lifecycle state
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Dataflow run duration
	RunDurationInMilliseconds pulumi.StringInput `pulumi:"runDurationInMilliseconds"`
	// The current state of the etlRun.
	State pulumi.StringInput `pulumi:"state"`
	// Time when the dataflow run was created
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// Time when the dataflow run was updated
	TimeUpdated pulumi.StringInput `pulumi:"timeUpdated"`
}

func (GetEtlRunsEtlRunCollectionItemItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEtlRunsEtlRunCollectionItemItem)(nil)).Elem()
}

func (i GetEtlRunsEtlRunCollectionItemItemArgs) ToGetEtlRunsEtlRunCollectionItemItemOutput() GetEtlRunsEtlRunCollectionItemItemOutput {
	return i.ToGetEtlRunsEtlRunCollectionItemItemOutputWithContext(context.Background())
}

func (i GetEtlRunsEtlRunCollectionItemItemArgs) ToGetEtlRunsEtlRunCollectionItemItemOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionItemItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEtlRunsEtlRunCollectionItemItemOutput)
}

// GetEtlRunsEtlRunCollectionItemItemArrayInput is an input type that accepts GetEtlRunsEtlRunCollectionItemItemArray and GetEtlRunsEtlRunCollectionItemItemArrayOutput values.
// You can construct a concrete instance of `GetEtlRunsEtlRunCollectionItemItemArrayInput` via:
//
//	GetEtlRunsEtlRunCollectionItemItemArray{ GetEtlRunsEtlRunCollectionItemItemArgs{...} }
type GetEtlRunsEtlRunCollectionItemItemArrayInput interface {
	pulumi.Input

	ToGetEtlRunsEtlRunCollectionItemItemArrayOutput() GetEtlRunsEtlRunCollectionItemItemArrayOutput
	ToGetEtlRunsEtlRunCollectionItemItemArrayOutputWithContext(context.Context) GetEtlRunsEtlRunCollectionItemItemArrayOutput
}

type GetEtlRunsEtlRunCollectionItemItemArray []GetEtlRunsEtlRunCollectionItemItemInput

func (GetEtlRunsEtlRunCollectionItemItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEtlRunsEtlRunCollectionItemItem)(nil)).Elem()
}

func (i GetEtlRunsEtlRunCollectionItemItemArray) ToGetEtlRunsEtlRunCollectionItemItemArrayOutput() GetEtlRunsEtlRunCollectionItemItemArrayOutput {
	return i.ToGetEtlRunsEtlRunCollectionItemItemArrayOutputWithContext(context.Background())
}

func (i GetEtlRunsEtlRunCollectionItemItemArray) ToGetEtlRunsEtlRunCollectionItemItemArrayOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionItemItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEtlRunsEtlRunCollectionItemItemArrayOutput)
}

type GetEtlRunsEtlRunCollectionItemItemOutput struct{ *pulumi.OutputState }

func (GetEtlRunsEtlRunCollectionItemItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEtlRunsEtlRunCollectionItemItem)(nil)).Elem()
}

func (o GetEtlRunsEtlRunCollectionItemItemOutput) ToGetEtlRunsEtlRunCollectionItemItemOutput() GetEtlRunsEtlRunCollectionItemItemOutput {
	return o
}

func (o GetEtlRunsEtlRunCollectionItemItemOutput) ToGetEtlRunsEtlRunCollectionItemItemOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionItemItemOutput {
	return o
}

// The ID of the compartment in which to list resources.
func (o GetEtlRunsEtlRunCollectionItemItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItemItem) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Data read by the dataflow run
func (o GetEtlRunsEtlRunCollectionItemItemOutput) DataReadInBytes() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItemItem) string { return v.DataReadInBytes }).(pulumi.StringOutput)
}

// Data written by the dataflow run
func (o GetEtlRunsEtlRunCollectionItemItemOutput) DataWritten() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItemItem) string { return v.DataWritten }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o GetEtlRunsEtlRunCollectionItemItemOutput) DefinedTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItemItem) map[string]interface{} { return v.DefinedTags }).(pulumi.MapOutput)
}

// A filter to return only resources that match the entire display name given.
func (o GetEtlRunsEtlRunCollectionItemItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItemItem) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o GetEtlRunsEtlRunCollectionItemItemOutput) FreeformTags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItemItem) map[string]interface{} { return v.FreeformTags }).(pulumi.MapOutput)
}

// Details of the lifecycle state
func (o GetEtlRunsEtlRunCollectionItemItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItemItem) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Dataflow run duration
func (o GetEtlRunsEtlRunCollectionItemItemOutput) RunDurationInMilliseconds() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItemItem) string { return v.RunDurationInMilliseconds }).(pulumi.StringOutput)
}

// The current state of the etlRun.
func (o GetEtlRunsEtlRunCollectionItemItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItemItem) string { return v.State }).(pulumi.StringOutput)
}

// Time when the dataflow run was created
func (o GetEtlRunsEtlRunCollectionItemItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItemItem) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Time when the dataflow run was updated
func (o GetEtlRunsEtlRunCollectionItemItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunsEtlRunCollectionItemItem) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

type GetEtlRunsEtlRunCollectionItemItemArrayOutput struct{ *pulumi.OutputState }

func (GetEtlRunsEtlRunCollectionItemItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEtlRunsEtlRunCollectionItemItem)(nil)).Elem()
}

func (o GetEtlRunsEtlRunCollectionItemItemArrayOutput) ToGetEtlRunsEtlRunCollectionItemItemArrayOutput() GetEtlRunsEtlRunCollectionItemItemArrayOutput {
	return o
}

func (o GetEtlRunsEtlRunCollectionItemItemArrayOutput) ToGetEtlRunsEtlRunCollectionItemItemArrayOutputWithContext(ctx context.Context) GetEtlRunsEtlRunCollectionItemItemArrayOutput {
	return o
}

func (o GetEtlRunsEtlRunCollectionItemItemArrayOutput) Index(i pulumi.IntInput) GetEtlRunsEtlRunCollectionItemItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEtlRunsEtlRunCollectionItemItem {
		return vs[0].([]GetEtlRunsEtlRunCollectionItemItem)[vs[1].(int)]
	}).(GetEtlRunsEtlRunCollectionItemItemOutput)
}

type GetEtlRunsFilter struct {
	Name   string   `pulumi:"name"`
	Regex  *bool    `pulumi:"regex"`
	Values []string `pulumi:"values"`
}

// GetEtlRunsFilterInput is an input type that accepts GetEtlRunsFilterArgs and GetEtlRunsFilterOutput values.
// You can construct a concrete instance of `GetEtlRunsFilterInput` via:
//
//	GetEtlRunsFilterArgs{...}
type GetEtlRunsFilterInput interface {
	pulumi.Input

	ToGetEtlRunsFilterOutput() GetEtlRunsFilterOutput
	ToGetEtlRunsFilterOutputWithContext(context.Context) GetEtlRunsFilterOutput
}

type GetEtlRunsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Regex  pulumi.BoolPtrInput     `pulumi:"regex"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetEtlRunsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEtlRunsFilter)(nil)).Elem()
}

func (i GetEtlRunsFilterArgs) ToGetEtlRunsFilterOutput() GetEtlRunsFilterOutput {
	return i.ToGetEtlRunsFilterOutputWithContext(context.Background())
}

func (i GetEtlRunsFilterArgs) ToGetEtlRunsFilterOutputWithContext(ctx context.Context) GetEtlRunsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEtlRunsFilterOutput)
}

// GetEtlRunsFilterArrayInput is an input type that accepts GetEtlRunsFilterArray and GetEtlRunsFilterArrayOutput values.
// You can construct a concrete instance of `GetEtlRunsFilterArrayInput` via:
//
//	GetEtlRunsFilterArray{ GetEtlRunsFilterArgs{...} }
type GetEtlRunsFilterArrayInput interface {
	pulumi.Input

	ToGetEtlRunsFilterArrayOutput() GetEtlRunsFilterArrayOutput
	ToGetEtlRunsFilterArrayOutputWithContext(context.Context) GetEtlRunsFilterArrayOutput
}

type GetEtlRunsFilterArray []GetEtlRunsFilterInput

func (GetEtlRunsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEtlRunsFilter)(nil)).Elem()
}

func (i GetEtlRunsFilterArray) ToGetEtlRunsFilterArrayOutput() GetEtlRunsFilterArrayOutput {
	return i.ToGetEtlRunsFilterArrayOutputWithContext(context.Background())
}

func (i GetEtlRunsFilterArray) ToGetEtlRunsFilterArrayOutputWithContext(ctx context.Context) GetEtlRunsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEtlRunsFilterArrayOutput)
}

type GetEtlRunsFilterOutput struct{ *pulumi.OutputState }

func (GetEtlRunsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEtlRunsFilter)(nil)).Elem()
}

func (o GetEtlRunsFilterOutput) ToGetEtlRunsFilterOutput() GetEtlRunsFilterOutput {
	return o
}

func (o GetEtlRunsFilterOutput) ToGetEtlRunsFilterOutputWithContext(ctx context.Context) GetEtlRunsFilterOutput {
	return o
}

func (o GetEtlRunsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEtlRunsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEtlRunsFilterOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEtlRunsFilter) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

func (o GetEtlRunsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEtlRunsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetEtlRunsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetEtlRunsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEtlRunsFilter)(nil)).Elem()
}

func (o GetEtlRunsFilterArrayOutput) ToGetEtlRunsFilterArrayOutput() GetEtlRunsFilterArrayOutput {
	return o
}

func (o GetEtlRunsFilterArrayOutput) ToGetEtlRunsFilterArrayOutputWithContext(ctx context.Context) GetEtlRunsFilterArrayOutput {
	return o
}

func (o GetEtlRunsFilterArrayOutput) Index(i pulumi.IntInput) GetEtlRunsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEtlRunsFilter {
		return vs[0].([]GetEtlRunsFilter)[vs[1].(int)]
	}).(GetEtlRunsFilterOutput)
}

type GetResourceUsageEmInstance struct {
	// emdDiscoverer url
	EmDiscovererUrl string `pulumi:"emDiscovererUrl"`
	// emHost name
	EmHost string `pulumi:"emHost"`
	// operations Insights Warehouse Identifier
	EmId string `pulumi:"emId"`
	// EmInstance Target count
	TargetsCount int `pulumi:"targetsCount"`
}

// GetResourceUsageEmInstanceInput is an input type that accepts GetResourceUsageEmInstanceArgs and GetResourceUsageEmInstanceOutput values.
// You can construct a concrete instance of `GetResourceUsageEmInstanceInput` via:
//
//	GetResourceUsageEmInstanceArgs{...}
type GetResourceUsageEmInstanceInput interface {
	pulumi.Input

	ToGetResourceUsageEmInstanceOutput() GetResourceUsageEmInstanceOutput
	ToGetResourceUsageEmInstanceOutputWithContext(context.Context) GetResourceUsageEmInstanceOutput
}

type GetResourceUsageEmInstanceArgs struct {
	// emdDiscoverer url
	EmDiscovererUrl pulumi.StringInput `pulumi:"emDiscovererUrl"`
	// emHost name
	EmHost pulumi.StringInput `pulumi:"emHost"`
	// operations Insights Warehouse Identifier
	EmId pulumi.StringInput `pulumi:"emId"`
	// EmInstance Target count
	TargetsCount pulumi.IntInput `pulumi:"targetsCount"`
}

func (GetResourceUsageEmInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceUsageEmInstance)(nil)).Elem()
}

func (i GetResourceUsageEmInstanceArgs) ToGetResourceUsageEmInstanceOutput() GetResourceUsageEmInstanceOutput {
	return i.ToGetResourceUsageEmInstanceOutputWithContext(context.Background())
}

func (i GetResourceUsageEmInstanceArgs) ToGetResourceUsageEmInstanceOutputWithContext(ctx context.Context) GetResourceUsageEmInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceUsageEmInstanceOutput)
}

// GetResourceUsageEmInstanceArrayInput is an input type that accepts GetResourceUsageEmInstanceArray and GetResourceUsageEmInstanceArrayOutput values.
// You can construct a concrete instance of `GetResourceUsageEmInstanceArrayInput` via:
//
//	GetResourceUsageEmInstanceArray{ GetResourceUsageEmInstanceArgs{...} }
type GetResourceUsageEmInstanceArrayInput interface {
	pulumi.Input

	ToGetResourceUsageEmInstanceArrayOutput() GetResourceUsageEmInstanceArrayOutput
	ToGetResourceUsageEmInstanceArrayOutputWithContext(context.Context) GetResourceUsageEmInstanceArrayOutput
}

type GetResourceUsageEmInstanceArray []GetResourceUsageEmInstanceInput

func (GetResourceUsageEmInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceUsageEmInstance)(nil)).Elem()
}

func (i GetResourceUsageEmInstanceArray) ToGetResourceUsageEmInstanceArrayOutput() GetResourceUsageEmInstanceArrayOutput {
	return i.ToGetResourceUsageEmInstanceArrayOutputWithContext(context.Background())
}

func (i GetResourceUsageEmInstanceArray) ToGetResourceUsageEmInstanceArrayOutputWithContext(ctx context.Context) GetResourceUsageEmInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceUsageEmInstanceArrayOutput)
}

type GetResourceUsageEmInstanceOutput struct{ *pulumi.OutputState }

func (GetResourceUsageEmInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceUsageEmInstance)(nil)).Elem()
}

func (o GetResourceUsageEmInstanceOutput) ToGetResourceUsageEmInstanceOutput() GetResourceUsageEmInstanceOutput {
	return o
}

func (o GetResourceUsageEmInstanceOutput) ToGetResourceUsageEmInstanceOutputWithContext(ctx context.Context) GetResourceUsageEmInstanceOutput {
	return o
}

// emdDiscoverer url
func (o GetResourceUsageEmInstanceOutput) EmDiscovererUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceUsageEmInstance) string { return v.EmDiscovererUrl }).(pulumi.StringOutput)
}

// emHost name
func (o GetResourceUsageEmInstanceOutput) EmHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceUsageEmInstance) string { return v.EmHost }).(pulumi.StringOutput)
}

// operations Insights Warehouse Identifier
func (o GetResourceUsageEmInstanceOutput) EmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceUsageEmInstance) string { return v.EmId }).(pulumi.StringOutput)
}

// EmInstance Target count
func (o GetResourceUsageEmInstanceOutput) TargetsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetResourceUsageEmInstance) int { return v.TargetsCount }).(pulumi.IntOutput)
}

type GetResourceUsageEmInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetResourceUsageEmInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceUsageEmInstance)(nil)).Elem()
}

func (o GetResourceUsageEmInstanceArrayOutput) ToGetResourceUsageEmInstanceArrayOutput() GetResourceUsageEmInstanceArrayOutput {
	return o
}

func (o GetResourceUsageEmInstanceArrayOutput) ToGetResourceUsageEmInstanceArrayOutputWithContext(ctx context.Context) GetResourceUsageEmInstanceArrayOutput {
	return o
}

func (o GetResourceUsageEmInstanceArrayOutput) Index(i pulumi.IntInput) GetResourceUsageEmInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceUsageEmInstance {
		return vs[0].([]GetResourceUsageEmInstance)[vs[1].(int)]
	}).(GetResourceUsageEmInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetEmWarehousesEmWarehouseCollectionInput)(nil)).Elem(), GetEmWarehousesEmWarehouseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEmWarehousesEmWarehouseCollectionArrayInput)(nil)).Elem(), GetEmWarehousesEmWarehouseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEmWarehousesEmWarehouseCollectionItemInput)(nil)).Elem(), GetEmWarehousesEmWarehouseCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEmWarehousesEmWarehouseCollectionItemArrayInput)(nil)).Elem(), GetEmWarehousesEmWarehouseCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEmWarehousesFilterInput)(nil)).Elem(), GetEmWarehousesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEmWarehousesFilterArrayInput)(nil)).Elem(), GetEmWarehousesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEtlRunItemInput)(nil)).Elem(), GetEtlRunItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEtlRunItemArrayInput)(nil)).Elem(), GetEtlRunItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEtlRunsEtlRunCollectionInput)(nil)).Elem(), GetEtlRunsEtlRunCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEtlRunsEtlRunCollectionArrayInput)(nil)).Elem(), GetEtlRunsEtlRunCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEtlRunsEtlRunCollectionItemInput)(nil)).Elem(), GetEtlRunsEtlRunCollectionItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEtlRunsEtlRunCollectionItemArrayInput)(nil)).Elem(), GetEtlRunsEtlRunCollectionItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEtlRunsEtlRunCollectionItemItemInput)(nil)).Elem(), GetEtlRunsEtlRunCollectionItemItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEtlRunsEtlRunCollectionItemItemArrayInput)(nil)).Elem(), GetEtlRunsEtlRunCollectionItemItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEtlRunsFilterInput)(nil)).Elem(), GetEtlRunsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEtlRunsFilterArrayInput)(nil)).Elem(), GetEtlRunsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceUsageEmInstanceInput)(nil)).Elem(), GetResourceUsageEmInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceUsageEmInstanceArrayInput)(nil)).Elem(), GetResourceUsageEmInstanceArray{})
	pulumi.RegisterOutputType(GetEmWarehousesEmWarehouseCollectionOutput{})
	pulumi.RegisterOutputType(GetEmWarehousesEmWarehouseCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetEmWarehousesEmWarehouseCollectionItemOutput{})
	pulumi.RegisterOutputType(GetEmWarehousesEmWarehouseCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetEmWarehousesFilterOutput{})
	pulumi.RegisterOutputType(GetEmWarehousesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetEtlRunItemOutput{})
	pulumi.RegisterOutputType(GetEtlRunItemArrayOutput{})
	pulumi.RegisterOutputType(GetEtlRunsEtlRunCollectionOutput{})
	pulumi.RegisterOutputType(GetEtlRunsEtlRunCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetEtlRunsEtlRunCollectionItemOutput{})
	pulumi.RegisterOutputType(GetEtlRunsEtlRunCollectionItemArrayOutput{})
	pulumi.RegisterOutputType(GetEtlRunsEtlRunCollectionItemItemOutput{})
	pulumi.RegisterOutputType(GetEtlRunsEtlRunCollectionItemItemArrayOutput{})
	pulumi.RegisterOutputType(GetEtlRunsFilterOutput{})
	pulumi.RegisterOutputType(GetEtlRunsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetResourceUsageEmInstanceOutput{})
	pulumi.RegisterOutputType(GetResourceUsageEmInstanceArrayOutput{})
}
