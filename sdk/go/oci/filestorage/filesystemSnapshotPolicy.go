// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package filestorage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Filesystem Snapshot Policy resource in Oracle Cloud Infrastructure File Storage service.
//
// Creates a new file system snapshot policy in the specified compartment and
// availability domain.
//
// After you create a file system snapshot policy, you can associate it with
// file systems.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/filestorage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := filestorage.NewFilesystemSnapshotPolicy(ctx, "test_filesystem_snapshot_policy", &filestorage.FilesystemSnapshotPolicyArgs{
//				AvailabilityDomain: pulumi.Any(filesystemSnapshotPolicyAvailabilityDomain),
//				CompartmentId:      pulumi.Any(compartmentId),
//				DefinedTags: pulumi.StringMap{
//					"Operations.CostCenter": pulumi.String("42"),
//				},
//				DisplayName: pulumi.Any(filesystemSnapshotPolicyDisplayName),
//				FreeformTags: pulumi.StringMap{
//					"Department": pulumi.String("Finance"),
//				},
//				Locks: filestorage.FilesystemSnapshotPolicyLockArray{
//					&filestorage.FilesystemSnapshotPolicyLockArgs{
//						Type:              pulumi.Any(filesystemSnapshotPolicyLocksType),
//						Message:           pulumi.Any(filesystemSnapshotPolicyLocksMessage),
//						RelatedResourceId: pulumi.Any(testResource.Id),
//						TimeCreated:       pulumi.Any(filesystemSnapshotPolicyLocksTimeCreated),
//					},
//				},
//				PolicyPrefix: pulumi.Any(filesystemSnapshotPolicyPolicyPrefix),
//				Schedules: filestorage.FilesystemSnapshotPolicyScheduleArray{
//					&filestorage.FilesystemSnapshotPolicyScheduleArgs{
//						Period:                     pulumi.Any(filesystemSnapshotPolicySchedulesPeriod),
//						TimeZone:                   pulumi.Any(filesystemSnapshotPolicySchedulesTimeZone),
//						DayOfMonth:                 pulumi.Any(filesystemSnapshotPolicySchedulesDayOfMonth),
//						DayOfWeek:                  pulumi.Any(filesystemSnapshotPolicySchedulesDayOfWeek),
//						HourOfDay:                  pulumi.Any(filesystemSnapshotPolicySchedulesHourOfDay),
//						Month:                      pulumi.Any(filesystemSnapshotPolicySchedulesMonth),
//						RetentionDurationInSeconds: pulumi.Any(filesystemSnapshotPolicySchedulesRetentionDurationInSeconds),
//						SchedulePrefix:             pulumi.Any(filesystemSnapshotPolicySchedulesSchedulePrefix),
//						TimeScheduleStart:          pulumi.Any(filesystemSnapshotPolicySchedulesTimeScheduleStart),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// FilesystemSnapshotPolicies can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:FileStorage/filesystemSnapshotPolicy:FilesystemSnapshotPolicy test_filesystem_snapshot_policy "id"
// ```
type FilesystemSnapshotPolicy struct {
	pulumi.CustomResourceState

	// The availability domain that the file system snapshot policy is in.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the file system snapshot policy.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `policy1`
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags   pulumi.StringMapOutput `pulumi:"freeformTags"`
	IsLockOverride pulumi.BoolOutput      `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks FilesystemSnapshotPolicyLockArrayOutput `pulumi:"locks"`
	// (Updatable) The prefix to apply to all snapshots created by this policy.  Example: `acme`
	PolicyPrefix pulumi.StringOutput `pulumi:"policyPrefix"`
	// (Updatable) The list of associated snapshot schedules. A maximum of 10 schedules can be associated with a policy.
	//
	// If using the CLI, provide the schedule as a list of JSON strings, with the list wrapped in quotation marks, i.e. ```--schedules '[{"timeZone":"UTC","period":"DAILY","hourOfDay":18},{"timeZone":"UTC","period":"HOURLY"}]'```
	Schedules FilesystemSnapshotPolicyScheduleArrayOutput `pulumi:"schedules"`
	// (Updatable) The target state for the Filesystem Snapshot Policy. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. System tags are applied to resources by internal Oracle Cloud Infrastructure services.
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the file system snapshot policy was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
}

// NewFilesystemSnapshotPolicy registers a new resource with the given unique name, arguments, and options.
func NewFilesystemSnapshotPolicy(ctx *pulumi.Context,
	name string, args *FilesystemSnapshotPolicyArgs, opts ...pulumi.ResourceOption) (*FilesystemSnapshotPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityDomain == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityDomain'")
	}
	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FilesystemSnapshotPolicy
	err := ctx.RegisterResource("oci:FileStorage/filesystemSnapshotPolicy:FilesystemSnapshotPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFilesystemSnapshotPolicy gets an existing FilesystemSnapshotPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFilesystemSnapshotPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FilesystemSnapshotPolicyState, opts ...pulumi.ResourceOption) (*FilesystemSnapshotPolicy, error) {
	var resource FilesystemSnapshotPolicy
	err := ctx.ReadResource("oci:FileStorage/filesystemSnapshotPolicy:FilesystemSnapshotPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FilesystemSnapshotPolicy resources.
type filesystemSnapshotPolicyState struct {
	// The availability domain that the file system snapshot policy is in.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the file system snapshot policy.
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `policy1`
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags   map[string]string `pulumi:"freeformTags"`
	IsLockOverride *bool             `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks []FilesystemSnapshotPolicyLock `pulumi:"locks"`
	// (Updatable) The prefix to apply to all snapshots created by this policy.  Example: `acme`
	PolicyPrefix *string `pulumi:"policyPrefix"`
	// (Updatable) The list of associated snapshot schedules. A maximum of 10 schedules can be associated with a policy.
	//
	// If using the CLI, provide the schedule as a list of JSON strings, with the list wrapped in quotation marks, i.e. ```--schedules '[{"timeZone":"UTC","period":"DAILY","hourOfDay":18},{"timeZone":"UTC","period":"HOURLY"}]'```
	Schedules []FilesystemSnapshotPolicySchedule `pulumi:"schedules"`
	// (Updatable) The target state for the Filesystem Snapshot Policy. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State *string `pulumi:"state"`
	// System tags for this resource. System tags are applied to resources by internal Oracle Cloud Infrastructure services.
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the file system snapshot policy was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
}

type FilesystemSnapshotPolicyState struct {
	// The availability domain that the file system snapshot policy is in.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the file system snapshot policy.
	CompartmentId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `policy1`
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags   pulumi.StringMapInput
	IsLockOverride pulumi.BoolPtrInput
	// Locks associated with this resource.
	Locks FilesystemSnapshotPolicyLockArrayInput
	// (Updatable) The prefix to apply to all snapshots created by this policy.  Example: `acme`
	PolicyPrefix pulumi.StringPtrInput
	// (Updatable) The list of associated snapshot schedules. A maximum of 10 schedules can be associated with a policy.
	//
	// If using the CLI, provide the schedule as a list of JSON strings, with the list wrapped in quotation marks, i.e. ```--schedules '[{"timeZone":"UTC","period":"DAILY","hourOfDay":18},{"timeZone":"UTC","period":"HOURLY"}]'```
	Schedules FilesystemSnapshotPolicyScheduleArrayInput
	// (Updatable) The target state for the Filesystem Snapshot Policy. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringPtrInput
	// System tags for this resource. System tags are applied to resources by internal Oracle Cloud Infrastructure services.
	SystemTags pulumi.StringMapInput
	// The date and time the file system snapshot policy was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
}

func (FilesystemSnapshotPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*filesystemSnapshotPolicyState)(nil)).Elem()
}

type filesystemSnapshotPolicyArgs struct {
	// The availability domain that the file system snapshot policy is in.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the file system snapshot policy.
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `policy1`
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags   map[string]string `pulumi:"freeformTags"`
	IsLockOverride *bool             `pulumi:"isLockOverride"`
	// Locks associated with this resource.
	Locks []FilesystemSnapshotPolicyLock `pulumi:"locks"`
	// (Updatable) The prefix to apply to all snapshots created by this policy.  Example: `acme`
	PolicyPrefix *string `pulumi:"policyPrefix"`
	// (Updatable) The list of associated snapshot schedules. A maximum of 10 schedules can be associated with a policy.
	//
	// If using the CLI, provide the schedule as a list of JSON strings, with the list wrapped in quotation marks, i.e. ```--schedules '[{"timeZone":"UTC","period":"DAILY","hourOfDay":18},{"timeZone":"UTC","period":"HOURLY"}]'```
	Schedules []FilesystemSnapshotPolicySchedule `pulumi:"schedules"`
	// (Updatable) The target state for the Filesystem Snapshot Policy. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a FilesystemSnapshotPolicy resource.
type FilesystemSnapshotPolicyArgs struct {
	// The availability domain that the file system snapshot policy is in.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the file system snapshot policy.
	CompartmentId pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `policy1`
	DisplayName pulumi.StringPtrInput
	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
	FreeformTags   pulumi.StringMapInput
	IsLockOverride pulumi.BoolPtrInput
	// Locks associated with this resource.
	Locks FilesystemSnapshotPolicyLockArrayInput
	// (Updatable) The prefix to apply to all snapshots created by this policy.  Example: `acme`
	PolicyPrefix pulumi.StringPtrInput
	// (Updatable) The list of associated snapshot schedules. A maximum of 10 schedules can be associated with a policy.
	//
	// If using the CLI, provide the schedule as a list of JSON strings, with the list wrapped in quotation marks, i.e. ```--schedules '[{"timeZone":"UTC","period":"DAILY","hourOfDay":18},{"timeZone":"UTC","period":"HOURLY"}]'```
	Schedules FilesystemSnapshotPolicyScheduleArrayInput
	// (Updatable) The target state for the Filesystem Snapshot Policy. Could be set to `ACTIVE` or `INACTIVE`.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	State pulumi.StringPtrInput
}

func (FilesystemSnapshotPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*filesystemSnapshotPolicyArgs)(nil)).Elem()
}

type FilesystemSnapshotPolicyInput interface {
	pulumi.Input

	ToFilesystemSnapshotPolicyOutput() FilesystemSnapshotPolicyOutput
	ToFilesystemSnapshotPolicyOutputWithContext(ctx context.Context) FilesystemSnapshotPolicyOutput
}

func (*FilesystemSnapshotPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**FilesystemSnapshotPolicy)(nil)).Elem()
}

func (i *FilesystemSnapshotPolicy) ToFilesystemSnapshotPolicyOutput() FilesystemSnapshotPolicyOutput {
	return i.ToFilesystemSnapshotPolicyOutputWithContext(context.Background())
}

func (i *FilesystemSnapshotPolicy) ToFilesystemSnapshotPolicyOutputWithContext(ctx context.Context) FilesystemSnapshotPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilesystemSnapshotPolicyOutput)
}

// FilesystemSnapshotPolicyArrayInput is an input type that accepts FilesystemSnapshotPolicyArray and FilesystemSnapshotPolicyArrayOutput values.
// You can construct a concrete instance of `FilesystemSnapshotPolicyArrayInput` via:
//
//	FilesystemSnapshotPolicyArray{ FilesystemSnapshotPolicyArgs{...} }
type FilesystemSnapshotPolicyArrayInput interface {
	pulumi.Input

	ToFilesystemSnapshotPolicyArrayOutput() FilesystemSnapshotPolicyArrayOutput
	ToFilesystemSnapshotPolicyArrayOutputWithContext(context.Context) FilesystemSnapshotPolicyArrayOutput
}

type FilesystemSnapshotPolicyArray []FilesystemSnapshotPolicyInput

func (FilesystemSnapshotPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FilesystemSnapshotPolicy)(nil)).Elem()
}

func (i FilesystemSnapshotPolicyArray) ToFilesystemSnapshotPolicyArrayOutput() FilesystemSnapshotPolicyArrayOutput {
	return i.ToFilesystemSnapshotPolicyArrayOutputWithContext(context.Background())
}

func (i FilesystemSnapshotPolicyArray) ToFilesystemSnapshotPolicyArrayOutputWithContext(ctx context.Context) FilesystemSnapshotPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilesystemSnapshotPolicyArrayOutput)
}

// FilesystemSnapshotPolicyMapInput is an input type that accepts FilesystemSnapshotPolicyMap and FilesystemSnapshotPolicyMapOutput values.
// You can construct a concrete instance of `FilesystemSnapshotPolicyMapInput` via:
//
//	FilesystemSnapshotPolicyMap{ "key": FilesystemSnapshotPolicyArgs{...} }
type FilesystemSnapshotPolicyMapInput interface {
	pulumi.Input

	ToFilesystemSnapshotPolicyMapOutput() FilesystemSnapshotPolicyMapOutput
	ToFilesystemSnapshotPolicyMapOutputWithContext(context.Context) FilesystemSnapshotPolicyMapOutput
}

type FilesystemSnapshotPolicyMap map[string]FilesystemSnapshotPolicyInput

func (FilesystemSnapshotPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FilesystemSnapshotPolicy)(nil)).Elem()
}

func (i FilesystemSnapshotPolicyMap) ToFilesystemSnapshotPolicyMapOutput() FilesystemSnapshotPolicyMapOutput {
	return i.ToFilesystemSnapshotPolicyMapOutputWithContext(context.Background())
}

func (i FilesystemSnapshotPolicyMap) ToFilesystemSnapshotPolicyMapOutputWithContext(ctx context.Context) FilesystemSnapshotPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilesystemSnapshotPolicyMapOutput)
}

type FilesystemSnapshotPolicyOutput struct{ *pulumi.OutputState }

func (FilesystemSnapshotPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilesystemSnapshotPolicy)(nil)).Elem()
}

func (o FilesystemSnapshotPolicyOutput) ToFilesystemSnapshotPolicyOutput() FilesystemSnapshotPolicyOutput {
	return o
}

func (o FilesystemSnapshotPolicyOutput) ToFilesystemSnapshotPolicyOutputWithContext(ctx context.Context) FilesystemSnapshotPolicyOutput {
	return o
}

// The availability domain that the file system snapshot policy is in.  Example: `Uocm:PHX-AD-1`
func (o FilesystemSnapshotPolicyOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the file system snapshot policy.
func (o FilesystemSnapshotPolicyOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
func (o FilesystemSnapshotPolicyOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `policy1`
func (o FilesystemSnapshotPolicyOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
func (o FilesystemSnapshotPolicyOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

func (o FilesystemSnapshotPolicyOutput) IsLockOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) pulumi.BoolOutput { return v.IsLockOverride }).(pulumi.BoolOutput)
}

// Locks associated with this resource.
func (o FilesystemSnapshotPolicyOutput) Locks() FilesystemSnapshotPolicyLockArrayOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) FilesystemSnapshotPolicyLockArrayOutput { return v.Locks }).(FilesystemSnapshotPolicyLockArrayOutput)
}

// (Updatable) The prefix to apply to all snapshots created by this policy.  Example: `acme`
func (o FilesystemSnapshotPolicyOutput) PolicyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) pulumi.StringOutput { return v.PolicyPrefix }).(pulumi.StringOutput)
}

// (Updatable) The list of associated snapshot schedules. A maximum of 10 schedules can be associated with a policy.
//
// If using the CLI, provide the schedule as a list of JSON strings, with the list wrapped in quotation marks, i.e. ```--schedules '[{"timeZone":"UTC","period":"DAILY","hourOfDay":18},{"timeZone":"UTC","period":"HOURLY"}]'```
func (o FilesystemSnapshotPolicyOutput) Schedules() FilesystemSnapshotPolicyScheduleArrayOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) FilesystemSnapshotPolicyScheduleArrayOutput { return v.Schedules }).(FilesystemSnapshotPolicyScheduleArrayOutput)
}

// (Updatable) The target state for the Filesystem Snapshot Policy. Could be set to `ACTIVE` or `INACTIVE`.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o FilesystemSnapshotPolicyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. System tags are applied to resources by internal Oracle Cloud Infrastructure services.
func (o FilesystemSnapshotPolicyOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the file system snapshot policy was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
func (o FilesystemSnapshotPolicyOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *FilesystemSnapshotPolicy) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

type FilesystemSnapshotPolicyArrayOutput struct{ *pulumi.OutputState }

func (FilesystemSnapshotPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FilesystemSnapshotPolicy)(nil)).Elem()
}

func (o FilesystemSnapshotPolicyArrayOutput) ToFilesystemSnapshotPolicyArrayOutput() FilesystemSnapshotPolicyArrayOutput {
	return o
}

func (o FilesystemSnapshotPolicyArrayOutput) ToFilesystemSnapshotPolicyArrayOutputWithContext(ctx context.Context) FilesystemSnapshotPolicyArrayOutput {
	return o
}

func (o FilesystemSnapshotPolicyArrayOutput) Index(i pulumi.IntInput) FilesystemSnapshotPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FilesystemSnapshotPolicy {
		return vs[0].([]*FilesystemSnapshotPolicy)[vs[1].(int)]
	}).(FilesystemSnapshotPolicyOutput)
}

type FilesystemSnapshotPolicyMapOutput struct{ *pulumi.OutputState }

func (FilesystemSnapshotPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FilesystemSnapshotPolicy)(nil)).Elem()
}

func (o FilesystemSnapshotPolicyMapOutput) ToFilesystemSnapshotPolicyMapOutput() FilesystemSnapshotPolicyMapOutput {
	return o
}

func (o FilesystemSnapshotPolicyMapOutput) ToFilesystemSnapshotPolicyMapOutputWithContext(ctx context.Context) FilesystemSnapshotPolicyMapOutput {
	return o
}

func (o FilesystemSnapshotPolicyMapOutput) MapIndex(k pulumi.StringInput) FilesystemSnapshotPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FilesystemSnapshotPolicy {
		return vs[0].(map[string]*FilesystemSnapshotPolicy)[vs[1].(string)]
	}).(FilesystemSnapshotPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FilesystemSnapshotPolicyInput)(nil)).Elem(), &FilesystemSnapshotPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilesystemSnapshotPolicyArrayInput)(nil)).Elem(), FilesystemSnapshotPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilesystemSnapshotPolicyMapInput)(nil)).Elem(), FilesystemSnapshotPolicyMap{})
	pulumi.RegisterOutputType(FilesystemSnapshotPolicyOutput{})
	pulumi.RegisterOutputType(FilesystemSnapshotPolicyArrayOutput{})
	pulumi.RegisterOutputType(FilesystemSnapshotPolicyMapOutput{})
}
