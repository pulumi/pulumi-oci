// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package filestorage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of File System Quota Rules in Oracle Cloud Infrastructure File Storage service.
//
// List user or group usages and their quota rules by certain principal type.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/filestorage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := filestorage.GetFileSystemQuotaRules(ctx, &filestorage.GetFileSystemQuotaRulesArgs{
//				FileSystemId:     testFileSystem.Id,
//				PrincipalType:    fileSystemQuotaRulePrincipalType,
//				AreViolatorsOnly: pulumi.BoolRef(fileSystemQuotaRuleAreViolatorsOnly),
//				PrincipalId:      pulumi.IntRef(testPrincipal.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFileSystemQuotaRules(ctx *pulumi.Context, args *GetFileSystemQuotaRulesArgs, opts ...pulumi.InvokeOption) (*GetFileSystemQuotaRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFileSystemQuotaRulesResult
	err := ctx.Invoke("oci:FileStorage/getFileSystemQuotaRules:getFileSystemQuotaRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFileSystemQuotaRules.
type GetFileSystemQuotaRulesArgs struct {
	// An option to only display the users or groups that violate their quota rules. If `areViolatorsOnly` is false, the list result will display all the quota and usage report. If `areViolatorsOnly` is true, the list result will only display the quota and usage report for the users or groups that violate their quota rules.
	AreViolatorsOnly *bool `pulumi:"areViolatorsOnly"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
	FileSystemId string                          `pulumi:"fileSystemId"`
	Filters      []GetFileSystemQuotaRulesFilter `pulumi:"filters"`
	// An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
	PrincipalId *int `pulumi:"principalId"`
	// The type of the owner of this quota rule and usage.
	PrincipalType string `pulumi:"principalType"`
}

// A collection of values returned by getFileSystemQuotaRules.
type GetFileSystemQuotaRulesResult struct {
	AreViolatorsOnly *bool `pulumi:"areViolatorsOnly"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file System.
	FileSystemId string                          `pulumi:"fileSystemId"`
	Filters      []GetFileSystemQuotaRulesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
	PrincipalId *int `pulumi:"principalId"`
	// The type of the owner of this quota rule and usage.
	PrincipalType string `pulumi:"principalType"`
	// The list of quota_rules.
	QuotaRules []GetFileSystemQuotaRulesQuotaRule `pulumi:"quotaRules"`
}

func GetFileSystemQuotaRulesOutput(ctx *pulumi.Context, args GetFileSystemQuotaRulesOutputArgs, opts ...pulumi.InvokeOption) GetFileSystemQuotaRulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFileSystemQuotaRulesResultOutput, error) {
			args := v.(GetFileSystemQuotaRulesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FileStorage/getFileSystemQuotaRules:getFileSystemQuotaRules", args, GetFileSystemQuotaRulesResultOutput{}, options).(GetFileSystemQuotaRulesResultOutput), nil
		}).(GetFileSystemQuotaRulesResultOutput)
}

// A collection of arguments for invoking getFileSystemQuotaRules.
type GetFileSystemQuotaRulesOutputArgs struct {
	// An option to only display the users or groups that violate their quota rules. If `areViolatorsOnly` is false, the list result will display all the quota and usage report. If `areViolatorsOnly` is true, the list result will only display the quota and usage report for the users or groups that violate their quota rules.
	AreViolatorsOnly pulumi.BoolPtrInput `pulumi:"areViolatorsOnly"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
	FileSystemId pulumi.StringInput                      `pulumi:"fileSystemId"`
	Filters      GetFileSystemQuotaRulesFilterArrayInput `pulumi:"filters"`
	// An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
	PrincipalId pulumi.IntPtrInput `pulumi:"principalId"`
	// The type of the owner of this quota rule and usage.
	PrincipalType pulumi.StringInput `pulumi:"principalType"`
}

func (GetFileSystemQuotaRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemQuotaRulesArgs)(nil)).Elem()
}

// A collection of values returned by getFileSystemQuotaRules.
type GetFileSystemQuotaRulesResultOutput struct{ *pulumi.OutputState }

func (GetFileSystemQuotaRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemQuotaRulesResult)(nil)).Elem()
}

func (o GetFileSystemQuotaRulesResultOutput) ToGetFileSystemQuotaRulesResultOutput() GetFileSystemQuotaRulesResultOutput {
	return o
}

func (o GetFileSystemQuotaRulesResultOutput) ToGetFileSystemQuotaRulesResultOutputWithContext(ctx context.Context) GetFileSystemQuotaRulesResultOutput {
	return o
}

func (o GetFileSystemQuotaRulesResultOutput) AreViolatorsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFileSystemQuotaRulesResult) *bool { return v.AreViolatorsOnly }).(pulumi.BoolPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file System.
func (o GetFileSystemQuotaRulesResultOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemQuotaRulesResult) string { return v.FileSystemId }).(pulumi.StringOutput)
}

func (o GetFileSystemQuotaRulesResultOutput) Filters() GetFileSystemQuotaRulesFilterArrayOutput {
	return o.ApplyT(func(v GetFileSystemQuotaRulesResult) []GetFileSystemQuotaRulesFilter { return v.Filters }).(GetFileSystemQuotaRulesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFileSystemQuotaRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemQuotaRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
func (o GetFileSystemQuotaRulesResultOutput) PrincipalId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetFileSystemQuotaRulesResult) *int { return v.PrincipalId }).(pulumi.IntPtrOutput)
}

// The type of the owner of this quota rule and usage.
func (o GetFileSystemQuotaRulesResultOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemQuotaRulesResult) string { return v.PrincipalType }).(pulumi.StringOutput)
}

// The list of quota_rules.
func (o GetFileSystemQuotaRulesResultOutput) QuotaRules() GetFileSystemQuotaRulesQuotaRuleArrayOutput {
	return o.ApplyT(func(v GetFileSystemQuotaRulesResult) []GetFileSystemQuotaRulesQuotaRule { return v.QuotaRules }).(GetFileSystemQuotaRulesQuotaRuleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFileSystemQuotaRulesResultOutput{})
}
