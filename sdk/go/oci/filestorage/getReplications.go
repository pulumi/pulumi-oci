// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package filestorage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Replications in Oracle Cloud Infrastructure File Storage service.
//
// Lists the replication resources in the specified compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/filestorage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := filestorage.GetReplications(ctx, &filestorage.GetReplicationsArgs{
//				AvailabilityDomain: replicationAvailabilityDomain,
//				CompartmentId:      compartmentId,
//				DisplayName:        pulumi.StringRef(replicationDisplayName),
//				FileSystemId:       pulumi.StringRef(testFileSystem.Id),
//				Id:                 pulumi.StringRef(replicationId),
//				State:              pulumi.StringRef(replicationState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetReplications(ctx *pulumi.Context, args *GetReplicationsArgs, opts ...pulumi.InvokeOption) (*GetReplicationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetReplicationsResult
	err := ctx.Invoke("oci:FileStorage/getReplications:getReplications", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReplications.
type GetReplicationsArgs struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
	DisplayName *string `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source file system.
	FileSystemId *string                 `pulumi:"fileSystemId"`
	Filters      []GetReplicationsFilter `pulumi:"filters"`
	// Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
	Id *string `pulumi:"id"`
	// Filter results by the specified lifecycle state. Must be a valid state for the resource type.
	State *string `pulumi:"state"`
}

// A collection of values returned by getReplications.
type GetReplicationsResult struct {
	// The availability domain the replication is in. The replication must be in the same availability domain as the source file system. Example: `Uocm:PHX-AD-1`
	AvailabilityDomain string `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the replication.
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My replication`
	DisplayName  *string                 `pulumi:"displayName"`
	FileSystemId *string                 `pulumi:"fileSystemId"`
	Filters      []GetReplicationsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the replication.
	Id *string `pulumi:"id"`
	// The list of replications.
	Replications []GetReplicationsReplication `pulumi:"replications"`
	// The current state of this replication. This resource can be in a `FAILED` state if replication target is deleted instead of the replication resource.
	State *string `pulumi:"state"`
}

func GetReplicationsOutput(ctx *pulumi.Context, args GetReplicationsOutputArgs, opts ...pulumi.InvokeOption) GetReplicationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetReplicationsResultOutput, error) {
			args := v.(GetReplicationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FileStorage/getReplications:getReplications", args, GetReplicationsResultOutput{}, options).(GetReplicationsResultOutput), nil
		}).(GetReplicationsResultOutput)
}

// A collection of arguments for invoking getReplications.
type GetReplicationsOutputArgs struct {
	// The name of the availability domain.  Example: `Uocm:PHX-AD-1`
	AvailabilityDomain pulumi.StringInput `pulumi:"availabilityDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source file system.
	FileSystemId pulumi.StringPtrInput           `pulumi:"fileSystemId"`
	Filters      GetReplicationsFilterArrayInput `pulumi:"filters"`
	// Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Filter results by the specified lifecycle state. Must be a valid state for the resource type.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetReplicationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationsArgs)(nil)).Elem()
}

// A collection of values returned by getReplications.
type GetReplicationsResultOutput struct{ *pulumi.OutputState }

func (GetReplicationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationsResult)(nil)).Elem()
}

func (o GetReplicationsResultOutput) ToGetReplicationsResultOutput() GetReplicationsResultOutput {
	return o
}

func (o GetReplicationsResultOutput) ToGetReplicationsResultOutputWithContext(ctx context.Context) GetReplicationsResultOutput {
	return o
}

// The availability domain the replication is in. The replication must be in the same availability domain as the source file system. Example: `Uocm:PHX-AD-1`
func (o GetReplicationsResultOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationsResult) string { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the replication.
func (o GetReplicationsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My replication`
func (o GetReplicationsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReplicationsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetReplicationsResultOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReplicationsResult) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

func (o GetReplicationsResultOutput) Filters() GetReplicationsFilterArrayOutput {
	return o.ApplyT(func(v GetReplicationsResult) []GetReplicationsFilter { return v.Filters }).(GetReplicationsFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the replication.
func (o GetReplicationsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReplicationsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of replications.
func (o GetReplicationsResultOutput) Replications() GetReplicationsReplicationArrayOutput {
	return o.ApplyT(func(v GetReplicationsResult) []GetReplicationsReplication { return v.Replications }).(GetReplicationsReplicationArrayOutput)
}

// The current state of this replication. This resource can be in a `FAILED` state if replication target is deleted instead of the replication resource.
func (o GetReplicationsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReplicationsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetReplicationsResultOutput{})
}
