// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Catalog Item resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Creates a CatalogItem.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.NewCatalogItem(ctx, "test_catalog_item", &fleetappsmanagement.CatalogItemArgs{
//				CompartmentId:    pulumi.Any(compartmentId),
//				ConfigSourceType: pulumi.Any(catalogItemConfigSourceType),
//				Description:      pulumi.Any(catalogItemDescription),
//				DisplayName:      pulumi.Any(catalogItemDisplayName),
//				PackageType:      pulumi.Any(catalogItemPackageType),
//				CatalogSourcePayload: &fleetappsmanagement.CatalogItemCatalogSourcePayloadArgs{
//					ConfigSourceType:              pulumi.Any(catalogItemCatalogSourcePayloadConfigSourceType),
//					AccessUri:                     pulumi.Any(catalogItemCatalogSourcePayloadAccessUri),
//					BranchName:                    pulumi.Any(catalogItemCatalogSourcePayloadBranchName),
//					Bucket:                        pulumi.Any(catalogItemCatalogSourcePayloadBucket),
//					ConfigurationSourceProviderId: pulumi.Any(testConfigurationSourceProvider.Id),
//					Description:                   pulumi.Any(catalogItemCatalogSourcePayloadDescription),
//					ListingId:                     pulumi.Any(testListing.Id),
//					LongDescription:               pulumi.Any(catalogItemCatalogSourcePayloadLongDescription),
//					Namespace:                     pulumi.Any(catalogItemCatalogSourcePayloadNamespace),
//					Object:                        pulumi.Any(catalogItemCatalogSourcePayloadObject),
//					RepositoryUrl:                 pulumi.Any(catalogItemCatalogSourcePayloadRepositoryUrl),
//					TemplateDisplayName:           pulumi.Any(catalogItemCatalogSourcePayloadTemplateDisplayName),
//					TimeExpires:                   pulumi.Any(catalogItemCatalogSourcePayloadTimeExpires),
//					Version:                       pulumi.Any(catalogItemCatalogSourcePayloadVersion),
//					WorkingDirectory:              pulumi.Any(catalogItemCatalogSourcePayloadWorkingDirectory),
//					ZipFileBase64encoded:          pulumi.Any(catalogItemCatalogSourcePayloadZipFileBase64encoded),
//				},
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				ListingId:          pulumi.Any(testListing.Id),
//				ListingVersion:     pulumi.Any(catalogItemListingVersion),
//				ShortDescription:   pulumi.Any(catalogItemShortDescription),
//				TimeReleased:       pulumi.Any(catalogItemTimeReleased),
//				VersionDescription: pulumi.Any(catalogItemVersionDescription),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CatalogItems can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:FleetAppsManagement/catalogItem:CatalogItem test_catalog_item "id"
// ```
type CatalogItem struct {
	pulumi.CustomResourceState

	// Catalog result payload.
	CatalogResultPayloads CatalogItemCatalogResultPayloadArrayOutput `pulumi:"catalogResultPayloads"`
	// Catalog source payload.
	CatalogSourcePayload CatalogItemCatalogSourcePayloadOutput `pulumi:"catalogSourcePayload"`
	// (Updatable) An optional property when incremented triggers Clone Catalog Item. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CloneCatalogItemTrigger pulumi.IntPtrOutput `pulumi:"cloneCatalogItemTrigger"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
	ConfigSourceType pulumi.StringOutput `pulumi:"configSourceType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// (Updatable) The description of the CatalogItem.
	Description pulumi.StringOutput `pulumi:"description"`
	// (Updatable) The CatalogItem name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// The details of lifecycle state CatalogItem.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// The catalog listing Id.
	ListingId pulumi.StringOutput `pulumi:"listingId"`
	// The catalog package version.
	ListingVersion pulumi.StringOutput `pulumi:"listingVersion"`
	// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
	PackageType pulumi.StringOutput `pulumi:"packageType"`
	// (Updatable) Short description about the catalog item.
	ShortDescription pulumi.StringOutput `pulumi:"shortDescription"`
	// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
	ShouldListPublicItems pulumi.BoolOutput `pulumi:"shouldListPublicItems"`
	// The current state of the CatalogItem.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the CatalogItem was last checked by backfill job, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeBackfillLastChecked pulumi.StringOutput `pulumi:"timeBackfillLastChecked"`
	// The date and time the CatalogItem was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the CatalogItem was last checked, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeLastChecked pulumi.StringOutput `pulumi:"timeLastChecked"`
	// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeReleased pulumi.StringOutput `pulumi:"timeReleased"`
	// The date and time the CatalogItem was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) Version description about the catalog item.
	VersionDescription pulumi.StringOutput `pulumi:"versionDescription"`
}

// NewCatalogItem registers a new resource with the given unique name, arguments, and options.
func NewCatalogItem(ctx *pulumi.Context,
	name string, args *CatalogItemArgs, opts ...pulumi.ResourceOption) (*CatalogItem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.ConfigSourceType == nil {
		return nil, errors.New("invalid value for required argument 'ConfigSourceType'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.PackageType == nil {
		return nil, errors.New("invalid value for required argument 'PackageType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CatalogItem
	err := ctx.RegisterResource("oci:FleetAppsManagement/catalogItem:CatalogItem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCatalogItem gets an existing CatalogItem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCatalogItem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CatalogItemState, opts ...pulumi.ResourceOption) (*CatalogItem, error) {
	var resource CatalogItem
	err := ctx.ReadResource("oci:FleetAppsManagement/catalogItem:CatalogItem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CatalogItem resources.
type catalogItemState struct {
	// Catalog result payload.
	CatalogResultPayloads []CatalogItemCatalogResultPayload `pulumi:"catalogResultPayloads"`
	// Catalog source payload.
	CatalogSourcePayload *CatalogItemCatalogSourcePayload `pulumi:"catalogSourcePayload"`
	// (Updatable) An optional property when incremented triggers Clone Catalog Item. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CloneCatalogItemTrigger *int `pulumi:"cloneCatalogItemTrigger"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId *string `pulumi:"compartmentId"`
	// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
	ConfigSourceType *string `pulumi:"configSourceType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The description of the CatalogItem.
	Description *string `pulumi:"description"`
	// (Updatable) The CatalogItem name.
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The details of lifecycle state CatalogItem.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// The catalog listing Id.
	ListingId *string `pulumi:"listingId"`
	// The catalog package version.
	ListingVersion *string `pulumi:"listingVersion"`
	// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
	PackageType *string `pulumi:"packageType"`
	// (Updatable) Short description about the catalog item.
	ShortDescription *string `pulumi:"shortDescription"`
	// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
	ShouldListPublicItems *bool `pulumi:"shouldListPublicItems"`
	// The current state of the CatalogItem.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the CatalogItem was last checked by backfill job, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeBackfillLastChecked *string `pulumi:"timeBackfillLastChecked"`
	// The date and time the CatalogItem was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the CatalogItem was last checked, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeLastChecked *string `pulumi:"timeLastChecked"`
	// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeReleased *string `pulumi:"timeReleased"`
	// The date and time the CatalogItem was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) Version description about the catalog item.
	VersionDescription *string `pulumi:"versionDescription"`
}

type CatalogItemState struct {
	// Catalog result payload.
	CatalogResultPayloads CatalogItemCatalogResultPayloadArrayInput
	// Catalog source payload.
	CatalogSourcePayload CatalogItemCatalogSourcePayloadPtrInput
	// (Updatable) An optional property when incremented triggers Clone Catalog Item. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CloneCatalogItemTrigger pulumi.IntPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringPtrInput
	// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
	ConfigSourceType pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) The description of the CatalogItem.
	Description pulumi.StringPtrInput
	// (Updatable) The CatalogItem name.
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// The details of lifecycle state CatalogItem.
	LifecycleDetails pulumi.StringPtrInput
	// The catalog listing Id.
	ListingId pulumi.StringPtrInput
	// The catalog package version.
	ListingVersion pulumi.StringPtrInput
	// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
	PackageType pulumi.StringPtrInput
	// (Updatable) Short description about the catalog item.
	ShortDescription pulumi.StringPtrInput
	// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
	ShouldListPublicItems pulumi.BoolPtrInput
	// The current state of the CatalogItem.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The date and time the CatalogItem was last checked by backfill job, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeBackfillLastChecked pulumi.StringPtrInput
	// The date and time the CatalogItem was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The date and time the CatalogItem was last checked, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeLastChecked pulumi.StringPtrInput
	// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeReleased pulumi.StringPtrInput
	// The date and time the CatalogItem was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) Version description about the catalog item.
	VersionDescription pulumi.StringPtrInput
}

func (CatalogItemState) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogItemState)(nil)).Elem()
}

type catalogItemArgs struct {
	// Catalog source payload.
	CatalogSourcePayload *CatalogItemCatalogSourcePayload `pulumi:"catalogSourcePayload"`
	// (Updatable) An optional property when incremented triggers Clone Catalog Item. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CloneCatalogItemTrigger *int `pulumi:"cloneCatalogItemTrigger"`
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
	ConfigSourceType string `pulumi:"configSourceType"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// (Updatable) The description of the CatalogItem.
	Description string `pulumi:"description"`
	// (Updatable) The CatalogItem name.
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The catalog listing Id.
	ListingId *string `pulumi:"listingId"`
	// The catalog package version.
	ListingVersion *string `pulumi:"listingVersion"`
	// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
	PackageType string `pulumi:"packageType"`
	// (Updatable) Short description about the catalog item.
	ShortDescription *string `pulumi:"shortDescription"`
	// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeReleased *string `pulumi:"timeReleased"`
	// (Updatable) Version description about the catalog item.
	VersionDescription *string `pulumi:"versionDescription"`
}

// The set of arguments for constructing a CatalogItem resource.
type CatalogItemArgs struct {
	// Catalog source payload.
	CatalogSourcePayload CatalogItemCatalogSourcePayloadPtrInput
	// (Updatable) An optional property when incremented triggers Clone Catalog Item. Could be set to any integer value.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	CloneCatalogItemTrigger pulumi.IntPtrInput
	// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput
	// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
	ConfigSourceType pulumi.StringInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// (Updatable) The description of the CatalogItem.
	Description pulumi.StringInput
	// (Updatable) The CatalogItem name.
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// The catalog listing Id.
	ListingId pulumi.StringPtrInput
	// The catalog package version.
	ListingVersion pulumi.StringPtrInput
	// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
	PackageType pulumi.StringInput
	// (Updatable) Short description about the catalog item.
	ShortDescription pulumi.StringPtrInput
	// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeReleased pulumi.StringPtrInput
	// (Updatable) Version description about the catalog item.
	VersionDescription pulumi.StringPtrInput
}

func (CatalogItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogItemArgs)(nil)).Elem()
}

type CatalogItemInput interface {
	pulumi.Input

	ToCatalogItemOutput() CatalogItemOutput
	ToCatalogItemOutputWithContext(ctx context.Context) CatalogItemOutput
}

func (*CatalogItem) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogItem)(nil)).Elem()
}

func (i *CatalogItem) ToCatalogItemOutput() CatalogItemOutput {
	return i.ToCatalogItemOutputWithContext(context.Background())
}

func (i *CatalogItem) ToCatalogItemOutputWithContext(ctx context.Context) CatalogItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogItemOutput)
}

// CatalogItemArrayInput is an input type that accepts CatalogItemArray and CatalogItemArrayOutput values.
// You can construct a concrete instance of `CatalogItemArrayInput` via:
//
//	CatalogItemArray{ CatalogItemArgs{...} }
type CatalogItemArrayInput interface {
	pulumi.Input

	ToCatalogItemArrayOutput() CatalogItemArrayOutput
	ToCatalogItemArrayOutputWithContext(context.Context) CatalogItemArrayOutput
}

type CatalogItemArray []CatalogItemInput

func (CatalogItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CatalogItem)(nil)).Elem()
}

func (i CatalogItemArray) ToCatalogItemArrayOutput() CatalogItemArrayOutput {
	return i.ToCatalogItemArrayOutputWithContext(context.Background())
}

func (i CatalogItemArray) ToCatalogItemArrayOutputWithContext(ctx context.Context) CatalogItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogItemArrayOutput)
}

// CatalogItemMapInput is an input type that accepts CatalogItemMap and CatalogItemMapOutput values.
// You can construct a concrete instance of `CatalogItemMapInput` via:
//
//	CatalogItemMap{ "key": CatalogItemArgs{...} }
type CatalogItemMapInput interface {
	pulumi.Input

	ToCatalogItemMapOutput() CatalogItemMapOutput
	ToCatalogItemMapOutputWithContext(context.Context) CatalogItemMapOutput
}

type CatalogItemMap map[string]CatalogItemInput

func (CatalogItemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CatalogItem)(nil)).Elem()
}

func (i CatalogItemMap) ToCatalogItemMapOutput() CatalogItemMapOutput {
	return i.ToCatalogItemMapOutputWithContext(context.Background())
}

func (i CatalogItemMap) ToCatalogItemMapOutputWithContext(ctx context.Context) CatalogItemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogItemMapOutput)
}

type CatalogItemOutput struct{ *pulumi.OutputState }

func (CatalogItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogItem)(nil)).Elem()
}

func (o CatalogItemOutput) ToCatalogItemOutput() CatalogItemOutput {
	return o
}

func (o CatalogItemOutput) ToCatalogItemOutputWithContext(ctx context.Context) CatalogItemOutput {
	return o
}

// Catalog result payload.
func (o CatalogItemOutput) CatalogResultPayloads() CatalogItemCatalogResultPayloadArrayOutput {
	return o.ApplyT(func(v *CatalogItem) CatalogItemCatalogResultPayloadArrayOutput { return v.CatalogResultPayloads }).(CatalogItemCatalogResultPayloadArrayOutput)
}

// Catalog source payload.
func (o CatalogItemOutput) CatalogSourcePayload() CatalogItemCatalogSourcePayloadOutput {
	return o.ApplyT(func(v *CatalogItem) CatalogItemCatalogSourcePayloadOutput { return v.CatalogSourcePayload }).(CatalogItemCatalogSourcePayloadOutput)
}

// (Updatable) An optional property when incremented triggers Clone Catalog Item. Could be set to any integer value.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o CatalogItemOutput) CloneCatalogItemTrigger() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.IntPtrOutput { return v.CloneCatalogItemTrigger }).(pulumi.IntPtrOutput)
}

// (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o CatalogItemOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
func (o CatalogItemOutput) ConfigSourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.ConfigSourceType }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o CatalogItemOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// (Updatable) The description of the CatalogItem.
func (o CatalogItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// (Updatable) The CatalogItem name.
func (o CatalogItemOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o CatalogItemOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The details of lifecycle state CatalogItem.
func (o CatalogItemOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The catalog listing Id.
func (o CatalogItemOutput) ListingId() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.ListingId }).(pulumi.StringOutput)
}

// The catalog package version.
func (o CatalogItemOutput) ListingVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.ListingVersion }).(pulumi.StringOutput)
}

// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
func (o CatalogItemOutput) PackageType() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.PackageType }).(pulumi.StringOutput)
}

// (Updatable) Short description about the catalog item.
func (o CatalogItemOutput) ShortDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.ShortDescription }).(pulumi.StringOutput)
}

// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
func (o CatalogItemOutput) ShouldListPublicItems() pulumi.BoolOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.BoolOutput { return v.ShouldListPublicItems }).(pulumi.BoolOutput)
}

// The current state of the CatalogItem.
func (o CatalogItemOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o CatalogItemOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the CatalogItem was last checked by backfill job, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o CatalogItemOutput) TimeBackfillLastChecked() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.TimeBackfillLastChecked }).(pulumi.StringOutput)
}

// The date and time the CatalogItem was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o CatalogItemOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the CatalogItem was last checked, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o CatalogItemOutput) TimeLastChecked() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.TimeLastChecked }).(pulumi.StringOutput)
}

// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o CatalogItemOutput) TimeReleased() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.TimeReleased }).(pulumi.StringOutput)
}

// The date and time the CatalogItem was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o CatalogItemOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) Version description about the catalog item.
func (o CatalogItemOutput) VersionDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.VersionDescription }).(pulumi.StringOutput)
}

type CatalogItemArrayOutput struct{ *pulumi.OutputState }

func (CatalogItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CatalogItem)(nil)).Elem()
}

func (o CatalogItemArrayOutput) ToCatalogItemArrayOutput() CatalogItemArrayOutput {
	return o
}

func (o CatalogItemArrayOutput) ToCatalogItemArrayOutputWithContext(ctx context.Context) CatalogItemArrayOutput {
	return o
}

func (o CatalogItemArrayOutput) Index(i pulumi.IntInput) CatalogItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CatalogItem {
		return vs[0].([]*CatalogItem)[vs[1].(int)]
	}).(CatalogItemOutput)
}

type CatalogItemMapOutput struct{ *pulumi.OutputState }

func (CatalogItemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CatalogItem)(nil)).Elem()
}

func (o CatalogItemMapOutput) ToCatalogItemMapOutput() CatalogItemMapOutput {
	return o
}

func (o CatalogItemMapOutput) ToCatalogItemMapOutputWithContext(ctx context.Context) CatalogItemMapOutput {
	return o
}

func (o CatalogItemMapOutput) MapIndex(k pulumi.StringInput) CatalogItemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CatalogItem {
		return vs[0].(map[string]*CatalogItem)[vs[1].(string)]
	}).(CatalogItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogItemInput)(nil)).Elem(), &CatalogItem{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogItemArrayInput)(nil)).Elem(), CatalogItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogItemMapInput)(nil)).Elem(), CatalogItemMap{})
	pulumi.RegisterOutputType(CatalogItemOutput{})
	pulumi.RegisterOutputType(CatalogItemArrayOutput{})
	pulumi.RegisterOutputType(CatalogItemMapOutput{})
}
