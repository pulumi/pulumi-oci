// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Compliance Policy Rule resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Creates a CompliancePolicyRule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.NewCompliancePolicyRule(ctx, "test_compliance_policy_rule", &FleetAppsManagement.CompliancePolicyRuleArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				DisplayName:   pulumi.Any(compliancePolicyRuleDisplayName),
//				PatchSelection: &fleetappsmanagement.CompliancePolicyRulePatchSelectionArgs{
//					SelectionType:    pulumi.Any(compliancePolicyRulePatchSelectionSelectionType),
//					DaysSinceRelease: pulumi.Any(compliancePolicyRulePatchSelectionDaysSinceRelease),
//					PatchLevel:       pulumi.Any(compliancePolicyRulePatchSelectionPatchLevel),
//					PatchName:        pulumi.Any(testPatch.Name),
//				},
//				PatchTypes: pulumi.Any(compliancePolicyRulePatchType),
//				ProductVersion: &fleetappsmanagement.CompliancePolicyRuleProductVersionArgs{
//					Version:                          pulumi.Any(compliancePolicyRuleProductVersionVersion),
//					IsApplicableForAllHigherVersions: pulumi.Any(compliancePolicyRuleProductVersionIsApplicableForAllHigherVersions),
//				},
//				CompliancePolicyId: pulumi.Any(testCompliancePolicy.Id),
//				DefinedTags: pulumi.StringMap{
//					"foo-namespace.bar-key": pulumi.String("value"),
//				},
//				FreeformTags: pulumi.StringMap{
//					"bar-key": pulumi.String("value"),
//				},
//				GracePeriod: pulumi.Any(compliancePolicyRuleGracePeriod),
//				Severities:  pulumi.Any(compliancePolicyRuleSeverity),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CompliancePolicyRules can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import oci:FleetAppsManagement/compliancePolicyRule:CompliancePolicyRule test_compliance_policy_rule "id"
// ```
type CompliancePolicyRule struct {
	pulumi.CustomResourceState

	// The OCID of the compartment the CompliancePolicyRule belongs to.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
	CompliancePolicyId pulumi.StringOutput `pulumi:"compliancePolicyId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapOutput `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapOutput `pulumi:"freeformTags"`
	// (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
	GracePeriod pulumi.StringOutput `pulumi:"gracePeriod"`
	// A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) Patch Selection Details
	PatchSelection CompliancePolicyRulePatchSelectionOutput `pulumi:"patchSelection"`
	// (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
	PatchTypes pulumi.StringArrayOutput `pulumi:"patchTypes"`
	// (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
	ProductVersion CompliancePolicyRuleProductVersionOutput `pulumi:"productVersion"`
	// (Updatable) Severity to which this CompliancePolicyRule applies.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Severities pulumi.StringArrayOutput `pulumi:"severities"`
	// The current state of the CompliancePolicyRule.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewCompliancePolicyRule registers a new resource with the given unique name, arguments, and options.
func NewCompliancePolicyRule(ctx *pulumi.Context,
	name string, args *CompliancePolicyRuleArgs, opts ...pulumi.ResourceOption) (*CompliancePolicyRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.PatchSelection == nil {
		return nil, errors.New("invalid value for required argument 'PatchSelection'")
	}
	if args.PatchTypes == nil {
		return nil, errors.New("invalid value for required argument 'PatchTypes'")
	}
	if args.ProductVersion == nil {
		return nil, errors.New("invalid value for required argument 'ProductVersion'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CompliancePolicyRule
	err := ctx.RegisterResource("oci:FleetAppsManagement/compliancePolicyRule:CompliancePolicyRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCompliancePolicyRule gets an existing CompliancePolicyRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCompliancePolicyRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CompliancePolicyRuleState, opts ...pulumi.ResourceOption) (*CompliancePolicyRule, error) {
	var resource CompliancePolicyRule
	err := ctx.ReadResource("oci:FleetAppsManagement/compliancePolicyRule:CompliancePolicyRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CompliancePolicyRule resources.
type compliancePolicyRuleState struct {
	// The OCID of the compartment the CompliancePolicyRule belongs to.
	CompartmentId *string `pulumi:"compartmentId"`
	// Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
	CompliancePolicyId *string `pulumi:"compliancePolicyId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
	GracePeriod *string `pulumi:"gracePeriod"`
	// A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) Patch Selection Details
	PatchSelection *CompliancePolicyRulePatchSelection `pulumi:"patchSelection"`
	// (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
	PatchTypes []string `pulumi:"patchTypes"`
	// (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
	ProductVersion *CompliancePolicyRuleProductVersion `pulumi:"productVersion"`
	// (Updatable) Severity to which this CompliancePolicyRule applies.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Severities []string `pulumi:"severities"`
	// The current state of the CompliancePolicyRule.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated *string `pulumi:"timeCreated"`
	// The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type CompliancePolicyRuleState struct {
	// The OCID of the compartment the CompliancePolicyRule belongs to.
	CompartmentId pulumi.StringPtrInput
	// Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
	CompliancePolicyId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
	GracePeriod pulumi.StringPtrInput
	// A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) Patch Selection Details
	PatchSelection CompliancePolicyRulePatchSelectionPtrInput
	// (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
	PatchTypes pulumi.StringArrayInput
	// (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
	ProductVersion CompliancePolicyRuleProductVersionPtrInput
	// (Updatable) Severity to which this CompliancePolicyRule applies.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Severities pulumi.StringArrayInput
	// The current state of the CompliancePolicyRule.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated pulumi.StringPtrInput
	// The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated pulumi.StringPtrInput
}

func (CompliancePolicyRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*compliancePolicyRuleState)(nil)).Elem()
}

type compliancePolicyRuleArgs struct {
	// The OCID of the compartment the CompliancePolicyRule belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
	CompliancePolicyId *string `pulumi:"compliancePolicyId"`
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
	GracePeriod *string `pulumi:"gracePeriod"`
	// (Updatable) Patch Selection Details
	PatchSelection CompliancePolicyRulePatchSelection `pulumi:"patchSelection"`
	// (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
	PatchTypes []string `pulumi:"patchTypes"`
	// (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
	ProductVersion CompliancePolicyRuleProductVersion `pulumi:"productVersion"`
	// (Updatable) Severity to which this CompliancePolicyRule applies.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Severities []string `pulumi:"severities"`
}

// The set of arguments for constructing a CompliancePolicyRule resource.
type CompliancePolicyRuleArgs struct {
	// The OCID of the compartment the CompliancePolicyRule belongs to.
	CompartmentId pulumi.StringInput
	// Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
	CompliancePolicyId pulumi.StringPtrInput
	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags pulumi.StringMapInput
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringInput
	// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags pulumi.StringMapInput
	// (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
	GracePeriod pulumi.StringPtrInput
	// (Updatable) Patch Selection Details
	PatchSelection CompliancePolicyRulePatchSelectionInput
	// (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
	PatchTypes pulumi.StringArrayInput
	// (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
	ProductVersion CompliancePolicyRuleProductVersionInput
	// (Updatable) Severity to which this CompliancePolicyRule applies.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	Severities pulumi.StringArrayInput
}

func (CompliancePolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*compliancePolicyRuleArgs)(nil)).Elem()
}

type CompliancePolicyRuleInput interface {
	pulumi.Input

	ToCompliancePolicyRuleOutput() CompliancePolicyRuleOutput
	ToCompliancePolicyRuleOutputWithContext(ctx context.Context) CompliancePolicyRuleOutput
}

func (*CompliancePolicyRule) ElementType() reflect.Type {
	return reflect.TypeOf((**CompliancePolicyRule)(nil)).Elem()
}

func (i *CompliancePolicyRule) ToCompliancePolicyRuleOutput() CompliancePolicyRuleOutput {
	return i.ToCompliancePolicyRuleOutputWithContext(context.Background())
}

func (i *CompliancePolicyRule) ToCompliancePolicyRuleOutputWithContext(ctx context.Context) CompliancePolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompliancePolicyRuleOutput)
}

// CompliancePolicyRuleArrayInput is an input type that accepts CompliancePolicyRuleArray and CompliancePolicyRuleArrayOutput values.
// You can construct a concrete instance of `CompliancePolicyRuleArrayInput` via:
//
//	CompliancePolicyRuleArray{ CompliancePolicyRuleArgs{...} }
type CompliancePolicyRuleArrayInput interface {
	pulumi.Input

	ToCompliancePolicyRuleArrayOutput() CompliancePolicyRuleArrayOutput
	ToCompliancePolicyRuleArrayOutputWithContext(context.Context) CompliancePolicyRuleArrayOutput
}

type CompliancePolicyRuleArray []CompliancePolicyRuleInput

func (CompliancePolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CompliancePolicyRule)(nil)).Elem()
}

func (i CompliancePolicyRuleArray) ToCompliancePolicyRuleArrayOutput() CompliancePolicyRuleArrayOutput {
	return i.ToCompliancePolicyRuleArrayOutputWithContext(context.Background())
}

func (i CompliancePolicyRuleArray) ToCompliancePolicyRuleArrayOutputWithContext(ctx context.Context) CompliancePolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompliancePolicyRuleArrayOutput)
}

// CompliancePolicyRuleMapInput is an input type that accepts CompliancePolicyRuleMap and CompliancePolicyRuleMapOutput values.
// You can construct a concrete instance of `CompliancePolicyRuleMapInput` via:
//
//	CompliancePolicyRuleMap{ "key": CompliancePolicyRuleArgs{...} }
type CompliancePolicyRuleMapInput interface {
	pulumi.Input

	ToCompliancePolicyRuleMapOutput() CompliancePolicyRuleMapOutput
	ToCompliancePolicyRuleMapOutputWithContext(context.Context) CompliancePolicyRuleMapOutput
}

type CompliancePolicyRuleMap map[string]CompliancePolicyRuleInput

func (CompliancePolicyRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CompliancePolicyRule)(nil)).Elem()
}

func (i CompliancePolicyRuleMap) ToCompliancePolicyRuleMapOutput() CompliancePolicyRuleMapOutput {
	return i.ToCompliancePolicyRuleMapOutputWithContext(context.Background())
}

func (i CompliancePolicyRuleMap) ToCompliancePolicyRuleMapOutputWithContext(ctx context.Context) CompliancePolicyRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompliancePolicyRuleMapOutput)
}

type CompliancePolicyRuleOutput struct{ *pulumi.OutputState }

func (CompliancePolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompliancePolicyRule)(nil)).Elem()
}

func (o CompliancePolicyRuleOutput) ToCompliancePolicyRuleOutput() CompliancePolicyRuleOutput {
	return o
}

func (o CompliancePolicyRuleOutput) ToCompliancePolicyRuleOutputWithContext(ctx context.Context) CompliancePolicyRuleOutput {
	return o
}

// The OCID of the compartment the CompliancePolicyRule belongs to.
func (o CompliancePolicyRuleOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
func (o CompliancePolicyRuleOutput) CompliancePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringOutput { return v.CompliancePolicyId }).(pulumi.StringOutput)
}

// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o CompliancePolicyRuleOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringMapOutput { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o CompliancePolicyRuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o CompliancePolicyRuleOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringMapOutput { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
func (o CompliancePolicyRuleOutput) GracePeriod() pulumi.StringOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringOutput { return v.GracePeriod }).(pulumi.StringOutput)
}

// A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
func (o CompliancePolicyRuleOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) Patch Selection Details
func (o CompliancePolicyRuleOutput) PatchSelection() CompliancePolicyRulePatchSelectionOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) CompliancePolicyRulePatchSelectionOutput { return v.PatchSelection }).(CompliancePolicyRulePatchSelectionOutput)
}

// (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
func (o CompliancePolicyRuleOutput) PatchTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringArrayOutput { return v.PatchTypes }).(pulumi.StringArrayOutput)
}

// (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
func (o CompliancePolicyRuleOutput) ProductVersion() CompliancePolicyRuleProductVersionOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) CompliancePolicyRuleProductVersionOutput { return v.ProductVersion }).(CompliancePolicyRuleProductVersionOutput)
}

// (Updatable) Severity to which this CompliancePolicyRule applies.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o CompliancePolicyRuleOutput) Severities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringArrayOutput { return v.Severities }).(pulumi.StringArrayOutput)
}

// The current state of the CompliancePolicyRule.
func (o CompliancePolicyRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o CompliancePolicyRuleOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o CompliancePolicyRuleOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o CompliancePolicyRuleOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *CompliancePolicyRule) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type CompliancePolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (CompliancePolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CompliancePolicyRule)(nil)).Elem()
}

func (o CompliancePolicyRuleArrayOutput) ToCompliancePolicyRuleArrayOutput() CompliancePolicyRuleArrayOutput {
	return o
}

func (o CompliancePolicyRuleArrayOutput) ToCompliancePolicyRuleArrayOutputWithContext(ctx context.Context) CompliancePolicyRuleArrayOutput {
	return o
}

func (o CompliancePolicyRuleArrayOutput) Index(i pulumi.IntInput) CompliancePolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CompliancePolicyRule {
		return vs[0].([]*CompliancePolicyRule)[vs[1].(int)]
	}).(CompliancePolicyRuleOutput)
}

type CompliancePolicyRuleMapOutput struct{ *pulumi.OutputState }

func (CompliancePolicyRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CompliancePolicyRule)(nil)).Elem()
}

func (o CompliancePolicyRuleMapOutput) ToCompliancePolicyRuleMapOutput() CompliancePolicyRuleMapOutput {
	return o
}

func (o CompliancePolicyRuleMapOutput) ToCompliancePolicyRuleMapOutputWithContext(ctx context.Context) CompliancePolicyRuleMapOutput {
	return o
}

func (o CompliancePolicyRuleMapOutput) MapIndex(k pulumi.StringInput) CompliancePolicyRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CompliancePolicyRule {
		return vs[0].(map[string]*CompliancePolicyRule)[vs[1].(string)]
	}).(CompliancePolicyRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CompliancePolicyRuleInput)(nil)).Elem(), &CompliancePolicyRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*CompliancePolicyRuleArrayInput)(nil)).Elem(), CompliancePolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CompliancePolicyRuleMapInput)(nil)).Elem(), CompliancePolicyRuleMap{})
	pulumi.RegisterOutputType(CompliancePolicyRuleOutput{})
	pulumi.RegisterOutputType(CompliancePolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(CompliancePolicyRuleMapOutput{})
}
