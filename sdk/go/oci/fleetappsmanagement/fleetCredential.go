// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Fleet Credential resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Creates a new FleetCredential.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.NewFleetCredential(ctx, "test_fleet_credential", &FleetAppsManagement.FleetCredentialArgs{
//				CompartmentId: pulumi.Any(compartmentId),
//				DisplayName:   pulumi.Any(fleetCredentialDisplayName),
//				EntitySpecifics: &fleetappsmanagement.FleetCredentialEntitySpecificsArgs{
//					CredentialLevel: pulumi.Any(fleetCredentialEntitySpecificsCredentialLevel),
//					ResourceId:      pulumi.Any(testResource.Id),
//					Target:          pulumi.Any(fleetCredentialEntitySpecificsTarget),
//				},
//				FleetId: pulumi.Any(testFleet.Id),
//				Password: &fleetappsmanagement.FleetCredentialPasswordArgs{
//					CredentialType: pulumi.Any(fleetCredentialPasswordCredentialType),
//					KeyId:          pulumi.Any(testKey.Id),
//					KeyVersion:     pulumi.Any(fleetCredentialPasswordKeyVersion),
//					SecretId:       pulumi.Any(testSecret.Id),
//					SecretVersion:  pulumi.Any(fleetCredentialPasswordSecretVersion),
//					Value:          pulumi.Any(fleetCredentialPasswordValue),
//					VaultId:        pulumi.Any(testVault.Id),
//				},
//				User: &fleetappsmanagement.FleetCredentialUserArgs{
//					CredentialType: pulumi.Any(fleetCredentialUserCredentialType),
//					KeyId:          pulumi.Any(testKey.Id),
//					KeyVersion:     pulumi.Any(fleetCredentialUserKeyVersion),
//					SecretId:       pulumi.Any(testSecret.Id),
//					SecretVersion:  pulumi.Any(fleetCredentialUserSecretVersion),
//					Value:          pulumi.Any(fleetCredentialUserValue),
//					VaultId:        pulumi.Any(testVault.Id),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type FleetCredential struct {
	pulumi.CustomResourceState

	// Tenancy OCID
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Updatable) Credential Details
	EntitySpecifics FleetCredentialEntitySpecificsOutput `pulumi:"entitySpecifics"`
	// unique Fleet identifier
	FleetId pulumi.StringOutput `pulumi:"fleetId"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// (Updatable) Credential Details
	Password FleetCredentialPasswordOutput `pulumi:"password"`
	// The current state of the FleetCredential.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
	// (Updatable) Credential Details
	User FleetCredentialUserOutput `pulumi:"user"`
}

// NewFleetCredential registers a new resource with the given unique name, arguments, and options.
func NewFleetCredential(ctx *pulumi.Context,
	name string, args *FleetCredentialArgs, opts ...pulumi.ResourceOption) (*FleetCredential, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.EntitySpecifics == nil {
		return nil, errors.New("invalid value for required argument 'EntitySpecifics'")
	}
	if args.FleetId == nil {
		return nil, errors.New("invalid value for required argument 'FleetId'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.User == nil {
		return nil, errors.New("invalid value for required argument 'User'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FleetCredential
	err := ctx.RegisterResource("oci:FleetAppsManagement/fleetCredential:FleetCredential", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFleetCredential gets an existing FleetCredential resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFleetCredential(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FleetCredentialState, opts ...pulumi.ResourceOption) (*FleetCredential, error) {
	var resource FleetCredential
	err := ctx.ReadResource("oci:FleetAppsManagement/fleetCredential:FleetCredential", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FleetCredential resources.
type fleetCredentialState struct {
	// Tenancy OCID
	CompartmentId *string `pulumi:"compartmentId"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// (Updatable) Credential Details
	EntitySpecifics *FleetCredentialEntitySpecifics `pulumi:"entitySpecifics"`
	// unique Fleet identifier
	FleetId *string `pulumi:"fleetId"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// (Updatable) Credential Details
	Password *FleetCredentialPassword `pulumi:"password"`
	// The current state of the FleetCredential.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
	// (Updatable) Credential Details
	User *FleetCredentialUser `pulumi:"user"`
}

type FleetCredentialState struct {
	// Tenancy OCID
	CompartmentId pulumi.StringPtrInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput
	// (Updatable) Credential Details
	EntitySpecifics FleetCredentialEntitySpecificsPtrInput
	// unique Fleet identifier
	FleetId pulumi.StringPtrInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// (Updatable) Credential Details
	Password FleetCredentialPasswordPtrInput
	// The current state of the FleetCredential.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
	// (Updatable) Credential Details
	User FleetCredentialUserPtrInput
}

func (FleetCredentialState) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetCredentialState)(nil)).Elem()
}

type fleetCredentialArgs struct {
	// Tenancy OCID
	CompartmentId string `pulumi:"compartmentId"`
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// (Updatable) Credential Details
	EntitySpecifics FleetCredentialEntitySpecifics `pulumi:"entitySpecifics"`
	// unique Fleet identifier
	FleetId string `pulumi:"fleetId"`
	// (Updatable) Credential Details
	Password FleetCredentialPassword `pulumi:"password"`
	// (Updatable) Credential Details
	User FleetCredentialUser `pulumi:"user"`
}

// The set of arguments for constructing a FleetCredential resource.
type FleetCredentialArgs struct {
	// Tenancy OCID
	CompartmentId pulumi.StringInput
	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringInput
	// (Updatable) Credential Details
	EntitySpecifics FleetCredentialEntitySpecificsInput
	// unique Fleet identifier
	FleetId pulumi.StringInput
	// (Updatable) Credential Details
	Password FleetCredentialPasswordInput
	// (Updatable) Credential Details
	User FleetCredentialUserInput
}

func (FleetCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetCredentialArgs)(nil)).Elem()
}

type FleetCredentialInput interface {
	pulumi.Input

	ToFleetCredentialOutput() FleetCredentialOutput
	ToFleetCredentialOutputWithContext(ctx context.Context) FleetCredentialOutput
}

func (*FleetCredential) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetCredential)(nil)).Elem()
}

func (i *FleetCredential) ToFleetCredentialOutput() FleetCredentialOutput {
	return i.ToFleetCredentialOutputWithContext(context.Background())
}

func (i *FleetCredential) ToFleetCredentialOutputWithContext(ctx context.Context) FleetCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetCredentialOutput)
}

// FleetCredentialArrayInput is an input type that accepts FleetCredentialArray and FleetCredentialArrayOutput values.
// You can construct a concrete instance of `FleetCredentialArrayInput` via:
//
//	FleetCredentialArray{ FleetCredentialArgs{...} }
type FleetCredentialArrayInput interface {
	pulumi.Input

	ToFleetCredentialArrayOutput() FleetCredentialArrayOutput
	ToFleetCredentialArrayOutputWithContext(context.Context) FleetCredentialArrayOutput
}

type FleetCredentialArray []FleetCredentialInput

func (FleetCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FleetCredential)(nil)).Elem()
}

func (i FleetCredentialArray) ToFleetCredentialArrayOutput() FleetCredentialArrayOutput {
	return i.ToFleetCredentialArrayOutputWithContext(context.Background())
}

func (i FleetCredentialArray) ToFleetCredentialArrayOutputWithContext(ctx context.Context) FleetCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetCredentialArrayOutput)
}

// FleetCredentialMapInput is an input type that accepts FleetCredentialMap and FleetCredentialMapOutput values.
// You can construct a concrete instance of `FleetCredentialMapInput` via:
//
//	FleetCredentialMap{ "key": FleetCredentialArgs{...} }
type FleetCredentialMapInput interface {
	pulumi.Input

	ToFleetCredentialMapOutput() FleetCredentialMapOutput
	ToFleetCredentialMapOutputWithContext(context.Context) FleetCredentialMapOutput
}

type FleetCredentialMap map[string]FleetCredentialInput

func (FleetCredentialMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FleetCredential)(nil)).Elem()
}

func (i FleetCredentialMap) ToFleetCredentialMapOutput() FleetCredentialMapOutput {
	return i.ToFleetCredentialMapOutputWithContext(context.Background())
}

func (i FleetCredentialMap) ToFleetCredentialMapOutputWithContext(ctx context.Context) FleetCredentialMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetCredentialMapOutput)
}

type FleetCredentialOutput struct{ *pulumi.OutputState }

func (FleetCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetCredential)(nil)).Elem()
}

func (o FleetCredentialOutput) ToFleetCredentialOutput() FleetCredentialOutput {
	return o
}

func (o FleetCredentialOutput) ToFleetCredentialOutputWithContext(ctx context.Context) FleetCredentialOutput {
	return o
}

// Tenancy OCID
func (o FleetCredentialOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetCredential) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o FleetCredentialOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetCredential) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Updatable) Credential Details
func (o FleetCredentialOutput) EntitySpecifics() FleetCredentialEntitySpecificsOutput {
	return o.ApplyT(func(v *FleetCredential) FleetCredentialEntitySpecificsOutput { return v.EntitySpecifics }).(FleetCredentialEntitySpecificsOutput)
}

// unique Fleet identifier
func (o FleetCredentialOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetCredential) pulumi.StringOutput { return v.FleetId }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o FleetCredentialOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetCredential) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// (Updatable) Credential Details
func (o FleetCredentialOutput) Password() FleetCredentialPasswordOutput {
	return o.ApplyT(func(v *FleetCredential) FleetCredentialPasswordOutput { return v.Password }).(FleetCredentialPasswordOutput)
}

// The current state of the FleetCredential.
func (o FleetCredentialOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetCredential) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o FleetCredentialOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FleetCredential) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o FleetCredentialOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetCredential) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o FleetCredentialOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetCredential) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

// (Updatable) Credential Details
func (o FleetCredentialOutput) User() FleetCredentialUserOutput {
	return o.ApplyT(func(v *FleetCredential) FleetCredentialUserOutput { return v.User }).(FleetCredentialUserOutput)
}

type FleetCredentialArrayOutput struct{ *pulumi.OutputState }

func (FleetCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FleetCredential)(nil)).Elem()
}

func (o FleetCredentialArrayOutput) ToFleetCredentialArrayOutput() FleetCredentialArrayOutput {
	return o
}

func (o FleetCredentialArrayOutput) ToFleetCredentialArrayOutputWithContext(ctx context.Context) FleetCredentialArrayOutput {
	return o
}

func (o FleetCredentialArrayOutput) Index(i pulumi.IntInput) FleetCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FleetCredential {
		return vs[0].([]*FleetCredential)[vs[1].(int)]
	}).(FleetCredentialOutput)
}

type FleetCredentialMapOutput struct{ *pulumi.OutputState }

func (FleetCredentialMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FleetCredential)(nil)).Elem()
}

func (o FleetCredentialMapOutput) ToFleetCredentialMapOutput() FleetCredentialMapOutput {
	return o
}

func (o FleetCredentialMapOutput) ToFleetCredentialMapOutputWithContext(ctx context.Context) FleetCredentialMapOutput {
	return o
}

func (o FleetCredentialMapOutput) MapIndex(k pulumi.StringInput) FleetCredentialOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FleetCredential {
		return vs[0].(map[string]*FleetCredential)[vs[1].(string)]
	}).(FleetCredentialOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FleetCredentialInput)(nil)).Elem(), &FleetCredential{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetCredentialArrayInput)(nil)).Elem(), FleetCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetCredentialMapInput)(nil)).Elem(), FleetCredentialMap{})
	pulumi.RegisterOutputType(FleetCredentialOutput{})
	pulumi.RegisterOutputType(FleetCredentialArrayOutput{})
	pulumi.RegisterOutputType(FleetCredentialMapOutput{})
}
