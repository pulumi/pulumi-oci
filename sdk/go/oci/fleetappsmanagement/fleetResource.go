// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource provides the Fleet Resource resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Creates a new FleetResource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.NewFleetResource(ctx, "test_fleet_resource", &FleetAppsManagement.FleetResourceArgs{
//				CompartmentId:  pulumi.Any(compartmentId),
//				FleetId:        pulumi.Any(testFleet.Id),
//				ResourceId:     pulumi.Any(testResource.Id),
//				TenancyId:      pulumi.Any(testTenancy.Id),
//				ResourceRegion: pulumi.Any(fleetResourceResourceRegion),
//				ResourceType:   pulumi.Any(fleetResourceResourceType),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported for this resource.
type FleetResource struct {
	pulumi.CustomResourceState

	// Application Type associated with the resource when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
	ApplicationType pulumi.StringOutput `pulumi:"applicationType"`
	// Resource Compartment
	Compartment pulumi.StringOutput `pulumi:"compartment"`
	// (Updatable) OCID of the compartment to which the resource belongs to.
	CompartmentId pulumi.StringOutput `pulumi:"compartmentId"`
	// Compliance State of the Resource
	ComplianceState pulumi.StringOutput `pulumi:"complianceState"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Environment Type associated with the Fleet when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
	EnvironmentType pulumi.StringOutput `pulumi:"environmentType"`
	// unique Fleet identifier
	FleetId pulumi.StringOutput `pulumi:"fleetId"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringOutput `pulumi:"lifecycleDetails"`
	// Product associated with the resource when resource type is fleet.Will only be returned for PRODUCT fleets that are part of a GROUP Fleet
	Product pulumi.StringOutput `pulumi:"product"`
	// Count of products within the resource.
	ProductCount pulumi.IntOutput `pulumi:"productCount"`
	// The OCID of the resource.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// Associated region
	ResourceRegion pulumi.StringOutput `pulumi:"resourceRegion"`
	// Type of the Resource.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// The current state of the FleetResource.
	State pulumi.StringOutput `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapOutput `pulumi:"systemTags"`
	// Count of targets  within the resource.
	TargetCount pulumi.IntOutput `pulumi:"targetCount"`
	// (Updatable) OCID of the tenancy to which the resource belongs to.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyId pulumi.StringOutput `pulumi:"tenancyId"`
	// Resource Tenancy Name
	TenancyName pulumi.StringOutput `pulumi:"tenancyName"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringOutput `pulumi:"timeUpdated"`
}

// NewFleetResource registers a new resource with the given unique name, arguments, and options.
func NewFleetResource(ctx *pulumi.Context,
	name string, args *FleetResourceArgs, opts ...pulumi.ResourceOption) (*FleetResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CompartmentId == nil {
		return nil, errors.New("invalid value for required argument 'CompartmentId'")
	}
	if args.FleetId == nil {
		return nil, errors.New("invalid value for required argument 'FleetId'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	if args.TenancyId == nil {
		return nil, errors.New("invalid value for required argument 'TenancyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FleetResource
	err := ctx.RegisterResource("oci:FleetAppsManagement/fleetResource:FleetResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFleetResource gets an existing FleetResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFleetResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FleetResourceState, opts ...pulumi.ResourceOption) (*FleetResource, error) {
	var resource FleetResource
	err := ctx.ReadResource("oci:FleetAppsManagement/fleetResource:FleetResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FleetResource resources.
type fleetResourceState struct {
	// Application Type associated with the resource when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
	ApplicationType *string `pulumi:"applicationType"`
	// Resource Compartment
	Compartment *string `pulumi:"compartment"`
	// (Updatable) OCID of the compartment to which the resource belongs to.
	CompartmentId *string `pulumi:"compartmentId"`
	// Compliance State of the Resource
	ComplianceState *string `pulumi:"complianceState"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// Environment Type associated with the Fleet when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
	EnvironmentType *string `pulumi:"environmentType"`
	// unique Fleet identifier
	FleetId *string `pulumi:"fleetId"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails *string `pulumi:"lifecycleDetails"`
	// Product associated with the resource when resource type is fleet.Will only be returned for PRODUCT fleets that are part of a GROUP Fleet
	Product *string `pulumi:"product"`
	// Count of products within the resource.
	ProductCount *int `pulumi:"productCount"`
	// The OCID of the resource.
	ResourceId *string `pulumi:"resourceId"`
	// Associated region
	ResourceRegion *string `pulumi:"resourceRegion"`
	// Type of the Resource.
	ResourceType *string `pulumi:"resourceType"`
	// The current state of the FleetResource.
	State *string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Count of targets  within the resource.
	TargetCount *int `pulumi:"targetCount"`
	// (Updatable) OCID of the tenancy to which the resource belongs to.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyId *string `pulumi:"tenancyId"`
	// Resource Tenancy Name
	TenancyName *string `pulumi:"tenancyName"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated *string `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated *string `pulumi:"timeUpdated"`
}

type FleetResourceState struct {
	// Application Type associated with the resource when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
	ApplicationType pulumi.StringPtrInput
	// Resource Compartment
	Compartment pulumi.StringPtrInput
	// (Updatable) OCID of the compartment to which the resource belongs to.
	CompartmentId pulumi.StringPtrInput
	// Compliance State of the Resource
	ComplianceState pulumi.StringPtrInput
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName pulumi.StringPtrInput
	// Environment Type associated with the Fleet when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
	EnvironmentType pulumi.StringPtrInput
	// unique Fleet identifier
	FleetId pulumi.StringPtrInput
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails pulumi.StringPtrInput
	// Product associated with the resource when resource type is fleet.Will only be returned for PRODUCT fleets that are part of a GROUP Fleet
	Product pulumi.StringPtrInput
	// Count of products within the resource.
	ProductCount pulumi.IntPtrInput
	// The OCID of the resource.
	ResourceId pulumi.StringPtrInput
	// Associated region
	ResourceRegion pulumi.StringPtrInput
	// Type of the Resource.
	ResourceType pulumi.StringPtrInput
	// The current state of the FleetResource.
	State pulumi.StringPtrInput
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags pulumi.StringMapInput
	// Count of targets  within the resource.
	TargetCount pulumi.IntPtrInput
	// (Updatable) OCID of the tenancy to which the resource belongs to.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyId pulumi.StringPtrInput
	// Resource Tenancy Name
	TenancyName pulumi.StringPtrInput
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated pulumi.StringPtrInput
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated pulumi.StringPtrInput
}

func (FleetResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetResourceState)(nil)).Elem()
}

type fleetResourceArgs struct {
	// (Updatable) OCID of the compartment to which the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// unique Fleet identifier
	FleetId string `pulumi:"fleetId"`
	// The OCID of the resource.
	ResourceId string `pulumi:"resourceId"`
	// Associated region
	ResourceRegion *string `pulumi:"resourceRegion"`
	// Type of the Resource.
	ResourceType *string `pulumi:"resourceType"`
	// (Updatable) OCID of the tenancy to which the resource belongs to.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyId string `pulumi:"tenancyId"`
}

// The set of arguments for constructing a FleetResource resource.
type FleetResourceArgs struct {
	// (Updatable) OCID of the compartment to which the resource belongs to.
	CompartmentId pulumi.StringInput
	// unique Fleet identifier
	FleetId pulumi.StringInput
	// The OCID of the resource.
	ResourceId pulumi.StringInput
	// Associated region
	ResourceRegion pulumi.StringPtrInput
	// Type of the Resource.
	ResourceType pulumi.StringPtrInput
	// (Updatable) OCID of the tenancy to which the resource belongs to.
	//
	// ** IMPORTANT **
	// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
	TenancyId pulumi.StringInput
}

func (FleetResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetResourceArgs)(nil)).Elem()
}

type FleetResourceInput interface {
	pulumi.Input

	ToFleetResourceOutput() FleetResourceOutput
	ToFleetResourceOutputWithContext(ctx context.Context) FleetResourceOutput
}

func (*FleetResource) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetResource)(nil)).Elem()
}

func (i *FleetResource) ToFleetResourceOutput() FleetResourceOutput {
	return i.ToFleetResourceOutputWithContext(context.Background())
}

func (i *FleetResource) ToFleetResourceOutputWithContext(ctx context.Context) FleetResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetResourceOutput)
}

// FleetResourceArrayInput is an input type that accepts FleetResourceArray and FleetResourceArrayOutput values.
// You can construct a concrete instance of `FleetResourceArrayInput` via:
//
//	FleetResourceArray{ FleetResourceArgs{...} }
type FleetResourceArrayInput interface {
	pulumi.Input

	ToFleetResourceArrayOutput() FleetResourceArrayOutput
	ToFleetResourceArrayOutputWithContext(context.Context) FleetResourceArrayOutput
}

type FleetResourceArray []FleetResourceInput

func (FleetResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FleetResource)(nil)).Elem()
}

func (i FleetResourceArray) ToFleetResourceArrayOutput() FleetResourceArrayOutput {
	return i.ToFleetResourceArrayOutputWithContext(context.Background())
}

func (i FleetResourceArray) ToFleetResourceArrayOutputWithContext(ctx context.Context) FleetResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetResourceArrayOutput)
}

// FleetResourceMapInput is an input type that accepts FleetResourceMap and FleetResourceMapOutput values.
// You can construct a concrete instance of `FleetResourceMapInput` via:
//
//	FleetResourceMap{ "key": FleetResourceArgs{...} }
type FleetResourceMapInput interface {
	pulumi.Input

	ToFleetResourceMapOutput() FleetResourceMapOutput
	ToFleetResourceMapOutputWithContext(context.Context) FleetResourceMapOutput
}

type FleetResourceMap map[string]FleetResourceInput

func (FleetResourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FleetResource)(nil)).Elem()
}

func (i FleetResourceMap) ToFleetResourceMapOutput() FleetResourceMapOutput {
	return i.ToFleetResourceMapOutputWithContext(context.Background())
}

func (i FleetResourceMap) ToFleetResourceMapOutputWithContext(ctx context.Context) FleetResourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetResourceMapOutput)
}

type FleetResourceOutput struct{ *pulumi.OutputState }

func (FleetResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetResource)(nil)).Elem()
}

func (o FleetResourceOutput) ToFleetResourceOutput() FleetResourceOutput {
	return o
}

func (o FleetResourceOutput) ToFleetResourceOutputWithContext(ctx context.Context) FleetResourceOutput {
	return o
}

// Application Type associated with the resource when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
func (o FleetResourceOutput) ApplicationType() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.ApplicationType }).(pulumi.StringOutput)
}

// Resource Compartment
func (o FleetResourceOutput) Compartment() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.Compartment }).(pulumi.StringOutput)
}

// (Updatable) OCID of the compartment to which the resource belongs to.
func (o FleetResourceOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.CompartmentId }).(pulumi.StringOutput)
}

// Compliance State of the Resource
func (o FleetResourceOutput) ComplianceState() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.ComplianceState }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o FleetResourceOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Environment Type associated with the Fleet when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
func (o FleetResourceOutput) EnvironmentType() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.EnvironmentType }).(pulumi.StringOutput)
}

// unique Fleet identifier
func (o FleetResourceOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.FleetId }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o FleetResourceOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Product associated with the resource when resource type is fleet.Will only be returned for PRODUCT fleets that are part of a GROUP Fleet
func (o FleetResourceOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.Product }).(pulumi.StringOutput)
}

// Count of products within the resource.
func (o FleetResourceOutput) ProductCount() pulumi.IntOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.IntOutput { return v.ProductCount }).(pulumi.IntOutput)
}

// The OCID of the resource.
func (o FleetResourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

// Associated region
func (o FleetResourceOutput) ResourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.ResourceRegion }).(pulumi.StringOutput)
}

// Type of the Resource.
func (o FleetResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

// The current state of the FleetResource.
func (o FleetResourceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o FleetResourceOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringMapOutput { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Count of targets  within the resource.
func (o FleetResourceOutput) TargetCount() pulumi.IntOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.IntOutput { return v.TargetCount }).(pulumi.IntOutput)
}

// (Updatable) OCID of the tenancy to which the resource belongs to.
//
// ** IMPORTANT **
// Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
func (o FleetResourceOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.TenancyId }).(pulumi.StringOutput)
}

// Resource Tenancy Name
func (o FleetResourceOutput) TenancyName() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.TenancyName }).(pulumi.StringOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o FleetResourceOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o FleetResourceOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetResource) pulumi.StringOutput { return v.TimeUpdated }).(pulumi.StringOutput)
}

type FleetResourceArrayOutput struct{ *pulumi.OutputState }

func (FleetResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FleetResource)(nil)).Elem()
}

func (o FleetResourceArrayOutput) ToFleetResourceArrayOutput() FleetResourceArrayOutput {
	return o
}

func (o FleetResourceArrayOutput) ToFleetResourceArrayOutputWithContext(ctx context.Context) FleetResourceArrayOutput {
	return o
}

func (o FleetResourceArrayOutput) Index(i pulumi.IntInput) FleetResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FleetResource {
		return vs[0].([]*FleetResource)[vs[1].(int)]
	}).(FleetResourceOutput)
}

type FleetResourceMapOutput struct{ *pulumi.OutputState }

func (FleetResourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FleetResource)(nil)).Elem()
}

func (o FleetResourceMapOutput) ToFleetResourceMapOutput() FleetResourceMapOutput {
	return o
}

func (o FleetResourceMapOutput) ToFleetResourceMapOutputWithContext(ctx context.Context) FleetResourceMapOutput {
	return o
}

func (o FleetResourceMapOutput) MapIndex(k pulumi.StringInput) FleetResourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FleetResource {
		return vs[0].(map[string]*FleetResource)[vs[1].(string)]
	}).(FleetResourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FleetResourceInput)(nil)).Elem(), &FleetResource{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetResourceArrayInput)(nil)).Elem(), FleetResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetResourceMapInput)(nil)).Elem(), FleetResourceMap{})
	pulumi.RegisterOutputType(FleetResourceOutput{})
	pulumi.RegisterOutputType(FleetResourceArrayOutput{})
	pulumi.RegisterOutputType(FleetResourceMapOutput{})
}
