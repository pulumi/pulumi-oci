// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Catalog Item resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Gets information about a CatalogItem.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetCatalogItem(ctx, &fleetappsmanagement.GetCatalogItemArgs{
//				CatalogItemId: testCatalogItemOciFleetAppsManagementCatalogItem.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCatalogItem(ctx *pulumi.Context, args *LookupCatalogItemArgs, opts ...pulumi.InvokeOption) (*LookupCatalogItemResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCatalogItemResult
	err := ctx.Invoke("oci:FleetAppsManagement/getCatalogItem:getCatalogItem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalogItem.
type LookupCatalogItemArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CatalogItem.
	CatalogItemId string `pulumi:"catalogItemId"`
}

// A collection of values returned by getCatalogItem.
type LookupCatalogItemResult struct {
	CatalogItemId string `pulumi:"catalogItemId"`
	// Catalog result payload.
	CatalogResultPayloads []GetCatalogItemCatalogResultPayload `pulumi:"catalogResultPayloads"`
	// Catalog source payload.
	CatalogSourcePayloads   []GetCatalogItemCatalogSourcePayload `pulumi:"catalogSourcePayloads"`
	CloneCatalogItemTrigger int                                  `pulumi:"cloneCatalogItemTrigger"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
	ConfigSourceType string `pulumi:"configSourceType"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Description about the catalog item.
	Description string `pulumi:"description"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the catalog.
	Id string `pulumi:"id"`
	// The details of lifecycle state CatalogItem.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The catalog listing Id.
	ListingId string `pulumi:"listingId"`
	// The catalog package version.
	ListingVersion string `pulumi:"listingVersion"`
	// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
	PackageType string `pulumi:"packageType"`
	// Short description about the catalog item.
	ShortDescription string `pulumi:"shortDescription"`
	// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
	ShouldListPublicItems bool `pulumi:"shouldListPublicItems"`
	// The current state of the CatalogItem.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the CatalogItem was last checked by backfill job, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeBackfillLastChecked string `pulumi:"timeBackfillLastChecked"`
	// The date and time the CatalogItem was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the CatalogItem was last checked, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeLastChecked string `pulumi:"timeLastChecked"`
	// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeReleased string `pulumi:"timeReleased"`
	// The date and time the CatalogItem was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
	// Version description about the catalog item.
	VersionDescription string `pulumi:"versionDescription"`
}

func LookupCatalogItemOutput(ctx *pulumi.Context, args LookupCatalogItemOutputArgs, opts ...pulumi.InvokeOption) LookupCatalogItemResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCatalogItemResultOutput, error) {
			args := v.(LookupCatalogItemArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getCatalogItem:getCatalogItem", args, LookupCatalogItemResultOutput{}, options).(LookupCatalogItemResultOutput), nil
		}).(LookupCatalogItemResultOutput)
}

// A collection of arguments for invoking getCatalogItem.
type LookupCatalogItemOutputArgs struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CatalogItem.
	CatalogItemId pulumi.StringInput `pulumi:"catalogItemId"`
}

func (LookupCatalogItemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogItemArgs)(nil)).Elem()
}

// A collection of values returned by getCatalogItem.
type LookupCatalogItemResultOutput struct{ *pulumi.OutputState }

func (LookupCatalogItemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogItemResult)(nil)).Elem()
}

func (o LookupCatalogItemResultOutput) ToLookupCatalogItemResultOutput() LookupCatalogItemResultOutput {
	return o
}

func (o LookupCatalogItemResultOutput) ToLookupCatalogItemResultOutputWithContext(ctx context.Context) LookupCatalogItemResultOutput {
	return o
}

func (o LookupCatalogItemResultOutput) CatalogItemId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.CatalogItemId }).(pulumi.StringOutput)
}

// Catalog result payload.
func (o LookupCatalogItemResultOutput) CatalogResultPayloads() GetCatalogItemCatalogResultPayloadArrayOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) []GetCatalogItemCatalogResultPayload { return v.CatalogResultPayloads }).(GetCatalogItemCatalogResultPayloadArrayOutput)
}

// Catalog source payload.
func (o LookupCatalogItemResultOutput) CatalogSourcePayloads() GetCatalogItemCatalogSourcePayloadArrayOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) []GetCatalogItemCatalogSourcePayload { return v.CatalogSourcePayloads }).(GetCatalogItemCatalogSourcePayloadArrayOutput)
}

func (o LookupCatalogItemResultOutput) CloneCatalogItemTrigger() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) int { return v.CloneCatalogItemTrigger }).(pulumi.IntOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o LookupCatalogItemResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
func (o LookupCatalogItemResultOutput) ConfigSourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.ConfigSourceType }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupCatalogItemResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Description about the catalog item.
func (o LookupCatalogItemResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.Description }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o LookupCatalogItemResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupCatalogItemResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the catalog.
func (o LookupCatalogItemResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.Id }).(pulumi.StringOutput)
}

// The details of lifecycle state CatalogItem.
func (o LookupCatalogItemResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The catalog listing Id.
func (o LookupCatalogItemResultOutput) ListingId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.ListingId }).(pulumi.StringOutput)
}

// The catalog package version.
func (o LookupCatalogItemResultOutput) ListingVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.ListingVersion }).(pulumi.StringOutput)
}

// Config package type Eg: TF_PACKAGE, NON_TF_PACKAGE, CONFIG_FILE.
func (o LookupCatalogItemResultOutput) PackageType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.PackageType }).(pulumi.StringOutput)
}

// Short description about the catalog item.
func (o LookupCatalogItemResultOutput) ShortDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.ShortDescription }).(pulumi.StringOutput)
}

// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
func (o LookupCatalogItemResultOutput) ShouldListPublicItems() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) bool { return v.ShouldListPublicItems }).(pulumi.BoolOutput)
}

// The current state of the CatalogItem.
func (o LookupCatalogItemResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupCatalogItemResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the CatalogItem was last checked by backfill job, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o LookupCatalogItemResultOutput) TimeBackfillLastChecked() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.TimeBackfillLastChecked }).(pulumi.StringOutput)
}

// The date and time the CatalogItem was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o LookupCatalogItemResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the CatalogItem was last checked, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o LookupCatalogItemResultOutput) TimeLastChecked() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.TimeLastChecked }).(pulumi.StringOutput)
}

// The date and time the CatalogItem was released, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o LookupCatalogItemResultOutput) TimeReleased() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.TimeReleased }).(pulumi.StringOutput)
}

// The date and time the CatalogItem was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
func (o LookupCatalogItemResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Version description about the catalog item.
func (o LookupCatalogItemResultOutput) VersionDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.VersionDescription }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCatalogItemResultOutput{})
}
