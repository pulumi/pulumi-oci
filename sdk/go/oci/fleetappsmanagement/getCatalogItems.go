// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Catalog Items in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Gets a list of Catalog Items in a compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetCatalogItems(ctx, &fleetappsmanagement.GetCatalogItemsArgs{
//				CompartmentId:                 compartmentId,
//				CatalogListingId:              pulumi.StringRef(testListing.Id),
//				CatalogListingVersionCriteria: pulumi.StringRef(catalogItemCatalogListingVersionCriteria),
//				ConfigSourceType:              pulumi.StringRef(catalogItemConfigSourceType),
//				DisplayName:                   pulumi.StringRef(catalogItemDisplayName),
//				ShouldListPublicItems:         pulumi.BoolRef(catalogItemShouldListPublicItems),
//				State:                         pulumi.StringRef(catalogItemState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCatalogItems(ctx *pulumi.Context, args *GetCatalogItemsArgs, opts ...pulumi.InvokeOption) (*GetCatalogItemsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCatalogItemsResult
	err := ctx.Invoke("oci:FleetAppsManagement/getCatalogItems:getCatalogItems", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalogItems.
type GetCatalogItemsArgs struct {
	// catalogListingId of the package. This is an integer whose min and max length are specified.
	CatalogListingId *string `pulumi:"catalogListingId"`
	// Parameter to list all catalog items only with latest version or list all catalog items with all versions.
	CatalogListingVersionCriteria *string `pulumi:"catalogListingVersionCriteria"`
	// (Updatable) The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// The [ConfigSourceType](https://www.terraform.io/definitions/CatalogItem/configSourceType) Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, URL_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
	ConfigSourceType *string `pulumi:"configSourceType"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetCatalogItemsFilter `pulumi:"filters"`
	// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
	ShouldListPublicItems *bool `pulumi:"shouldListPublicItems"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getCatalogItems.
type GetCatalogItemsResult struct {
	// The list of catalog_item_collection.
	CatalogItemCollections        []GetCatalogItemsCatalogItemCollection `pulumi:"catalogItemCollections"`
	CatalogListingId              *string                                `pulumi:"catalogListingId"`
	CatalogListingVersionCriteria *string                                `pulumi:"catalogListingVersionCriteria"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
	ConfigSourceType *string `pulumi:"configSourceType"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	DisplayName *string                 `pulumi:"displayName"`
	Filters     []GetCatalogItemsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
	ShouldListPublicItems *bool `pulumi:"shouldListPublicItems"`
	// The current state of the CatalogItem.
	State *string `pulumi:"state"`
}

func GetCatalogItemsOutput(ctx *pulumi.Context, args GetCatalogItemsOutputArgs, opts ...pulumi.InvokeOption) GetCatalogItemsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCatalogItemsResultOutput, error) {
			args := v.(GetCatalogItemsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getCatalogItems:getCatalogItems", args, GetCatalogItemsResultOutput{}, options).(GetCatalogItemsResultOutput), nil
		}).(GetCatalogItemsResultOutput)
}

// A collection of arguments for invoking getCatalogItems.
type GetCatalogItemsOutputArgs struct {
	// catalogListingId of the package. This is an integer whose min and max length are specified.
	CatalogListingId pulumi.StringPtrInput `pulumi:"catalogListingId"`
	// Parameter to list all catalog items only with latest version or list all catalog items with all versions.
	CatalogListingVersionCriteria pulumi.StringPtrInput `pulumi:"catalogListingVersionCriteria"`
	// (Updatable) The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The [ConfigSourceType](https://www.terraform.io/definitions/CatalogItem/configSourceType) Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, URL_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
	ConfigSourceType pulumi.StringPtrInput `pulumi:"configSourceType"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput           `pulumi:"displayName"`
	Filters     GetCatalogItemsFilterArrayInput `pulumi:"filters"`
	// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
	ShouldListPublicItems pulumi.BoolPtrInput `pulumi:"shouldListPublicItems"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetCatalogItemsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogItemsArgs)(nil)).Elem()
}

// A collection of values returned by getCatalogItems.
type GetCatalogItemsResultOutput struct{ *pulumi.OutputState }

func (GetCatalogItemsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCatalogItemsResult)(nil)).Elem()
}

func (o GetCatalogItemsResultOutput) ToGetCatalogItemsResultOutput() GetCatalogItemsResultOutput {
	return o
}

func (o GetCatalogItemsResultOutput) ToGetCatalogItemsResultOutputWithContext(ctx context.Context) GetCatalogItemsResultOutput {
	return o
}

// The list of catalog_item_collection.
func (o GetCatalogItemsResultOutput) CatalogItemCollections() GetCatalogItemsCatalogItemCollectionArrayOutput {
	return o.ApplyT(func(v GetCatalogItemsResult) []GetCatalogItemsCatalogItemCollection { return v.CatalogItemCollections }).(GetCatalogItemsCatalogItemCollectionArrayOutput)
}

func (o GetCatalogItemsResultOutput) CatalogListingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogItemsResult) *string { return v.CatalogListingId }).(pulumi.StringPtrOutput)
}

func (o GetCatalogItemsResultOutput) CatalogListingVersionCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogItemsResult) *string { return v.CatalogListingVersionCriteria }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetCatalogItemsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Config source type Eg: STACK_TEMPLATE_CATALOG_SOURCE, PAR_CATALOG_SOURCE, GIT_CATALOG_SOURCE, MARKETPLACE_CATALOG_SOURCE.
func (o GetCatalogItemsResultOutput) ConfigSourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogItemsResult) *string { return v.ConfigSourceType }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
func (o GetCatalogItemsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogItemsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetCatalogItemsResultOutput) Filters() GetCatalogItemsFilterArrayOutput {
	return o.ApplyT(func(v GetCatalogItemsResult) []GetCatalogItemsFilter { return v.Filters }).(GetCatalogItemsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCatalogItemsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCatalogItemsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The indicator to append Public Items from the root compartment to any query, when set to TRUE.
func (o GetCatalogItemsResultOutput) ShouldListPublicItems() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCatalogItemsResult) *bool { return v.ShouldListPublicItems }).(pulumi.BoolPtrOutput)
}

// The current state of the CatalogItem.
func (o GetCatalogItemsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCatalogItemsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCatalogItemsResultOutput{})
}
