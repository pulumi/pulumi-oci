// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Compliance Policies in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Gets a list of compliancePolicies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetCompliancePolicies(ctx, &fleetappsmanagement.GetCompliancePoliciesArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(compliancePolicyDisplayName),
//				Id:            pulumi.StringRef(compliancePolicyId),
//				State:         pulumi.StringRef(compliancePolicyState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCompliancePolicies(ctx *pulumi.Context, args *GetCompliancePoliciesArgs, opts ...pulumi.InvokeOption) (*GetCompliancePoliciesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCompliancePoliciesResult
	err := ctx.Invoke("oci:FleetAppsManagement/getCompliancePolicies:getCompliancePolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCompliancePolicies.
type GetCompliancePoliciesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetCompliancePoliciesFilter `pulumi:"filters"`
	// unique CompliancePolicy identifier.
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getCompliancePolicies.
type GetCompliancePoliciesResult struct {
	// The OCID of the compartment the CompliancePolicy belongs to.
	CompartmentId *string `pulumi:"compartmentId"`
	// The list of compliance_policy_collection.
	CompliancePolicyCollections []GetCompliancePoliciesCompliancePolicyCollection `pulumi:"compliancePolicyCollections"`
	// Display name for the CompliancePolicy.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetCompliancePoliciesFilter `pulumi:"filters"`
	// The OCID of the CompliancePolicy.
	Id *string `pulumi:"id"`
	// The current state of the CompliancePolicy.
	State *string `pulumi:"state"`
}

func GetCompliancePoliciesOutput(ctx *pulumi.Context, args GetCompliancePoliciesOutputArgs, opts ...pulumi.InvokeOption) GetCompliancePoliciesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCompliancePoliciesResultOutput, error) {
			args := v.(GetCompliancePoliciesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getCompliancePolicies:getCompliancePolicies", args, GetCompliancePoliciesResultOutput{}, options).(GetCompliancePoliciesResultOutput), nil
		}).(GetCompliancePoliciesResultOutput)
}

// A collection of arguments for invoking getCompliancePolicies.
type GetCompliancePoliciesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                 `pulumi:"displayName"`
	Filters     GetCompliancePoliciesFilterArrayInput `pulumi:"filters"`
	// unique CompliancePolicy identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetCompliancePoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCompliancePoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getCompliancePolicies.
type GetCompliancePoliciesResultOutput struct{ *pulumi.OutputState }

func (GetCompliancePoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCompliancePoliciesResult)(nil)).Elem()
}

func (o GetCompliancePoliciesResultOutput) ToGetCompliancePoliciesResultOutput() GetCompliancePoliciesResultOutput {
	return o
}

func (o GetCompliancePoliciesResultOutput) ToGetCompliancePoliciesResultOutputWithContext(ctx context.Context) GetCompliancePoliciesResultOutput {
	return o
}

// The OCID of the compartment the CompliancePolicy belongs to.
func (o GetCompliancePoliciesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCompliancePoliciesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// The list of compliance_policy_collection.
func (o GetCompliancePoliciesResultOutput) CompliancePolicyCollections() GetCompliancePoliciesCompliancePolicyCollectionArrayOutput {
	return o.ApplyT(func(v GetCompliancePoliciesResult) []GetCompliancePoliciesCompliancePolicyCollection {
		return v.CompliancePolicyCollections
	}).(GetCompliancePoliciesCompliancePolicyCollectionArrayOutput)
}

// Display name for the CompliancePolicy.
func (o GetCompliancePoliciesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCompliancePoliciesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetCompliancePoliciesResultOutput) Filters() GetCompliancePoliciesFilterArrayOutput {
	return o.ApplyT(func(v GetCompliancePoliciesResult) []GetCompliancePoliciesFilter { return v.Filters }).(GetCompliancePoliciesFilterArrayOutput)
}

// The OCID of the CompliancePolicy.
func (o GetCompliancePoliciesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCompliancePoliciesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the CompliancePolicy.
func (o GetCompliancePoliciesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCompliancePoliciesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCompliancePoliciesResultOutput{})
}
