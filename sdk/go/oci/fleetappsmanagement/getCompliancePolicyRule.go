// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Compliance Policy Rule resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Gets information about a CompliancePolicyRule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.GetCompliancePolicyRule(ctx, &fleetappsmanagement.GetCompliancePolicyRuleArgs{
//				CompliancePolicyRuleId: testCompliancePolicyRuleOciFleetAppsManagementCompliancePolicyRule.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCompliancePolicyRule(ctx *pulumi.Context, args *LookupCompliancePolicyRuleArgs, opts ...pulumi.InvokeOption) (*LookupCompliancePolicyRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCompliancePolicyRuleResult
	err := ctx.Invoke("oci:FleetAppsManagement/getCompliancePolicyRule:getCompliancePolicyRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCompliancePolicyRule.
type LookupCompliancePolicyRuleArgs struct {
	// unique CompliancePolicyRule identifier.
	CompliancePolicyRuleId string `pulumi:"compliancePolicyRuleId"`
}

// A collection of values returned by getCompliancePolicyRule.
type LookupCompliancePolicyRuleResult struct {
	// The OCID of the compartment the CompliancePolicyRule belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// Unique OCID of the CompliancePolicy.
	CompliancePolicyId     string `pulumi:"compliancePolicyId"`
	CompliancePolicyRuleId string `pulumi:"compliancePolicyRuleId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
	GracePeriod string `pulumi:"gracePeriod"`
	// Unique OCID of the CompliancePolicyRule.
	Id string `pulumi:"id"`
	// A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Patch Selection Details
	PatchSelections []GetCompliancePolicyRulePatchSelection `pulumi:"patchSelections"`
	// PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
	PatchTypes []string `pulumi:"patchTypes"`
	// A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
	ProductVersions []GetCompliancePolicyRuleProductVersion `pulumi:"productVersions"`
	// Severity to which this CompliancePolicyRule applies.
	Severities []string `pulumi:"severities"`
	// The current state of the CompliancePolicyRule.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeCreated string `pulumi:"timeCreated"`
	// The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupCompliancePolicyRuleOutput(ctx *pulumi.Context, args LookupCompliancePolicyRuleOutputArgs, opts ...pulumi.InvokeOption) LookupCompliancePolicyRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCompliancePolicyRuleResultOutput, error) {
			args := v.(LookupCompliancePolicyRuleArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCompliancePolicyRuleResult
			secret, err := ctx.InvokePackageRaw("oci:FleetAppsManagement/getCompliancePolicyRule:getCompliancePolicyRule", args, &rv, "", opts...)
			if err != nil {
				return LookupCompliancePolicyRuleResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCompliancePolicyRuleResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCompliancePolicyRuleResultOutput), nil
			}
			return output, nil
		}).(LookupCompliancePolicyRuleResultOutput)
}

// A collection of arguments for invoking getCompliancePolicyRule.
type LookupCompliancePolicyRuleOutputArgs struct {
	// unique CompliancePolicyRule identifier.
	CompliancePolicyRuleId pulumi.StringInput `pulumi:"compliancePolicyRuleId"`
}

func (LookupCompliancePolicyRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCompliancePolicyRuleArgs)(nil)).Elem()
}

// A collection of values returned by getCompliancePolicyRule.
type LookupCompliancePolicyRuleResultOutput struct{ *pulumi.OutputState }

func (LookupCompliancePolicyRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCompliancePolicyRuleResult)(nil)).Elem()
}

func (o LookupCompliancePolicyRuleResultOutput) ToLookupCompliancePolicyRuleResultOutput() LookupCompliancePolicyRuleResultOutput {
	return o
}

func (o LookupCompliancePolicyRuleResultOutput) ToLookupCompliancePolicyRuleResultOutputWithContext(ctx context.Context) LookupCompliancePolicyRuleResultOutput {
	return o
}

// The OCID of the compartment the CompliancePolicyRule belongs to.
func (o LookupCompliancePolicyRuleResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Unique OCID of the CompliancePolicy.
func (o LookupCompliancePolicyRuleResultOutput) CompliancePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) string { return v.CompliancePolicyId }).(pulumi.StringOutput)
}

func (o LookupCompliancePolicyRuleResultOutput) CompliancePolicyRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) string { return v.CompliancePolicyRuleId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupCompliancePolicyRuleResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o LookupCompliancePolicyRuleResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupCompliancePolicyRuleResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
func (o LookupCompliancePolicyRuleResultOutput) GracePeriod() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) string { return v.GracePeriod }).(pulumi.StringOutput)
}

// Unique OCID of the CompliancePolicyRule.
func (o LookupCompliancePolicyRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
func (o LookupCompliancePolicyRuleResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Patch Selection Details
func (o LookupCompliancePolicyRuleResultOutput) PatchSelections() GetCompliancePolicyRulePatchSelectionArrayOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) []GetCompliancePolicyRulePatchSelection {
		return v.PatchSelections
	}).(GetCompliancePolicyRulePatchSelectionArrayOutput)
}

// PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
func (o LookupCompliancePolicyRuleResultOutput) PatchTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) []string { return v.PatchTypes }).(pulumi.StringArrayOutput)
}

// A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
func (o LookupCompliancePolicyRuleResultOutput) ProductVersions() GetCompliancePolicyRuleProductVersionArrayOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) []GetCompliancePolicyRuleProductVersion {
		return v.ProductVersions
	}).(GetCompliancePolicyRuleProductVersionArrayOutput)
}

// Severity to which this CompliancePolicyRule applies.
func (o LookupCompliancePolicyRuleResultOutput) Severities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) []string { return v.Severities }).(pulumi.StringArrayOutput)
}

// The current state of the CompliancePolicyRule.
func (o LookupCompliancePolicyRuleResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupCompliancePolicyRuleResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupCompliancePolicyRuleResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
func (o LookupCompliancePolicyRuleResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCompliancePolicyRuleResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCompliancePolicyRuleResultOutput{})
}
