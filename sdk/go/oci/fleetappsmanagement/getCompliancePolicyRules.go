// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Compliance Policy Rules in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Gets a list of CompliancePolicyRules.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetCompliancePolicyRules(ctx, &fleetappsmanagement.GetCompliancePolicyRulesArgs{
//				CompartmentId:      pulumi.StringRef(compartmentId),
//				CompliancePolicyId: pulumi.StringRef(testCompliancePolicy.Id),
//				DisplayName:        pulumi.StringRef(compliancePolicyRuleDisplayName),
//				Id:                 pulumi.StringRef(compliancePolicyRuleId),
//				PatchName:          pulumi.StringRef(testPatch.Name),
//				State:              pulumi.StringRef(compliancePolicyRuleState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCompliancePolicyRules(ctx *pulumi.Context, args *GetCompliancePolicyRulesArgs, opts ...pulumi.InvokeOption) (*GetCompliancePolicyRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCompliancePolicyRulesResult
	err := ctx.Invoke("oci:FleetAppsManagement/getCompliancePolicyRules:getCompliancePolicyRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCompliancePolicyRules.
type GetCompliancePolicyRulesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// unique CompliancePolicy identifier.
	CompliancePolicyId *string `pulumi:"compliancePolicyId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                          `pulumi:"displayName"`
	Filters     []GetCompliancePolicyRulesFilter `pulumi:"filters"`
	// unique CompliancePolicyRule identifier.
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the patch selection against the given patch name.
	PatchName *string `pulumi:"patchName"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getCompliancePolicyRules.
type GetCompliancePolicyRulesResult struct {
	// The OCID of the compartment the CompliancePolicyRule belongs to.
	CompartmentId *string `pulumi:"compartmentId"`
	// Unique OCID of the CompliancePolicy.
	CompliancePolicyId *string `pulumi:"compliancePolicyId"`
	// The list of compliance_policy_rule_collection.
	CompliancePolicyRuleCollections []GetCompliancePolicyRulesCompliancePolicyRuleCollection `pulumi:"compliancePolicyRuleCollections"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string                          `pulumi:"displayName"`
	Filters     []GetCompliancePolicyRulesFilter `pulumi:"filters"`
	// Unique OCID of the CompliancePolicyRule.
	Id *string `pulumi:"id"`
	// Patch Name.
	PatchName *string `pulumi:"patchName"`
	// The current state of the CompliancePolicyRule.
	State *string `pulumi:"state"`
}

func GetCompliancePolicyRulesOutput(ctx *pulumi.Context, args GetCompliancePolicyRulesOutputArgs, opts ...pulumi.InvokeOption) GetCompliancePolicyRulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCompliancePolicyRulesResultOutput, error) {
			args := v.(GetCompliancePolicyRulesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getCompliancePolicyRules:getCompliancePolicyRules", args, GetCompliancePolicyRulesResultOutput{}, options).(GetCompliancePolicyRulesResultOutput), nil
		}).(GetCompliancePolicyRulesResultOutput)
}

// A collection of arguments for invoking getCompliancePolicyRules.
type GetCompliancePolicyRulesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// unique CompliancePolicy identifier.
	CompliancePolicyId pulumi.StringPtrInput `pulumi:"compliancePolicyId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                    `pulumi:"displayName"`
	Filters     GetCompliancePolicyRulesFilterArrayInput `pulumi:"filters"`
	// unique CompliancePolicyRule identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the patch selection against the given patch name.
	PatchName pulumi.StringPtrInput `pulumi:"patchName"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetCompliancePolicyRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCompliancePolicyRulesArgs)(nil)).Elem()
}

// A collection of values returned by getCompliancePolicyRules.
type GetCompliancePolicyRulesResultOutput struct{ *pulumi.OutputState }

func (GetCompliancePolicyRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCompliancePolicyRulesResult)(nil)).Elem()
}

func (o GetCompliancePolicyRulesResultOutput) ToGetCompliancePolicyRulesResultOutput() GetCompliancePolicyRulesResultOutput {
	return o
}

func (o GetCompliancePolicyRulesResultOutput) ToGetCompliancePolicyRulesResultOutputWithContext(ctx context.Context) GetCompliancePolicyRulesResultOutput {
	return o
}

// The OCID of the compartment the CompliancePolicyRule belongs to.
func (o GetCompliancePolicyRulesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCompliancePolicyRulesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Unique OCID of the CompliancePolicy.
func (o GetCompliancePolicyRulesResultOutput) CompliancePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCompliancePolicyRulesResult) *string { return v.CompliancePolicyId }).(pulumi.StringPtrOutput)
}

// The list of compliance_policy_rule_collection.
func (o GetCompliancePolicyRulesResultOutput) CompliancePolicyRuleCollections() GetCompliancePolicyRulesCompliancePolicyRuleCollectionArrayOutput {
	return o.ApplyT(func(v GetCompliancePolicyRulesResult) []GetCompliancePolicyRulesCompliancePolicyRuleCollection {
		return v.CompliancePolicyRuleCollections
	}).(GetCompliancePolicyRulesCompliancePolicyRuleCollectionArrayOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetCompliancePolicyRulesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCompliancePolicyRulesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetCompliancePolicyRulesResultOutput) Filters() GetCompliancePolicyRulesFilterArrayOutput {
	return o.ApplyT(func(v GetCompliancePolicyRulesResult) []GetCompliancePolicyRulesFilter { return v.Filters }).(GetCompliancePolicyRulesFilterArrayOutput)
}

// Unique OCID of the CompliancePolicyRule.
func (o GetCompliancePolicyRulesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCompliancePolicyRulesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Patch Name.
func (o GetCompliancePolicyRulesResultOutput) PatchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCompliancePolicyRulesResult) *string { return v.PatchName }).(pulumi.StringPtrOutput)
}

// The current state of the CompliancePolicyRule.
func (o GetCompliancePolicyRulesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCompliancePolicyRulesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCompliancePolicyRulesResultOutput{})
}
