// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Compliance Records in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Gets a list of complianceDetails.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetComplianceRecords(ctx, &fleetappsmanagement.GetComplianceRecordsArgs{
//				CompartmentId:          compartmentId,
//				CompartmentIdInSubtree: pulumi.BoolRef(complianceRecordCompartmentIdInSubtree),
//				ComplianceState:        pulumi.StringRef(complianceRecordComplianceState),
//				EntityId:               pulumi.StringRef(testEntity.Id),
//				ProductName:            pulumi.StringRef(complianceRecordProductName),
//				ProductStack:           pulumi.StringRef(complianceRecordProductStack),
//				ResourceId:             pulumi.StringRef(testResource.Id),
//				TargetName:             pulumi.StringRef(testTarget.Name),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetComplianceRecords(ctx *pulumi.Context, args *GetComplianceRecordsArgs, opts ...pulumi.InvokeOption) (*GetComplianceRecordsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetComplianceRecordsResult
	err := ctx.Invoke("oci:FleetAppsManagement/getComplianceRecords:getComplianceRecords", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComplianceRecords.
type GetComplianceRecordsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId string `pulumi:"compartmentId"`
	// If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// Target Compliance State.
	ComplianceState *string `pulumi:"complianceState"`
	// Entity identifier.Ex:FleetId
	EntityId *string                      `pulumi:"entityId"`
	Filters  []GetComplianceRecordsFilter `pulumi:"filters"`
	// Product Name.
	ProductName *string `pulumi:"productName"`
	// ProductStack name.
	ProductStack *string `pulumi:"productStack"`
	// Resource identifier.
	ResourceId *string `pulumi:"resourceId"`
	// Unique target name
	TargetName *string `pulumi:"targetName"`
}

// A collection of values returned by getComplianceRecords.
type GetComplianceRecordsResult struct {
	// Compartment OCID of the resource.
	CompartmentId          string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool  `pulumi:"compartmentIdInSubtree"`
	// The list of compliance_record_collection.
	ComplianceRecordCollections []GetComplianceRecordsComplianceRecordCollection `pulumi:"complianceRecordCollections"`
	// Last known compliance state of target.
	ComplianceState *string `pulumi:"complianceState"`
	// The OCID of the entity for which the compliance is calculated.Ex.FleetId
	EntityId *string                      `pulumi:"entityId"`
	Filters  []GetComplianceRecordsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Product Name.
	ProductName *string `pulumi:"productName"`
	// Product Stack.
	ProductStack *string `pulumi:"productStack"`
	// The OCID to identify the resource.
	ResourceId *string `pulumi:"resourceId"`
	// Target Name.
	TargetName *string `pulumi:"targetName"`
}

func GetComplianceRecordsOutput(ctx *pulumi.Context, args GetComplianceRecordsOutputArgs, opts ...pulumi.InvokeOption) GetComplianceRecordsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetComplianceRecordsResultOutput, error) {
			args := v.(GetComplianceRecordsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getComplianceRecords:getComplianceRecords", args, GetComplianceRecordsResultOutput{}, options).(GetComplianceRecordsResultOutput), nil
		}).(GetComplianceRecordsResultOutput)
}

// A collection of arguments for invoking getComplianceRecords.
type GetComplianceRecordsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// Target Compliance State.
	ComplianceState pulumi.StringPtrInput `pulumi:"complianceState"`
	// Entity identifier.Ex:FleetId
	EntityId pulumi.StringPtrInput                `pulumi:"entityId"`
	Filters  GetComplianceRecordsFilterArrayInput `pulumi:"filters"`
	// Product Name.
	ProductName pulumi.StringPtrInput `pulumi:"productName"`
	// ProductStack name.
	ProductStack pulumi.StringPtrInput `pulumi:"productStack"`
	// Resource identifier.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Unique target name
	TargetName pulumi.StringPtrInput `pulumi:"targetName"`
}

func (GetComplianceRecordsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComplianceRecordsArgs)(nil)).Elem()
}

// A collection of values returned by getComplianceRecords.
type GetComplianceRecordsResultOutput struct{ *pulumi.OutputState }

func (GetComplianceRecordsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComplianceRecordsResult)(nil)).Elem()
}

func (o GetComplianceRecordsResultOutput) ToGetComplianceRecordsResultOutput() GetComplianceRecordsResultOutput {
	return o
}

func (o GetComplianceRecordsResultOutput) ToGetComplianceRecordsResultOutputWithContext(ctx context.Context) GetComplianceRecordsResultOutput {
	return o
}

// Compartment OCID of the resource.
func (o GetComplianceRecordsResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetComplianceRecordsResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetComplianceRecordsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetComplianceRecordsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// The list of compliance_record_collection.
func (o GetComplianceRecordsResultOutput) ComplianceRecordCollections() GetComplianceRecordsComplianceRecordCollectionArrayOutput {
	return o.ApplyT(func(v GetComplianceRecordsResult) []GetComplianceRecordsComplianceRecordCollection {
		return v.ComplianceRecordCollections
	}).(GetComplianceRecordsComplianceRecordCollectionArrayOutput)
}

// Last known compliance state of target.
func (o GetComplianceRecordsResultOutput) ComplianceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComplianceRecordsResult) *string { return v.ComplianceState }).(pulumi.StringPtrOutput)
}

// The OCID of the entity for which the compliance is calculated.Ex.FleetId
func (o GetComplianceRecordsResultOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComplianceRecordsResult) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o GetComplianceRecordsResultOutput) Filters() GetComplianceRecordsFilterArrayOutput {
	return o.ApplyT(func(v GetComplianceRecordsResult) []GetComplianceRecordsFilter { return v.Filters }).(GetComplianceRecordsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetComplianceRecordsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComplianceRecordsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Product Name.
func (o GetComplianceRecordsResultOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComplianceRecordsResult) *string { return v.ProductName }).(pulumi.StringPtrOutput)
}

// Product Stack.
func (o GetComplianceRecordsResultOutput) ProductStack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComplianceRecordsResult) *string { return v.ProductStack }).(pulumi.StringPtrOutput)
}

// The OCID to identify the resource.
func (o GetComplianceRecordsResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComplianceRecordsResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Target Name.
func (o GetComplianceRecordsResultOutput) TargetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComplianceRecordsResult) *string { return v.TargetName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetComplianceRecordsResultOutput{})
}
