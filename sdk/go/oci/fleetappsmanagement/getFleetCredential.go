// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Fleet Credential resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Gets a FleetCredential by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetFleetCredential(ctx, &fleetappsmanagement.GetFleetCredentialArgs{
//				FleetCredentialId: testFleetCredentialOciFleetAppsManagementFleetCredential.Id,
//				FleetId:           testFleet.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFleetCredential(ctx *pulumi.Context, args *LookupFleetCredentialArgs, opts ...pulumi.InvokeOption) (*LookupFleetCredentialResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFleetCredentialResult
	err := ctx.Invoke("oci:FleetAppsManagement/getFleetCredential:getFleetCredential", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFleetCredential.
type LookupFleetCredentialArgs struct {
	// unique FleetCredential identifier
	FleetCredentialId string `pulumi:"fleetCredentialId"`
	// Unique Fleet identifier.
	FleetId string `pulumi:"fleetId"`
}

// A collection of values returned by getFleetCredential.
type LookupFleetCredentialResult struct {
	// Tenancy OCID
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// Credential specific Details.
	EntitySpecifics   []GetFleetCredentialEntitySpecific `pulumi:"entitySpecifics"`
	FleetCredentialId string                             `pulumi:"fleetCredentialId"`
	FleetId           string                             `pulumi:"fleetId"`
	// The unique id of the resource.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Credential Details.
	Passwords []GetFleetCredentialPassword `pulumi:"passwords"`
	// The current state of the FleetCredential.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Credential Details.
	Users []GetFleetCredentialUser `pulumi:"users"`
}

func LookupFleetCredentialOutput(ctx *pulumi.Context, args LookupFleetCredentialOutputArgs, opts ...pulumi.InvokeOption) LookupFleetCredentialResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFleetCredentialResultOutput, error) {
			args := v.(LookupFleetCredentialArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getFleetCredential:getFleetCredential", args, LookupFleetCredentialResultOutput{}, options).(LookupFleetCredentialResultOutput), nil
		}).(LookupFleetCredentialResultOutput)
}

// A collection of arguments for invoking getFleetCredential.
type LookupFleetCredentialOutputArgs struct {
	// unique FleetCredential identifier
	FleetCredentialId pulumi.StringInput `pulumi:"fleetCredentialId"`
	// Unique Fleet identifier.
	FleetId pulumi.StringInput `pulumi:"fleetId"`
}

func (LookupFleetCredentialOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetCredentialArgs)(nil)).Elem()
}

// A collection of values returned by getFleetCredential.
type LookupFleetCredentialResultOutput struct{ *pulumi.OutputState }

func (LookupFleetCredentialResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetCredentialResult)(nil)).Elem()
}

func (o LookupFleetCredentialResultOutput) ToLookupFleetCredentialResultOutput() LookupFleetCredentialResultOutput {
	return o
}

func (o LookupFleetCredentialResultOutput) ToLookupFleetCredentialResultOutputWithContext(ctx context.Context) LookupFleetCredentialResultOutput {
	return o
}

// Tenancy OCID
func (o LookupFleetCredentialResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o LookupFleetCredentialResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Credential specific Details.
func (o LookupFleetCredentialResultOutput) EntitySpecifics() GetFleetCredentialEntitySpecificArrayOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) []GetFleetCredentialEntitySpecific { return v.EntitySpecifics }).(GetFleetCredentialEntitySpecificArrayOutput)
}

func (o LookupFleetCredentialResultOutput) FleetCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) string { return v.FleetCredentialId }).(pulumi.StringOutput)
}

func (o LookupFleetCredentialResultOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) string { return v.FleetId }).(pulumi.StringOutput)
}

// The unique id of the resource.
func (o LookupFleetCredentialResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupFleetCredentialResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Credential Details.
func (o LookupFleetCredentialResultOutput) Passwords() GetFleetCredentialPasswordArrayOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) []GetFleetCredentialPassword { return v.Passwords }).(GetFleetCredentialPasswordArrayOutput)
}

// The current state of the FleetCredential.
func (o LookupFleetCredentialResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupFleetCredentialResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o LookupFleetCredentialResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o LookupFleetCredentialResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Credential Details.
func (o LookupFleetCredentialResultOutput) Users() GetFleetCredentialUserArrayOutput {
	return o.ApplyT(func(v LookupFleetCredentialResult) []GetFleetCredentialUser { return v.Users }).(GetFleetCredentialUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFleetCredentialResultOutput{})
}
