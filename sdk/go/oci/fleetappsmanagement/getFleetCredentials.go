// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Fleet Credentials in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Returns a list of FleetCredentials.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.GetFleetCredentials(ctx, &fleetappsmanagement.GetFleetCredentialsArgs{
//				FleetId:         testFleet.Id,
//				CompartmentId:   pulumi.StringRef(compartmentId),
//				CredentialLevel: pulumi.StringRef(fleetCredentialCredentialLevel),
//				DisplayName:     pulumi.StringRef(fleetCredentialDisplayName),
//				Id:              pulumi.StringRef(fleetCredentialId),
//				State:           pulumi.StringRef(fleetCredentialState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFleetCredentials(ctx *pulumi.Context, args *GetFleetCredentialsArgs, opts ...pulumi.InvokeOption) (*GetFleetCredentialsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFleetCredentialsResult
	err := ctx.Invoke("oci:FleetAppsManagement/getFleetCredentials:getFleetCredentials", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFleetCredentials.
type GetFleetCredentialsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// Credential Level.
	CredentialLevel *string `pulumi:"credentialLevel"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetFleetCredentialsFilter `pulumi:"filters"`
	// unique Fleet identifier
	FleetId string `pulumi:"fleetId"`
	// unique FleetCredential identifier
	Id *string `pulumi:"id"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getFleetCredentials.
type GetFleetCredentialsResult struct {
	// Tenancy OCID
	CompartmentId *string `pulumi:"compartmentId"`
	// Credential Level.
	CredentialLevel *string `pulumi:"credentialLevel"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string                     `pulumi:"displayName"`
	Filters     []GetFleetCredentialsFilter `pulumi:"filters"`
	// The list of fleet_credential_collection.
	FleetCredentialCollections []GetFleetCredentialsFleetCredentialCollection `pulumi:"fleetCredentialCollections"`
	FleetId                    string                                         `pulumi:"fleetId"`
	// The unique id of the resource.
	Id *string `pulumi:"id"`
	// The current state of the FleetCredential.
	State *string `pulumi:"state"`
}

func GetFleetCredentialsOutput(ctx *pulumi.Context, args GetFleetCredentialsOutputArgs, opts ...pulumi.InvokeOption) GetFleetCredentialsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFleetCredentialsResultOutput, error) {
			args := v.(GetFleetCredentialsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetFleetCredentialsResult
			secret, err := ctx.InvokePackageRaw("oci:FleetAppsManagement/getFleetCredentials:getFleetCredentials", args, &rv, "", opts...)
			if err != nil {
				return GetFleetCredentialsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetFleetCredentialsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetFleetCredentialsResultOutput), nil
			}
			return output, nil
		}).(GetFleetCredentialsResultOutput)
}

// A collection of arguments for invoking getFleetCredentials.
type GetFleetCredentialsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Credential Level.
	CredentialLevel pulumi.StringPtrInput `pulumi:"credentialLevel"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput               `pulumi:"displayName"`
	Filters     GetFleetCredentialsFilterArrayInput `pulumi:"filters"`
	// unique Fleet identifier
	FleetId pulumi.StringInput `pulumi:"fleetId"`
	// unique FleetCredential identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetFleetCredentialsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetCredentialsArgs)(nil)).Elem()
}

// A collection of values returned by getFleetCredentials.
type GetFleetCredentialsResultOutput struct{ *pulumi.OutputState }

func (GetFleetCredentialsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetCredentialsResult)(nil)).Elem()
}

func (o GetFleetCredentialsResultOutput) ToGetFleetCredentialsResultOutput() GetFleetCredentialsResultOutput {
	return o
}

func (o GetFleetCredentialsResultOutput) ToGetFleetCredentialsResultOutputWithContext(ctx context.Context) GetFleetCredentialsResultOutput {
	return o
}

// Tenancy OCID
func (o GetFleetCredentialsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetCredentialsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Credential Level.
func (o GetFleetCredentialsResultOutput) CredentialLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetCredentialsResult) *string { return v.CredentialLevel }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetFleetCredentialsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetCredentialsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetFleetCredentialsResultOutput) Filters() GetFleetCredentialsFilterArrayOutput {
	return o.ApplyT(func(v GetFleetCredentialsResult) []GetFleetCredentialsFilter { return v.Filters }).(GetFleetCredentialsFilterArrayOutput)
}

// The list of fleet_credential_collection.
func (o GetFleetCredentialsResultOutput) FleetCredentialCollections() GetFleetCredentialsFleetCredentialCollectionArrayOutput {
	return o.ApplyT(func(v GetFleetCredentialsResult) []GetFleetCredentialsFleetCredentialCollection {
		return v.FleetCredentialCollections
	}).(GetFleetCredentialsFleetCredentialCollectionArrayOutput)
}

func (o GetFleetCredentialsResultOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetCredentialsResult) string { return v.FleetId }).(pulumi.StringOutput)
}

// The unique id of the resource.
func (o GetFleetCredentialsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetCredentialsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the FleetCredential.
func (o GetFleetCredentialsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetCredentialsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFleetCredentialsResultOutput{})
}
