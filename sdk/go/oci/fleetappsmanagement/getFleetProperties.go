// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Fleet Properties in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// List fleet properties in Fleet Application Management.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.GetFleetProperties(ctx, &fleetappsmanagement.GetFleetPropertiesArgs{
//				FleetId:       testFleet.Id,
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(fleetPropertyDisplayName),
//				Id:            pulumi.StringRef(fleetPropertyId),
//				State:         pulumi.StringRef(fleetPropertyState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFleetProperties(ctx *pulumi.Context, args *GetFleetPropertiesArgs, opts ...pulumi.InvokeOption) (*GetFleetPropertiesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFleetPropertiesResult
	err := ctx.Invoke("oci:FleetAppsManagement/getFleetProperties:getFleetProperties", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFleetProperties.
type GetFleetPropertiesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetFleetPropertiesFilter `pulumi:"filters"`
	// Unique Fleet identifier.
	FleetId string `pulumi:"fleetId"`
	// A filter to return only resources whose fleetProperty identifier matches the given identifier.
	Id *string `pulumi:"id"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getFleetProperties.
type GetFleetPropertiesResult struct {
	// Tenancy OCID
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string                    `pulumi:"displayName"`
	Filters     []GetFleetPropertiesFilter `pulumi:"filters"`
	FleetId     string                     `pulumi:"fleetId"`
	// The list of fleet_property_collection.
	FleetPropertyCollections []GetFleetPropertiesFleetPropertyCollection `pulumi:"fleetPropertyCollections"`
	// The unique id of the resource.
	Id *string `pulumi:"id"`
	// The current state of the FleetProperty.
	State *string `pulumi:"state"`
}

func GetFleetPropertiesOutput(ctx *pulumi.Context, args GetFleetPropertiesOutputArgs, opts ...pulumi.InvokeOption) GetFleetPropertiesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFleetPropertiesResultOutput, error) {
			args := v.(GetFleetPropertiesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetFleetPropertiesResult
			secret, err := ctx.InvokePackageRaw("oci:FleetAppsManagement/getFleetProperties:getFleetProperties", args, &rv, "", opts...)
			if err != nil {
				return GetFleetPropertiesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetFleetPropertiesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetFleetPropertiesResultOutput), nil
			}
			return output, nil
		}).(GetFleetPropertiesResultOutput)
}

// A collection of arguments for invoking getFleetProperties.
type GetFleetPropertiesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput              `pulumi:"displayName"`
	Filters     GetFleetPropertiesFilterArrayInput `pulumi:"filters"`
	// Unique Fleet identifier.
	FleetId pulumi.StringInput `pulumi:"fleetId"`
	// A filter to return only resources whose fleetProperty identifier matches the given identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetFleetPropertiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetPropertiesArgs)(nil)).Elem()
}

// A collection of values returned by getFleetProperties.
type GetFleetPropertiesResultOutput struct{ *pulumi.OutputState }

func (GetFleetPropertiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetPropertiesResult)(nil)).Elem()
}

func (o GetFleetPropertiesResultOutput) ToGetFleetPropertiesResultOutput() GetFleetPropertiesResultOutput {
	return o
}

func (o GetFleetPropertiesResultOutput) ToGetFleetPropertiesResultOutputWithContext(ctx context.Context) GetFleetPropertiesResultOutput {
	return o
}

// Tenancy OCID
func (o GetFleetPropertiesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetPropertiesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetFleetPropertiesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetPropertiesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetFleetPropertiesResultOutput) Filters() GetFleetPropertiesFilterArrayOutput {
	return o.ApplyT(func(v GetFleetPropertiesResult) []GetFleetPropertiesFilter { return v.Filters }).(GetFleetPropertiesFilterArrayOutput)
}

func (o GetFleetPropertiesResultOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetPropertiesResult) string { return v.FleetId }).(pulumi.StringOutput)
}

// The list of fleet_property_collection.
func (o GetFleetPropertiesResultOutput) FleetPropertyCollections() GetFleetPropertiesFleetPropertyCollectionArrayOutput {
	return o.ApplyT(func(v GetFleetPropertiesResult) []GetFleetPropertiesFleetPropertyCollection {
		return v.FleetPropertyCollections
	}).(GetFleetPropertiesFleetPropertyCollectionArrayOutput)
}

// The unique id of the resource.
func (o GetFleetPropertiesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetPropertiesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the FleetProperty.
func (o GetFleetPropertiesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetPropertiesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFleetPropertiesResultOutput{})
}
