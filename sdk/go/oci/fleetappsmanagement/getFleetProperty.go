// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Fleet Property resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// # Gets a FleetProperty by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.GetFleetProperty(ctx, &fleetappsmanagement.GetFleetPropertyArgs{
//				FleetId:         testFleet.Id,
//				FleetPropertyId: testProperty.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFleetProperty(ctx *pulumi.Context, args *LookupFleetPropertyArgs, opts ...pulumi.InvokeOption) (*LookupFleetPropertyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFleetPropertyResult
	err := ctx.Invoke("oci:FleetAppsManagement/getFleetProperty:getFleetProperty", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFleetProperty.
type LookupFleetPropertyArgs struct {
	// unique Fleet identifier
	FleetId string `pulumi:"fleetId"`
	// unique FleetProperty identifier
	FleetPropertyId string `pulumi:"fleetPropertyId"`
}

// A collection of values returned by getFleetProperty.
type LookupFleetPropertyResult struct {
	// Values of the category (must be a single value if selection = 'single choice')
	AllowedValues []string `pulumi:"allowedValues"`
	// Tenancy OCID
	CompartmentId string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName     string `pulumi:"displayName"`
	FleetId         string `pulumi:"fleetId"`
	FleetPropertyId string `pulumi:"fleetPropertyId"`
	// The unique id of the resource.
	Id string `pulumi:"id"`
	// Property Id Ocid.
	PropertyId string `pulumi:"propertyId"`
	// Text selection of the category
	SelectionType string `pulumi:"selectionType"`
	// The current state of the FleetProperty.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Value of the Property
	Value string `pulumi:"value"`
	// Format of the value
	ValueType string `pulumi:"valueType"`
}

func LookupFleetPropertyOutput(ctx *pulumi.Context, args LookupFleetPropertyOutputArgs, opts ...pulumi.InvokeOption) LookupFleetPropertyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFleetPropertyResultOutput, error) {
			args := v.(LookupFleetPropertyArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupFleetPropertyResult
			secret, err := ctx.InvokePackageRaw("oci:FleetAppsManagement/getFleetProperty:getFleetProperty", args, &rv, "", opts...)
			if err != nil {
				return LookupFleetPropertyResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupFleetPropertyResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupFleetPropertyResultOutput), nil
			}
			return output, nil
		}).(LookupFleetPropertyResultOutput)
}

// A collection of arguments for invoking getFleetProperty.
type LookupFleetPropertyOutputArgs struct {
	// unique Fleet identifier
	FleetId pulumi.StringInput `pulumi:"fleetId"`
	// unique FleetProperty identifier
	FleetPropertyId pulumi.StringInput `pulumi:"fleetPropertyId"`
}

func (LookupFleetPropertyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetPropertyArgs)(nil)).Elem()
}

// A collection of values returned by getFleetProperty.
type LookupFleetPropertyResultOutput struct{ *pulumi.OutputState }

func (LookupFleetPropertyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetPropertyResult)(nil)).Elem()
}

func (o LookupFleetPropertyResultOutput) ToLookupFleetPropertyResultOutput() LookupFleetPropertyResultOutput {
	return o
}

func (o LookupFleetPropertyResultOutput) ToLookupFleetPropertyResultOutputWithContext(ctx context.Context) LookupFleetPropertyResultOutput {
	return o
}

// Values of the category (must be a single value if selection = 'single choice')
func (o LookupFleetPropertyResultOutput) AllowedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) []string { return v.AllowedValues }).(pulumi.StringArrayOutput)
}

// Tenancy OCID
func (o LookupFleetPropertyResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o LookupFleetPropertyResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupFleetPropertyResultOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.FleetId }).(pulumi.StringOutput)
}

func (o LookupFleetPropertyResultOutput) FleetPropertyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.FleetPropertyId }).(pulumi.StringOutput)
}

// The unique id of the resource.
func (o LookupFleetPropertyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.Id }).(pulumi.StringOutput)
}

// Property Id Ocid.
func (o LookupFleetPropertyResultOutput) PropertyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.PropertyId }).(pulumi.StringOutput)
}

// Text selection of the category
func (o LookupFleetPropertyResultOutput) SelectionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.SelectionType }).(pulumi.StringOutput)
}

// The current state of the FleetProperty.
func (o LookupFleetPropertyResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupFleetPropertyResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o LookupFleetPropertyResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o LookupFleetPropertyResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Value of the Property
func (o LookupFleetPropertyResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.Value }).(pulumi.StringOutput)
}

// Format of the value
func (o LookupFleetPropertyResultOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetPropertyResult) string { return v.ValueType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFleetPropertyResultOutput{})
}
