// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Fleet Resource resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Gets a Fleet Resource by identifier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetFleetResource(ctx, &fleetappsmanagement.GetFleetResourceArgs{
//				FleetId:         testFleet.Id,
//				FleetResourceId: testResource.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFleetResource(ctx *pulumi.Context, args *LookupFleetResourceArgs, opts ...pulumi.InvokeOption) (*LookupFleetResourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFleetResourceResult
	err := ctx.Invoke("oci:FleetAppsManagement/getFleetResource:getFleetResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFleetResource.
type LookupFleetResourceArgs struct {
	// Unique Fleet identifier.
	FleetId string `pulumi:"fleetId"`
	// unique FleetResource identifier
	FleetResourceId string `pulumi:"fleetResourceId"`
}

// A collection of values returned by getFleetResource.
type LookupFleetResourceResult struct {
	// Application Type associated with the resource when the resource type is fleet. Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
	ApplicationType string `pulumi:"applicationType"`
	// Resource Compartment name.
	Compartment string `pulumi:"compartment"`
	// OCID of the compartment to which the resource belongs to.
	CompartmentId string `pulumi:"compartmentId"`
	// Compliance State of the Resource.
	ComplianceState string `pulumi:"complianceState"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// Environment Type associated with the Fleet when the resource type is fleet. Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
	EnvironmentType string `pulumi:"environmentType"`
	FleetId         string `pulumi:"fleetId"`
	FleetResourceId string `pulumi:"fleetResourceId"`
	// The unique id of the resource.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Product associated with the resource when the resource type is fleet. Will only be returned for PRODUCT fleets that are part of a GROUP Fleet.
	Product string `pulumi:"product"`
	// Count of products within the resource.
	ProductCount int `pulumi:"productCount"`
	// The OCID of the resource.
	ResourceId string `pulumi:"resourceId"`
	// Associated region
	ResourceRegion string `pulumi:"resourceRegion"`
	// Type of the Resource.
	ResourceType string `pulumi:"resourceType"`
	// The current state of the FleetResource.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// Count of targets within the resource.
	TargetCount int `pulumi:"targetCount"`
	// OCID of the tenancy to which the resource belongs to.
	TenancyId string `pulumi:"tenancyId"`
	// Resource Tenancy Name.
	TenancyName string `pulumi:"tenancyName"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
}

func LookupFleetResourceOutput(ctx *pulumi.Context, args LookupFleetResourceOutputArgs, opts ...pulumi.InvokeOption) LookupFleetResourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFleetResourceResultOutput, error) {
			args := v.(LookupFleetResourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getFleetResource:getFleetResource", args, LookupFleetResourceResultOutput{}, options).(LookupFleetResourceResultOutput), nil
		}).(LookupFleetResourceResultOutput)
}

// A collection of arguments for invoking getFleetResource.
type LookupFleetResourceOutputArgs struct {
	// Unique Fleet identifier.
	FleetId pulumi.StringInput `pulumi:"fleetId"`
	// unique FleetResource identifier
	FleetResourceId pulumi.StringInput `pulumi:"fleetResourceId"`
}

func (LookupFleetResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetResourceArgs)(nil)).Elem()
}

// A collection of values returned by getFleetResource.
type LookupFleetResourceResultOutput struct{ *pulumi.OutputState }

func (LookupFleetResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetResourceResult)(nil)).Elem()
}

func (o LookupFleetResourceResultOutput) ToLookupFleetResourceResultOutput() LookupFleetResourceResultOutput {
	return o
}

func (o LookupFleetResourceResultOutput) ToLookupFleetResourceResultOutputWithContext(ctx context.Context) LookupFleetResourceResultOutput {
	return o
}

// Application Type associated with the resource when the resource type is fleet. Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
func (o LookupFleetResourceResultOutput) ApplicationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.ApplicationType }).(pulumi.StringOutput)
}

// Resource Compartment name.
func (o LookupFleetResourceResultOutput) Compartment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.Compartment }).(pulumi.StringOutput)
}

// OCID of the compartment to which the resource belongs to.
func (o LookupFleetResourceResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Compliance State of the Resource.
func (o LookupFleetResourceResultOutput) ComplianceState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.ComplianceState }).(pulumi.StringOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o LookupFleetResourceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Environment Type associated with the Fleet when the resource type is fleet. Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
func (o LookupFleetResourceResultOutput) EnvironmentType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.EnvironmentType }).(pulumi.StringOutput)
}

func (o LookupFleetResourceResultOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.FleetId }).(pulumi.StringOutput)
}

func (o LookupFleetResourceResultOutput) FleetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.FleetResourceId }).(pulumi.StringOutput)
}

// The unique id of the resource.
func (o LookupFleetResourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupFleetResourceResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Product associated with the resource when the resource type is fleet. Will only be returned for PRODUCT fleets that are part of a GROUP Fleet.
func (o LookupFleetResourceResultOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.Product }).(pulumi.StringOutput)
}

// Count of products within the resource.
func (o LookupFleetResourceResultOutput) ProductCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) int { return v.ProductCount }).(pulumi.IntOutput)
}

// The OCID of the resource.
func (o LookupFleetResourceResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Associated region
func (o LookupFleetResourceResultOutput) ResourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.ResourceRegion }).(pulumi.StringOutput)
}

// Type of the Resource.
func (o LookupFleetResourceResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The current state of the FleetResource.
func (o LookupFleetResourceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupFleetResourceResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// Count of targets within the resource.
func (o LookupFleetResourceResultOutput) TargetCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) int { return v.TargetCount }).(pulumi.IntOutput)
}

// OCID of the tenancy to which the resource belongs to.
func (o LookupFleetResourceResultOutput) TenancyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.TenancyId }).(pulumi.StringOutput)
}

// Resource Tenancy Name.
func (o LookupFleetResourceResultOutput) TenancyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.TenancyName }).(pulumi.StringOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o LookupFleetResourceResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o LookupFleetResourceResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResourceResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFleetResourceResultOutput{})
}
