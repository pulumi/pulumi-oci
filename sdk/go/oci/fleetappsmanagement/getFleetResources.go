// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Fleet Resources in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// List resources for a fleet in Fleet Application Management.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetFleetResources(ctx, &fleetappsmanagement.GetFleetResourcesArgs{
//				FleetId:           testFleet.Id,
//				DisplayName:       pulumi.StringRef(fleetResourceDisplayName),
//				FleetResourceType: pulumi.StringRef(fleetResourceFleetResourceType),
//				Id:                pulumi.StringRef(fleetResourceId),
//				State:             pulumi.StringRef(fleetResourceState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFleetResources(ctx *pulumi.Context, args *GetFleetResourcesArgs, opts ...pulumi.InvokeOption) (*GetFleetResourcesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFleetResourcesResult
	err := ctx.Invoke("oci:FleetAppsManagement/getFleetResources:getFleetResources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFleetResources.
type GetFleetResourcesArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                   `pulumi:"displayName"`
	Filters     []GetFleetResourcesFilter `pulumi:"filters"`
	// Unique Fleet identifier.
	FleetId string `pulumi:"fleetId"`
	// A filter to return only resources whose resourceType matches the given resourceType.
	FleetResourceType *string `pulumi:"fleetResourceType"`
	// A filter to return only resources whose identifier matches the given identifier.
	Id *string `pulumi:"id"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getFleetResources.
type GetFleetResourcesResult struct {
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string                   `pulumi:"displayName"`
	Filters     []GetFleetResourcesFilter `pulumi:"filters"`
	FleetId     string                    `pulumi:"fleetId"`
	// The list of fleet_resource_collection.
	FleetResourceCollections []GetFleetResourcesFleetResourceCollection `pulumi:"fleetResourceCollections"`
	FleetResourceType        *string                                    `pulumi:"fleetResourceType"`
	// The unique id of the resource.
	Id *string `pulumi:"id"`
	// The current state of the FleetResource.
	State *string `pulumi:"state"`
}

func GetFleetResourcesOutput(ctx *pulumi.Context, args GetFleetResourcesOutputArgs, opts ...pulumi.InvokeOption) GetFleetResourcesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFleetResourcesResultOutput, error) {
			args := v.(GetFleetResourcesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getFleetResources:getFleetResources", args, GetFleetResourcesResultOutput{}, options).(GetFleetResourcesResultOutput), nil
		}).(GetFleetResourcesResultOutput)
}

// A collection of arguments for invoking getFleetResources.
type GetFleetResourcesOutputArgs struct {
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput             `pulumi:"displayName"`
	Filters     GetFleetResourcesFilterArrayInput `pulumi:"filters"`
	// Unique Fleet identifier.
	FleetId pulumi.StringInput `pulumi:"fleetId"`
	// A filter to return only resources whose resourceType matches the given resourceType.
	FleetResourceType pulumi.StringPtrInput `pulumi:"fleetResourceType"`
	// A filter to return only resources whose identifier matches the given identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources whose lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetFleetResourcesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetResourcesArgs)(nil)).Elem()
}

// A collection of values returned by getFleetResources.
type GetFleetResourcesResultOutput struct{ *pulumi.OutputState }

func (GetFleetResourcesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetResourcesResult)(nil)).Elem()
}

func (o GetFleetResourcesResultOutput) ToGetFleetResourcesResultOutput() GetFleetResourcesResultOutput {
	return o
}

func (o GetFleetResourcesResultOutput) ToGetFleetResourcesResultOutputWithContext(ctx context.Context) GetFleetResourcesResultOutput {
	return o
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetFleetResourcesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetResourcesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetFleetResourcesResultOutput) Filters() GetFleetResourcesFilterArrayOutput {
	return o.ApplyT(func(v GetFleetResourcesResult) []GetFleetResourcesFilter { return v.Filters }).(GetFleetResourcesFilterArrayOutput)
}

func (o GetFleetResourcesResultOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetResourcesResult) string { return v.FleetId }).(pulumi.StringOutput)
}

// The list of fleet_resource_collection.
func (o GetFleetResourcesResultOutput) FleetResourceCollections() GetFleetResourcesFleetResourceCollectionArrayOutput {
	return o.ApplyT(func(v GetFleetResourcesResult) []GetFleetResourcesFleetResourceCollection {
		return v.FleetResourceCollections
	}).(GetFleetResourcesFleetResourceCollectionArrayOutput)
}

func (o GetFleetResourcesResultOutput) FleetResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetResourcesResult) *string { return v.FleetResourceType }).(pulumi.StringPtrOutput)
}

// The unique id of the resource.
func (o GetFleetResourcesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetResourcesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The current state of the FleetResource.
func (o GetFleetResourcesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetResourcesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFleetResourcesResultOutput{})
}
