// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Fleets in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Returns a list of Fleets in the specified Tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.GetFleets(ctx, &fleetappsmanagement.GetFleetsArgs{
//				ApplicationType: pulumi.StringRef(fleetApplicationType),
//				CompartmentId:   pulumi.StringRef(compartmentId),
//				DisplayName:     pulumi.StringRef(fleetDisplayName),
//				EnvironmentType: pulumi.StringRef(fleetEnvironmentType),
//				FleetType:       pulumi.StringRef(fleetFleetType),
//				Id:              pulumi.StringRef(fleetId),
//				Product:         pulumi.StringRef(fleetProduct),
//				State:           pulumi.StringRef(fleetState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFleets(ctx *pulumi.Context, args *GetFleetsArgs, opts ...pulumi.InvokeOption) (*GetFleetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFleetsResult
	err := ctx.Invoke("oci:FleetAppsManagement/getFleets:getFleets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFleets.
type GetFleetsArgs struct {
	// A filter to return resources that match the Application Type/Product Stack given..
	ApplicationType *string `pulumi:"applicationType"`
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string `pulumi:"displayName"`
	// A filter to return resources that match the Environment Type given.
	EnvironmentType *string           `pulumi:"environmentType"`
	Filters         []GetFleetsFilter `pulumi:"filters"`
	// A filter to return fleets whose fleetType matches the given fleetType.
	FleetType *string `pulumi:"fleetType"`
	// A filter to return fleets whose id matches the given Fleet identifier
	Id *string `pulumi:"id"`
	// A filter to return resources that match the Product given.
	Product *string `pulumi:"product"`
	// A filter to return fleets whose lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getFleets.
type GetFleetsResult struct {
	// Product stack associated with the Fleet. Applicable for ENVIRONMENT fleet types.
	ApplicationType *string `pulumi:"applicationType"`
	// Tenancy Id (Root Compartment Id)for which the rule is created.
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string `pulumi:"displayName"`
	// Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
	EnvironmentType *string           `pulumi:"environmentType"`
	Filters         []GetFleetsFilter `pulumi:"filters"`
	// The list of fleet_collection.
	FleetCollections []GetFleetsFleetCollection `pulumi:"fleetCollections"`
	// Type of the Fleet. PRODUCT - A fleet of product-specific resources for a product type. ENVIRONMENT - A fleet of environment-specific resources for a product stack. GROUP - A fleet of a fleet of either environment or product fleets. GENERIC - A fleet of resources selected dynamically or manually for reporting purposes
	FleetType *string `pulumi:"fleetType"`
	// The OCID of the resource.
	Id      *string `pulumi:"id"`
	Product *string `pulumi:"product"`
	// The lifecycle state of the Fleet.
	State *string `pulumi:"state"`
}

func GetFleetsOutput(ctx *pulumi.Context, args GetFleetsOutputArgs, opts ...pulumi.InvokeOption) GetFleetsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFleetsResultOutput, error) {
			args := v.(GetFleetsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getFleets:getFleets", args, GetFleetsResultOutput{}, options).(GetFleetsResultOutput), nil
		}).(GetFleetsResultOutput)
}

// A collection of arguments for invoking getFleets.
type GetFleetsOutputArgs struct {
	// A filter to return resources that match the Application Type/Product Stack given..
	ApplicationType pulumi.StringPtrInput `pulumi:"applicationType"`
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A filter to return resources that match the Environment Type given.
	EnvironmentType pulumi.StringPtrInput     `pulumi:"environmentType"`
	Filters         GetFleetsFilterArrayInput `pulumi:"filters"`
	// A filter to return fleets whose fleetType matches the given fleetType.
	FleetType pulumi.StringPtrInput `pulumi:"fleetType"`
	// A filter to return fleets whose id matches the given Fleet identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return resources that match the Product given.
	Product pulumi.StringPtrInput `pulumi:"product"`
	// A filter to return fleets whose lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetFleetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetsArgs)(nil)).Elem()
}

// A collection of values returned by getFleets.
type GetFleetsResultOutput struct{ *pulumi.OutputState }

func (GetFleetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetsResult)(nil)).Elem()
}

func (o GetFleetsResultOutput) ToGetFleetsResultOutput() GetFleetsResultOutput {
	return o
}

func (o GetFleetsResultOutput) ToGetFleetsResultOutputWithContext(ctx context.Context) GetFleetsResultOutput {
	return o
}

// Product stack associated with the Fleet. Applicable for ENVIRONMENT fleet types.
func (o GetFleetsResultOutput) ApplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetsResult) *string { return v.ApplicationType }).(pulumi.StringPtrOutput)
}

// Tenancy Id (Root Compartment Id)for which the rule is created.
func (o GetFleetsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetFleetsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
func (o GetFleetsResultOutput) EnvironmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetsResult) *string { return v.EnvironmentType }).(pulumi.StringPtrOutput)
}

func (o GetFleetsResultOutput) Filters() GetFleetsFilterArrayOutput {
	return o.ApplyT(func(v GetFleetsResult) []GetFleetsFilter { return v.Filters }).(GetFleetsFilterArrayOutput)
}

// The list of fleet_collection.
func (o GetFleetsResultOutput) FleetCollections() GetFleetsFleetCollectionArrayOutput {
	return o.ApplyT(func(v GetFleetsResult) []GetFleetsFleetCollection { return v.FleetCollections }).(GetFleetsFleetCollectionArrayOutput)
}

// Type of the Fleet. PRODUCT - A fleet of product-specific resources for a product type. ENVIRONMENT - A fleet of environment-specific resources for a product stack. GROUP - A fleet of a fleet of either environment or product fleets. GENERIC - A fleet of resources selected dynamically or manually for reporting purposes
func (o GetFleetsResultOutput) FleetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetsResult) *string { return v.FleetType }).(pulumi.StringPtrOutput)
}

// The OCID of the resource.
func (o GetFleetsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetFleetsResultOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetsResult) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The lifecycle state of the Fleet.
func (o GetFleetsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFleetsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFleetsResultOutput{})
}
