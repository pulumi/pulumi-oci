// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Inventory Resources in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Returns a list of InventoryResources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetInventoryResources(ctx, &fleetappsmanagement.GetInventoryResourcesArgs{
//				CompartmentId:         compartmentId,
//				ResourceCompartmentId: testCompartment.Id,
//				DefinedTagEquals:      inventoryResourceDefinedTagEquals,
//				DisplayName:           pulumi.StringRef(inventoryResourceDisplayName),
//				FreeformTagEquals:     inventoryResourceFreeformTagEquals,
//				InventoryProperties:   inventoryResourceInventoryProperties,
//				MatchingCriteria:      pulumi.StringRef(inventoryResourceMatchingCriteria),
//				ResourceRegion:        pulumi.StringRef(inventoryResourceResourceRegion),
//				State:                 pulumi.StringRef(inventoryResourceState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInventoryResources(ctx *pulumi.Context, args *GetInventoryResourcesArgs, opts ...pulumi.InvokeOption) (*GetInventoryResourcesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInventoryResourcesResult
	err := ctx.Invoke("oci:FleetAppsManagement/getInventoryResources:getInventoryResources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInventoryResources.
type GetInventoryResourcesArgs struct {
	// A filter to return only resources whose base Compartment ID(TenancyId) matches the given base Compartment ID.
	CompartmentId string `pulumi:"compartmentId"`
	// A list of tag filters to apply.  Only resources with a defined tag matching the value will be returned. Each item in the list has the format "{namespace}.{tagName}={value}".  All inputs are case-insensitive. Multiple values for the same key (i.e. same namespace and tag name) are interpreted as "OR". Values for different keys (i.e. different namespaces, different tag names, or both) are interpreted as "AND". Example: Identification.Development=Yes
	DefinedTagEquals []string `pulumi:"definedTagEquals"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                       `pulumi:"displayName"`
	Filters     []GetInventoryResourcesFilter `pulumi:"filters"`
	// A list of tag filters to apply.  Only resources with a freeform tag matching the value will be returned. The key for each tag is "{tagName}.{value}".  All inputs are case-insensitive. Multiple values for the same tag name are interpreted as "OR".  Values for different tag names are interpreted as "AND".
	FreeformTagEquals []string `pulumi:"freeformTagEquals"`
	// A list of inventory properties filters to apply. The key for each inventory property and value for each resource type is "{resourceType}.{inventoryProperty}={value}". Example: Instance.displayName=TEST_INSTANCE
	InventoryProperties []string `pulumi:"inventoryProperties"`
	// Fetch resources matching ANY or ALL criteria passed as params in "tags" and "inventoryProperties". Example: matchingCriteria=ANY
	MatchingCriteria *string `pulumi:"matchingCriteria"`
	// A filter to return only resources whose resource Compartment ID matches the given resource Compartment ID.
	ResourceCompartmentId string `pulumi:"resourceCompartmentId"`
	// Resource Region
	ResourceRegion *string `pulumi:"resourceRegion"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getInventoryResources.
type GetInventoryResourcesResult struct {
	// OCID of the compartment to which the resource belongs to.
	CompartmentId    string   `pulumi:"compartmentId"`
	DefinedTagEquals []string `pulumi:"definedTagEquals"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName       *string                       `pulumi:"displayName"`
	Filters           []GetInventoryResourcesFilter `pulumi:"filters"`
	FreeformTagEquals []string                      `pulumi:"freeformTagEquals"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string   `pulumi:"id"`
	InventoryProperties []string `pulumi:"inventoryProperties"`
	// The list of inventory_resource_collection.
	InventoryResourceCollections []GetInventoryResourcesInventoryResourceCollection `pulumi:"inventoryResourceCollections"`
	MatchingCriteria             *string                                            `pulumi:"matchingCriteria"`
	// Compartment Id of the resource.
	ResourceCompartmentId string `pulumi:"resourceCompartmentId"`
	// The region the resource belongs to.
	ResourceRegion *string `pulumi:"resourceRegion"`
	// The current state of the Resource.
	State *string `pulumi:"state"`
}

func GetInventoryResourcesOutput(ctx *pulumi.Context, args GetInventoryResourcesOutputArgs, opts ...pulumi.InvokeOption) GetInventoryResourcesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetInventoryResourcesResultOutput, error) {
			args := v.(GetInventoryResourcesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getInventoryResources:getInventoryResources", args, GetInventoryResourcesResultOutput{}, options).(GetInventoryResourcesResultOutput), nil
		}).(GetInventoryResourcesResultOutput)
}

// A collection of arguments for invoking getInventoryResources.
type GetInventoryResourcesOutputArgs struct {
	// A filter to return only resources whose base Compartment ID(TenancyId) matches the given base Compartment ID.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// A list of tag filters to apply.  Only resources with a defined tag matching the value will be returned. Each item in the list has the format "{namespace}.{tagName}={value}".  All inputs are case-insensitive. Multiple values for the same key (i.e. same namespace and tag name) are interpreted as "OR". Values for different keys (i.e. different namespaces, different tag names, or both) are interpreted as "AND". Example: Identification.Development=Yes
	DefinedTagEquals pulumi.StringArrayInput `pulumi:"definedTagEquals"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                 `pulumi:"displayName"`
	Filters     GetInventoryResourcesFilterArrayInput `pulumi:"filters"`
	// A list of tag filters to apply.  Only resources with a freeform tag matching the value will be returned. The key for each tag is "{tagName}.{value}".  All inputs are case-insensitive. Multiple values for the same tag name are interpreted as "OR".  Values for different tag names are interpreted as "AND".
	FreeformTagEquals pulumi.StringArrayInput `pulumi:"freeformTagEquals"`
	// A list of inventory properties filters to apply. The key for each inventory property and value for each resource type is "{resourceType}.{inventoryProperty}={value}". Example: Instance.displayName=TEST_INSTANCE
	InventoryProperties pulumi.StringArrayInput `pulumi:"inventoryProperties"`
	// Fetch resources matching ANY or ALL criteria passed as params in "tags" and "inventoryProperties". Example: matchingCriteria=ANY
	MatchingCriteria pulumi.StringPtrInput `pulumi:"matchingCriteria"`
	// A filter to return only resources whose resource Compartment ID matches the given resource Compartment ID.
	ResourceCompartmentId pulumi.StringInput `pulumi:"resourceCompartmentId"`
	// Resource Region
	ResourceRegion pulumi.StringPtrInput `pulumi:"resourceRegion"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetInventoryResourcesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryResourcesArgs)(nil)).Elem()
}

// A collection of values returned by getInventoryResources.
type GetInventoryResourcesResultOutput struct{ *pulumi.OutputState }

func (GetInventoryResourcesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInventoryResourcesResult)(nil)).Elem()
}

func (o GetInventoryResourcesResultOutput) ToGetInventoryResourcesResultOutput() GetInventoryResourcesResultOutput {
	return o
}

func (o GetInventoryResourcesResultOutput) ToGetInventoryResourcesResultOutputWithContext(ctx context.Context) GetInventoryResourcesResultOutput {
	return o
}

// OCID of the compartment to which the resource belongs to.
func (o GetInventoryResourcesResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

func (o GetInventoryResourcesResultOutput) DefinedTagEquals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) []string { return v.DefinedTagEquals }).(pulumi.StringArrayOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetInventoryResourcesResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetInventoryResourcesResultOutput) Filters() GetInventoryResourcesFilterArrayOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) []GetInventoryResourcesFilter { return v.Filters }).(GetInventoryResourcesFilterArrayOutput)
}

func (o GetInventoryResourcesResultOutput) FreeformTagEquals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) []string { return v.FreeformTagEquals }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInventoryResourcesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInventoryResourcesResultOutput) InventoryProperties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) []string { return v.InventoryProperties }).(pulumi.StringArrayOutput)
}

// The list of inventory_resource_collection.
func (o GetInventoryResourcesResultOutput) InventoryResourceCollections() GetInventoryResourcesInventoryResourceCollectionArrayOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) []GetInventoryResourcesInventoryResourceCollection {
		return v.InventoryResourceCollections
	}).(GetInventoryResourcesInventoryResourceCollectionArrayOutput)
}

func (o GetInventoryResourcesResultOutput) MatchingCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) *string { return v.MatchingCriteria }).(pulumi.StringPtrOutput)
}

// Compartment Id of the resource.
func (o GetInventoryResourcesResultOutput) ResourceCompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) string { return v.ResourceCompartmentId }).(pulumi.StringOutput)
}

// The region the resource belongs to.
func (o GetInventoryResourcesResultOutput) ResourceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) *string { return v.ResourceRegion }).(pulumi.StringPtrOutput)
}

// The current state of the Resource.
func (o GetInventoryResourcesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInventoryResourcesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInventoryResourcesResultOutput{})
}
