// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Managed Entity Counts in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Retrieve  aggregated summary information of Managed entities within a Compartment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetManagedEntityCounts(ctx, &fleetappsmanagement.GetManagedEntityCountsArgs{
//				CompartmentId:          pulumi.StringRef(compartmentId),
//				CompartmentIdInSubtree: pulumi.BoolRef(managedEntityCountCompartmentIdInSubtree),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagedEntityCounts(ctx *pulumi.Context, args *GetManagedEntityCountsArgs, opts ...pulumi.InvokeOption) (*GetManagedEntityCountsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedEntityCountsResult
	err := ctx.Invoke("oci:FleetAppsManagement/getManagedEntityCounts:getManagedEntityCounts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedEntityCounts.
type GetManagedEntityCountsArgs struct {
	// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
	CompartmentId *string `pulumi:"compartmentId"`
	// If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
	CompartmentIdInSubtree *bool                          `pulumi:"compartmentIdInSubtree"`
	Filters                []GetManagedEntityCountsFilter `pulumi:"filters"`
}

// A collection of values returned by getManagedEntityCounts.
type GetManagedEntityCountsResult struct {
	CompartmentId          *string                        `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool                          `pulumi:"compartmentIdInSubtree"`
	Filters                []GetManagedEntityCountsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of managed_entity_aggregation_collection.
	ManagedEntityAggregationCollections []GetManagedEntityCountsManagedEntityAggregationCollection `pulumi:"managedEntityAggregationCollections"`
}

func GetManagedEntityCountsOutput(ctx *pulumi.Context, args GetManagedEntityCountsOutputArgs, opts ...pulumi.InvokeOption) GetManagedEntityCountsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedEntityCountsResultOutput, error) {
			args := v.(GetManagedEntityCountsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getManagedEntityCounts:getManagedEntityCounts", args, GetManagedEntityCountsResultOutput{}, options).(GetManagedEntityCountsResultOutput), nil
		}).(GetManagedEntityCountsResultOutput)
}

// A collection of arguments for invoking getManagedEntityCounts.
type GetManagedEntityCountsOutputArgs struct {
	// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
	CompartmentIdInSubtree pulumi.BoolPtrInput                    `pulumi:"compartmentIdInSubtree"`
	Filters                GetManagedEntityCountsFilterArrayInput `pulumi:"filters"`
}

func (GetManagedEntityCountsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedEntityCountsArgs)(nil)).Elem()
}

// A collection of values returned by getManagedEntityCounts.
type GetManagedEntityCountsResultOutput struct{ *pulumi.OutputState }

func (GetManagedEntityCountsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedEntityCountsResult)(nil)).Elem()
}

func (o GetManagedEntityCountsResultOutput) ToGetManagedEntityCountsResultOutput() GetManagedEntityCountsResultOutput {
	return o
}

func (o GetManagedEntityCountsResultOutput) ToGetManagedEntityCountsResultOutputWithContext(ctx context.Context) GetManagedEntityCountsResultOutput {
	return o
}

func (o GetManagedEntityCountsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedEntityCountsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetManagedEntityCountsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetManagedEntityCountsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

func (o GetManagedEntityCountsResultOutput) Filters() GetManagedEntityCountsFilterArrayOutput {
	return o.ApplyT(func(v GetManagedEntityCountsResult) []GetManagedEntityCountsFilter { return v.Filters }).(GetManagedEntityCountsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedEntityCountsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedEntityCountsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of managed_entity_aggregation_collection.
func (o GetManagedEntityCountsResultOutput) ManagedEntityAggregationCollections() GetManagedEntityCountsManagedEntityAggregationCollectionArrayOutput {
	return o.ApplyT(func(v GetManagedEntityCountsResult) []GetManagedEntityCountsManagedEntityAggregationCollection {
		return v.ManagedEntityAggregationCollections
	}).(GetManagedEntityCountsManagedEntityAggregationCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedEntityCountsResultOutput{})
}
