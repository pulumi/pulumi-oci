// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Patch resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// # Gets a Patch by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.GetPatch(ctx, &fleetappsmanagement.GetPatchArgs{
//				PatchId: testPatchOciFleetAppsManagementPatch.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPatch(ctx *pulumi.Context, args *LookupPatchArgs, opts ...pulumi.InvokeOption) (*LookupPatchResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPatchResult
	err := ctx.Invoke("oci:FleetAppsManagement/getPatch:getPatch", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPatch.
type LookupPatchArgs struct {
	// unique Patch identifier
	PatchId string `pulumi:"patchId"`
}

// A collection of values returned by getPatch.
type LookupPatchResult struct {
	// Patch artifact description and content details.
	ArtifactDetails []GetPatchArtifactDetail `pulumi:"artifactDetails"`
	CompartmentId   string                   `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// Dependent Patches for this patch.
	DependentPatches []GetPatchDependentPatch `pulumi:"dependentPatches"`
	// A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
	Description string `pulumi:"description"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the resource.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
	Name    string `pulumi:"name"`
	PatchId string `pulumi:"patchId"`
	// Patch Type
	PatchTypes []GetPatchPatchType `pulumi:"patchTypes"`
	// Product
	Products []GetPatchProduct `pulumi:"products"`
	// Associated region
	ResourceRegion string `pulumi:"resourceRegion"`
	// Patch Severity.
	Severity string `pulumi:"severity"`
	// The current state of the Patch.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// Date when the patch was released.
	TimeReleased string `pulumi:"timeReleased"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
	Type string `pulumi:"type"`
}

func LookupPatchOutput(ctx *pulumi.Context, args LookupPatchOutputArgs, opts ...pulumi.InvokeOption) LookupPatchResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPatchResultOutput, error) {
			args := v.(LookupPatchArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getPatch:getPatch", args, LookupPatchResultOutput{}, options).(LookupPatchResultOutput), nil
		}).(LookupPatchResultOutput)
}

// A collection of arguments for invoking getPatch.
type LookupPatchOutputArgs struct {
	// unique Patch identifier
	PatchId pulumi.StringInput `pulumi:"patchId"`
}

func (LookupPatchOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPatchArgs)(nil)).Elem()
}

// A collection of values returned by getPatch.
type LookupPatchResultOutput struct{ *pulumi.OutputState }

func (LookupPatchResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPatchResult)(nil)).Elem()
}

func (o LookupPatchResultOutput) ToLookupPatchResultOutput() LookupPatchResultOutput {
	return o
}

func (o LookupPatchResultOutput) ToLookupPatchResultOutputWithContext(ctx context.Context) LookupPatchResultOutput {
	return o
}

// Patch artifact description and content details.
func (o LookupPatchResultOutput) ArtifactDetails() GetPatchArtifactDetailArrayOutput {
	return o.ApplyT(func(v LookupPatchResult) []GetPatchArtifactDetail { return v.ArtifactDetails }).(GetPatchArtifactDetailArrayOutput)
}

func (o LookupPatchResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupPatchResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPatchResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// Dependent Patches for this patch.
func (o LookupPatchResultOutput) DependentPatches() GetPatchDependentPatchArrayOutput {
	return o.ApplyT(func(v LookupPatchResult) []GetPatchDependentPatch { return v.DependentPatches }).(GetPatchDependentPatchArrayOutput)
}

// A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
func (o LookupPatchResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.Description }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupPatchResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPatchResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the resource.
func (o LookupPatchResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupPatchResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
func (o LookupPatchResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupPatchResultOutput) PatchId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.PatchId }).(pulumi.StringOutput)
}

// Patch Type
func (o LookupPatchResultOutput) PatchTypes() GetPatchPatchTypeArrayOutput {
	return o.ApplyT(func(v LookupPatchResult) []GetPatchPatchType { return v.PatchTypes }).(GetPatchPatchTypeArrayOutput)
}

// Product
func (o LookupPatchResultOutput) Products() GetPatchProductArrayOutput {
	return o.ApplyT(func(v LookupPatchResult) []GetPatchProduct { return v.Products }).(GetPatchProductArrayOutput)
}

// Associated region
func (o LookupPatchResultOutput) ResourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.ResourceRegion }).(pulumi.StringOutput)
}

// Patch Severity.
func (o LookupPatchResultOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.Severity }).(pulumi.StringOutput)
}

// The current state of the Patch.
func (o LookupPatchResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupPatchResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPatchResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o LookupPatchResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Date when the patch was released.
func (o LookupPatchResultOutput) TimeReleased() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.TimeReleased }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o LookupPatchResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
func (o LookupPatchResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPatchResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPatchResultOutput{})
}
