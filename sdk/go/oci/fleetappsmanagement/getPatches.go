// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Patches in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Returns a list of Patches.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.GetPatches(ctx, &fleetappsmanagement.GetPatchesArgs{
//				CompartmentId:                        pulumi.StringRef(compartmentId),
//				Id:                                   pulumi.StringRef(patchId),
//				Name:                                 pulumi.StringRef(patchName),
//				PatchTypeId:                          pulumi.StringRef(testPatchType.Id),
//				ProductId:                            pulumi.StringRef(testProduct.Id),
//				ShouldCompliancePolicyRulesBeApplied: pulumi.BoolRef(patchShouldCompliancePolicyRulesBeApplied),
//				State:                                pulumi.StringRef(patchState),
//				TimeReleasedGreaterThanOrEqualTo:     pulumi.StringRef(patchTimeReleasedGreaterThanOrEqualTo),
//				TimeReleasedLessThan:                 pulumi.StringRef(patchTimeReleasedLessThan),
//				Type:                                 pulumi.StringRef(patchType),
//				Version:                              pulumi.StringRef(patchVersion),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPatches(ctx *pulumi.Context, args *GetPatchesArgs, opts ...pulumi.InvokeOption) (*GetPatchesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPatchesResult
	err := ctx.Invoke("oci:FleetAppsManagement/getPatches:getPatches", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPatches.
type GetPatchesArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string            `pulumi:"compartmentId"`
	Filters       []GetPatchesFilter `pulumi:"filters"`
	// unique Patch identifier
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the entire name given.
	Name *string `pulumi:"name"`
	// Patch Type platformConfigurationId associated with the Patch.
	PatchTypeId *string `pulumi:"patchTypeId"`
	// Product platformConfigurationId associated with the Patch.
	ProductId *string `pulumi:"productId"`
	// Filter patch based on compliance policy rules for the Product
	ShouldCompliancePolicyRulesBeApplied *bool `pulumi:"shouldCompliancePolicyRulesBeApplied"`
	// The current state of the Patch.
	State *string `pulumi:"state"`
	// Patch Released Date
	TimeReleasedGreaterThanOrEqualTo *string `pulumi:"timeReleasedGreaterThanOrEqualTo"`
	// Patch Released Date
	TimeReleasedLessThan *string `pulumi:"timeReleasedLessThan"`
	// DefinedBy type.
	Type *string `pulumi:"type"`
	// Product version
	Version *string `pulumi:"version"`
}

// A collection of values returned by getPatches.
type GetPatchesResult struct {
	CompartmentId *string            `pulumi:"compartmentId"`
	Filters       []GetPatchesFilter `pulumi:"filters"`
	// The OCID of the resource.
	Id *string `pulumi:"id"`
	// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
	Name *string `pulumi:"name"`
	// The list of patch_collection.
	PatchCollections                     []GetPatchesPatchCollection `pulumi:"patchCollections"`
	PatchTypeId                          *string                     `pulumi:"patchTypeId"`
	ProductId                            *string                     `pulumi:"productId"`
	ShouldCompliancePolicyRulesBeApplied *bool                       `pulumi:"shouldCompliancePolicyRulesBeApplied"`
	// The current state of the Patch.
	State                            *string `pulumi:"state"`
	TimeReleasedGreaterThanOrEqualTo *string `pulumi:"timeReleasedGreaterThanOrEqualTo"`
	TimeReleasedLessThan             *string `pulumi:"timeReleasedLessThan"`
	// Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
	Type *string `pulumi:"type"`
	// product version.
	Version *string `pulumi:"version"`
}

func GetPatchesOutput(ctx *pulumi.Context, args GetPatchesOutputArgs, opts ...pulumi.InvokeOption) GetPatchesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPatchesResultOutput, error) {
			args := v.(GetPatchesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetPatchesResult
			secret, err := ctx.InvokePackageRaw("oci:FleetAppsManagement/getPatches:getPatches", args, &rv, "", opts...)
			if err != nil {
				return GetPatchesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetPatchesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetPatchesResultOutput), nil
			}
			return output, nil
		}).(GetPatchesResultOutput)
}

// A collection of arguments for invoking getPatches.
type GetPatchesOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput      `pulumi:"compartmentId"`
	Filters       GetPatchesFilterArrayInput `pulumi:"filters"`
	// unique Patch identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the entire name given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Patch Type platformConfigurationId associated with the Patch.
	PatchTypeId pulumi.StringPtrInput `pulumi:"patchTypeId"`
	// Product platformConfigurationId associated with the Patch.
	ProductId pulumi.StringPtrInput `pulumi:"productId"`
	// Filter patch based on compliance policy rules for the Product
	ShouldCompliancePolicyRulesBeApplied pulumi.BoolPtrInput `pulumi:"shouldCompliancePolicyRulesBeApplied"`
	// The current state of the Patch.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Patch Released Date
	TimeReleasedGreaterThanOrEqualTo pulumi.StringPtrInput `pulumi:"timeReleasedGreaterThanOrEqualTo"`
	// Patch Released Date
	TimeReleasedLessThan pulumi.StringPtrInput `pulumi:"timeReleasedLessThan"`
	// DefinedBy type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Product version
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetPatchesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchesArgs)(nil)).Elem()
}

// A collection of values returned by getPatches.
type GetPatchesResultOutput struct{ *pulumi.OutputState }

func (GetPatchesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchesResult)(nil)).Elem()
}

func (o GetPatchesResultOutput) ToGetPatchesResultOutput() GetPatchesResultOutput {
	return o
}

func (o GetPatchesResultOutput) ToGetPatchesResultOutputWithContext(ctx context.Context) GetPatchesResultOutput {
	return o
}

func (o GetPatchesResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchesResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetPatchesResultOutput) Filters() GetPatchesFilterArrayOutput {
	return o.ApplyT(func(v GetPatchesResult) []GetPatchesFilter { return v.Filters }).(GetPatchesFilterArrayOutput)
}

// The OCID of the resource.
func (o GetPatchesResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchesResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
func (o GetPatchesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of patch_collection.
func (o GetPatchesResultOutput) PatchCollections() GetPatchesPatchCollectionArrayOutput {
	return o.ApplyT(func(v GetPatchesResult) []GetPatchesPatchCollection { return v.PatchCollections }).(GetPatchesPatchCollectionArrayOutput)
}

func (o GetPatchesResultOutput) PatchTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchesResult) *string { return v.PatchTypeId }).(pulumi.StringPtrOutput)
}

func (o GetPatchesResultOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchesResult) *string { return v.ProductId }).(pulumi.StringPtrOutput)
}

func (o GetPatchesResultOutput) ShouldCompliancePolicyRulesBeApplied() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPatchesResult) *bool { return v.ShouldCompliancePolicyRulesBeApplied }).(pulumi.BoolPtrOutput)
}

// The current state of the Patch.
func (o GetPatchesResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchesResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o GetPatchesResultOutput) TimeReleasedGreaterThanOrEqualTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchesResult) *string { return v.TimeReleasedGreaterThanOrEqualTo }).(pulumi.StringPtrOutput)
}

func (o GetPatchesResultOutput) TimeReleasedLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchesResult) *string { return v.TimeReleasedLessThan }).(pulumi.StringPtrOutput)
}

// Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
func (o GetPatchesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// product version.
func (o GetPatchesResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPatchesResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPatchesResultOutput{})
}
