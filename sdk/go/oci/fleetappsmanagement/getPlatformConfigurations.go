// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Platform Configurations in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Returns a list of all the Platform Configurations in the specified compartment.
// The query parameter `compartmentId` is required unless the query parameter `id` is specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetPlatformConfigurations(ctx, &fleetappsmanagement.GetPlatformConfigurationsArgs{
//				CompartmentId:          pulumi.StringRef(compartmentId),
//				CompartmentIdInSubtree: pulumi.BoolRef(platformConfigurationCompartmentIdInSubtree),
//				ConfigCategory:         pulumi.StringRef(platformConfigurationConfigCategory),
//				DisplayName:            pulumi.StringRef(platformConfigurationDisplayName),
//				Id:                     pulumi.StringRef(platformConfigurationId),
//				State:                  pulumi.StringRef(platformConfigurationState),
//				Type:                   pulumi.StringRef(platformConfigurationType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPlatformConfigurations(ctx *pulumi.Context, args *GetPlatformConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetPlatformConfigurationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPlatformConfigurationsResult
	err := ctx.Invoke("oci:FleetAppsManagement/getPlatformConfigurations:getPlatformConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlatformConfigurations.
type GetPlatformConfigurationsArgs struct {
	// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
	CompartmentId *string `pulumi:"compartmentId"`
	// If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
	CompartmentIdInSubtree *bool `pulumi:"compartmentIdInSubtree"`
	// Config Category
	ConfigCategory *string `pulumi:"configCategory"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetPlatformConfigurationsFilter `pulumi:"filters"`
	// Unique identifier or OCID for listing a single Platform Configuration by id. Either compartmentId or id must be provided.
	Id *string `pulumi:"id"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
	// A filter to return Platform Configurations whose type matches the given type.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getPlatformConfigurations.
type GetPlatformConfigurationsResult struct {
	// Compartment OCID
	CompartmentId          *string `pulumi:"compartmentId"`
	CompartmentIdInSubtree *bool   `pulumi:"compartmentIdInSubtree"`
	// Category of configuration
	ConfigCategory *string `pulumi:"configCategory"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetPlatformConfigurationsFilter `pulumi:"filters"`
	// The OCID of the resource.
	Id *string `pulumi:"id"`
	// The list of platform_configuration_collection.
	PlatformConfigurationCollections []GetPlatformConfigurationsPlatformConfigurationCollection `pulumi:"platformConfigurationCollections"`
	// The current state of the PlatformConfiguration.
	State *string `pulumi:"state"`
	// The type of the configuration.
	Type *string `pulumi:"type"`
}

func GetPlatformConfigurationsOutput(ctx *pulumi.Context, args GetPlatformConfigurationsOutputArgs, opts ...pulumi.InvokeOption) GetPlatformConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPlatformConfigurationsResultOutput, error) {
			args := v.(GetPlatformConfigurationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getPlatformConfigurations:getPlatformConfigurations", args, GetPlatformConfigurationsResultOutput{}, options).(GetPlatformConfigurationsResultOutput), nil
		}).(GetPlatformConfigurationsResultOutput)
}

// A collection of arguments for invoking getPlatformConfigurations.
type GetPlatformConfigurationsOutputArgs struct {
	// The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
	CompartmentIdInSubtree pulumi.BoolPtrInput `pulumi:"compartmentIdInSubtree"`
	// Config Category
	ConfigCategory pulumi.StringPtrInput `pulumi:"configCategory"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                     `pulumi:"displayName"`
	Filters     GetPlatformConfigurationsFilterArrayInput `pulumi:"filters"`
	// Unique identifier or OCID for listing a single Platform Configuration by id. Either compartmentId or id must be provided.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A filter to return Platform Configurations whose type matches the given type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetPlatformConfigurationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlatformConfigurationsArgs)(nil)).Elem()
}

// A collection of values returned by getPlatformConfigurations.
type GetPlatformConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetPlatformConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlatformConfigurationsResult)(nil)).Elem()
}

func (o GetPlatformConfigurationsResultOutput) ToGetPlatformConfigurationsResultOutput() GetPlatformConfigurationsResultOutput {
	return o
}

func (o GetPlatformConfigurationsResultOutput) ToGetPlatformConfigurationsResultOutputWithContext(ctx context.Context) GetPlatformConfigurationsResultOutput {
	return o
}

// Compartment OCID
func (o GetPlatformConfigurationsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

func (o GetPlatformConfigurationsResultOutput) CompartmentIdInSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *bool { return v.CompartmentIdInSubtree }).(pulumi.BoolPtrOutput)
}

// Category of configuration
func (o GetPlatformConfigurationsResultOutput) ConfigCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *string { return v.ConfigCategory }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetPlatformConfigurationsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetPlatformConfigurationsResultOutput) Filters() GetPlatformConfigurationsFilterArrayOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) []GetPlatformConfigurationsFilter { return v.Filters }).(GetPlatformConfigurationsFilterArrayOutput)
}

// The OCID of the resource.
func (o GetPlatformConfigurationsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of platform_configuration_collection.
func (o GetPlatformConfigurationsResultOutput) PlatformConfigurationCollections() GetPlatformConfigurationsPlatformConfigurationCollectionArrayOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) []GetPlatformConfigurationsPlatformConfigurationCollection {
		return v.PlatformConfigurationCollections
	}).(GetPlatformConfigurationsPlatformConfigurationCollectionArrayOutput)
}

// The current state of the PlatformConfiguration.
func (o GetPlatformConfigurationsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The type of the configuration.
func (o GetPlatformConfigurationsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPlatformConfigurationsResultOutput{})
}
