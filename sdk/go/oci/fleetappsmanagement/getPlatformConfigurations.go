// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Platform Configurations in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Returns a list of PlatformConfiguration for Tenancy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/FleetAppsManagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FleetAppsManagement.GetPlatformConfigurations(ctx, &fleetappsmanagement.GetPlatformConfigurationsArgs{
//				CompartmentId:  pulumi.StringRef(compartmentId),
//				ConfigCategory: pulumi.StringRef(platformConfigurationConfigCategory),
//				DisplayName:    pulumi.StringRef(platformConfigurationDisplayName),
//				Id:             pulumi.StringRef(platformConfigurationId),
//				State:          pulumi.StringRef(platformConfigurationState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPlatformConfigurations(ctx *pulumi.Context, args *GetPlatformConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetPlatformConfigurationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPlatformConfigurationsResult
	err := ctx.Invoke("oci:FleetAppsManagement/getPlatformConfigurations:getPlatformConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlatformConfigurations.
type GetPlatformConfigurationsArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId *string `pulumi:"compartmentId"`
	// Config Category
	ConfigCategory *string `pulumi:"configCategory"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetPlatformConfigurationsFilter `pulumi:"filters"`
	// unique PlatformConfiguration identifier
	Id *string `pulumi:"id"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State *string `pulumi:"state"`
}

// A collection of values returned by getPlatformConfigurations.
type GetPlatformConfigurationsResult struct {
	// Tenancy OCID
	CompartmentId *string `pulumi:"compartmentId"`
	// Category of configuration
	ConfigCategory *string `pulumi:"configCategory"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName *string                           `pulumi:"displayName"`
	Filters     []GetPlatformConfigurationsFilter `pulumi:"filters"`
	// The OCID of the resource.
	Id *string `pulumi:"id"`
	// The list of platform_configuration_collection.
	PlatformConfigurationCollections []GetPlatformConfigurationsPlatformConfigurationCollection `pulumi:"platformConfigurationCollections"`
	// The current state of the PlatformConfiguration.
	State *string `pulumi:"state"`
}

func GetPlatformConfigurationsOutput(ctx *pulumi.Context, args GetPlatformConfigurationsOutputArgs, opts ...pulumi.InvokeOption) GetPlatformConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPlatformConfigurationsResultOutput, error) {
			args := v.(GetPlatformConfigurationsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetPlatformConfigurationsResult
			secret, err := ctx.InvokePackageRaw("oci:FleetAppsManagement/getPlatformConfigurations:getPlatformConfigurations", args, &rv, "", opts...)
			if err != nil {
				return GetPlatformConfigurationsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetPlatformConfigurationsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetPlatformConfigurationsResultOutput), nil
			}
			return output, nil
		}).(GetPlatformConfigurationsResultOutput)
}

// A collection of arguments for invoking getPlatformConfigurations.
type GetPlatformConfigurationsOutputArgs struct {
	// The ID of the compartment in which to list resources.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// Config Category
	ConfigCategory pulumi.StringPtrInput `pulumi:"configCategory"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput                     `pulumi:"displayName"`
	Filters     GetPlatformConfigurationsFilterArrayInput `pulumi:"filters"`
	// unique PlatformConfiguration identifier
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources their lifecycleState matches the given lifecycleState.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetPlatformConfigurationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlatformConfigurationsArgs)(nil)).Elem()
}

// A collection of values returned by getPlatformConfigurations.
type GetPlatformConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetPlatformConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlatformConfigurationsResult)(nil)).Elem()
}

func (o GetPlatformConfigurationsResultOutput) ToGetPlatformConfigurationsResultOutput() GetPlatformConfigurationsResultOutput {
	return o
}

func (o GetPlatformConfigurationsResultOutput) ToGetPlatformConfigurationsResultOutputWithContext(ctx context.Context) GetPlatformConfigurationsResultOutput {
	return o
}

// Tenancy OCID
func (o GetPlatformConfigurationsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// Category of configuration
func (o GetPlatformConfigurationsResultOutput) ConfigCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *string { return v.ConfigCategory }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o GetPlatformConfigurationsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetPlatformConfigurationsResultOutput) Filters() GetPlatformConfigurationsFilterArrayOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) []GetPlatformConfigurationsFilter { return v.Filters }).(GetPlatformConfigurationsFilterArrayOutput)
}

// The OCID of the resource.
func (o GetPlatformConfigurationsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of platform_configuration_collection.
func (o GetPlatformConfigurationsResultOutput) PlatformConfigurationCollections() GetPlatformConfigurationsPlatformConfigurationCollectionArrayOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) []GetPlatformConfigurationsPlatformConfigurationCollection {
		return v.PlatformConfigurationCollections
	}).(GetPlatformConfigurationsPlatformConfigurationCollectionArrayOutput)
}

// The current state of the PlatformConfiguration.
func (o GetPlatformConfigurationsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlatformConfigurationsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPlatformConfigurationsResultOutput{})
}
