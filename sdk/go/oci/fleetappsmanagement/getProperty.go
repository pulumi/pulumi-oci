// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides details about a specific Property resource in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// # Gets a Property by identifier
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v2/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetProperty(ctx, &fleetappsmanagement.GetPropertyArgs{
//				PropertyId: testPropertyOciFleetAppsManagementProperty.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupProperty(ctx *pulumi.Context, args *LookupPropertyArgs, opts ...pulumi.InvokeOption) (*LookupPropertyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPropertyResult
	err := ctx.Invoke("oci:FleetAppsManagement/getProperty:getProperty", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProperty.
type LookupPropertyArgs struct {
	// unique Property identifier
	PropertyId string `pulumi:"propertyId"`
}

// A collection of values returned by getProperty.
type LookupPropertyResult struct {
	// Tenancy OCID
	CompartmentId string `pulumi:"compartmentId"`
	// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
	DefinedTags map[string]string `pulumi:"definedTags"`
	// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
	DisplayName string `pulumi:"displayName"`
	// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
	FreeformTags map[string]string `pulumi:"freeformTags"`
	// The OCID of the resource.
	Id string `pulumi:"id"`
	// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	PropertyId       string `pulumi:"propertyId"`
	// Associated region
	ResourceRegion string `pulumi:"resourceRegion"`
	// The scope of the property.
	Scope string `pulumi:"scope"`
	// Text selection of the property.
	Selection string `pulumi:"selection"`
	// The current state of the Property.
	State string `pulumi:"state"`
	// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
	SystemTags map[string]string `pulumi:"systemTags"`
	// The time this resource was created. An RFC3339 formatted datetime string.
	TimeCreated string `pulumi:"timeCreated"`
	// The time this resource was last updated. An RFC3339 formatted datetime string.
	TimeUpdated string `pulumi:"timeUpdated"`
	// The type of the property.
	Type string `pulumi:"type"`
	// Format of the value.
	ValueType string `pulumi:"valueType"`
	// Values of the property (must be a single value if selection = 'SINGLE_CHOICE').
	Values []string `pulumi:"values"`
}

func LookupPropertyOutput(ctx *pulumi.Context, args LookupPropertyOutputArgs, opts ...pulumi.InvokeOption) LookupPropertyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPropertyResultOutput, error) {
			args := v.(LookupPropertyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getProperty:getProperty", args, LookupPropertyResultOutput{}, options).(LookupPropertyResultOutput), nil
		}).(LookupPropertyResultOutput)
}

// A collection of arguments for invoking getProperty.
type LookupPropertyOutputArgs struct {
	// unique Property identifier
	PropertyId pulumi.StringInput `pulumi:"propertyId"`
}

func (LookupPropertyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPropertyArgs)(nil)).Elem()
}

// A collection of values returned by getProperty.
type LookupPropertyResultOutput struct{ *pulumi.OutputState }

func (LookupPropertyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPropertyResult)(nil)).Elem()
}

func (o LookupPropertyResultOutput) ToLookupPropertyResultOutput() LookupPropertyResultOutput {
	return o
}

func (o LookupPropertyResultOutput) ToLookupPropertyResultOutputWithContext(ctx context.Context) LookupPropertyResultOutput {
	return o
}

// Tenancy OCID
func (o LookupPropertyResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
func (o LookupPropertyResultOutput) DefinedTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPropertyResult) map[string]string { return v.DefinedTags }).(pulumi.StringMapOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
func (o LookupPropertyResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
func (o LookupPropertyResultOutput) FreeformTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPropertyResult) map[string]string { return v.FreeformTags }).(pulumi.StringMapOutput)
}

// The OCID of the resource.
func (o LookupPropertyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.Id }).(pulumi.StringOutput)
}

// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
func (o LookupPropertyResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

func (o LookupPropertyResultOutput) PropertyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.PropertyId }).(pulumi.StringOutput)
}

// Associated region
func (o LookupPropertyResultOutput) ResourceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.ResourceRegion }).(pulumi.StringOutput)
}

// The scope of the property.
func (o LookupPropertyResultOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.Scope }).(pulumi.StringOutput)
}

// Text selection of the property.
func (o LookupPropertyResultOutput) Selection() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.Selection }).(pulumi.StringOutput)
}

// The current state of the Property.
func (o LookupPropertyResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.State }).(pulumi.StringOutput)
}

// System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
func (o LookupPropertyResultOutput) SystemTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPropertyResult) map[string]string { return v.SystemTags }).(pulumi.StringMapOutput)
}

// The time this resource was created. An RFC3339 formatted datetime string.
func (o LookupPropertyResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time this resource was last updated. An RFC3339 formatted datetime string.
func (o LookupPropertyResultOutput) TimeUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.TimeUpdated }).(pulumi.StringOutput)
}

// The type of the property.
func (o LookupPropertyResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.Type }).(pulumi.StringOutput)
}

// Format of the value.
func (o LookupPropertyResultOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.ValueType }).(pulumi.StringOutput)
}

// Values of the property (must be a single value if selection = 'SINGLE_CHOICE').
func (o LookupPropertyResultOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPropertyResult) []string { return v.Values }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPropertyResultOutput{})
}
