// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fleetappsmanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the list of Provisions in Oracle Cloud Infrastructure Fleet Apps Management service.
//
// Returns a list of all the Provisions in the specified compartment.
// The query parameter `compartmentId` is required unless the query parameter `id` or `fleetId` is specified.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-oci/sdk/v3/go/oci/fleetappsmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fleetappsmanagement.GetProvisions(ctx, &fleetappsmanagement.GetProvisionsArgs{
//				CompartmentId: pulumi.StringRef(compartmentId),
//				DisplayName:   pulumi.StringRef(provisionDisplayName),
//				FleetId:       pulumi.StringRef(testFleet.Id),
//				Id:            pulumi.StringRef(provisionId),
//				State:         pulumi.StringRef(provisionState),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetProvisions(ctx *pulumi.Context, args *GetProvisionsArgs, opts ...pulumi.InvokeOption) (*GetProvisionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProvisionsResult
	err := ctx.Invoke("oci:FleetAppsManagement/getProvisions:getProvisions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProvisions.
type GetProvisionsArgs struct {
	// (Updatable) The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
	CompartmentId *string `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName *string               `pulumi:"displayName"`
	Filters     []GetProvisionsFilter `pulumi:"filters"`
	// unique Fleet identifier
	FleetId *string `pulumi:"fleetId"`
	// Unique identifier or OCID for listing a single provision by id. Either compartmentId or id must be provided.
	Id *string `pulumi:"id"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State *string `pulumi:"state"`
}

// A collection of values returned by getProvisions.
type GetProvisionsResult struct {
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which instance is deployed.
	CompartmentId *string `pulumi:"compartmentId"`
	// A user-friendly name. Does not have to be unique, and it's changeable.
	DisplayName *string               `pulumi:"displayName"`
	Filters     []GetProvisionsFilter `pulumi:"filters"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
	FleetId *string `pulumi:"fleetId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the FamProvision.
	Id *string `pulumi:"id"`
	// The list of provision_collection.
	ProvisionCollections []GetProvisionsProvisionCollection `pulumi:"provisionCollections"`
	// The current state of the FamProvision.
	State *string `pulumi:"state"`
}

func GetProvisionsOutput(ctx *pulumi.Context, args GetProvisionsOutputArgs, opts ...pulumi.InvokeOption) GetProvisionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetProvisionsResultOutput, error) {
			args := v.(GetProvisionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("oci:FleetAppsManagement/getProvisions:getProvisions", args, GetProvisionsResultOutput{}, options).(GetProvisionsResultOutput), nil
		}).(GetProvisionsResultOutput)
}

// A collection of arguments for invoking getProvisions.
type GetProvisionsOutputArgs struct {
	// (Updatable) The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
	CompartmentId pulumi.StringPtrInput `pulumi:"compartmentId"`
	// A filter to return only resources that match the entire display name given.
	DisplayName pulumi.StringPtrInput         `pulumi:"displayName"`
	Filters     GetProvisionsFilterArrayInput `pulumi:"filters"`
	// unique Fleet identifier
	FleetId pulumi.StringPtrInput `pulumi:"fleetId"`
	// Unique identifier or OCID for listing a single provision by id. Either compartmentId or id must be provided.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (GetProvisionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProvisionsArgs)(nil)).Elem()
}

// A collection of values returned by getProvisions.
type GetProvisionsResultOutput struct{ *pulumi.OutputState }

func (GetProvisionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProvisionsResult)(nil)).Elem()
}

func (o GetProvisionsResultOutput) ToGetProvisionsResultOutput() GetProvisionsResultOutput {
	return o
}

func (o GetProvisionsResultOutput) ToGetProvisionsResultOutputWithContext(ctx context.Context) GetProvisionsResultOutput {
	return o
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which instance is deployed.
func (o GetProvisionsResultOutput) CompartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProvisionsResult) *string { return v.CompartmentId }).(pulumi.StringPtrOutput)
}

// A user-friendly name. Does not have to be unique, and it's changeable.
func (o GetProvisionsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProvisionsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GetProvisionsResultOutput) Filters() GetProvisionsFilterArrayOutput {
	return o.ApplyT(func(v GetProvisionsResult) []GetProvisionsFilter { return v.Filters }).(GetProvisionsFilterArrayOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
func (o GetProvisionsResultOutput) FleetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProvisionsResult) *string { return v.FleetId }).(pulumi.StringPtrOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the FamProvision.
func (o GetProvisionsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProvisionsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The list of provision_collection.
func (o GetProvisionsResultOutput) ProvisionCollections() GetProvisionsProvisionCollectionArrayOutput {
	return o.ApplyT(func(v GetProvisionsResult) []GetProvisionsProvisionCollection { return v.ProvisionCollections }).(GetProvisionsProvisionCollectionArrayOutput)
}

// The current state of the FamProvision.
func (o GetProvisionsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProvisionsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProvisionsResultOutput{})
}
